// Copyright 2023 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

/*eslint-disable block-scoped-var, id-length, no-control-regex, no-magic-numbers, no-prototype-builtins, no-redeclare, no-shadow, no-var, sort-vars*/
(function(global, factory) { /* global define, require, module */

    /* AMD */ if (typeof define === 'function' && define.amd)
        define(["protobufjs/minimal"], factory);

    /* CommonJS */ else if (typeof require === 'function' && typeof module === 'object' && module && module.exports)
        module.exports = factory(require("google-gax/build/src/protobuf").protobufMinimal);

})(this, function($protobuf) {
    "use strict";

    // Common aliases
    var $Reader = $protobuf.Reader, $Writer = $protobuf.Writer, $util = $protobuf.util;
    
    // Exported root namespace
    var $root = $protobuf.roots._googlemaps_routing_protos || ($protobuf.roots._googlemaps_routing_protos = {});
    
    $root.google = (function() {
    
        /**
         * Namespace google.
         * @exports google
         * @namespace
         */
        var google = {};
    
        google.protobuf = (function() {
    
            /**
             * Namespace protobuf.
             * @memberof google
             * @namespace
             */
            var protobuf = {};
    
            protobuf.Any = (function() {
    
                /**
                 * Properties of an Any.
                 * @memberof google.protobuf
                 * @interface IAny
                 * @property {string|null} [type_url] Any type_url
                 * @property {Uint8Array|null} [value] Any value
                 */
    
                /**
                 * Constructs a new Any.
                 * @memberof google.protobuf
                 * @classdesc Represents an Any.
                 * @implements IAny
                 * @constructor
                 * @param {google.protobuf.IAny=} [properties] Properties to set
                 */
                function Any(properties) {
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * Any type_url.
                 * @member {string} type_url
                 * @memberof google.protobuf.Any
                 * @instance
                 */
                Any.prototype.type_url = "";
    
                /**
                 * Any value.
                 * @member {Uint8Array} value
                 * @memberof google.protobuf.Any
                 * @instance
                 */
                Any.prototype.value = $util.newBuffer([]);
    
                /**
                 * Creates a new Any instance using the specified properties.
                 * @function create
                 * @memberof google.protobuf.Any
                 * @static
                 * @param {google.protobuf.IAny=} [properties] Properties to set
                 * @returns {google.protobuf.Any} Any instance
                 */
                Any.create = function create(properties) {
                    return new Any(properties);
                };
    
                /**
                 * Encodes the specified Any message. Does not implicitly {@link google.protobuf.Any.verify|verify} messages.
                 * @function encode
                 * @memberof google.protobuf.Any
                 * @static
                 * @param {google.protobuf.IAny} message Any message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                Any.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.type_url != null && Object.hasOwnProperty.call(message, "type_url"))
                        writer.uint32(/* id 1, wireType 2 =*/10).string(message.type_url);
                    if (message.value != null && Object.hasOwnProperty.call(message, "value"))
                        writer.uint32(/* id 2, wireType 2 =*/18).bytes(message.value);
                    return writer;
                };
    
                /**
                 * Encodes the specified Any message, length delimited. Does not implicitly {@link google.protobuf.Any.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.protobuf.Any
                 * @static
                 * @param {google.protobuf.IAny} message Any message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                Any.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes an Any message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.protobuf.Any
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.protobuf.Any} Any
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                Any.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.Any();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1: {
                                message.type_url = reader.string();
                                break;
                            }
                        case 2: {
                                message.value = reader.bytes();
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes an Any message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.protobuf.Any
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.protobuf.Any} Any
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                Any.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies an Any message.
                 * @function verify
                 * @memberof google.protobuf.Any
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                Any.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.type_url != null && message.hasOwnProperty("type_url"))
                        if (!$util.isString(message.type_url))
                            return "type_url: string expected";
                    if (message.value != null && message.hasOwnProperty("value"))
                        if (!(message.value && typeof message.value.length === "number" || $util.isString(message.value)))
                            return "value: buffer expected";
                    return null;
                };
    
                /**
                 * Creates an Any message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.protobuf.Any
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.protobuf.Any} Any
                 */
                Any.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.protobuf.Any)
                        return object;
                    var message = new $root.google.protobuf.Any();
                    if (object.type_url != null)
                        message.type_url = String(object.type_url);
                    if (object.value != null)
                        if (typeof object.value === "string")
                            $util.base64.decode(object.value, message.value = $util.newBuffer($util.base64.length(object.value)), 0);
                        else if (object.value.length >= 0)
                            message.value = object.value;
                    return message;
                };
    
                /**
                 * Creates a plain object from an Any message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.protobuf.Any
                 * @static
                 * @param {google.protobuf.Any} message Any
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                Any.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.defaults) {
                        object.type_url = "";
                        if (options.bytes === String)
                            object.value = "";
                        else {
                            object.value = [];
                            if (options.bytes !== Array)
                                object.value = $util.newBuffer(object.value);
                        }
                    }
                    if (message.type_url != null && message.hasOwnProperty("type_url"))
                        object.type_url = message.type_url;
                    if (message.value != null && message.hasOwnProperty("value"))
                        object.value = options.bytes === String ? $util.base64.encode(message.value, 0, message.value.length) : options.bytes === Array ? Array.prototype.slice.call(message.value) : message.value;
                    return object;
                };
    
                /**
                 * Converts this Any to JSON.
                 * @function toJSON
                 * @memberof google.protobuf.Any
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                Any.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for Any
                 * @function getTypeUrl
                 * @memberof google.protobuf.Any
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                Any.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.protobuf.Any";
                };
    
                return Any;
            })();
    
            protobuf.DoubleValue = (function() {
    
                /**
                 * Properties of a DoubleValue.
                 * @memberof google.protobuf
                 * @interface IDoubleValue
                 * @property {number|null} [value] DoubleValue value
                 */
    
                /**
                 * Constructs a new DoubleValue.
                 * @memberof google.protobuf
                 * @classdesc Represents a DoubleValue.
                 * @implements IDoubleValue
                 * @constructor
                 * @param {google.protobuf.IDoubleValue=} [properties] Properties to set
                 */
                function DoubleValue(properties) {
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * DoubleValue value.
                 * @member {number} value
                 * @memberof google.protobuf.DoubleValue
                 * @instance
                 */
                DoubleValue.prototype.value = 0;
    
                /**
                 * Creates a new DoubleValue instance using the specified properties.
                 * @function create
                 * @memberof google.protobuf.DoubleValue
                 * @static
                 * @param {google.protobuf.IDoubleValue=} [properties] Properties to set
                 * @returns {google.protobuf.DoubleValue} DoubleValue instance
                 */
                DoubleValue.create = function create(properties) {
                    return new DoubleValue(properties);
                };
    
                /**
                 * Encodes the specified DoubleValue message. Does not implicitly {@link google.protobuf.DoubleValue.verify|verify} messages.
                 * @function encode
                 * @memberof google.protobuf.DoubleValue
                 * @static
                 * @param {google.protobuf.IDoubleValue} message DoubleValue message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                DoubleValue.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.value != null && Object.hasOwnProperty.call(message, "value"))
                        writer.uint32(/* id 1, wireType 1 =*/9).double(message.value);
                    return writer;
                };
    
                /**
                 * Encodes the specified DoubleValue message, length delimited. Does not implicitly {@link google.protobuf.DoubleValue.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.protobuf.DoubleValue
                 * @static
                 * @param {google.protobuf.IDoubleValue} message DoubleValue message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                DoubleValue.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a DoubleValue message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.protobuf.DoubleValue
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.protobuf.DoubleValue} DoubleValue
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                DoubleValue.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.DoubleValue();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1: {
                                message.value = reader.double();
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a DoubleValue message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.protobuf.DoubleValue
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.protobuf.DoubleValue} DoubleValue
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                DoubleValue.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a DoubleValue message.
                 * @function verify
                 * @memberof google.protobuf.DoubleValue
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                DoubleValue.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.value != null && message.hasOwnProperty("value"))
                        if (typeof message.value !== "number")
                            return "value: number expected";
                    return null;
                };
    
                /**
                 * Creates a DoubleValue message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.protobuf.DoubleValue
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.protobuf.DoubleValue} DoubleValue
                 */
                DoubleValue.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.protobuf.DoubleValue)
                        return object;
                    var message = new $root.google.protobuf.DoubleValue();
                    if (object.value != null)
                        message.value = Number(object.value);
                    return message;
                };
    
                /**
                 * Creates a plain object from a DoubleValue message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.protobuf.DoubleValue
                 * @static
                 * @param {google.protobuf.DoubleValue} message DoubleValue
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                DoubleValue.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.defaults)
                        object.value = 0;
                    if (message.value != null && message.hasOwnProperty("value"))
                        object.value = options.json && !isFinite(message.value) ? String(message.value) : message.value;
                    return object;
                };
    
                /**
                 * Converts this DoubleValue to JSON.
                 * @function toJSON
                 * @memberof google.protobuf.DoubleValue
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                DoubleValue.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for DoubleValue
                 * @function getTypeUrl
                 * @memberof google.protobuf.DoubleValue
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                DoubleValue.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.protobuf.DoubleValue";
                };
    
                return DoubleValue;
            })();
    
            protobuf.FloatValue = (function() {
    
                /**
                 * Properties of a FloatValue.
                 * @memberof google.protobuf
                 * @interface IFloatValue
                 * @property {number|null} [value] FloatValue value
                 */
    
                /**
                 * Constructs a new FloatValue.
                 * @memberof google.protobuf
                 * @classdesc Represents a FloatValue.
                 * @implements IFloatValue
                 * @constructor
                 * @param {google.protobuf.IFloatValue=} [properties] Properties to set
                 */
                function FloatValue(properties) {
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * FloatValue value.
                 * @member {number} value
                 * @memberof google.protobuf.FloatValue
                 * @instance
                 */
                FloatValue.prototype.value = 0;
    
                /**
                 * Creates a new FloatValue instance using the specified properties.
                 * @function create
                 * @memberof google.protobuf.FloatValue
                 * @static
                 * @param {google.protobuf.IFloatValue=} [properties] Properties to set
                 * @returns {google.protobuf.FloatValue} FloatValue instance
                 */
                FloatValue.create = function create(properties) {
                    return new FloatValue(properties);
                };
    
                /**
                 * Encodes the specified FloatValue message. Does not implicitly {@link google.protobuf.FloatValue.verify|verify} messages.
                 * @function encode
                 * @memberof google.protobuf.FloatValue
                 * @static
                 * @param {google.protobuf.IFloatValue} message FloatValue message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                FloatValue.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.value != null && Object.hasOwnProperty.call(message, "value"))
                        writer.uint32(/* id 1, wireType 5 =*/13).float(message.value);
                    return writer;
                };
    
                /**
                 * Encodes the specified FloatValue message, length delimited. Does not implicitly {@link google.protobuf.FloatValue.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.protobuf.FloatValue
                 * @static
                 * @param {google.protobuf.IFloatValue} message FloatValue message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                FloatValue.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a FloatValue message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.protobuf.FloatValue
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.protobuf.FloatValue} FloatValue
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                FloatValue.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.FloatValue();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1: {
                                message.value = reader.float();
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a FloatValue message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.protobuf.FloatValue
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.protobuf.FloatValue} FloatValue
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                FloatValue.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a FloatValue message.
                 * @function verify
                 * @memberof google.protobuf.FloatValue
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                FloatValue.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.value != null && message.hasOwnProperty("value"))
                        if (typeof message.value !== "number")
                            return "value: number expected";
                    return null;
                };
    
                /**
                 * Creates a FloatValue message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.protobuf.FloatValue
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.protobuf.FloatValue} FloatValue
                 */
                FloatValue.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.protobuf.FloatValue)
                        return object;
                    var message = new $root.google.protobuf.FloatValue();
                    if (object.value != null)
                        message.value = Number(object.value);
                    return message;
                };
    
                /**
                 * Creates a plain object from a FloatValue message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.protobuf.FloatValue
                 * @static
                 * @param {google.protobuf.FloatValue} message FloatValue
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                FloatValue.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.defaults)
                        object.value = 0;
                    if (message.value != null && message.hasOwnProperty("value"))
                        object.value = options.json && !isFinite(message.value) ? String(message.value) : message.value;
                    return object;
                };
    
                /**
                 * Converts this FloatValue to JSON.
                 * @function toJSON
                 * @memberof google.protobuf.FloatValue
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                FloatValue.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for FloatValue
                 * @function getTypeUrl
                 * @memberof google.protobuf.FloatValue
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                FloatValue.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.protobuf.FloatValue";
                };
    
                return FloatValue;
            })();
    
            protobuf.Int64Value = (function() {
    
                /**
                 * Properties of an Int64Value.
                 * @memberof google.protobuf
                 * @interface IInt64Value
                 * @property {number|Long|null} [value] Int64Value value
                 */
    
                /**
                 * Constructs a new Int64Value.
                 * @memberof google.protobuf
                 * @classdesc Represents an Int64Value.
                 * @implements IInt64Value
                 * @constructor
                 * @param {google.protobuf.IInt64Value=} [properties] Properties to set
                 */
                function Int64Value(properties) {
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * Int64Value value.
                 * @member {number|Long} value
                 * @memberof google.protobuf.Int64Value
                 * @instance
                 */
                Int64Value.prototype.value = $util.Long ? $util.Long.fromBits(0,0,false) : 0;
    
                /**
                 * Creates a new Int64Value instance using the specified properties.
                 * @function create
                 * @memberof google.protobuf.Int64Value
                 * @static
                 * @param {google.protobuf.IInt64Value=} [properties] Properties to set
                 * @returns {google.protobuf.Int64Value} Int64Value instance
                 */
                Int64Value.create = function create(properties) {
                    return new Int64Value(properties);
                };
    
                /**
                 * Encodes the specified Int64Value message. Does not implicitly {@link google.protobuf.Int64Value.verify|verify} messages.
                 * @function encode
                 * @memberof google.protobuf.Int64Value
                 * @static
                 * @param {google.protobuf.IInt64Value} message Int64Value message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                Int64Value.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.value != null && Object.hasOwnProperty.call(message, "value"))
                        writer.uint32(/* id 1, wireType 0 =*/8).int64(message.value);
                    return writer;
                };
    
                /**
                 * Encodes the specified Int64Value message, length delimited. Does not implicitly {@link google.protobuf.Int64Value.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.protobuf.Int64Value
                 * @static
                 * @param {google.protobuf.IInt64Value} message Int64Value message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                Int64Value.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes an Int64Value message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.protobuf.Int64Value
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.protobuf.Int64Value} Int64Value
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                Int64Value.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.Int64Value();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1: {
                                message.value = reader.int64();
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes an Int64Value message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.protobuf.Int64Value
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.protobuf.Int64Value} Int64Value
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                Int64Value.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies an Int64Value message.
                 * @function verify
                 * @memberof google.protobuf.Int64Value
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                Int64Value.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.value != null && message.hasOwnProperty("value"))
                        if (!$util.isInteger(message.value) && !(message.value && $util.isInteger(message.value.low) && $util.isInteger(message.value.high)))
                            return "value: integer|Long expected";
                    return null;
                };
    
                /**
                 * Creates an Int64Value message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.protobuf.Int64Value
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.protobuf.Int64Value} Int64Value
                 */
                Int64Value.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.protobuf.Int64Value)
                        return object;
                    var message = new $root.google.protobuf.Int64Value();
                    if (object.value != null)
                        if ($util.Long)
                            (message.value = $util.Long.fromValue(object.value)).unsigned = false;
                        else if (typeof object.value === "string")
                            message.value = parseInt(object.value, 10);
                        else if (typeof object.value === "number")
                            message.value = object.value;
                        else if (typeof object.value === "object")
                            message.value = new $util.LongBits(object.value.low >>> 0, object.value.high >>> 0).toNumber();
                    return message;
                };
    
                /**
                 * Creates a plain object from an Int64Value message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.protobuf.Int64Value
                 * @static
                 * @param {google.protobuf.Int64Value} message Int64Value
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                Int64Value.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.defaults)
                        if ($util.Long) {
                            var long = new $util.Long(0, 0, false);
                            object.value = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                        } else
                            object.value = options.longs === String ? "0" : 0;
                    if (message.value != null && message.hasOwnProperty("value"))
                        if (typeof message.value === "number")
                            object.value = options.longs === String ? String(message.value) : message.value;
                        else
                            object.value = options.longs === String ? $util.Long.prototype.toString.call(message.value) : options.longs === Number ? new $util.LongBits(message.value.low >>> 0, message.value.high >>> 0).toNumber() : message.value;
                    return object;
                };
    
                /**
                 * Converts this Int64Value to JSON.
                 * @function toJSON
                 * @memberof google.protobuf.Int64Value
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                Int64Value.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for Int64Value
                 * @function getTypeUrl
                 * @memberof google.protobuf.Int64Value
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                Int64Value.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.protobuf.Int64Value";
                };
    
                return Int64Value;
            })();
    
            protobuf.UInt64Value = (function() {
    
                /**
                 * Properties of a UInt64Value.
                 * @memberof google.protobuf
                 * @interface IUInt64Value
                 * @property {number|Long|null} [value] UInt64Value value
                 */
    
                /**
                 * Constructs a new UInt64Value.
                 * @memberof google.protobuf
                 * @classdesc Represents a UInt64Value.
                 * @implements IUInt64Value
                 * @constructor
                 * @param {google.protobuf.IUInt64Value=} [properties] Properties to set
                 */
                function UInt64Value(properties) {
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * UInt64Value value.
                 * @member {number|Long} value
                 * @memberof google.protobuf.UInt64Value
                 * @instance
                 */
                UInt64Value.prototype.value = $util.Long ? $util.Long.fromBits(0,0,true) : 0;
    
                /**
                 * Creates a new UInt64Value instance using the specified properties.
                 * @function create
                 * @memberof google.protobuf.UInt64Value
                 * @static
                 * @param {google.protobuf.IUInt64Value=} [properties] Properties to set
                 * @returns {google.protobuf.UInt64Value} UInt64Value instance
                 */
                UInt64Value.create = function create(properties) {
                    return new UInt64Value(properties);
                };
    
                /**
                 * Encodes the specified UInt64Value message. Does not implicitly {@link google.protobuf.UInt64Value.verify|verify} messages.
                 * @function encode
                 * @memberof google.protobuf.UInt64Value
                 * @static
                 * @param {google.protobuf.IUInt64Value} message UInt64Value message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                UInt64Value.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.value != null && Object.hasOwnProperty.call(message, "value"))
                        writer.uint32(/* id 1, wireType 0 =*/8).uint64(message.value);
                    return writer;
                };
    
                /**
                 * Encodes the specified UInt64Value message, length delimited. Does not implicitly {@link google.protobuf.UInt64Value.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.protobuf.UInt64Value
                 * @static
                 * @param {google.protobuf.IUInt64Value} message UInt64Value message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                UInt64Value.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a UInt64Value message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.protobuf.UInt64Value
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.protobuf.UInt64Value} UInt64Value
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                UInt64Value.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.UInt64Value();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1: {
                                message.value = reader.uint64();
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a UInt64Value message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.protobuf.UInt64Value
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.protobuf.UInt64Value} UInt64Value
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                UInt64Value.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a UInt64Value message.
                 * @function verify
                 * @memberof google.protobuf.UInt64Value
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                UInt64Value.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.value != null && message.hasOwnProperty("value"))
                        if (!$util.isInteger(message.value) && !(message.value && $util.isInteger(message.value.low) && $util.isInteger(message.value.high)))
                            return "value: integer|Long expected";
                    return null;
                };
    
                /**
                 * Creates a UInt64Value message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.protobuf.UInt64Value
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.protobuf.UInt64Value} UInt64Value
                 */
                UInt64Value.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.protobuf.UInt64Value)
                        return object;
                    var message = new $root.google.protobuf.UInt64Value();
                    if (object.value != null)
                        if ($util.Long)
                            (message.value = $util.Long.fromValue(object.value)).unsigned = true;
                        else if (typeof object.value === "string")
                            message.value = parseInt(object.value, 10);
                        else if (typeof object.value === "number")
                            message.value = object.value;
                        else if (typeof object.value === "object")
                            message.value = new $util.LongBits(object.value.low >>> 0, object.value.high >>> 0).toNumber(true);
                    return message;
                };
    
                /**
                 * Creates a plain object from a UInt64Value message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.protobuf.UInt64Value
                 * @static
                 * @param {google.protobuf.UInt64Value} message UInt64Value
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                UInt64Value.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.defaults)
                        if ($util.Long) {
                            var long = new $util.Long(0, 0, true);
                            object.value = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                        } else
                            object.value = options.longs === String ? "0" : 0;
                    if (message.value != null && message.hasOwnProperty("value"))
                        if (typeof message.value === "number")
                            object.value = options.longs === String ? String(message.value) : message.value;
                        else
                            object.value = options.longs === String ? $util.Long.prototype.toString.call(message.value) : options.longs === Number ? new $util.LongBits(message.value.low >>> 0, message.value.high >>> 0).toNumber(true) : message.value;
                    return object;
                };
    
                /**
                 * Converts this UInt64Value to JSON.
                 * @function toJSON
                 * @memberof google.protobuf.UInt64Value
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                UInt64Value.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for UInt64Value
                 * @function getTypeUrl
                 * @memberof google.protobuf.UInt64Value
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                UInt64Value.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.protobuf.UInt64Value";
                };
    
                return UInt64Value;
            })();
    
            protobuf.Int32Value = (function() {
    
                /**
                 * Properties of an Int32Value.
                 * @memberof google.protobuf
                 * @interface IInt32Value
                 * @property {number|null} [value] Int32Value value
                 */
    
                /**
                 * Constructs a new Int32Value.
                 * @memberof google.protobuf
                 * @classdesc Represents an Int32Value.
                 * @implements IInt32Value
                 * @constructor
                 * @param {google.protobuf.IInt32Value=} [properties] Properties to set
                 */
                function Int32Value(properties) {
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * Int32Value value.
                 * @member {number} value
                 * @memberof google.protobuf.Int32Value
                 * @instance
                 */
                Int32Value.prototype.value = 0;
    
                /**
                 * Creates a new Int32Value instance using the specified properties.
                 * @function create
                 * @memberof google.protobuf.Int32Value
                 * @static
                 * @param {google.protobuf.IInt32Value=} [properties] Properties to set
                 * @returns {google.protobuf.Int32Value} Int32Value instance
                 */
                Int32Value.create = function create(properties) {
                    return new Int32Value(properties);
                };
    
                /**
                 * Encodes the specified Int32Value message. Does not implicitly {@link google.protobuf.Int32Value.verify|verify} messages.
                 * @function encode
                 * @memberof google.protobuf.Int32Value
                 * @static
                 * @param {google.protobuf.IInt32Value} message Int32Value message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                Int32Value.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.value != null && Object.hasOwnProperty.call(message, "value"))
                        writer.uint32(/* id 1, wireType 0 =*/8).int32(message.value);
                    return writer;
                };
    
                /**
                 * Encodes the specified Int32Value message, length delimited. Does not implicitly {@link google.protobuf.Int32Value.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.protobuf.Int32Value
                 * @static
                 * @param {google.protobuf.IInt32Value} message Int32Value message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                Int32Value.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes an Int32Value message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.protobuf.Int32Value
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.protobuf.Int32Value} Int32Value
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                Int32Value.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.Int32Value();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1: {
                                message.value = reader.int32();
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes an Int32Value message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.protobuf.Int32Value
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.protobuf.Int32Value} Int32Value
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                Int32Value.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies an Int32Value message.
                 * @function verify
                 * @memberof google.protobuf.Int32Value
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                Int32Value.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.value != null && message.hasOwnProperty("value"))
                        if (!$util.isInteger(message.value))
                            return "value: integer expected";
                    return null;
                };
    
                /**
                 * Creates an Int32Value message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.protobuf.Int32Value
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.protobuf.Int32Value} Int32Value
                 */
                Int32Value.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.protobuf.Int32Value)
                        return object;
                    var message = new $root.google.protobuf.Int32Value();
                    if (object.value != null)
                        message.value = object.value | 0;
                    return message;
                };
    
                /**
                 * Creates a plain object from an Int32Value message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.protobuf.Int32Value
                 * @static
                 * @param {google.protobuf.Int32Value} message Int32Value
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                Int32Value.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.defaults)
                        object.value = 0;
                    if (message.value != null && message.hasOwnProperty("value"))
                        object.value = message.value;
                    return object;
                };
    
                /**
                 * Converts this Int32Value to JSON.
                 * @function toJSON
                 * @memberof google.protobuf.Int32Value
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                Int32Value.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for Int32Value
                 * @function getTypeUrl
                 * @memberof google.protobuf.Int32Value
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                Int32Value.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.protobuf.Int32Value";
                };
    
                return Int32Value;
            })();
    
            protobuf.UInt32Value = (function() {
    
                /**
                 * Properties of a UInt32Value.
                 * @memberof google.protobuf
                 * @interface IUInt32Value
                 * @property {number|null} [value] UInt32Value value
                 */
    
                /**
                 * Constructs a new UInt32Value.
                 * @memberof google.protobuf
                 * @classdesc Represents a UInt32Value.
                 * @implements IUInt32Value
                 * @constructor
                 * @param {google.protobuf.IUInt32Value=} [properties] Properties to set
                 */
                function UInt32Value(properties) {
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * UInt32Value value.
                 * @member {number} value
                 * @memberof google.protobuf.UInt32Value
                 * @instance
                 */
                UInt32Value.prototype.value = 0;
    
                /**
                 * Creates a new UInt32Value instance using the specified properties.
                 * @function create
                 * @memberof google.protobuf.UInt32Value
                 * @static
                 * @param {google.protobuf.IUInt32Value=} [properties] Properties to set
                 * @returns {google.protobuf.UInt32Value} UInt32Value instance
                 */
                UInt32Value.create = function create(properties) {
                    return new UInt32Value(properties);
                };
    
                /**
                 * Encodes the specified UInt32Value message. Does not implicitly {@link google.protobuf.UInt32Value.verify|verify} messages.
                 * @function encode
                 * @memberof google.protobuf.UInt32Value
                 * @static
                 * @param {google.protobuf.IUInt32Value} message UInt32Value message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                UInt32Value.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.value != null && Object.hasOwnProperty.call(message, "value"))
                        writer.uint32(/* id 1, wireType 0 =*/8).uint32(message.value);
                    return writer;
                };
    
                /**
                 * Encodes the specified UInt32Value message, length delimited. Does not implicitly {@link google.protobuf.UInt32Value.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.protobuf.UInt32Value
                 * @static
                 * @param {google.protobuf.IUInt32Value} message UInt32Value message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                UInt32Value.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a UInt32Value message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.protobuf.UInt32Value
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.protobuf.UInt32Value} UInt32Value
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                UInt32Value.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.UInt32Value();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1: {
                                message.value = reader.uint32();
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a UInt32Value message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.protobuf.UInt32Value
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.protobuf.UInt32Value} UInt32Value
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                UInt32Value.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a UInt32Value message.
                 * @function verify
                 * @memberof google.protobuf.UInt32Value
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                UInt32Value.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.value != null && message.hasOwnProperty("value"))
                        if (!$util.isInteger(message.value))
                            return "value: integer expected";
                    return null;
                };
    
                /**
                 * Creates a UInt32Value message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.protobuf.UInt32Value
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.protobuf.UInt32Value} UInt32Value
                 */
                UInt32Value.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.protobuf.UInt32Value)
                        return object;
                    var message = new $root.google.protobuf.UInt32Value();
                    if (object.value != null)
                        message.value = object.value >>> 0;
                    return message;
                };
    
                /**
                 * Creates a plain object from a UInt32Value message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.protobuf.UInt32Value
                 * @static
                 * @param {google.protobuf.UInt32Value} message UInt32Value
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                UInt32Value.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.defaults)
                        object.value = 0;
                    if (message.value != null && message.hasOwnProperty("value"))
                        object.value = message.value;
                    return object;
                };
    
                /**
                 * Converts this UInt32Value to JSON.
                 * @function toJSON
                 * @memberof google.protobuf.UInt32Value
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                UInt32Value.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for UInt32Value
                 * @function getTypeUrl
                 * @memberof google.protobuf.UInt32Value
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                UInt32Value.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.protobuf.UInt32Value";
                };
    
                return UInt32Value;
            })();
    
            protobuf.BoolValue = (function() {
    
                /**
                 * Properties of a BoolValue.
                 * @memberof google.protobuf
                 * @interface IBoolValue
                 * @property {boolean|null} [value] BoolValue value
                 */
    
                /**
                 * Constructs a new BoolValue.
                 * @memberof google.protobuf
                 * @classdesc Represents a BoolValue.
                 * @implements IBoolValue
                 * @constructor
                 * @param {google.protobuf.IBoolValue=} [properties] Properties to set
                 */
                function BoolValue(properties) {
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * BoolValue value.
                 * @member {boolean} value
                 * @memberof google.protobuf.BoolValue
                 * @instance
                 */
                BoolValue.prototype.value = false;
    
                /**
                 * Creates a new BoolValue instance using the specified properties.
                 * @function create
                 * @memberof google.protobuf.BoolValue
                 * @static
                 * @param {google.protobuf.IBoolValue=} [properties] Properties to set
                 * @returns {google.protobuf.BoolValue} BoolValue instance
                 */
                BoolValue.create = function create(properties) {
                    return new BoolValue(properties);
                };
    
                /**
                 * Encodes the specified BoolValue message. Does not implicitly {@link google.protobuf.BoolValue.verify|verify} messages.
                 * @function encode
                 * @memberof google.protobuf.BoolValue
                 * @static
                 * @param {google.protobuf.IBoolValue} message BoolValue message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                BoolValue.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.value != null && Object.hasOwnProperty.call(message, "value"))
                        writer.uint32(/* id 1, wireType 0 =*/8).bool(message.value);
                    return writer;
                };
    
                /**
                 * Encodes the specified BoolValue message, length delimited. Does not implicitly {@link google.protobuf.BoolValue.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.protobuf.BoolValue
                 * @static
                 * @param {google.protobuf.IBoolValue} message BoolValue message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                BoolValue.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a BoolValue message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.protobuf.BoolValue
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.protobuf.BoolValue} BoolValue
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                BoolValue.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.BoolValue();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1: {
                                message.value = reader.bool();
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a BoolValue message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.protobuf.BoolValue
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.protobuf.BoolValue} BoolValue
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                BoolValue.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a BoolValue message.
                 * @function verify
                 * @memberof google.protobuf.BoolValue
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                BoolValue.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.value != null && message.hasOwnProperty("value"))
                        if (typeof message.value !== "boolean")
                            return "value: boolean expected";
                    return null;
                };
    
                /**
                 * Creates a BoolValue message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.protobuf.BoolValue
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.protobuf.BoolValue} BoolValue
                 */
                BoolValue.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.protobuf.BoolValue)
                        return object;
                    var message = new $root.google.protobuf.BoolValue();
                    if (object.value != null)
                        message.value = Boolean(object.value);
                    return message;
                };
    
                /**
                 * Creates a plain object from a BoolValue message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.protobuf.BoolValue
                 * @static
                 * @param {google.protobuf.BoolValue} message BoolValue
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                BoolValue.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.defaults)
                        object.value = false;
                    if (message.value != null && message.hasOwnProperty("value"))
                        object.value = message.value;
                    return object;
                };
    
                /**
                 * Converts this BoolValue to JSON.
                 * @function toJSON
                 * @memberof google.protobuf.BoolValue
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                BoolValue.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for BoolValue
                 * @function getTypeUrl
                 * @memberof google.protobuf.BoolValue
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                BoolValue.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.protobuf.BoolValue";
                };
    
                return BoolValue;
            })();
    
            protobuf.StringValue = (function() {
    
                /**
                 * Properties of a StringValue.
                 * @memberof google.protobuf
                 * @interface IStringValue
                 * @property {string|null} [value] StringValue value
                 */
    
                /**
                 * Constructs a new StringValue.
                 * @memberof google.protobuf
                 * @classdesc Represents a StringValue.
                 * @implements IStringValue
                 * @constructor
                 * @param {google.protobuf.IStringValue=} [properties] Properties to set
                 */
                function StringValue(properties) {
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * StringValue value.
                 * @member {string} value
                 * @memberof google.protobuf.StringValue
                 * @instance
                 */
                StringValue.prototype.value = "";
    
                /**
                 * Creates a new StringValue instance using the specified properties.
                 * @function create
                 * @memberof google.protobuf.StringValue
                 * @static
                 * @param {google.protobuf.IStringValue=} [properties] Properties to set
                 * @returns {google.protobuf.StringValue} StringValue instance
                 */
                StringValue.create = function create(properties) {
                    return new StringValue(properties);
                };
    
                /**
                 * Encodes the specified StringValue message. Does not implicitly {@link google.protobuf.StringValue.verify|verify} messages.
                 * @function encode
                 * @memberof google.protobuf.StringValue
                 * @static
                 * @param {google.protobuf.IStringValue} message StringValue message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                StringValue.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.value != null && Object.hasOwnProperty.call(message, "value"))
                        writer.uint32(/* id 1, wireType 2 =*/10).string(message.value);
                    return writer;
                };
    
                /**
                 * Encodes the specified StringValue message, length delimited. Does not implicitly {@link google.protobuf.StringValue.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.protobuf.StringValue
                 * @static
                 * @param {google.protobuf.IStringValue} message StringValue message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                StringValue.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a StringValue message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.protobuf.StringValue
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.protobuf.StringValue} StringValue
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                StringValue.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.StringValue();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1: {
                                message.value = reader.string();
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a StringValue message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.protobuf.StringValue
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.protobuf.StringValue} StringValue
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                StringValue.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a StringValue message.
                 * @function verify
                 * @memberof google.protobuf.StringValue
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                StringValue.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.value != null && message.hasOwnProperty("value"))
                        if (!$util.isString(message.value))
                            return "value: string expected";
                    return null;
                };
    
                /**
                 * Creates a StringValue message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.protobuf.StringValue
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.protobuf.StringValue} StringValue
                 */
                StringValue.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.protobuf.StringValue)
                        return object;
                    var message = new $root.google.protobuf.StringValue();
                    if (object.value != null)
                        message.value = String(object.value);
                    return message;
                };
    
                /**
                 * Creates a plain object from a StringValue message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.protobuf.StringValue
                 * @static
                 * @param {google.protobuf.StringValue} message StringValue
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                StringValue.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.defaults)
                        object.value = "";
                    if (message.value != null && message.hasOwnProperty("value"))
                        object.value = message.value;
                    return object;
                };
    
                /**
                 * Converts this StringValue to JSON.
                 * @function toJSON
                 * @memberof google.protobuf.StringValue
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                StringValue.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for StringValue
                 * @function getTypeUrl
                 * @memberof google.protobuf.StringValue
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                StringValue.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.protobuf.StringValue";
                };
    
                return StringValue;
            })();
    
            protobuf.BytesValue = (function() {
    
                /**
                 * Properties of a BytesValue.
                 * @memberof google.protobuf
                 * @interface IBytesValue
                 * @property {Uint8Array|null} [value] BytesValue value
                 */
    
                /**
                 * Constructs a new BytesValue.
                 * @memberof google.protobuf
                 * @classdesc Represents a BytesValue.
                 * @implements IBytesValue
                 * @constructor
                 * @param {google.protobuf.IBytesValue=} [properties] Properties to set
                 */
                function BytesValue(properties) {
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * BytesValue value.
                 * @member {Uint8Array} value
                 * @memberof google.protobuf.BytesValue
                 * @instance
                 */
                BytesValue.prototype.value = $util.newBuffer([]);
    
                /**
                 * Creates a new BytesValue instance using the specified properties.
                 * @function create
                 * @memberof google.protobuf.BytesValue
                 * @static
                 * @param {google.protobuf.IBytesValue=} [properties] Properties to set
                 * @returns {google.protobuf.BytesValue} BytesValue instance
                 */
                BytesValue.create = function create(properties) {
                    return new BytesValue(properties);
                };
    
                /**
                 * Encodes the specified BytesValue message. Does not implicitly {@link google.protobuf.BytesValue.verify|verify} messages.
                 * @function encode
                 * @memberof google.protobuf.BytesValue
                 * @static
                 * @param {google.protobuf.IBytesValue} message BytesValue message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                BytesValue.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.value != null && Object.hasOwnProperty.call(message, "value"))
                        writer.uint32(/* id 1, wireType 2 =*/10).bytes(message.value);
                    return writer;
                };
    
                /**
                 * Encodes the specified BytesValue message, length delimited. Does not implicitly {@link google.protobuf.BytesValue.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.protobuf.BytesValue
                 * @static
                 * @param {google.protobuf.IBytesValue} message BytesValue message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                BytesValue.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a BytesValue message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.protobuf.BytesValue
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.protobuf.BytesValue} BytesValue
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                BytesValue.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.BytesValue();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1: {
                                message.value = reader.bytes();
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a BytesValue message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.protobuf.BytesValue
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.protobuf.BytesValue} BytesValue
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                BytesValue.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a BytesValue message.
                 * @function verify
                 * @memberof google.protobuf.BytesValue
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                BytesValue.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.value != null && message.hasOwnProperty("value"))
                        if (!(message.value && typeof message.value.length === "number" || $util.isString(message.value)))
                            return "value: buffer expected";
                    return null;
                };
    
                /**
                 * Creates a BytesValue message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.protobuf.BytesValue
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.protobuf.BytesValue} BytesValue
                 */
                BytesValue.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.protobuf.BytesValue)
                        return object;
                    var message = new $root.google.protobuf.BytesValue();
                    if (object.value != null)
                        if (typeof object.value === "string")
                            $util.base64.decode(object.value, message.value = $util.newBuffer($util.base64.length(object.value)), 0);
                        else if (object.value.length >= 0)
                            message.value = object.value;
                    return message;
                };
    
                /**
                 * Creates a plain object from a BytesValue message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.protobuf.BytesValue
                 * @static
                 * @param {google.protobuf.BytesValue} message BytesValue
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                BytesValue.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.defaults)
                        if (options.bytes === String)
                            object.value = "";
                        else {
                            object.value = [];
                            if (options.bytes !== Array)
                                object.value = $util.newBuffer(object.value);
                        }
                    if (message.value != null && message.hasOwnProperty("value"))
                        object.value = options.bytes === String ? $util.base64.encode(message.value, 0, message.value.length) : options.bytes === Array ? Array.prototype.slice.call(message.value) : message.value;
                    return object;
                };
    
                /**
                 * Converts this BytesValue to JSON.
                 * @function toJSON
                 * @memberof google.protobuf.BytesValue
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                BytesValue.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for BytesValue
                 * @function getTypeUrl
                 * @memberof google.protobuf.BytesValue
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                BytesValue.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.protobuf.BytesValue";
                };
    
                return BytesValue;
            })();
    
            protobuf.Struct = (function() {
    
                /**
                 * Properties of a Struct.
                 * @memberof google.protobuf
                 * @interface IStruct
                 * @property {Object.<string,google.protobuf.IValue>|null} [fields] Struct fields
                 */
    
                /**
                 * Constructs a new Struct.
                 * @memberof google.protobuf
                 * @classdesc Represents a Struct.
                 * @implements IStruct
                 * @constructor
                 * @param {google.protobuf.IStruct=} [properties] Properties to set
                 */
                function Struct(properties) {
                    this.fields = {};
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * Struct fields.
                 * @member {Object.<string,google.protobuf.IValue>} fields
                 * @memberof google.protobuf.Struct
                 * @instance
                 */
                Struct.prototype.fields = $util.emptyObject;
    
                /**
                 * Creates a new Struct instance using the specified properties.
                 * @function create
                 * @memberof google.protobuf.Struct
                 * @static
                 * @param {google.protobuf.IStruct=} [properties] Properties to set
                 * @returns {google.protobuf.Struct} Struct instance
                 */
                Struct.create = function create(properties) {
                    return new Struct(properties);
                };
    
                /**
                 * Encodes the specified Struct message. Does not implicitly {@link google.protobuf.Struct.verify|verify} messages.
                 * @function encode
                 * @memberof google.protobuf.Struct
                 * @static
                 * @param {google.protobuf.IStruct} message Struct message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                Struct.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.fields != null && Object.hasOwnProperty.call(message, "fields"))
                        for (var keys = Object.keys(message.fields), i = 0; i < keys.length; ++i) {
                            writer.uint32(/* id 1, wireType 2 =*/10).fork().uint32(/* id 1, wireType 2 =*/10).string(keys[i]);
                            $root.google.protobuf.Value.encode(message.fields[keys[i]], writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim().ldelim();
                        }
                    return writer;
                };
    
                /**
                 * Encodes the specified Struct message, length delimited. Does not implicitly {@link google.protobuf.Struct.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.protobuf.Struct
                 * @static
                 * @param {google.protobuf.IStruct} message Struct message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                Struct.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a Struct message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.protobuf.Struct
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.protobuf.Struct} Struct
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                Struct.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.Struct(), key, value;
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1: {
                                if (message.fields === $util.emptyObject)
                                    message.fields = {};
                                var end2 = reader.uint32() + reader.pos;
                                key = "";
                                value = null;
                                while (reader.pos < end2) {
                                    var tag2 = reader.uint32();
                                    switch (tag2 >>> 3) {
                                    case 1:
                                        key = reader.string();
                                        break;
                                    case 2:
                                        value = $root.google.protobuf.Value.decode(reader, reader.uint32());
                                        break;
                                    default:
                                        reader.skipType(tag2 & 7);
                                        break;
                                    }
                                }
                                message.fields[key] = value;
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a Struct message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.protobuf.Struct
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.protobuf.Struct} Struct
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                Struct.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a Struct message.
                 * @function verify
                 * @memberof google.protobuf.Struct
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                Struct.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.fields != null && message.hasOwnProperty("fields")) {
                        if (!$util.isObject(message.fields))
                            return "fields: object expected";
                        var key = Object.keys(message.fields);
                        for (var i = 0; i < key.length; ++i) {
                            var error = $root.google.protobuf.Value.verify(message.fields[key[i]]);
                            if (error)
                                return "fields." + error;
                        }
                    }
                    return null;
                };
    
                /**
                 * Creates a Struct message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.protobuf.Struct
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.protobuf.Struct} Struct
                 */
                Struct.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.protobuf.Struct)
                        return object;
                    var message = new $root.google.protobuf.Struct();
                    if (object.fields) {
                        if (typeof object.fields !== "object")
                            throw TypeError(".google.protobuf.Struct.fields: object expected");
                        message.fields = {};
                        for (var keys = Object.keys(object.fields), i = 0; i < keys.length; ++i) {
                            if (typeof object.fields[keys[i]] !== "object")
                                throw TypeError(".google.protobuf.Struct.fields: object expected");
                            message.fields[keys[i]] = $root.google.protobuf.Value.fromObject(object.fields[keys[i]]);
                        }
                    }
                    return message;
                };
    
                /**
                 * Creates a plain object from a Struct message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.protobuf.Struct
                 * @static
                 * @param {google.protobuf.Struct} message Struct
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                Struct.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.objects || options.defaults)
                        object.fields = {};
                    var keys2;
                    if (message.fields && (keys2 = Object.keys(message.fields)).length) {
                        object.fields = {};
                        for (var j = 0; j < keys2.length; ++j)
                            object.fields[keys2[j]] = $root.google.protobuf.Value.toObject(message.fields[keys2[j]], options);
                    }
                    return object;
                };
    
                /**
                 * Converts this Struct to JSON.
                 * @function toJSON
                 * @memberof google.protobuf.Struct
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                Struct.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for Struct
                 * @function getTypeUrl
                 * @memberof google.protobuf.Struct
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                Struct.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.protobuf.Struct";
                };
    
                return Struct;
            })();
    
            protobuf.Value = (function() {
    
                /**
                 * Properties of a Value.
                 * @memberof google.protobuf
                 * @interface IValue
                 * @property {google.protobuf.NullValue|null} [nullValue] Value nullValue
                 * @property {number|null} [numberValue] Value numberValue
                 * @property {string|null} [stringValue] Value stringValue
                 * @property {boolean|null} [boolValue] Value boolValue
                 * @property {google.protobuf.IStruct|null} [structValue] Value structValue
                 * @property {google.protobuf.IListValue|null} [listValue] Value listValue
                 */
    
                /**
                 * Constructs a new Value.
                 * @memberof google.protobuf
                 * @classdesc Represents a Value.
                 * @implements IValue
                 * @constructor
                 * @param {google.protobuf.IValue=} [properties] Properties to set
                 */
                function Value(properties) {
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * Value nullValue.
                 * @member {google.protobuf.NullValue|null|undefined} nullValue
                 * @memberof google.protobuf.Value
                 * @instance
                 */
                Value.prototype.nullValue = null;
    
                /**
                 * Value numberValue.
                 * @member {number|null|undefined} numberValue
                 * @memberof google.protobuf.Value
                 * @instance
                 */
                Value.prototype.numberValue = null;
    
                /**
                 * Value stringValue.
                 * @member {string|null|undefined} stringValue
                 * @memberof google.protobuf.Value
                 * @instance
                 */
                Value.prototype.stringValue = null;
    
                /**
                 * Value boolValue.
                 * @member {boolean|null|undefined} boolValue
                 * @memberof google.protobuf.Value
                 * @instance
                 */
                Value.prototype.boolValue = null;
    
                /**
                 * Value structValue.
                 * @member {google.protobuf.IStruct|null|undefined} structValue
                 * @memberof google.protobuf.Value
                 * @instance
                 */
                Value.prototype.structValue = null;
    
                /**
                 * Value listValue.
                 * @member {google.protobuf.IListValue|null|undefined} listValue
                 * @memberof google.protobuf.Value
                 * @instance
                 */
                Value.prototype.listValue = null;
    
                // OneOf field names bound to virtual getters and setters
                var $oneOfFields;
    
                /**
                 * Value kind.
                 * @member {"nullValue"|"numberValue"|"stringValue"|"boolValue"|"structValue"|"listValue"|undefined} kind
                 * @memberof google.protobuf.Value
                 * @instance
                 */
                Object.defineProperty(Value.prototype, "kind", {
                    get: $util.oneOfGetter($oneOfFields = ["nullValue", "numberValue", "stringValue", "boolValue", "structValue", "listValue"]),
                    set: $util.oneOfSetter($oneOfFields)
                });
    
                /**
                 * Creates a new Value instance using the specified properties.
                 * @function create
                 * @memberof google.protobuf.Value
                 * @static
                 * @param {google.protobuf.IValue=} [properties] Properties to set
                 * @returns {google.protobuf.Value} Value instance
                 */
                Value.create = function create(properties) {
                    return new Value(properties);
                };
    
                /**
                 * Encodes the specified Value message. Does not implicitly {@link google.protobuf.Value.verify|verify} messages.
                 * @function encode
                 * @memberof google.protobuf.Value
                 * @static
                 * @param {google.protobuf.IValue} message Value message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                Value.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.nullValue != null && Object.hasOwnProperty.call(message, "nullValue"))
                        writer.uint32(/* id 1, wireType 0 =*/8).int32(message.nullValue);
                    if (message.numberValue != null && Object.hasOwnProperty.call(message, "numberValue"))
                        writer.uint32(/* id 2, wireType 1 =*/17).double(message.numberValue);
                    if (message.stringValue != null && Object.hasOwnProperty.call(message, "stringValue"))
                        writer.uint32(/* id 3, wireType 2 =*/26).string(message.stringValue);
                    if (message.boolValue != null && Object.hasOwnProperty.call(message, "boolValue"))
                        writer.uint32(/* id 4, wireType 0 =*/32).bool(message.boolValue);
                    if (message.structValue != null && Object.hasOwnProperty.call(message, "structValue"))
                        $root.google.protobuf.Struct.encode(message.structValue, writer.uint32(/* id 5, wireType 2 =*/42).fork()).ldelim();
                    if (message.listValue != null && Object.hasOwnProperty.call(message, "listValue"))
                        $root.google.protobuf.ListValue.encode(message.listValue, writer.uint32(/* id 6, wireType 2 =*/50).fork()).ldelim();
                    return writer;
                };
    
                /**
                 * Encodes the specified Value message, length delimited. Does not implicitly {@link google.protobuf.Value.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.protobuf.Value
                 * @static
                 * @param {google.protobuf.IValue} message Value message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                Value.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a Value message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.protobuf.Value
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.protobuf.Value} Value
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                Value.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.Value();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1: {
                                message.nullValue = reader.int32();
                                break;
                            }
                        case 2: {
                                message.numberValue = reader.double();
                                break;
                            }
                        case 3: {
                                message.stringValue = reader.string();
                                break;
                            }
                        case 4: {
                                message.boolValue = reader.bool();
                                break;
                            }
                        case 5: {
                                message.structValue = $root.google.protobuf.Struct.decode(reader, reader.uint32());
                                break;
                            }
                        case 6: {
                                message.listValue = $root.google.protobuf.ListValue.decode(reader, reader.uint32());
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a Value message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.protobuf.Value
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.protobuf.Value} Value
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                Value.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a Value message.
                 * @function verify
                 * @memberof google.protobuf.Value
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                Value.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    var properties = {};
                    if (message.nullValue != null && message.hasOwnProperty("nullValue")) {
                        properties.kind = 1;
                        switch (message.nullValue) {
                        default:
                            return "nullValue: enum value expected";
                        case 0:
                            break;
                        }
                    }
                    if (message.numberValue != null && message.hasOwnProperty("numberValue")) {
                        if (properties.kind === 1)
                            return "kind: multiple values";
                        properties.kind = 1;
                        if (typeof message.numberValue !== "number")
                            return "numberValue: number expected";
                    }
                    if (message.stringValue != null && message.hasOwnProperty("stringValue")) {
                        if (properties.kind === 1)
                            return "kind: multiple values";
                        properties.kind = 1;
                        if (!$util.isString(message.stringValue))
                            return "stringValue: string expected";
                    }
                    if (message.boolValue != null && message.hasOwnProperty("boolValue")) {
                        if (properties.kind === 1)
                            return "kind: multiple values";
                        properties.kind = 1;
                        if (typeof message.boolValue !== "boolean")
                            return "boolValue: boolean expected";
                    }
                    if (message.structValue != null && message.hasOwnProperty("structValue")) {
                        if (properties.kind === 1)
                            return "kind: multiple values";
                        properties.kind = 1;
                        {
                            var error = $root.google.protobuf.Struct.verify(message.structValue);
                            if (error)
                                return "structValue." + error;
                        }
                    }
                    if (message.listValue != null && message.hasOwnProperty("listValue")) {
                        if (properties.kind === 1)
                            return "kind: multiple values";
                        properties.kind = 1;
                        {
                            var error = $root.google.protobuf.ListValue.verify(message.listValue);
                            if (error)
                                return "listValue." + error;
                        }
                    }
                    return null;
                };
    
                /**
                 * Creates a Value message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.protobuf.Value
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.protobuf.Value} Value
                 */
                Value.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.protobuf.Value)
                        return object;
                    var message = new $root.google.protobuf.Value();
                    switch (object.nullValue) {
                    default:
                        if (typeof object.nullValue === "number") {
                            message.nullValue = object.nullValue;
                            break;
                        }
                        break;
                    case "NULL_VALUE":
                    case 0:
                        message.nullValue = 0;
                        break;
                    }
                    if (object.numberValue != null)
                        message.numberValue = Number(object.numberValue);
                    if (object.stringValue != null)
                        message.stringValue = String(object.stringValue);
                    if (object.boolValue != null)
                        message.boolValue = Boolean(object.boolValue);
                    if (object.structValue != null) {
                        if (typeof object.structValue !== "object")
                            throw TypeError(".google.protobuf.Value.structValue: object expected");
                        message.structValue = $root.google.protobuf.Struct.fromObject(object.structValue);
                    }
                    if (object.listValue != null) {
                        if (typeof object.listValue !== "object")
                            throw TypeError(".google.protobuf.Value.listValue: object expected");
                        message.listValue = $root.google.protobuf.ListValue.fromObject(object.listValue);
                    }
                    return message;
                };
    
                /**
                 * Creates a plain object from a Value message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.protobuf.Value
                 * @static
                 * @param {google.protobuf.Value} message Value
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                Value.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (message.nullValue != null && message.hasOwnProperty("nullValue")) {
                        object.nullValue = options.enums === String ? $root.google.protobuf.NullValue[message.nullValue] === undefined ? message.nullValue : $root.google.protobuf.NullValue[message.nullValue] : message.nullValue;
                        if (options.oneofs)
                            object.kind = "nullValue";
                    }
                    if (message.numberValue != null && message.hasOwnProperty("numberValue")) {
                        object.numberValue = options.json && !isFinite(message.numberValue) ? String(message.numberValue) : message.numberValue;
                        if (options.oneofs)
                            object.kind = "numberValue";
                    }
                    if (message.stringValue != null && message.hasOwnProperty("stringValue")) {
                        object.stringValue = message.stringValue;
                        if (options.oneofs)
                            object.kind = "stringValue";
                    }
                    if (message.boolValue != null && message.hasOwnProperty("boolValue")) {
                        object.boolValue = message.boolValue;
                        if (options.oneofs)
                            object.kind = "boolValue";
                    }
                    if (message.structValue != null && message.hasOwnProperty("structValue")) {
                        object.structValue = $root.google.protobuf.Struct.toObject(message.structValue, options);
                        if (options.oneofs)
                            object.kind = "structValue";
                    }
                    if (message.listValue != null && message.hasOwnProperty("listValue")) {
                        object.listValue = $root.google.protobuf.ListValue.toObject(message.listValue, options);
                        if (options.oneofs)
                            object.kind = "listValue";
                    }
                    return object;
                };
    
                /**
                 * Converts this Value to JSON.
                 * @function toJSON
                 * @memberof google.protobuf.Value
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                Value.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for Value
                 * @function getTypeUrl
                 * @memberof google.protobuf.Value
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                Value.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.protobuf.Value";
                };
    
                return Value;
            })();
    
            /**
             * NullValue enum.
             * @name google.protobuf.NullValue
             * @enum {number}
             * @property {number} NULL_VALUE=0 NULL_VALUE value
             */
            protobuf.NullValue = (function() {
                var valuesById = {}, values = Object.create(valuesById);
                values[valuesById[0] = "NULL_VALUE"] = 0;
                return values;
            })();
    
            protobuf.ListValue = (function() {
    
                /**
                 * Properties of a ListValue.
                 * @memberof google.protobuf
                 * @interface IListValue
                 * @property {Array.<google.protobuf.IValue>|null} [values] ListValue values
                 */
    
                /**
                 * Constructs a new ListValue.
                 * @memberof google.protobuf
                 * @classdesc Represents a ListValue.
                 * @implements IListValue
                 * @constructor
                 * @param {google.protobuf.IListValue=} [properties] Properties to set
                 */
                function ListValue(properties) {
                    this.values = [];
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * ListValue values.
                 * @member {Array.<google.protobuf.IValue>} values
                 * @memberof google.protobuf.ListValue
                 * @instance
                 */
                ListValue.prototype.values = $util.emptyArray;
    
                /**
                 * Creates a new ListValue instance using the specified properties.
                 * @function create
                 * @memberof google.protobuf.ListValue
                 * @static
                 * @param {google.protobuf.IListValue=} [properties] Properties to set
                 * @returns {google.protobuf.ListValue} ListValue instance
                 */
                ListValue.create = function create(properties) {
                    return new ListValue(properties);
                };
    
                /**
                 * Encodes the specified ListValue message. Does not implicitly {@link google.protobuf.ListValue.verify|verify} messages.
                 * @function encode
                 * @memberof google.protobuf.ListValue
                 * @static
                 * @param {google.protobuf.IListValue} message ListValue message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                ListValue.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.values != null && message.values.length)
                        for (var i = 0; i < message.values.length; ++i)
                            $root.google.protobuf.Value.encode(message.values[i], writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                    return writer;
                };
    
                /**
                 * Encodes the specified ListValue message, length delimited. Does not implicitly {@link google.protobuf.ListValue.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.protobuf.ListValue
                 * @static
                 * @param {google.protobuf.IListValue} message ListValue message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                ListValue.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a ListValue message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.protobuf.ListValue
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.protobuf.ListValue} ListValue
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                ListValue.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.ListValue();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1: {
                                if (!(message.values && message.values.length))
                                    message.values = [];
                                message.values.push($root.google.protobuf.Value.decode(reader, reader.uint32()));
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a ListValue message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.protobuf.ListValue
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.protobuf.ListValue} ListValue
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                ListValue.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a ListValue message.
                 * @function verify
                 * @memberof google.protobuf.ListValue
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                ListValue.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.values != null && message.hasOwnProperty("values")) {
                        if (!Array.isArray(message.values))
                            return "values: array expected";
                        for (var i = 0; i < message.values.length; ++i) {
                            var error = $root.google.protobuf.Value.verify(message.values[i]);
                            if (error)
                                return "values." + error;
                        }
                    }
                    return null;
                };
    
                /**
                 * Creates a ListValue message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.protobuf.ListValue
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.protobuf.ListValue} ListValue
                 */
                ListValue.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.protobuf.ListValue)
                        return object;
                    var message = new $root.google.protobuf.ListValue();
                    if (object.values) {
                        if (!Array.isArray(object.values))
                            throw TypeError(".google.protobuf.ListValue.values: array expected");
                        message.values = [];
                        for (var i = 0; i < object.values.length; ++i) {
                            if (typeof object.values[i] !== "object")
                                throw TypeError(".google.protobuf.ListValue.values: object expected");
                            message.values[i] = $root.google.protobuf.Value.fromObject(object.values[i]);
                        }
                    }
                    return message;
                };
    
                /**
                 * Creates a plain object from a ListValue message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.protobuf.ListValue
                 * @static
                 * @param {google.protobuf.ListValue} message ListValue
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                ListValue.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.arrays || options.defaults)
                        object.values = [];
                    if (message.values && message.values.length) {
                        object.values = [];
                        for (var j = 0; j < message.values.length; ++j)
                            object.values[j] = $root.google.protobuf.Value.toObject(message.values[j], options);
                    }
                    return object;
                };
    
                /**
                 * Converts this ListValue to JSON.
                 * @function toJSON
                 * @memberof google.protobuf.ListValue
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                ListValue.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for ListValue
                 * @function getTypeUrl
                 * @memberof google.protobuf.ListValue
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                ListValue.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.protobuf.ListValue";
                };
    
                return ListValue;
            })();
    
            protobuf.Duration = (function() {
    
                /**
                 * Properties of a Duration.
                 * @memberof google.protobuf
                 * @interface IDuration
                 * @property {number|Long|null} [seconds] Duration seconds
                 * @property {number|null} [nanos] Duration nanos
                 */
    
                /**
                 * Constructs a new Duration.
                 * @memberof google.protobuf
                 * @classdesc Represents a Duration.
                 * @implements IDuration
                 * @constructor
                 * @param {google.protobuf.IDuration=} [properties] Properties to set
                 */
                function Duration(properties) {
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * Duration seconds.
                 * @member {number|Long} seconds
                 * @memberof google.protobuf.Duration
                 * @instance
                 */
                Duration.prototype.seconds = $util.Long ? $util.Long.fromBits(0,0,false) : 0;
    
                /**
                 * Duration nanos.
                 * @member {number} nanos
                 * @memberof google.protobuf.Duration
                 * @instance
                 */
                Duration.prototype.nanos = 0;
    
                /**
                 * Creates a new Duration instance using the specified properties.
                 * @function create
                 * @memberof google.protobuf.Duration
                 * @static
                 * @param {google.protobuf.IDuration=} [properties] Properties to set
                 * @returns {google.protobuf.Duration} Duration instance
                 */
                Duration.create = function create(properties) {
                    return new Duration(properties);
                };
    
                /**
                 * Encodes the specified Duration message. Does not implicitly {@link google.protobuf.Duration.verify|verify} messages.
                 * @function encode
                 * @memberof google.protobuf.Duration
                 * @static
                 * @param {google.protobuf.IDuration} message Duration message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                Duration.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.seconds != null && Object.hasOwnProperty.call(message, "seconds"))
                        writer.uint32(/* id 1, wireType 0 =*/8).int64(message.seconds);
                    if (message.nanos != null && Object.hasOwnProperty.call(message, "nanos"))
                        writer.uint32(/* id 2, wireType 0 =*/16).int32(message.nanos);
                    return writer;
                };
    
                /**
                 * Encodes the specified Duration message, length delimited. Does not implicitly {@link google.protobuf.Duration.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.protobuf.Duration
                 * @static
                 * @param {google.protobuf.IDuration} message Duration message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                Duration.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a Duration message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.protobuf.Duration
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.protobuf.Duration} Duration
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                Duration.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.Duration();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1: {
                                message.seconds = reader.int64();
                                break;
                            }
                        case 2: {
                                message.nanos = reader.int32();
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a Duration message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.protobuf.Duration
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.protobuf.Duration} Duration
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                Duration.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a Duration message.
                 * @function verify
                 * @memberof google.protobuf.Duration
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                Duration.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.seconds != null && message.hasOwnProperty("seconds"))
                        if (!$util.isInteger(message.seconds) && !(message.seconds && $util.isInteger(message.seconds.low) && $util.isInteger(message.seconds.high)))
                            return "seconds: integer|Long expected";
                    if (message.nanos != null && message.hasOwnProperty("nanos"))
                        if (!$util.isInteger(message.nanos))
                            return "nanos: integer expected";
                    return null;
                };
    
                /**
                 * Creates a Duration message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.protobuf.Duration
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.protobuf.Duration} Duration
                 */
                Duration.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.protobuf.Duration)
                        return object;
                    var message = new $root.google.protobuf.Duration();
                    if (object.seconds != null)
                        if ($util.Long)
                            (message.seconds = $util.Long.fromValue(object.seconds)).unsigned = false;
                        else if (typeof object.seconds === "string")
                            message.seconds = parseInt(object.seconds, 10);
                        else if (typeof object.seconds === "number")
                            message.seconds = object.seconds;
                        else if (typeof object.seconds === "object")
                            message.seconds = new $util.LongBits(object.seconds.low >>> 0, object.seconds.high >>> 0).toNumber();
                    if (object.nanos != null)
                        message.nanos = object.nanos | 0;
                    return message;
                };
    
                /**
                 * Creates a plain object from a Duration message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.protobuf.Duration
                 * @static
                 * @param {google.protobuf.Duration} message Duration
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                Duration.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.defaults) {
                        if ($util.Long) {
                            var long = new $util.Long(0, 0, false);
                            object.seconds = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                        } else
                            object.seconds = options.longs === String ? "0" : 0;
                        object.nanos = 0;
                    }
                    if (message.seconds != null && message.hasOwnProperty("seconds"))
                        if (typeof message.seconds === "number")
                            object.seconds = options.longs === String ? String(message.seconds) : message.seconds;
                        else
                            object.seconds = options.longs === String ? $util.Long.prototype.toString.call(message.seconds) : options.longs === Number ? new $util.LongBits(message.seconds.low >>> 0, message.seconds.high >>> 0).toNumber() : message.seconds;
                    if (message.nanos != null && message.hasOwnProperty("nanos"))
                        object.nanos = message.nanos;
                    return object;
                };
    
                /**
                 * Converts this Duration to JSON.
                 * @function toJSON
                 * @memberof google.protobuf.Duration
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                Duration.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for Duration
                 * @function getTypeUrl
                 * @memberof google.protobuf.Duration
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                Duration.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.protobuf.Duration";
                };
    
                return Duration;
            })();
    
            protobuf.Timestamp = (function() {
    
                /**
                 * Properties of a Timestamp.
                 * @memberof google.protobuf
                 * @interface ITimestamp
                 * @property {number|Long|null} [seconds] Timestamp seconds
                 * @property {number|null} [nanos] Timestamp nanos
                 */
    
                /**
                 * Constructs a new Timestamp.
                 * @memberof google.protobuf
                 * @classdesc Represents a Timestamp.
                 * @implements ITimestamp
                 * @constructor
                 * @param {google.protobuf.ITimestamp=} [properties] Properties to set
                 */
                function Timestamp(properties) {
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * Timestamp seconds.
                 * @member {number|Long} seconds
                 * @memberof google.protobuf.Timestamp
                 * @instance
                 */
                Timestamp.prototype.seconds = $util.Long ? $util.Long.fromBits(0,0,false) : 0;
    
                /**
                 * Timestamp nanos.
                 * @member {number} nanos
                 * @memberof google.protobuf.Timestamp
                 * @instance
                 */
                Timestamp.prototype.nanos = 0;
    
                /**
                 * Creates a new Timestamp instance using the specified properties.
                 * @function create
                 * @memberof google.protobuf.Timestamp
                 * @static
                 * @param {google.protobuf.ITimestamp=} [properties] Properties to set
                 * @returns {google.protobuf.Timestamp} Timestamp instance
                 */
                Timestamp.create = function create(properties) {
                    return new Timestamp(properties);
                };
    
                /**
                 * Encodes the specified Timestamp message. Does not implicitly {@link google.protobuf.Timestamp.verify|verify} messages.
                 * @function encode
                 * @memberof google.protobuf.Timestamp
                 * @static
                 * @param {google.protobuf.ITimestamp} message Timestamp message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                Timestamp.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.seconds != null && Object.hasOwnProperty.call(message, "seconds"))
                        writer.uint32(/* id 1, wireType 0 =*/8).int64(message.seconds);
                    if (message.nanos != null && Object.hasOwnProperty.call(message, "nanos"))
                        writer.uint32(/* id 2, wireType 0 =*/16).int32(message.nanos);
                    return writer;
                };
    
                /**
                 * Encodes the specified Timestamp message, length delimited. Does not implicitly {@link google.protobuf.Timestamp.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.protobuf.Timestamp
                 * @static
                 * @param {google.protobuf.ITimestamp} message Timestamp message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                Timestamp.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a Timestamp message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.protobuf.Timestamp
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.protobuf.Timestamp} Timestamp
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                Timestamp.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.Timestamp();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1: {
                                message.seconds = reader.int64();
                                break;
                            }
                        case 2: {
                                message.nanos = reader.int32();
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a Timestamp message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.protobuf.Timestamp
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.protobuf.Timestamp} Timestamp
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                Timestamp.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a Timestamp message.
                 * @function verify
                 * @memberof google.protobuf.Timestamp
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                Timestamp.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.seconds != null && message.hasOwnProperty("seconds"))
                        if (!$util.isInteger(message.seconds) && !(message.seconds && $util.isInteger(message.seconds.low) && $util.isInteger(message.seconds.high)))
                            return "seconds: integer|Long expected";
                    if (message.nanos != null && message.hasOwnProperty("nanos"))
                        if (!$util.isInteger(message.nanos))
                            return "nanos: integer expected";
                    return null;
                };
    
                /**
                 * Creates a Timestamp message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.protobuf.Timestamp
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.protobuf.Timestamp} Timestamp
                 */
                Timestamp.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.protobuf.Timestamp)
                        return object;
                    var message = new $root.google.protobuf.Timestamp();
                    if (object.seconds != null)
                        if ($util.Long)
                            (message.seconds = $util.Long.fromValue(object.seconds)).unsigned = false;
                        else if (typeof object.seconds === "string")
                            message.seconds = parseInt(object.seconds, 10);
                        else if (typeof object.seconds === "number")
                            message.seconds = object.seconds;
                        else if (typeof object.seconds === "object")
                            message.seconds = new $util.LongBits(object.seconds.low >>> 0, object.seconds.high >>> 0).toNumber();
                    if (object.nanos != null)
                        message.nanos = object.nanos | 0;
                    return message;
                };
    
                /**
                 * Creates a plain object from a Timestamp message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.protobuf.Timestamp
                 * @static
                 * @param {google.protobuf.Timestamp} message Timestamp
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                Timestamp.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.defaults) {
                        if ($util.Long) {
                            var long = new $util.Long(0, 0, false);
                            object.seconds = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                        } else
                            object.seconds = options.longs === String ? "0" : 0;
                        object.nanos = 0;
                    }
                    if (message.seconds != null && message.hasOwnProperty("seconds"))
                        if (typeof message.seconds === "number")
                            object.seconds = options.longs === String ? String(message.seconds) : message.seconds;
                        else
                            object.seconds = options.longs === String ? $util.Long.prototype.toString.call(message.seconds) : options.longs === Number ? new $util.LongBits(message.seconds.low >>> 0, message.seconds.high >>> 0).toNumber() : message.seconds;
                    if (message.nanos != null && message.hasOwnProperty("nanos"))
                        object.nanos = message.nanos;
                    return object;
                };
    
                /**
                 * Converts this Timestamp to JSON.
                 * @function toJSON
                 * @memberof google.protobuf.Timestamp
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                Timestamp.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for Timestamp
                 * @function getTypeUrl
                 * @memberof google.protobuf.Timestamp
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                Timestamp.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.protobuf.Timestamp";
                };
    
                return Timestamp;
            })();
    
            protobuf.FileDescriptorSet = (function() {
    
                /**
                 * Properties of a FileDescriptorSet.
                 * @memberof google.protobuf
                 * @interface IFileDescriptorSet
                 * @property {Array.<google.protobuf.IFileDescriptorProto>|null} [file] FileDescriptorSet file
                 */
    
                /**
                 * Constructs a new FileDescriptorSet.
                 * @memberof google.protobuf
                 * @classdesc Represents a FileDescriptorSet.
                 * @implements IFileDescriptorSet
                 * @constructor
                 * @param {google.protobuf.IFileDescriptorSet=} [properties] Properties to set
                 */
                function FileDescriptorSet(properties) {
                    this.file = [];
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * FileDescriptorSet file.
                 * @member {Array.<google.protobuf.IFileDescriptorProto>} file
                 * @memberof google.protobuf.FileDescriptorSet
                 * @instance
                 */
                FileDescriptorSet.prototype.file = $util.emptyArray;
    
                /**
                 * Creates a new FileDescriptorSet instance using the specified properties.
                 * @function create
                 * @memberof google.protobuf.FileDescriptorSet
                 * @static
                 * @param {google.protobuf.IFileDescriptorSet=} [properties] Properties to set
                 * @returns {google.protobuf.FileDescriptorSet} FileDescriptorSet instance
                 */
                FileDescriptorSet.create = function create(properties) {
                    return new FileDescriptorSet(properties);
                };
    
                /**
                 * Encodes the specified FileDescriptorSet message. Does not implicitly {@link google.protobuf.FileDescriptorSet.verify|verify} messages.
                 * @function encode
                 * @memberof google.protobuf.FileDescriptorSet
                 * @static
                 * @param {google.protobuf.IFileDescriptorSet} message FileDescriptorSet message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                FileDescriptorSet.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.file != null && message.file.length)
                        for (var i = 0; i < message.file.length; ++i)
                            $root.google.protobuf.FileDescriptorProto.encode(message.file[i], writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                    return writer;
                };
    
                /**
                 * Encodes the specified FileDescriptorSet message, length delimited. Does not implicitly {@link google.protobuf.FileDescriptorSet.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.protobuf.FileDescriptorSet
                 * @static
                 * @param {google.protobuf.IFileDescriptorSet} message FileDescriptorSet message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                FileDescriptorSet.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a FileDescriptorSet message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.protobuf.FileDescriptorSet
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.protobuf.FileDescriptorSet} FileDescriptorSet
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                FileDescriptorSet.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.FileDescriptorSet();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1: {
                                if (!(message.file && message.file.length))
                                    message.file = [];
                                message.file.push($root.google.protobuf.FileDescriptorProto.decode(reader, reader.uint32()));
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a FileDescriptorSet message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.protobuf.FileDescriptorSet
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.protobuf.FileDescriptorSet} FileDescriptorSet
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                FileDescriptorSet.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a FileDescriptorSet message.
                 * @function verify
                 * @memberof google.protobuf.FileDescriptorSet
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                FileDescriptorSet.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.file != null && message.hasOwnProperty("file")) {
                        if (!Array.isArray(message.file))
                            return "file: array expected";
                        for (var i = 0; i < message.file.length; ++i) {
                            var error = $root.google.protobuf.FileDescriptorProto.verify(message.file[i]);
                            if (error)
                                return "file." + error;
                        }
                    }
                    return null;
                };
    
                /**
                 * Creates a FileDescriptorSet message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.protobuf.FileDescriptorSet
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.protobuf.FileDescriptorSet} FileDescriptorSet
                 */
                FileDescriptorSet.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.protobuf.FileDescriptorSet)
                        return object;
                    var message = new $root.google.protobuf.FileDescriptorSet();
                    if (object.file) {
                        if (!Array.isArray(object.file))
                            throw TypeError(".google.protobuf.FileDescriptorSet.file: array expected");
                        message.file = [];
                        for (var i = 0; i < object.file.length; ++i) {
                            if (typeof object.file[i] !== "object")
                                throw TypeError(".google.protobuf.FileDescriptorSet.file: object expected");
                            message.file[i] = $root.google.protobuf.FileDescriptorProto.fromObject(object.file[i]);
                        }
                    }
                    return message;
                };
    
                /**
                 * Creates a plain object from a FileDescriptorSet message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.protobuf.FileDescriptorSet
                 * @static
                 * @param {google.protobuf.FileDescriptorSet} message FileDescriptorSet
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                FileDescriptorSet.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.arrays || options.defaults)
                        object.file = [];
                    if (message.file && message.file.length) {
                        object.file = [];
                        for (var j = 0; j < message.file.length; ++j)
                            object.file[j] = $root.google.protobuf.FileDescriptorProto.toObject(message.file[j], options);
                    }
                    return object;
                };
    
                /**
                 * Converts this FileDescriptorSet to JSON.
                 * @function toJSON
                 * @memberof google.protobuf.FileDescriptorSet
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                FileDescriptorSet.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for FileDescriptorSet
                 * @function getTypeUrl
                 * @memberof google.protobuf.FileDescriptorSet
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                FileDescriptorSet.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.protobuf.FileDescriptorSet";
                };
    
                return FileDescriptorSet;
            })();
    
            protobuf.FileDescriptorProto = (function() {
    
                /**
                 * Properties of a FileDescriptorProto.
                 * @memberof google.protobuf
                 * @interface IFileDescriptorProto
                 * @property {string|null} [name] FileDescriptorProto name
                 * @property {string|null} ["package"] FileDescriptorProto package
                 * @property {Array.<string>|null} [dependency] FileDescriptorProto dependency
                 * @property {Array.<number>|null} [publicDependency] FileDescriptorProto publicDependency
                 * @property {Array.<number>|null} [weakDependency] FileDescriptorProto weakDependency
                 * @property {Array.<google.protobuf.IDescriptorProto>|null} [messageType] FileDescriptorProto messageType
                 * @property {Array.<google.protobuf.IEnumDescriptorProto>|null} [enumType] FileDescriptorProto enumType
                 * @property {Array.<google.protobuf.IServiceDescriptorProto>|null} [service] FileDescriptorProto service
                 * @property {Array.<google.protobuf.IFieldDescriptorProto>|null} [extension] FileDescriptorProto extension
                 * @property {google.protobuf.IFileOptions|null} [options] FileDescriptorProto options
                 * @property {google.protobuf.ISourceCodeInfo|null} [sourceCodeInfo] FileDescriptorProto sourceCodeInfo
                 * @property {string|null} [syntax] FileDescriptorProto syntax
                 * @property {string|null} [edition] FileDescriptorProto edition
                 */
    
                /**
                 * Constructs a new FileDescriptorProto.
                 * @memberof google.protobuf
                 * @classdesc Represents a FileDescriptorProto.
                 * @implements IFileDescriptorProto
                 * @constructor
                 * @param {google.protobuf.IFileDescriptorProto=} [properties] Properties to set
                 */
                function FileDescriptorProto(properties) {
                    this.dependency = [];
                    this.publicDependency = [];
                    this.weakDependency = [];
                    this.messageType = [];
                    this.enumType = [];
                    this.service = [];
                    this.extension = [];
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * FileDescriptorProto name.
                 * @member {string} name
                 * @memberof google.protobuf.FileDescriptorProto
                 * @instance
                 */
                FileDescriptorProto.prototype.name = "";
    
                /**
                 * FileDescriptorProto package.
                 * @member {string} package
                 * @memberof google.protobuf.FileDescriptorProto
                 * @instance
                 */
                FileDescriptorProto.prototype["package"] = "";
    
                /**
                 * FileDescriptorProto dependency.
                 * @member {Array.<string>} dependency
                 * @memberof google.protobuf.FileDescriptorProto
                 * @instance
                 */
                FileDescriptorProto.prototype.dependency = $util.emptyArray;
    
                /**
                 * FileDescriptorProto publicDependency.
                 * @member {Array.<number>} publicDependency
                 * @memberof google.protobuf.FileDescriptorProto
                 * @instance
                 */
                FileDescriptorProto.prototype.publicDependency = $util.emptyArray;
    
                /**
                 * FileDescriptorProto weakDependency.
                 * @member {Array.<number>} weakDependency
                 * @memberof google.protobuf.FileDescriptorProto
                 * @instance
                 */
                FileDescriptorProto.prototype.weakDependency = $util.emptyArray;
    
                /**
                 * FileDescriptorProto messageType.
                 * @member {Array.<google.protobuf.IDescriptorProto>} messageType
                 * @memberof google.protobuf.FileDescriptorProto
                 * @instance
                 */
                FileDescriptorProto.prototype.messageType = $util.emptyArray;
    
                /**
                 * FileDescriptorProto enumType.
                 * @member {Array.<google.protobuf.IEnumDescriptorProto>} enumType
                 * @memberof google.protobuf.FileDescriptorProto
                 * @instance
                 */
                FileDescriptorProto.prototype.enumType = $util.emptyArray;
    
                /**
                 * FileDescriptorProto service.
                 * @member {Array.<google.protobuf.IServiceDescriptorProto>} service
                 * @memberof google.protobuf.FileDescriptorProto
                 * @instance
                 */
                FileDescriptorProto.prototype.service = $util.emptyArray;
    
                /**
                 * FileDescriptorProto extension.
                 * @member {Array.<google.protobuf.IFieldDescriptorProto>} extension
                 * @memberof google.protobuf.FileDescriptorProto
                 * @instance
                 */
                FileDescriptorProto.prototype.extension = $util.emptyArray;
    
                /**
                 * FileDescriptorProto options.
                 * @member {google.protobuf.IFileOptions|null|undefined} options
                 * @memberof google.protobuf.FileDescriptorProto
                 * @instance
                 */
                FileDescriptorProto.prototype.options = null;
    
                /**
                 * FileDescriptorProto sourceCodeInfo.
                 * @member {google.protobuf.ISourceCodeInfo|null|undefined} sourceCodeInfo
                 * @memberof google.protobuf.FileDescriptorProto
                 * @instance
                 */
                FileDescriptorProto.prototype.sourceCodeInfo = null;
    
                /**
                 * FileDescriptorProto syntax.
                 * @member {string} syntax
                 * @memberof google.protobuf.FileDescriptorProto
                 * @instance
                 */
                FileDescriptorProto.prototype.syntax = "";
    
                /**
                 * FileDescriptorProto edition.
                 * @member {string} edition
                 * @memberof google.protobuf.FileDescriptorProto
                 * @instance
                 */
                FileDescriptorProto.prototype.edition = "";
    
                /**
                 * Creates a new FileDescriptorProto instance using the specified properties.
                 * @function create
                 * @memberof google.protobuf.FileDescriptorProto
                 * @static
                 * @param {google.protobuf.IFileDescriptorProto=} [properties] Properties to set
                 * @returns {google.protobuf.FileDescriptorProto} FileDescriptorProto instance
                 */
                FileDescriptorProto.create = function create(properties) {
                    return new FileDescriptorProto(properties);
                };
    
                /**
                 * Encodes the specified FileDescriptorProto message. Does not implicitly {@link google.protobuf.FileDescriptorProto.verify|verify} messages.
                 * @function encode
                 * @memberof google.protobuf.FileDescriptorProto
                 * @static
                 * @param {google.protobuf.IFileDescriptorProto} message FileDescriptorProto message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                FileDescriptorProto.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                        writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                    if (message["package"] != null && Object.hasOwnProperty.call(message, "package"))
                        writer.uint32(/* id 2, wireType 2 =*/18).string(message["package"]);
                    if (message.dependency != null && message.dependency.length)
                        for (var i = 0; i < message.dependency.length; ++i)
                            writer.uint32(/* id 3, wireType 2 =*/26).string(message.dependency[i]);
                    if (message.messageType != null && message.messageType.length)
                        for (var i = 0; i < message.messageType.length; ++i)
                            $root.google.protobuf.DescriptorProto.encode(message.messageType[i], writer.uint32(/* id 4, wireType 2 =*/34).fork()).ldelim();
                    if (message.enumType != null && message.enumType.length)
                        for (var i = 0; i < message.enumType.length; ++i)
                            $root.google.protobuf.EnumDescriptorProto.encode(message.enumType[i], writer.uint32(/* id 5, wireType 2 =*/42).fork()).ldelim();
                    if (message.service != null && message.service.length)
                        for (var i = 0; i < message.service.length; ++i)
                            $root.google.protobuf.ServiceDescriptorProto.encode(message.service[i], writer.uint32(/* id 6, wireType 2 =*/50).fork()).ldelim();
                    if (message.extension != null && message.extension.length)
                        for (var i = 0; i < message.extension.length; ++i)
                            $root.google.protobuf.FieldDescriptorProto.encode(message.extension[i], writer.uint32(/* id 7, wireType 2 =*/58).fork()).ldelim();
                    if (message.options != null && Object.hasOwnProperty.call(message, "options"))
                        $root.google.protobuf.FileOptions.encode(message.options, writer.uint32(/* id 8, wireType 2 =*/66).fork()).ldelim();
                    if (message.sourceCodeInfo != null && Object.hasOwnProperty.call(message, "sourceCodeInfo"))
                        $root.google.protobuf.SourceCodeInfo.encode(message.sourceCodeInfo, writer.uint32(/* id 9, wireType 2 =*/74).fork()).ldelim();
                    if (message.publicDependency != null && message.publicDependency.length)
                        for (var i = 0; i < message.publicDependency.length; ++i)
                            writer.uint32(/* id 10, wireType 0 =*/80).int32(message.publicDependency[i]);
                    if (message.weakDependency != null && message.weakDependency.length)
                        for (var i = 0; i < message.weakDependency.length; ++i)
                            writer.uint32(/* id 11, wireType 0 =*/88).int32(message.weakDependency[i]);
                    if (message.syntax != null && Object.hasOwnProperty.call(message, "syntax"))
                        writer.uint32(/* id 12, wireType 2 =*/98).string(message.syntax);
                    if (message.edition != null && Object.hasOwnProperty.call(message, "edition"))
                        writer.uint32(/* id 13, wireType 2 =*/106).string(message.edition);
                    return writer;
                };
    
                /**
                 * Encodes the specified FileDescriptorProto message, length delimited. Does not implicitly {@link google.protobuf.FileDescriptorProto.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.protobuf.FileDescriptorProto
                 * @static
                 * @param {google.protobuf.IFileDescriptorProto} message FileDescriptorProto message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                FileDescriptorProto.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a FileDescriptorProto message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.protobuf.FileDescriptorProto
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.protobuf.FileDescriptorProto} FileDescriptorProto
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                FileDescriptorProto.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.FileDescriptorProto();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1: {
                                message.name = reader.string();
                                break;
                            }
                        case 2: {
                                message["package"] = reader.string();
                                break;
                            }
                        case 3: {
                                if (!(message.dependency && message.dependency.length))
                                    message.dependency = [];
                                message.dependency.push(reader.string());
                                break;
                            }
                        case 10: {
                                if (!(message.publicDependency && message.publicDependency.length))
                                    message.publicDependency = [];
                                if ((tag & 7) === 2) {
                                    var end2 = reader.uint32() + reader.pos;
                                    while (reader.pos < end2)
                                        message.publicDependency.push(reader.int32());
                                } else
                                    message.publicDependency.push(reader.int32());
                                break;
                            }
                        case 11: {
                                if (!(message.weakDependency && message.weakDependency.length))
                                    message.weakDependency = [];
                                if ((tag & 7) === 2) {
                                    var end2 = reader.uint32() + reader.pos;
                                    while (reader.pos < end2)
                                        message.weakDependency.push(reader.int32());
                                } else
                                    message.weakDependency.push(reader.int32());
                                break;
                            }
                        case 4: {
                                if (!(message.messageType && message.messageType.length))
                                    message.messageType = [];
                                message.messageType.push($root.google.protobuf.DescriptorProto.decode(reader, reader.uint32()));
                                break;
                            }
                        case 5: {
                                if (!(message.enumType && message.enumType.length))
                                    message.enumType = [];
                                message.enumType.push($root.google.protobuf.EnumDescriptorProto.decode(reader, reader.uint32()));
                                break;
                            }
                        case 6: {
                                if (!(message.service && message.service.length))
                                    message.service = [];
                                message.service.push($root.google.protobuf.ServiceDescriptorProto.decode(reader, reader.uint32()));
                                break;
                            }
                        case 7: {
                                if (!(message.extension && message.extension.length))
                                    message.extension = [];
                                message.extension.push($root.google.protobuf.FieldDescriptorProto.decode(reader, reader.uint32()));
                                break;
                            }
                        case 8: {
                                message.options = $root.google.protobuf.FileOptions.decode(reader, reader.uint32());
                                break;
                            }
                        case 9: {
                                message.sourceCodeInfo = $root.google.protobuf.SourceCodeInfo.decode(reader, reader.uint32());
                                break;
                            }
                        case 12: {
                                message.syntax = reader.string();
                                break;
                            }
                        case 13: {
                                message.edition = reader.string();
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a FileDescriptorProto message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.protobuf.FileDescriptorProto
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.protobuf.FileDescriptorProto} FileDescriptorProto
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                FileDescriptorProto.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a FileDescriptorProto message.
                 * @function verify
                 * @memberof google.protobuf.FileDescriptorProto
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                FileDescriptorProto.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.name != null && message.hasOwnProperty("name"))
                        if (!$util.isString(message.name))
                            return "name: string expected";
                    if (message["package"] != null && message.hasOwnProperty("package"))
                        if (!$util.isString(message["package"]))
                            return "package: string expected";
                    if (message.dependency != null && message.hasOwnProperty("dependency")) {
                        if (!Array.isArray(message.dependency))
                            return "dependency: array expected";
                        for (var i = 0; i < message.dependency.length; ++i)
                            if (!$util.isString(message.dependency[i]))
                                return "dependency: string[] expected";
                    }
                    if (message.publicDependency != null && message.hasOwnProperty("publicDependency")) {
                        if (!Array.isArray(message.publicDependency))
                            return "publicDependency: array expected";
                        for (var i = 0; i < message.publicDependency.length; ++i)
                            if (!$util.isInteger(message.publicDependency[i]))
                                return "publicDependency: integer[] expected";
                    }
                    if (message.weakDependency != null && message.hasOwnProperty("weakDependency")) {
                        if (!Array.isArray(message.weakDependency))
                            return "weakDependency: array expected";
                        for (var i = 0; i < message.weakDependency.length; ++i)
                            if (!$util.isInteger(message.weakDependency[i]))
                                return "weakDependency: integer[] expected";
                    }
                    if (message.messageType != null && message.hasOwnProperty("messageType")) {
                        if (!Array.isArray(message.messageType))
                            return "messageType: array expected";
                        for (var i = 0; i < message.messageType.length; ++i) {
                            var error = $root.google.protobuf.DescriptorProto.verify(message.messageType[i]);
                            if (error)
                                return "messageType." + error;
                        }
                    }
                    if (message.enumType != null && message.hasOwnProperty("enumType")) {
                        if (!Array.isArray(message.enumType))
                            return "enumType: array expected";
                        for (var i = 0; i < message.enumType.length; ++i) {
                            var error = $root.google.protobuf.EnumDescriptorProto.verify(message.enumType[i]);
                            if (error)
                                return "enumType." + error;
                        }
                    }
                    if (message.service != null && message.hasOwnProperty("service")) {
                        if (!Array.isArray(message.service))
                            return "service: array expected";
                        for (var i = 0; i < message.service.length; ++i) {
                            var error = $root.google.protobuf.ServiceDescriptorProto.verify(message.service[i]);
                            if (error)
                                return "service." + error;
                        }
                    }
                    if (message.extension != null && message.hasOwnProperty("extension")) {
                        if (!Array.isArray(message.extension))
                            return "extension: array expected";
                        for (var i = 0; i < message.extension.length; ++i) {
                            var error = $root.google.protobuf.FieldDescriptorProto.verify(message.extension[i]);
                            if (error)
                                return "extension." + error;
                        }
                    }
                    if (message.options != null && message.hasOwnProperty("options")) {
                        var error = $root.google.protobuf.FileOptions.verify(message.options);
                        if (error)
                            return "options." + error;
                    }
                    if (message.sourceCodeInfo != null && message.hasOwnProperty("sourceCodeInfo")) {
                        var error = $root.google.protobuf.SourceCodeInfo.verify(message.sourceCodeInfo);
                        if (error)
                            return "sourceCodeInfo." + error;
                    }
                    if (message.syntax != null && message.hasOwnProperty("syntax"))
                        if (!$util.isString(message.syntax))
                            return "syntax: string expected";
                    if (message.edition != null && message.hasOwnProperty("edition"))
                        if (!$util.isString(message.edition))
                            return "edition: string expected";
                    return null;
                };
    
                /**
                 * Creates a FileDescriptorProto message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.protobuf.FileDescriptorProto
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.protobuf.FileDescriptorProto} FileDescriptorProto
                 */
                FileDescriptorProto.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.protobuf.FileDescriptorProto)
                        return object;
                    var message = new $root.google.protobuf.FileDescriptorProto();
                    if (object.name != null)
                        message.name = String(object.name);
                    if (object["package"] != null)
                        message["package"] = String(object["package"]);
                    if (object.dependency) {
                        if (!Array.isArray(object.dependency))
                            throw TypeError(".google.protobuf.FileDescriptorProto.dependency: array expected");
                        message.dependency = [];
                        for (var i = 0; i < object.dependency.length; ++i)
                            message.dependency[i] = String(object.dependency[i]);
                    }
                    if (object.publicDependency) {
                        if (!Array.isArray(object.publicDependency))
                            throw TypeError(".google.protobuf.FileDescriptorProto.publicDependency: array expected");
                        message.publicDependency = [];
                        for (var i = 0; i < object.publicDependency.length; ++i)
                            message.publicDependency[i] = object.publicDependency[i] | 0;
                    }
                    if (object.weakDependency) {
                        if (!Array.isArray(object.weakDependency))
                            throw TypeError(".google.protobuf.FileDescriptorProto.weakDependency: array expected");
                        message.weakDependency = [];
                        for (var i = 0; i < object.weakDependency.length; ++i)
                            message.weakDependency[i] = object.weakDependency[i] | 0;
                    }
                    if (object.messageType) {
                        if (!Array.isArray(object.messageType))
                            throw TypeError(".google.protobuf.FileDescriptorProto.messageType: array expected");
                        message.messageType = [];
                        for (var i = 0; i < object.messageType.length; ++i) {
                            if (typeof object.messageType[i] !== "object")
                                throw TypeError(".google.protobuf.FileDescriptorProto.messageType: object expected");
                            message.messageType[i] = $root.google.protobuf.DescriptorProto.fromObject(object.messageType[i]);
                        }
                    }
                    if (object.enumType) {
                        if (!Array.isArray(object.enumType))
                            throw TypeError(".google.protobuf.FileDescriptorProto.enumType: array expected");
                        message.enumType = [];
                        for (var i = 0; i < object.enumType.length; ++i) {
                            if (typeof object.enumType[i] !== "object")
                                throw TypeError(".google.protobuf.FileDescriptorProto.enumType: object expected");
                            message.enumType[i] = $root.google.protobuf.EnumDescriptorProto.fromObject(object.enumType[i]);
                        }
                    }
                    if (object.service) {
                        if (!Array.isArray(object.service))
                            throw TypeError(".google.protobuf.FileDescriptorProto.service: array expected");
                        message.service = [];
                        for (var i = 0; i < object.service.length; ++i) {
                            if (typeof object.service[i] !== "object")
                                throw TypeError(".google.protobuf.FileDescriptorProto.service: object expected");
                            message.service[i] = $root.google.protobuf.ServiceDescriptorProto.fromObject(object.service[i]);
                        }
                    }
                    if (object.extension) {
                        if (!Array.isArray(object.extension))
                            throw TypeError(".google.protobuf.FileDescriptorProto.extension: array expected");
                        message.extension = [];
                        for (var i = 0; i < object.extension.length; ++i) {
                            if (typeof object.extension[i] !== "object")
                                throw TypeError(".google.protobuf.FileDescriptorProto.extension: object expected");
                            message.extension[i] = $root.google.protobuf.FieldDescriptorProto.fromObject(object.extension[i]);
                        }
                    }
                    if (object.options != null) {
                        if (typeof object.options !== "object")
                            throw TypeError(".google.protobuf.FileDescriptorProto.options: object expected");
                        message.options = $root.google.protobuf.FileOptions.fromObject(object.options);
                    }
                    if (object.sourceCodeInfo != null) {
                        if (typeof object.sourceCodeInfo !== "object")
                            throw TypeError(".google.protobuf.FileDescriptorProto.sourceCodeInfo: object expected");
                        message.sourceCodeInfo = $root.google.protobuf.SourceCodeInfo.fromObject(object.sourceCodeInfo);
                    }
                    if (object.syntax != null)
                        message.syntax = String(object.syntax);
                    if (object.edition != null)
                        message.edition = String(object.edition);
                    return message;
                };
    
                /**
                 * Creates a plain object from a FileDescriptorProto message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.protobuf.FileDescriptorProto
                 * @static
                 * @param {google.protobuf.FileDescriptorProto} message FileDescriptorProto
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                FileDescriptorProto.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.arrays || options.defaults) {
                        object.dependency = [];
                        object.messageType = [];
                        object.enumType = [];
                        object.service = [];
                        object.extension = [];
                        object.publicDependency = [];
                        object.weakDependency = [];
                    }
                    if (options.defaults) {
                        object.name = "";
                        object["package"] = "";
                        object.options = null;
                        object.sourceCodeInfo = null;
                        object.syntax = "";
                        object.edition = "";
                    }
                    if (message.name != null && message.hasOwnProperty("name"))
                        object.name = message.name;
                    if (message["package"] != null && message.hasOwnProperty("package"))
                        object["package"] = message["package"];
                    if (message.dependency && message.dependency.length) {
                        object.dependency = [];
                        for (var j = 0; j < message.dependency.length; ++j)
                            object.dependency[j] = message.dependency[j];
                    }
                    if (message.messageType && message.messageType.length) {
                        object.messageType = [];
                        for (var j = 0; j < message.messageType.length; ++j)
                            object.messageType[j] = $root.google.protobuf.DescriptorProto.toObject(message.messageType[j], options);
                    }
                    if (message.enumType && message.enumType.length) {
                        object.enumType = [];
                        for (var j = 0; j < message.enumType.length; ++j)
                            object.enumType[j] = $root.google.protobuf.EnumDescriptorProto.toObject(message.enumType[j], options);
                    }
                    if (message.service && message.service.length) {
                        object.service = [];
                        for (var j = 0; j < message.service.length; ++j)
                            object.service[j] = $root.google.protobuf.ServiceDescriptorProto.toObject(message.service[j], options);
                    }
                    if (message.extension && message.extension.length) {
                        object.extension = [];
                        for (var j = 0; j < message.extension.length; ++j)
                            object.extension[j] = $root.google.protobuf.FieldDescriptorProto.toObject(message.extension[j], options);
                    }
                    if (message.options != null && message.hasOwnProperty("options"))
                        object.options = $root.google.protobuf.FileOptions.toObject(message.options, options);
                    if (message.sourceCodeInfo != null && message.hasOwnProperty("sourceCodeInfo"))
                        object.sourceCodeInfo = $root.google.protobuf.SourceCodeInfo.toObject(message.sourceCodeInfo, options);
                    if (message.publicDependency && message.publicDependency.length) {
                        object.publicDependency = [];
                        for (var j = 0; j < message.publicDependency.length; ++j)
                            object.publicDependency[j] = message.publicDependency[j];
                    }
                    if (message.weakDependency && message.weakDependency.length) {
                        object.weakDependency = [];
                        for (var j = 0; j < message.weakDependency.length; ++j)
                            object.weakDependency[j] = message.weakDependency[j];
                    }
                    if (message.syntax != null && message.hasOwnProperty("syntax"))
                        object.syntax = message.syntax;
                    if (message.edition != null && message.hasOwnProperty("edition"))
                        object.edition = message.edition;
                    return object;
                };
    
                /**
                 * Converts this FileDescriptorProto to JSON.
                 * @function toJSON
                 * @memberof google.protobuf.FileDescriptorProto
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                FileDescriptorProto.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for FileDescriptorProto
                 * @function getTypeUrl
                 * @memberof google.protobuf.FileDescriptorProto
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                FileDescriptorProto.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.protobuf.FileDescriptorProto";
                };
    
                return FileDescriptorProto;
            })();
    
            protobuf.DescriptorProto = (function() {
    
                /**
                 * Properties of a DescriptorProto.
                 * @memberof google.protobuf
                 * @interface IDescriptorProto
                 * @property {string|null} [name] DescriptorProto name
                 * @property {Array.<google.protobuf.IFieldDescriptorProto>|null} [field] DescriptorProto field
                 * @property {Array.<google.protobuf.IFieldDescriptorProto>|null} [extension] DescriptorProto extension
                 * @property {Array.<google.protobuf.IDescriptorProto>|null} [nestedType] DescriptorProto nestedType
                 * @property {Array.<google.protobuf.IEnumDescriptorProto>|null} [enumType] DescriptorProto enumType
                 * @property {Array.<google.protobuf.DescriptorProto.IExtensionRange>|null} [extensionRange] DescriptorProto extensionRange
                 * @property {Array.<google.protobuf.IOneofDescriptorProto>|null} [oneofDecl] DescriptorProto oneofDecl
                 * @property {google.protobuf.IMessageOptions|null} [options] DescriptorProto options
                 * @property {Array.<google.protobuf.DescriptorProto.IReservedRange>|null} [reservedRange] DescriptorProto reservedRange
                 * @property {Array.<string>|null} [reservedName] DescriptorProto reservedName
                 */
    
                /**
                 * Constructs a new DescriptorProto.
                 * @memberof google.protobuf
                 * @classdesc Represents a DescriptorProto.
                 * @implements IDescriptorProto
                 * @constructor
                 * @param {google.protobuf.IDescriptorProto=} [properties] Properties to set
                 */
                function DescriptorProto(properties) {
                    this.field = [];
                    this.extension = [];
                    this.nestedType = [];
                    this.enumType = [];
                    this.extensionRange = [];
                    this.oneofDecl = [];
                    this.reservedRange = [];
                    this.reservedName = [];
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * DescriptorProto name.
                 * @member {string} name
                 * @memberof google.protobuf.DescriptorProto
                 * @instance
                 */
                DescriptorProto.prototype.name = "";
    
                /**
                 * DescriptorProto field.
                 * @member {Array.<google.protobuf.IFieldDescriptorProto>} field
                 * @memberof google.protobuf.DescriptorProto
                 * @instance
                 */
                DescriptorProto.prototype.field = $util.emptyArray;
    
                /**
                 * DescriptorProto extension.
                 * @member {Array.<google.protobuf.IFieldDescriptorProto>} extension
                 * @memberof google.protobuf.DescriptorProto
                 * @instance
                 */
                DescriptorProto.prototype.extension = $util.emptyArray;
    
                /**
                 * DescriptorProto nestedType.
                 * @member {Array.<google.protobuf.IDescriptorProto>} nestedType
                 * @memberof google.protobuf.DescriptorProto
                 * @instance
                 */
                DescriptorProto.prototype.nestedType = $util.emptyArray;
    
                /**
                 * DescriptorProto enumType.
                 * @member {Array.<google.protobuf.IEnumDescriptorProto>} enumType
                 * @memberof google.protobuf.DescriptorProto
                 * @instance
                 */
                DescriptorProto.prototype.enumType = $util.emptyArray;
    
                /**
                 * DescriptorProto extensionRange.
                 * @member {Array.<google.protobuf.DescriptorProto.IExtensionRange>} extensionRange
                 * @memberof google.protobuf.DescriptorProto
                 * @instance
                 */
                DescriptorProto.prototype.extensionRange = $util.emptyArray;
    
                /**
                 * DescriptorProto oneofDecl.
                 * @member {Array.<google.protobuf.IOneofDescriptorProto>} oneofDecl
                 * @memberof google.protobuf.DescriptorProto
                 * @instance
                 */
                DescriptorProto.prototype.oneofDecl = $util.emptyArray;
    
                /**
                 * DescriptorProto options.
                 * @member {google.protobuf.IMessageOptions|null|undefined} options
                 * @memberof google.protobuf.DescriptorProto
                 * @instance
                 */
                DescriptorProto.prototype.options = null;
    
                /**
                 * DescriptorProto reservedRange.
                 * @member {Array.<google.protobuf.DescriptorProto.IReservedRange>} reservedRange
                 * @memberof google.protobuf.DescriptorProto
                 * @instance
                 */
                DescriptorProto.prototype.reservedRange = $util.emptyArray;
    
                /**
                 * DescriptorProto reservedName.
                 * @member {Array.<string>} reservedName
                 * @memberof google.protobuf.DescriptorProto
                 * @instance
                 */
                DescriptorProto.prototype.reservedName = $util.emptyArray;
    
                /**
                 * Creates a new DescriptorProto instance using the specified properties.
                 * @function create
                 * @memberof google.protobuf.DescriptorProto
                 * @static
                 * @param {google.protobuf.IDescriptorProto=} [properties] Properties to set
                 * @returns {google.protobuf.DescriptorProto} DescriptorProto instance
                 */
                DescriptorProto.create = function create(properties) {
                    return new DescriptorProto(properties);
                };
    
                /**
                 * Encodes the specified DescriptorProto message. Does not implicitly {@link google.protobuf.DescriptorProto.verify|verify} messages.
                 * @function encode
                 * @memberof google.protobuf.DescriptorProto
                 * @static
                 * @param {google.protobuf.IDescriptorProto} message DescriptorProto message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                DescriptorProto.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                        writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                    if (message.field != null && message.field.length)
                        for (var i = 0; i < message.field.length; ++i)
                            $root.google.protobuf.FieldDescriptorProto.encode(message.field[i], writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                    if (message.nestedType != null && message.nestedType.length)
                        for (var i = 0; i < message.nestedType.length; ++i)
                            $root.google.protobuf.DescriptorProto.encode(message.nestedType[i], writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();
                    if (message.enumType != null && message.enumType.length)
                        for (var i = 0; i < message.enumType.length; ++i)
                            $root.google.protobuf.EnumDescriptorProto.encode(message.enumType[i], writer.uint32(/* id 4, wireType 2 =*/34).fork()).ldelim();
                    if (message.extensionRange != null && message.extensionRange.length)
                        for (var i = 0; i < message.extensionRange.length; ++i)
                            $root.google.protobuf.DescriptorProto.ExtensionRange.encode(message.extensionRange[i], writer.uint32(/* id 5, wireType 2 =*/42).fork()).ldelim();
                    if (message.extension != null && message.extension.length)
                        for (var i = 0; i < message.extension.length; ++i)
                            $root.google.protobuf.FieldDescriptorProto.encode(message.extension[i], writer.uint32(/* id 6, wireType 2 =*/50).fork()).ldelim();
                    if (message.options != null && Object.hasOwnProperty.call(message, "options"))
                        $root.google.protobuf.MessageOptions.encode(message.options, writer.uint32(/* id 7, wireType 2 =*/58).fork()).ldelim();
                    if (message.oneofDecl != null && message.oneofDecl.length)
                        for (var i = 0; i < message.oneofDecl.length; ++i)
                            $root.google.protobuf.OneofDescriptorProto.encode(message.oneofDecl[i], writer.uint32(/* id 8, wireType 2 =*/66).fork()).ldelim();
                    if (message.reservedRange != null && message.reservedRange.length)
                        for (var i = 0; i < message.reservedRange.length; ++i)
                            $root.google.protobuf.DescriptorProto.ReservedRange.encode(message.reservedRange[i], writer.uint32(/* id 9, wireType 2 =*/74).fork()).ldelim();
                    if (message.reservedName != null && message.reservedName.length)
                        for (var i = 0; i < message.reservedName.length; ++i)
                            writer.uint32(/* id 10, wireType 2 =*/82).string(message.reservedName[i]);
                    return writer;
                };
    
                /**
                 * Encodes the specified DescriptorProto message, length delimited. Does not implicitly {@link google.protobuf.DescriptorProto.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.protobuf.DescriptorProto
                 * @static
                 * @param {google.protobuf.IDescriptorProto} message DescriptorProto message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                DescriptorProto.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a DescriptorProto message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.protobuf.DescriptorProto
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.protobuf.DescriptorProto} DescriptorProto
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                DescriptorProto.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.DescriptorProto();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1: {
                                message.name = reader.string();
                                break;
                            }
                        case 2: {
                                if (!(message.field && message.field.length))
                                    message.field = [];
                                message.field.push($root.google.protobuf.FieldDescriptorProto.decode(reader, reader.uint32()));
                                break;
                            }
                        case 6: {
                                if (!(message.extension && message.extension.length))
                                    message.extension = [];
                                message.extension.push($root.google.protobuf.FieldDescriptorProto.decode(reader, reader.uint32()));
                                break;
                            }
                        case 3: {
                                if (!(message.nestedType && message.nestedType.length))
                                    message.nestedType = [];
                                message.nestedType.push($root.google.protobuf.DescriptorProto.decode(reader, reader.uint32()));
                                break;
                            }
                        case 4: {
                                if (!(message.enumType && message.enumType.length))
                                    message.enumType = [];
                                message.enumType.push($root.google.protobuf.EnumDescriptorProto.decode(reader, reader.uint32()));
                                break;
                            }
                        case 5: {
                                if (!(message.extensionRange && message.extensionRange.length))
                                    message.extensionRange = [];
                                message.extensionRange.push($root.google.protobuf.DescriptorProto.ExtensionRange.decode(reader, reader.uint32()));
                                break;
                            }
                        case 8: {
                                if (!(message.oneofDecl && message.oneofDecl.length))
                                    message.oneofDecl = [];
                                message.oneofDecl.push($root.google.protobuf.OneofDescriptorProto.decode(reader, reader.uint32()));
                                break;
                            }
                        case 7: {
                                message.options = $root.google.protobuf.MessageOptions.decode(reader, reader.uint32());
                                break;
                            }
                        case 9: {
                                if (!(message.reservedRange && message.reservedRange.length))
                                    message.reservedRange = [];
                                message.reservedRange.push($root.google.protobuf.DescriptorProto.ReservedRange.decode(reader, reader.uint32()));
                                break;
                            }
                        case 10: {
                                if (!(message.reservedName && message.reservedName.length))
                                    message.reservedName = [];
                                message.reservedName.push(reader.string());
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a DescriptorProto message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.protobuf.DescriptorProto
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.protobuf.DescriptorProto} DescriptorProto
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                DescriptorProto.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a DescriptorProto message.
                 * @function verify
                 * @memberof google.protobuf.DescriptorProto
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                DescriptorProto.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.name != null && message.hasOwnProperty("name"))
                        if (!$util.isString(message.name))
                            return "name: string expected";
                    if (message.field != null && message.hasOwnProperty("field")) {
                        if (!Array.isArray(message.field))
                            return "field: array expected";
                        for (var i = 0; i < message.field.length; ++i) {
                            var error = $root.google.protobuf.FieldDescriptorProto.verify(message.field[i]);
                            if (error)
                                return "field." + error;
                        }
                    }
                    if (message.extension != null && message.hasOwnProperty("extension")) {
                        if (!Array.isArray(message.extension))
                            return "extension: array expected";
                        for (var i = 0; i < message.extension.length; ++i) {
                            var error = $root.google.protobuf.FieldDescriptorProto.verify(message.extension[i]);
                            if (error)
                                return "extension." + error;
                        }
                    }
                    if (message.nestedType != null && message.hasOwnProperty("nestedType")) {
                        if (!Array.isArray(message.nestedType))
                            return "nestedType: array expected";
                        for (var i = 0; i < message.nestedType.length; ++i) {
                            var error = $root.google.protobuf.DescriptorProto.verify(message.nestedType[i]);
                            if (error)
                                return "nestedType." + error;
                        }
                    }
                    if (message.enumType != null && message.hasOwnProperty("enumType")) {
                        if (!Array.isArray(message.enumType))
                            return "enumType: array expected";
                        for (var i = 0; i < message.enumType.length; ++i) {
                            var error = $root.google.protobuf.EnumDescriptorProto.verify(message.enumType[i]);
                            if (error)
                                return "enumType." + error;
                        }
                    }
                    if (message.extensionRange != null && message.hasOwnProperty("extensionRange")) {
                        if (!Array.isArray(message.extensionRange))
                            return "extensionRange: array expected";
                        for (var i = 0; i < message.extensionRange.length; ++i) {
                            var error = $root.google.protobuf.DescriptorProto.ExtensionRange.verify(message.extensionRange[i]);
                            if (error)
                                return "extensionRange." + error;
                        }
                    }
                    if (message.oneofDecl != null && message.hasOwnProperty("oneofDecl")) {
                        if (!Array.isArray(message.oneofDecl))
                            return "oneofDecl: array expected";
                        for (var i = 0; i < message.oneofDecl.length; ++i) {
                            var error = $root.google.protobuf.OneofDescriptorProto.verify(message.oneofDecl[i]);
                            if (error)
                                return "oneofDecl." + error;
                        }
                    }
                    if (message.options != null && message.hasOwnProperty("options")) {
                        var error = $root.google.protobuf.MessageOptions.verify(message.options);
                        if (error)
                            return "options." + error;
                    }
                    if (message.reservedRange != null && message.hasOwnProperty("reservedRange")) {
                        if (!Array.isArray(message.reservedRange))
                            return "reservedRange: array expected";
                        for (var i = 0; i < message.reservedRange.length; ++i) {
                            var error = $root.google.protobuf.DescriptorProto.ReservedRange.verify(message.reservedRange[i]);
                            if (error)
                                return "reservedRange." + error;
                        }
                    }
                    if (message.reservedName != null && message.hasOwnProperty("reservedName")) {
                        if (!Array.isArray(message.reservedName))
                            return "reservedName: array expected";
                        for (var i = 0; i < message.reservedName.length; ++i)
                            if (!$util.isString(message.reservedName[i]))
                                return "reservedName: string[] expected";
                    }
                    return null;
                };
    
                /**
                 * Creates a DescriptorProto message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.protobuf.DescriptorProto
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.protobuf.DescriptorProto} DescriptorProto
                 */
                DescriptorProto.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.protobuf.DescriptorProto)
                        return object;
                    var message = new $root.google.protobuf.DescriptorProto();
                    if (object.name != null)
                        message.name = String(object.name);
                    if (object.field) {
                        if (!Array.isArray(object.field))
                            throw TypeError(".google.protobuf.DescriptorProto.field: array expected");
                        message.field = [];
                        for (var i = 0; i < object.field.length; ++i) {
                            if (typeof object.field[i] !== "object")
                                throw TypeError(".google.protobuf.DescriptorProto.field: object expected");
                            message.field[i] = $root.google.protobuf.FieldDescriptorProto.fromObject(object.field[i]);
                        }
                    }
                    if (object.extension) {
                        if (!Array.isArray(object.extension))
                            throw TypeError(".google.protobuf.DescriptorProto.extension: array expected");
                        message.extension = [];
                        for (var i = 0; i < object.extension.length; ++i) {
                            if (typeof object.extension[i] !== "object")
                                throw TypeError(".google.protobuf.DescriptorProto.extension: object expected");
                            message.extension[i] = $root.google.protobuf.FieldDescriptorProto.fromObject(object.extension[i]);
                        }
                    }
                    if (object.nestedType) {
                        if (!Array.isArray(object.nestedType))
                            throw TypeError(".google.protobuf.DescriptorProto.nestedType: array expected");
                        message.nestedType = [];
                        for (var i = 0; i < object.nestedType.length; ++i) {
                            if (typeof object.nestedType[i] !== "object")
                                throw TypeError(".google.protobuf.DescriptorProto.nestedType: object expected");
                            message.nestedType[i] = $root.google.protobuf.DescriptorProto.fromObject(object.nestedType[i]);
                        }
                    }
                    if (object.enumType) {
                        if (!Array.isArray(object.enumType))
                            throw TypeError(".google.protobuf.DescriptorProto.enumType: array expected");
                        message.enumType = [];
                        for (var i = 0; i < object.enumType.length; ++i) {
                            if (typeof object.enumType[i] !== "object")
                                throw TypeError(".google.protobuf.DescriptorProto.enumType: object expected");
                            message.enumType[i] = $root.google.protobuf.EnumDescriptorProto.fromObject(object.enumType[i]);
                        }
                    }
                    if (object.extensionRange) {
                        if (!Array.isArray(object.extensionRange))
                            throw TypeError(".google.protobuf.DescriptorProto.extensionRange: array expected");
                        message.extensionRange = [];
                        for (var i = 0; i < object.extensionRange.length; ++i) {
                            if (typeof object.extensionRange[i] !== "object")
                                throw TypeError(".google.protobuf.DescriptorProto.extensionRange: object expected");
                            message.extensionRange[i] = $root.google.protobuf.DescriptorProto.ExtensionRange.fromObject(object.extensionRange[i]);
                        }
                    }
                    if (object.oneofDecl) {
                        if (!Array.isArray(object.oneofDecl))
                            throw TypeError(".google.protobuf.DescriptorProto.oneofDecl: array expected");
                        message.oneofDecl = [];
                        for (var i = 0; i < object.oneofDecl.length; ++i) {
                            if (typeof object.oneofDecl[i] !== "object")
                                throw TypeError(".google.protobuf.DescriptorProto.oneofDecl: object expected");
                            message.oneofDecl[i] = $root.google.protobuf.OneofDescriptorProto.fromObject(object.oneofDecl[i]);
                        }
                    }
                    if (object.options != null) {
                        if (typeof object.options !== "object")
                            throw TypeError(".google.protobuf.DescriptorProto.options: object expected");
                        message.options = $root.google.protobuf.MessageOptions.fromObject(object.options);
                    }
                    if (object.reservedRange) {
                        if (!Array.isArray(object.reservedRange))
                            throw TypeError(".google.protobuf.DescriptorProto.reservedRange: array expected");
                        message.reservedRange = [];
                        for (var i = 0; i < object.reservedRange.length; ++i) {
                            if (typeof object.reservedRange[i] !== "object")
                                throw TypeError(".google.protobuf.DescriptorProto.reservedRange: object expected");
                            message.reservedRange[i] = $root.google.protobuf.DescriptorProto.ReservedRange.fromObject(object.reservedRange[i]);
                        }
                    }
                    if (object.reservedName) {
                        if (!Array.isArray(object.reservedName))
                            throw TypeError(".google.protobuf.DescriptorProto.reservedName: array expected");
                        message.reservedName = [];
                        for (var i = 0; i < object.reservedName.length; ++i)
                            message.reservedName[i] = String(object.reservedName[i]);
                    }
                    return message;
                };
    
                /**
                 * Creates a plain object from a DescriptorProto message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.protobuf.DescriptorProto
                 * @static
                 * @param {google.protobuf.DescriptorProto} message DescriptorProto
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                DescriptorProto.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.arrays || options.defaults) {
                        object.field = [];
                        object.nestedType = [];
                        object.enumType = [];
                        object.extensionRange = [];
                        object.extension = [];
                        object.oneofDecl = [];
                        object.reservedRange = [];
                        object.reservedName = [];
                    }
                    if (options.defaults) {
                        object.name = "";
                        object.options = null;
                    }
                    if (message.name != null && message.hasOwnProperty("name"))
                        object.name = message.name;
                    if (message.field && message.field.length) {
                        object.field = [];
                        for (var j = 0; j < message.field.length; ++j)
                            object.field[j] = $root.google.protobuf.FieldDescriptorProto.toObject(message.field[j], options);
                    }
                    if (message.nestedType && message.nestedType.length) {
                        object.nestedType = [];
                        for (var j = 0; j < message.nestedType.length; ++j)
                            object.nestedType[j] = $root.google.protobuf.DescriptorProto.toObject(message.nestedType[j], options);
                    }
                    if (message.enumType && message.enumType.length) {
                        object.enumType = [];
                        for (var j = 0; j < message.enumType.length; ++j)
                            object.enumType[j] = $root.google.protobuf.EnumDescriptorProto.toObject(message.enumType[j], options);
                    }
                    if (message.extensionRange && message.extensionRange.length) {
                        object.extensionRange = [];
                        for (var j = 0; j < message.extensionRange.length; ++j)
                            object.extensionRange[j] = $root.google.protobuf.DescriptorProto.ExtensionRange.toObject(message.extensionRange[j], options);
                    }
                    if (message.extension && message.extension.length) {
                        object.extension = [];
                        for (var j = 0; j < message.extension.length; ++j)
                            object.extension[j] = $root.google.protobuf.FieldDescriptorProto.toObject(message.extension[j], options);
                    }
                    if (message.options != null && message.hasOwnProperty("options"))
                        object.options = $root.google.protobuf.MessageOptions.toObject(message.options, options);
                    if (message.oneofDecl && message.oneofDecl.length) {
                        object.oneofDecl = [];
                        for (var j = 0; j < message.oneofDecl.length; ++j)
                            object.oneofDecl[j] = $root.google.protobuf.OneofDescriptorProto.toObject(message.oneofDecl[j], options);
                    }
                    if (message.reservedRange && message.reservedRange.length) {
                        object.reservedRange = [];
                        for (var j = 0; j < message.reservedRange.length; ++j)
                            object.reservedRange[j] = $root.google.protobuf.DescriptorProto.ReservedRange.toObject(message.reservedRange[j], options);
                    }
                    if (message.reservedName && message.reservedName.length) {
                        object.reservedName = [];
                        for (var j = 0; j < message.reservedName.length; ++j)
                            object.reservedName[j] = message.reservedName[j];
                    }
                    return object;
                };
    
                /**
                 * Converts this DescriptorProto to JSON.
                 * @function toJSON
                 * @memberof google.protobuf.DescriptorProto
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                DescriptorProto.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for DescriptorProto
                 * @function getTypeUrl
                 * @memberof google.protobuf.DescriptorProto
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                DescriptorProto.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.protobuf.DescriptorProto";
                };
    
                DescriptorProto.ExtensionRange = (function() {
    
                    /**
                     * Properties of an ExtensionRange.
                     * @memberof google.protobuf.DescriptorProto
                     * @interface IExtensionRange
                     * @property {number|null} [start] ExtensionRange start
                     * @property {number|null} [end] ExtensionRange end
                     * @property {google.protobuf.IExtensionRangeOptions|null} [options] ExtensionRange options
                     */
    
                    /**
                     * Constructs a new ExtensionRange.
                     * @memberof google.protobuf.DescriptorProto
                     * @classdesc Represents an ExtensionRange.
                     * @implements IExtensionRange
                     * @constructor
                     * @param {google.protobuf.DescriptorProto.IExtensionRange=} [properties] Properties to set
                     */
                    function ExtensionRange(properties) {
                        if (properties)
                            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                if (properties[keys[i]] != null)
                                    this[keys[i]] = properties[keys[i]];
                    }
    
                    /**
                     * ExtensionRange start.
                     * @member {number} start
                     * @memberof google.protobuf.DescriptorProto.ExtensionRange
                     * @instance
                     */
                    ExtensionRange.prototype.start = 0;
    
                    /**
                     * ExtensionRange end.
                     * @member {number} end
                     * @memberof google.protobuf.DescriptorProto.ExtensionRange
                     * @instance
                     */
                    ExtensionRange.prototype.end = 0;
    
                    /**
                     * ExtensionRange options.
                     * @member {google.protobuf.IExtensionRangeOptions|null|undefined} options
                     * @memberof google.protobuf.DescriptorProto.ExtensionRange
                     * @instance
                     */
                    ExtensionRange.prototype.options = null;
    
                    /**
                     * Creates a new ExtensionRange instance using the specified properties.
                     * @function create
                     * @memberof google.protobuf.DescriptorProto.ExtensionRange
                     * @static
                     * @param {google.protobuf.DescriptorProto.IExtensionRange=} [properties] Properties to set
                     * @returns {google.protobuf.DescriptorProto.ExtensionRange} ExtensionRange instance
                     */
                    ExtensionRange.create = function create(properties) {
                        return new ExtensionRange(properties);
                    };
    
                    /**
                     * Encodes the specified ExtensionRange message. Does not implicitly {@link google.protobuf.DescriptorProto.ExtensionRange.verify|verify} messages.
                     * @function encode
                     * @memberof google.protobuf.DescriptorProto.ExtensionRange
                     * @static
                     * @param {google.protobuf.DescriptorProto.IExtensionRange} message ExtensionRange message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    ExtensionRange.encode = function encode(message, writer) {
                        if (!writer)
                            writer = $Writer.create();
                        if (message.start != null && Object.hasOwnProperty.call(message, "start"))
                            writer.uint32(/* id 1, wireType 0 =*/8).int32(message.start);
                        if (message.end != null && Object.hasOwnProperty.call(message, "end"))
                            writer.uint32(/* id 2, wireType 0 =*/16).int32(message.end);
                        if (message.options != null && Object.hasOwnProperty.call(message, "options"))
                            $root.google.protobuf.ExtensionRangeOptions.encode(message.options, writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();
                        return writer;
                    };
    
                    /**
                     * Encodes the specified ExtensionRange message, length delimited. Does not implicitly {@link google.protobuf.DescriptorProto.ExtensionRange.verify|verify} messages.
                     * @function encodeDelimited
                     * @memberof google.protobuf.DescriptorProto.ExtensionRange
                     * @static
                     * @param {google.protobuf.DescriptorProto.IExtensionRange} message ExtensionRange message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    ExtensionRange.encodeDelimited = function encodeDelimited(message, writer) {
                        return this.encode(message, writer).ldelim();
                    };
    
                    /**
                     * Decodes an ExtensionRange message from the specified reader or buffer.
                     * @function decode
                     * @memberof google.protobuf.DescriptorProto.ExtensionRange
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @param {number} [length] Message length if known beforehand
                     * @returns {google.protobuf.DescriptorProto.ExtensionRange} ExtensionRange
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    ExtensionRange.decode = function decode(reader, length) {
                        if (!(reader instanceof $Reader))
                            reader = $Reader.create(reader);
                        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.DescriptorProto.ExtensionRange();
                        while (reader.pos < end) {
                            var tag = reader.uint32();
                            switch (tag >>> 3) {
                            case 1: {
                                    message.start = reader.int32();
                                    break;
                                }
                            case 2: {
                                    message.end = reader.int32();
                                    break;
                                }
                            case 3: {
                                    message.options = $root.google.protobuf.ExtensionRangeOptions.decode(reader, reader.uint32());
                                    break;
                                }
                            default:
                                reader.skipType(tag & 7);
                                break;
                            }
                        }
                        return message;
                    };
    
                    /**
                     * Decodes an ExtensionRange message from the specified reader or buffer, length delimited.
                     * @function decodeDelimited
                     * @memberof google.protobuf.DescriptorProto.ExtensionRange
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @returns {google.protobuf.DescriptorProto.ExtensionRange} ExtensionRange
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    ExtensionRange.decodeDelimited = function decodeDelimited(reader) {
                        if (!(reader instanceof $Reader))
                            reader = new $Reader(reader);
                        return this.decode(reader, reader.uint32());
                    };
    
                    /**
                     * Verifies an ExtensionRange message.
                     * @function verify
                     * @memberof google.protobuf.DescriptorProto.ExtensionRange
                     * @static
                     * @param {Object.<string,*>} message Plain object to verify
                     * @returns {string|null} `null` if valid, otherwise the reason why it is not
                     */
                    ExtensionRange.verify = function verify(message) {
                        if (typeof message !== "object" || message === null)
                            return "object expected";
                        if (message.start != null && message.hasOwnProperty("start"))
                            if (!$util.isInteger(message.start))
                                return "start: integer expected";
                        if (message.end != null && message.hasOwnProperty("end"))
                            if (!$util.isInteger(message.end))
                                return "end: integer expected";
                        if (message.options != null && message.hasOwnProperty("options")) {
                            var error = $root.google.protobuf.ExtensionRangeOptions.verify(message.options);
                            if (error)
                                return "options." + error;
                        }
                        return null;
                    };
    
                    /**
                     * Creates an ExtensionRange message from a plain object. Also converts values to their respective internal types.
                     * @function fromObject
                     * @memberof google.protobuf.DescriptorProto.ExtensionRange
                     * @static
                     * @param {Object.<string,*>} object Plain object
                     * @returns {google.protobuf.DescriptorProto.ExtensionRange} ExtensionRange
                     */
                    ExtensionRange.fromObject = function fromObject(object) {
                        if (object instanceof $root.google.protobuf.DescriptorProto.ExtensionRange)
                            return object;
                        var message = new $root.google.protobuf.DescriptorProto.ExtensionRange();
                        if (object.start != null)
                            message.start = object.start | 0;
                        if (object.end != null)
                            message.end = object.end | 0;
                        if (object.options != null) {
                            if (typeof object.options !== "object")
                                throw TypeError(".google.protobuf.DescriptorProto.ExtensionRange.options: object expected");
                            message.options = $root.google.protobuf.ExtensionRangeOptions.fromObject(object.options);
                        }
                        return message;
                    };
    
                    /**
                     * Creates a plain object from an ExtensionRange message. Also converts values to other types if specified.
                     * @function toObject
                     * @memberof google.protobuf.DescriptorProto.ExtensionRange
                     * @static
                     * @param {google.protobuf.DescriptorProto.ExtensionRange} message ExtensionRange
                     * @param {$protobuf.IConversionOptions} [options] Conversion options
                     * @returns {Object.<string,*>} Plain object
                     */
                    ExtensionRange.toObject = function toObject(message, options) {
                        if (!options)
                            options = {};
                        var object = {};
                        if (options.defaults) {
                            object.start = 0;
                            object.end = 0;
                            object.options = null;
                        }
                        if (message.start != null && message.hasOwnProperty("start"))
                            object.start = message.start;
                        if (message.end != null && message.hasOwnProperty("end"))
                            object.end = message.end;
                        if (message.options != null && message.hasOwnProperty("options"))
                            object.options = $root.google.protobuf.ExtensionRangeOptions.toObject(message.options, options);
                        return object;
                    };
    
                    /**
                     * Converts this ExtensionRange to JSON.
                     * @function toJSON
                     * @memberof google.protobuf.DescriptorProto.ExtensionRange
                     * @instance
                     * @returns {Object.<string,*>} JSON object
                     */
                    ExtensionRange.prototype.toJSON = function toJSON() {
                        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                    };
    
                    /**
                     * Gets the default type url for ExtensionRange
                     * @function getTypeUrl
                     * @memberof google.protobuf.DescriptorProto.ExtensionRange
                     * @static
                     * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                     * @returns {string} The default type url
                     */
                    ExtensionRange.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                        if (typeUrlPrefix === undefined) {
                            typeUrlPrefix = "type.googleapis.com";
                        }
                        return typeUrlPrefix + "/google.protobuf.DescriptorProto.ExtensionRange";
                    };
    
                    return ExtensionRange;
                })();
    
                DescriptorProto.ReservedRange = (function() {
    
                    /**
                     * Properties of a ReservedRange.
                     * @memberof google.protobuf.DescriptorProto
                     * @interface IReservedRange
                     * @property {number|null} [start] ReservedRange start
                     * @property {number|null} [end] ReservedRange end
                     */
    
                    /**
                     * Constructs a new ReservedRange.
                     * @memberof google.protobuf.DescriptorProto
                     * @classdesc Represents a ReservedRange.
                     * @implements IReservedRange
                     * @constructor
                     * @param {google.protobuf.DescriptorProto.IReservedRange=} [properties] Properties to set
                     */
                    function ReservedRange(properties) {
                        if (properties)
                            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                if (properties[keys[i]] != null)
                                    this[keys[i]] = properties[keys[i]];
                    }
    
                    /**
                     * ReservedRange start.
                     * @member {number} start
                     * @memberof google.protobuf.DescriptorProto.ReservedRange
                     * @instance
                     */
                    ReservedRange.prototype.start = 0;
    
                    /**
                     * ReservedRange end.
                     * @member {number} end
                     * @memberof google.protobuf.DescriptorProto.ReservedRange
                     * @instance
                     */
                    ReservedRange.prototype.end = 0;
    
                    /**
                     * Creates a new ReservedRange instance using the specified properties.
                     * @function create
                     * @memberof google.protobuf.DescriptorProto.ReservedRange
                     * @static
                     * @param {google.protobuf.DescriptorProto.IReservedRange=} [properties] Properties to set
                     * @returns {google.protobuf.DescriptorProto.ReservedRange} ReservedRange instance
                     */
                    ReservedRange.create = function create(properties) {
                        return new ReservedRange(properties);
                    };
    
                    /**
                     * Encodes the specified ReservedRange message. Does not implicitly {@link google.protobuf.DescriptorProto.ReservedRange.verify|verify} messages.
                     * @function encode
                     * @memberof google.protobuf.DescriptorProto.ReservedRange
                     * @static
                     * @param {google.protobuf.DescriptorProto.IReservedRange} message ReservedRange message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    ReservedRange.encode = function encode(message, writer) {
                        if (!writer)
                            writer = $Writer.create();
                        if (message.start != null && Object.hasOwnProperty.call(message, "start"))
                            writer.uint32(/* id 1, wireType 0 =*/8).int32(message.start);
                        if (message.end != null && Object.hasOwnProperty.call(message, "end"))
                            writer.uint32(/* id 2, wireType 0 =*/16).int32(message.end);
                        return writer;
                    };
    
                    /**
                     * Encodes the specified ReservedRange message, length delimited. Does not implicitly {@link google.protobuf.DescriptorProto.ReservedRange.verify|verify} messages.
                     * @function encodeDelimited
                     * @memberof google.protobuf.DescriptorProto.ReservedRange
                     * @static
                     * @param {google.protobuf.DescriptorProto.IReservedRange} message ReservedRange message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    ReservedRange.encodeDelimited = function encodeDelimited(message, writer) {
                        return this.encode(message, writer).ldelim();
                    };
    
                    /**
                     * Decodes a ReservedRange message from the specified reader or buffer.
                     * @function decode
                     * @memberof google.protobuf.DescriptorProto.ReservedRange
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @param {number} [length] Message length if known beforehand
                     * @returns {google.protobuf.DescriptorProto.ReservedRange} ReservedRange
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    ReservedRange.decode = function decode(reader, length) {
                        if (!(reader instanceof $Reader))
                            reader = $Reader.create(reader);
                        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.DescriptorProto.ReservedRange();
                        while (reader.pos < end) {
                            var tag = reader.uint32();
                            switch (tag >>> 3) {
                            case 1: {
                                    message.start = reader.int32();
                                    break;
                                }
                            case 2: {
                                    message.end = reader.int32();
                                    break;
                                }
                            default:
                                reader.skipType(tag & 7);
                                break;
                            }
                        }
                        return message;
                    };
    
                    /**
                     * Decodes a ReservedRange message from the specified reader or buffer, length delimited.
                     * @function decodeDelimited
                     * @memberof google.protobuf.DescriptorProto.ReservedRange
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @returns {google.protobuf.DescriptorProto.ReservedRange} ReservedRange
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    ReservedRange.decodeDelimited = function decodeDelimited(reader) {
                        if (!(reader instanceof $Reader))
                            reader = new $Reader(reader);
                        return this.decode(reader, reader.uint32());
                    };
    
                    /**
                     * Verifies a ReservedRange message.
                     * @function verify
                     * @memberof google.protobuf.DescriptorProto.ReservedRange
                     * @static
                     * @param {Object.<string,*>} message Plain object to verify
                     * @returns {string|null} `null` if valid, otherwise the reason why it is not
                     */
                    ReservedRange.verify = function verify(message) {
                        if (typeof message !== "object" || message === null)
                            return "object expected";
                        if (message.start != null && message.hasOwnProperty("start"))
                            if (!$util.isInteger(message.start))
                                return "start: integer expected";
                        if (message.end != null && message.hasOwnProperty("end"))
                            if (!$util.isInteger(message.end))
                                return "end: integer expected";
                        return null;
                    };
    
                    /**
                     * Creates a ReservedRange message from a plain object. Also converts values to their respective internal types.
                     * @function fromObject
                     * @memberof google.protobuf.DescriptorProto.ReservedRange
                     * @static
                     * @param {Object.<string,*>} object Plain object
                     * @returns {google.protobuf.DescriptorProto.ReservedRange} ReservedRange
                     */
                    ReservedRange.fromObject = function fromObject(object) {
                        if (object instanceof $root.google.protobuf.DescriptorProto.ReservedRange)
                            return object;
                        var message = new $root.google.protobuf.DescriptorProto.ReservedRange();
                        if (object.start != null)
                            message.start = object.start | 0;
                        if (object.end != null)
                            message.end = object.end | 0;
                        return message;
                    };
    
                    /**
                     * Creates a plain object from a ReservedRange message. Also converts values to other types if specified.
                     * @function toObject
                     * @memberof google.protobuf.DescriptorProto.ReservedRange
                     * @static
                     * @param {google.protobuf.DescriptorProto.ReservedRange} message ReservedRange
                     * @param {$protobuf.IConversionOptions} [options] Conversion options
                     * @returns {Object.<string,*>} Plain object
                     */
                    ReservedRange.toObject = function toObject(message, options) {
                        if (!options)
                            options = {};
                        var object = {};
                        if (options.defaults) {
                            object.start = 0;
                            object.end = 0;
                        }
                        if (message.start != null && message.hasOwnProperty("start"))
                            object.start = message.start;
                        if (message.end != null && message.hasOwnProperty("end"))
                            object.end = message.end;
                        return object;
                    };
    
                    /**
                     * Converts this ReservedRange to JSON.
                     * @function toJSON
                     * @memberof google.protobuf.DescriptorProto.ReservedRange
                     * @instance
                     * @returns {Object.<string,*>} JSON object
                     */
                    ReservedRange.prototype.toJSON = function toJSON() {
                        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                    };
    
                    /**
                     * Gets the default type url for ReservedRange
                     * @function getTypeUrl
                     * @memberof google.protobuf.DescriptorProto.ReservedRange
                     * @static
                     * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                     * @returns {string} The default type url
                     */
                    ReservedRange.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                        if (typeUrlPrefix === undefined) {
                            typeUrlPrefix = "type.googleapis.com";
                        }
                        return typeUrlPrefix + "/google.protobuf.DescriptorProto.ReservedRange";
                    };
    
                    return ReservedRange;
                })();
    
                return DescriptorProto;
            })();
    
            protobuf.ExtensionRangeOptions = (function() {
    
                /**
                 * Properties of an ExtensionRangeOptions.
                 * @memberof google.protobuf
                 * @interface IExtensionRangeOptions
                 * @property {Array.<google.protobuf.IUninterpretedOption>|null} [uninterpretedOption] ExtensionRangeOptions uninterpretedOption
                 */
    
                /**
                 * Constructs a new ExtensionRangeOptions.
                 * @memberof google.protobuf
                 * @classdesc Represents an ExtensionRangeOptions.
                 * @implements IExtensionRangeOptions
                 * @constructor
                 * @param {google.protobuf.IExtensionRangeOptions=} [properties] Properties to set
                 */
                function ExtensionRangeOptions(properties) {
                    this.uninterpretedOption = [];
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * ExtensionRangeOptions uninterpretedOption.
                 * @member {Array.<google.protobuf.IUninterpretedOption>} uninterpretedOption
                 * @memberof google.protobuf.ExtensionRangeOptions
                 * @instance
                 */
                ExtensionRangeOptions.prototype.uninterpretedOption = $util.emptyArray;
    
                /**
                 * Creates a new ExtensionRangeOptions instance using the specified properties.
                 * @function create
                 * @memberof google.protobuf.ExtensionRangeOptions
                 * @static
                 * @param {google.protobuf.IExtensionRangeOptions=} [properties] Properties to set
                 * @returns {google.protobuf.ExtensionRangeOptions} ExtensionRangeOptions instance
                 */
                ExtensionRangeOptions.create = function create(properties) {
                    return new ExtensionRangeOptions(properties);
                };
    
                /**
                 * Encodes the specified ExtensionRangeOptions message. Does not implicitly {@link google.protobuf.ExtensionRangeOptions.verify|verify} messages.
                 * @function encode
                 * @memberof google.protobuf.ExtensionRangeOptions
                 * @static
                 * @param {google.protobuf.IExtensionRangeOptions} message ExtensionRangeOptions message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                ExtensionRangeOptions.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.uninterpretedOption != null && message.uninterpretedOption.length)
                        for (var i = 0; i < message.uninterpretedOption.length; ++i)
                            $root.google.protobuf.UninterpretedOption.encode(message.uninterpretedOption[i], writer.uint32(/* id 999, wireType 2 =*/7994).fork()).ldelim();
                    return writer;
                };
    
                /**
                 * Encodes the specified ExtensionRangeOptions message, length delimited. Does not implicitly {@link google.protobuf.ExtensionRangeOptions.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.protobuf.ExtensionRangeOptions
                 * @static
                 * @param {google.protobuf.IExtensionRangeOptions} message ExtensionRangeOptions message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                ExtensionRangeOptions.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes an ExtensionRangeOptions message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.protobuf.ExtensionRangeOptions
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.protobuf.ExtensionRangeOptions} ExtensionRangeOptions
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                ExtensionRangeOptions.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.ExtensionRangeOptions();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 999: {
                                if (!(message.uninterpretedOption && message.uninterpretedOption.length))
                                    message.uninterpretedOption = [];
                                message.uninterpretedOption.push($root.google.protobuf.UninterpretedOption.decode(reader, reader.uint32()));
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes an ExtensionRangeOptions message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.protobuf.ExtensionRangeOptions
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.protobuf.ExtensionRangeOptions} ExtensionRangeOptions
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                ExtensionRangeOptions.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies an ExtensionRangeOptions message.
                 * @function verify
                 * @memberof google.protobuf.ExtensionRangeOptions
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                ExtensionRangeOptions.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.uninterpretedOption != null && message.hasOwnProperty("uninterpretedOption")) {
                        if (!Array.isArray(message.uninterpretedOption))
                            return "uninterpretedOption: array expected";
                        for (var i = 0; i < message.uninterpretedOption.length; ++i) {
                            var error = $root.google.protobuf.UninterpretedOption.verify(message.uninterpretedOption[i]);
                            if (error)
                                return "uninterpretedOption." + error;
                        }
                    }
                    return null;
                };
    
                /**
                 * Creates an ExtensionRangeOptions message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.protobuf.ExtensionRangeOptions
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.protobuf.ExtensionRangeOptions} ExtensionRangeOptions
                 */
                ExtensionRangeOptions.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.protobuf.ExtensionRangeOptions)
                        return object;
                    var message = new $root.google.protobuf.ExtensionRangeOptions();
                    if (object.uninterpretedOption) {
                        if (!Array.isArray(object.uninterpretedOption))
                            throw TypeError(".google.protobuf.ExtensionRangeOptions.uninterpretedOption: array expected");
                        message.uninterpretedOption = [];
                        for (var i = 0; i < object.uninterpretedOption.length; ++i) {
                            if (typeof object.uninterpretedOption[i] !== "object")
                                throw TypeError(".google.protobuf.ExtensionRangeOptions.uninterpretedOption: object expected");
                            message.uninterpretedOption[i] = $root.google.protobuf.UninterpretedOption.fromObject(object.uninterpretedOption[i]);
                        }
                    }
                    return message;
                };
    
                /**
                 * Creates a plain object from an ExtensionRangeOptions message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.protobuf.ExtensionRangeOptions
                 * @static
                 * @param {google.protobuf.ExtensionRangeOptions} message ExtensionRangeOptions
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                ExtensionRangeOptions.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.arrays || options.defaults)
                        object.uninterpretedOption = [];
                    if (message.uninterpretedOption && message.uninterpretedOption.length) {
                        object.uninterpretedOption = [];
                        for (var j = 0; j < message.uninterpretedOption.length; ++j)
                            object.uninterpretedOption[j] = $root.google.protobuf.UninterpretedOption.toObject(message.uninterpretedOption[j], options);
                    }
                    return object;
                };
    
                /**
                 * Converts this ExtensionRangeOptions to JSON.
                 * @function toJSON
                 * @memberof google.protobuf.ExtensionRangeOptions
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                ExtensionRangeOptions.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for ExtensionRangeOptions
                 * @function getTypeUrl
                 * @memberof google.protobuf.ExtensionRangeOptions
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                ExtensionRangeOptions.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.protobuf.ExtensionRangeOptions";
                };
    
                return ExtensionRangeOptions;
            })();
    
            protobuf.FieldDescriptorProto = (function() {
    
                /**
                 * Properties of a FieldDescriptorProto.
                 * @memberof google.protobuf
                 * @interface IFieldDescriptorProto
                 * @property {string|null} [name] FieldDescriptorProto name
                 * @property {number|null} [number] FieldDescriptorProto number
                 * @property {google.protobuf.FieldDescriptorProto.Label|null} [label] FieldDescriptorProto label
                 * @property {google.protobuf.FieldDescriptorProto.Type|null} [type] FieldDescriptorProto type
                 * @property {string|null} [typeName] FieldDescriptorProto typeName
                 * @property {string|null} [extendee] FieldDescriptorProto extendee
                 * @property {string|null} [defaultValue] FieldDescriptorProto defaultValue
                 * @property {number|null} [oneofIndex] FieldDescriptorProto oneofIndex
                 * @property {string|null} [jsonName] FieldDescriptorProto jsonName
                 * @property {google.protobuf.IFieldOptions|null} [options] FieldDescriptorProto options
                 * @property {boolean|null} [proto3Optional] FieldDescriptorProto proto3Optional
                 */
    
                /**
                 * Constructs a new FieldDescriptorProto.
                 * @memberof google.protobuf
                 * @classdesc Represents a FieldDescriptorProto.
                 * @implements IFieldDescriptorProto
                 * @constructor
                 * @param {google.protobuf.IFieldDescriptorProto=} [properties] Properties to set
                 */
                function FieldDescriptorProto(properties) {
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * FieldDescriptorProto name.
                 * @member {string} name
                 * @memberof google.protobuf.FieldDescriptorProto
                 * @instance
                 */
                FieldDescriptorProto.prototype.name = "";
    
                /**
                 * FieldDescriptorProto number.
                 * @member {number} number
                 * @memberof google.protobuf.FieldDescriptorProto
                 * @instance
                 */
                FieldDescriptorProto.prototype.number = 0;
    
                /**
                 * FieldDescriptorProto label.
                 * @member {google.protobuf.FieldDescriptorProto.Label} label
                 * @memberof google.protobuf.FieldDescriptorProto
                 * @instance
                 */
                FieldDescriptorProto.prototype.label = 1;
    
                /**
                 * FieldDescriptorProto type.
                 * @member {google.protobuf.FieldDescriptorProto.Type} type
                 * @memberof google.protobuf.FieldDescriptorProto
                 * @instance
                 */
                FieldDescriptorProto.prototype.type = 1;
    
                /**
                 * FieldDescriptorProto typeName.
                 * @member {string} typeName
                 * @memberof google.protobuf.FieldDescriptorProto
                 * @instance
                 */
                FieldDescriptorProto.prototype.typeName = "";
    
                /**
                 * FieldDescriptorProto extendee.
                 * @member {string} extendee
                 * @memberof google.protobuf.FieldDescriptorProto
                 * @instance
                 */
                FieldDescriptorProto.prototype.extendee = "";
    
                /**
                 * FieldDescriptorProto defaultValue.
                 * @member {string} defaultValue
                 * @memberof google.protobuf.FieldDescriptorProto
                 * @instance
                 */
                FieldDescriptorProto.prototype.defaultValue = "";
    
                /**
                 * FieldDescriptorProto oneofIndex.
                 * @member {number} oneofIndex
                 * @memberof google.protobuf.FieldDescriptorProto
                 * @instance
                 */
                FieldDescriptorProto.prototype.oneofIndex = 0;
    
                /**
                 * FieldDescriptorProto jsonName.
                 * @member {string} jsonName
                 * @memberof google.protobuf.FieldDescriptorProto
                 * @instance
                 */
                FieldDescriptorProto.prototype.jsonName = "";
    
                /**
                 * FieldDescriptorProto options.
                 * @member {google.protobuf.IFieldOptions|null|undefined} options
                 * @memberof google.protobuf.FieldDescriptorProto
                 * @instance
                 */
                FieldDescriptorProto.prototype.options = null;
    
                /**
                 * FieldDescriptorProto proto3Optional.
                 * @member {boolean} proto3Optional
                 * @memberof google.protobuf.FieldDescriptorProto
                 * @instance
                 */
                FieldDescriptorProto.prototype.proto3Optional = false;
    
                /**
                 * Creates a new FieldDescriptorProto instance using the specified properties.
                 * @function create
                 * @memberof google.protobuf.FieldDescriptorProto
                 * @static
                 * @param {google.protobuf.IFieldDescriptorProto=} [properties] Properties to set
                 * @returns {google.protobuf.FieldDescriptorProto} FieldDescriptorProto instance
                 */
                FieldDescriptorProto.create = function create(properties) {
                    return new FieldDescriptorProto(properties);
                };
    
                /**
                 * Encodes the specified FieldDescriptorProto message. Does not implicitly {@link google.protobuf.FieldDescriptorProto.verify|verify} messages.
                 * @function encode
                 * @memberof google.protobuf.FieldDescriptorProto
                 * @static
                 * @param {google.protobuf.IFieldDescriptorProto} message FieldDescriptorProto message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                FieldDescriptorProto.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                        writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                    if (message.extendee != null && Object.hasOwnProperty.call(message, "extendee"))
                        writer.uint32(/* id 2, wireType 2 =*/18).string(message.extendee);
                    if (message.number != null && Object.hasOwnProperty.call(message, "number"))
                        writer.uint32(/* id 3, wireType 0 =*/24).int32(message.number);
                    if (message.label != null && Object.hasOwnProperty.call(message, "label"))
                        writer.uint32(/* id 4, wireType 0 =*/32).int32(message.label);
                    if (message.type != null && Object.hasOwnProperty.call(message, "type"))
                        writer.uint32(/* id 5, wireType 0 =*/40).int32(message.type);
                    if (message.typeName != null && Object.hasOwnProperty.call(message, "typeName"))
                        writer.uint32(/* id 6, wireType 2 =*/50).string(message.typeName);
                    if (message.defaultValue != null && Object.hasOwnProperty.call(message, "defaultValue"))
                        writer.uint32(/* id 7, wireType 2 =*/58).string(message.defaultValue);
                    if (message.options != null && Object.hasOwnProperty.call(message, "options"))
                        $root.google.protobuf.FieldOptions.encode(message.options, writer.uint32(/* id 8, wireType 2 =*/66).fork()).ldelim();
                    if (message.oneofIndex != null && Object.hasOwnProperty.call(message, "oneofIndex"))
                        writer.uint32(/* id 9, wireType 0 =*/72).int32(message.oneofIndex);
                    if (message.jsonName != null && Object.hasOwnProperty.call(message, "jsonName"))
                        writer.uint32(/* id 10, wireType 2 =*/82).string(message.jsonName);
                    if (message.proto3Optional != null && Object.hasOwnProperty.call(message, "proto3Optional"))
                        writer.uint32(/* id 17, wireType 0 =*/136).bool(message.proto3Optional);
                    return writer;
                };
    
                /**
                 * Encodes the specified FieldDescriptorProto message, length delimited. Does not implicitly {@link google.protobuf.FieldDescriptorProto.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.protobuf.FieldDescriptorProto
                 * @static
                 * @param {google.protobuf.IFieldDescriptorProto} message FieldDescriptorProto message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                FieldDescriptorProto.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a FieldDescriptorProto message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.protobuf.FieldDescriptorProto
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.protobuf.FieldDescriptorProto} FieldDescriptorProto
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                FieldDescriptorProto.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.FieldDescriptorProto();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1: {
                                message.name = reader.string();
                                break;
                            }
                        case 3: {
                                message.number = reader.int32();
                                break;
                            }
                        case 4: {
                                message.label = reader.int32();
                                break;
                            }
                        case 5: {
                                message.type = reader.int32();
                                break;
                            }
                        case 6: {
                                message.typeName = reader.string();
                                break;
                            }
                        case 2: {
                                message.extendee = reader.string();
                                break;
                            }
                        case 7: {
                                message.defaultValue = reader.string();
                                break;
                            }
                        case 9: {
                                message.oneofIndex = reader.int32();
                                break;
                            }
                        case 10: {
                                message.jsonName = reader.string();
                                break;
                            }
                        case 8: {
                                message.options = $root.google.protobuf.FieldOptions.decode(reader, reader.uint32());
                                break;
                            }
                        case 17: {
                                message.proto3Optional = reader.bool();
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a FieldDescriptorProto message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.protobuf.FieldDescriptorProto
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.protobuf.FieldDescriptorProto} FieldDescriptorProto
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                FieldDescriptorProto.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a FieldDescriptorProto message.
                 * @function verify
                 * @memberof google.protobuf.FieldDescriptorProto
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                FieldDescriptorProto.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.name != null && message.hasOwnProperty("name"))
                        if (!$util.isString(message.name))
                            return "name: string expected";
                    if (message.number != null && message.hasOwnProperty("number"))
                        if (!$util.isInteger(message.number))
                            return "number: integer expected";
                    if (message.label != null && message.hasOwnProperty("label"))
                        switch (message.label) {
                        default:
                            return "label: enum value expected";
                        case 1:
                        case 2:
                        case 3:
                            break;
                        }
                    if (message.type != null && message.hasOwnProperty("type"))
                        switch (message.type) {
                        default:
                            return "type: enum value expected";
                        case 1:
                        case 2:
                        case 3:
                        case 4:
                        case 5:
                        case 6:
                        case 7:
                        case 8:
                        case 9:
                        case 10:
                        case 11:
                        case 12:
                        case 13:
                        case 14:
                        case 15:
                        case 16:
                        case 17:
                        case 18:
                            break;
                        }
                    if (message.typeName != null && message.hasOwnProperty("typeName"))
                        if (!$util.isString(message.typeName))
                            return "typeName: string expected";
                    if (message.extendee != null && message.hasOwnProperty("extendee"))
                        if (!$util.isString(message.extendee))
                            return "extendee: string expected";
                    if (message.defaultValue != null && message.hasOwnProperty("defaultValue"))
                        if (!$util.isString(message.defaultValue))
                            return "defaultValue: string expected";
                    if (message.oneofIndex != null && message.hasOwnProperty("oneofIndex"))
                        if (!$util.isInteger(message.oneofIndex))
                            return "oneofIndex: integer expected";
                    if (message.jsonName != null && message.hasOwnProperty("jsonName"))
                        if (!$util.isString(message.jsonName))
                            return "jsonName: string expected";
                    if (message.options != null && message.hasOwnProperty("options")) {
                        var error = $root.google.protobuf.FieldOptions.verify(message.options);
                        if (error)
                            return "options." + error;
                    }
                    if (message.proto3Optional != null && message.hasOwnProperty("proto3Optional"))
                        if (typeof message.proto3Optional !== "boolean")
                            return "proto3Optional: boolean expected";
                    return null;
                };
    
                /**
                 * Creates a FieldDescriptorProto message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.protobuf.FieldDescriptorProto
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.protobuf.FieldDescriptorProto} FieldDescriptorProto
                 */
                FieldDescriptorProto.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.protobuf.FieldDescriptorProto)
                        return object;
                    var message = new $root.google.protobuf.FieldDescriptorProto();
                    if (object.name != null)
                        message.name = String(object.name);
                    if (object.number != null)
                        message.number = object.number | 0;
                    switch (object.label) {
                    default:
                        if (typeof object.label === "number") {
                            message.label = object.label;
                            break;
                        }
                        break;
                    case "LABEL_OPTIONAL":
                    case 1:
                        message.label = 1;
                        break;
                    case "LABEL_REQUIRED":
                    case 2:
                        message.label = 2;
                        break;
                    case "LABEL_REPEATED":
                    case 3:
                        message.label = 3;
                        break;
                    }
                    switch (object.type) {
                    default:
                        if (typeof object.type === "number") {
                            message.type = object.type;
                            break;
                        }
                        break;
                    case "TYPE_DOUBLE":
                    case 1:
                        message.type = 1;
                        break;
                    case "TYPE_FLOAT":
                    case 2:
                        message.type = 2;
                        break;
                    case "TYPE_INT64":
                    case 3:
                        message.type = 3;
                        break;
                    case "TYPE_UINT64":
                    case 4:
                        message.type = 4;
                        break;
                    case "TYPE_INT32":
                    case 5:
                        message.type = 5;
                        break;
                    case "TYPE_FIXED64":
                    case 6:
                        message.type = 6;
                        break;
                    case "TYPE_FIXED32":
                    case 7:
                        message.type = 7;
                        break;
                    case "TYPE_BOOL":
                    case 8:
                        message.type = 8;
                        break;
                    case "TYPE_STRING":
                    case 9:
                        message.type = 9;
                        break;
                    case "TYPE_GROUP":
                    case 10:
                        message.type = 10;
                        break;
                    case "TYPE_MESSAGE":
                    case 11:
                        message.type = 11;
                        break;
                    case "TYPE_BYTES":
                    case 12:
                        message.type = 12;
                        break;
                    case "TYPE_UINT32":
                    case 13:
                        message.type = 13;
                        break;
                    case "TYPE_ENUM":
                    case 14:
                        message.type = 14;
                        break;
                    case "TYPE_SFIXED32":
                    case 15:
                        message.type = 15;
                        break;
                    case "TYPE_SFIXED64":
                    case 16:
                        message.type = 16;
                        break;
                    case "TYPE_SINT32":
                    case 17:
                        message.type = 17;
                        break;
                    case "TYPE_SINT64":
                    case 18:
                        message.type = 18;
                        break;
                    }
                    if (object.typeName != null)
                        message.typeName = String(object.typeName);
                    if (object.extendee != null)
                        message.extendee = String(object.extendee);
                    if (object.defaultValue != null)
                        message.defaultValue = String(object.defaultValue);
                    if (object.oneofIndex != null)
                        message.oneofIndex = object.oneofIndex | 0;
                    if (object.jsonName != null)
                        message.jsonName = String(object.jsonName);
                    if (object.options != null) {
                        if (typeof object.options !== "object")
                            throw TypeError(".google.protobuf.FieldDescriptorProto.options: object expected");
                        message.options = $root.google.protobuf.FieldOptions.fromObject(object.options);
                    }
                    if (object.proto3Optional != null)
                        message.proto3Optional = Boolean(object.proto3Optional);
                    return message;
                };
    
                /**
                 * Creates a plain object from a FieldDescriptorProto message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.protobuf.FieldDescriptorProto
                 * @static
                 * @param {google.protobuf.FieldDescriptorProto} message FieldDescriptorProto
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                FieldDescriptorProto.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.defaults) {
                        object.name = "";
                        object.extendee = "";
                        object.number = 0;
                        object.label = options.enums === String ? "LABEL_OPTIONAL" : 1;
                        object.type = options.enums === String ? "TYPE_DOUBLE" : 1;
                        object.typeName = "";
                        object.defaultValue = "";
                        object.options = null;
                        object.oneofIndex = 0;
                        object.jsonName = "";
                        object.proto3Optional = false;
                    }
                    if (message.name != null && message.hasOwnProperty("name"))
                        object.name = message.name;
                    if (message.extendee != null && message.hasOwnProperty("extendee"))
                        object.extendee = message.extendee;
                    if (message.number != null && message.hasOwnProperty("number"))
                        object.number = message.number;
                    if (message.label != null && message.hasOwnProperty("label"))
                        object.label = options.enums === String ? $root.google.protobuf.FieldDescriptorProto.Label[message.label] === undefined ? message.label : $root.google.protobuf.FieldDescriptorProto.Label[message.label] : message.label;
                    if (message.type != null && message.hasOwnProperty("type"))
                        object.type = options.enums === String ? $root.google.protobuf.FieldDescriptorProto.Type[message.type] === undefined ? message.type : $root.google.protobuf.FieldDescriptorProto.Type[message.type] : message.type;
                    if (message.typeName != null && message.hasOwnProperty("typeName"))
                        object.typeName = message.typeName;
                    if (message.defaultValue != null && message.hasOwnProperty("defaultValue"))
                        object.defaultValue = message.defaultValue;
                    if (message.options != null && message.hasOwnProperty("options"))
                        object.options = $root.google.protobuf.FieldOptions.toObject(message.options, options);
                    if (message.oneofIndex != null && message.hasOwnProperty("oneofIndex"))
                        object.oneofIndex = message.oneofIndex;
                    if (message.jsonName != null && message.hasOwnProperty("jsonName"))
                        object.jsonName = message.jsonName;
                    if (message.proto3Optional != null && message.hasOwnProperty("proto3Optional"))
                        object.proto3Optional = message.proto3Optional;
                    return object;
                };
    
                /**
                 * Converts this FieldDescriptorProto to JSON.
                 * @function toJSON
                 * @memberof google.protobuf.FieldDescriptorProto
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                FieldDescriptorProto.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for FieldDescriptorProto
                 * @function getTypeUrl
                 * @memberof google.protobuf.FieldDescriptorProto
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                FieldDescriptorProto.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.protobuf.FieldDescriptorProto";
                };
    
                /**
                 * Type enum.
                 * @name google.protobuf.FieldDescriptorProto.Type
                 * @enum {number}
                 * @property {number} TYPE_DOUBLE=1 TYPE_DOUBLE value
                 * @property {number} TYPE_FLOAT=2 TYPE_FLOAT value
                 * @property {number} TYPE_INT64=3 TYPE_INT64 value
                 * @property {number} TYPE_UINT64=4 TYPE_UINT64 value
                 * @property {number} TYPE_INT32=5 TYPE_INT32 value
                 * @property {number} TYPE_FIXED64=6 TYPE_FIXED64 value
                 * @property {number} TYPE_FIXED32=7 TYPE_FIXED32 value
                 * @property {number} TYPE_BOOL=8 TYPE_BOOL value
                 * @property {number} TYPE_STRING=9 TYPE_STRING value
                 * @property {number} TYPE_GROUP=10 TYPE_GROUP value
                 * @property {number} TYPE_MESSAGE=11 TYPE_MESSAGE value
                 * @property {number} TYPE_BYTES=12 TYPE_BYTES value
                 * @property {number} TYPE_UINT32=13 TYPE_UINT32 value
                 * @property {number} TYPE_ENUM=14 TYPE_ENUM value
                 * @property {number} TYPE_SFIXED32=15 TYPE_SFIXED32 value
                 * @property {number} TYPE_SFIXED64=16 TYPE_SFIXED64 value
                 * @property {number} TYPE_SINT32=17 TYPE_SINT32 value
                 * @property {number} TYPE_SINT64=18 TYPE_SINT64 value
                 */
                FieldDescriptorProto.Type = (function() {
                    var valuesById = {}, values = Object.create(valuesById);
                    values[valuesById[1] = "TYPE_DOUBLE"] = 1;
                    values[valuesById[2] = "TYPE_FLOAT"] = 2;
                    values[valuesById[3] = "TYPE_INT64"] = 3;
                    values[valuesById[4] = "TYPE_UINT64"] = 4;
                    values[valuesById[5] = "TYPE_INT32"] = 5;
                    values[valuesById[6] = "TYPE_FIXED64"] = 6;
                    values[valuesById[7] = "TYPE_FIXED32"] = 7;
                    values[valuesById[8] = "TYPE_BOOL"] = 8;
                    values[valuesById[9] = "TYPE_STRING"] = 9;
                    values[valuesById[10] = "TYPE_GROUP"] = 10;
                    values[valuesById[11] = "TYPE_MESSAGE"] = 11;
                    values[valuesById[12] = "TYPE_BYTES"] = 12;
                    values[valuesById[13] = "TYPE_UINT32"] = 13;
                    values[valuesById[14] = "TYPE_ENUM"] = 14;
                    values[valuesById[15] = "TYPE_SFIXED32"] = 15;
                    values[valuesById[16] = "TYPE_SFIXED64"] = 16;
                    values[valuesById[17] = "TYPE_SINT32"] = 17;
                    values[valuesById[18] = "TYPE_SINT64"] = 18;
                    return values;
                })();
    
                /**
                 * Label enum.
                 * @name google.protobuf.FieldDescriptorProto.Label
                 * @enum {number}
                 * @property {number} LABEL_OPTIONAL=1 LABEL_OPTIONAL value
                 * @property {number} LABEL_REQUIRED=2 LABEL_REQUIRED value
                 * @property {number} LABEL_REPEATED=3 LABEL_REPEATED value
                 */
                FieldDescriptorProto.Label = (function() {
                    var valuesById = {}, values = Object.create(valuesById);
                    values[valuesById[1] = "LABEL_OPTIONAL"] = 1;
                    values[valuesById[2] = "LABEL_REQUIRED"] = 2;
                    values[valuesById[3] = "LABEL_REPEATED"] = 3;
                    return values;
                })();
    
                return FieldDescriptorProto;
            })();
    
            protobuf.OneofDescriptorProto = (function() {
    
                /**
                 * Properties of an OneofDescriptorProto.
                 * @memberof google.protobuf
                 * @interface IOneofDescriptorProto
                 * @property {string|null} [name] OneofDescriptorProto name
                 * @property {google.protobuf.IOneofOptions|null} [options] OneofDescriptorProto options
                 */
    
                /**
                 * Constructs a new OneofDescriptorProto.
                 * @memberof google.protobuf
                 * @classdesc Represents an OneofDescriptorProto.
                 * @implements IOneofDescriptorProto
                 * @constructor
                 * @param {google.protobuf.IOneofDescriptorProto=} [properties] Properties to set
                 */
                function OneofDescriptorProto(properties) {
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * OneofDescriptorProto name.
                 * @member {string} name
                 * @memberof google.protobuf.OneofDescriptorProto
                 * @instance
                 */
                OneofDescriptorProto.prototype.name = "";
    
                /**
                 * OneofDescriptorProto options.
                 * @member {google.protobuf.IOneofOptions|null|undefined} options
                 * @memberof google.protobuf.OneofDescriptorProto
                 * @instance
                 */
                OneofDescriptorProto.prototype.options = null;
    
                /**
                 * Creates a new OneofDescriptorProto instance using the specified properties.
                 * @function create
                 * @memberof google.protobuf.OneofDescriptorProto
                 * @static
                 * @param {google.protobuf.IOneofDescriptorProto=} [properties] Properties to set
                 * @returns {google.protobuf.OneofDescriptorProto} OneofDescriptorProto instance
                 */
                OneofDescriptorProto.create = function create(properties) {
                    return new OneofDescriptorProto(properties);
                };
    
                /**
                 * Encodes the specified OneofDescriptorProto message. Does not implicitly {@link google.protobuf.OneofDescriptorProto.verify|verify} messages.
                 * @function encode
                 * @memberof google.protobuf.OneofDescriptorProto
                 * @static
                 * @param {google.protobuf.IOneofDescriptorProto} message OneofDescriptorProto message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                OneofDescriptorProto.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                        writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                    if (message.options != null && Object.hasOwnProperty.call(message, "options"))
                        $root.google.protobuf.OneofOptions.encode(message.options, writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                    return writer;
                };
    
                /**
                 * Encodes the specified OneofDescriptorProto message, length delimited. Does not implicitly {@link google.protobuf.OneofDescriptorProto.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.protobuf.OneofDescriptorProto
                 * @static
                 * @param {google.protobuf.IOneofDescriptorProto} message OneofDescriptorProto message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                OneofDescriptorProto.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes an OneofDescriptorProto message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.protobuf.OneofDescriptorProto
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.protobuf.OneofDescriptorProto} OneofDescriptorProto
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                OneofDescriptorProto.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.OneofDescriptorProto();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1: {
                                message.name = reader.string();
                                break;
                            }
                        case 2: {
                                message.options = $root.google.protobuf.OneofOptions.decode(reader, reader.uint32());
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes an OneofDescriptorProto message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.protobuf.OneofDescriptorProto
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.protobuf.OneofDescriptorProto} OneofDescriptorProto
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                OneofDescriptorProto.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies an OneofDescriptorProto message.
                 * @function verify
                 * @memberof google.protobuf.OneofDescriptorProto
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                OneofDescriptorProto.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.name != null && message.hasOwnProperty("name"))
                        if (!$util.isString(message.name))
                            return "name: string expected";
                    if (message.options != null && message.hasOwnProperty("options")) {
                        var error = $root.google.protobuf.OneofOptions.verify(message.options);
                        if (error)
                            return "options." + error;
                    }
                    return null;
                };
    
                /**
                 * Creates an OneofDescriptorProto message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.protobuf.OneofDescriptorProto
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.protobuf.OneofDescriptorProto} OneofDescriptorProto
                 */
                OneofDescriptorProto.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.protobuf.OneofDescriptorProto)
                        return object;
                    var message = new $root.google.protobuf.OneofDescriptorProto();
                    if (object.name != null)
                        message.name = String(object.name);
                    if (object.options != null) {
                        if (typeof object.options !== "object")
                            throw TypeError(".google.protobuf.OneofDescriptorProto.options: object expected");
                        message.options = $root.google.protobuf.OneofOptions.fromObject(object.options);
                    }
                    return message;
                };
    
                /**
                 * Creates a plain object from an OneofDescriptorProto message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.protobuf.OneofDescriptorProto
                 * @static
                 * @param {google.protobuf.OneofDescriptorProto} message OneofDescriptorProto
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                OneofDescriptorProto.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.defaults) {
                        object.name = "";
                        object.options = null;
                    }
                    if (message.name != null && message.hasOwnProperty("name"))
                        object.name = message.name;
                    if (message.options != null && message.hasOwnProperty("options"))
                        object.options = $root.google.protobuf.OneofOptions.toObject(message.options, options);
                    return object;
                };
    
                /**
                 * Converts this OneofDescriptorProto to JSON.
                 * @function toJSON
                 * @memberof google.protobuf.OneofDescriptorProto
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                OneofDescriptorProto.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for OneofDescriptorProto
                 * @function getTypeUrl
                 * @memberof google.protobuf.OneofDescriptorProto
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                OneofDescriptorProto.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.protobuf.OneofDescriptorProto";
                };
    
                return OneofDescriptorProto;
            })();
    
            protobuf.EnumDescriptorProto = (function() {
    
                /**
                 * Properties of an EnumDescriptorProto.
                 * @memberof google.protobuf
                 * @interface IEnumDescriptorProto
                 * @property {string|null} [name] EnumDescriptorProto name
                 * @property {Array.<google.protobuf.IEnumValueDescriptorProto>|null} [value] EnumDescriptorProto value
                 * @property {google.protobuf.IEnumOptions|null} [options] EnumDescriptorProto options
                 * @property {Array.<google.protobuf.EnumDescriptorProto.IEnumReservedRange>|null} [reservedRange] EnumDescriptorProto reservedRange
                 * @property {Array.<string>|null} [reservedName] EnumDescriptorProto reservedName
                 */
    
                /**
                 * Constructs a new EnumDescriptorProto.
                 * @memberof google.protobuf
                 * @classdesc Represents an EnumDescriptorProto.
                 * @implements IEnumDescriptorProto
                 * @constructor
                 * @param {google.protobuf.IEnumDescriptorProto=} [properties] Properties to set
                 */
                function EnumDescriptorProto(properties) {
                    this.value = [];
                    this.reservedRange = [];
                    this.reservedName = [];
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * EnumDescriptorProto name.
                 * @member {string} name
                 * @memberof google.protobuf.EnumDescriptorProto
                 * @instance
                 */
                EnumDescriptorProto.prototype.name = "";
    
                /**
                 * EnumDescriptorProto value.
                 * @member {Array.<google.protobuf.IEnumValueDescriptorProto>} value
                 * @memberof google.protobuf.EnumDescriptorProto
                 * @instance
                 */
                EnumDescriptorProto.prototype.value = $util.emptyArray;
    
                /**
                 * EnumDescriptorProto options.
                 * @member {google.protobuf.IEnumOptions|null|undefined} options
                 * @memberof google.protobuf.EnumDescriptorProto
                 * @instance
                 */
                EnumDescriptorProto.prototype.options = null;
    
                /**
                 * EnumDescriptorProto reservedRange.
                 * @member {Array.<google.protobuf.EnumDescriptorProto.IEnumReservedRange>} reservedRange
                 * @memberof google.protobuf.EnumDescriptorProto
                 * @instance
                 */
                EnumDescriptorProto.prototype.reservedRange = $util.emptyArray;
    
                /**
                 * EnumDescriptorProto reservedName.
                 * @member {Array.<string>} reservedName
                 * @memberof google.protobuf.EnumDescriptorProto
                 * @instance
                 */
                EnumDescriptorProto.prototype.reservedName = $util.emptyArray;
    
                /**
                 * Creates a new EnumDescriptorProto instance using the specified properties.
                 * @function create
                 * @memberof google.protobuf.EnumDescriptorProto
                 * @static
                 * @param {google.protobuf.IEnumDescriptorProto=} [properties] Properties to set
                 * @returns {google.protobuf.EnumDescriptorProto} EnumDescriptorProto instance
                 */
                EnumDescriptorProto.create = function create(properties) {
                    return new EnumDescriptorProto(properties);
                };
    
                /**
                 * Encodes the specified EnumDescriptorProto message. Does not implicitly {@link google.protobuf.EnumDescriptorProto.verify|verify} messages.
                 * @function encode
                 * @memberof google.protobuf.EnumDescriptorProto
                 * @static
                 * @param {google.protobuf.IEnumDescriptorProto} message EnumDescriptorProto message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                EnumDescriptorProto.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                        writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                    if (message.value != null && message.value.length)
                        for (var i = 0; i < message.value.length; ++i)
                            $root.google.protobuf.EnumValueDescriptorProto.encode(message.value[i], writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                    if (message.options != null && Object.hasOwnProperty.call(message, "options"))
                        $root.google.protobuf.EnumOptions.encode(message.options, writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();
                    if (message.reservedRange != null && message.reservedRange.length)
                        for (var i = 0; i < message.reservedRange.length; ++i)
                            $root.google.protobuf.EnumDescriptorProto.EnumReservedRange.encode(message.reservedRange[i], writer.uint32(/* id 4, wireType 2 =*/34).fork()).ldelim();
                    if (message.reservedName != null && message.reservedName.length)
                        for (var i = 0; i < message.reservedName.length; ++i)
                            writer.uint32(/* id 5, wireType 2 =*/42).string(message.reservedName[i]);
                    return writer;
                };
    
                /**
                 * Encodes the specified EnumDescriptorProto message, length delimited. Does not implicitly {@link google.protobuf.EnumDescriptorProto.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.protobuf.EnumDescriptorProto
                 * @static
                 * @param {google.protobuf.IEnumDescriptorProto} message EnumDescriptorProto message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                EnumDescriptorProto.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes an EnumDescriptorProto message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.protobuf.EnumDescriptorProto
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.protobuf.EnumDescriptorProto} EnumDescriptorProto
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                EnumDescriptorProto.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.EnumDescriptorProto();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1: {
                                message.name = reader.string();
                                break;
                            }
                        case 2: {
                                if (!(message.value && message.value.length))
                                    message.value = [];
                                message.value.push($root.google.protobuf.EnumValueDescriptorProto.decode(reader, reader.uint32()));
                                break;
                            }
                        case 3: {
                                message.options = $root.google.protobuf.EnumOptions.decode(reader, reader.uint32());
                                break;
                            }
                        case 4: {
                                if (!(message.reservedRange && message.reservedRange.length))
                                    message.reservedRange = [];
                                message.reservedRange.push($root.google.protobuf.EnumDescriptorProto.EnumReservedRange.decode(reader, reader.uint32()));
                                break;
                            }
                        case 5: {
                                if (!(message.reservedName && message.reservedName.length))
                                    message.reservedName = [];
                                message.reservedName.push(reader.string());
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes an EnumDescriptorProto message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.protobuf.EnumDescriptorProto
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.protobuf.EnumDescriptorProto} EnumDescriptorProto
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                EnumDescriptorProto.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies an EnumDescriptorProto message.
                 * @function verify
                 * @memberof google.protobuf.EnumDescriptorProto
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                EnumDescriptorProto.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.name != null && message.hasOwnProperty("name"))
                        if (!$util.isString(message.name))
                            return "name: string expected";
                    if (message.value != null && message.hasOwnProperty("value")) {
                        if (!Array.isArray(message.value))
                            return "value: array expected";
                        for (var i = 0; i < message.value.length; ++i) {
                            var error = $root.google.protobuf.EnumValueDescriptorProto.verify(message.value[i]);
                            if (error)
                                return "value." + error;
                        }
                    }
                    if (message.options != null && message.hasOwnProperty("options")) {
                        var error = $root.google.protobuf.EnumOptions.verify(message.options);
                        if (error)
                            return "options." + error;
                    }
                    if (message.reservedRange != null && message.hasOwnProperty("reservedRange")) {
                        if (!Array.isArray(message.reservedRange))
                            return "reservedRange: array expected";
                        for (var i = 0; i < message.reservedRange.length; ++i) {
                            var error = $root.google.protobuf.EnumDescriptorProto.EnumReservedRange.verify(message.reservedRange[i]);
                            if (error)
                                return "reservedRange." + error;
                        }
                    }
                    if (message.reservedName != null && message.hasOwnProperty("reservedName")) {
                        if (!Array.isArray(message.reservedName))
                            return "reservedName: array expected";
                        for (var i = 0; i < message.reservedName.length; ++i)
                            if (!$util.isString(message.reservedName[i]))
                                return "reservedName: string[] expected";
                    }
                    return null;
                };
    
                /**
                 * Creates an EnumDescriptorProto message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.protobuf.EnumDescriptorProto
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.protobuf.EnumDescriptorProto} EnumDescriptorProto
                 */
                EnumDescriptorProto.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.protobuf.EnumDescriptorProto)
                        return object;
                    var message = new $root.google.protobuf.EnumDescriptorProto();
                    if (object.name != null)
                        message.name = String(object.name);
                    if (object.value) {
                        if (!Array.isArray(object.value))
                            throw TypeError(".google.protobuf.EnumDescriptorProto.value: array expected");
                        message.value = [];
                        for (var i = 0; i < object.value.length; ++i) {
                            if (typeof object.value[i] !== "object")
                                throw TypeError(".google.protobuf.EnumDescriptorProto.value: object expected");
                            message.value[i] = $root.google.protobuf.EnumValueDescriptorProto.fromObject(object.value[i]);
                        }
                    }
                    if (object.options != null) {
                        if (typeof object.options !== "object")
                            throw TypeError(".google.protobuf.EnumDescriptorProto.options: object expected");
                        message.options = $root.google.protobuf.EnumOptions.fromObject(object.options);
                    }
                    if (object.reservedRange) {
                        if (!Array.isArray(object.reservedRange))
                            throw TypeError(".google.protobuf.EnumDescriptorProto.reservedRange: array expected");
                        message.reservedRange = [];
                        for (var i = 0; i < object.reservedRange.length; ++i) {
                            if (typeof object.reservedRange[i] !== "object")
                                throw TypeError(".google.protobuf.EnumDescriptorProto.reservedRange: object expected");
                            message.reservedRange[i] = $root.google.protobuf.EnumDescriptorProto.EnumReservedRange.fromObject(object.reservedRange[i]);
                        }
                    }
                    if (object.reservedName) {
                        if (!Array.isArray(object.reservedName))
                            throw TypeError(".google.protobuf.EnumDescriptorProto.reservedName: array expected");
                        message.reservedName = [];
                        for (var i = 0; i < object.reservedName.length; ++i)
                            message.reservedName[i] = String(object.reservedName[i]);
                    }
                    return message;
                };
    
                /**
                 * Creates a plain object from an EnumDescriptorProto message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.protobuf.EnumDescriptorProto
                 * @static
                 * @param {google.protobuf.EnumDescriptorProto} message EnumDescriptorProto
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                EnumDescriptorProto.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.arrays || options.defaults) {
                        object.value = [];
                        object.reservedRange = [];
                        object.reservedName = [];
                    }
                    if (options.defaults) {
                        object.name = "";
                        object.options = null;
                    }
                    if (message.name != null && message.hasOwnProperty("name"))
                        object.name = message.name;
                    if (message.value && message.value.length) {
                        object.value = [];
                        for (var j = 0; j < message.value.length; ++j)
                            object.value[j] = $root.google.protobuf.EnumValueDescriptorProto.toObject(message.value[j], options);
                    }
                    if (message.options != null && message.hasOwnProperty("options"))
                        object.options = $root.google.protobuf.EnumOptions.toObject(message.options, options);
                    if (message.reservedRange && message.reservedRange.length) {
                        object.reservedRange = [];
                        for (var j = 0; j < message.reservedRange.length; ++j)
                            object.reservedRange[j] = $root.google.protobuf.EnumDescriptorProto.EnumReservedRange.toObject(message.reservedRange[j], options);
                    }
                    if (message.reservedName && message.reservedName.length) {
                        object.reservedName = [];
                        for (var j = 0; j < message.reservedName.length; ++j)
                            object.reservedName[j] = message.reservedName[j];
                    }
                    return object;
                };
    
                /**
                 * Converts this EnumDescriptorProto to JSON.
                 * @function toJSON
                 * @memberof google.protobuf.EnumDescriptorProto
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                EnumDescriptorProto.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for EnumDescriptorProto
                 * @function getTypeUrl
                 * @memberof google.protobuf.EnumDescriptorProto
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                EnumDescriptorProto.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.protobuf.EnumDescriptorProto";
                };
    
                EnumDescriptorProto.EnumReservedRange = (function() {
    
                    /**
                     * Properties of an EnumReservedRange.
                     * @memberof google.protobuf.EnumDescriptorProto
                     * @interface IEnumReservedRange
                     * @property {number|null} [start] EnumReservedRange start
                     * @property {number|null} [end] EnumReservedRange end
                     */
    
                    /**
                     * Constructs a new EnumReservedRange.
                     * @memberof google.protobuf.EnumDescriptorProto
                     * @classdesc Represents an EnumReservedRange.
                     * @implements IEnumReservedRange
                     * @constructor
                     * @param {google.protobuf.EnumDescriptorProto.IEnumReservedRange=} [properties] Properties to set
                     */
                    function EnumReservedRange(properties) {
                        if (properties)
                            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                if (properties[keys[i]] != null)
                                    this[keys[i]] = properties[keys[i]];
                    }
    
                    /**
                     * EnumReservedRange start.
                     * @member {number} start
                     * @memberof google.protobuf.EnumDescriptorProto.EnumReservedRange
                     * @instance
                     */
                    EnumReservedRange.prototype.start = 0;
    
                    /**
                     * EnumReservedRange end.
                     * @member {number} end
                     * @memberof google.protobuf.EnumDescriptorProto.EnumReservedRange
                     * @instance
                     */
                    EnumReservedRange.prototype.end = 0;
    
                    /**
                     * Creates a new EnumReservedRange instance using the specified properties.
                     * @function create
                     * @memberof google.protobuf.EnumDescriptorProto.EnumReservedRange
                     * @static
                     * @param {google.protobuf.EnumDescriptorProto.IEnumReservedRange=} [properties] Properties to set
                     * @returns {google.protobuf.EnumDescriptorProto.EnumReservedRange} EnumReservedRange instance
                     */
                    EnumReservedRange.create = function create(properties) {
                        return new EnumReservedRange(properties);
                    };
    
                    /**
                     * Encodes the specified EnumReservedRange message. Does not implicitly {@link google.protobuf.EnumDescriptorProto.EnumReservedRange.verify|verify} messages.
                     * @function encode
                     * @memberof google.protobuf.EnumDescriptorProto.EnumReservedRange
                     * @static
                     * @param {google.protobuf.EnumDescriptorProto.IEnumReservedRange} message EnumReservedRange message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    EnumReservedRange.encode = function encode(message, writer) {
                        if (!writer)
                            writer = $Writer.create();
                        if (message.start != null && Object.hasOwnProperty.call(message, "start"))
                            writer.uint32(/* id 1, wireType 0 =*/8).int32(message.start);
                        if (message.end != null && Object.hasOwnProperty.call(message, "end"))
                            writer.uint32(/* id 2, wireType 0 =*/16).int32(message.end);
                        return writer;
                    };
    
                    /**
                     * Encodes the specified EnumReservedRange message, length delimited. Does not implicitly {@link google.protobuf.EnumDescriptorProto.EnumReservedRange.verify|verify} messages.
                     * @function encodeDelimited
                     * @memberof google.protobuf.EnumDescriptorProto.EnumReservedRange
                     * @static
                     * @param {google.protobuf.EnumDescriptorProto.IEnumReservedRange} message EnumReservedRange message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    EnumReservedRange.encodeDelimited = function encodeDelimited(message, writer) {
                        return this.encode(message, writer).ldelim();
                    };
    
                    /**
                     * Decodes an EnumReservedRange message from the specified reader or buffer.
                     * @function decode
                     * @memberof google.protobuf.EnumDescriptorProto.EnumReservedRange
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @param {number} [length] Message length if known beforehand
                     * @returns {google.protobuf.EnumDescriptorProto.EnumReservedRange} EnumReservedRange
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    EnumReservedRange.decode = function decode(reader, length) {
                        if (!(reader instanceof $Reader))
                            reader = $Reader.create(reader);
                        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.EnumDescriptorProto.EnumReservedRange();
                        while (reader.pos < end) {
                            var tag = reader.uint32();
                            switch (tag >>> 3) {
                            case 1: {
                                    message.start = reader.int32();
                                    break;
                                }
                            case 2: {
                                    message.end = reader.int32();
                                    break;
                                }
                            default:
                                reader.skipType(tag & 7);
                                break;
                            }
                        }
                        return message;
                    };
    
                    /**
                     * Decodes an EnumReservedRange message from the specified reader or buffer, length delimited.
                     * @function decodeDelimited
                     * @memberof google.protobuf.EnumDescriptorProto.EnumReservedRange
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @returns {google.protobuf.EnumDescriptorProto.EnumReservedRange} EnumReservedRange
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    EnumReservedRange.decodeDelimited = function decodeDelimited(reader) {
                        if (!(reader instanceof $Reader))
                            reader = new $Reader(reader);
                        return this.decode(reader, reader.uint32());
                    };
    
                    /**
                     * Verifies an EnumReservedRange message.
                     * @function verify
                     * @memberof google.protobuf.EnumDescriptorProto.EnumReservedRange
                     * @static
                     * @param {Object.<string,*>} message Plain object to verify
                     * @returns {string|null} `null` if valid, otherwise the reason why it is not
                     */
                    EnumReservedRange.verify = function verify(message) {
                        if (typeof message !== "object" || message === null)
                            return "object expected";
                        if (message.start != null && message.hasOwnProperty("start"))
                            if (!$util.isInteger(message.start))
                                return "start: integer expected";
                        if (message.end != null && message.hasOwnProperty("end"))
                            if (!$util.isInteger(message.end))
                                return "end: integer expected";
                        return null;
                    };
    
                    /**
                     * Creates an EnumReservedRange message from a plain object. Also converts values to their respective internal types.
                     * @function fromObject
                     * @memberof google.protobuf.EnumDescriptorProto.EnumReservedRange
                     * @static
                     * @param {Object.<string,*>} object Plain object
                     * @returns {google.protobuf.EnumDescriptorProto.EnumReservedRange} EnumReservedRange
                     */
                    EnumReservedRange.fromObject = function fromObject(object) {
                        if (object instanceof $root.google.protobuf.EnumDescriptorProto.EnumReservedRange)
                            return object;
                        var message = new $root.google.protobuf.EnumDescriptorProto.EnumReservedRange();
                        if (object.start != null)
                            message.start = object.start | 0;
                        if (object.end != null)
                            message.end = object.end | 0;
                        return message;
                    };
    
                    /**
                     * Creates a plain object from an EnumReservedRange message. Also converts values to other types if specified.
                     * @function toObject
                     * @memberof google.protobuf.EnumDescriptorProto.EnumReservedRange
                     * @static
                     * @param {google.protobuf.EnumDescriptorProto.EnumReservedRange} message EnumReservedRange
                     * @param {$protobuf.IConversionOptions} [options] Conversion options
                     * @returns {Object.<string,*>} Plain object
                     */
                    EnumReservedRange.toObject = function toObject(message, options) {
                        if (!options)
                            options = {};
                        var object = {};
                        if (options.defaults) {
                            object.start = 0;
                            object.end = 0;
                        }
                        if (message.start != null && message.hasOwnProperty("start"))
                            object.start = message.start;
                        if (message.end != null && message.hasOwnProperty("end"))
                            object.end = message.end;
                        return object;
                    };
    
                    /**
                     * Converts this EnumReservedRange to JSON.
                     * @function toJSON
                     * @memberof google.protobuf.EnumDescriptorProto.EnumReservedRange
                     * @instance
                     * @returns {Object.<string,*>} JSON object
                     */
                    EnumReservedRange.prototype.toJSON = function toJSON() {
                        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                    };
    
                    /**
                     * Gets the default type url for EnumReservedRange
                     * @function getTypeUrl
                     * @memberof google.protobuf.EnumDescriptorProto.EnumReservedRange
                     * @static
                     * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                     * @returns {string} The default type url
                     */
                    EnumReservedRange.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                        if (typeUrlPrefix === undefined) {
                            typeUrlPrefix = "type.googleapis.com";
                        }
                        return typeUrlPrefix + "/google.protobuf.EnumDescriptorProto.EnumReservedRange";
                    };
    
                    return EnumReservedRange;
                })();
    
                return EnumDescriptorProto;
            })();
    
            protobuf.EnumValueDescriptorProto = (function() {
    
                /**
                 * Properties of an EnumValueDescriptorProto.
                 * @memberof google.protobuf
                 * @interface IEnumValueDescriptorProto
                 * @property {string|null} [name] EnumValueDescriptorProto name
                 * @property {number|null} [number] EnumValueDescriptorProto number
                 * @property {google.protobuf.IEnumValueOptions|null} [options] EnumValueDescriptorProto options
                 */
    
                /**
                 * Constructs a new EnumValueDescriptorProto.
                 * @memberof google.protobuf
                 * @classdesc Represents an EnumValueDescriptorProto.
                 * @implements IEnumValueDescriptorProto
                 * @constructor
                 * @param {google.protobuf.IEnumValueDescriptorProto=} [properties] Properties to set
                 */
                function EnumValueDescriptorProto(properties) {
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * EnumValueDescriptorProto name.
                 * @member {string} name
                 * @memberof google.protobuf.EnumValueDescriptorProto
                 * @instance
                 */
                EnumValueDescriptorProto.prototype.name = "";
    
                /**
                 * EnumValueDescriptorProto number.
                 * @member {number} number
                 * @memberof google.protobuf.EnumValueDescriptorProto
                 * @instance
                 */
                EnumValueDescriptorProto.prototype.number = 0;
    
                /**
                 * EnumValueDescriptorProto options.
                 * @member {google.protobuf.IEnumValueOptions|null|undefined} options
                 * @memberof google.protobuf.EnumValueDescriptorProto
                 * @instance
                 */
                EnumValueDescriptorProto.prototype.options = null;
    
                /**
                 * Creates a new EnumValueDescriptorProto instance using the specified properties.
                 * @function create
                 * @memberof google.protobuf.EnumValueDescriptorProto
                 * @static
                 * @param {google.protobuf.IEnumValueDescriptorProto=} [properties] Properties to set
                 * @returns {google.protobuf.EnumValueDescriptorProto} EnumValueDescriptorProto instance
                 */
                EnumValueDescriptorProto.create = function create(properties) {
                    return new EnumValueDescriptorProto(properties);
                };
    
                /**
                 * Encodes the specified EnumValueDescriptorProto message. Does not implicitly {@link google.protobuf.EnumValueDescriptorProto.verify|verify} messages.
                 * @function encode
                 * @memberof google.protobuf.EnumValueDescriptorProto
                 * @static
                 * @param {google.protobuf.IEnumValueDescriptorProto} message EnumValueDescriptorProto message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                EnumValueDescriptorProto.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                        writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                    if (message.number != null && Object.hasOwnProperty.call(message, "number"))
                        writer.uint32(/* id 2, wireType 0 =*/16).int32(message.number);
                    if (message.options != null && Object.hasOwnProperty.call(message, "options"))
                        $root.google.protobuf.EnumValueOptions.encode(message.options, writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();
                    return writer;
                };
    
                /**
                 * Encodes the specified EnumValueDescriptorProto message, length delimited. Does not implicitly {@link google.protobuf.EnumValueDescriptorProto.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.protobuf.EnumValueDescriptorProto
                 * @static
                 * @param {google.protobuf.IEnumValueDescriptorProto} message EnumValueDescriptorProto message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                EnumValueDescriptorProto.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes an EnumValueDescriptorProto message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.protobuf.EnumValueDescriptorProto
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.protobuf.EnumValueDescriptorProto} EnumValueDescriptorProto
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                EnumValueDescriptorProto.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.EnumValueDescriptorProto();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1: {
                                message.name = reader.string();
                                break;
                            }
                        case 2: {
                                message.number = reader.int32();
                                break;
                            }
                        case 3: {
                                message.options = $root.google.protobuf.EnumValueOptions.decode(reader, reader.uint32());
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes an EnumValueDescriptorProto message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.protobuf.EnumValueDescriptorProto
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.protobuf.EnumValueDescriptorProto} EnumValueDescriptorProto
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                EnumValueDescriptorProto.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies an EnumValueDescriptorProto message.
                 * @function verify
                 * @memberof google.protobuf.EnumValueDescriptorProto
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                EnumValueDescriptorProto.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.name != null && message.hasOwnProperty("name"))
                        if (!$util.isString(message.name))
                            return "name: string expected";
                    if (message.number != null && message.hasOwnProperty("number"))
                        if (!$util.isInteger(message.number))
                            return "number: integer expected";
                    if (message.options != null && message.hasOwnProperty("options")) {
                        var error = $root.google.protobuf.EnumValueOptions.verify(message.options);
                        if (error)
                            return "options." + error;
                    }
                    return null;
                };
    
                /**
                 * Creates an EnumValueDescriptorProto message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.protobuf.EnumValueDescriptorProto
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.protobuf.EnumValueDescriptorProto} EnumValueDescriptorProto
                 */
                EnumValueDescriptorProto.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.protobuf.EnumValueDescriptorProto)
                        return object;
                    var message = new $root.google.protobuf.EnumValueDescriptorProto();
                    if (object.name != null)
                        message.name = String(object.name);
                    if (object.number != null)
                        message.number = object.number | 0;
                    if (object.options != null) {
                        if (typeof object.options !== "object")
                            throw TypeError(".google.protobuf.EnumValueDescriptorProto.options: object expected");
                        message.options = $root.google.protobuf.EnumValueOptions.fromObject(object.options);
                    }
                    return message;
                };
    
                /**
                 * Creates a plain object from an EnumValueDescriptorProto message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.protobuf.EnumValueDescriptorProto
                 * @static
                 * @param {google.protobuf.EnumValueDescriptorProto} message EnumValueDescriptorProto
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                EnumValueDescriptorProto.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.defaults) {
                        object.name = "";
                        object.number = 0;
                        object.options = null;
                    }
                    if (message.name != null && message.hasOwnProperty("name"))
                        object.name = message.name;
                    if (message.number != null && message.hasOwnProperty("number"))
                        object.number = message.number;
                    if (message.options != null && message.hasOwnProperty("options"))
                        object.options = $root.google.protobuf.EnumValueOptions.toObject(message.options, options);
                    return object;
                };
    
                /**
                 * Converts this EnumValueDescriptorProto to JSON.
                 * @function toJSON
                 * @memberof google.protobuf.EnumValueDescriptorProto
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                EnumValueDescriptorProto.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for EnumValueDescriptorProto
                 * @function getTypeUrl
                 * @memberof google.protobuf.EnumValueDescriptorProto
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                EnumValueDescriptorProto.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.protobuf.EnumValueDescriptorProto";
                };
    
                return EnumValueDescriptorProto;
            })();
    
            protobuf.ServiceDescriptorProto = (function() {
    
                /**
                 * Properties of a ServiceDescriptorProto.
                 * @memberof google.protobuf
                 * @interface IServiceDescriptorProto
                 * @property {string|null} [name] ServiceDescriptorProto name
                 * @property {Array.<google.protobuf.IMethodDescriptorProto>|null} [method] ServiceDescriptorProto method
                 * @property {google.protobuf.IServiceOptions|null} [options] ServiceDescriptorProto options
                 */
    
                /**
                 * Constructs a new ServiceDescriptorProto.
                 * @memberof google.protobuf
                 * @classdesc Represents a ServiceDescriptorProto.
                 * @implements IServiceDescriptorProto
                 * @constructor
                 * @param {google.protobuf.IServiceDescriptorProto=} [properties] Properties to set
                 */
                function ServiceDescriptorProto(properties) {
                    this.method = [];
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * ServiceDescriptorProto name.
                 * @member {string} name
                 * @memberof google.protobuf.ServiceDescriptorProto
                 * @instance
                 */
                ServiceDescriptorProto.prototype.name = "";
    
                /**
                 * ServiceDescriptorProto method.
                 * @member {Array.<google.protobuf.IMethodDescriptorProto>} method
                 * @memberof google.protobuf.ServiceDescriptorProto
                 * @instance
                 */
                ServiceDescriptorProto.prototype.method = $util.emptyArray;
    
                /**
                 * ServiceDescriptorProto options.
                 * @member {google.protobuf.IServiceOptions|null|undefined} options
                 * @memberof google.protobuf.ServiceDescriptorProto
                 * @instance
                 */
                ServiceDescriptorProto.prototype.options = null;
    
                /**
                 * Creates a new ServiceDescriptorProto instance using the specified properties.
                 * @function create
                 * @memberof google.protobuf.ServiceDescriptorProto
                 * @static
                 * @param {google.protobuf.IServiceDescriptorProto=} [properties] Properties to set
                 * @returns {google.protobuf.ServiceDescriptorProto} ServiceDescriptorProto instance
                 */
                ServiceDescriptorProto.create = function create(properties) {
                    return new ServiceDescriptorProto(properties);
                };
    
                /**
                 * Encodes the specified ServiceDescriptorProto message. Does not implicitly {@link google.protobuf.ServiceDescriptorProto.verify|verify} messages.
                 * @function encode
                 * @memberof google.protobuf.ServiceDescriptorProto
                 * @static
                 * @param {google.protobuf.IServiceDescriptorProto} message ServiceDescriptorProto message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                ServiceDescriptorProto.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                        writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                    if (message.method != null && message.method.length)
                        for (var i = 0; i < message.method.length; ++i)
                            $root.google.protobuf.MethodDescriptorProto.encode(message.method[i], writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                    if (message.options != null && Object.hasOwnProperty.call(message, "options"))
                        $root.google.protobuf.ServiceOptions.encode(message.options, writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();
                    return writer;
                };
    
                /**
                 * Encodes the specified ServiceDescriptorProto message, length delimited. Does not implicitly {@link google.protobuf.ServiceDescriptorProto.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.protobuf.ServiceDescriptorProto
                 * @static
                 * @param {google.protobuf.IServiceDescriptorProto} message ServiceDescriptorProto message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                ServiceDescriptorProto.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a ServiceDescriptorProto message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.protobuf.ServiceDescriptorProto
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.protobuf.ServiceDescriptorProto} ServiceDescriptorProto
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                ServiceDescriptorProto.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.ServiceDescriptorProto();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1: {
                                message.name = reader.string();
                                break;
                            }
                        case 2: {
                                if (!(message.method && message.method.length))
                                    message.method = [];
                                message.method.push($root.google.protobuf.MethodDescriptorProto.decode(reader, reader.uint32()));
                                break;
                            }
                        case 3: {
                                message.options = $root.google.protobuf.ServiceOptions.decode(reader, reader.uint32());
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a ServiceDescriptorProto message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.protobuf.ServiceDescriptorProto
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.protobuf.ServiceDescriptorProto} ServiceDescriptorProto
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                ServiceDescriptorProto.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a ServiceDescriptorProto message.
                 * @function verify
                 * @memberof google.protobuf.ServiceDescriptorProto
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                ServiceDescriptorProto.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.name != null && message.hasOwnProperty("name"))
                        if (!$util.isString(message.name))
                            return "name: string expected";
                    if (message.method != null && message.hasOwnProperty("method")) {
                        if (!Array.isArray(message.method))
                            return "method: array expected";
                        for (var i = 0; i < message.method.length; ++i) {
                            var error = $root.google.protobuf.MethodDescriptorProto.verify(message.method[i]);
                            if (error)
                                return "method." + error;
                        }
                    }
                    if (message.options != null && message.hasOwnProperty("options")) {
                        var error = $root.google.protobuf.ServiceOptions.verify(message.options);
                        if (error)
                            return "options." + error;
                    }
                    return null;
                };
    
                /**
                 * Creates a ServiceDescriptorProto message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.protobuf.ServiceDescriptorProto
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.protobuf.ServiceDescriptorProto} ServiceDescriptorProto
                 */
                ServiceDescriptorProto.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.protobuf.ServiceDescriptorProto)
                        return object;
                    var message = new $root.google.protobuf.ServiceDescriptorProto();
                    if (object.name != null)
                        message.name = String(object.name);
                    if (object.method) {
                        if (!Array.isArray(object.method))
                            throw TypeError(".google.protobuf.ServiceDescriptorProto.method: array expected");
                        message.method = [];
                        for (var i = 0; i < object.method.length; ++i) {
                            if (typeof object.method[i] !== "object")
                                throw TypeError(".google.protobuf.ServiceDescriptorProto.method: object expected");
                            message.method[i] = $root.google.protobuf.MethodDescriptorProto.fromObject(object.method[i]);
                        }
                    }
                    if (object.options != null) {
                        if (typeof object.options !== "object")
                            throw TypeError(".google.protobuf.ServiceDescriptorProto.options: object expected");
                        message.options = $root.google.protobuf.ServiceOptions.fromObject(object.options);
                    }
                    return message;
                };
    
                /**
                 * Creates a plain object from a ServiceDescriptorProto message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.protobuf.ServiceDescriptorProto
                 * @static
                 * @param {google.protobuf.ServiceDescriptorProto} message ServiceDescriptorProto
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                ServiceDescriptorProto.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.arrays || options.defaults)
                        object.method = [];
                    if (options.defaults) {
                        object.name = "";
                        object.options = null;
                    }
                    if (message.name != null && message.hasOwnProperty("name"))
                        object.name = message.name;
                    if (message.method && message.method.length) {
                        object.method = [];
                        for (var j = 0; j < message.method.length; ++j)
                            object.method[j] = $root.google.protobuf.MethodDescriptorProto.toObject(message.method[j], options);
                    }
                    if (message.options != null && message.hasOwnProperty("options"))
                        object.options = $root.google.protobuf.ServiceOptions.toObject(message.options, options);
                    return object;
                };
    
                /**
                 * Converts this ServiceDescriptorProto to JSON.
                 * @function toJSON
                 * @memberof google.protobuf.ServiceDescriptorProto
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                ServiceDescriptorProto.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for ServiceDescriptorProto
                 * @function getTypeUrl
                 * @memberof google.protobuf.ServiceDescriptorProto
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                ServiceDescriptorProto.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.protobuf.ServiceDescriptorProto";
                };
    
                return ServiceDescriptorProto;
            })();
    
            protobuf.MethodDescriptorProto = (function() {
    
                /**
                 * Properties of a MethodDescriptorProto.
                 * @memberof google.protobuf
                 * @interface IMethodDescriptorProto
                 * @property {string|null} [name] MethodDescriptorProto name
                 * @property {string|null} [inputType] MethodDescriptorProto inputType
                 * @property {string|null} [outputType] MethodDescriptorProto outputType
                 * @property {google.protobuf.IMethodOptions|null} [options] MethodDescriptorProto options
                 * @property {boolean|null} [clientStreaming] MethodDescriptorProto clientStreaming
                 * @property {boolean|null} [serverStreaming] MethodDescriptorProto serverStreaming
                 */
    
                /**
                 * Constructs a new MethodDescriptorProto.
                 * @memberof google.protobuf
                 * @classdesc Represents a MethodDescriptorProto.
                 * @implements IMethodDescriptorProto
                 * @constructor
                 * @param {google.protobuf.IMethodDescriptorProto=} [properties] Properties to set
                 */
                function MethodDescriptorProto(properties) {
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * MethodDescriptorProto name.
                 * @member {string} name
                 * @memberof google.protobuf.MethodDescriptorProto
                 * @instance
                 */
                MethodDescriptorProto.prototype.name = "";
    
                /**
                 * MethodDescriptorProto inputType.
                 * @member {string} inputType
                 * @memberof google.protobuf.MethodDescriptorProto
                 * @instance
                 */
                MethodDescriptorProto.prototype.inputType = "";
    
                /**
                 * MethodDescriptorProto outputType.
                 * @member {string} outputType
                 * @memberof google.protobuf.MethodDescriptorProto
                 * @instance
                 */
                MethodDescriptorProto.prototype.outputType = "";
    
                /**
                 * MethodDescriptorProto options.
                 * @member {google.protobuf.IMethodOptions|null|undefined} options
                 * @memberof google.protobuf.MethodDescriptorProto
                 * @instance
                 */
                MethodDescriptorProto.prototype.options = null;
    
                /**
                 * MethodDescriptorProto clientStreaming.
                 * @member {boolean} clientStreaming
                 * @memberof google.protobuf.MethodDescriptorProto
                 * @instance
                 */
                MethodDescriptorProto.prototype.clientStreaming = false;
    
                /**
                 * MethodDescriptorProto serverStreaming.
                 * @member {boolean} serverStreaming
                 * @memberof google.protobuf.MethodDescriptorProto
                 * @instance
                 */
                MethodDescriptorProto.prototype.serverStreaming = false;
    
                /**
                 * Creates a new MethodDescriptorProto instance using the specified properties.
                 * @function create
                 * @memberof google.protobuf.MethodDescriptorProto
                 * @static
                 * @param {google.protobuf.IMethodDescriptorProto=} [properties] Properties to set
                 * @returns {google.protobuf.MethodDescriptorProto} MethodDescriptorProto instance
                 */
                MethodDescriptorProto.create = function create(properties) {
                    return new MethodDescriptorProto(properties);
                };
    
                /**
                 * Encodes the specified MethodDescriptorProto message. Does not implicitly {@link google.protobuf.MethodDescriptorProto.verify|verify} messages.
                 * @function encode
                 * @memberof google.protobuf.MethodDescriptorProto
                 * @static
                 * @param {google.protobuf.IMethodDescriptorProto} message MethodDescriptorProto message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                MethodDescriptorProto.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                        writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                    if (message.inputType != null && Object.hasOwnProperty.call(message, "inputType"))
                        writer.uint32(/* id 2, wireType 2 =*/18).string(message.inputType);
                    if (message.outputType != null && Object.hasOwnProperty.call(message, "outputType"))
                        writer.uint32(/* id 3, wireType 2 =*/26).string(message.outputType);
                    if (message.options != null && Object.hasOwnProperty.call(message, "options"))
                        $root.google.protobuf.MethodOptions.encode(message.options, writer.uint32(/* id 4, wireType 2 =*/34).fork()).ldelim();
                    if (message.clientStreaming != null && Object.hasOwnProperty.call(message, "clientStreaming"))
                        writer.uint32(/* id 5, wireType 0 =*/40).bool(message.clientStreaming);
                    if (message.serverStreaming != null && Object.hasOwnProperty.call(message, "serverStreaming"))
                        writer.uint32(/* id 6, wireType 0 =*/48).bool(message.serverStreaming);
                    return writer;
                };
    
                /**
                 * Encodes the specified MethodDescriptorProto message, length delimited. Does not implicitly {@link google.protobuf.MethodDescriptorProto.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.protobuf.MethodDescriptorProto
                 * @static
                 * @param {google.protobuf.IMethodDescriptorProto} message MethodDescriptorProto message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                MethodDescriptorProto.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a MethodDescriptorProto message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.protobuf.MethodDescriptorProto
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.protobuf.MethodDescriptorProto} MethodDescriptorProto
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                MethodDescriptorProto.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.MethodDescriptorProto();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1: {
                                message.name = reader.string();
                                break;
                            }
                        case 2: {
                                message.inputType = reader.string();
                                break;
                            }
                        case 3: {
                                message.outputType = reader.string();
                                break;
                            }
                        case 4: {
                                message.options = $root.google.protobuf.MethodOptions.decode(reader, reader.uint32());
                                break;
                            }
                        case 5: {
                                message.clientStreaming = reader.bool();
                                break;
                            }
                        case 6: {
                                message.serverStreaming = reader.bool();
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a MethodDescriptorProto message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.protobuf.MethodDescriptorProto
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.protobuf.MethodDescriptorProto} MethodDescriptorProto
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                MethodDescriptorProto.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a MethodDescriptorProto message.
                 * @function verify
                 * @memberof google.protobuf.MethodDescriptorProto
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                MethodDescriptorProto.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.name != null && message.hasOwnProperty("name"))
                        if (!$util.isString(message.name))
                            return "name: string expected";
                    if (message.inputType != null && message.hasOwnProperty("inputType"))
                        if (!$util.isString(message.inputType))
                            return "inputType: string expected";
                    if (message.outputType != null && message.hasOwnProperty("outputType"))
                        if (!$util.isString(message.outputType))
                            return "outputType: string expected";
                    if (message.options != null && message.hasOwnProperty("options")) {
                        var error = $root.google.protobuf.MethodOptions.verify(message.options);
                        if (error)
                            return "options." + error;
                    }
                    if (message.clientStreaming != null && message.hasOwnProperty("clientStreaming"))
                        if (typeof message.clientStreaming !== "boolean")
                            return "clientStreaming: boolean expected";
                    if (message.serverStreaming != null && message.hasOwnProperty("serverStreaming"))
                        if (typeof message.serverStreaming !== "boolean")
                            return "serverStreaming: boolean expected";
                    return null;
                };
    
                /**
                 * Creates a MethodDescriptorProto message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.protobuf.MethodDescriptorProto
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.protobuf.MethodDescriptorProto} MethodDescriptorProto
                 */
                MethodDescriptorProto.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.protobuf.MethodDescriptorProto)
                        return object;
                    var message = new $root.google.protobuf.MethodDescriptorProto();
                    if (object.name != null)
                        message.name = String(object.name);
                    if (object.inputType != null)
                        message.inputType = String(object.inputType);
                    if (object.outputType != null)
                        message.outputType = String(object.outputType);
                    if (object.options != null) {
                        if (typeof object.options !== "object")
                            throw TypeError(".google.protobuf.MethodDescriptorProto.options: object expected");
                        message.options = $root.google.protobuf.MethodOptions.fromObject(object.options);
                    }
                    if (object.clientStreaming != null)
                        message.clientStreaming = Boolean(object.clientStreaming);
                    if (object.serverStreaming != null)
                        message.serverStreaming = Boolean(object.serverStreaming);
                    return message;
                };
    
                /**
                 * Creates a plain object from a MethodDescriptorProto message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.protobuf.MethodDescriptorProto
                 * @static
                 * @param {google.protobuf.MethodDescriptorProto} message MethodDescriptorProto
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                MethodDescriptorProto.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.defaults) {
                        object.name = "";
                        object.inputType = "";
                        object.outputType = "";
                        object.options = null;
                        object.clientStreaming = false;
                        object.serverStreaming = false;
                    }
                    if (message.name != null && message.hasOwnProperty("name"))
                        object.name = message.name;
                    if (message.inputType != null && message.hasOwnProperty("inputType"))
                        object.inputType = message.inputType;
                    if (message.outputType != null && message.hasOwnProperty("outputType"))
                        object.outputType = message.outputType;
                    if (message.options != null && message.hasOwnProperty("options"))
                        object.options = $root.google.protobuf.MethodOptions.toObject(message.options, options);
                    if (message.clientStreaming != null && message.hasOwnProperty("clientStreaming"))
                        object.clientStreaming = message.clientStreaming;
                    if (message.serverStreaming != null && message.hasOwnProperty("serverStreaming"))
                        object.serverStreaming = message.serverStreaming;
                    return object;
                };
    
                /**
                 * Converts this MethodDescriptorProto to JSON.
                 * @function toJSON
                 * @memberof google.protobuf.MethodDescriptorProto
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                MethodDescriptorProto.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for MethodDescriptorProto
                 * @function getTypeUrl
                 * @memberof google.protobuf.MethodDescriptorProto
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                MethodDescriptorProto.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.protobuf.MethodDescriptorProto";
                };
    
                return MethodDescriptorProto;
            })();
    
            protobuf.FileOptions = (function() {
    
                /**
                 * Properties of a FileOptions.
                 * @memberof google.protobuf
                 * @interface IFileOptions
                 * @property {string|null} [javaPackage] FileOptions javaPackage
                 * @property {string|null} [javaOuterClassname] FileOptions javaOuterClassname
                 * @property {boolean|null} [javaMultipleFiles] FileOptions javaMultipleFiles
                 * @property {boolean|null} [javaGenerateEqualsAndHash] FileOptions javaGenerateEqualsAndHash
                 * @property {boolean|null} [javaStringCheckUtf8] FileOptions javaStringCheckUtf8
                 * @property {google.protobuf.FileOptions.OptimizeMode|null} [optimizeFor] FileOptions optimizeFor
                 * @property {string|null} [goPackage] FileOptions goPackage
                 * @property {boolean|null} [ccGenericServices] FileOptions ccGenericServices
                 * @property {boolean|null} [javaGenericServices] FileOptions javaGenericServices
                 * @property {boolean|null} [pyGenericServices] FileOptions pyGenericServices
                 * @property {boolean|null} [phpGenericServices] FileOptions phpGenericServices
                 * @property {boolean|null} [deprecated] FileOptions deprecated
                 * @property {boolean|null} [ccEnableArenas] FileOptions ccEnableArenas
                 * @property {string|null} [objcClassPrefix] FileOptions objcClassPrefix
                 * @property {string|null} [csharpNamespace] FileOptions csharpNamespace
                 * @property {string|null} [swiftPrefix] FileOptions swiftPrefix
                 * @property {string|null} [phpClassPrefix] FileOptions phpClassPrefix
                 * @property {string|null} [phpNamespace] FileOptions phpNamespace
                 * @property {string|null} [phpMetadataNamespace] FileOptions phpMetadataNamespace
                 * @property {string|null} [rubyPackage] FileOptions rubyPackage
                 * @property {Array.<google.protobuf.IUninterpretedOption>|null} [uninterpretedOption] FileOptions uninterpretedOption
                 */
    
                /**
                 * Constructs a new FileOptions.
                 * @memberof google.protobuf
                 * @classdesc Represents a FileOptions.
                 * @implements IFileOptions
                 * @constructor
                 * @param {google.protobuf.IFileOptions=} [properties] Properties to set
                 */
                function FileOptions(properties) {
                    this.uninterpretedOption = [];
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * FileOptions javaPackage.
                 * @member {string} javaPackage
                 * @memberof google.protobuf.FileOptions
                 * @instance
                 */
                FileOptions.prototype.javaPackage = "";
    
                /**
                 * FileOptions javaOuterClassname.
                 * @member {string} javaOuterClassname
                 * @memberof google.protobuf.FileOptions
                 * @instance
                 */
                FileOptions.prototype.javaOuterClassname = "";
    
                /**
                 * FileOptions javaMultipleFiles.
                 * @member {boolean} javaMultipleFiles
                 * @memberof google.protobuf.FileOptions
                 * @instance
                 */
                FileOptions.prototype.javaMultipleFiles = false;
    
                /**
                 * FileOptions javaGenerateEqualsAndHash.
                 * @member {boolean} javaGenerateEqualsAndHash
                 * @memberof google.protobuf.FileOptions
                 * @instance
                 */
                FileOptions.prototype.javaGenerateEqualsAndHash = false;
    
                /**
                 * FileOptions javaStringCheckUtf8.
                 * @member {boolean} javaStringCheckUtf8
                 * @memberof google.protobuf.FileOptions
                 * @instance
                 */
                FileOptions.prototype.javaStringCheckUtf8 = false;
    
                /**
                 * FileOptions optimizeFor.
                 * @member {google.protobuf.FileOptions.OptimizeMode} optimizeFor
                 * @memberof google.protobuf.FileOptions
                 * @instance
                 */
                FileOptions.prototype.optimizeFor = 1;
    
                /**
                 * FileOptions goPackage.
                 * @member {string} goPackage
                 * @memberof google.protobuf.FileOptions
                 * @instance
                 */
                FileOptions.prototype.goPackage = "";
    
                /**
                 * FileOptions ccGenericServices.
                 * @member {boolean} ccGenericServices
                 * @memberof google.protobuf.FileOptions
                 * @instance
                 */
                FileOptions.prototype.ccGenericServices = false;
    
                /**
                 * FileOptions javaGenericServices.
                 * @member {boolean} javaGenericServices
                 * @memberof google.protobuf.FileOptions
                 * @instance
                 */
                FileOptions.prototype.javaGenericServices = false;
    
                /**
                 * FileOptions pyGenericServices.
                 * @member {boolean} pyGenericServices
                 * @memberof google.protobuf.FileOptions
                 * @instance
                 */
                FileOptions.prototype.pyGenericServices = false;
    
                /**
                 * FileOptions phpGenericServices.
                 * @member {boolean} phpGenericServices
                 * @memberof google.protobuf.FileOptions
                 * @instance
                 */
                FileOptions.prototype.phpGenericServices = false;
    
                /**
                 * FileOptions deprecated.
                 * @member {boolean} deprecated
                 * @memberof google.protobuf.FileOptions
                 * @instance
                 */
                FileOptions.prototype.deprecated = false;
    
                /**
                 * FileOptions ccEnableArenas.
                 * @member {boolean} ccEnableArenas
                 * @memberof google.protobuf.FileOptions
                 * @instance
                 */
                FileOptions.prototype.ccEnableArenas = true;
    
                /**
                 * FileOptions objcClassPrefix.
                 * @member {string} objcClassPrefix
                 * @memberof google.protobuf.FileOptions
                 * @instance
                 */
                FileOptions.prototype.objcClassPrefix = "";
    
                /**
                 * FileOptions csharpNamespace.
                 * @member {string} csharpNamespace
                 * @memberof google.protobuf.FileOptions
                 * @instance
                 */
                FileOptions.prototype.csharpNamespace = "";
    
                /**
                 * FileOptions swiftPrefix.
                 * @member {string} swiftPrefix
                 * @memberof google.protobuf.FileOptions
                 * @instance
                 */
                FileOptions.prototype.swiftPrefix = "";
    
                /**
                 * FileOptions phpClassPrefix.
                 * @member {string} phpClassPrefix
                 * @memberof google.protobuf.FileOptions
                 * @instance
                 */
                FileOptions.prototype.phpClassPrefix = "";
    
                /**
                 * FileOptions phpNamespace.
                 * @member {string} phpNamespace
                 * @memberof google.protobuf.FileOptions
                 * @instance
                 */
                FileOptions.prototype.phpNamespace = "";
    
                /**
                 * FileOptions phpMetadataNamespace.
                 * @member {string} phpMetadataNamespace
                 * @memberof google.protobuf.FileOptions
                 * @instance
                 */
                FileOptions.prototype.phpMetadataNamespace = "";
    
                /**
                 * FileOptions rubyPackage.
                 * @member {string} rubyPackage
                 * @memberof google.protobuf.FileOptions
                 * @instance
                 */
                FileOptions.prototype.rubyPackage = "";
    
                /**
                 * FileOptions uninterpretedOption.
                 * @member {Array.<google.protobuf.IUninterpretedOption>} uninterpretedOption
                 * @memberof google.protobuf.FileOptions
                 * @instance
                 */
                FileOptions.prototype.uninterpretedOption = $util.emptyArray;
    
                /**
                 * Creates a new FileOptions instance using the specified properties.
                 * @function create
                 * @memberof google.protobuf.FileOptions
                 * @static
                 * @param {google.protobuf.IFileOptions=} [properties] Properties to set
                 * @returns {google.protobuf.FileOptions} FileOptions instance
                 */
                FileOptions.create = function create(properties) {
                    return new FileOptions(properties);
                };
    
                /**
                 * Encodes the specified FileOptions message. Does not implicitly {@link google.protobuf.FileOptions.verify|verify} messages.
                 * @function encode
                 * @memberof google.protobuf.FileOptions
                 * @static
                 * @param {google.protobuf.IFileOptions} message FileOptions message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                FileOptions.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.javaPackage != null && Object.hasOwnProperty.call(message, "javaPackage"))
                        writer.uint32(/* id 1, wireType 2 =*/10).string(message.javaPackage);
                    if (message.javaOuterClassname != null && Object.hasOwnProperty.call(message, "javaOuterClassname"))
                        writer.uint32(/* id 8, wireType 2 =*/66).string(message.javaOuterClassname);
                    if (message.optimizeFor != null && Object.hasOwnProperty.call(message, "optimizeFor"))
                        writer.uint32(/* id 9, wireType 0 =*/72).int32(message.optimizeFor);
                    if (message.javaMultipleFiles != null && Object.hasOwnProperty.call(message, "javaMultipleFiles"))
                        writer.uint32(/* id 10, wireType 0 =*/80).bool(message.javaMultipleFiles);
                    if (message.goPackage != null && Object.hasOwnProperty.call(message, "goPackage"))
                        writer.uint32(/* id 11, wireType 2 =*/90).string(message.goPackage);
                    if (message.ccGenericServices != null && Object.hasOwnProperty.call(message, "ccGenericServices"))
                        writer.uint32(/* id 16, wireType 0 =*/128).bool(message.ccGenericServices);
                    if (message.javaGenericServices != null && Object.hasOwnProperty.call(message, "javaGenericServices"))
                        writer.uint32(/* id 17, wireType 0 =*/136).bool(message.javaGenericServices);
                    if (message.pyGenericServices != null && Object.hasOwnProperty.call(message, "pyGenericServices"))
                        writer.uint32(/* id 18, wireType 0 =*/144).bool(message.pyGenericServices);
                    if (message.javaGenerateEqualsAndHash != null && Object.hasOwnProperty.call(message, "javaGenerateEqualsAndHash"))
                        writer.uint32(/* id 20, wireType 0 =*/160).bool(message.javaGenerateEqualsAndHash);
                    if (message.deprecated != null && Object.hasOwnProperty.call(message, "deprecated"))
                        writer.uint32(/* id 23, wireType 0 =*/184).bool(message.deprecated);
                    if (message.javaStringCheckUtf8 != null && Object.hasOwnProperty.call(message, "javaStringCheckUtf8"))
                        writer.uint32(/* id 27, wireType 0 =*/216).bool(message.javaStringCheckUtf8);
                    if (message.ccEnableArenas != null && Object.hasOwnProperty.call(message, "ccEnableArenas"))
                        writer.uint32(/* id 31, wireType 0 =*/248).bool(message.ccEnableArenas);
                    if (message.objcClassPrefix != null && Object.hasOwnProperty.call(message, "objcClassPrefix"))
                        writer.uint32(/* id 36, wireType 2 =*/290).string(message.objcClassPrefix);
                    if (message.csharpNamespace != null && Object.hasOwnProperty.call(message, "csharpNamespace"))
                        writer.uint32(/* id 37, wireType 2 =*/298).string(message.csharpNamespace);
                    if (message.swiftPrefix != null && Object.hasOwnProperty.call(message, "swiftPrefix"))
                        writer.uint32(/* id 39, wireType 2 =*/314).string(message.swiftPrefix);
                    if (message.phpClassPrefix != null && Object.hasOwnProperty.call(message, "phpClassPrefix"))
                        writer.uint32(/* id 40, wireType 2 =*/322).string(message.phpClassPrefix);
                    if (message.phpNamespace != null && Object.hasOwnProperty.call(message, "phpNamespace"))
                        writer.uint32(/* id 41, wireType 2 =*/330).string(message.phpNamespace);
                    if (message.phpGenericServices != null && Object.hasOwnProperty.call(message, "phpGenericServices"))
                        writer.uint32(/* id 42, wireType 0 =*/336).bool(message.phpGenericServices);
                    if (message.phpMetadataNamespace != null && Object.hasOwnProperty.call(message, "phpMetadataNamespace"))
                        writer.uint32(/* id 44, wireType 2 =*/354).string(message.phpMetadataNamespace);
                    if (message.rubyPackage != null && Object.hasOwnProperty.call(message, "rubyPackage"))
                        writer.uint32(/* id 45, wireType 2 =*/362).string(message.rubyPackage);
                    if (message.uninterpretedOption != null && message.uninterpretedOption.length)
                        for (var i = 0; i < message.uninterpretedOption.length; ++i)
                            $root.google.protobuf.UninterpretedOption.encode(message.uninterpretedOption[i], writer.uint32(/* id 999, wireType 2 =*/7994).fork()).ldelim();
                    return writer;
                };
    
                /**
                 * Encodes the specified FileOptions message, length delimited. Does not implicitly {@link google.protobuf.FileOptions.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.protobuf.FileOptions
                 * @static
                 * @param {google.protobuf.IFileOptions} message FileOptions message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                FileOptions.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a FileOptions message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.protobuf.FileOptions
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.protobuf.FileOptions} FileOptions
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                FileOptions.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.FileOptions();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1: {
                                message.javaPackage = reader.string();
                                break;
                            }
                        case 8: {
                                message.javaOuterClassname = reader.string();
                                break;
                            }
                        case 10: {
                                message.javaMultipleFiles = reader.bool();
                                break;
                            }
                        case 20: {
                                message.javaGenerateEqualsAndHash = reader.bool();
                                break;
                            }
                        case 27: {
                                message.javaStringCheckUtf8 = reader.bool();
                                break;
                            }
                        case 9: {
                                message.optimizeFor = reader.int32();
                                break;
                            }
                        case 11: {
                                message.goPackage = reader.string();
                                break;
                            }
                        case 16: {
                                message.ccGenericServices = reader.bool();
                                break;
                            }
                        case 17: {
                                message.javaGenericServices = reader.bool();
                                break;
                            }
                        case 18: {
                                message.pyGenericServices = reader.bool();
                                break;
                            }
                        case 42: {
                                message.phpGenericServices = reader.bool();
                                break;
                            }
                        case 23: {
                                message.deprecated = reader.bool();
                                break;
                            }
                        case 31: {
                                message.ccEnableArenas = reader.bool();
                                break;
                            }
                        case 36: {
                                message.objcClassPrefix = reader.string();
                                break;
                            }
                        case 37: {
                                message.csharpNamespace = reader.string();
                                break;
                            }
                        case 39: {
                                message.swiftPrefix = reader.string();
                                break;
                            }
                        case 40: {
                                message.phpClassPrefix = reader.string();
                                break;
                            }
                        case 41: {
                                message.phpNamespace = reader.string();
                                break;
                            }
                        case 44: {
                                message.phpMetadataNamespace = reader.string();
                                break;
                            }
                        case 45: {
                                message.rubyPackage = reader.string();
                                break;
                            }
                        case 999: {
                                if (!(message.uninterpretedOption && message.uninterpretedOption.length))
                                    message.uninterpretedOption = [];
                                message.uninterpretedOption.push($root.google.protobuf.UninterpretedOption.decode(reader, reader.uint32()));
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a FileOptions message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.protobuf.FileOptions
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.protobuf.FileOptions} FileOptions
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                FileOptions.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a FileOptions message.
                 * @function verify
                 * @memberof google.protobuf.FileOptions
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                FileOptions.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.javaPackage != null && message.hasOwnProperty("javaPackage"))
                        if (!$util.isString(message.javaPackage))
                            return "javaPackage: string expected";
                    if (message.javaOuterClassname != null && message.hasOwnProperty("javaOuterClassname"))
                        if (!$util.isString(message.javaOuterClassname))
                            return "javaOuterClassname: string expected";
                    if (message.javaMultipleFiles != null && message.hasOwnProperty("javaMultipleFiles"))
                        if (typeof message.javaMultipleFiles !== "boolean")
                            return "javaMultipleFiles: boolean expected";
                    if (message.javaGenerateEqualsAndHash != null && message.hasOwnProperty("javaGenerateEqualsAndHash"))
                        if (typeof message.javaGenerateEqualsAndHash !== "boolean")
                            return "javaGenerateEqualsAndHash: boolean expected";
                    if (message.javaStringCheckUtf8 != null && message.hasOwnProperty("javaStringCheckUtf8"))
                        if (typeof message.javaStringCheckUtf8 !== "boolean")
                            return "javaStringCheckUtf8: boolean expected";
                    if (message.optimizeFor != null && message.hasOwnProperty("optimizeFor"))
                        switch (message.optimizeFor) {
                        default:
                            return "optimizeFor: enum value expected";
                        case 1:
                        case 2:
                        case 3:
                            break;
                        }
                    if (message.goPackage != null && message.hasOwnProperty("goPackage"))
                        if (!$util.isString(message.goPackage))
                            return "goPackage: string expected";
                    if (message.ccGenericServices != null && message.hasOwnProperty("ccGenericServices"))
                        if (typeof message.ccGenericServices !== "boolean")
                            return "ccGenericServices: boolean expected";
                    if (message.javaGenericServices != null && message.hasOwnProperty("javaGenericServices"))
                        if (typeof message.javaGenericServices !== "boolean")
                            return "javaGenericServices: boolean expected";
                    if (message.pyGenericServices != null && message.hasOwnProperty("pyGenericServices"))
                        if (typeof message.pyGenericServices !== "boolean")
                            return "pyGenericServices: boolean expected";
                    if (message.phpGenericServices != null && message.hasOwnProperty("phpGenericServices"))
                        if (typeof message.phpGenericServices !== "boolean")
                            return "phpGenericServices: boolean expected";
                    if (message.deprecated != null && message.hasOwnProperty("deprecated"))
                        if (typeof message.deprecated !== "boolean")
                            return "deprecated: boolean expected";
                    if (message.ccEnableArenas != null && message.hasOwnProperty("ccEnableArenas"))
                        if (typeof message.ccEnableArenas !== "boolean")
                            return "ccEnableArenas: boolean expected";
                    if (message.objcClassPrefix != null && message.hasOwnProperty("objcClassPrefix"))
                        if (!$util.isString(message.objcClassPrefix))
                            return "objcClassPrefix: string expected";
                    if (message.csharpNamespace != null && message.hasOwnProperty("csharpNamespace"))
                        if (!$util.isString(message.csharpNamespace))
                            return "csharpNamespace: string expected";
                    if (message.swiftPrefix != null && message.hasOwnProperty("swiftPrefix"))
                        if (!$util.isString(message.swiftPrefix))
                            return "swiftPrefix: string expected";
                    if (message.phpClassPrefix != null && message.hasOwnProperty("phpClassPrefix"))
                        if (!$util.isString(message.phpClassPrefix))
                            return "phpClassPrefix: string expected";
                    if (message.phpNamespace != null && message.hasOwnProperty("phpNamespace"))
                        if (!$util.isString(message.phpNamespace))
                            return "phpNamespace: string expected";
                    if (message.phpMetadataNamespace != null && message.hasOwnProperty("phpMetadataNamespace"))
                        if (!$util.isString(message.phpMetadataNamespace))
                            return "phpMetadataNamespace: string expected";
                    if (message.rubyPackage != null && message.hasOwnProperty("rubyPackage"))
                        if (!$util.isString(message.rubyPackage))
                            return "rubyPackage: string expected";
                    if (message.uninterpretedOption != null && message.hasOwnProperty("uninterpretedOption")) {
                        if (!Array.isArray(message.uninterpretedOption))
                            return "uninterpretedOption: array expected";
                        for (var i = 0; i < message.uninterpretedOption.length; ++i) {
                            var error = $root.google.protobuf.UninterpretedOption.verify(message.uninterpretedOption[i]);
                            if (error)
                                return "uninterpretedOption." + error;
                        }
                    }
                    return null;
                };
    
                /**
                 * Creates a FileOptions message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.protobuf.FileOptions
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.protobuf.FileOptions} FileOptions
                 */
                FileOptions.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.protobuf.FileOptions)
                        return object;
                    var message = new $root.google.protobuf.FileOptions();
                    if (object.javaPackage != null)
                        message.javaPackage = String(object.javaPackage);
                    if (object.javaOuterClassname != null)
                        message.javaOuterClassname = String(object.javaOuterClassname);
                    if (object.javaMultipleFiles != null)
                        message.javaMultipleFiles = Boolean(object.javaMultipleFiles);
                    if (object.javaGenerateEqualsAndHash != null)
                        message.javaGenerateEqualsAndHash = Boolean(object.javaGenerateEqualsAndHash);
                    if (object.javaStringCheckUtf8 != null)
                        message.javaStringCheckUtf8 = Boolean(object.javaStringCheckUtf8);
                    switch (object.optimizeFor) {
                    default:
                        if (typeof object.optimizeFor === "number") {
                            message.optimizeFor = object.optimizeFor;
                            break;
                        }
                        break;
                    case "SPEED":
                    case 1:
                        message.optimizeFor = 1;
                        break;
                    case "CODE_SIZE":
                    case 2:
                        message.optimizeFor = 2;
                        break;
                    case "LITE_RUNTIME":
                    case 3:
                        message.optimizeFor = 3;
                        break;
                    }
                    if (object.goPackage != null)
                        message.goPackage = String(object.goPackage);
                    if (object.ccGenericServices != null)
                        message.ccGenericServices = Boolean(object.ccGenericServices);
                    if (object.javaGenericServices != null)
                        message.javaGenericServices = Boolean(object.javaGenericServices);
                    if (object.pyGenericServices != null)
                        message.pyGenericServices = Boolean(object.pyGenericServices);
                    if (object.phpGenericServices != null)
                        message.phpGenericServices = Boolean(object.phpGenericServices);
                    if (object.deprecated != null)
                        message.deprecated = Boolean(object.deprecated);
                    if (object.ccEnableArenas != null)
                        message.ccEnableArenas = Boolean(object.ccEnableArenas);
                    if (object.objcClassPrefix != null)
                        message.objcClassPrefix = String(object.objcClassPrefix);
                    if (object.csharpNamespace != null)
                        message.csharpNamespace = String(object.csharpNamespace);
                    if (object.swiftPrefix != null)
                        message.swiftPrefix = String(object.swiftPrefix);
                    if (object.phpClassPrefix != null)
                        message.phpClassPrefix = String(object.phpClassPrefix);
                    if (object.phpNamespace != null)
                        message.phpNamespace = String(object.phpNamespace);
                    if (object.phpMetadataNamespace != null)
                        message.phpMetadataNamespace = String(object.phpMetadataNamespace);
                    if (object.rubyPackage != null)
                        message.rubyPackage = String(object.rubyPackage);
                    if (object.uninterpretedOption) {
                        if (!Array.isArray(object.uninterpretedOption))
                            throw TypeError(".google.protobuf.FileOptions.uninterpretedOption: array expected");
                        message.uninterpretedOption = [];
                        for (var i = 0; i < object.uninterpretedOption.length; ++i) {
                            if (typeof object.uninterpretedOption[i] !== "object")
                                throw TypeError(".google.protobuf.FileOptions.uninterpretedOption: object expected");
                            message.uninterpretedOption[i] = $root.google.protobuf.UninterpretedOption.fromObject(object.uninterpretedOption[i]);
                        }
                    }
                    return message;
                };
    
                /**
                 * Creates a plain object from a FileOptions message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.protobuf.FileOptions
                 * @static
                 * @param {google.protobuf.FileOptions} message FileOptions
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                FileOptions.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.arrays || options.defaults)
                        object.uninterpretedOption = [];
                    if (options.defaults) {
                        object.javaPackage = "";
                        object.javaOuterClassname = "";
                        object.optimizeFor = options.enums === String ? "SPEED" : 1;
                        object.javaMultipleFiles = false;
                        object.goPackage = "";
                        object.ccGenericServices = false;
                        object.javaGenericServices = false;
                        object.pyGenericServices = false;
                        object.javaGenerateEqualsAndHash = false;
                        object.deprecated = false;
                        object.javaStringCheckUtf8 = false;
                        object.ccEnableArenas = true;
                        object.objcClassPrefix = "";
                        object.csharpNamespace = "";
                        object.swiftPrefix = "";
                        object.phpClassPrefix = "";
                        object.phpNamespace = "";
                        object.phpGenericServices = false;
                        object.phpMetadataNamespace = "";
                        object.rubyPackage = "";
                    }
                    if (message.javaPackage != null && message.hasOwnProperty("javaPackage"))
                        object.javaPackage = message.javaPackage;
                    if (message.javaOuterClassname != null && message.hasOwnProperty("javaOuterClassname"))
                        object.javaOuterClassname = message.javaOuterClassname;
                    if (message.optimizeFor != null && message.hasOwnProperty("optimizeFor"))
                        object.optimizeFor = options.enums === String ? $root.google.protobuf.FileOptions.OptimizeMode[message.optimizeFor] === undefined ? message.optimizeFor : $root.google.protobuf.FileOptions.OptimizeMode[message.optimizeFor] : message.optimizeFor;
                    if (message.javaMultipleFiles != null && message.hasOwnProperty("javaMultipleFiles"))
                        object.javaMultipleFiles = message.javaMultipleFiles;
                    if (message.goPackage != null && message.hasOwnProperty("goPackage"))
                        object.goPackage = message.goPackage;
                    if (message.ccGenericServices != null && message.hasOwnProperty("ccGenericServices"))
                        object.ccGenericServices = message.ccGenericServices;
                    if (message.javaGenericServices != null && message.hasOwnProperty("javaGenericServices"))
                        object.javaGenericServices = message.javaGenericServices;
                    if (message.pyGenericServices != null && message.hasOwnProperty("pyGenericServices"))
                        object.pyGenericServices = message.pyGenericServices;
                    if (message.javaGenerateEqualsAndHash != null && message.hasOwnProperty("javaGenerateEqualsAndHash"))
                        object.javaGenerateEqualsAndHash = message.javaGenerateEqualsAndHash;
                    if (message.deprecated != null && message.hasOwnProperty("deprecated"))
                        object.deprecated = message.deprecated;
                    if (message.javaStringCheckUtf8 != null && message.hasOwnProperty("javaStringCheckUtf8"))
                        object.javaStringCheckUtf8 = message.javaStringCheckUtf8;
                    if (message.ccEnableArenas != null && message.hasOwnProperty("ccEnableArenas"))
                        object.ccEnableArenas = message.ccEnableArenas;
                    if (message.objcClassPrefix != null && message.hasOwnProperty("objcClassPrefix"))
                        object.objcClassPrefix = message.objcClassPrefix;
                    if (message.csharpNamespace != null && message.hasOwnProperty("csharpNamespace"))
                        object.csharpNamespace = message.csharpNamespace;
                    if (message.swiftPrefix != null && message.hasOwnProperty("swiftPrefix"))
                        object.swiftPrefix = message.swiftPrefix;
                    if (message.phpClassPrefix != null && message.hasOwnProperty("phpClassPrefix"))
                        object.phpClassPrefix = message.phpClassPrefix;
                    if (message.phpNamespace != null && message.hasOwnProperty("phpNamespace"))
                        object.phpNamespace = message.phpNamespace;
                    if (message.phpGenericServices != null && message.hasOwnProperty("phpGenericServices"))
                        object.phpGenericServices = message.phpGenericServices;
                    if (message.phpMetadataNamespace != null && message.hasOwnProperty("phpMetadataNamespace"))
                        object.phpMetadataNamespace = message.phpMetadataNamespace;
                    if (message.rubyPackage != null && message.hasOwnProperty("rubyPackage"))
                        object.rubyPackage = message.rubyPackage;
                    if (message.uninterpretedOption && message.uninterpretedOption.length) {
                        object.uninterpretedOption = [];
                        for (var j = 0; j < message.uninterpretedOption.length; ++j)
                            object.uninterpretedOption[j] = $root.google.protobuf.UninterpretedOption.toObject(message.uninterpretedOption[j], options);
                    }
                    return object;
                };
    
                /**
                 * Converts this FileOptions to JSON.
                 * @function toJSON
                 * @memberof google.protobuf.FileOptions
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                FileOptions.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for FileOptions
                 * @function getTypeUrl
                 * @memberof google.protobuf.FileOptions
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                FileOptions.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.protobuf.FileOptions";
                };
    
                /**
                 * OptimizeMode enum.
                 * @name google.protobuf.FileOptions.OptimizeMode
                 * @enum {number}
                 * @property {number} SPEED=1 SPEED value
                 * @property {number} CODE_SIZE=2 CODE_SIZE value
                 * @property {number} LITE_RUNTIME=3 LITE_RUNTIME value
                 */
                FileOptions.OptimizeMode = (function() {
                    var valuesById = {}, values = Object.create(valuesById);
                    values[valuesById[1] = "SPEED"] = 1;
                    values[valuesById[2] = "CODE_SIZE"] = 2;
                    values[valuesById[3] = "LITE_RUNTIME"] = 3;
                    return values;
                })();
    
                return FileOptions;
            })();
    
            protobuf.MessageOptions = (function() {
    
                /**
                 * Properties of a MessageOptions.
                 * @memberof google.protobuf
                 * @interface IMessageOptions
                 * @property {boolean|null} [messageSetWireFormat] MessageOptions messageSetWireFormat
                 * @property {boolean|null} [noStandardDescriptorAccessor] MessageOptions noStandardDescriptorAccessor
                 * @property {boolean|null} [deprecated] MessageOptions deprecated
                 * @property {boolean|null} [mapEntry] MessageOptions mapEntry
                 * @property {boolean|null} [deprecatedLegacyJsonFieldConflicts] MessageOptions deprecatedLegacyJsonFieldConflicts
                 * @property {Array.<google.protobuf.IUninterpretedOption>|null} [uninterpretedOption] MessageOptions uninterpretedOption
                 */
    
                /**
                 * Constructs a new MessageOptions.
                 * @memberof google.protobuf
                 * @classdesc Represents a MessageOptions.
                 * @implements IMessageOptions
                 * @constructor
                 * @param {google.protobuf.IMessageOptions=} [properties] Properties to set
                 */
                function MessageOptions(properties) {
                    this.uninterpretedOption = [];
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * MessageOptions messageSetWireFormat.
                 * @member {boolean} messageSetWireFormat
                 * @memberof google.protobuf.MessageOptions
                 * @instance
                 */
                MessageOptions.prototype.messageSetWireFormat = false;
    
                /**
                 * MessageOptions noStandardDescriptorAccessor.
                 * @member {boolean} noStandardDescriptorAccessor
                 * @memberof google.protobuf.MessageOptions
                 * @instance
                 */
                MessageOptions.prototype.noStandardDescriptorAccessor = false;
    
                /**
                 * MessageOptions deprecated.
                 * @member {boolean} deprecated
                 * @memberof google.protobuf.MessageOptions
                 * @instance
                 */
                MessageOptions.prototype.deprecated = false;
    
                /**
                 * MessageOptions mapEntry.
                 * @member {boolean} mapEntry
                 * @memberof google.protobuf.MessageOptions
                 * @instance
                 */
                MessageOptions.prototype.mapEntry = false;
    
                /**
                 * MessageOptions deprecatedLegacyJsonFieldConflicts.
                 * @member {boolean} deprecatedLegacyJsonFieldConflicts
                 * @memberof google.protobuf.MessageOptions
                 * @instance
                 */
                MessageOptions.prototype.deprecatedLegacyJsonFieldConflicts = false;
    
                /**
                 * MessageOptions uninterpretedOption.
                 * @member {Array.<google.protobuf.IUninterpretedOption>} uninterpretedOption
                 * @memberof google.protobuf.MessageOptions
                 * @instance
                 */
                MessageOptions.prototype.uninterpretedOption = $util.emptyArray;
    
                /**
                 * Creates a new MessageOptions instance using the specified properties.
                 * @function create
                 * @memberof google.protobuf.MessageOptions
                 * @static
                 * @param {google.protobuf.IMessageOptions=} [properties] Properties to set
                 * @returns {google.protobuf.MessageOptions} MessageOptions instance
                 */
                MessageOptions.create = function create(properties) {
                    return new MessageOptions(properties);
                };
    
                /**
                 * Encodes the specified MessageOptions message. Does not implicitly {@link google.protobuf.MessageOptions.verify|verify} messages.
                 * @function encode
                 * @memberof google.protobuf.MessageOptions
                 * @static
                 * @param {google.protobuf.IMessageOptions} message MessageOptions message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                MessageOptions.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.messageSetWireFormat != null && Object.hasOwnProperty.call(message, "messageSetWireFormat"))
                        writer.uint32(/* id 1, wireType 0 =*/8).bool(message.messageSetWireFormat);
                    if (message.noStandardDescriptorAccessor != null && Object.hasOwnProperty.call(message, "noStandardDescriptorAccessor"))
                        writer.uint32(/* id 2, wireType 0 =*/16).bool(message.noStandardDescriptorAccessor);
                    if (message.deprecated != null && Object.hasOwnProperty.call(message, "deprecated"))
                        writer.uint32(/* id 3, wireType 0 =*/24).bool(message.deprecated);
                    if (message.mapEntry != null && Object.hasOwnProperty.call(message, "mapEntry"))
                        writer.uint32(/* id 7, wireType 0 =*/56).bool(message.mapEntry);
                    if (message.deprecatedLegacyJsonFieldConflicts != null && Object.hasOwnProperty.call(message, "deprecatedLegacyJsonFieldConflicts"))
                        writer.uint32(/* id 11, wireType 0 =*/88).bool(message.deprecatedLegacyJsonFieldConflicts);
                    if (message.uninterpretedOption != null && message.uninterpretedOption.length)
                        for (var i = 0; i < message.uninterpretedOption.length; ++i)
                            $root.google.protobuf.UninterpretedOption.encode(message.uninterpretedOption[i], writer.uint32(/* id 999, wireType 2 =*/7994).fork()).ldelim();
                    return writer;
                };
    
                /**
                 * Encodes the specified MessageOptions message, length delimited. Does not implicitly {@link google.protobuf.MessageOptions.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.protobuf.MessageOptions
                 * @static
                 * @param {google.protobuf.IMessageOptions} message MessageOptions message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                MessageOptions.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a MessageOptions message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.protobuf.MessageOptions
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.protobuf.MessageOptions} MessageOptions
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                MessageOptions.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.MessageOptions();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1: {
                                message.messageSetWireFormat = reader.bool();
                                break;
                            }
                        case 2: {
                                message.noStandardDescriptorAccessor = reader.bool();
                                break;
                            }
                        case 3: {
                                message.deprecated = reader.bool();
                                break;
                            }
                        case 7: {
                                message.mapEntry = reader.bool();
                                break;
                            }
                        case 11: {
                                message.deprecatedLegacyJsonFieldConflicts = reader.bool();
                                break;
                            }
                        case 999: {
                                if (!(message.uninterpretedOption && message.uninterpretedOption.length))
                                    message.uninterpretedOption = [];
                                message.uninterpretedOption.push($root.google.protobuf.UninterpretedOption.decode(reader, reader.uint32()));
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a MessageOptions message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.protobuf.MessageOptions
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.protobuf.MessageOptions} MessageOptions
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                MessageOptions.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a MessageOptions message.
                 * @function verify
                 * @memberof google.protobuf.MessageOptions
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                MessageOptions.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.messageSetWireFormat != null && message.hasOwnProperty("messageSetWireFormat"))
                        if (typeof message.messageSetWireFormat !== "boolean")
                            return "messageSetWireFormat: boolean expected";
                    if (message.noStandardDescriptorAccessor != null && message.hasOwnProperty("noStandardDescriptorAccessor"))
                        if (typeof message.noStandardDescriptorAccessor !== "boolean")
                            return "noStandardDescriptorAccessor: boolean expected";
                    if (message.deprecated != null && message.hasOwnProperty("deprecated"))
                        if (typeof message.deprecated !== "boolean")
                            return "deprecated: boolean expected";
                    if (message.mapEntry != null && message.hasOwnProperty("mapEntry"))
                        if (typeof message.mapEntry !== "boolean")
                            return "mapEntry: boolean expected";
                    if (message.deprecatedLegacyJsonFieldConflicts != null && message.hasOwnProperty("deprecatedLegacyJsonFieldConflicts"))
                        if (typeof message.deprecatedLegacyJsonFieldConflicts !== "boolean")
                            return "deprecatedLegacyJsonFieldConflicts: boolean expected";
                    if (message.uninterpretedOption != null && message.hasOwnProperty("uninterpretedOption")) {
                        if (!Array.isArray(message.uninterpretedOption))
                            return "uninterpretedOption: array expected";
                        for (var i = 0; i < message.uninterpretedOption.length; ++i) {
                            var error = $root.google.protobuf.UninterpretedOption.verify(message.uninterpretedOption[i]);
                            if (error)
                                return "uninterpretedOption." + error;
                        }
                    }
                    return null;
                };
    
                /**
                 * Creates a MessageOptions message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.protobuf.MessageOptions
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.protobuf.MessageOptions} MessageOptions
                 */
                MessageOptions.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.protobuf.MessageOptions)
                        return object;
                    var message = new $root.google.protobuf.MessageOptions();
                    if (object.messageSetWireFormat != null)
                        message.messageSetWireFormat = Boolean(object.messageSetWireFormat);
                    if (object.noStandardDescriptorAccessor != null)
                        message.noStandardDescriptorAccessor = Boolean(object.noStandardDescriptorAccessor);
                    if (object.deprecated != null)
                        message.deprecated = Boolean(object.deprecated);
                    if (object.mapEntry != null)
                        message.mapEntry = Boolean(object.mapEntry);
                    if (object.deprecatedLegacyJsonFieldConflicts != null)
                        message.deprecatedLegacyJsonFieldConflicts = Boolean(object.deprecatedLegacyJsonFieldConflicts);
                    if (object.uninterpretedOption) {
                        if (!Array.isArray(object.uninterpretedOption))
                            throw TypeError(".google.protobuf.MessageOptions.uninterpretedOption: array expected");
                        message.uninterpretedOption = [];
                        for (var i = 0; i < object.uninterpretedOption.length; ++i) {
                            if (typeof object.uninterpretedOption[i] !== "object")
                                throw TypeError(".google.protobuf.MessageOptions.uninterpretedOption: object expected");
                            message.uninterpretedOption[i] = $root.google.protobuf.UninterpretedOption.fromObject(object.uninterpretedOption[i]);
                        }
                    }
                    return message;
                };
    
                /**
                 * Creates a plain object from a MessageOptions message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.protobuf.MessageOptions
                 * @static
                 * @param {google.protobuf.MessageOptions} message MessageOptions
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                MessageOptions.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.arrays || options.defaults)
                        object.uninterpretedOption = [];
                    if (options.defaults) {
                        object.messageSetWireFormat = false;
                        object.noStandardDescriptorAccessor = false;
                        object.deprecated = false;
                        object.mapEntry = false;
                        object.deprecatedLegacyJsonFieldConflicts = false;
                    }
                    if (message.messageSetWireFormat != null && message.hasOwnProperty("messageSetWireFormat"))
                        object.messageSetWireFormat = message.messageSetWireFormat;
                    if (message.noStandardDescriptorAccessor != null && message.hasOwnProperty("noStandardDescriptorAccessor"))
                        object.noStandardDescriptorAccessor = message.noStandardDescriptorAccessor;
                    if (message.deprecated != null && message.hasOwnProperty("deprecated"))
                        object.deprecated = message.deprecated;
                    if (message.mapEntry != null && message.hasOwnProperty("mapEntry"))
                        object.mapEntry = message.mapEntry;
                    if (message.deprecatedLegacyJsonFieldConflicts != null && message.hasOwnProperty("deprecatedLegacyJsonFieldConflicts"))
                        object.deprecatedLegacyJsonFieldConflicts = message.deprecatedLegacyJsonFieldConflicts;
                    if (message.uninterpretedOption && message.uninterpretedOption.length) {
                        object.uninterpretedOption = [];
                        for (var j = 0; j < message.uninterpretedOption.length; ++j)
                            object.uninterpretedOption[j] = $root.google.protobuf.UninterpretedOption.toObject(message.uninterpretedOption[j], options);
                    }
                    return object;
                };
    
                /**
                 * Converts this MessageOptions to JSON.
                 * @function toJSON
                 * @memberof google.protobuf.MessageOptions
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                MessageOptions.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for MessageOptions
                 * @function getTypeUrl
                 * @memberof google.protobuf.MessageOptions
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                MessageOptions.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.protobuf.MessageOptions";
                };
    
                return MessageOptions;
            })();
    
            protobuf.FieldOptions = (function() {
    
                /**
                 * Properties of a FieldOptions.
                 * @memberof google.protobuf
                 * @interface IFieldOptions
                 * @property {google.protobuf.FieldOptions.CType|null} [ctype] FieldOptions ctype
                 * @property {boolean|null} [packed] FieldOptions packed
                 * @property {google.protobuf.FieldOptions.JSType|null} [jstype] FieldOptions jstype
                 * @property {boolean|null} [lazy] FieldOptions lazy
                 * @property {boolean|null} [unverifiedLazy] FieldOptions unverifiedLazy
                 * @property {boolean|null} [deprecated] FieldOptions deprecated
                 * @property {boolean|null} [weak] FieldOptions weak
                 * @property {boolean|null} [debugRedact] FieldOptions debugRedact
                 * @property {google.protobuf.FieldOptions.OptionRetention|null} [retention] FieldOptions retention
                 * @property {google.protobuf.FieldOptions.OptionTargetType|null} [target] FieldOptions target
                 * @property {Array.<google.protobuf.IUninterpretedOption>|null} [uninterpretedOption] FieldOptions uninterpretedOption
                 * @property {Array.<google.api.FieldBehavior>|null} [".google.api.fieldBehavior"] FieldOptions .google.api.fieldBehavior
                 */
    
                /**
                 * Constructs a new FieldOptions.
                 * @memberof google.protobuf
                 * @classdesc Represents a FieldOptions.
                 * @implements IFieldOptions
                 * @constructor
                 * @param {google.protobuf.IFieldOptions=} [properties] Properties to set
                 */
                function FieldOptions(properties) {
                    this.uninterpretedOption = [];
                    this[".google.api.fieldBehavior"] = [];
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * FieldOptions ctype.
                 * @member {google.protobuf.FieldOptions.CType} ctype
                 * @memberof google.protobuf.FieldOptions
                 * @instance
                 */
                FieldOptions.prototype.ctype = 0;
    
                /**
                 * FieldOptions packed.
                 * @member {boolean} packed
                 * @memberof google.protobuf.FieldOptions
                 * @instance
                 */
                FieldOptions.prototype.packed = false;
    
                /**
                 * FieldOptions jstype.
                 * @member {google.protobuf.FieldOptions.JSType} jstype
                 * @memberof google.protobuf.FieldOptions
                 * @instance
                 */
                FieldOptions.prototype.jstype = 0;
    
                /**
                 * FieldOptions lazy.
                 * @member {boolean} lazy
                 * @memberof google.protobuf.FieldOptions
                 * @instance
                 */
                FieldOptions.prototype.lazy = false;
    
                /**
                 * FieldOptions unverifiedLazy.
                 * @member {boolean} unverifiedLazy
                 * @memberof google.protobuf.FieldOptions
                 * @instance
                 */
                FieldOptions.prototype.unverifiedLazy = false;
    
                /**
                 * FieldOptions deprecated.
                 * @member {boolean} deprecated
                 * @memberof google.protobuf.FieldOptions
                 * @instance
                 */
                FieldOptions.prototype.deprecated = false;
    
                /**
                 * FieldOptions weak.
                 * @member {boolean} weak
                 * @memberof google.protobuf.FieldOptions
                 * @instance
                 */
                FieldOptions.prototype.weak = false;
    
                /**
                 * FieldOptions debugRedact.
                 * @member {boolean} debugRedact
                 * @memberof google.protobuf.FieldOptions
                 * @instance
                 */
                FieldOptions.prototype.debugRedact = false;
    
                /**
                 * FieldOptions retention.
                 * @member {google.protobuf.FieldOptions.OptionRetention} retention
                 * @memberof google.protobuf.FieldOptions
                 * @instance
                 */
                FieldOptions.prototype.retention = 0;
    
                /**
                 * FieldOptions target.
                 * @member {google.protobuf.FieldOptions.OptionTargetType} target
                 * @memberof google.protobuf.FieldOptions
                 * @instance
                 */
                FieldOptions.prototype.target = 0;
    
                /**
                 * FieldOptions uninterpretedOption.
                 * @member {Array.<google.protobuf.IUninterpretedOption>} uninterpretedOption
                 * @memberof google.protobuf.FieldOptions
                 * @instance
                 */
                FieldOptions.prototype.uninterpretedOption = $util.emptyArray;
    
                /**
                 * FieldOptions .google.api.fieldBehavior.
                 * @member {Array.<google.api.FieldBehavior>} .google.api.fieldBehavior
                 * @memberof google.protobuf.FieldOptions
                 * @instance
                 */
                FieldOptions.prototype[".google.api.fieldBehavior"] = $util.emptyArray;
    
                /**
                 * Creates a new FieldOptions instance using the specified properties.
                 * @function create
                 * @memberof google.protobuf.FieldOptions
                 * @static
                 * @param {google.protobuf.IFieldOptions=} [properties] Properties to set
                 * @returns {google.protobuf.FieldOptions} FieldOptions instance
                 */
                FieldOptions.create = function create(properties) {
                    return new FieldOptions(properties);
                };
    
                /**
                 * Encodes the specified FieldOptions message. Does not implicitly {@link google.protobuf.FieldOptions.verify|verify} messages.
                 * @function encode
                 * @memberof google.protobuf.FieldOptions
                 * @static
                 * @param {google.protobuf.IFieldOptions} message FieldOptions message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                FieldOptions.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.ctype != null && Object.hasOwnProperty.call(message, "ctype"))
                        writer.uint32(/* id 1, wireType 0 =*/8).int32(message.ctype);
                    if (message.packed != null && Object.hasOwnProperty.call(message, "packed"))
                        writer.uint32(/* id 2, wireType 0 =*/16).bool(message.packed);
                    if (message.deprecated != null && Object.hasOwnProperty.call(message, "deprecated"))
                        writer.uint32(/* id 3, wireType 0 =*/24).bool(message.deprecated);
                    if (message.lazy != null && Object.hasOwnProperty.call(message, "lazy"))
                        writer.uint32(/* id 5, wireType 0 =*/40).bool(message.lazy);
                    if (message.jstype != null && Object.hasOwnProperty.call(message, "jstype"))
                        writer.uint32(/* id 6, wireType 0 =*/48).int32(message.jstype);
                    if (message.weak != null && Object.hasOwnProperty.call(message, "weak"))
                        writer.uint32(/* id 10, wireType 0 =*/80).bool(message.weak);
                    if (message.unverifiedLazy != null && Object.hasOwnProperty.call(message, "unverifiedLazy"))
                        writer.uint32(/* id 15, wireType 0 =*/120).bool(message.unverifiedLazy);
                    if (message.debugRedact != null && Object.hasOwnProperty.call(message, "debugRedact"))
                        writer.uint32(/* id 16, wireType 0 =*/128).bool(message.debugRedact);
                    if (message.retention != null && Object.hasOwnProperty.call(message, "retention"))
                        writer.uint32(/* id 17, wireType 0 =*/136).int32(message.retention);
                    if (message.target != null && Object.hasOwnProperty.call(message, "target"))
                        writer.uint32(/* id 18, wireType 0 =*/144).int32(message.target);
                    if (message.uninterpretedOption != null && message.uninterpretedOption.length)
                        for (var i = 0; i < message.uninterpretedOption.length; ++i)
                            $root.google.protobuf.UninterpretedOption.encode(message.uninterpretedOption[i], writer.uint32(/* id 999, wireType 2 =*/7994).fork()).ldelim();
                    if (message[".google.api.fieldBehavior"] != null && message[".google.api.fieldBehavior"].length) {
                        writer.uint32(/* id 1052, wireType 2 =*/8418).fork();
                        for (var i = 0; i < message[".google.api.fieldBehavior"].length; ++i)
                            writer.int32(message[".google.api.fieldBehavior"][i]);
                        writer.ldelim();
                    }
                    return writer;
                };
    
                /**
                 * Encodes the specified FieldOptions message, length delimited. Does not implicitly {@link google.protobuf.FieldOptions.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.protobuf.FieldOptions
                 * @static
                 * @param {google.protobuf.IFieldOptions} message FieldOptions message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                FieldOptions.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a FieldOptions message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.protobuf.FieldOptions
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.protobuf.FieldOptions} FieldOptions
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                FieldOptions.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.FieldOptions();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1: {
                                message.ctype = reader.int32();
                                break;
                            }
                        case 2: {
                                message.packed = reader.bool();
                                break;
                            }
                        case 6: {
                                message.jstype = reader.int32();
                                break;
                            }
                        case 5: {
                                message.lazy = reader.bool();
                                break;
                            }
                        case 15: {
                                message.unverifiedLazy = reader.bool();
                                break;
                            }
                        case 3: {
                                message.deprecated = reader.bool();
                                break;
                            }
                        case 10: {
                                message.weak = reader.bool();
                                break;
                            }
                        case 16: {
                                message.debugRedact = reader.bool();
                                break;
                            }
                        case 17: {
                                message.retention = reader.int32();
                                break;
                            }
                        case 18: {
                                message.target = reader.int32();
                                break;
                            }
                        case 999: {
                                if (!(message.uninterpretedOption && message.uninterpretedOption.length))
                                    message.uninterpretedOption = [];
                                message.uninterpretedOption.push($root.google.protobuf.UninterpretedOption.decode(reader, reader.uint32()));
                                break;
                            }
                        case 1052: {
                                if (!(message[".google.api.fieldBehavior"] && message[".google.api.fieldBehavior"].length))
                                    message[".google.api.fieldBehavior"] = [];
                                if ((tag & 7) === 2) {
                                    var end2 = reader.uint32() + reader.pos;
                                    while (reader.pos < end2)
                                        message[".google.api.fieldBehavior"].push(reader.int32());
                                } else
                                    message[".google.api.fieldBehavior"].push(reader.int32());
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a FieldOptions message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.protobuf.FieldOptions
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.protobuf.FieldOptions} FieldOptions
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                FieldOptions.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a FieldOptions message.
                 * @function verify
                 * @memberof google.protobuf.FieldOptions
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                FieldOptions.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.ctype != null && message.hasOwnProperty("ctype"))
                        switch (message.ctype) {
                        default:
                            return "ctype: enum value expected";
                        case 0:
                        case 1:
                        case 2:
                            break;
                        }
                    if (message.packed != null && message.hasOwnProperty("packed"))
                        if (typeof message.packed !== "boolean")
                            return "packed: boolean expected";
                    if (message.jstype != null && message.hasOwnProperty("jstype"))
                        switch (message.jstype) {
                        default:
                            return "jstype: enum value expected";
                        case 0:
                        case 1:
                        case 2:
                            break;
                        }
                    if (message.lazy != null && message.hasOwnProperty("lazy"))
                        if (typeof message.lazy !== "boolean")
                            return "lazy: boolean expected";
                    if (message.unverifiedLazy != null && message.hasOwnProperty("unverifiedLazy"))
                        if (typeof message.unverifiedLazy !== "boolean")
                            return "unverifiedLazy: boolean expected";
                    if (message.deprecated != null && message.hasOwnProperty("deprecated"))
                        if (typeof message.deprecated !== "boolean")
                            return "deprecated: boolean expected";
                    if (message.weak != null && message.hasOwnProperty("weak"))
                        if (typeof message.weak !== "boolean")
                            return "weak: boolean expected";
                    if (message.debugRedact != null && message.hasOwnProperty("debugRedact"))
                        if (typeof message.debugRedact !== "boolean")
                            return "debugRedact: boolean expected";
                    if (message.retention != null && message.hasOwnProperty("retention"))
                        switch (message.retention) {
                        default:
                            return "retention: enum value expected";
                        case 0:
                        case 1:
                        case 2:
                            break;
                        }
                    if (message.target != null && message.hasOwnProperty("target"))
                        switch (message.target) {
                        default:
                            return "target: enum value expected";
                        case 0:
                        case 1:
                        case 2:
                        case 3:
                        case 4:
                        case 5:
                        case 6:
                        case 7:
                        case 8:
                        case 9:
                            break;
                        }
                    if (message.uninterpretedOption != null && message.hasOwnProperty("uninterpretedOption")) {
                        if (!Array.isArray(message.uninterpretedOption))
                            return "uninterpretedOption: array expected";
                        for (var i = 0; i < message.uninterpretedOption.length; ++i) {
                            var error = $root.google.protobuf.UninterpretedOption.verify(message.uninterpretedOption[i]);
                            if (error)
                                return "uninterpretedOption." + error;
                        }
                    }
                    if (message[".google.api.fieldBehavior"] != null && message.hasOwnProperty(".google.api.fieldBehavior")) {
                        if (!Array.isArray(message[".google.api.fieldBehavior"]))
                            return ".google.api.fieldBehavior: array expected";
                        for (var i = 0; i < message[".google.api.fieldBehavior"].length; ++i)
                            switch (message[".google.api.fieldBehavior"][i]) {
                            default:
                                return ".google.api.fieldBehavior: enum value[] expected";
                            case 0:
                            case 1:
                            case 2:
                            case 3:
                            case 4:
                            case 5:
                            case 6:
                            case 7:
                                break;
                            }
                    }
                    return null;
                };
    
                /**
                 * Creates a FieldOptions message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.protobuf.FieldOptions
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.protobuf.FieldOptions} FieldOptions
                 */
                FieldOptions.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.protobuf.FieldOptions)
                        return object;
                    var message = new $root.google.protobuf.FieldOptions();
                    switch (object.ctype) {
                    default:
                        if (typeof object.ctype === "number") {
                            message.ctype = object.ctype;
                            break;
                        }
                        break;
                    case "STRING":
                    case 0:
                        message.ctype = 0;
                        break;
                    case "CORD":
                    case 1:
                        message.ctype = 1;
                        break;
                    case "STRING_PIECE":
                    case 2:
                        message.ctype = 2;
                        break;
                    }
                    if (object.packed != null)
                        message.packed = Boolean(object.packed);
                    switch (object.jstype) {
                    default:
                        if (typeof object.jstype === "number") {
                            message.jstype = object.jstype;
                            break;
                        }
                        break;
                    case "JS_NORMAL":
                    case 0:
                        message.jstype = 0;
                        break;
                    case "JS_STRING":
                    case 1:
                        message.jstype = 1;
                        break;
                    case "JS_NUMBER":
                    case 2:
                        message.jstype = 2;
                        break;
                    }
                    if (object.lazy != null)
                        message.lazy = Boolean(object.lazy);
                    if (object.unverifiedLazy != null)
                        message.unverifiedLazy = Boolean(object.unverifiedLazy);
                    if (object.deprecated != null)
                        message.deprecated = Boolean(object.deprecated);
                    if (object.weak != null)
                        message.weak = Boolean(object.weak);
                    if (object.debugRedact != null)
                        message.debugRedact = Boolean(object.debugRedact);
                    switch (object.retention) {
                    default:
                        if (typeof object.retention === "number") {
                            message.retention = object.retention;
                            break;
                        }
                        break;
                    case "RETENTION_UNKNOWN":
                    case 0:
                        message.retention = 0;
                        break;
                    case "RETENTION_RUNTIME":
                    case 1:
                        message.retention = 1;
                        break;
                    case "RETENTION_SOURCE":
                    case 2:
                        message.retention = 2;
                        break;
                    }
                    switch (object.target) {
                    default:
                        if (typeof object.target === "number") {
                            message.target = object.target;
                            break;
                        }
                        break;
                    case "TARGET_TYPE_UNKNOWN":
                    case 0:
                        message.target = 0;
                        break;
                    case "TARGET_TYPE_FILE":
                    case 1:
                        message.target = 1;
                        break;
                    case "TARGET_TYPE_EXTENSION_RANGE":
                    case 2:
                        message.target = 2;
                        break;
                    case "TARGET_TYPE_MESSAGE":
                    case 3:
                        message.target = 3;
                        break;
                    case "TARGET_TYPE_FIELD":
                    case 4:
                        message.target = 4;
                        break;
                    case "TARGET_TYPE_ONEOF":
                    case 5:
                        message.target = 5;
                        break;
                    case "TARGET_TYPE_ENUM":
                    case 6:
                        message.target = 6;
                        break;
                    case "TARGET_TYPE_ENUM_ENTRY":
                    case 7:
                        message.target = 7;
                        break;
                    case "TARGET_TYPE_SERVICE":
                    case 8:
                        message.target = 8;
                        break;
                    case "TARGET_TYPE_METHOD":
                    case 9:
                        message.target = 9;
                        break;
                    }
                    if (object.uninterpretedOption) {
                        if (!Array.isArray(object.uninterpretedOption))
                            throw TypeError(".google.protobuf.FieldOptions.uninterpretedOption: array expected");
                        message.uninterpretedOption = [];
                        for (var i = 0; i < object.uninterpretedOption.length; ++i) {
                            if (typeof object.uninterpretedOption[i] !== "object")
                                throw TypeError(".google.protobuf.FieldOptions.uninterpretedOption: object expected");
                            message.uninterpretedOption[i] = $root.google.protobuf.UninterpretedOption.fromObject(object.uninterpretedOption[i]);
                        }
                    }
                    if (object[".google.api.fieldBehavior"]) {
                        if (!Array.isArray(object[".google.api.fieldBehavior"]))
                            throw TypeError(".google.protobuf.FieldOptions..google.api.fieldBehavior: array expected");
                        message[".google.api.fieldBehavior"] = [];
                        for (var i = 0; i < object[".google.api.fieldBehavior"].length; ++i)
                            switch (object[".google.api.fieldBehavior"][i]) {
                            default:
                                if (typeof object[".google.api.fieldBehavior"][i] === "number") {
                                    message[".google.api.fieldBehavior"][i] = object[".google.api.fieldBehavior"][i];
                                    break;
                                }
                            case "FIELD_BEHAVIOR_UNSPECIFIED":
                            case 0:
                                message[".google.api.fieldBehavior"][i] = 0;
                                break;
                            case "OPTIONAL":
                            case 1:
                                message[".google.api.fieldBehavior"][i] = 1;
                                break;
                            case "REQUIRED":
                            case 2:
                                message[".google.api.fieldBehavior"][i] = 2;
                                break;
                            case "OUTPUT_ONLY":
                            case 3:
                                message[".google.api.fieldBehavior"][i] = 3;
                                break;
                            case "INPUT_ONLY":
                            case 4:
                                message[".google.api.fieldBehavior"][i] = 4;
                                break;
                            case "IMMUTABLE":
                            case 5:
                                message[".google.api.fieldBehavior"][i] = 5;
                                break;
                            case "UNORDERED_LIST":
                            case 6:
                                message[".google.api.fieldBehavior"][i] = 6;
                                break;
                            case "NON_EMPTY_DEFAULT":
                            case 7:
                                message[".google.api.fieldBehavior"][i] = 7;
                                break;
                            }
                    }
                    return message;
                };
    
                /**
                 * Creates a plain object from a FieldOptions message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.protobuf.FieldOptions
                 * @static
                 * @param {google.protobuf.FieldOptions} message FieldOptions
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                FieldOptions.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.arrays || options.defaults) {
                        object.uninterpretedOption = [];
                        object[".google.api.fieldBehavior"] = [];
                    }
                    if (options.defaults) {
                        object.ctype = options.enums === String ? "STRING" : 0;
                        object.packed = false;
                        object.deprecated = false;
                        object.lazy = false;
                        object.jstype = options.enums === String ? "JS_NORMAL" : 0;
                        object.weak = false;
                        object.unverifiedLazy = false;
                        object.debugRedact = false;
                        object.retention = options.enums === String ? "RETENTION_UNKNOWN" : 0;
                        object.target = options.enums === String ? "TARGET_TYPE_UNKNOWN" : 0;
                    }
                    if (message.ctype != null && message.hasOwnProperty("ctype"))
                        object.ctype = options.enums === String ? $root.google.protobuf.FieldOptions.CType[message.ctype] === undefined ? message.ctype : $root.google.protobuf.FieldOptions.CType[message.ctype] : message.ctype;
                    if (message.packed != null && message.hasOwnProperty("packed"))
                        object.packed = message.packed;
                    if (message.deprecated != null && message.hasOwnProperty("deprecated"))
                        object.deprecated = message.deprecated;
                    if (message.lazy != null && message.hasOwnProperty("lazy"))
                        object.lazy = message.lazy;
                    if (message.jstype != null && message.hasOwnProperty("jstype"))
                        object.jstype = options.enums === String ? $root.google.protobuf.FieldOptions.JSType[message.jstype] === undefined ? message.jstype : $root.google.protobuf.FieldOptions.JSType[message.jstype] : message.jstype;
                    if (message.weak != null && message.hasOwnProperty("weak"))
                        object.weak = message.weak;
                    if (message.unverifiedLazy != null && message.hasOwnProperty("unverifiedLazy"))
                        object.unverifiedLazy = message.unverifiedLazy;
                    if (message.debugRedact != null && message.hasOwnProperty("debugRedact"))
                        object.debugRedact = message.debugRedact;
                    if (message.retention != null && message.hasOwnProperty("retention"))
                        object.retention = options.enums === String ? $root.google.protobuf.FieldOptions.OptionRetention[message.retention] === undefined ? message.retention : $root.google.protobuf.FieldOptions.OptionRetention[message.retention] : message.retention;
                    if (message.target != null && message.hasOwnProperty("target"))
                        object.target = options.enums === String ? $root.google.protobuf.FieldOptions.OptionTargetType[message.target] === undefined ? message.target : $root.google.protobuf.FieldOptions.OptionTargetType[message.target] : message.target;
                    if (message.uninterpretedOption && message.uninterpretedOption.length) {
                        object.uninterpretedOption = [];
                        for (var j = 0; j < message.uninterpretedOption.length; ++j)
                            object.uninterpretedOption[j] = $root.google.protobuf.UninterpretedOption.toObject(message.uninterpretedOption[j], options);
                    }
                    if (message[".google.api.fieldBehavior"] && message[".google.api.fieldBehavior"].length) {
                        object[".google.api.fieldBehavior"] = [];
                        for (var j = 0; j < message[".google.api.fieldBehavior"].length; ++j)
                            object[".google.api.fieldBehavior"][j] = options.enums === String ? $root.google.api.FieldBehavior[message[".google.api.fieldBehavior"][j]] === undefined ? message[".google.api.fieldBehavior"][j] : $root.google.api.FieldBehavior[message[".google.api.fieldBehavior"][j]] : message[".google.api.fieldBehavior"][j];
                    }
                    return object;
                };
    
                /**
                 * Converts this FieldOptions to JSON.
                 * @function toJSON
                 * @memberof google.protobuf.FieldOptions
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                FieldOptions.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for FieldOptions
                 * @function getTypeUrl
                 * @memberof google.protobuf.FieldOptions
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                FieldOptions.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.protobuf.FieldOptions";
                };
    
                /**
                 * CType enum.
                 * @name google.protobuf.FieldOptions.CType
                 * @enum {number}
                 * @property {number} STRING=0 STRING value
                 * @property {number} CORD=1 CORD value
                 * @property {number} STRING_PIECE=2 STRING_PIECE value
                 */
                FieldOptions.CType = (function() {
                    var valuesById = {}, values = Object.create(valuesById);
                    values[valuesById[0] = "STRING"] = 0;
                    values[valuesById[1] = "CORD"] = 1;
                    values[valuesById[2] = "STRING_PIECE"] = 2;
                    return values;
                })();
    
                /**
                 * JSType enum.
                 * @name google.protobuf.FieldOptions.JSType
                 * @enum {number}
                 * @property {number} JS_NORMAL=0 JS_NORMAL value
                 * @property {number} JS_STRING=1 JS_STRING value
                 * @property {number} JS_NUMBER=2 JS_NUMBER value
                 */
                FieldOptions.JSType = (function() {
                    var valuesById = {}, values = Object.create(valuesById);
                    values[valuesById[0] = "JS_NORMAL"] = 0;
                    values[valuesById[1] = "JS_STRING"] = 1;
                    values[valuesById[2] = "JS_NUMBER"] = 2;
                    return values;
                })();
    
                /**
                 * OptionRetention enum.
                 * @name google.protobuf.FieldOptions.OptionRetention
                 * @enum {number}
                 * @property {number} RETENTION_UNKNOWN=0 RETENTION_UNKNOWN value
                 * @property {number} RETENTION_RUNTIME=1 RETENTION_RUNTIME value
                 * @property {number} RETENTION_SOURCE=2 RETENTION_SOURCE value
                 */
                FieldOptions.OptionRetention = (function() {
                    var valuesById = {}, values = Object.create(valuesById);
                    values[valuesById[0] = "RETENTION_UNKNOWN"] = 0;
                    values[valuesById[1] = "RETENTION_RUNTIME"] = 1;
                    values[valuesById[2] = "RETENTION_SOURCE"] = 2;
                    return values;
                })();
    
                /**
                 * OptionTargetType enum.
                 * @name google.protobuf.FieldOptions.OptionTargetType
                 * @enum {number}
                 * @property {number} TARGET_TYPE_UNKNOWN=0 TARGET_TYPE_UNKNOWN value
                 * @property {number} TARGET_TYPE_FILE=1 TARGET_TYPE_FILE value
                 * @property {number} TARGET_TYPE_EXTENSION_RANGE=2 TARGET_TYPE_EXTENSION_RANGE value
                 * @property {number} TARGET_TYPE_MESSAGE=3 TARGET_TYPE_MESSAGE value
                 * @property {number} TARGET_TYPE_FIELD=4 TARGET_TYPE_FIELD value
                 * @property {number} TARGET_TYPE_ONEOF=5 TARGET_TYPE_ONEOF value
                 * @property {number} TARGET_TYPE_ENUM=6 TARGET_TYPE_ENUM value
                 * @property {number} TARGET_TYPE_ENUM_ENTRY=7 TARGET_TYPE_ENUM_ENTRY value
                 * @property {number} TARGET_TYPE_SERVICE=8 TARGET_TYPE_SERVICE value
                 * @property {number} TARGET_TYPE_METHOD=9 TARGET_TYPE_METHOD value
                 */
                FieldOptions.OptionTargetType = (function() {
                    var valuesById = {}, values = Object.create(valuesById);
                    values[valuesById[0] = "TARGET_TYPE_UNKNOWN"] = 0;
                    values[valuesById[1] = "TARGET_TYPE_FILE"] = 1;
                    values[valuesById[2] = "TARGET_TYPE_EXTENSION_RANGE"] = 2;
                    values[valuesById[3] = "TARGET_TYPE_MESSAGE"] = 3;
                    values[valuesById[4] = "TARGET_TYPE_FIELD"] = 4;
                    values[valuesById[5] = "TARGET_TYPE_ONEOF"] = 5;
                    values[valuesById[6] = "TARGET_TYPE_ENUM"] = 6;
                    values[valuesById[7] = "TARGET_TYPE_ENUM_ENTRY"] = 7;
                    values[valuesById[8] = "TARGET_TYPE_SERVICE"] = 8;
                    values[valuesById[9] = "TARGET_TYPE_METHOD"] = 9;
                    return values;
                })();
    
                return FieldOptions;
            })();
    
            protobuf.OneofOptions = (function() {
    
                /**
                 * Properties of an OneofOptions.
                 * @memberof google.protobuf
                 * @interface IOneofOptions
                 * @property {Array.<google.protobuf.IUninterpretedOption>|null} [uninterpretedOption] OneofOptions uninterpretedOption
                 */
    
                /**
                 * Constructs a new OneofOptions.
                 * @memberof google.protobuf
                 * @classdesc Represents an OneofOptions.
                 * @implements IOneofOptions
                 * @constructor
                 * @param {google.protobuf.IOneofOptions=} [properties] Properties to set
                 */
                function OneofOptions(properties) {
                    this.uninterpretedOption = [];
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * OneofOptions uninterpretedOption.
                 * @member {Array.<google.protobuf.IUninterpretedOption>} uninterpretedOption
                 * @memberof google.protobuf.OneofOptions
                 * @instance
                 */
                OneofOptions.prototype.uninterpretedOption = $util.emptyArray;
    
                /**
                 * Creates a new OneofOptions instance using the specified properties.
                 * @function create
                 * @memberof google.protobuf.OneofOptions
                 * @static
                 * @param {google.protobuf.IOneofOptions=} [properties] Properties to set
                 * @returns {google.protobuf.OneofOptions} OneofOptions instance
                 */
                OneofOptions.create = function create(properties) {
                    return new OneofOptions(properties);
                };
    
                /**
                 * Encodes the specified OneofOptions message. Does not implicitly {@link google.protobuf.OneofOptions.verify|verify} messages.
                 * @function encode
                 * @memberof google.protobuf.OneofOptions
                 * @static
                 * @param {google.protobuf.IOneofOptions} message OneofOptions message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                OneofOptions.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.uninterpretedOption != null && message.uninterpretedOption.length)
                        for (var i = 0; i < message.uninterpretedOption.length; ++i)
                            $root.google.protobuf.UninterpretedOption.encode(message.uninterpretedOption[i], writer.uint32(/* id 999, wireType 2 =*/7994).fork()).ldelim();
                    return writer;
                };
    
                /**
                 * Encodes the specified OneofOptions message, length delimited. Does not implicitly {@link google.protobuf.OneofOptions.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.protobuf.OneofOptions
                 * @static
                 * @param {google.protobuf.IOneofOptions} message OneofOptions message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                OneofOptions.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes an OneofOptions message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.protobuf.OneofOptions
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.protobuf.OneofOptions} OneofOptions
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                OneofOptions.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.OneofOptions();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 999: {
                                if (!(message.uninterpretedOption && message.uninterpretedOption.length))
                                    message.uninterpretedOption = [];
                                message.uninterpretedOption.push($root.google.protobuf.UninterpretedOption.decode(reader, reader.uint32()));
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes an OneofOptions message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.protobuf.OneofOptions
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.protobuf.OneofOptions} OneofOptions
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                OneofOptions.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies an OneofOptions message.
                 * @function verify
                 * @memberof google.protobuf.OneofOptions
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                OneofOptions.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.uninterpretedOption != null && message.hasOwnProperty("uninterpretedOption")) {
                        if (!Array.isArray(message.uninterpretedOption))
                            return "uninterpretedOption: array expected";
                        for (var i = 0; i < message.uninterpretedOption.length; ++i) {
                            var error = $root.google.protobuf.UninterpretedOption.verify(message.uninterpretedOption[i]);
                            if (error)
                                return "uninterpretedOption." + error;
                        }
                    }
                    return null;
                };
    
                /**
                 * Creates an OneofOptions message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.protobuf.OneofOptions
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.protobuf.OneofOptions} OneofOptions
                 */
                OneofOptions.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.protobuf.OneofOptions)
                        return object;
                    var message = new $root.google.protobuf.OneofOptions();
                    if (object.uninterpretedOption) {
                        if (!Array.isArray(object.uninterpretedOption))
                            throw TypeError(".google.protobuf.OneofOptions.uninterpretedOption: array expected");
                        message.uninterpretedOption = [];
                        for (var i = 0; i < object.uninterpretedOption.length; ++i) {
                            if (typeof object.uninterpretedOption[i] !== "object")
                                throw TypeError(".google.protobuf.OneofOptions.uninterpretedOption: object expected");
                            message.uninterpretedOption[i] = $root.google.protobuf.UninterpretedOption.fromObject(object.uninterpretedOption[i]);
                        }
                    }
                    return message;
                };
    
                /**
                 * Creates a plain object from an OneofOptions message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.protobuf.OneofOptions
                 * @static
                 * @param {google.protobuf.OneofOptions} message OneofOptions
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                OneofOptions.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.arrays || options.defaults)
                        object.uninterpretedOption = [];
                    if (message.uninterpretedOption && message.uninterpretedOption.length) {
                        object.uninterpretedOption = [];
                        for (var j = 0; j < message.uninterpretedOption.length; ++j)
                            object.uninterpretedOption[j] = $root.google.protobuf.UninterpretedOption.toObject(message.uninterpretedOption[j], options);
                    }
                    return object;
                };
    
                /**
                 * Converts this OneofOptions to JSON.
                 * @function toJSON
                 * @memberof google.protobuf.OneofOptions
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                OneofOptions.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for OneofOptions
                 * @function getTypeUrl
                 * @memberof google.protobuf.OneofOptions
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                OneofOptions.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.protobuf.OneofOptions";
                };
    
                return OneofOptions;
            })();
    
            protobuf.EnumOptions = (function() {
    
                /**
                 * Properties of an EnumOptions.
                 * @memberof google.protobuf
                 * @interface IEnumOptions
                 * @property {boolean|null} [allowAlias] EnumOptions allowAlias
                 * @property {boolean|null} [deprecated] EnumOptions deprecated
                 * @property {boolean|null} [deprecatedLegacyJsonFieldConflicts] EnumOptions deprecatedLegacyJsonFieldConflicts
                 * @property {Array.<google.protobuf.IUninterpretedOption>|null} [uninterpretedOption] EnumOptions uninterpretedOption
                 */
    
                /**
                 * Constructs a new EnumOptions.
                 * @memberof google.protobuf
                 * @classdesc Represents an EnumOptions.
                 * @implements IEnumOptions
                 * @constructor
                 * @param {google.protobuf.IEnumOptions=} [properties] Properties to set
                 */
                function EnumOptions(properties) {
                    this.uninterpretedOption = [];
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * EnumOptions allowAlias.
                 * @member {boolean} allowAlias
                 * @memberof google.protobuf.EnumOptions
                 * @instance
                 */
                EnumOptions.prototype.allowAlias = false;
    
                /**
                 * EnumOptions deprecated.
                 * @member {boolean} deprecated
                 * @memberof google.protobuf.EnumOptions
                 * @instance
                 */
                EnumOptions.prototype.deprecated = false;
    
                /**
                 * EnumOptions deprecatedLegacyJsonFieldConflicts.
                 * @member {boolean} deprecatedLegacyJsonFieldConflicts
                 * @memberof google.protobuf.EnumOptions
                 * @instance
                 */
                EnumOptions.prototype.deprecatedLegacyJsonFieldConflicts = false;
    
                /**
                 * EnumOptions uninterpretedOption.
                 * @member {Array.<google.protobuf.IUninterpretedOption>} uninterpretedOption
                 * @memberof google.protobuf.EnumOptions
                 * @instance
                 */
                EnumOptions.prototype.uninterpretedOption = $util.emptyArray;
    
                /**
                 * Creates a new EnumOptions instance using the specified properties.
                 * @function create
                 * @memberof google.protobuf.EnumOptions
                 * @static
                 * @param {google.protobuf.IEnumOptions=} [properties] Properties to set
                 * @returns {google.protobuf.EnumOptions} EnumOptions instance
                 */
                EnumOptions.create = function create(properties) {
                    return new EnumOptions(properties);
                };
    
                /**
                 * Encodes the specified EnumOptions message. Does not implicitly {@link google.protobuf.EnumOptions.verify|verify} messages.
                 * @function encode
                 * @memberof google.protobuf.EnumOptions
                 * @static
                 * @param {google.protobuf.IEnumOptions} message EnumOptions message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                EnumOptions.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.allowAlias != null && Object.hasOwnProperty.call(message, "allowAlias"))
                        writer.uint32(/* id 2, wireType 0 =*/16).bool(message.allowAlias);
                    if (message.deprecated != null && Object.hasOwnProperty.call(message, "deprecated"))
                        writer.uint32(/* id 3, wireType 0 =*/24).bool(message.deprecated);
                    if (message.deprecatedLegacyJsonFieldConflicts != null && Object.hasOwnProperty.call(message, "deprecatedLegacyJsonFieldConflicts"))
                        writer.uint32(/* id 6, wireType 0 =*/48).bool(message.deprecatedLegacyJsonFieldConflicts);
                    if (message.uninterpretedOption != null && message.uninterpretedOption.length)
                        for (var i = 0; i < message.uninterpretedOption.length; ++i)
                            $root.google.protobuf.UninterpretedOption.encode(message.uninterpretedOption[i], writer.uint32(/* id 999, wireType 2 =*/7994).fork()).ldelim();
                    return writer;
                };
    
                /**
                 * Encodes the specified EnumOptions message, length delimited. Does not implicitly {@link google.protobuf.EnumOptions.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.protobuf.EnumOptions
                 * @static
                 * @param {google.protobuf.IEnumOptions} message EnumOptions message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                EnumOptions.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes an EnumOptions message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.protobuf.EnumOptions
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.protobuf.EnumOptions} EnumOptions
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                EnumOptions.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.EnumOptions();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 2: {
                                message.allowAlias = reader.bool();
                                break;
                            }
                        case 3: {
                                message.deprecated = reader.bool();
                                break;
                            }
                        case 6: {
                                message.deprecatedLegacyJsonFieldConflicts = reader.bool();
                                break;
                            }
                        case 999: {
                                if (!(message.uninterpretedOption && message.uninterpretedOption.length))
                                    message.uninterpretedOption = [];
                                message.uninterpretedOption.push($root.google.protobuf.UninterpretedOption.decode(reader, reader.uint32()));
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes an EnumOptions message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.protobuf.EnumOptions
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.protobuf.EnumOptions} EnumOptions
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                EnumOptions.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies an EnumOptions message.
                 * @function verify
                 * @memberof google.protobuf.EnumOptions
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                EnumOptions.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.allowAlias != null && message.hasOwnProperty("allowAlias"))
                        if (typeof message.allowAlias !== "boolean")
                            return "allowAlias: boolean expected";
                    if (message.deprecated != null && message.hasOwnProperty("deprecated"))
                        if (typeof message.deprecated !== "boolean")
                            return "deprecated: boolean expected";
                    if (message.deprecatedLegacyJsonFieldConflicts != null && message.hasOwnProperty("deprecatedLegacyJsonFieldConflicts"))
                        if (typeof message.deprecatedLegacyJsonFieldConflicts !== "boolean")
                            return "deprecatedLegacyJsonFieldConflicts: boolean expected";
                    if (message.uninterpretedOption != null && message.hasOwnProperty("uninterpretedOption")) {
                        if (!Array.isArray(message.uninterpretedOption))
                            return "uninterpretedOption: array expected";
                        for (var i = 0; i < message.uninterpretedOption.length; ++i) {
                            var error = $root.google.protobuf.UninterpretedOption.verify(message.uninterpretedOption[i]);
                            if (error)
                                return "uninterpretedOption." + error;
                        }
                    }
                    return null;
                };
    
                /**
                 * Creates an EnumOptions message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.protobuf.EnumOptions
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.protobuf.EnumOptions} EnumOptions
                 */
                EnumOptions.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.protobuf.EnumOptions)
                        return object;
                    var message = new $root.google.protobuf.EnumOptions();
                    if (object.allowAlias != null)
                        message.allowAlias = Boolean(object.allowAlias);
                    if (object.deprecated != null)
                        message.deprecated = Boolean(object.deprecated);
                    if (object.deprecatedLegacyJsonFieldConflicts != null)
                        message.deprecatedLegacyJsonFieldConflicts = Boolean(object.deprecatedLegacyJsonFieldConflicts);
                    if (object.uninterpretedOption) {
                        if (!Array.isArray(object.uninterpretedOption))
                            throw TypeError(".google.protobuf.EnumOptions.uninterpretedOption: array expected");
                        message.uninterpretedOption = [];
                        for (var i = 0; i < object.uninterpretedOption.length; ++i) {
                            if (typeof object.uninterpretedOption[i] !== "object")
                                throw TypeError(".google.protobuf.EnumOptions.uninterpretedOption: object expected");
                            message.uninterpretedOption[i] = $root.google.protobuf.UninterpretedOption.fromObject(object.uninterpretedOption[i]);
                        }
                    }
                    return message;
                };
    
                /**
                 * Creates a plain object from an EnumOptions message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.protobuf.EnumOptions
                 * @static
                 * @param {google.protobuf.EnumOptions} message EnumOptions
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                EnumOptions.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.arrays || options.defaults)
                        object.uninterpretedOption = [];
                    if (options.defaults) {
                        object.allowAlias = false;
                        object.deprecated = false;
                        object.deprecatedLegacyJsonFieldConflicts = false;
                    }
                    if (message.allowAlias != null && message.hasOwnProperty("allowAlias"))
                        object.allowAlias = message.allowAlias;
                    if (message.deprecated != null && message.hasOwnProperty("deprecated"))
                        object.deprecated = message.deprecated;
                    if (message.deprecatedLegacyJsonFieldConflicts != null && message.hasOwnProperty("deprecatedLegacyJsonFieldConflicts"))
                        object.deprecatedLegacyJsonFieldConflicts = message.deprecatedLegacyJsonFieldConflicts;
                    if (message.uninterpretedOption && message.uninterpretedOption.length) {
                        object.uninterpretedOption = [];
                        for (var j = 0; j < message.uninterpretedOption.length; ++j)
                            object.uninterpretedOption[j] = $root.google.protobuf.UninterpretedOption.toObject(message.uninterpretedOption[j], options);
                    }
                    return object;
                };
    
                /**
                 * Converts this EnumOptions to JSON.
                 * @function toJSON
                 * @memberof google.protobuf.EnumOptions
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                EnumOptions.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for EnumOptions
                 * @function getTypeUrl
                 * @memberof google.protobuf.EnumOptions
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                EnumOptions.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.protobuf.EnumOptions";
                };
    
                return EnumOptions;
            })();
    
            protobuf.EnumValueOptions = (function() {
    
                /**
                 * Properties of an EnumValueOptions.
                 * @memberof google.protobuf
                 * @interface IEnumValueOptions
                 * @property {boolean|null} [deprecated] EnumValueOptions deprecated
                 * @property {Array.<google.protobuf.IUninterpretedOption>|null} [uninterpretedOption] EnumValueOptions uninterpretedOption
                 */
    
                /**
                 * Constructs a new EnumValueOptions.
                 * @memberof google.protobuf
                 * @classdesc Represents an EnumValueOptions.
                 * @implements IEnumValueOptions
                 * @constructor
                 * @param {google.protobuf.IEnumValueOptions=} [properties] Properties to set
                 */
                function EnumValueOptions(properties) {
                    this.uninterpretedOption = [];
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * EnumValueOptions deprecated.
                 * @member {boolean} deprecated
                 * @memberof google.protobuf.EnumValueOptions
                 * @instance
                 */
                EnumValueOptions.prototype.deprecated = false;
    
                /**
                 * EnumValueOptions uninterpretedOption.
                 * @member {Array.<google.protobuf.IUninterpretedOption>} uninterpretedOption
                 * @memberof google.protobuf.EnumValueOptions
                 * @instance
                 */
                EnumValueOptions.prototype.uninterpretedOption = $util.emptyArray;
    
                /**
                 * Creates a new EnumValueOptions instance using the specified properties.
                 * @function create
                 * @memberof google.protobuf.EnumValueOptions
                 * @static
                 * @param {google.protobuf.IEnumValueOptions=} [properties] Properties to set
                 * @returns {google.protobuf.EnumValueOptions} EnumValueOptions instance
                 */
                EnumValueOptions.create = function create(properties) {
                    return new EnumValueOptions(properties);
                };
    
                /**
                 * Encodes the specified EnumValueOptions message. Does not implicitly {@link google.protobuf.EnumValueOptions.verify|verify} messages.
                 * @function encode
                 * @memberof google.protobuf.EnumValueOptions
                 * @static
                 * @param {google.protobuf.IEnumValueOptions} message EnumValueOptions message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                EnumValueOptions.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.deprecated != null && Object.hasOwnProperty.call(message, "deprecated"))
                        writer.uint32(/* id 1, wireType 0 =*/8).bool(message.deprecated);
                    if (message.uninterpretedOption != null && message.uninterpretedOption.length)
                        for (var i = 0; i < message.uninterpretedOption.length; ++i)
                            $root.google.protobuf.UninterpretedOption.encode(message.uninterpretedOption[i], writer.uint32(/* id 999, wireType 2 =*/7994).fork()).ldelim();
                    return writer;
                };
    
                /**
                 * Encodes the specified EnumValueOptions message, length delimited. Does not implicitly {@link google.protobuf.EnumValueOptions.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.protobuf.EnumValueOptions
                 * @static
                 * @param {google.protobuf.IEnumValueOptions} message EnumValueOptions message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                EnumValueOptions.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes an EnumValueOptions message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.protobuf.EnumValueOptions
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.protobuf.EnumValueOptions} EnumValueOptions
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                EnumValueOptions.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.EnumValueOptions();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1: {
                                message.deprecated = reader.bool();
                                break;
                            }
                        case 999: {
                                if (!(message.uninterpretedOption && message.uninterpretedOption.length))
                                    message.uninterpretedOption = [];
                                message.uninterpretedOption.push($root.google.protobuf.UninterpretedOption.decode(reader, reader.uint32()));
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes an EnumValueOptions message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.protobuf.EnumValueOptions
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.protobuf.EnumValueOptions} EnumValueOptions
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                EnumValueOptions.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies an EnumValueOptions message.
                 * @function verify
                 * @memberof google.protobuf.EnumValueOptions
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                EnumValueOptions.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.deprecated != null && message.hasOwnProperty("deprecated"))
                        if (typeof message.deprecated !== "boolean")
                            return "deprecated: boolean expected";
                    if (message.uninterpretedOption != null && message.hasOwnProperty("uninterpretedOption")) {
                        if (!Array.isArray(message.uninterpretedOption))
                            return "uninterpretedOption: array expected";
                        for (var i = 0; i < message.uninterpretedOption.length; ++i) {
                            var error = $root.google.protobuf.UninterpretedOption.verify(message.uninterpretedOption[i]);
                            if (error)
                                return "uninterpretedOption." + error;
                        }
                    }
                    return null;
                };
    
                /**
                 * Creates an EnumValueOptions message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.protobuf.EnumValueOptions
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.protobuf.EnumValueOptions} EnumValueOptions
                 */
                EnumValueOptions.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.protobuf.EnumValueOptions)
                        return object;
                    var message = new $root.google.protobuf.EnumValueOptions();
                    if (object.deprecated != null)
                        message.deprecated = Boolean(object.deprecated);
                    if (object.uninterpretedOption) {
                        if (!Array.isArray(object.uninterpretedOption))
                            throw TypeError(".google.protobuf.EnumValueOptions.uninterpretedOption: array expected");
                        message.uninterpretedOption = [];
                        for (var i = 0; i < object.uninterpretedOption.length; ++i) {
                            if (typeof object.uninterpretedOption[i] !== "object")
                                throw TypeError(".google.protobuf.EnumValueOptions.uninterpretedOption: object expected");
                            message.uninterpretedOption[i] = $root.google.protobuf.UninterpretedOption.fromObject(object.uninterpretedOption[i]);
                        }
                    }
                    return message;
                };
    
                /**
                 * Creates a plain object from an EnumValueOptions message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.protobuf.EnumValueOptions
                 * @static
                 * @param {google.protobuf.EnumValueOptions} message EnumValueOptions
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                EnumValueOptions.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.arrays || options.defaults)
                        object.uninterpretedOption = [];
                    if (options.defaults)
                        object.deprecated = false;
                    if (message.deprecated != null && message.hasOwnProperty("deprecated"))
                        object.deprecated = message.deprecated;
                    if (message.uninterpretedOption && message.uninterpretedOption.length) {
                        object.uninterpretedOption = [];
                        for (var j = 0; j < message.uninterpretedOption.length; ++j)
                            object.uninterpretedOption[j] = $root.google.protobuf.UninterpretedOption.toObject(message.uninterpretedOption[j], options);
                    }
                    return object;
                };
    
                /**
                 * Converts this EnumValueOptions to JSON.
                 * @function toJSON
                 * @memberof google.protobuf.EnumValueOptions
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                EnumValueOptions.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for EnumValueOptions
                 * @function getTypeUrl
                 * @memberof google.protobuf.EnumValueOptions
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                EnumValueOptions.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.protobuf.EnumValueOptions";
                };
    
                return EnumValueOptions;
            })();
    
            protobuf.ServiceOptions = (function() {
    
                /**
                 * Properties of a ServiceOptions.
                 * @memberof google.protobuf
                 * @interface IServiceOptions
                 * @property {boolean|null} [deprecated] ServiceOptions deprecated
                 * @property {Array.<google.protobuf.IUninterpretedOption>|null} [uninterpretedOption] ServiceOptions uninterpretedOption
                 * @property {string|null} [".google.api.defaultHost"] ServiceOptions .google.api.defaultHost
                 * @property {string|null} [".google.api.oauthScopes"] ServiceOptions .google.api.oauthScopes
                 */
    
                /**
                 * Constructs a new ServiceOptions.
                 * @memberof google.protobuf
                 * @classdesc Represents a ServiceOptions.
                 * @implements IServiceOptions
                 * @constructor
                 * @param {google.protobuf.IServiceOptions=} [properties] Properties to set
                 */
                function ServiceOptions(properties) {
                    this.uninterpretedOption = [];
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * ServiceOptions deprecated.
                 * @member {boolean} deprecated
                 * @memberof google.protobuf.ServiceOptions
                 * @instance
                 */
                ServiceOptions.prototype.deprecated = false;
    
                /**
                 * ServiceOptions uninterpretedOption.
                 * @member {Array.<google.protobuf.IUninterpretedOption>} uninterpretedOption
                 * @memberof google.protobuf.ServiceOptions
                 * @instance
                 */
                ServiceOptions.prototype.uninterpretedOption = $util.emptyArray;
    
                /**
                 * ServiceOptions .google.api.defaultHost.
                 * @member {string} .google.api.defaultHost
                 * @memberof google.protobuf.ServiceOptions
                 * @instance
                 */
                ServiceOptions.prototype[".google.api.defaultHost"] = "";
    
                /**
                 * ServiceOptions .google.api.oauthScopes.
                 * @member {string} .google.api.oauthScopes
                 * @memberof google.protobuf.ServiceOptions
                 * @instance
                 */
                ServiceOptions.prototype[".google.api.oauthScopes"] = "";
    
                /**
                 * Creates a new ServiceOptions instance using the specified properties.
                 * @function create
                 * @memberof google.protobuf.ServiceOptions
                 * @static
                 * @param {google.protobuf.IServiceOptions=} [properties] Properties to set
                 * @returns {google.protobuf.ServiceOptions} ServiceOptions instance
                 */
                ServiceOptions.create = function create(properties) {
                    return new ServiceOptions(properties);
                };
    
                /**
                 * Encodes the specified ServiceOptions message. Does not implicitly {@link google.protobuf.ServiceOptions.verify|verify} messages.
                 * @function encode
                 * @memberof google.protobuf.ServiceOptions
                 * @static
                 * @param {google.protobuf.IServiceOptions} message ServiceOptions message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                ServiceOptions.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.deprecated != null && Object.hasOwnProperty.call(message, "deprecated"))
                        writer.uint32(/* id 33, wireType 0 =*/264).bool(message.deprecated);
                    if (message.uninterpretedOption != null && message.uninterpretedOption.length)
                        for (var i = 0; i < message.uninterpretedOption.length; ++i)
                            $root.google.protobuf.UninterpretedOption.encode(message.uninterpretedOption[i], writer.uint32(/* id 999, wireType 2 =*/7994).fork()).ldelim();
                    if (message[".google.api.defaultHost"] != null && Object.hasOwnProperty.call(message, ".google.api.defaultHost"))
                        writer.uint32(/* id 1049, wireType 2 =*/8394).string(message[".google.api.defaultHost"]);
                    if (message[".google.api.oauthScopes"] != null && Object.hasOwnProperty.call(message, ".google.api.oauthScopes"))
                        writer.uint32(/* id 1050, wireType 2 =*/8402).string(message[".google.api.oauthScopes"]);
                    return writer;
                };
    
                /**
                 * Encodes the specified ServiceOptions message, length delimited. Does not implicitly {@link google.protobuf.ServiceOptions.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.protobuf.ServiceOptions
                 * @static
                 * @param {google.protobuf.IServiceOptions} message ServiceOptions message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                ServiceOptions.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a ServiceOptions message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.protobuf.ServiceOptions
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.protobuf.ServiceOptions} ServiceOptions
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                ServiceOptions.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.ServiceOptions();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 33: {
                                message.deprecated = reader.bool();
                                break;
                            }
                        case 999: {
                                if (!(message.uninterpretedOption && message.uninterpretedOption.length))
                                    message.uninterpretedOption = [];
                                message.uninterpretedOption.push($root.google.protobuf.UninterpretedOption.decode(reader, reader.uint32()));
                                break;
                            }
                        case 1049: {
                                message[".google.api.defaultHost"] = reader.string();
                                break;
                            }
                        case 1050: {
                                message[".google.api.oauthScopes"] = reader.string();
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a ServiceOptions message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.protobuf.ServiceOptions
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.protobuf.ServiceOptions} ServiceOptions
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                ServiceOptions.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a ServiceOptions message.
                 * @function verify
                 * @memberof google.protobuf.ServiceOptions
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                ServiceOptions.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.deprecated != null && message.hasOwnProperty("deprecated"))
                        if (typeof message.deprecated !== "boolean")
                            return "deprecated: boolean expected";
                    if (message.uninterpretedOption != null && message.hasOwnProperty("uninterpretedOption")) {
                        if (!Array.isArray(message.uninterpretedOption))
                            return "uninterpretedOption: array expected";
                        for (var i = 0; i < message.uninterpretedOption.length; ++i) {
                            var error = $root.google.protobuf.UninterpretedOption.verify(message.uninterpretedOption[i]);
                            if (error)
                                return "uninterpretedOption." + error;
                        }
                    }
                    if (message[".google.api.defaultHost"] != null && message.hasOwnProperty(".google.api.defaultHost"))
                        if (!$util.isString(message[".google.api.defaultHost"]))
                            return ".google.api.defaultHost: string expected";
                    if (message[".google.api.oauthScopes"] != null && message.hasOwnProperty(".google.api.oauthScopes"))
                        if (!$util.isString(message[".google.api.oauthScopes"]))
                            return ".google.api.oauthScopes: string expected";
                    return null;
                };
    
                /**
                 * Creates a ServiceOptions message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.protobuf.ServiceOptions
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.protobuf.ServiceOptions} ServiceOptions
                 */
                ServiceOptions.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.protobuf.ServiceOptions)
                        return object;
                    var message = new $root.google.protobuf.ServiceOptions();
                    if (object.deprecated != null)
                        message.deprecated = Boolean(object.deprecated);
                    if (object.uninterpretedOption) {
                        if (!Array.isArray(object.uninterpretedOption))
                            throw TypeError(".google.protobuf.ServiceOptions.uninterpretedOption: array expected");
                        message.uninterpretedOption = [];
                        for (var i = 0; i < object.uninterpretedOption.length; ++i) {
                            if (typeof object.uninterpretedOption[i] !== "object")
                                throw TypeError(".google.protobuf.ServiceOptions.uninterpretedOption: object expected");
                            message.uninterpretedOption[i] = $root.google.protobuf.UninterpretedOption.fromObject(object.uninterpretedOption[i]);
                        }
                    }
                    if (object[".google.api.defaultHost"] != null)
                        message[".google.api.defaultHost"] = String(object[".google.api.defaultHost"]);
                    if (object[".google.api.oauthScopes"] != null)
                        message[".google.api.oauthScopes"] = String(object[".google.api.oauthScopes"]);
                    return message;
                };
    
                /**
                 * Creates a plain object from a ServiceOptions message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.protobuf.ServiceOptions
                 * @static
                 * @param {google.protobuf.ServiceOptions} message ServiceOptions
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                ServiceOptions.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.arrays || options.defaults)
                        object.uninterpretedOption = [];
                    if (options.defaults) {
                        object.deprecated = false;
                        object[".google.api.defaultHost"] = "";
                        object[".google.api.oauthScopes"] = "";
                    }
                    if (message.deprecated != null && message.hasOwnProperty("deprecated"))
                        object.deprecated = message.deprecated;
                    if (message.uninterpretedOption && message.uninterpretedOption.length) {
                        object.uninterpretedOption = [];
                        for (var j = 0; j < message.uninterpretedOption.length; ++j)
                            object.uninterpretedOption[j] = $root.google.protobuf.UninterpretedOption.toObject(message.uninterpretedOption[j], options);
                    }
                    if (message[".google.api.defaultHost"] != null && message.hasOwnProperty(".google.api.defaultHost"))
                        object[".google.api.defaultHost"] = message[".google.api.defaultHost"];
                    if (message[".google.api.oauthScopes"] != null && message.hasOwnProperty(".google.api.oauthScopes"))
                        object[".google.api.oauthScopes"] = message[".google.api.oauthScopes"];
                    return object;
                };
    
                /**
                 * Converts this ServiceOptions to JSON.
                 * @function toJSON
                 * @memberof google.protobuf.ServiceOptions
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                ServiceOptions.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for ServiceOptions
                 * @function getTypeUrl
                 * @memberof google.protobuf.ServiceOptions
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                ServiceOptions.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.protobuf.ServiceOptions";
                };
    
                return ServiceOptions;
            })();
    
            protobuf.MethodOptions = (function() {
    
                /**
                 * Properties of a MethodOptions.
                 * @memberof google.protobuf
                 * @interface IMethodOptions
                 * @property {boolean|null} [deprecated] MethodOptions deprecated
                 * @property {google.protobuf.MethodOptions.IdempotencyLevel|null} [idempotencyLevel] MethodOptions idempotencyLevel
                 * @property {Array.<google.protobuf.IUninterpretedOption>|null} [uninterpretedOption] MethodOptions uninterpretedOption
                 * @property {google.api.IHttpRule|null} [".google.api.http"] MethodOptions .google.api.http
                 * @property {Array.<string>|null} [".google.api.methodSignature"] MethodOptions .google.api.methodSignature
                 */
    
                /**
                 * Constructs a new MethodOptions.
                 * @memberof google.protobuf
                 * @classdesc Represents a MethodOptions.
                 * @implements IMethodOptions
                 * @constructor
                 * @param {google.protobuf.IMethodOptions=} [properties] Properties to set
                 */
                function MethodOptions(properties) {
                    this.uninterpretedOption = [];
                    this[".google.api.methodSignature"] = [];
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * MethodOptions deprecated.
                 * @member {boolean} deprecated
                 * @memberof google.protobuf.MethodOptions
                 * @instance
                 */
                MethodOptions.prototype.deprecated = false;
    
                /**
                 * MethodOptions idempotencyLevel.
                 * @member {google.protobuf.MethodOptions.IdempotencyLevel} idempotencyLevel
                 * @memberof google.protobuf.MethodOptions
                 * @instance
                 */
                MethodOptions.prototype.idempotencyLevel = 0;
    
                /**
                 * MethodOptions uninterpretedOption.
                 * @member {Array.<google.protobuf.IUninterpretedOption>} uninterpretedOption
                 * @memberof google.protobuf.MethodOptions
                 * @instance
                 */
                MethodOptions.prototype.uninterpretedOption = $util.emptyArray;
    
                /**
                 * MethodOptions .google.api.http.
                 * @member {google.api.IHttpRule|null|undefined} .google.api.http
                 * @memberof google.protobuf.MethodOptions
                 * @instance
                 */
                MethodOptions.prototype[".google.api.http"] = null;
    
                /**
                 * MethodOptions .google.api.methodSignature.
                 * @member {Array.<string>} .google.api.methodSignature
                 * @memberof google.protobuf.MethodOptions
                 * @instance
                 */
                MethodOptions.prototype[".google.api.methodSignature"] = $util.emptyArray;
    
                /**
                 * Creates a new MethodOptions instance using the specified properties.
                 * @function create
                 * @memberof google.protobuf.MethodOptions
                 * @static
                 * @param {google.protobuf.IMethodOptions=} [properties] Properties to set
                 * @returns {google.protobuf.MethodOptions} MethodOptions instance
                 */
                MethodOptions.create = function create(properties) {
                    return new MethodOptions(properties);
                };
    
                /**
                 * Encodes the specified MethodOptions message. Does not implicitly {@link google.protobuf.MethodOptions.verify|verify} messages.
                 * @function encode
                 * @memberof google.protobuf.MethodOptions
                 * @static
                 * @param {google.protobuf.IMethodOptions} message MethodOptions message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                MethodOptions.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.deprecated != null && Object.hasOwnProperty.call(message, "deprecated"))
                        writer.uint32(/* id 33, wireType 0 =*/264).bool(message.deprecated);
                    if (message.idempotencyLevel != null && Object.hasOwnProperty.call(message, "idempotencyLevel"))
                        writer.uint32(/* id 34, wireType 0 =*/272).int32(message.idempotencyLevel);
                    if (message.uninterpretedOption != null && message.uninterpretedOption.length)
                        for (var i = 0; i < message.uninterpretedOption.length; ++i)
                            $root.google.protobuf.UninterpretedOption.encode(message.uninterpretedOption[i], writer.uint32(/* id 999, wireType 2 =*/7994).fork()).ldelim();
                    if (message[".google.api.methodSignature"] != null && message[".google.api.methodSignature"].length)
                        for (var i = 0; i < message[".google.api.methodSignature"].length; ++i)
                            writer.uint32(/* id 1051, wireType 2 =*/8410).string(message[".google.api.methodSignature"][i]);
                    if (message[".google.api.http"] != null && Object.hasOwnProperty.call(message, ".google.api.http"))
                        $root.google.api.HttpRule.encode(message[".google.api.http"], writer.uint32(/* id 72295728, wireType 2 =*/578365826).fork()).ldelim();
                    return writer;
                };
    
                /**
                 * Encodes the specified MethodOptions message, length delimited. Does not implicitly {@link google.protobuf.MethodOptions.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.protobuf.MethodOptions
                 * @static
                 * @param {google.protobuf.IMethodOptions} message MethodOptions message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                MethodOptions.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a MethodOptions message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.protobuf.MethodOptions
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.protobuf.MethodOptions} MethodOptions
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                MethodOptions.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.MethodOptions();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 33: {
                                message.deprecated = reader.bool();
                                break;
                            }
                        case 34: {
                                message.idempotencyLevel = reader.int32();
                                break;
                            }
                        case 999: {
                                if (!(message.uninterpretedOption && message.uninterpretedOption.length))
                                    message.uninterpretedOption = [];
                                message.uninterpretedOption.push($root.google.protobuf.UninterpretedOption.decode(reader, reader.uint32()));
                                break;
                            }
                        case 72295728: {
                                message[".google.api.http"] = $root.google.api.HttpRule.decode(reader, reader.uint32());
                                break;
                            }
                        case 1051: {
                                if (!(message[".google.api.methodSignature"] && message[".google.api.methodSignature"].length))
                                    message[".google.api.methodSignature"] = [];
                                message[".google.api.methodSignature"].push(reader.string());
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a MethodOptions message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.protobuf.MethodOptions
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.protobuf.MethodOptions} MethodOptions
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                MethodOptions.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a MethodOptions message.
                 * @function verify
                 * @memberof google.protobuf.MethodOptions
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                MethodOptions.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.deprecated != null && message.hasOwnProperty("deprecated"))
                        if (typeof message.deprecated !== "boolean")
                            return "deprecated: boolean expected";
                    if (message.idempotencyLevel != null && message.hasOwnProperty("idempotencyLevel"))
                        switch (message.idempotencyLevel) {
                        default:
                            return "idempotencyLevel: enum value expected";
                        case 0:
                        case 1:
                        case 2:
                            break;
                        }
                    if (message.uninterpretedOption != null && message.hasOwnProperty("uninterpretedOption")) {
                        if (!Array.isArray(message.uninterpretedOption))
                            return "uninterpretedOption: array expected";
                        for (var i = 0; i < message.uninterpretedOption.length; ++i) {
                            var error = $root.google.protobuf.UninterpretedOption.verify(message.uninterpretedOption[i]);
                            if (error)
                                return "uninterpretedOption." + error;
                        }
                    }
                    if (message[".google.api.http"] != null && message.hasOwnProperty(".google.api.http")) {
                        var error = $root.google.api.HttpRule.verify(message[".google.api.http"]);
                        if (error)
                            return ".google.api.http." + error;
                    }
                    if (message[".google.api.methodSignature"] != null && message.hasOwnProperty(".google.api.methodSignature")) {
                        if (!Array.isArray(message[".google.api.methodSignature"]))
                            return ".google.api.methodSignature: array expected";
                        for (var i = 0; i < message[".google.api.methodSignature"].length; ++i)
                            if (!$util.isString(message[".google.api.methodSignature"][i]))
                                return ".google.api.methodSignature: string[] expected";
                    }
                    return null;
                };
    
                /**
                 * Creates a MethodOptions message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.protobuf.MethodOptions
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.protobuf.MethodOptions} MethodOptions
                 */
                MethodOptions.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.protobuf.MethodOptions)
                        return object;
                    var message = new $root.google.protobuf.MethodOptions();
                    if (object.deprecated != null)
                        message.deprecated = Boolean(object.deprecated);
                    switch (object.idempotencyLevel) {
                    default:
                        if (typeof object.idempotencyLevel === "number") {
                            message.idempotencyLevel = object.idempotencyLevel;
                            break;
                        }
                        break;
                    case "IDEMPOTENCY_UNKNOWN":
                    case 0:
                        message.idempotencyLevel = 0;
                        break;
                    case "NO_SIDE_EFFECTS":
                    case 1:
                        message.idempotencyLevel = 1;
                        break;
                    case "IDEMPOTENT":
                    case 2:
                        message.idempotencyLevel = 2;
                        break;
                    }
                    if (object.uninterpretedOption) {
                        if (!Array.isArray(object.uninterpretedOption))
                            throw TypeError(".google.protobuf.MethodOptions.uninterpretedOption: array expected");
                        message.uninterpretedOption = [];
                        for (var i = 0; i < object.uninterpretedOption.length; ++i) {
                            if (typeof object.uninterpretedOption[i] !== "object")
                                throw TypeError(".google.protobuf.MethodOptions.uninterpretedOption: object expected");
                            message.uninterpretedOption[i] = $root.google.protobuf.UninterpretedOption.fromObject(object.uninterpretedOption[i]);
                        }
                    }
                    if (object[".google.api.http"] != null) {
                        if (typeof object[".google.api.http"] !== "object")
                            throw TypeError(".google.protobuf.MethodOptions..google.api.http: object expected");
                        message[".google.api.http"] = $root.google.api.HttpRule.fromObject(object[".google.api.http"]);
                    }
                    if (object[".google.api.methodSignature"]) {
                        if (!Array.isArray(object[".google.api.methodSignature"]))
                            throw TypeError(".google.protobuf.MethodOptions..google.api.methodSignature: array expected");
                        message[".google.api.methodSignature"] = [];
                        for (var i = 0; i < object[".google.api.methodSignature"].length; ++i)
                            message[".google.api.methodSignature"][i] = String(object[".google.api.methodSignature"][i]);
                    }
                    return message;
                };
    
                /**
                 * Creates a plain object from a MethodOptions message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.protobuf.MethodOptions
                 * @static
                 * @param {google.protobuf.MethodOptions} message MethodOptions
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                MethodOptions.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.arrays || options.defaults) {
                        object.uninterpretedOption = [];
                        object[".google.api.methodSignature"] = [];
                    }
                    if (options.defaults) {
                        object.deprecated = false;
                        object.idempotencyLevel = options.enums === String ? "IDEMPOTENCY_UNKNOWN" : 0;
                        object[".google.api.http"] = null;
                    }
                    if (message.deprecated != null && message.hasOwnProperty("deprecated"))
                        object.deprecated = message.deprecated;
                    if (message.idempotencyLevel != null && message.hasOwnProperty("idempotencyLevel"))
                        object.idempotencyLevel = options.enums === String ? $root.google.protobuf.MethodOptions.IdempotencyLevel[message.idempotencyLevel] === undefined ? message.idempotencyLevel : $root.google.protobuf.MethodOptions.IdempotencyLevel[message.idempotencyLevel] : message.idempotencyLevel;
                    if (message.uninterpretedOption && message.uninterpretedOption.length) {
                        object.uninterpretedOption = [];
                        for (var j = 0; j < message.uninterpretedOption.length; ++j)
                            object.uninterpretedOption[j] = $root.google.protobuf.UninterpretedOption.toObject(message.uninterpretedOption[j], options);
                    }
                    if (message[".google.api.methodSignature"] && message[".google.api.methodSignature"].length) {
                        object[".google.api.methodSignature"] = [];
                        for (var j = 0; j < message[".google.api.methodSignature"].length; ++j)
                            object[".google.api.methodSignature"][j] = message[".google.api.methodSignature"][j];
                    }
                    if (message[".google.api.http"] != null && message.hasOwnProperty(".google.api.http"))
                        object[".google.api.http"] = $root.google.api.HttpRule.toObject(message[".google.api.http"], options);
                    return object;
                };
    
                /**
                 * Converts this MethodOptions to JSON.
                 * @function toJSON
                 * @memberof google.protobuf.MethodOptions
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                MethodOptions.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for MethodOptions
                 * @function getTypeUrl
                 * @memberof google.protobuf.MethodOptions
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                MethodOptions.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.protobuf.MethodOptions";
                };
    
                /**
                 * IdempotencyLevel enum.
                 * @name google.protobuf.MethodOptions.IdempotencyLevel
                 * @enum {number}
                 * @property {number} IDEMPOTENCY_UNKNOWN=0 IDEMPOTENCY_UNKNOWN value
                 * @property {number} NO_SIDE_EFFECTS=1 NO_SIDE_EFFECTS value
                 * @property {number} IDEMPOTENT=2 IDEMPOTENT value
                 */
                MethodOptions.IdempotencyLevel = (function() {
                    var valuesById = {}, values = Object.create(valuesById);
                    values[valuesById[0] = "IDEMPOTENCY_UNKNOWN"] = 0;
                    values[valuesById[1] = "NO_SIDE_EFFECTS"] = 1;
                    values[valuesById[2] = "IDEMPOTENT"] = 2;
                    return values;
                })();
    
                return MethodOptions;
            })();
    
            protobuf.UninterpretedOption = (function() {
    
                /**
                 * Properties of an UninterpretedOption.
                 * @memberof google.protobuf
                 * @interface IUninterpretedOption
                 * @property {Array.<google.protobuf.UninterpretedOption.INamePart>|null} [name] UninterpretedOption name
                 * @property {string|null} [identifierValue] UninterpretedOption identifierValue
                 * @property {number|Long|null} [positiveIntValue] UninterpretedOption positiveIntValue
                 * @property {number|Long|null} [negativeIntValue] UninterpretedOption negativeIntValue
                 * @property {number|null} [doubleValue] UninterpretedOption doubleValue
                 * @property {Uint8Array|null} [stringValue] UninterpretedOption stringValue
                 * @property {string|null} [aggregateValue] UninterpretedOption aggregateValue
                 */
    
                /**
                 * Constructs a new UninterpretedOption.
                 * @memberof google.protobuf
                 * @classdesc Represents an UninterpretedOption.
                 * @implements IUninterpretedOption
                 * @constructor
                 * @param {google.protobuf.IUninterpretedOption=} [properties] Properties to set
                 */
                function UninterpretedOption(properties) {
                    this.name = [];
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * UninterpretedOption name.
                 * @member {Array.<google.protobuf.UninterpretedOption.INamePart>} name
                 * @memberof google.protobuf.UninterpretedOption
                 * @instance
                 */
                UninterpretedOption.prototype.name = $util.emptyArray;
    
                /**
                 * UninterpretedOption identifierValue.
                 * @member {string} identifierValue
                 * @memberof google.protobuf.UninterpretedOption
                 * @instance
                 */
                UninterpretedOption.prototype.identifierValue = "";
    
                /**
                 * UninterpretedOption positiveIntValue.
                 * @member {number|Long} positiveIntValue
                 * @memberof google.protobuf.UninterpretedOption
                 * @instance
                 */
                UninterpretedOption.prototype.positiveIntValue = $util.Long ? $util.Long.fromBits(0,0,true) : 0;
    
                /**
                 * UninterpretedOption negativeIntValue.
                 * @member {number|Long} negativeIntValue
                 * @memberof google.protobuf.UninterpretedOption
                 * @instance
                 */
                UninterpretedOption.prototype.negativeIntValue = $util.Long ? $util.Long.fromBits(0,0,false) : 0;
    
                /**
                 * UninterpretedOption doubleValue.
                 * @member {number} doubleValue
                 * @memberof google.protobuf.UninterpretedOption
                 * @instance
                 */
                UninterpretedOption.prototype.doubleValue = 0;
    
                /**
                 * UninterpretedOption stringValue.
                 * @member {Uint8Array} stringValue
                 * @memberof google.protobuf.UninterpretedOption
                 * @instance
                 */
                UninterpretedOption.prototype.stringValue = $util.newBuffer([]);
    
                /**
                 * UninterpretedOption aggregateValue.
                 * @member {string} aggregateValue
                 * @memberof google.protobuf.UninterpretedOption
                 * @instance
                 */
                UninterpretedOption.prototype.aggregateValue = "";
    
                /**
                 * Creates a new UninterpretedOption instance using the specified properties.
                 * @function create
                 * @memberof google.protobuf.UninterpretedOption
                 * @static
                 * @param {google.protobuf.IUninterpretedOption=} [properties] Properties to set
                 * @returns {google.protobuf.UninterpretedOption} UninterpretedOption instance
                 */
                UninterpretedOption.create = function create(properties) {
                    return new UninterpretedOption(properties);
                };
    
                /**
                 * Encodes the specified UninterpretedOption message. Does not implicitly {@link google.protobuf.UninterpretedOption.verify|verify} messages.
                 * @function encode
                 * @memberof google.protobuf.UninterpretedOption
                 * @static
                 * @param {google.protobuf.IUninterpretedOption} message UninterpretedOption message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                UninterpretedOption.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.name != null && message.name.length)
                        for (var i = 0; i < message.name.length; ++i)
                            $root.google.protobuf.UninterpretedOption.NamePart.encode(message.name[i], writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                    if (message.identifierValue != null && Object.hasOwnProperty.call(message, "identifierValue"))
                        writer.uint32(/* id 3, wireType 2 =*/26).string(message.identifierValue);
                    if (message.positiveIntValue != null && Object.hasOwnProperty.call(message, "positiveIntValue"))
                        writer.uint32(/* id 4, wireType 0 =*/32).uint64(message.positiveIntValue);
                    if (message.negativeIntValue != null && Object.hasOwnProperty.call(message, "negativeIntValue"))
                        writer.uint32(/* id 5, wireType 0 =*/40).int64(message.negativeIntValue);
                    if (message.doubleValue != null && Object.hasOwnProperty.call(message, "doubleValue"))
                        writer.uint32(/* id 6, wireType 1 =*/49).double(message.doubleValue);
                    if (message.stringValue != null && Object.hasOwnProperty.call(message, "stringValue"))
                        writer.uint32(/* id 7, wireType 2 =*/58).bytes(message.stringValue);
                    if (message.aggregateValue != null && Object.hasOwnProperty.call(message, "aggregateValue"))
                        writer.uint32(/* id 8, wireType 2 =*/66).string(message.aggregateValue);
                    return writer;
                };
    
                /**
                 * Encodes the specified UninterpretedOption message, length delimited. Does not implicitly {@link google.protobuf.UninterpretedOption.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.protobuf.UninterpretedOption
                 * @static
                 * @param {google.protobuf.IUninterpretedOption} message UninterpretedOption message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                UninterpretedOption.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes an UninterpretedOption message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.protobuf.UninterpretedOption
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.protobuf.UninterpretedOption} UninterpretedOption
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                UninterpretedOption.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.UninterpretedOption();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 2: {
                                if (!(message.name && message.name.length))
                                    message.name = [];
                                message.name.push($root.google.protobuf.UninterpretedOption.NamePart.decode(reader, reader.uint32()));
                                break;
                            }
                        case 3: {
                                message.identifierValue = reader.string();
                                break;
                            }
                        case 4: {
                                message.positiveIntValue = reader.uint64();
                                break;
                            }
                        case 5: {
                                message.negativeIntValue = reader.int64();
                                break;
                            }
                        case 6: {
                                message.doubleValue = reader.double();
                                break;
                            }
                        case 7: {
                                message.stringValue = reader.bytes();
                                break;
                            }
                        case 8: {
                                message.aggregateValue = reader.string();
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes an UninterpretedOption message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.protobuf.UninterpretedOption
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.protobuf.UninterpretedOption} UninterpretedOption
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                UninterpretedOption.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies an UninterpretedOption message.
                 * @function verify
                 * @memberof google.protobuf.UninterpretedOption
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                UninterpretedOption.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.name != null && message.hasOwnProperty("name")) {
                        if (!Array.isArray(message.name))
                            return "name: array expected";
                        for (var i = 0; i < message.name.length; ++i) {
                            var error = $root.google.protobuf.UninterpretedOption.NamePart.verify(message.name[i]);
                            if (error)
                                return "name." + error;
                        }
                    }
                    if (message.identifierValue != null && message.hasOwnProperty("identifierValue"))
                        if (!$util.isString(message.identifierValue))
                            return "identifierValue: string expected";
                    if (message.positiveIntValue != null && message.hasOwnProperty("positiveIntValue"))
                        if (!$util.isInteger(message.positiveIntValue) && !(message.positiveIntValue && $util.isInteger(message.positiveIntValue.low) && $util.isInteger(message.positiveIntValue.high)))
                            return "positiveIntValue: integer|Long expected";
                    if (message.negativeIntValue != null && message.hasOwnProperty("negativeIntValue"))
                        if (!$util.isInteger(message.negativeIntValue) && !(message.negativeIntValue && $util.isInteger(message.negativeIntValue.low) && $util.isInteger(message.negativeIntValue.high)))
                            return "negativeIntValue: integer|Long expected";
                    if (message.doubleValue != null && message.hasOwnProperty("doubleValue"))
                        if (typeof message.doubleValue !== "number")
                            return "doubleValue: number expected";
                    if (message.stringValue != null && message.hasOwnProperty("stringValue"))
                        if (!(message.stringValue && typeof message.stringValue.length === "number" || $util.isString(message.stringValue)))
                            return "stringValue: buffer expected";
                    if (message.aggregateValue != null && message.hasOwnProperty("aggregateValue"))
                        if (!$util.isString(message.aggregateValue))
                            return "aggregateValue: string expected";
                    return null;
                };
    
                /**
                 * Creates an UninterpretedOption message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.protobuf.UninterpretedOption
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.protobuf.UninterpretedOption} UninterpretedOption
                 */
                UninterpretedOption.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.protobuf.UninterpretedOption)
                        return object;
                    var message = new $root.google.protobuf.UninterpretedOption();
                    if (object.name) {
                        if (!Array.isArray(object.name))
                            throw TypeError(".google.protobuf.UninterpretedOption.name: array expected");
                        message.name = [];
                        for (var i = 0; i < object.name.length; ++i) {
                            if (typeof object.name[i] !== "object")
                                throw TypeError(".google.protobuf.UninterpretedOption.name: object expected");
                            message.name[i] = $root.google.protobuf.UninterpretedOption.NamePart.fromObject(object.name[i]);
                        }
                    }
                    if (object.identifierValue != null)
                        message.identifierValue = String(object.identifierValue);
                    if (object.positiveIntValue != null)
                        if ($util.Long)
                            (message.positiveIntValue = $util.Long.fromValue(object.positiveIntValue)).unsigned = true;
                        else if (typeof object.positiveIntValue === "string")
                            message.positiveIntValue = parseInt(object.positiveIntValue, 10);
                        else if (typeof object.positiveIntValue === "number")
                            message.positiveIntValue = object.positiveIntValue;
                        else if (typeof object.positiveIntValue === "object")
                            message.positiveIntValue = new $util.LongBits(object.positiveIntValue.low >>> 0, object.positiveIntValue.high >>> 0).toNumber(true);
                    if (object.negativeIntValue != null)
                        if ($util.Long)
                            (message.negativeIntValue = $util.Long.fromValue(object.negativeIntValue)).unsigned = false;
                        else if (typeof object.negativeIntValue === "string")
                            message.negativeIntValue = parseInt(object.negativeIntValue, 10);
                        else if (typeof object.negativeIntValue === "number")
                            message.negativeIntValue = object.negativeIntValue;
                        else if (typeof object.negativeIntValue === "object")
                            message.negativeIntValue = new $util.LongBits(object.negativeIntValue.low >>> 0, object.negativeIntValue.high >>> 0).toNumber();
                    if (object.doubleValue != null)
                        message.doubleValue = Number(object.doubleValue);
                    if (object.stringValue != null)
                        if (typeof object.stringValue === "string")
                            $util.base64.decode(object.stringValue, message.stringValue = $util.newBuffer($util.base64.length(object.stringValue)), 0);
                        else if (object.stringValue.length >= 0)
                            message.stringValue = object.stringValue;
                    if (object.aggregateValue != null)
                        message.aggregateValue = String(object.aggregateValue);
                    return message;
                };
    
                /**
                 * Creates a plain object from an UninterpretedOption message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.protobuf.UninterpretedOption
                 * @static
                 * @param {google.protobuf.UninterpretedOption} message UninterpretedOption
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                UninterpretedOption.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.arrays || options.defaults)
                        object.name = [];
                    if (options.defaults) {
                        object.identifierValue = "";
                        if ($util.Long) {
                            var long = new $util.Long(0, 0, true);
                            object.positiveIntValue = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                        } else
                            object.positiveIntValue = options.longs === String ? "0" : 0;
                        if ($util.Long) {
                            var long = new $util.Long(0, 0, false);
                            object.negativeIntValue = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                        } else
                            object.negativeIntValue = options.longs === String ? "0" : 0;
                        object.doubleValue = 0;
                        if (options.bytes === String)
                            object.stringValue = "";
                        else {
                            object.stringValue = [];
                            if (options.bytes !== Array)
                                object.stringValue = $util.newBuffer(object.stringValue);
                        }
                        object.aggregateValue = "";
                    }
                    if (message.name && message.name.length) {
                        object.name = [];
                        for (var j = 0; j < message.name.length; ++j)
                            object.name[j] = $root.google.protobuf.UninterpretedOption.NamePart.toObject(message.name[j], options);
                    }
                    if (message.identifierValue != null && message.hasOwnProperty("identifierValue"))
                        object.identifierValue = message.identifierValue;
                    if (message.positiveIntValue != null && message.hasOwnProperty("positiveIntValue"))
                        if (typeof message.positiveIntValue === "number")
                            object.positiveIntValue = options.longs === String ? String(message.positiveIntValue) : message.positiveIntValue;
                        else
                            object.positiveIntValue = options.longs === String ? $util.Long.prototype.toString.call(message.positiveIntValue) : options.longs === Number ? new $util.LongBits(message.positiveIntValue.low >>> 0, message.positiveIntValue.high >>> 0).toNumber(true) : message.positiveIntValue;
                    if (message.negativeIntValue != null && message.hasOwnProperty("negativeIntValue"))
                        if (typeof message.negativeIntValue === "number")
                            object.negativeIntValue = options.longs === String ? String(message.negativeIntValue) : message.negativeIntValue;
                        else
                            object.negativeIntValue = options.longs === String ? $util.Long.prototype.toString.call(message.negativeIntValue) : options.longs === Number ? new $util.LongBits(message.negativeIntValue.low >>> 0, message.negativeIntValue.high >>> 0).toNumber() : message.negativeIntValue;
                    if (message.doubleValue != null && message.hasOwnProperty("doubleValue"))
                        object.doubleValue = options.json && !isFinite(message.doubleValue) ? String(message.doubleValue) : message.doubleValue;
                    if (message.stringValue != null && message.hasOwnProperty("stringValue"))
                        object.stringValue = options.bytes === String ? $util.base64.encode(message.stringValue, 0, message.stringValue.length) : options.bytes === Array ? Array.prototype.slice.call(message.stringValue) : message.stringValue;
                    if (message.aggregateValue != null && message.hasOwnProperty("aggregateValue"))
                        object.aggregateValue = message.aggregateValue;
                    return object;
                };
    
                /**
                 * Converts this UninterpretedOption to JSON.
                 * @function toJSON
                 * @memberof google.protobuf.UninterpretedOption
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                UninterpretedOption.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for UninterpretedOption
                 * @function getTypeUrl
                 * @memberof google.protobuf.UninterpretedOption
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                UninterpretedOption.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.protobuf.UninterpretedOption";
                };
    
                UninterpretedOption.NamePart = (function() {
    
                    /**
                     * Properties of a NamePart.
                     * @memberof google.protobuf.UninterpretedOption
                     * @interface INamePart
                     * @property {string} namePart NamePart namePart
                     * @property {boolean} isExtension NamePart isExtension
                     */
    
                    /**
                     * Constructs a new NamePart.
                     * @memberof google.protobuf.UninterpretedOption
                     * @classdesc Represents a NamePart.
                     * @implements INamePart
                     * @constructor
                     * @param {google.protobuf.UninterpretedOption.INamePart=} [properties] Properties to set
                     */
                    function NamePart(properties) {
                        if (properties)
                            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                if (properties[keys[i]] != null)
                                    this[keys[i]] = properties[keys[i]];
                    }
    
                    /**
                     * NamePart namePart.
                     * @member {string} namePart
                     * @memberof google.protobuf.UninterpretedOption.NamePart
                     * @instance
                     */
                    NamePart.prototype.namePart = "";
    
                    /**
                     * NamePart isExtension.
                     * @member {boolean} isExtension
                     * @memberof google.protobuf.UninterpretedOption.NamePart
                     * @instance
                     */
                    NamePart.prototype.isExtension = false;
    
                    /**
                     * Creates a new NamePart instance using the specified properties.
                     * @function create
                     * @memberof google.protobuf.UninterpretedOption.NamePart
                     * @static
                     * @param {google.protobuf.UninterpretedOption.INamePart=} [properties] Properties to set
                     * @returns {google.protobuf.UninterpretedOption.NamePart} NamePart instance
                     */
                    NamePart.create = function create(properties) {
                        return new NamePart(properties);
                    };
    
                    /**
                     * Encodes the specified NamePart message. Does not implicitly {@link google.protobuf.UninterpretedOption.NamePart.verify|verify} messages.
                     * @function encode
                     * @memberof google.protobuf.UninterpretedOption.NamePart
                     * @static
                     * @param {google.protobuf.UninterpretedOption.INamePart} message NamePart message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    NamePart.encode = function encode(message, writer) {
                        if (!writer)
                            writer = $Writer.create();
                        writer.uint32(/* id 1, wireType 2 =*/10).string(message.namePart);
                        writer.uint32(/* id 2, wireType 0 =*/16).bool(message.isExtension);
                        return writer;
                    };
    
                    /**
                     * Encodes the specified NamePart message, length delimited. Does not implicitly {@link google.protobuf.UninterpretedOption.NamePart.verify|verify} messages.
                     * @function encodeDelimited
                     * @memberof google.protobuf.UninterpretedOption.NamePart
                     * @static
                     * @param {google.protobuf.UninterpretedOption.INamePart} message NamePart message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    NamePart.encodeDelimited = function encodeDelimited(message, writer) {
                        return this.encode(message, writer).ldelim();
                    };
    
                    /**
                     * Decodes a NamePart message from the specified reader or buffer.
                     * @function decode
                     * @memberof google.protobuf.UninterpretedOption.NamePart
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @param {number} [length] Message length if known beforehand
                     * @returns {google.protobuf.UninterpretedOption.NamePart} NamePart
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    NamePart.decode = function decode(reader, length) {
                        if (!(reader instanceof $Reader))
                            reader = $Reader.create(reader);
                        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.UninterpretedOption.NamePart();
                        while (reader.pos < end) {
                            var tag = reader.uint32();
                            switch (tag >>> 3) {
                            case 1: {
                                    message.namePart = reader.string();
                                    break;
                                }
                            case 2: {
                                    message.isExtension = reader.bool();
                                    break;
                                }
                            default:
                                reader.skipType(tag & 7);
                                break;
                            }
                        }
                        if (!message.hasOwnProperty("namePart"))
                            throw $util.ProtocolError("missing required 'namePart'", { instance: message });
                        if (!message.hasOwnProperty("isExtension"))
                            throw $util.ProtocolError("missing required 'isExtension'", { instance: message });
                        return message;
                    };
    
                    /**
                     * Decodes a NamePart message from the specified reader or buffer, length delimited.
                     * @function decodeDelimited
                     * @memberof google.protobuf.UninterpretedOption.NamePart
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @returns {google.protobuf.UninterpretedOption.NamePart} NamePart
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    NamePart.decodeDelimited = function decodeDelimited(reader) {
                        if (!(reader instanceof $Reader))
                            reader = new $Reader(reader);
                        return this.decode(reader, reader.uint32());
                    };
    
                    /**
                     * Verifies a NamePart message.
                     * @function verify
                     * @memberof google.protobuf.UninterpretedOption.NamePart
                     * @static
                     * @param {Object.<string,*>} message Plain object to verify
                     * @returns {string|null} `null` if valid, otherwise the reason why it is not
                     */
                    NamePart.verify = function verify(message) {
                        if (typeof message !== "object" || message === null)
                            return "object expected";
                        if (!$util.isString(message.namePart))
                            return "namePart: string expected";
                        if (typeof message.isExtension !== "boolean")
                            return "isExtension: boolean expected";
                        return null;
                    };
    
                    /**
                     * Creates a NamePart message from a plain object. Also converts values to their respective internal types.
                     * @function fromObject
                     * @memberof google.protobuf.UninterpretedOption.NamePart
                     * @static
                     * @param {Object.<string,*>} object Plain object
                     * @returns {google.protobuf.UninterpretedOption.NamePart} NamePart
                     */
                    NamePart.fromObject = function fromObject(object) {
                        if (object instanceof $root.google.protobuf.UninterpretedOption.NamePart)
                            return object;
                        var message = new $root.google.protobuf.UninterpretedOption.NamePart();
                        if (object.namePart != null)
                            message.namePart = String(object.namePart);
                        if (object.isExtension != null)
                            message.isExtension = Boolean(object.isExtension);
                        return message;
                    };
    
                    /**
                     * Creates a plain object from a NamePart message. Also converts values to other types if specified.
                     * @function toObject
                     * @memberof google.protobuf.UninterpretedOption.NamePart
                     * @static
                     * @param {google.protobuf.UninterpretedOption.NamePart} message NamePart
                     * @param {$protobuf.IConversionOptions} [options] Conversion options
                     * @returns {Object.<string,*>} Plain object
                     */
                    NamePart.toObject = function toObject(message, options) {
                        if (!options)
                            options = {};
                        var object = {};
                        if (options.defaults) {
                            object.namePart = "";
                            object.isExtension = false;
                        }
                        if (message.namePart != null && message.hasOwnProperty("namePart"))
                            object.namePart = message.namePart;
                        if (message.isExtension != null && message.hasOwnProperty("isExtension"))
                            object.isExtension = message.isExtension;
                        return object;
                    };
    
                    /**
                     * Converts this NamePart to JSON.
                     * @function toJSON
                     * @memberof google.protobuf.UninterpretedOption.NamePart
                     * @instance
                     * @returns {Object.<string,*>} JSON object
                     */
                    NamePart.prototype.toJSON = function toJSON() {
                        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                    };
    
                    /**
                     * Gets the default type url for NamePart
                     * @function getTypeUrl
                     * @memberof google.protobuf.UninterpretedOption.NamePart
                     * @static
                     * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                     * @returns {string} The default type url
                     */
                    NamePart.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                        if (typeUrlPrefix === undefined) {
                            typeUrlPrefix = "type.googleapis.com";
                        }
                        return typeUrlPrefix + "/google.protobuf.UninterpretedOption.NamePart";
                    };
    
                    return NamePart;
                })();
    
                return UninterpretedOption;
            })();
    
            protobuf.SourceCodeInfo = (function() {
    
                /**
                 * Properties of a SourceCodeInfo.
                 * @memberof google.protobuf
                 * @interface ISourceCodeInfo
                 * @property {Array.<google.protobuf.SourceCodeInfo.ILocation>|null} [location] SourceCodeInfo location
                 */
    
                /**
                 * Constructs a new SourceCodeInfo.
                 * @memberof google.protobuf
                 * @classdesc Represents a SourceCodeInfo.
                 * @implements ISourceCodeInfo
                 * @constructor
                 * @param {google.protobuf.ISourceCodeInfo=} [properties] Properties to set
                 */
                function SourceCodeInfo(properties) {
                    this.location = [];
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * SourceCodeInfo location.
                 * @member {Array.<google.protobuf.SourceCodeInfo.ILocation>} location
                 * @memberof google.protobuf.SourceCodeInfo
                 * @instance
                 */
                SourceCodeInfo.prototype.location = $util.emptyArray;
    
                /**
                 * Creates a new SourceCodeInfo instance using the specified properties.
                 * @function create
                 * @memberof google.protobuf.SourceCodeInfo
                 * @static
                 * @param {google.protobuf.ISourceCodeInfo=} [properties] Properties to set
                 * @returns {google.protobuf.SourceCodeInfo} SourceCodeInfo instance
                 */
                SourceCodeInfo.create = function create(properties) {
                    return new SourceCodeInfo(properties);
                };
    
                /**
                 * Encodes the specified SourceCodeInfo message. Does not implicitly {@link google.protobuf.SourceCodeInfo.verify|verify} messages.
                 * @function encode
                 * @memberof google.protobuf.SourceCodeInfo
                 * @static
                 * @param {google.protobuf.ISourceCodeInfo} message SourceCodeInfo message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                SourceCodeInfo.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.location != null && message.location.length)
                        for (var i = 0; i < message.location.length; ++i)
                            $root.google.protobuf.SourceCodeInfo.Location.encode(message.location[i], writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                    return writer;
                };
    
                /**
                 * Encodes the specified SourceCodeInfo message, length delimited. Does not implicitly {@link google.protobuf.SourceCodeInfo.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.protobuf.SourceCodeInfo
                 * @static
                 * @param {google.protobuf.ISourceCodeInfo} message SourceCodeInfo message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                SourceCodeInfo.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a SourceCodeInfo message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.protobuf.SourceCodeInfo
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.protobuf.SourceCodeInfo} SourceCodeInfo
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                SourceCodeInfo.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.SourceCodeInfo();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1: {
                                if (!(message.location && message.location.length))
                                    message.location = [];
                                message.location.push($root.google.protobuf.SourceCodeInfo.Location.decode(reader, reader.uint32()));
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a SourceCodeInfo message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.protobuf.SourceCodeInfo
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.protobuf.SourceCodeInfo} SourceCodeInfo
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                SourceCodeInfo.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a SourceCodeInfo message.
                 * @function verify
                 * @memberof google.protobuf.SourceCodeInfo
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                SourceCodeInfo.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.location != null && message.hasOwnProperty("location")) {
                        if (!Array.isArray(message.location))
                            return "location: array expected";
                        for (var i = 0; i < message.location.length; ++i) {
                            var error = $root.google.protobuf.SourceCodeInfo.Location.verify(message.location[i]);
                            if (error)
                                return "location." + error;
                        }
                    }
                    return null;
                };
    
                /**
                 * Creates a SourceCodeInfo message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.protobuf.SourceCodeInfo
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.protobuf.SourceCodeInfo} SourceCodeInfo
                 */
                SourceCodeInfo.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.protobuf.SourceCodeInfo)
                        return object;
                    var message = new $root.google.protobuf.SourceCodeInfo();
                    if (object.location) {
                        if (!Array.isArray(object.location))
                            throw TypeError(".google.protobuf.SourceCodeInfo.location: array expected");
                        message.location = [];
                        for (var i = 0; i < object.location.length; ++i) {
                            if (typeof object.location[i] !== "object")
                                throw TypeError(".google.protobuf.SourceCodeInfo.location: object expected");
                            message.location[i] = $root.google.protobuf.SourceCodeInfo.Location.fromObject(object.location[i]);
                        }
                    }
                    return message;
                };
    
                /**
                 * Creates a plain object from a SourceCodeInfo message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.protobuf.SourceCodeInfo
                 * @static
                 * @param {google.protobuf.SourceCodeInfo} message SourceCodeInfo
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                SourceCodeInfo.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.arrays || options.defaults)
                        object.location = [];
                    if (message.location && message.location.length) {
                        object.location = [];
                        for (var j = 0; j < message.location.length; ++j)
                            object.location[j] = $root.google.protobuf.SourceCodeInfo.Location.toObject(message.location[j], options);
                    }
                    return object;
                };
    
                /**
                 * Converts this SourceCodeInfo to JSON.
                 * @function toJSON
                 * @memberof google.protobuf.SourceCodeInfo
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                SourceCodeInfo.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for SourceCodeInfo
                 * @function getTypeUrl
                 * @memberof google.protobuf.SourceCodeInfo
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                SourceCodeInfo.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.protobuf.SourceCodeInfo";
                };
    
                SourceCodeInfo.Location = (function() {
    
                    /**
                     * Properties of a Location.
                     * @memberof google.protobuf.SourceCodeInfo
                     * @interface ILocation
                     * @property {Array.<number>|null} [path] Location path
                     * @property {Array.<number>|null} [span] Location span
                     * @property {string|null} [leadingComments] Location leadingComments
                     * @property {string|null} [trailingComments] Location trailingComments
                     * @property {Array.<string>|null} [leadingDetachedComments] Location leadingDetachedComments
                     */
    
                    /**
                     * Constructs a new Location.
                     * @memberof google.protobuf.SourceCodeInfo
                     * @classdesc Represents a Location.
                     * @implements ILocation
                     * @constructor
                     * @param {google.protobuf.SourceCodeInfo.ILocation=} [properties] Properties to set
                     */
                    function Location(properties) {
                        this.path = [];
                        this.span = [];
                        this.leadingDetachedComments = [];
                        if (properties)
                            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                if (properties[keys[i]] != null)
                                    this[keys[i]] = properties[keys[i]];
                    }
    
                    /**
                     * Location path.
                     * @member {Array.<number>} path
                     * @memberof google.protobuf.SourceCodeInfo.Location
                     * @instance
                     */
                    Location.prototype.path = $util.emptyArray;
    
                    /**
                     * Location span.
                     * @member {Array.<number>} span
                     * @memberof google.protobuf.SourceCodeInfo.Location
                     * @instance
                     */
                    Location.prototype.span = $util.emptyArray;
    
                    /**
                     * Location leadingComments.
                     * @member {string} leadingComments
                     * @memberof google.protobuf.SourceCodeInfo.Location
                     * @instance
                     */
                    Location.prototype.leadingComments = "";
    
                    /**
                     * Location trailingComments.
                     * @member {string} trailingComments
                     * @memberof google.protobuf.SourceCodeInfo.Location
                     * @instance
                     */
                    Location.prototype.trailingComments = "";
    
                    /**
                     * Location leadingDetachedComments.
                     * @member {Array.<string>} leadingDetachedComments
                     * @memberof google.protobuf.SourceCodeInfo.Location
                     * @instance
                     */
                    Location.prototype.leadingDetachedComments = $util.emptyArray;
    
                    /**
                     * Creates a new Location instance using the specified properties.
                     * @function create
                     * @memberof google.protobuf.SourceCodeInfo.Location
                     * @static
                     * @param {google.protobuf.SourceCodeInfo.ILocation=} [properties] Properties to set
                     * @returns {google.protobuf.SourceCodeInfo.Location} Location instance
                     */
                    Location.create = function create(properties) {
                        return new Location(properties);
                    };
    
                    /**
                     * Encodes the specified Location message. Does not implicitly {@link google.protobuf.SourceCodeInfo.Location.verify|verify} messages.
                     * @function encode
                     * @memberof google.protobuf.SourceCodeInfo.Location
                     * @static
                     * @param {google.protobuf.SourceCodeInfo.ILocation} message Location message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    Location.encode = function encode(message, writer) {
                        if (!writer)
                            writer = $Writer.create();
                        if (message.path != null && message.path.length) {
                            writer.uint32(/* id 1, wireType 2 =*/10).fork();
                            for (var i = 0; i < message.path.length; ++i)
                                writer.int32(message.path[i]);
                            writer.ldelim();
                        }
                        if (message.span != null && message.span.length) {
                            writer.uint32(/* id 2, wireType 2 =*/18).fork();
                            for (var i = 0; i < message.span.length; ++i)
                                writer.int32(message.span[i]);
                            writer.ldelim();
                        }
                        if (message.leadingComments != null && Object.hasOwnProperty.call(message, "leadingComments"))
                            writer.uint32(/* id 3, wireType 2 =*/26).string(message.leadingComments);
                        if (message.trailingComments != null && Object.hasOwnProperty.call(message, "trailingComments"))
                            writer.uint32(/* id 4, wireType 2 =*/34).string(message.trailingComments);
                        if (message.leadingDetachedComments != null && message.leadingDetachedComments.length)
                            for (var i = 0; i < message.leadingDetachedComments.length; ++i)
                                writer.uint32(/* id 6, wireType 2 =*/50).string(message.leadingDetachedComments[i]);
                        return writer;
                    };
    
                    /**
                     * Encodes the specified Location message, length delimited. Does not implicitly {@link google.protobuf.SourceCodeInfo.Location.verify|verify} messages.
                     * @function encodeDelimited
                     * @memberof google.protobuf.SourceCodeInfo.Location
                     * @static
                     * @param {google.protobuf.SourceCodeInfo.ILocation} message Location message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    Location.encodeDelimited = function encodeDelimited(message, writer) {
                        return this.encode(message, writer).ldelim();
                    };
    
                    /**
                     * Decodes a Location message from the specified reader or buffer.
                     * @function decode
                     * @memberof google.protobuf.SourceCodeInfo.Location
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @param {number} [length] Message length if known beforehand
                     * @returns {google.protobuf.SourceCodeInfo.Location} Location
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    Location.decode = function decode(reader, length) {
                        if (!(reader instanceof $Reader))
                            reader = $Reader.create(reader);
                        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.SourceCodeInfo.Location();
                        while (reader.pos < end) {
                            var tag = reader.uint32();
                            switch (tag >>> 3) {
                            case 1: {
                                    if (!(message.path && message.path.length))
                                        message.path = [];
                                    if ((tag & 7) === 2) {
                                        var end2 = reader.uint32() + reader.pos;
                                        while (reader.pos < end2)
                                            message.path.push(reader.int32());
                                    } else
                                        message.path.push(reader.int32());
                                    break;
                                }
                            case 2: {
                                    if (!(message.span && message.span.length))
                                        message.span = [];
                                    if ((tag & 7) === 2) {
                                        var end2 = reader.uint32() + reader.pos;
                                        while (reader.pos < end2)
                                            message.span.push(reader.int32());
                                    } else
                                        message.span.push(reader.int32());
                                    break;
                                }
                            case 3: {
                                    message.leadingComments = reader.string();
                                    break;
                                }
                            case 4: {
                                    message.trailingComments = reader.string();
                                    break;
                                }
                            case 6: {
                                    if (!(message.leadingDetachedComments && message.leadingDetachedComments.length))
                                        message.leadingDetachedComments = [];
                                    message.leadingDetachedComments.push(reader.string());
                                    break;
                                }
                            default:
                                reader.skipType(tag & 7);
                                break;
                            }
                        }
                        return message;
                    };
    
                    /**
                     * Decodes a Location message from the specified reader or buffer, length delimited.
                     * @function decodeDelimited
                     * @memberof google.protobuf.SourceCodeInfo.Location
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @returns {google.protobuf.SourceCodeInfo.Location} Location
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    Location.decodeDelimited = function decodeDelimited(reader) {
                        if (!(reader instanceof $Reader))
                            reader = new $Reader(reader);
                        return this.decode(reader, reader.uint32());
                    };
    
                    /**
                     * Verifies a Location message.
                     * @function verify
                     * @memberof google.protobuf.SourceCodeInfo.Location
                     * @static
                     * @param {Object.<string,*>} message Plain object to verify
                     * @returns {string|null} `null` if valid, otherwise the reason why it is not
                     */
                    Location.verify = function verify(message) {
                        if (typeof message !== "object" || message === null)
                            return "object expected";
                        if (message.path != null && message.hasOwnProperty("path")) {
                            if (!Array.isArray(message.path))
                                return "path: array expected";
                            for (var i = 0; i < message.path.length; ++i)
                                if (!$util.isInteger(message.path[i]))
                                    return "path: integer[] expected";
                        }
                        if (message.span != null && message.hasOwnProperty("span")) {
                            if (!Array.isArray(message.span))
                                return "span: array expected";
                            for (var i = 0; i < message.span.length; ++i)
                                if (!$util.isInteger(message.span[i]))
                                    return "span: integer[] expected";
                        }
                        if (message.leadingComments != null && message.hasOwnProperty("leadingComments"))
                            if (!$util.isString(message.leadingComments))
                                return "leadingComments: string expected";
                        if (message.trailingComments != null && message.hasOwnProperty("trailingComments"))
                            if (!$util.isString(message.trailingComments))
                                return "trailingComments: string expected";
                        if (message.leadingDetachedComments != null && message.hasOwnProperty("leadingDetachedComments")) {
                            if (!Array.isArray(message.leadingDetachedComments))
                                return "leadingDetachedComments: array expected";
                            for (var i = 0; i < message.leadingDetachedComments.length; ++i)
                                if (!$util.isString(message.leadingDetachedComments[i]))
                                    return "leadingDetachedComments: string[] expected";
                        }
                        return null;
                    };
    
                    /**
                     * Creates a Location message from a plain object. Also converts values to their respective internal types.
                     * @function fromObject
                     * @memberof google.protobuf.SourceCodeInfo.Location
                     * @static
                     * @param {Object.<string,*>} object Plain object
                     * @returns {google.protobuf.SourceCodeInfo.Location} Location
                     */
                    Location.fromObject = function fromObject(object) {
                        if (object instanceof $root.google.protobuf.SourceCodeInfo.Location)
                            return object;
                        var message = new $root.google.protobuf.SourceCodeInfo.Location();
                        if (object.path) {
                            if (!Array.isArray(object.path))
                                throw TypeError(".google.protobuf.SourceCodeInfo.Location.path: array expected");
                            message.path = [];
                            for (var i = 0; i < object.path.length; ++i)
                                message.path[i] = object.path[i] | 0;
                        }
                        if (object.span) {
                            if (!Array.isArray(object.span))
                                throw TypeError(".google.protobuf.SourceCodeInfo.Location.span: array expected");
                            message.span = [];
                            for (var i = 0; i < object.span.length; ++i)
                                message.span[i] = object.span[i] | 0;
                        }
                        if (object.leadingComments != null)
                            message.leadingComments = String(object.leadingComments);
                        if (object.trailingComments != null)
                            message.trailingComments = String(object.trailingComments);
                        if (object.leadingDetachedComments) {
                            if (!Array.isArray(object.leadingDetachedComments))
                                throw TypeError(".google.protobuf.SourceCodeInfo.Location.leadingDetachedComments: array expected");
                            message.leadingDetachedComments = [];
                            for (var i = 0; i < object.leadingDetachedComments.length; ++i)
                                message.leadingDetachedComments[i] = String(object.leadingDetachedComments[i]);
                        }
                        return message;
                    };
    
                    /**
                     * Creates a plain object from a Location message. Also converts values to other types if specified.
                     * @function toObject
                     * @memberof google.protobuf.SourceCodeInfo.Location
                     * @static
                     * @param {google.protobuf.SourceCodeInfo.Location} message Location
                     * @param {$protobuf.IConversionOptions} [options] Conversion options
                     * @returns {Object.<string,*>} Plain object
                     */
                    Location.toObject = function toObject(message, options) {
                        if (!options)
                            options = {};
                        var object = {};
                        if (options.arrays || options.defaults) {
                            object.path = [];
                            object.span = [];
                            object.leadingDetachedComments = [];
                        }
                        if (options.defaults) {
                            object.leadingComments = "";
                            object.trailingComments = "";
                        }
                        if (message.path && message.path.length) {
                            object.path = [];
                            for (var j = 0; j < message.path.length; ++j)
                                object.path[j] = message.path[j];
                        }
                        if (message.span && message.span.length) {
                            object.span = [];
                            for (var j = 0; j < message.span.length; ++j)
                                object.span[j] = message.span[j];
                        }
                        if (message.leadingComments != null && message.hasOwnProperty("leadingComments"))
                            object.leadingComments = message.leadingComments;
                        if (message.trailingComments != null && message.hasOwnProperty("trailingComments"))
                            object.trailingComments = message.trailingComments;
                        if (message.leadingDetachedComments && message.leadingDetachedComments.length) {
                            object.leadingDetachedComments = [];
                            for (var j = 0; j < message.leadingDetachedComments.length; ++j)
                                object.leadingDetachedComments[j] = message.leadingDetachedComments[j];
                        }
                        return object;
                    };
    
                    /**
                     * Converts this Location to JSON.
                     * @function toJSON
                     * @memberof google.protobuf.SourceCodeInfo.Location
                     * @instance
                     * @returns {Object.<string,*>} JSON object
                     */
                    Location.prototype.toJSON = function toJSON() {
                        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                    };
    
                    /**
                     * Gets the default type url for Location
                     * @function getTypeUrl
                     * @memberof google.protobuf.SourceCodeInfo.Location
                     * @static
                     * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                     * @returns {string} The default type url
                     */
                    Location.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                        if (typeUrlPrefix === undefined) {
                            typeUrlPrefix = "type.googleapis.com";
                        }
                        return typeUrlPrefix + "/google.protobuf.SourceCodeInfo.Location";
                    };
    
                    return Location;
                })();
    
                return SourceCodeInfo;
            })();
    
            protobuf.GeneratedCodeInfo = (function() {
    
                /**
                 * Properties of a GeneratedCodeInfo.
                 * @memberof google.protobuf
                 * @interface IGeneratedCodeInfo
                 * @property {Array.<google.protobuf.GeneratedCodeInfo.IAnnotation>|null} [annotation] GeneratedCodeInfo annotation
                 */
    
                /**
                 * Constructs a new GeneratedCodeInfo.
                 * @memberof google.protobuf
                 * @classdesc Represents a GeneratedCodeInfo.
                 * @implements IGeneratedCodeInfo
                 * @constructor
                 * @param {google.protobuf.IGeneratedCodeInfo=} [properties] Properties to set
                 */
                function GeneratedCodeInfo(properties) {
                    this.annotation = [];
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * GeneratedCodeInfo annotation.
                 * @member {Array.<google.protobuf.GeneratedCodeInfo.IAnnotation>} annotation
                 * @memberof google.protobuf.GeneratedCodeInfo
                 * @instance
                 */
                GeneratedCodeInfo.prototype.annotation = $util.emptyArray;
    
                /**
                 * Creates a new GeneratedCodeInfo instance using the specified properties.
                 * @function create
                 * @memberof google.protobuf.GeneratedCodeInfo
                 * @static
                 * @param {google.protobuf.IGeneratedCodeInfo=} [properties] Properties to set
                 * @returns {google.protobuf.GeneratedCodeInfo} GeneratedCodeInfo instance
                 */
                GeneratedCodeInfo.create = function create(properties) {
                    return new GeneratedCodeInfo(properties);
                };
    
                /**
                 * Encodes the specified GeneratedCodeInfo message. Does not implicitly {@link google.protobuf.GeneratedCodeInfo.verify|verify} messages.
                 * @function encode
                 * @memberof google.protobuf.GeneratedCodeInfo
                 * @static
                 * @param {google.protobuf.IGeneratedCodeInfo} message GeneratedCodeInfo message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                GeneratedCodeInfo.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.annotation != null && message.annotation.length)
                        for (var i = 0; i < message.annotation.length; ++i)
                            $root.google.protobuf.GeneratedCodeInfo.Annotation.encode(message.annotation[i], writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                    return writer;
                };
    
                /**
                 * Encodes the specified GeneratedCodeInfo message, length delimited. Does not implicitly {@link google.protobuf.GeneratedCodeInfo.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.protobuf.GeneratedCodeInfo
                 * @static
                 * @param {google.protobuf.IGeneratedCodeInfo} message GeneratedCodeInfo message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                GeneratedCodeInfo.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a GeneratedCodeInfo message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.protobuf.GeneratedCodeInfo
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.protobuf.GeneratedCodeInfo} GeneratedCodeInfo
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                GeneratedCodeInfo.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.GeneratedCodeInfo();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1: {
                                if (!(message.annotation && message.annotation.length))
                                    message.annotation = [];
                                message.annotation.push($root.google.protobuf.GeneratedCodeInfo.Annotation.decode(reader, reader.uint32()));
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a GeneratedCodeInfo message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.protobuf.GeneratedCodeInfo
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.protobuf.GeneratedCodeInfo} GeneratedCodeInfo
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                GeneratedCodeInfo.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a GeneratedCodeInfo message.
                 * @function verify
                 * @memberof google.protobuf.GeneratedCodeInfo
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                GeneratedCodeInfo.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.annotation != null && message.hasOwnProperty("annotation")) {
                        if (!Array.isArray(message.annotation))
                            return "annotation: array expected";
                        for (var i = 0; i < message.annotation.length; ++i) {
                            var error = $root.google.protobuf.GeneratedCodeInfo.Annotation.verify(message.annotation[i]);
                            if (error)
                                return "annotation." + error;
                        }
                    }
                    return null;
                };
    
                /**
                 * Creates a GeneratedCodeInfo message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.protobuf.GeneratedCodeInfo
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.protobuf.GeneratedCodeInfo} GeneratedCodeInfo
                 */
                GeneratedCodeInfo.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.protobuf.GeneratedCodeInfo)
                        return object;
                    var message = new $root.google.protobuf.GeneratedCodeInfo();
                    if (object.annotation) {
                        if (!Array.isArray(object.annotation))
                            throw TypeError(".google.protobuf.GeneratedCodeInfo.annotation: array expected");
                        message.annotation = [];
                        for (var i = 0; i < object.annotation.length; ++i) {
                            if (typeof object.annotation[i] !== "object")
                                throw TypeError(".google.protobuf.GeneratedCodeInfo.annotation: object expected");
                            message.annotation[i] = $root.google.protobuf.GeneratedCodeInfo.Annotation.fromObject(object.annotation[i]);
                        }
                    }
                    return message;
                };
    
                /**
                 * Creates a plain object from a GeneratedCodeInfo message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.protobuf.GeneratedCodeInfo
                 * @static
                 * @param {google.protobuf.GeneratedCodeInfo} message GeneratedCodeInfo
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                GeneratedCodeInfo.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.arrays || options.defaults)
                        object.annotation = [];
                    if (message.annotation && message.annotation.length) {
                        object.annotation = [];
                        for (var j = 0; j < message.annotation.length; ++j)
                            object.annotation[j] = $root.google.protobuf.GeneratedCodeInfo.Annotation.toObject(message.annotation[j], options);
                    }
                    return object;
                };
    
                /**
                 * Converts this GeneratedCodeInfo to JSON.
                 * @function toJSON
                 * @memberof google.protobuf.GeneratedCodeInfo
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                GeneratedCodeInfo.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for GeneratedCodeInfo
                 * @function getTypeUrl
                 * @memberof google.protobuf.GeneratedCodeInfo
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                GeneratedCodeInfo.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.protobuf.GeneratedCodeInfo";
                };
    
                GeneratedCodeInfo.Annotation = (function() {
    
                    /**
                     * Properties of an Annotation.
                     * @memberof google.protobuf.GeneratedCodeInfo
                     * @interface IAnnotation
                     * @property {Array.<number>|null} [path] Annotation path
                     * @property {string|null} [sourceFile] Annotation sourceFile
                     * @property {number|null} [begin] Annotation begin
                     * @property {number|null} [end] Annotation end
                     * @property {google.protobuf.GeneratedCodeInfo.Annotation.Semantic|null} [semantic] Annotation semantic
                     */
    
                    /**
                     * Constructs a new Annotation.
                     * @memberof google.protobuf.GeneratedCodeInfo
                     * @classdesc Represents an Annotation.
                     * @implements IAnnotation
                     * @constructor
                     * @param {google.protobuf.GeneratedCodeInfo.IAnnotation=} [properties] Properties to set
                     */
                    function Annotation(properties) {
                        this.path = [];
                        if (properties)
                            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                if (properties[keys[i]] != null)
                                    this[keys[i]] = properties[keys[i]];
                    }
    
                    /**
                     * Annotation path.
                     * @member {Array.<number>} path
                     * @memberof google.protobuf.GeneratedCodeInfo.Annotation
                     * @instance
                     */
                    Annotation.prototype.path = $util.emptyArray;
    
                    /**
                     * Annotation sourceFile.
                     * @member {string} sourceFile
                     * @memberof google.protobuf.GeneratedCodeInfo.Annotation
                     * @instance
                     */
                    Annotation.prototype.sourceFile = "";
    
                    /**
                     * Annotation begin.
                     * @member {number} begin
                     * @memberof google.protobuf.GeneratedCodeInfo.Annotation
                     * @instance
                     */
                    Annotation.prototype.begin = 0;
    
                    /**
                     * Annotation end.
                     * @member {number} end
                     * @memberof google.protobuf.GeneratedCodeInfo.Annotation
                     * @instance
                     */
                    Annotation.prototype.end = 0;
    
                    /**
                     * Annotation semantic.
                     * @member {google.protobuf.GeneratedCodeInfo.Annotation.Semantic} semantic
                     * @memberof google.protobuf.GeneratedCodeInfo.Annotation
                     * @instance
                     */
                    Annotation.prototype.semantic = 0;
    
                    /**
                     * Creates a new Annotation instance using the specified properties.
                     * @function create
                     * @memberof google.protobuf.GeneratedCodeInfo.Annotation
                     * @static
                     * @param {google.protobuf.GeneratedCodeInfo.IAnnotation=} [properties] Properties to set
                     * @returns {google.protobuf.GeneratedCodeInfo.Annotation} Annotation instance
                     */
                    Annotation.create = function create(properties) {
                        return new Annotation(properties);
                    };
    
                    /**
                     * Encodes the specified Annotation message. Does not implicitly {@link google.protobuf.GeneratedCodeInfo.Annotation.verify|verify} messages.
                     * @function encode
                     * @memberof google.protobuf.GeneratedCodeInfo.Annotation
                     * @static
                     * @param {google.protobuf.GeneratedCodeInfo.IAnnotation} message Annotation message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    Annotation.encode = function encode(message, writer) {
                        if (!writer)
                            writer = $Writer.create();
                        if (message.path != null && message.path.length) {
                            writer.uint32(/* id 1, wireType 2 =*/10).fork();
                            for (var i = 0; i < message.path.length; ++i)
                                writer.int32(message.path[i]);
                            writer.ldelim();
                        }
                        if (message.sourceFile != null && Object.hasOwnProperty.call(message, "sourceFile"))
                            writer.uint32(/* id 2, wireType 2 =*/18).string(message.sourceFile);
                        if (message.begin != null && Object.hasOwnProperty.call(message, "begin"))
                            writer.uint32(/* id 3, wireType 0 =*/24).int32(message.begin);
                        if (message.end != null && Object.hasOwnProperty.call(message, "end"))
                            writer.uint32(/* id 4, wireType 0 =*/32).int32(message.end);
                        if (message.semantic != null && Object.hasOwnProperty.call(message, "semantic"))
                            writer.uint32(/* id 5, wireType 0 =*/40).int32(message.semantic);
                        return writer;
                    };
    
                    /**
                     * Encodes the specified Annotation message, length delimited. Does not implicitly {@link google.protobuf.GeneratedCodeInfo.Annotation.verify|verify} messages.
                     * @function encodeDelimited
                     * @memberof google.protobuf.GeneratedCodeInfo.Annotation
                     * @static
                     * @param {google.protobuf.GeneratedCodeInfo.IAnnotation} message Annotation message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    Annotation.encodeDelimited = function encodeDelimited(message, writer) {
                        return this.encode(message, writer).ldelim();
                    };
    
                    /**
                     * Decodes an Annotation message from the specified reader or buffer.
                     * @function decode
                     * @memberof google.protobuf.GeneratedCodeInfo.Annotation
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @param {number} [length] Message length if known beforehand
                     * @returns {google.protobuf.GeneratedCodeInfo.Annotation} Annotation
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    Annotation.decode = function decode(reader, length) {
                        if (!(reader instanceof $Reader))
                            reader = $Reader.create(reader);
                        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.GeneratedCodeInfo.Annotation();
                        while (reader.pos < end) {
                            var tag = reader.uint32();
                            switch (tag >>> 3) {
                            case 1: {
                                    if (!(message.path && message.path.length))
                                        message.path = [];
                                    if ((tag & 7) === 2) {
                                        var end2 = reader.uint32() + reader.pos;
                                        while (reader.pos < end2)
                                            message.path.push(reader.int32());
                                    } else
                                        message.path.push(reader.int32());
                                    break;
                                }
                            case 2: {
                                    message.sourceFile = reader.string();
                                    break;
                                }
                            case 3: {
                                    message.begin = reader.int32();
                                    break;
                                }
                            case 4: {
                                    message.end = reader.int32();
                                    break;
                                }
                            case 5: {
                                    message.semantic = reader.int32();
                                    break;
                                }
                            default:
                                reader.skipType(tag & 7);
                                break;
                            }
                        }
                        return message;
                    };
    
                    /**
                     * Decodes an Annotation message from the specified reader or buffer, length delimited.
                     * @function decodeDelimited
                     * @memberof google.protobuf.GeneratedCodeInfo.Annotation
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @returns {google.protobuf.GeneratedCodeInfo.Annotation} Annotation
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    Annotation.decodeDelimited = function decodeDelimited(reader) {
                        if (!(reader instanceof $Reader))
                            reader = new $Reader(reader);
                        return this.decode(reader, reader.uint32());
                    };
    
                    /**
                     * Verifies an Annotation message.
                     * @function verify
                     * @memberof google.protobuf.GeneratedCodeInfo.Annotation
                     * @static
                     * @param {Object.<string,*>} message Plain object to verify
                     * @returns {string|null} `null` if valid, otherwise the reason why it is not
                     */
                    Annotation.verify = function verify(message) {
                        if (typeof message !== "object" || message === null)
                            return "object expected";
                        if (message.path != null && message.hasOwnProperty("path")) {
                            if (!Array.isArray(message.path))
                                return "path: array expected";
                            for (var i = 0; i < message.path.length; ++i)
                                if (!$util.isInteger(message.path[i]))
                                    return "path: integer[] expected";
                        }
                        if (message.sourceFile != null && message.hasOwnProperty("sourceFile"))
                            if (!$util.isString(message.sourceFile))
                                return "sourceFile: string expected";
                        if (message.begin != null && message.hasOwnProperty("begin"))
                            if (!$util.isInteger(message.begin))
                                return "begin: integer expected";
                        if (message.end != null && message.hasOwnProperty("end"))
                            if (!$util.isInteger(message.end))
                                return "end: integer expected";
                        if (message.semantic != null && message.hasOwnProperty("semantic"))
                            switch (message.semantic) {
                            default:
                                return "semantic: enum value expected";
                            case 0:
                            case 1:
                            case 2:
                                break;
                            }
                        return null;
                    };
    
                    /**
                     * Creates an Annotation message from a plain object. Also converts values to their respective internal types.
                     * @function fromObject
                     * @memberof google.protobuf.GeneratedCodeInfo.Annotation
                     * @static
                     * @param {Object.<string,*>} object Plain object
                     * @returns {google.protobuf.GeneratedCodeInfo.Annotation} Annotation
                     */
                    Annotation.fromObject = function fromObject(object) {
                        if (object instanceof $root.google.protobuf.GeneratedCodeInfo.Annotation)
                            return object;
                        var message = new $root.google.protobuf.GeneratedCodeInfo.Annotation();
                        if (object.path) {
                            if (!Array.isArray(object.path))
                                throw TypeError(".google.protobuf.GeneratedCodeInfo.Annotation.path: array expected");
                            message.path = [];
                            for (var i = 0; i < object.path.length; ++i)
                                message.path[i] = object.path[i] | 0;
                        }
                        if (object.sourceFile != null)
                            message.sourceFile = String(object.sourceFile);
                        if (object.begin != null)
                            message.begin = object.begin | 0;
                        if (object.end != null)
                            message.end = object.end | 0;
                        switch (object.semantic) {
                        default:
                            if (typeof object.semantic === "number") {
                                message.semantic = object.semantic;
                                break;
                            }
                            break;
                        case "NONE":
                        case 0:
                            message.semantic = 0;
                            break;
                        case "SET":
                        case 1:
                            message.semantic = 1;
                            break;
                        case "ALIAS":
                        case 2:
                            message.semantic = 2;
                            break;
                        }
                        return message;
                    };
    
                    /**
                     * Creates a plain object from an Annotation message. Also converts values to other types if specified.
                     * @function toObject
                     * @memberof google.protobuf.GeneratedCodeInfo.Annotation
                     * @static
                     * @param {google.protobuf.GeneratedCodeInfo.Annotation} message Annotation
                     * @param {$protobuf.IConversionOptions} [options] Conversion options
                     * @returns {Object.<string,*>} Plain object
                     */
                    Annotation.toObject = function toObject(message, options) {
                        if (!options)
                            options = {};
                        var object = {};
                        if (options.arrays || options.defaults)
                            object.path = [];
                        if (options.defaults) {
                            object.sourceFile = "";
                            object.begin = 0;
                            object.end = 0;
                            object.semantic = options.enums === String ? "NONE" : 0;
                        }
                        if (message.path && message.path.length) {
                            object.path = [];
                            for (var j = 0; j < message.path.length; ++j)
                                object.path[j] = message.path[j];
                        }
                        if (message.sourceFile != null && message.hasOwnProperty("sourceFile"))
                            object.sourceFile = message.sourceFile;
                        if (message.begin != null && message.hasOwnProperty("begin"))
                            object.begin = message.begin;
                        if (message.end != null && message.hasOwnProperty("end"))
                            object.end = message.end;
                        if (message.semantic != null && message.hasOwnProperty("semantic"))
                            object.semantic = options.enums === String ? $root.google.protobuf.GeneratedCodeInfo.Annotation.Semantic[message.semantic] === undefined ? message.semantic : $root.google.protobuf.GeneratedCodeInfo.Annotation.Semantic[message.semantic] : message.semantic;
                        return object;
                    };
    
                    /**
                     * Converts this Annotation to JSON.
                     * @function toJSON
                     * @memberof google.protobuf.GeneratedCodeInfo.Annotation
                     * @instance
                     * @returns {Object.<string,*>} JSON object
                     */
                    Annotation.prototype.toJSON = function toJSON() {
                        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                    };
    
                    /**
                     * Gets the default type url for Annotation
                     * @function getTypeUrl
                     * @memberof google.protobuf.GeneratedCodeInfo.Annotation
                     * @static
                     * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                     * @returns {string} The default type url
                     */
                    Annotation.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                        if (typeUrlPrefix === undefined) {
                            typeUrlPrefix = "type.googleapis.com";
                        }
                        return typeUrlPrefix + "/google.protobuf.GeneratedCodeInfo.Annotation";
                    };
    
                    /**
                     * Semantic enum.
                     * @name google.protobuf.GeneratedCodeInfo.Annotation.Semantic
                     * @enum {number}
                     * @property {number} NONE=0 NONE value
                     * @property {number} SET=1 SET value
                     * @property {number} ALIAS=2 ALIAS value
                     */
                    Annotation.Semantic = (function() {
                        var valuesById = {}, values = Object.create(valuesById);
                        values[valuesById[0] = "NONE"] = 0;
                        values[valuesById[1] = "SET"] = 1;
                        values[valuesById[2] = "ALIAS"] = 2;
                        return values;
                    })();
    
                    return Annotation;
                })();
    
                return GeneratedCodeInfo;
            })();
    
            return protobuf;
        })();
    
        google.geo = (function() {
    
            /**
             * Namespace geo.
             * @memberof google
             * @namespace
             */
            var geo = {};
    
            geo.type = (function() {
    
                /**
                 * Namespace type.
                 * @memberof google.geo
                 * @namespace
                 */
                var type = {};
    
                type.Viewport = (function() {
    
                    /**
                     * Properties of a Viewport.
                     * @memberof google.geo.type
                     * @interface IViewport
                     * @property {google.type.ILatLng|null} [low] Viewport low
                     * @property {google.type.ILatLng|null} [high] Viewport high
                     */
    
                    /**
                     * Constructs a new Viewport.
                     * @memberof google.geo.type
                     * @classdesc Represents a Viewport.
                     * @implements IViewport
                     * @constructor
                     * @param {google.geo.type.IViewport=} [properties] Properties to set
                     */
                    function Viewport(properties) {
                        if (properties)
                            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                if (properties[keys[i]] != null)
                                    this[keys[i]] = properties[keys[i]];
                    }
    
                    /**
                     * Viewport low.
                     * @member {google.type.ILatLng|null|undefined} low
                     * @memberof google.geo.type.Viewport
                     * @instance
                     */
                    Viewport.prototype.low = null;
    
                    /**
                     * Viewport high.
                     * @member {google.type.ILatLng|null|undefined} high
                     * @memberof google.geo.type.Viewport
                     * @instance
                     */
                    Viewport.prototype.high = null;
    
                    /**
                     * Creates a new Viewport instance using the specified properties.
                     * @function create
                     * @memberof google.geo.type.Viewport
                     * @static
                     * @param {google.geo.type.IViewport=} [properties] Properties to set
                     * @returns {google.geo.type.Viewport} Viewport instance
                     */
                    Viewport.create = function create(properties) {
                        return new Viewport(properties);
                    };
    
                    /**
                     * Encodes the specified Viewport message. Does not implicitly {@link google.geo.type.Viewport.verify|verify} messages.
                     * @function encode
                     * @memberof google.geo.type.Viewport
                     * @static
                     * @param {google.geo.type.IViewport} message Viewport message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    Viewport.encode = function encode(message, writer) {
                        if (!writer)
                            writer = $Writer.create();
                        if (message.low != null && Object.hasOwnProperty.call(message, "low"))
                            $root.google.type.LatLng.encode(message.low, writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                        if (message.high != null && Object.hasOwnProperty.call(message, "high"))
                            $root.google.type.LatLng.encode(message.high, writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                        return writer;
                    };
    
                    /**
                     * Encodes the specified Viewport message, length delimited. Does not implicitly {@link google.geo.type.Viewport.verify|verify} messages.
                     * @function encodeDelimited
                     * @memberof google.geo.type.Viewport
                     * @static
                     * @param {google.geo.type.IViewport} message Viewport message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    Viewport.encodeDelimited = function encodeDelimited(message, writer) {
                        return this.encode(message, writer).ldelim();
                    };
    
                    /**
                     * Decodes a Viewport message from the specified reader or buffer.
                     * @function decode
                     * @memberof google.geo.type.Viewport
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @param {number} [length] Message length if known beforehand
                     * @returns {google.geo.type.Viewport} Viewport
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    Viewport.decode = function decode(reader, length) {
                        if (!(reader instanceof $Reader))
                            reader = $Reader.create(reader);
                        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.geo.type.Viewport();
                        while (reader.pos < end) {
                            var tag = reader.uint32();
                            switch (tag >>> 3) {
                            case 1: {
                                    message.low = $root.google.type.LatLng.decode(reader, reader.uint32());
                                    break;
                                }
                            case 2: {
                                    message.high = $root.google.type.LatLng.decode(reader, reader.uint32());
                                    break;
                                }
                            default:
                                reader.skipType(tag & 7);
                                break;
                            }
                        }
                        return message;
                    };
    
                    /**
                     * Decodes a Viewport message from the specified reader or buffer, length delimited.
                     * @function decodeDelimited
                     * @memberof google.geo.type.Viewport
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @returns {google.geo.type.Viewport} Viewport
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    Viewport.decodeDelimited = function decodeDelimited(reader) {
                        if (!(reader instanceof $Reader))
                            reader = new $Reader(reader);
                        return this.decode(reader, reader.uint32());
                    };
    
                    /**
                     * Verifies a Viewport message.
                     * @function verify
                     * @memberof google.geo.type.Viewport
                     * @static
                     * @param {Object.<string,*>} message Plain object to verify
                     * @returns {string|null} `null` if valid, otherwise the reason why it is not
                     */
                    Viewport.verify = function verify(message) {
                        if (typeof message !== "object" || message === null)
                            return "object expected";
                        if (message.low != null && message.hasOwnProperty("low")) {
                            var error = $root.google.type.LatLng.verify(message.low);
                            if (error)
                                return "low." + error;
                        }
                        if (message.high != null && message.hasOwnProperty("high")) {
                            var error = $root.google.type.LatLng.verify(message.high);
                            if (error)
                                return "high." + error;
                        }
                        return null;
                    };
    
                    /**
                     * Creates a Viewport message from a plain object. Also converts values to their respective internal types.
                     * @function fromObject
                     * @memberof google.geo.type.Viewport
                     * @static
                     * @param {Object.<string,*>} object Plain object
                     * @returns {google.geo.type.Viewport} Viewport
                     */
                    Viewport.fromObject = function fromObject(object) {
                        if (object instanceof $root.google.geo.type.Viewport)
                            return object;
                        var message = new $root.google.geo.type.Viewport();
                        if (object.low != null) {
                            if (typeof object.low !== "object")
                                throw TypeError(".google.geo.type.Viewport.low: object expected");
                            message.low = $root.google.type.LatLng.fromObject(object.low);
                        }
                        if (object.high != null) {
                            if (typeof object.high !== "object")
                                throw TypeError(".google.geo.type.Viewport.high: object expected");
                            message.high = $root.google.type.LatLng.fromObject(object.high);
                        }
                        return message;
                    };
    
                    /**
                     * Creates a plain object from a Viewport message. Also converts values to other types if specified.
                     * @function toObject
                     * @memberof google.geo.type.Viewport
                     * @static
                     * @param {google.geo.type.Viewport} message Viewport
                     * @param {$protobuf.IConversionOptions} [options] Conversion options
                     * @returns {Object.<string,*>} Plain object
                     */
                    Viewport.toObject = function toObject(message, options) {
                        if (!options)
                            options = {};
                        var object = {};
                        if (options.defaults) {
                            object.low = null;
                            object.high = null;
                        }
                        if (message.low != null && message.hasOwnProperty("low"))
                            object.low = $root.google.type.LatLng.toObject(message.low, options);
                        if (message.high != null && message.hasOwnProperty("high"))
                            object.high = $root.google.type.LatLng.toObject(message.high, options);
                        return object;
                    };
    
                    /**
                     * Converts this Viewport to JSON.
                     * @function toJSON
                     * @memberof google.geo.type.Viewport
                     * @instance
                     * @returns {Object.<string,*>} JSON object
                     */
                    Viewport.prototype.toJSON = function toJSON() {
                        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                    };
    
                    /**
                     * Gets the default type url for Viewport
                     * @function getTypeUrl
                     * @memberof google.geo.type.Viewport
                     * @static
                     * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                     * @returns {string} The default type url
                     */
                    Viewport.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                        if (typeUrlPrefix === undefined) {
                            typeUrlPrefix = "type.googleapis.com";
                        }
                        return typeUrlPrefix + "/google.geo.type.Viewport";
                    };
    
                    return Viewport;
                })();
    
                return type;
            })();
    
            return geo;
        })();
    
        google.type = (function() {
    
            /**
             * Namespace type.
             * @memberof google
             * @namespace
             */
            var type = {};
    
            type.LatLng = (function() {
    
                /**
                 * Properties of a LatLng.
                 * @memberof google.type
                 * @interface ILatLng
                 * @property {number|null} [latitude] LatLng latitude
                 * @property {number|null} [longitude] LatLng longitude
                 */
    
                /**
                 * Constructs a new LatLng.
                 * @memberof google.type
                 * @classdesc Represents a LatLng.
                 * @implements ILatLng
                 * @constructor
                 * @param {google.type.ILatLng=} [properties] Properties to set
                 */
                function LatLng(properties) {
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * LatLng latitude.
                 * @member {number} latitude
                 * @memberof google.type.LatLng
                 * @instance
                 */
                LatLng.prototype.latitude = 0;
    
                /**
                 * LatLng longitude.
                 * @member {number} longitude
                 * @memberof google.type.LatLng
                 * @instance
                 */
                LatLng.prototype.longitude = 0;
    
                /**
                 * Creates a new LatLng instance using the specified properties.
                 * @function create
                 * @memberof google.type.LatLng
                 * @static
                 * @param {google.type.ILatLng=} [properties] Properties to set
                 * @returns {google.type.LatLng} LatLng instance
                 */
                LatLng.create = function create(properties) {
                    return new LatLng(properties);
                };
    
                /**
                 * Encodes the specified LatLng message. Does not implicitly {@link google.type.LatLng.verify|verify} messages.
                 * @function encode
                 * @memberof google.type.LatLng
                 * @static
                 * @param {google.type.ILatLng} message LatLng message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                LatLng.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.latitude != null && Object.hasOwnProperty.call(message, "latitude"))
                        writer.uint32(/* id 1, wireType 1 =*/9).double(message.latitude);
                    if (message.longitude != null && Object.hasOwnProperty.call(message, "longitude"))
                        writer.uint32(/* id 2, wireType 1 =*/17).double(message.longitude);
                    return writer;
                };
    
                /**
                 * Encodes the specified LatLng message, length delimited. Does not implicitly {@link google.type.LatLng.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.type.LatLng
                 * @static
                 * @param {google.type.ILatLng} message LatLng message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                LatLng.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a LatLng message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.type.LatLng
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.type.LatLng} LatLng
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                LatLng.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.type.LatLng();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1: {
                                message.latitude = reader.double();
                                break;
                            }
                        case 2: {
                                message.longitude = reader.double();
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a LatLng message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.type.LatLng
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.type.LatLng} LatLng
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                LatLng.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a LatLng message.
                 * @function verify
                 * @memberof google.type.LatLng
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                LatLng.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.latitude != null && message.hasOwnProperty("latitude"))
                        if (typeof message.latitude !== "number")
                            return "latitude: number expected";
                    if (message.longitude != null && message.hasOwnProperty("longitude"))
                        if (typeof message.longitude !== "number")
                            return "longitude: number expected";
                    return null;
                };
    
                /**
                 * Creates a LatLng message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.type.LatLng
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.type.LatLng} LatLng
                 */
                LatLng.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.type.LatLng)
                        return object;
                    var message = new $root.google.type.LatLng();
                    if (object.latitude != null)
                        message.latitude = Number(object.latitude);
                    if (object.longitude != null)
                        message.longitude = Number(object.longitude);
                    return message;
                };
    
                /**
                 * Creates a plain object from a LatLng message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.type.LatLng
                 * @static
                 * @param {google.type.LatLng} message LatLng
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                LatLng.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.defaults) {
                        object.latitude = 0;
                        object.longitude = 0;
                    }
                    if (message.latitude != null && message.hasOwnProperty("latitude"))
                        object.latitude = options.json && !isFinite(message.latitude) ? String(message.latitude) : message.latitude;
                    if (message.longitude != null && message.hasOwnProperty("longitude"))
                        object.longitude = options.json && !isFinite(message.longitude) ? String(message.longitude) : message.longitude;
                    return object;
                };
    
                /**
                 * Converts this LatLng to JSON.
                 * @function toJSON
                 * @memberof google.type.LatLng
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                LatLng.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for LatLng
                 * @function getTypeUrl
                 * @memberof google.type.LatLng
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                LatLng.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.type.LatLng";
                };
    
                return LatLng;
            })();
    
            type.LocalizedText = (function() {
    
                /**
                 * Properties of a LocalizedText.
                 * @memberof google.type
                 * @interface ILocalizedText
                 * @property {string|null} [text] LocalizedText text
                 * @property {string|null} [languageCode] LocalizedText languageCode
                 */
    
                /**
                 * Constructs a new LocalizedText.
                 * @memberof google.type
                 * @classdesc Represents a LocalizedText.
                 * @implements ILocalizedText
                 * @constructor
                 * @param {google.type.ILocalizedText=} [properties] Properties to set
                 */
                function LocalizedText(properties) {
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * LocalizedText text.
                 * @member {string} text
                 * @memberof google.type.LocalizedText
                 * @instance
                 */
                LocalizedText.prototype.text = "";
    
                /**
                 * LocalizedText languageCode.
                 * @member {string} languageCode
                 * @memberof google.type.LocalizedText
                 * @instance
                 */
                LocalizedText.prototype.languageCode = "";
    
                /**
                 * Creates a new LocalizedText instance using the specified properties.
                 * @function create
                 * @memberof google.type.LocalizedText
                 * @static
                 * @param {google.type.ILocalizedText=} [properties] Properties to set
                 * @returns {google.type.LocalizedText} LocalizedText instance
                 */
                LocalizedText.create = function create(properties) {
                    return new LocalizedText(properties);
                };
    
                /**
                 * Encodes the specified LocalizedText message. Does not implicitly {@link google.type.LocalizedText.verify|verify} messages.
                 * @function encode
                 * @memberof google.type.LocalizedText
                 * @static
                 * @param {google.type.ILocalizedText} message LocalizedText message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                LocalizedText.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.text != null && Object.hasOwnProperty.call(message, "text"))
                        writer.uint32(/* id 1, wireType 2 =*/10).string(message.text);
                    if (message.languageCode != null && Object.hasOwnProperty.call(message, "languageCode"))
                        writer.uint32(/* id 2, wireType 2 =*/18).string(message.languageCode);
                    return writer;
                };
    
                /**
                 * Encodes the specified LocalizedText message, length delimited. Does not implicitly {@link google.type.LocalizedText.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.type.LocalizedText
                 * @static
                 * @param {google.type.ILocalizedText} message LocalizedText message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                LocalizedText.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a LocalizedText message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.type.LocalizedText
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.type.LocalizedText} LocalizedText
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                LocalizedText.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.type.LocalizedText();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1: {
                                message.text = reader.string();
                                break;
                            }
                        case 2: {
                                message.languageCode = reader.string();
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a LocalizedText message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.type.LocalizedText
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.type.LocalizedText} LocalizedText
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                LocalizedText.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a LocalizedText message.
                 * @function verify
                 * @memberof google.type.LocalizedText
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                LocalizedText.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.text != null && message.hasOwnProperty("text"))
                        if (!$util.isString(message.text))
                            return "text: string expected";
                    if (message.languageCode != null && message.hasOwnProperty("languageCode"))
                        if (!$util.isString(message.languageCode))
                            return "languageCode: string expected";
                    return null;
                };
    
                /**
                 * Creates a LocalizedText message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.type.LocalizedText
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.type.LocalizedText} LocalizedText
                 */
                LocalizedText.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.type.LocalizedText)
                        return object;
                    var message = new $root.google.type.LocalizedText();
                    if (object.text != null)
                        message.text = String(object.text);
                    if (object.languageCode != null)
                        message.languageCode = String(object.languageCode);
                    return message;
                };
    
                /**
                 * Creates a plain object from a LocalizedText message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.type.LocalizedText
                 * @static
                 * @param {google.type.LocalizedText} message LocalizedText
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                LocalizedText.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.defaults) {
                        object.text = "";
                        object.languageCode = "";
                    }
                    if (message.text != null && message.hasOwnProperty("text"))
                        object.text = message.text;
                    if (message.languageCode != null && message.hasOwnProperty("languageCode"))
                        object.languageCode = message.languageCode;
                    return object;
                };
    
                /**
                 * Converts this LocalizedText to JSON.
                 * @function toJSON
                 * @memberof google.type.LocalizedText
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                LocalizedText.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for LocalizedText
                 * @function getTypeUrl
                 * @memberof google.type.LocalizedText
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                LocalizedText.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.type.LocalizedText";
                };
    
                return LocalizedText;
            })();
    
            type.Money = (function() {
    
                /**
                 * Properties of a Money.
                 * @memberof google.type
                 * @interface IMoney
                 * @property {string|null} [currencyCode] Money currencyCode
                 * @property {number|Long|null} [units] Money units
                 * @property {number|null} [nanos] Money nanos
                 */
    
                /**
                 * Constructs a new Money.
                 * @memberof google.type
                 * @classdesc Represents a Money.
                 * @implements IMoney
                 * @constructor
                 * @param {google.type.IMoney=} [properties] Properties to set
                 */
                function Money(properties) {
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * Money currencyCode.
                 * @member {string} currencyCode
                 * @memberof google.type.Money
                 * @instance
                 */
                Money.prototype.currencyCode = "";
    
                /**
                 * Money units.
                 * @member {number|Long} units
                 * @memberof google.type.Money
                 * @instance
                 */
                Money.prototype.units = $util.Long ? $util.Long.fromBits(0,0,false) : 0;
    
                /**
                 * Money nanos.
                 * @member {number} nanos
                 * @memberof google.type.Money
                 * @instance
                 */
                Money.prototype.nanos = 0;
    
                /**
                 * Creates a new Money instance using the specified properties.
                 * @function create
                 * @memberof google.type.Money
                 * @static
                 * @param {google.type.IMoney=} [properties] Properties to set
                 * @returns {google.type.Money} Money instance
                 */
                Money.create = function create(properties) {
                    return new Money(properties);
                };
    
                /**
                 * Encodes the specified Money message. Does not implicitly {@link google.type.Money.verify|verify} messages.
                 * @function encode
                 * @memberof google.type.Money
                 * @static
                 * @param {google.type.IMoney} message Money message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                Money.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.currencyCode != null && Object.hasOwnProperty.call(message, "currencyCode"))
                        writer.uint32(/* id 1, wireType 2 =*/10).string(message.currencyCode);
                    if (message.units != null && Object.hasOwnProperty.call(message, "units"))
                        writer.uint32(/* id 2, wireType 0 =*/16).int64(message.units);
                    if (message.nanos != null && Object.hasOwnProperty.call(message, "nanos"))
                        writer.uint32(/* id 3, wireType 0 =*/24).int32(message.nanos);
                    return writer;
                };
    
                /**
                 * Encodes the specified Money message, length delimited. Does not implicitly {@link google.type.Money.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.type.Money
                 * @static
                 * @param {google.type.IMoney} message Money message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                Money.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a Money message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.type.Money
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.type.Money} Money
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                Money.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.type.Money();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1: {
                                message.currencyCode = reader.string();
                                break;
                            }
                        case 2: {
                                message.units = reader.int64();
                                break;
                            }
                        case 3: {
                                message.nanos = reader.int32();
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a Money message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.type.Money
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.type.Money} Money
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                Money.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a Money message.
                 * @function verify
                 * @memberof google.type.Money
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                Money.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.currencyCode != null && message.hasOwnProperty("currencyCode"))
                        if (!$util.isString(message.currencyCode))
                            return "currencyCode: string expected";
                    if (message.units != null && message.hasOwnProperty("units"))
                        if (!$util.isInteger(message.units) && !(message.units && $util.isInteger(message.units.low) && $util.isInteger(message.units.high)))
                            return "units: integer|Long expected";
                    if (message.nanos != null && message.hasOwnProperty("nanos"))
                        if (!$util.isInteger(message.nanos))
                            return "nanos: integer expected";
                    return null;
                };
    
                /**
                 * Creates a Money message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.type.Money
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.type.Money} Money
                 */
                Money.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.type.Money)
                        return object;
                    var message = new $root.google.type.Money();
                    if (object.currencyCode != null)
                        message.currencyCode = String(object.currencyCode);
                    if (object.units != null)
                        if ($util.Long)
                            (message.units = $util.Long.fromValue(object.units)).unsigned = false;
                        else if (typeof object.units === "string")
                            message.units = parseInt(object.units, 10);
                        else if (typeof object.units === "number")
                            message.units = object.units;
                        else if (typeof object.units === "object")
                            message.units = new $util.LongBits(object.units.low >>> 0, object.units.high >>> 0).toNumber();
                    if (object.nanos != null)
                        message.nanos = object.nanos | 0;
                    return message;
                };
    
                /**
                 * Creates a plain object from a Money message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.type.Money
                 * @static
                 * @param {google.type.Money} message Money
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                Money.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.defaults) {
                        object.currencyCode = "";
                        if ($util.Long) {
                            var long = new $util.Long(0, 0, false);
                            object.units = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                        } else
                            object.units = options.longs === String ? "0" : 0;
                        object.nanos = 0;
                    }
                    if (message.currencyCode != null && message.hasOwnProperty("currencyCode"))
                        object.currencyCode = message.currencyCode;
                    if (message.units != null && message.hasOwnProperty("units"))
                        if (typeof message.units === "number")
                            object.units = options.longs === String ? String(message.units) : message.units;
                        else
                            object.units = options.longs === String ? $util.Long.prototype.toString.call(message.units) : options.longs === Number ? new $util.LongBits(message.units.low >>> 0, message.units.high >>> 0).toNumber() : message.units;
                    if (message.nanos != null && message.hasOwnProperty("nanos"))
                        object.nanos = message.nanos;
                    return object;
                };
    
                /**
                 * Converts this Money to JSON.
                 * @function toJSON
                 * @memberof google.type.Money
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                Money.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for Money
                 * @function getTypeUrl
                 * @memberof google.type.Money
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                Money.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.type.Money";
                };
    
                return Money;
            })();
    
            return type;
        })();
    
        google.maps = (function() {
    
            /**
             * Namespace maps.
             * @memberof google
             * @namespace
             */
            var maps = {};
    
            maps.routing = (function() {
    
                /**
                 * Namespace routing.
                 * @memberof google.maps
                 * @namespace
                 */
                var routing = {};
    
                routing.v2 = (function() {
    
                    /**
                     * Namespace v2.
                     * @memberof google.maps.routing
                     * @namespace
                     */
                    var v2 = {};
    
                    v2.FallbackInfo = (function() {
    
                        /**
                         * Properties of a FallbackInfo.
                         * @memberof google.maps.routing.v2
                         * @interface IFallbackInfo
                         * @property {google.maps.routing.v2.FallbackRoutingMode|null} [routingMode] FallbackInfo routingMode
                         * @property {google.maps.routing.v2.FallbackReason|null} [reason] FallbackInfo reason
                         */
    
                        /**
                         * Constructs a new FallbackInfo.
                         * @memberof google.maps.routing.v2
                         * @classdesc Represents a FallbackInfo.
                         * @implements IFallbackInfo
                         * @constructor
                         * @param {google.maps.routing.v2.IFallbackInfo=} [properties] Properties to set
                         */
                        function FallbackInfo(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * FallbackInfo routingMode.
                         * @member {google.maps.routing.v2.FallbackRoutingMode} routingMode
                         * @memberof google.maps.routing.v2.FallbackInfo
                         * @instance
                         */
                        FallbackInfo.prototype.routingMode = 0;
    
                        /**
                         * FallbackInfo reason.
                         * @member {google.maps.routing.v2.FallbackReason} reason
                         * @memberof google.maps.routing.v2.FallbackInfo
                         * @instance
                         */
                        FallbackInfo.prototype.reason = 0;
    
                        /**
                         * Creates a new FallbackInfo instance using the specified properties.
                         * @function create
                         * @memberof google.maps.routing.v2.FallbackInfo
                         * @static
                         * @param {google.maps.routing.v2.IFallbackInfo=} [properties] Properties to set
                         * @returns {google.maps.routing.v2.FallbackInfo} FallbackInfo instance
                         */
                        FallbackInfo.create = function create(properties) {
                            return new FallbackInfo(properties);
                        };
    
                        /**
                         * Encodes the specified FallbackInfo message. Does not implicitly {@link google.maps.routing.v2.FallbackInfo.verify|verify} messages.
                         * @function encode
                         * @memberof google.maps.routing.v2.FallbackInfo
                         * @static
                         * @param {google.maps.routing.v2.IFallbackInfo} message FallbackInfo message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        FallbackInfo.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.routingMode != null && Object.hasOwnProperty.call(message, "routingMode"))
                                writer.uint32(/* id 1, wireType 0 =*/8).int32(message.routingMode);
                            if (message.reason != null && Object.hasOwnProperty.call(message, "reason"))
                                writer.uint32(/* id 2, wireType 0 =*/16).int32(message.reason);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified FallbackInfo message, length delimited. Does not implicitly {@link google.maps.routing.v2.FallbackInfo.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.maps.routing.v2.FallbackInfo
                         * @static
                         * @param {google.maps.routing.v2.IFallbackInfo} message FallbackInfo message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        FallbackInfo.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a FallbackInfo message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.maps.routing.v2.FallbackInfo
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.maps.routing.v2.FallbackInfo} FallbackInfo
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        FallbackInfo.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.maps.routing.v2.FallbackInfo();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.routingMode = reader.int32();
                                        break;
                                    }
                                case 2: {
                                        message.reason = reader.int32();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a FallbackInfo message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.maps.routing.v2.FallbackInfo
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.maps.routing.v2.FallbackInfo} FallbackInfo
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        FallbackInfo.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a FallbackInfo message.
                         * @function verify
                         * @memberof google.maps.routing.v2.FallbackInfo
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        FallbackInfo.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.routingMode != null && message.hasOwnProperty("routingMode"))
                                switch (message.routingMode) {
                                default:
                                    return "routingMode: enum value expected";
                                case 0:
                                case 1:
                                case 2:
                                    break;
                                }
                            if (message.reason != null && message.hasOwnProperty("reason"))
                                switch (message.reason) {
                                default:
                                    return "reason: enum value expected";
                                case 0:
                                case 1:
                                case 2:
                                    break;
                                }
                            return null;
                        };
    
                        /**
                         * Creates a FallbackInfo message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.maps.routing.v2.FallbackInfo
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.maps.routing.v2.FallbackInfo} FallbackInfo
                         */
                        FallbackInfo.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.maps.routing.v2.FallbackInfo)
                                return object;
                            var message = new $root.google.maps.routing.v2.FallbackInfo();
                            switch (object.routingMode) {
                            default:
                                if (typeof object.routingMode === "number") {
                                    message.routingMode = object.routingMode;
                                    break;
                                }
                                break;
                            case "FALLBACK_ROUTING_MODE_UNSPECIFIED":
                            case 0:
                                message.routingMode = 0;
                                break;
                            case "FALLBACK_TRAFFIC_UNAWARE":
                            case 1:
                                message.routingMode = 1;
                                break;
                            case "FALLBACK_TRAFFIC_AWARE":
                            case 2:
                                message.routingMode = 2;
                                break;
                            }
                            switch (object.reason) {
                            default:
                                if (typeof object.reason === "number") {
                                    message.reason = object.reason;
                                    break;
                                }
                                break;
                            case "FALLBACK_REASON_UNSPECIFIED":
                            case 0:
                                message.reason = 0;
                                break;
                            case "SERVER_ERROR":
                            case 1:
                                message.reason = 1;
                                break;
                            case "LATENCY_EXCEEDED":
                            case 2:
                                message.reason = 2;
                                break;
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a FallbackInfo message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.maps.routing.v2.FallbackInfo
                         * @static
                         * @param {google.maps.routing.v2.FallbackInfo} message FallbackInfo
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        FallbackInfo.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.routingMode = options.enums === String ? "FALLBACK_ROUTING_MODE_UNSPECIFIED" : 0;
                                object.reason = options.enums === String ? "FALLBACK_REASON_UNSPECIFIED" : 0;
                            }
                            if (message.routingMode != null && message.hasOwnProperty("routingMode"))
                                object.routingMode = options.enums === String ? $root.google.maps.routing.v2.FallbackRoutingMode[message.routingMode] === undefined ? message.routingMode : $root.google.maps.routing.v2.FallbackRoutingMode[message.routingMode] : message.routingMode;
                            if (message.reason != null && message.hasOwnProperty("reason"))
                                object.reason = options.enums === String ? $root.google.maps.routing.v2.FallbackReason[message.reason] === undefined ? message.reason : $root.google.maps.routing.v2.FallbackReason[message.reason] : message.reason;
                            return object;
                        };
    
                        /**
                         * Converts this FallbackInfo to JSON.
                         * @function toJSON
                         * @memberof google.maps.routing.v2.FallbackInfo
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        FallbackInfo.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for FallbackInfo
                         * @function getTypeUrl
                         * @memberof google.maps.routing.v2.FallbackInfo
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        FallbackInfo.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.maps.routing.v2.FallbackInfo";
                        };
    
                        return FallbackInfo;
                    })();
    
                    /**
                     * FallbackReason enum.
                     * @name google.maps.routing.v2.FallbackReason
                     * @enum {number}
                     * @property {number} FALLBACK_REASON_UNSPECIFIED=0 FALLBACK_REASON_UNSPECIFIED value
                     * @property {number} SERVER_ERROR=1 SERVER_ERROR value
                     * @property {number} LATENCY_EXCEEDED=2 LATENCY_EXCEEDED value
                     */
                    v2.FallbackReason = (function() {
                        var valuesById = {}, values = Object.create(valuesById);
                        values[valuesById[0] = "FALLBACK_REASON_UNSPECIFIED"] = 0;
                        values[valuesById[1] = "SERVER_ERROR"] = 1;
                        values[valuesById[2] = "LATENCY_EXCEEDED"] = 2;
                        return values;
                    })();
    
                    /**
                     * FallbackRoutingMode enum.
                     * @name google.maps.routing.v2.FallbackRoutingMode
                     * @enum {number}
                     * @property {number} FALLBACK_ROUTING_MODE_UNSPECIFIED=0 FALLBACK_ROUTING_MODE_UNSPECIFIED value
                     * @property {number} FALLBACK_TRAFFIC_UNAWARE=1 FALLBACK_TRAFFIC_UNAWARE value
                     * @property {number} FALLBACK_TRAFFIC_AWARE=2 FALLBACK_TRAFFIC_AWARE value
                     */
                    v2.FallbackRoutingMode = (function() {
                        var valuesById = {}, values = Object.create(valuesById);
                        values[valuesById[0] = "FALLBACK_ROUTING_MODE_UNSPECIFIED"] = 0;
                        values[valuesById[1] = "FALLBACK_TRAFFIC_UNAWARE"] = 1;
                        values[valuesById[2] = "FALLBACK_TRAFFIC_AWARE"] = 2;
                        return values;
                    })();
    
                    v2.GeocodingResults = (function() {
    
                        /**
                         * Properties of a GeocodingResults.
                         * @memberof google.maps.routing.v2
                         * @interface IGeocodingResults
                         * @property {google.maps.routing.v2.IGeocodedWaypoint|null} [origin] GeocodingResults origin
                         * @property {google.maps.routing.v2.IGeocodedWaypoint|null} [destination] GeocodingResults destination
                         * @property {Array.<google.maps.routing.v2.IGeocodedWaypoint>|null} [intermediates] GeocodingResults intermediates
                         */
    
                        /**
                         * Constructs a new GeocodingResults.
                         * @memberof google.maps.routing.v2
                         * @classdesc Represents a GeocodingResults.
                         * @implements IGeocodingResults
                         * @constructor
                         * @param {google.maps.routing.v2.IGeocodingResults=} [properties] Properties to set
                         */
                        function GeocodingResults(properties) {
                            this.intermediates = [];
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * GeocodingResults origin.
                         * @member {google.maps.routing.v2.IGeocodedWaypoint|null|undefined} origin
                         * @memberof google.maps.routing.v2.GeocodingResults
                         * @instance
                         */
                        GeocodingResults.prototype.origin = null;
    
                        /**
                         * GeocodingResults destination.
                         * @member {google.maps.routing.v2.IGeocodedWaypoint|null|undefined} destination
                         * @memberof google.maps.routing.v2.GeocodingResults
                         * @instance
                         */
                        GeocodingResults.prototype.destination = null;
    
                        /**
                         * GeocodingResults intermediates.
                         * @member {Array.<google.maps.routing.v2.IGeocodedWaypoint>} intermediates
                         * @memberof google.maps.routing.v2.GeocodingResults
                         * @instance
                         */
                        GeocodingResults.prototype.intermediates = $util.emptyArray;
    
                        /**
                         * Creates a new GeocodingResults instance using the specified properties.
                         * @function create
                         * @memberof google.maps.routing.v2.GeocodingResults
                         * @static
                         * @param {google.maps.routing.v2.IGeocodingResults=} [properties] Properties to set
                         * @returns {google.maps.routing.v2.GeocodingResults} GeocodingResults instance
                         */
                        GeocodingResults.create = function create(properties) {
                            return new GeocodingResults(properties);
                        };
    
                        /**
                         * Encodes the specified GeocodingResults message. Does not implicitly {@link google.maps.routing.v2.GeocodingResults.verify|verify} messages.
                         * @function encode
                         * @memberof google.maps.routing.v2.GeocodingResults
                         * @static
                         * @param {google.maps.routing.v2.IGeocodingResults} message GeocodingResults message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        GeocodingResults.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.origin != null && Object.hasOwnProperty.call(message, "origin"))
                                $root.google.maps.routing.v2.GeocodedWaypoint.encode(message.origin, writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                            if (message.destination != null && Object.hasOwnProperty.call(message, "destination"))
                                $root.google.maps.routing.v2.GeocodedWaypoint.encode(message.destination, writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                            if (message.intermediates != null && message.intermediates.length)
                                for (var i = 0; i < message.intermediates.length; ++i)
                                    $root.google.maps.routing.v2.GeocodedWaypoint.encode(message.intermediates[i], writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();
                            return writer;
                        };
    
                        /**
                         * Encodes the specified GeocodingResults message, length delimited. Does not implicitly {@link google.maps.routing.v2.GeocodingResults.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.maps.routing.v2.GeocodingResults
                         * @static
                         * @param {google.maps.routing.v2.IGeocodingResults} message GeocodingResults message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        GeocodingResults.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a GeocodingResults message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.maps.routing.v2.GeocodingResults
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.maps.routing.v2.GeocodingResults} GeocodingResults
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        GeocodingResults.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.maps.routing.v2.GeocodingResults();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.origin = $root.google.maps.routing.v2.GeocodedWaypoint.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 2: {
                                        message.destination = $root.google.maps.routing.v2.GeocodedWaypoint.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 3: {
                                        if (!(message.intermediates && message.intermediates.length))
                                            message.intermediates = [];
                                        message.intermediates.push($root.google.maps.routing.v2.GeocodedWaypoint.decode(reader, reader.uint32()));
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a GeocodingResults message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.maps.routing.v2.GeocodingResults
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.maps.routing.v2.GeocodingResults} GeocodingResults
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        GeocodingResults.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a GeocodingResults message.
                         * @function verify
                         * @memberof google.maps.routing.v2.GeocodingResults
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        GeocodingResults.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.origin != null && message.hasOwnProperty("origin")) {
                                var error = $root.google.maps.routing.v2.GeocodedWaypoint.verify(message.origin);
                                if (error)
                                    return "origin." + error;
                            }
                            if (message.destination != null && message.hasOwnProperty("destination")) {
                                var error = $root.google.maps.routing.v2.GeocodedWaypoint.verify(message.destination);
                                if (error)
                                    return "destination." + error;
                            }
                            if (message.intermediates != null && message.hasOwnProperty("intermediates")) {
                                if (!Array.isArray(message.intermediates))
                                    return "intermediates: array expected";
                                for (var i = 0; i < message.intermediates.length; ++i) {
                                    var error = $root.google.maps.routing.v2.GeocodedWaypoint.verify(message.intermediates[i]);
                                    if (error)
                                        return "intermediates." + error;
                                }
                            }
                            return null;
                        };
    
                        /**
                         * Creates a GeocodingResults message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.maps.routing.v2.GeocodingResults
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.maps.routing.v2.GeocodingResults} GeocodingResults
                         */
                        GeocodingResults.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.maps.routing.v2.GeocodingResults)
                                return object;
                            var message = new $root.google.maps.routing.v2.GeocodingResults();
                            if (object.origin != null) {
                                if (typeof object.origin !== "object")
                                    throw TypeError(".google.maps.routing.v2.GeocodingResults.origin: object expected");
                                message.origin = $root.google.maps.routing.v2.GeocodedWaypoint.fromObject(object.origin);
                            }
                            if (object.destination != null) {
                                if (typeof object.destination !== "object")
                                    throw TypeError(".google.maps.routing.v2.GeocodingResults.destination: object expected");
                                message.destination = $root.google.maps.routing.v2.GeocodedWaypoint.fromObject(object.destination);
                            }
                            if (object.intermediates) {
                                if (!Array.isArray(object.intermediates))
                                    throw TypeError(".google.maps.routing.v2.GeocodingResults.intermediates: array expected");
                                message.intermediates = [];
                                for (var i = 0; i < object.intermediates.length; ++i) {
                                    if (typeof object.intermediates[i] !== "object")
                                        throw TypeError(".google.maps.routing.v2.GeocodingResults.intermediates: object expected");
                                    message.intermediates[i] = $root.google.maps.routing.v2.GeocodedWaypoint.fromObject(object.intermediates[i]);
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a GeocodingResults message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.maps.routing.v2.GeocodingResults
                         * @static
                         * @param {google.maps.routing.v2.GeocodingResults} message GeocodingResults
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        GeocodingResults.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.arrays || options.defaults)
                                object.intermediates = [];
                            if (options.defaults) {
                                object.origin = null;
                                object.destination = null;
                            }
                            if (message.origin != null && message.hasOwnProperty("origin"))
                                object.origin = $root.google.maps.routing.v2.GeocodedWaypoint.toObject(message.origin, options);
                            if (message.destination != null && message.hasOwnProperty("destination"))
                                object.destination = $root.google.maps.routing.v2.GeocodedWaypoint.toObject(message.destination, options);
                            if (message.intermediates && message.intermediates.length) {
                                object.intermediates = [];
                                for (var j = 0; j < message.intermediates.length; ++j)
                                    object.intermediates[j] = $root.google.maps.routing.v2.GeocodedWaypoint.toObject(message.intermediates[j], options);
                            }
                            return object;
                        };
    
                        /**
                         * Converts this GeocodingResults to JSON.
                         * @function toJSON
                         * @memberof google.maps.routing.v2.GeocodingResults
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        GeocodingResults.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for GeocodingResults
                         * @function getTypeUrl
                         * @memberof google.maps.routing.v2.GeocodingResults
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        GeocodingResults.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.maps.routing.v2.GeocodingResults";
                        };
    
                        return GeocodingResults;
                    })();
    
                    v2.GeocodedWaypoint = (function() {
    
                        /**
                         * Properties of a GeocodedWaypoint.
                         * @memberof google.maps.routing.v2
                         * @interface IGeocodedWaypoint
                         * @property {google.rpc.IStatus|null} [geocoderStatus] GeocodedWaypoint geocoderStatus
                         * @property {number|null} [intermediateWaypointRequestIndex] GeocodedWaypoint intermediateWaypointRequestIndex
                         * @property {Array.<string>|null} [type] GeocodedWaypoint type
                         * @property {boolean|null} [partialMatch] GeocodedWaypoint partialMatch
                         * @property {string|null} [placeId] GeocodedWaypoint placeId
                         */
    
                        /**
                         * Constructs a new GeocodedWaypoint.
                         * @memberof google.maps.routing.v2
                         * @classdesc Represents a GeocodedWaypoint.
                         * @implements IGeocodedWaypoint
                         * @constructor
                         * @param {google.maps.routing.v2.IGeocodedWaypoint=} [properties] Properties to set
                         */
                        function GeocodedWaypoint(properties) {
                            this.type = [];
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * GeocodedWaypoint geocoderStatus.
                         * @member {google.rpc.IStatus|null|undefined} geocoderStatus
                         * @memberof google.maps.routing.v2.GeocodedWaypoint
                         * @instance
                         */
                        GeocodedWaypoint.prototype.geocoderStatus = null;
    
                        /**
                         * GeocodedWaypoint intermediateWaypointRequestIndex.
                         * @member {number|null|undefined} intermediateWaypointRequestIndex
                         * @memberof google.maps.routing.v2.GeocodedWaypoint
                         * @instance
                         */
                        GeocodedWaypoint.prototype.intermediateWaypointRequestIndex = null;
    
                        /**
                         * GeocodedWaypoint type.
                         * @member {Array.<string>} type
                         * @memberof google.maps.routing.v2.GeocodedWaypoint
                         * @instance
                         */
                        GeocodedWaypoint.prototype.type = $util.emptyArray;
    
                        /**
                         * GeocodedWaypoint partialMatch.
                         * @member {boolean} partialMatch
                         * @memberof google.maps.routing.v2.GeocodedWaypoint
                         * @instance
                         */
                        GeocodedWaypoint.prototype.partialMatch = false;
    
                        /**
                         * GeocodedWaypoint placeId.
                         * @member {string} placeId
                         * @memberof google.maps.routing.v2.GeocodedWaypoint
                         * @instance
                         */
                        GeocodedWaypoint.prototype.placeId = "";
    
                        // OneOf field names bound to virtual getters and setters
                        var $oneOfFields;
    
                        /**
                         * GeocodedWaypoint _intermediateWaypointRequestIndex.
                         * @member {"intermediateWaypointRequestIndex"|undefined} _intermediateWaypointRequestIndex
                         * @memberof google.maps.routing.v2.GeocodedWaypoint
                         * @instance
                         */
                        Object.defineProperty(GeocodedWaypoint.prototype, "_intermediateWaypointRequestIndex", {
                            get: $util.oneOfGetter($oneOfFields = ["intermediateWaypointRequestIndex"]),
                            set: $util.oneOfSetter($oneOfFields)
                        });
    
                        /**
                         * Creates a new GeocodedWaypoint instance using the specified properties.
                         * @function create
                         * @memberof google.maps.routing.v2.GeocodedWaypoint
                         * @static
                         * @param {google.maps.routing.v2.IGeocodedWaypoint=} [properties] Properties to set
                         * @returns {google.maps.routing.v2.GeocodedWaypoint} GeocodedWaypoint instance
                         */
                        GeocodedWaypoint.create = function create(properties) {
                            return new GeocodedWaypoint(properties);
                        };
    
                        /**
                         * Encodes the specified GeocodedWaypoint message. Does not implicitly {@link google.maps.routing.v2.GeocodedWaypoint.verify|verify} messages.
                         * @function encode
                         * @memberof google.maps.routing.v2.GeocodedWaypoint
                         * @static
                         * @param {google.maps.routing.v2.IGeocodedWaypoint} message GeocodedWaypoint message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        GeocodedWaypoint.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.geocoderStatus != null && Object.hasOwnProperty.call(message, "geocoderStatus"))
                                $root.google.rpc.Status.encode(message.geocoderStatus, writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                            if (message.intermediateWaypointRequestIndex != null && Object.hasOwnProperty.call(message, "intermediateWaypointRequestIndex"))
                                writer.uint32(/* id 2, wireType 0 =*/16).int32(message.intermediateWaypointRequestIndex);
                            if (message.type != null && message.type.length)
                                for (var i = 0; i < message.type.length; ++i)
                                    writer.uint32(/* id 3, wireType 2 =*/26).string(message.type[i]);
                            if (message.partialMatch != null && Object.hasOwnProperty.call(message, "partialMatch"))
                                writer.uint32(/* id 4, wireType 0 =*/32).bool(message.partialMatch);
                            if (message.placeId != null && Object.hasOwnProperty.call(message, "placeId"))
                                writer.uint32(/* id 5, wireType 2 =*/42).string(message.placeId);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified GeocodedWaypoint message, length delimited. Does not implicitly {@link google.maps.routing.v2.GeocodedWaypoint.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.maps.routing.v2.GeocodedWaypoint
                         * @static
                         * @param {google.maps.routing.v2.IGeocodedWaypoint} message GeocodedWaypoint message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        GeocodedWaypoint.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a GeocodedWaypoint message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.maps.routing.v2.GeocodedWaypoint
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.maps.routing.v2.GeocodedWaypoint} GeocodedWaypoint
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        GeocodedWaypoint.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.maps.routing.v2.GeocodedWaypoint();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.geocoderStatus = $root.google.rpc.Status.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 2: {
                                        message.intermediateWaypointRequestIndex = reader.int32();
                                        break;
                                    }
                                case 3: {
                                        if (!(message.type && message.type.length))
                                            message.type = [];
                                        message.type.push(reader.string());
                                        break;
                                    }
                                case 4: {
                                        message.partialMatch = reader.bool();
                                        break;
                                    }
                                case 5: {
                                        message.placeId = reader.string();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a GeocodedWaypoint message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.maps.routing.v2.GeocodedWaypoint
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.maps.routing.v2.GeocodedWaypoint} GeocodedWaypoint
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        GeocodedWaypoint.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a GeocodedWaypoint message.
                         * @function verify
                         * @memberof google.maps.routing.v2.GeocodedWaypoint
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        GeocodedWaypoint.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            var properties = {};
                            if (message.geocoderStatus != null && message.hasOwnProperty("geocoderStatus")) {
                                var error = $root.google.rpc.Status.verify(message.geocoderStatus);
                                if (error)
                                    return "geocoderStatus." + error;
                            }
                            if (message.intermediateWaypointRequestIndex != null && message.hasOwnProperty("intermediateWaypointRequestIndex")) {
                                properties._intermediateWaypointRequestIndex = 1;
                                if (!$util.isInteger(message.intermediateWaypointRequestIndex))
                                    return "intermediateWaypointRequestIndex: integer expected";
                            }
                            if (message.type != null && message.hasOwnProperty("type")) {
                                if (!Array.isArray(message.type))
                                    return "type: array expected";
                                for (var i = 0; i < message.type.length; ++i)
                                    if (!$util.isString(message.type[i]))
                                        return "type: string[] expected";
                            }
                            if (message.partialMatch != null && message.hasOwnProperty("partialMatch"))
                                if (typeof message.partialMatch !== "boolean")
                                    return "partialMatch: boolean expected";
                            if (message.placeId != null && message.hasOwnProperty("placeId"))
                                if (!$util.isString(message.placeId))
                                    return "placeId: string expected";
                            return null;
                        };
    
                        /**
                         * Creates a GeocodedWaypoint message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.maps.routing.v2.GeocodedWaypoint
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.maps.routing.v2.GeocodedWaypoint} GeocodedWaypoint
                         */
                        GeocodedWaypoint.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.maps.routing.v2.GeocodedWaypoint)
                                return object;
                            var message = new $root.google.maps.routing.v2.GeocodedWaypoint();
                            if (object.geocoderStatus != null) {
                                if (typeof object.geocoderStatus !== "object")
                                    throw TypeError(".google.maps.routing.v2.GeocodedWaypoint.geocoderStatus: object expected");
                                message.geocoderStatus = $root.google.rpc.Status.fromObject(object.geocoderStatus);
                            }
                            if (object.intermediateWaypointRequestIndex != null)
                                message.intermediateWaypointRequestIndex = object.intermediateWaypointRequestIndex | 0;
                            if (object.type) {
                                if (!Array.isArray(object.type))
                                    throw TypeError(".google.maps.routing.v2.GeocodedWaypoint.type: array expected");
                                message.type = [];
                                for (var i = 0; i < object.type.length; ++i)
                                    message.type[i] = String(object.type[i]);
                            }
                            if (object.partialMatch != null)
                                message.partialMatch = Boolean(object.partialMatch);
                            if (object.placeId != null)
                                message.placeId = String(object.placeId);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a GeocodedWaypoint message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.maps.routing.v2.GeocodedWaypoint
                         * @static
                         * @param {google.maps.routing.v2.GeocodedWaypoint} message GeocodedWaypoint
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        GeocodedWaypoint.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.arrays || options.defaults)
                                object.type = [];
                            if (options.defaults) {
                                object.geocoderStatus = null;
                                object.partialMatch = false;
                                object.placeId = "";
                            }
                            if (message.geocoderStatus != null && message.hasOwnProperty("geocoderStatus"))
                                object.geocoderStatus = $root.google.rpc.Status.toObject(message.geocoderStatus, options);
                            if (message.intermediateWaypointRequestIndex != null && message.hasOwnProperty("intermediateWaypointRequestIndex")) {
                                object.intermediateWaypointRequestIndex = message.intermediateWaypointRequestIndex;
                                if (options.oneofs)
                                    object._intermediateWaypointRequestIndex = "intermediateWaypointRequestIndex";
                            }
                            if (message.type && message.type.length) {
                                object.type = [];
                                for (var j = 0; j < message.type.length; ++j)
                                    object.type[j] = message.type[j];
                            }
                            if (message.partialMatch != null && message.hasOwnProperty("partialMatch"))
                                object.partialMatch = message.partialMatch;
                            if (message.placeId != null && message.hasOwnProperty("placeId"))
                                object.placeId = message.placeId;
                            return object;
                        };
    
                        /**
                         * Converts this GeocodedWaypoint to JSON.
                         * @function toJSON
                         * @memberof google.maps.routing.v2.GeocodedWaypoint
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        GeocodedWaypoint.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for GeocodedWaypoint
                         * @function getTypeUrl
                         * @memberof google.maps.routing.v2.GeocodedWaypoint
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        GeocodedWaypoint.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.maps.routing.v2.GeocodedWaypoint";
                        };
    
                        return GeocodedWaypoint;
                    })();
    
                    v2.LocalizedTime = (function() {
    
                        /**
                         * Properties of a LocalizedTime.
                         * @memberof google.maps.routing.v2
                         * @interface ILocalizedTime
                         * @property {google.type.ILocalizedText|null} [time] LocalizedTime time
                         * @property {string|null} [timeZone] LocalizedTime timeZone
                         */
    
                        /**
                         * Constructs a new LocalizedTime.
                         * @memberof google.maps.routing.v2
                         * @classdesc Represents a LocalizedTime.
                         * @implements ILocalizedTime
                         * @constructor
                         * @param {google.maps.routing.v2.ILocalizedTime=} [properties] Properties to set
                         */
                        function LocalizedTime(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * LocalizedTime time.
                         * @member {google.type.ILocalizedText|null|undefined} time
                         * @memberof google.maps.routing.v2.LocalizedTime
                         * @instance
                         */
                        LocalizedTime.prototype.time = null;
    
                        /**
                         * LocalizedTime timeZone.
                         * @member {string} timeZone
                         * @memberof google.maps.routing.v2.LocalizedTime
                         * @instance
                         */
                        LocalizedTime.prototype.timeZone = "";
    
                        /**
                         * Creates a new LocalizedTime instance using the specified properties.
                         * @function create
                         * @memberof google.maps.routing.v2.LocalizedTime
                         * @static
                         * @param {google.maps.routing.v2.ILocalizedTime=} [properties] Properties to set
                         * @returns {google.maps.routing.v2.LocalizedTime} LocalizedTime instance
                         */
                        LocalizedTime.create = function create(properties) {
                            return new LocalizedTime(properties);
                        };
    
                        /**
                         * Encodes the specified LocalizedTime message. Does not implicitly {@link google.maps.routing.v2.LocalizedTime.verify|verify} messages.
                         * @function encode
                         * @memberof google.maps.routing.v2.LocalizedTime
                         * @static
                         * @param {google.maps.routing.v2.ILocalizedTime} message LocalizedTime message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        LocalizedTime.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.time != null && Object.hasOwnProperty.call(message, "time"))
                                $root.google.type.LocalizedText.encode(message.time, writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                            if (message.timeZone != null && Object.hasOwnProperty.call(message, "timeZone"))
                                writer.uint32(/* id 2, wireType 2 =*/18).string(message.timeZone);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified LocalizedTime message, length delimited. Does not implicitly {@link google.maps.routing.v2.LocalizedTime.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.maps.routing.v2.LocalizedTime
                         * @static
                         * @param {google.maps.routing.v2.ILocalizedTime} message LocalizedTime message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        LocalizedTime.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a LocalizedTime message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.maps.routing.v2.LocalizedTime
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.maps.routing.v2.LocalizedTime} LocalizedTime
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        LocalizedTime.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.maps.routing.v2.LocalizedTime();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.time = $root.google.type.LocalizedText.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 2: {
                                        message.timeZone = reader.string();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a LocalizedTime message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.maps.routing.v2.LocalizedTime
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.maps.routing.v2.LocalizedTime} LocalizedTime
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        LocalizedTime.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a LocalizedTime message.
                         * @function verify
                         * @memberof google.maps.routing.v2.LocalizedTime
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        LocalizedTime.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.time != null && message.hasOwnProperty("time")) {
                                var error = $root.google.type.LocalizedText.verify(message.time);
                                if (error)
                                    return "time." + error;
                            }
                            if (message.timeZone != null && message.hasOwnProperty("timeZone"))
                                if (!$util.isString(message.timeZone))
                                    return "timeZone: string expected";
                            return null;
                        };
    
                        /**
                         * Creates a LocalizedTime message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.maps.routing.v2.LocalizedTime
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.maps.routing.v2.LocalizedTime} LocalizedTime
                         */
                        LocalizedTime.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.maps.routing.v2.LocalizedTime)
                                return object;
                            var message = new $root.google.maps.routing.v2.LocalizedTime();
                            if (object.time != null) {
                                if (typeof object.time !== "object")
                                    throw TypeError(".google.maps.routing.v2.LocalizedTime.time: object expected");
                                message.time = $root.google.type.LocalizedText.fromObject(object.time);
                            }
                            if (object.timeZone != null)
                                message.timeZone = String(object.timeZone);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a LocalizedTime message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.maps.routing.v2.LocalizedTime
                         * @static
                         * @param {google.maps.routing.v2.LocalizedTime} message LocalizedTime
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        LocalizedTime.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.time = null;
                                object.timeZone = "";
                            }
                            if (message.time != null && message.hasOwnProperty("time"))
                                object.time = $root.google.type.LocalizedText.toObject(message.time, options);
                            if (message.timeZone != null && message.hasOwnProperty("timeZone"))
                                object.timeZone = message.timeZone;
                            return object;
                        };
    
                        /**
                         * Converts this LocalizedTime to JSON.
                         * @function toJSON
                         * @memberof google.maps.routing.v2.LocalizedTime
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        LocalizedTime.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for LocalizedTime
                         * @function getTypeUrl
                         * @memberof google.maps.routing.v2.LocalizedTime
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        LocalizedTime.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.maps.routing.v2.LocalizedTime";
                        };
    
                        return LocalizedTime;
                    })();
    
                    v2.Location = (function() {
    
                        /**
                         * Properties of a Location.
                         * @memberof google.maps.routing.v2
                         * @interface ILocation
                         * @property {google.type.ILatLng|null} [latLng] Location latLng
                         * @property {google.protobuf.IInt32Value|null} [heading] Location heading
                         */
    
                        /**
                         * Constructs a new Location.
                         * @memberof google.maps.routing.v2
                         * @classdesc Represents a Location.
                         * @implements ILocation
                         * @constructor
                         * @param {google.maps.routing.v2.ILocation=} [properties] Properties to set
                         */
                        function Location(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * Location latLng.
                         * @member {google.type.ILatLng|null|undefined} latLng
                         * @memberof google.maps.routing.v2.Location
                         * @instance
                         */
                        Location.prototype.latLng = null;
    
                        /**
                         * Location heading.
                         * @member {google.protobuf.IInt32Value|null|undefined} heading
                         * @memberof google.maps.routing.v2.Location
                         * @instance
                         */
                        Location.prototype.heading = null;
    
                        /**
                         * Creates a new Location instance using the specified properties.
                         * @function create
                         * @memberof google.maps.routing.v2.Location
                         * @static
                         * @param {google.maps.routing.v2.ILocation=} [properties] Properties to set
                         * @returns {google.maps.routing.v2.Location} Location instance
                         */
                        Location.create = function create(properties) {
                            return new Location(properties);
                        };
    
                        /**
                         * Encodes the specified Location message. Does not implicitly {@link google.maps.routing.v2.Location.verify|verify} messages.
                         * @function encode
                         * @memberof google.maps.routing.v2.Location
                         * @static
                         * @param {google.maps.routing.v2.ILocation} message Location message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        Location.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.latLng != null && Object.hasOwnProperty.call(message, "latLng"))
                                $root.google.type.LatLng.encode(message.latLng, writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                            if (message.heading != null && Object.hasOwnProperty.call(message, "heading"))
                                $root.google.protobuf.Int32Value.encode(message.heading, writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                            return writer;
                        };
    
                        /**
                         * Encodes the specified Location message, length delimited. Does not implicitly {@link google.maps.routing.v2.Location.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.maps.routing.v2.Location
                         * @static
                         * @param {google.maps.routing.v2.ILocation} message Location message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        Location.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a Location message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.maps.routing.v2.Location
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.maps.routing.v2.Location} Location
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        Location.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.maps.routing.v2.Location();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.latLng = $root.google.type.LatLng.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 2: {
                                        message.heading = $root.google.protobuf.Int32Value.decode(reader, reader.uint32());
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a Location message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.maps.routing.v2.Location
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.maps.routing.v2.Location} Location
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        Location.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a Location message.
                         * @function verify
                         * @memberof google.maps.routing.v2.Location
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        Location.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.latLng != null && message.hasOwnProperty("latLng")) {
                                var error = $root.google.type.LatLng.verify(message.latLng);
                                if (error)
                                    return "latLng." + error;
                            }
                            if (message.heading != null && message.hasOwnProperty("heading")) {
                                var error = $root.google.protobuf.Int32Value.verify(message.heading);
                                if (error)
                                    return "heading." + error;
                            }
                            return null;
                        };
    
                        /**
                         * Creates a Location message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.maps.routing.v2.Location
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.maps.routing.v2.Location} Location
                         */
                        Location.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.maps.routing.v2.Location)
                                return object;
                            var message = new $root.google.maps.routing.v2.Location();
                            if (object.latLng != null) {
                                if (typeof object.latLng !== "object")
                                    throw TypeError(".google.maps.routing.v2.Location.latLng: object expected");
                                message.latLng = $root.google.type.LatLng.fromObject(object.latLng);
                            }
                            if (object.heading != null) {
                                if (typeof object.heading !== "object")
                                    throw TypeError(".google.maps.routing.v2.Location.heading: object expected");
                                message.heading = $root.google.protobuf.Int32Value.fromObject(object.heading);
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a Location message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.maps.routing.v2.Location
                         * @static
                         * @param {google.maps.routing.v2.Location} message Location
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        Location.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.latLng = null;
                                object.heading = null;
                            }
                            if (message.latLng != null && message.hasOwnProperty("latLng"))
                                object.latLng = $root.google.type.LatLng.toObject(message.latLng, options);
                            if (message.heading != null && message.hasOwnProperty("heading"))
                                object.heading = $root.google.protobuf.Int32Value.toObject(message.heading, options);
                            return object;
                        };
    
                        /**
                         * Converts this Location to JSON.
                         * @function toJSON
                         * @memberof google.maps.routing.v2.Location
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        Location.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for Location
                         * @function getTypeUrl
                         * @memberof google.maps.routing.v2.Location
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        Location.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.maps.routing.v2.Location";
                        };
    
                        return Location;
                    })();
    
                    /**
                     * Maneuver enum.
                     * @name google.maps.routing.v2.Maneuver
                     * @enum {number}
                     * @property {number} MANEUVER_UNSPECIFIED=0 MANEUVER_UNSPECIFIED value
                     * @property {number} TURN_SLIGHT_LEFT=1 TURN_SLIGHT_LEFT value
                     * @property {number} TURN_SHARP_LEFT=2 TURN_SHARP_LEFT value
                     * @property {number} UTURN_LEFT=3 UTURN_LEFT value
                     * @property {number} TURN_LEFT=4 TURN_LEFT value
                     * @property {number} TURN_SLIGHT_RIGHT=5 TURN_SLIGHT_RIGHT value
                     * @property {number} TURN_SHARP_RIGHT=6 TURN_SHARP_RIGHT value
                     * @property {number} UTURN_RIGHT=7 UTURN_RIGHT value
                     * @property {number} TURN_RIGHT=8 TURN_RIGHT value
                     * @property {number} STRAIGHT=9 STRAIGHT value
                     * @property {number} RAMP_LEFT=10 RAMP_LEFT value
                     * @property {number} RAMP_RIGHT=11 RAMP_RIGHT value
                     * @property {number} MERGE=12 MERGE value
                     * @property {number} FORK_LEFT=13 FORK_LEFT value
                     * @property {number} FORK_RIGHT=14 FORK_RIGHT value
                     * @property {number} FERRY=15 FERRY value
                     * @property {number} FERRY_TRAIN=16 FERRY_TRAIN value
                     * @property {number} ROUNDABOUT_LEFT=17 ROUNDABOUT_LEFT value
                     * @property {number} ROUNDABOUT_RIGHT=18 ROUNDABOUT_RIGHT value
                     * @property {number} DEPART=19 DEPART value
                     * @property {number} NAME_CHANGE=20 NAME_CHANGE value
                     */
                    v2.Maneuver = (function() {
                        var valuesById = {}, values = Object.create(valuesById);
                        values[valuesById[0] = "MANEUVER_UNSPECIFIED"] = 0;
                        values[valuesById[1] = "TURN_SLIGHT_LEFT"] = 1;
                        values[valuesById[2] = "TURN_SHARP_LEFT"] = 2;
                        values[valuesById[3] = "UTURN_LEFT"] = 3;
                        values[valuesById[4] = "TURN_LEFT"] = 4;
                        values[valuesById[5] = "TURN_SLIGHT_RIGHT"] = 5;
                        values[valuesById[6] = "TURN_SHARP_RIGHT"] = 6;
                        values[valuesById[7] = "UTURN_RIGHT"] = 7;
                        values[valuesById[8] = "TURN_RIGHT"] = 8;
                        values[valuesById[9] = "STRAIGHT"] = 9;
                        values[valuesById[10] = "RAMP_LEFT"] = 10;
                        values[valuesById[11] = "RAMP_RIGHT"] = 11;
                        values[valuesById[12] = "MERGE"] = 12;
                        values[valuesById[13] = "FORK_LEFT"] = 13;
                        values[valuesById[14] = "FORK_RIGHT"] = 14;
                        values[valuesById[15] = "FERRY"] = 15;
                        values[valuesById[16] = "FERRY_TRAIN"] = 16;
                        values[valuesById[17] = "ROUNDABOUT_LEFT"] = 17;
                        values[valuesById[18] = "ROUNDABOUT_RIGHT"] = 18;
                        values[valuesById[19] = "DEPART"] = 19;
                        values[valuesById[20] = "NAME_CHANGE"] = 20;
                        return values;
                    })();
    
                    v2.NavigationInstruction = (function() {
    
                        /**
                         * Properties of a NavigationInstruction.
                         * @memberof google.maps.routing.v2
                         * @interface INavigationInstruction
                         * @property {google.maps.routing.v2.Maneuver|null} [maneuver] NavigationInstruction maneuver
                         * @property {string|null} [instructions] NavigationInstruction instructions
                         */
    
                        /**
                         * Constructs a new NavigationInstruction.
                         * @memberof google.maps.routing.v2
                         * @classdesc Represents a NavigationInstruction.
                         * @implements INavigationInstruction
                         * @constructor
                         * @param {google.maps.routing.v2.INavigationInstruction=} [properties] Properties to set
                         */
                        function NavigationInstruction(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * NavigationInstruction maneuver.
                         * @member {google.maps.routing.v2.Maneuver} maneuver
                         * @memberof google.maps.routing.v2.NavigationInstruction
                         * @instance
                         */
                        NavigationInstruction.prototype.maneuver = 0;
    
                        /**
                         * NavigationInstruction instructions.
                         * @member {string} instructions
                         * @memberof google.maps.routing.v2.NavigationInstruction
                         * @instance
                         */
                        NavigationInstruction.prototype.instructions = "";
    
                        /**
                         * Creates a new NavigationInstruction instance using the specified properties.
                         * @function create
                         * @memberof google.maps.routing.v2.NavigationInstruction
                         * @static
                         * @param {google.maps.routing.v2.INavigationInstruction=} [properties] Properties to set
                         * @returns {google.maps.routing.v2.NavigationInstruction} NavigationInstruction instance
                         */
                        NavigationInstruction.create = function create(properties) {
                            return new NavigationInstruction(properties);
                        };
    
                        /**
                         * Encodes the specified NavigationInstruction message. Does not implicitly {@link google.maps.routing.v2.NavigationInstruction.verify|verify} messages.
                         * @function encode
                         * @memberof google.maps.routing.v2.NavigationInstruction
                         * @static
                         * @param {google.maps.routing.v2.INavigationInstruction} message NavigationInstruction message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        NavigationInstruction.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.maneuver != null && Object.hasOwnProperty.call(message, "maneuver"))
                                writer.uint32(/* id 1, wireType 0 =*/8).int32(message.maneuver);
                            if (message.instructions != null && Object.hasOwnProperty.call(message, "instructions"))
                                writer.uint32(/* id 2, wireType 2 =*/18).string(message.instructions);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified NavigationInstruction message, length delimited. Does not implicitly {@link google.maps.routing.v2.NavigationInstruction.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.maps.routing.v2.NavigationInstruction
                         * @static
                         * @param {google.maps.routing.v2.INavigationInstruction} message NavigationInstruction message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        NavigationInstruction.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a NavigationInstruction message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.maps.routing.v2.NavigationInstruction
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.maps.routing.v2.NavigationInstruction} NavigationInstruction
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        NavigationInstruction.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.maps.routing.v2.NavigationInstruction();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.maneuver = reader.int32();
                                        break;
                                    }
                                case 2: {
                                        message.instructions = reader.string();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a NavigationInstruction message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.maps.routing.v2.NavigationInstruction
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.maps.routing.v2.NavigationInstruction} NavigationInstruction
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        NavigationInstruction.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a NavigationInstruction message.
                         * @function verify
                         * @memberof google.maps.routing.v2.NavigationInstruction
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        NavigationInstruction.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.maneuver != null && message.hasOwnProperty("maneuver"))
                                switch (message.maneuver) {
                                default:
                                    return "maneuver: enum value expected";
                                case 0:
                                case 1:
                                case 2:
                                case 3:
                                case 4:
                                case 5:
                                case 6:
                                case 7:
                                case 8:
                                case 9:
                                case 10:
                                case 11:
                                case 12:
                                case 13:
                                case 14:
                                case 15:
                                case 16:
                                case 17:
                                case 18:
                                case 19:
                                case 20:
                                    break;
                                }
                            if (message.instructions != null && message.hasOwnProperty("instructions"))
                                if (!$util.isString(message.instructions))
                                    return "instructions: string expected";
                            return null;
                        };
    
                        /**
                         * Creates a NavigationInstruction message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.maps.routing.v2.NavigationInstruction
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.maps.routing.v2.NavigationInstruction} NavigationInstruction
                         */
                        NavigationInstruction.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.maps.routing.v2.NavigationInstruction)
                                return object;
                            var message = new $root.google.maps.routing.v2.NavigationInstruction();
                            switch (object.maneuver) {
                            default:
                                if (typeof object.maneuver === "number") {
                                    message.maneuver = object.maneuver;
                                    break;
                                }
                                break;
                            case "MANEUVER_UNSPECIFIED":
                            case 0:
                                message.maneuver = 0;
                                break;
                            case "TURN_SLIGHT_LEFT":
                            case 1:
                                message.maneuver = 1;
                                break;
                            case "TURN_SHARP_LEFT":
                            case 2:
                                message.maneuver = 2;
                                break;
                            case "UTURN_LEFT":
                            case 3:
                                message.maneuver = 3;
                                break;
                            case "TURN_LEFT":
                            case 4:
                                message.maneuver = 4;
                                break;
                            case "TURN_SLIGHT_RIGHT":
                            case 5:
                                message.maneuver = 5;
                                break;
                            case "TURN_SHARP_RIGHT":
                            case 6:
                                message.maneuver = 6;
                                break;
                            case "UTURN_RIGHT":
                            case 7:
                                message.maneuver = 7;
                                break;
                            case "TURN_RIGHT":
                            case 8:
                                message.maneuver = 8;
                                break;
                            case "STRAIGHT":
                            case 9:
                                message.maneuver = 9;
                                break;
                            case "RAMP_LEFT":
                            case 10:
                                message.maneuver = 10;
                                break;
                            case "RAMP_RIGHT":
                            case 11:
                                message.maneuver = 11;
                                break;
                            case "MERGE":
                            case 12:
                                message.maneuver = 12;
                                break;
                            case "FORK_LEFT":
                            case 13:
                                message.maneuver = 13;
                                break;
                            case "FORK_RIGHT":
                            case 14:
                                message.maneuver = 14;
                                break;
                            case "FERRY":
                            case 15:
                                message.maneuver = 15;
                                break;
                            case "FERRY_TRAIN":
                            case 16:
                                message.maneuver = 16;
                                break;
                            case "ROUNDABOUT_LEFT":
                            case 17:
                                message.maneuver = 17;
                                break;
                            case "ROUNDABOUT_RIGHT":
                            case 18:
                                message.maneuver = 18;
                                break;
                            case "DEPART":
                            case 19:
                                message.maneuver = 19;
                                break;
                            case "NAME_CHANGE":
                            case 20:
                                message.maneuver = 20;
                                break;
                            }
                            if (object.instructions != null)
                                message.instructions = String(object.instructions);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a NavigationInstruction message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.maps.routing.v2.NavigationInstruction
                         * @static
                         * @param {google.maps.routing.v2.NavigationInstruction} message NavigationInstruction
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        NavigationInstruction.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.maneuver = options.enums === String ? "MANEUVER_UNSPECIFIED" : 0;
                                object.instructions = "";
                            }
                            if (message.maneuver != null && message.hasOwnProperty("maneuver"))
                                object.maneuver = options.enums === String ? $root.google.maps.routing.v2.Maneuver[message.maneuver] === undefined ? message.maneuver : $root.google.maps.routing.v2.Maneuver[message.maneuver] : message.maneuver;
                            if (message.instructions != null && message.hasOwnProperty("instructions"))
                                object.instructions = message.instructions;
                            return object;
                        };
    
                        /**
                         * Converts this NavigationInstruction to JSON.
                         * @function toJSON
                         * @memberof google.maps.routing.v2.NavigationInstruction
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        NavigationInstruction.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for NavigationInstruction
                         * @function getTypeUrl
                         * @memberof google.maps.routing.v2.NavigationInstruction
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        NavigationInstruction.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.maps.routing.v2.NavigationInstruction";
                        };
    
                        return NavigationInstruction;
                    })();
    
                    v2.Polyline = (function() {
    
                        /**
                         * Properties of a Polyline.
                         * @memberof google.maps.routing.v2
                         * @interface IPolyline
                         * @property {string|null} [encodedPolyline] Polyline encodedPolyline
                         * @property {google.protobuf.IStruct|null} [geoJsonLinestring] Polyline geoJsonLinestring
                         */
    
                        /**
                         * Constructs a new Polyline.
                         * @memberof google.maps.routing.v2
                         * @classdesc Represents a Polyline.
                         * @implements IPolyline
                         * @constructor
                         * @param {google.maps.routing.v2.IPolyline=} [properties] Properties to set
                         */
                        function Polyline(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * Polyline encodedPolyline.
                         * @member {string|null|undefined} encodedPolyline
                         * @memberof google.maps.routing.v2.Polyline
                         * @instance
                         */
                        Polyline.prototype.encodedPolyline = null;
    
                        /**
                         * Polyline geoJsonLinestring.
                         * @member {google.protobuf.IStruct|null|undefined} geoJsonLinestring
                         * @memberof google.maps.routing.v2.Polyline
                         * @instance
                         */
                        Polyline.prototype.geoJsonLinestring = null;
    
                        // OneOf field names bound to virtual getters and setters
                        var $oneOfFields;
    
                        /**
                         * Polyline polylineType.
                         * @member {"encodedPolyline"|"geoJsonLinestring"|undefined} polylineType
                         * @memberof google.maps.routing.v2.Polyline
                         * @instance
                         */
                        Object.defineProperty(Polyline.prototype, "polylineType", {
                            get: $util.oneOfGetter($oneOfFields = ["encodedPolyline", "geoJsonLinestring"]),
                            set: $util.oneOfSetter($oneOfFields)
                        });
    
                        /**
                         * Creates a new Polyline instance using the specified properties.
                         * @function create
                         * @memberof google.maps.routing.v2.Polyline
                         * @static
                         * @param {google.maps.routing.v2.IPolyline=} [properties] Properties to set
                         * @returns {google.maps.routing.v2.Polyline} Polyline instance
                         */
                        Polyline.create = function create(properties) {
                            return new Polyline(properties);
                        };
    
                        /**
                         * Encodes the specified Polyline message. Does not implicitly {@link google.maps.routing.v2.Polyline.verify|verify} messages.
                         * @function encode
                         * @memberof google.maps.routing.v2.Polyline
                         * @static
                         * @param {google.maps.routing.v2.IPolyline} message Polyline message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        Polyline.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.encodedPolyline != null && Object.hasOwnProperty.call(message, "encodedPolyline"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.encodedPolyline);
                            if (message.geoJsonLinestring != null && Object.hasOwnProperty.call(message, "geoJsonLinestring"))
                                $root.google.protobuf.Struct.encode(message.geoJsonLinestring, writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                            return writer;
                        };
    
                        /**
                         * Encodes the specified Polyline message, length delimited. Does not implicitly {@link google.maps.routing.v2.Polyline.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.maps.routing.v2.Polyline
                         * @static
                         * @param {google.maps.routing.v2.IPolyline} message Polyline message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        Polyline.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a Polyline message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.maps.routing.v2.Polyline
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.maps.routing.v2.Polyline} Polyline
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        Polyline.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.maps.routing.v2.Polyline();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.encodedPolyline = reader.string();
                                        break;
                                    }
                                case 2: {
                                        message.geoJsonLinestring = $root.google.protobuf.Struct.decode(reader, reader.uint32());
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a Polyline message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.maps.routing.v2.Polyline
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.maps.routing.v2.Polyline} Polyline
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        Polyline.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a Polyline message.
                         * @function verify
                         * @memberof google.maps.routing.v2.Polyline
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        Polyline.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            var properties = {};
                            if (message.encodedPolyline != null && message.hasOwnProperty("encodedPolyline")) {
                                properties.polylineType = 1;
                                if (!$util.isString(message.encodedPolyline))
                                    return "encodedPolyline: string expected";
                            }
                            if (message.geoJsonLinestring != null && message.hasOwnProperty("geoJsonLinestring")) {
                                if (properties.polylineType === 1)
                                    return "polylineType: multiple values";
                                properties.polylineType = 1;
                                {
                                    var error = $root.google.protobuf.Struct.verify(message.geoJsonLinestring);
                                    if (error)
                                        return "geoJsonLinestring." + error;
                                }
                            }
                            return null;
                        };
    
                        /**
                         * Creates a Polyline message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.maps.routing.v2.Polyline
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.maps.routing.v2.Polyline} Polyline
                         */
                        Polyline.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.maps.routing.v2.Polyline)
                                return object;
                            var message = new $root.google.maps.routing.v2.Polyline();
                            if (object.encodedPolyline != null)
                                message.encodedPolyline = String(object.encodedPolyline);
                            if (object.geoJsonLinestring != null) {
                                if (typeof object.geoJsonLinestring !== "object")
                                    throw TypeError(".google.maps.routing.v2.Polyline.geoJsonLinestring: object expected");
                                message.geoJsonLinestring = $root.google.protobuf.Struct.fromObject(object.geoJsonLinestring);
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a Polyline message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.maps.routing.v2.Polyline
                         * @static
                         * @param {google.maps.routing.v2.Polyline} message Polyline
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        Polyline.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (message.encodedPolyline != null && message.hasOwnProperty("encodedPolyline")) {
                                object.encodedPolyline = message.encodedPolyline;
                                if (options.oneofs)
                                    object.polylineType = "encodedPolyline";
                            }
                            if (message.geoJsonLinestring != null && message.hasOwnProperty("geoJsonLinestring")) {
                                object.geoJsonLinestring = $root.google.protobuf.Struct.toObject(message.geoJsonLinestring, options);
                                if (options.oneofs)
                                    object.polylineType = "geoJsonLinestring";
                            }
                            return object;
                        };
    
                        /**
                         * Converts this Polyline to JSON.
                         * @function toJSON
                         * @memberof google.maps.routing.v2.Polyline
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        Polyline.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for Polyline
                         * @function getTypeUrl
                         * @memberof google.maps.routing.v2.Polyline
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        Polyline.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.maps.routing.v2.Polyline";
                        };
    
                        return Polyline;
                    })();
    
                    /**
                     * PolylineQuality enum.
                     * @name google.maps.routing.v2.PolylineQuality
                     * @enum {number}
                     * @property {number} POLYLINE_QUALITY_UNSPECIFIED=0 POLYLINE_QUALITY_UNSPECIFIED value
                     * @property {number} HIGH_QUALITY=1 HIGH_QUALITY value
                     * @property {number} OVERVIEW=2 OVERVIEW value
                     */
                    v2.PolylineQuality = (function() {
                        var valuesById = {}, values = Object.create(valuesById);
                        values[valuesById[0] = "POLYLINE_QUALITY_UNSPECIFIED"] = 0;
                        values[valuesById[1] = "HIGH_QUALITY"] = 1;
                        values[valuesById[2] = "OVERVIEW"] = 2;
                        return values;
                    })();
    
                    /**
                     * PolylineEncoding enum.
                     * @name google.maps.routing.v2.PolylineEncoding
                     * @enum {number}
                     * @property {number} POLYLINE_ENCODING_UNSPECIFIED=0 POLYLINE_ENCODING_UNSPECIFIED value
                     * @property {number} ENCODED_POLYLINE=1 ENCODED_POLYLINE value
                     * @property {number} GEO_JSON_LINESTRING=2 GEO_JSON_LINESTRING value
                     */
                    v2.PolylineEncoding = (function() {
                        var valuesById = {}, values = Object.create(valuesById);
                        values[valuesById[0] = "POLYLINE_ENCODING_UNSPECIFIED"] = 0;
                        values[valuesById[1] = "ENCODED_POLYLINE"] = 1;
                        values[valuesById[2] = "GEO_JSON_LINESTRING"] = 2;
                        return values;
                    })();
    
                    v2.Route = (function() {
    
                        /**
                         * Properties of a Route.
                         * @memberof google.maps.routing.v2
                         * @interface IRoute
                         * @property {Array.<google.maps.routing.v2.RouteLabel>|null} [routeLabels] Route routeLabels
                         * @property {Array.<google.maps.routing.v2.IRouteLeg>|null} [legs] Route legs
                         * @property {number|null} [distanceMeters] Route distanceMeters
                         * @property {google.protobuf.IDuration|null} [duration] Route duration
                         * @property {google.protobuf.IDuration|null} [staticDuration] Route staticDuration
                         * @property {google.maps.routing.v2.IPolyline|null} [polyline] Route polyline
                         * @property {string|null} [description] Route description
                         * @property {Array.<string>|null} [warnings] Route warnings
                         * @property {google.geo.type.IViewport|null} [viewport] Route viewport
                         * @property {google.maps.routing.v2.IRouteTravelAdvisory|null} [travelAdvisory] Route travelAdvisory
                         * @property {Array.<number>|null} [optimizedIntermediateWaypointIndex] Route optimizedIntermediateWaypointIndex
                         * @property {google.maps.routing.v2.Route.IRouteLocalizedValues|null} [localizedValues] Route localizedValues
                         * @property {string|null} [routeToken] Route routeToken
                         */
    
                        /**
                         * Constructs a new Route.
                         * @memberof google.maps.routing.v2
                         * @classdesc Represents a Route.
                         * @implements IRoute
                         * @constructor
                         * @param {google.maps.routing.v2.IRoute=} [properties] Properties to set
                         */
                        function Route(properties) {
                            this.routeLabels = [];
                            this.legs = [];
                            this.warnings = [];
                            this.optimizedIntermediateWaypointIndex = [];
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * Route routeLabels.
                         * @member {Array.<google.maps.routing.v2.RouteLabel>} routeLabels
                         * @memberof google.maps.routing.v2.Route
                         * @instance
                         */
                        Route.prototype.routeLabels = $util.emptyArray;
    
                        /**
                         * Route legs.
                         * @member {Array.<google.maps.routing.v2.IRouteLeg>} legs
                         * @memberof google.maps.routing.v2.Route
                         * @instance
                         */
                        Route.prototype.legs = $util.emptyArray;
    
                        /**
                         * Route distanceMeters.
                         * @member {number} distanceMeters
                         * @memberof google.maps.routing.v2.Route
                         * @instance
                         */
                        Route.prototype.distanceMeters = 0;
    
                        /**
                         * Route duration.
                         * @member {google.protobuf.IDuration|null|undefined} duration
                         * @memberof google.maps.routing.v2.Route
                         * @instance
                         */
                        Route.prototype.duration = null;
    
                        /**
                         * Route staticDuration.
                         * @member {google.protobuf.IDuration|null|undefined} staticDuration
                         * @memberof google.maps.routing.v2.Route
                         * @instance
                         */
                        Route.prototype.staticDuration = null;
    
                        /**
                         * Route polyline.
                         * @member {google.maps.routing.v2.IPolyline|null|undefined} polyline
                         * @memberof google.maps.routing.v2.Route
                         * @instance
                         */
                        Route.prototype.polyline = null;
    
                        /**
                         * Route description.
                         * @member {string} description
                         * @memberof google.maps.routing.v2.Route
                         * @instance
                         */
                        Route.prototype.description = "";
    
                        /**
                         * Route warnings.
                         * @member {Array.<string>} warnings
                         * @memberof google.maps.routing.v2.Route
                         * @instance
                         */
                        Route.prototype.warnings = $util.emptyArray;
    
                        /**
                         * Route viewport.
                         * @member {google.geo.type.IViewport|null|undefined} viewport
                         * @memberof google.maps.routing.v2.Route
                         * @instance
                         */
                        Route.prototype.viewport = null;
    
                        /**
                         * Route travelAdvisory.
                         * @member {google.maps.routing.v2.IRouteTravelAdvisory|null|undefined} travelAdvisory
                         * @memberof google.maps.routing.v2.Route
                         * @instance
                         */
                        Route.prototype.travelAdvisory = null;
    
                        /**
                         * Route optimizedIntermediateWaypointIndex.
                         * @member {Array.<number>} optimizedIntermediateWaypointIndex
                         * @memberof google.maps.routing.v2.Route
                         * @instance
                         */
                        Route.prototype.optimizedIntermediateWaypointIndex = $util.emptyArray;
    
                        /**
                         * Route localizedValues.
                         * @member {google.maps.routing.v2.Route.IRouteLocalizedValues|null|undefined} localizedValues
                         * @memberof google.maps.routing.v2.Route
                         * @instance
                         */
                        Route.prototype.localizedValues = null;
    
                        /**
                         * Route routeToken.
                         * @member {string} routeToken
                         * @memberof google.maps.routing.v2.Route
                         * @instance
                         */
                        Route.prototype.routeToken = "";
    
                        /**
                         * Creates a new Route instance using the specified properties.
                         * @function create
                         * @memberof google.maps.routing.v2.Route
                         * @static
                         * @param {google.maps.routing.v2.IRoute=} [properties] Properties to set
                         * @returns {google.maps.routing.v2.Route} Route instance
                         */
                        Route.create = function create(properties) {
                            return new Route(properties);
                        };
    
                        /**
                         * Encodes the specified Route message. Does not implicitly {@link google.maps.routing.v2.Route.verify|verify} messages.
                         * @function encode
                         * @memberof google.maps.routing.v2.Route
                         * @static
                         * @param {google.maps.routing.v2.IRoute} message Route message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        Route.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.legs != null && message.legs.length)
                                for (var i = 0; i < message.legs.length; ++i)
                                    $root.google.maps.routing.v2.RouteLeg.encode(message.legs[i], writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                            if (message.distanceMeters != null && Object.hasOwnProperty.call(message, "distanceMeters"))
                                writer.uint32(/* id 2, wireType 0 =*/16).int32(message.distanceMeters);
                            if (message.duration != null && Object.hasOwnProperty.call(message, "duration"))
                                $root.google.protobuf.Duration.encode(message.duration, writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();
                            if (message.staticDuration != null && Object.hasOwnProperty.call(message, "staticDuration"))
                                $root.google.protobuf.Duration.encode(message.staticDuration, writer.uint32(/* id 4, wireType 2 =*/34).fork()).ldelim();
                            if (message.polyline != null && Object.hasOwnProperty.call(message, "polyline"))
                                $root.google.maps.routing.v2.Polyline.encode(message.polyline, writer.uint32(/* id 5, wireType 2 =*/42).fork()).ldelim();
                            if (message.description != null && Object.hasOwnProperty.call(message, "description"))
                                writer.uint32(/* id 6, wireType 2 =*/50).string(message.description);
                            if (message.warnings != null && message.warnings.length)
                                for (var i = 0; i < message.warnings.length; ++i)
                                    writer.uint32(/* id 7, wireType 2 =*/58).string(message.warnings[i]);
                            if (message.viewport != null && Object.hasOwnProperty.call(message, "viewport"))
                                $root.google.geo.type.Viewport.encode(message.viewport, writer.uint32(/* id 8, wireType 2 =*/66).fork()).ldelim();
                            if (message.travelAdvisory != null && Object.hasOwnProperty.call(message, "travelAdvisory"))
                                $root.google.maps.routing.v2.RouteTravelAdvisory.encode(message.travelAdvisory, writer.uint32(/* id 9, wireType 2 =*/74).fork()).ldelim();
                            if (message.optimizedIntermediateWaypointIndex != null && message.optimizedIntermediateWaypointIndex.length) {
                                writer.uint32(/* id 10, wireType 2 =*/82).fork();
                                for (var i = 0; i < message.optimizedIntermediateWaypointIndex.length; ++i)
                                    writer.int32(message.optimizedIntermediateWaypointIndex[i]);
                                writer.ldelim();
                            }
                            if (message.localizedValues != null && Object.hasOwnProperty.call(message, "localizedValues"))
                                $root.google.maps.routing.v2.Route.RouteLocalizedValues.encode(message.localizedValues, writer.uint32(/* id 11, wireType 2 =*/90).fork()).ldelim();
                            if (message.routeToken != null && Object.hasOwnProperty.call(message, "routeToken"))
                                writer.uint32(/* id 12, wireType 2 =*/98).string(message.routeToken);
                            if (message.routeLabels != null && message.routeLabels.length) {
                                writer.uint32(/* id 13, wireType 2 =*/106).fork();
                                for (var i = 0; i < message.routeLabels.length; ++i)
                                    writer.int32(message.routeLabels[i]);
                                writer.ldelim();
                            }
                            return writer;
                        };
    
                        /**
                         * Encodes the specified Route message, length delimited. Does not implicitly {@link google.maps.routing.v2.Route.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.maps.routing.v2.Route
                         * @static
                         * @param {google.maps.routing.v2.IRoute} message Route message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        Route.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a Route message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.maps.routing.v2.Route
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.maps.routing.v2.Route} Route
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        Route.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.maps.routing.v2.Route();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 13: {
                                        if (!(message.routeLabels && message.routeLabels.length))
                                            message.routeLabels = [];
                                        if ((tag & 7) === 2) {
                                            var end2 = reader.uint32() + reader.pos;
                                            while (reader.pos < end2)
                                                message.routeLabels.push(reader.int32());
                                        } else
                                            message.routeLabels.push(reader.int32());
                                        break;
                                    }
                                case 1: {
                                        if (!(message.legs && message.legs.length))
                                            message.legs = [];
                                        message.legs.push($root.google.maps.routing.v2.RouteLeg.decode(reader, reader.uint32()));
                                        break;
                                    }
                                case 2: {
                                        message.distanceMeters = reader.int32();
                                        break;
                                    }
                                case 3: {
                                        message.duration = $root.google.protobuf.Duration.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 4: {
                                        message.staticDuration = $root.google.protobuf.Duration.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 5: {
                                        message.polyline = $root.google.maps.routing.v2.Polyline.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 6: {
                                        message.description = reader.string();
                                        break;
                                    }
                                case 7: {
                                        if (!(message.warnings && message.warnings.length))
                                            message.warnings = [];
                                        message.warnings.push(reader.string());
                                        break;
                                    }
                                case 8: {
                                        message.viewport = $root.google.geo.type.Viewport.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 9: {
                                        message.travelAdvisory = $root.google.maps.routing.v2.RouteTravelAdvisory.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 10: {
                                        if (!(message.optimizedIntermediateWaypointIndex && message.optimizedIntermediateWaypointIndex.length))
                                            message.optimizedIntermediateWaypointIndex = [];
                                        if ((tag & 7) === 2) {
                                            var end2 = reader.uint32() + reader.pos;
                                            while (reader.pos < end2)
                                                message.optimizedIntermediateWaypointIndex.push(reader.int32());
                                        } else
                                            message.optimizedIntermediateWaypointIndex.push(reader.int32());
                                        break;
                                    }
                                case 11: {
                                        message.localizedValues = $root.google.maps.routing.v2.Route.RouteLocalizedValues.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 12: {
                                        message.routeToken = reader.string();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a Route message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.maps.routing.v2.Route
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.maps.routing.v2.Route} Route
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        Route.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a Route message.
                         * @function verify
                         * @memberof google.maps.routing.v2.Route
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        Route.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.routeLabels != null && message.hasOwnProperty("routeLabels")) {
                                if (!Array.isArray(message.routeLabels))
                                    return "routeLabels: array expected";
                                for (var i = 0; i < message.routeLabels.length; ++i)
                                    switch (message.routeLabels[i]) {
                                    default:
                                        return "routeLabels: enum value[] expected";
                                    case 0:
                                    case 1:
                                    case 2:
                                    case 3:
                                        break;
                                    }
                            }
                            if (message.legs != null && message.hasOwnProperty("legs")) {
                                if (!Array.isArray(message.legs))
                                    return "legs: array expected";
                                for (var i = 0; i < message.legs.length; ++i) {
                                    var error = $root.google.maps.routing.v2.RouteLeg.verify(message.legs[i]);
                                    if (error)
                                        return "legs." + error;
                                }
                            }
                            if (message.distanceMeters != null && message.hasOwnProperty("distanceMeters"))
                                if (!$util.isInteger(message.distanceMeters))
                                    return "distanceMeters: integer expected";
                            if (message.duration != null && message.hasOwnProperty("duration")) {
                                var error = $root.google.protobuf.Duration.verify(message.duration);
                                if (error)
                                    return "duration." + error;
                            }
                            if (message.staticDuration != null && message.hasOwnProperty("staticDuration")) {
                                var error = $root.google.protobuf.Duration.verify(message.staticDuration);
                                if (error)
                                    return "staticDuration." + error;
                            }
                            if (message.polyline != null && message.hasOwnProperty("polyline")) {
                                var error = $root.google.maps.routing.v2.Polyline.verify(message.polyline);
                                if (error)
                                    return "polyline." + error;
                            }
                            if (message.description != null && message.hasOwnProperty("description"))
                                if (!$util.isString(message.description))
                                    return "description: string expected";
                            if (message.warnings != null && message.hasOwnProperty("warnings")) {
                                if (!Array.isArray(message.warnings))
                                    return "warnings: array expected";
                                for (var i = 0; i < message.warnings.length; ++i)
                                    if (!$util.isString(message.warnings[i]))
                                        return "warnings: string[] expected";
                            }
                            if (message.viewport != null && message.hasOwnProperty("viewport")) {
                                var error = $root.google.geo.type.Viewport.verify(message.viewport);
                                if (error)
                                    return "viewport." + error;
                            }
                            if (message.travelAdvisory != null && message.hasOwnProperty("travelAdvisory")) {
                                var error = $root.google.maps.routing.v2.RouteTravelAdvisory.verify(message.travelAdvisory);
                                if (error)
                                    return "travelAdvisory." + error;
                            }
                            if (message.optimizedIntermediateWaypointIndex != null && message.hasOwnProperty("optimizedIntermediateWaypointIndex")) {
                                if (!Array.isArray(message.optimizedIntermediateWaypointIndex))
                                    return "optimizedIntermediateWaypointIndex: array expected";
                                for (var i = 0; i < message.optimizedIntermediateWaypointIndex.length; ++i)
                                    if (!$util.isInteger(message.optimizedIntermediateWaypointIndex[i]))
                                        return "optimizedIntermediateWaypointIndex: integer[] expected";
                            }
                            if (message.localizedValues != null && message.hasOwnProperty("localizedValues")) {
                                var error = $root.google.maps.routing.v2.Route.RouteLocalizedValues.verify(message.localizedValues);
                                if (error)
                                    return "localizedValues." + error;
                            }
                            if (message.routeToken != null && message.hasOwnProperty("routeToken"))
                                if (!$util.isString(message.routeToken))
                                    return "routeToken: string expected";
                            return null;
                        };
    
                        /**
                         * Creates a Route message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.maps.routing.v2.Route
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.maps.routing.v2.Route} Route
                         */
                        Route.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.maps.routing.v2.Route)
                                return object;
                            var message = new $root.google.maps.routing.v2.Route();
                            if (object.routeLabels) {
                                if (!Array.isArray(object.routeLabels))
                                    throw TypeError(".google.maps.routing.v2.Route.routeLabels: array expected");
                                message.routeLabels = [];
                                for (var i = 0; i < object.routeLabels.length; ++i)
                                    switch (object.routeLabels[i]) {
                                    default:
                                        if (typeof object.routeLabels[i] === "number") {
                                            message.routeLabels[i] = object.routeLabels[i];
                                            break;
                                        }
                                    case "ROUTE_LABEL_UNSPECIFIED":
                                    case 0:
                                        message.routeLabels[i] = 0;
                                        break;
                                    case "DEFAULT_ROUTE":
                                    case 1:
                                        message.routeLabels[i] = 1;
                                        break;
                                    case "DEFAULT_ROUTE_ALTERNATE":
                                    case 2:
                                        message.routeLabels[i] = 2;
                                        break;
                                    case "FUEL_EFFICIENT":
                                    case 3:
                                        message.routeLabels[i] = 3;
                                        break;
                                    }
                            }
                            if (object.legs) {
                                if (!Array.isArray(object.legs))
                                    throw TypeError(".google.maps.routing.v2.Route.legs: array expected");
                                message.legs = [];
                                for (var i = 0; i < object.legs.length; ++i) {
                                    if (typeof object.legs[i] !== "object")
                                        throw TypeError(".google.maps.routing.v2.Route.legs: object expected");
                                    message.legs[i] = $root.google.maps.routing.v2.RouteLeg.fromObject(object.legs[i]);
                                }
                            }
                            if (object.distanceMeters != null)
                                message.distanceMeters = object.distanceMeters | 0;
                            if (object.duration != null) {
                                if (typeof object.duration !== "object")
                                    throw TypeError(".google.maps.routing.v2.Route.duration: object expected");
                                message.duration = $root.google.protobuf.Duration.fromObject(object.duration);
                            }
                            if (object.staticDuration != null) {
                                if (typeof object.staticDuration !== "object")
                                    throw TypeError(".google.maps.routing.v2.Route.staticDuration: object expected");
                                message.staticDuration = $root.google.protobuf.Duration.fromObject(object.staticDuration);
                            }
                            if (object.polyline != null) {
                                if (typeof object.polyline !== "object")
                                    throw TypeError(".google.maps.routing.v2.Route.polyline: object expected");
                                message.polyline = $root.google.maps.routing.v2.Polyline.fromObject(object.polyline);
                            }
                            if (object.description != null)
                                message.description = String(object.description);
                            if (object.warnings) {
                                if (!Array.isArray(object.warnings))
                                    throw TypeError(".google.maps.routing.v2.Route.warnings: array expected");
                                message.warnings = [];
                                for (var i = 0; i < object.warnings.length; ++i)
                                    message.warnings[i] = String(object.warnings[i]);
                            }
                            if (object.viewport != null) {
                                if (typeof object.viewport !== "object")
                                    throw TypeError(".google.maps.routing.v2.Route.viewport: object expected");
                                message.viewport = $root.google.geo.type.Viewport.fromObject(object.viewport);
                            }
                            if (object.travelAdvisory != null) {
                                if (typeof object.travelAdvisory !== "object")
                                    throw TypeError(".google.maps.routing.v2.Route.travelAdvisory: object expected");
                                message.travelAdvisory = $root.google.maps.routing.v2.RouteTravelAdvisory.fromObject(object.travelAdvisory);
                            }
                            if (object.optimizedIntermediateWaypointIndex) {
                                if (!Array.isArray(object.optimizedIntermediateWaypointIndex))
                                    throw TypeError(".google.maps.routing.v2.Route.optimizedIntermediateWaypointIndex: array expected");
                                message.optimizedIntermediateWaypointIndex = [];
                                for (var i = 0; i < object.optimizedIntermediateWaypointIndex.length; ++i)
                                    message.optimizedIntermediateWaypointIndex[i] = object.optimizedIntermediateWaypointIndex[i] | 0;
                            }
                            if (object.localizedValues != null) {
                                if (typeof object.localizedValues !== "object")
                                    throw TypeError(".google.maps.routing.v2.Route.localizedValues: object expected");
                                message.localizedValues = $root.google.maps.routing.v2.Route.RouteLocalizedValues.fromObject(object.localizedValues);
                            }
                            if (object.routeToken != null)
                                message.routeToken = String(object.routeToken);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a Route message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.maps.routing.v2.Route
                         * @static
                         * @param {google.maps.routing.v2.Route} message Route
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        Route.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.arrays || options.defaults) {
                                object.legs = [];
                                object.warnings = [];
                                object.optimizedIntermediateWaypointIndex = [];
                                object.routeLabels = [];
                            }
                            if (options.defaults) {
                                object.distanceMeters = 0;
                                object.duration = null;
                                object.staticDuration = null;
                                object.polyline = null;
                                object.description = "";
                                object.viewport = null;
                                object.travelAdvisory = null;
                                object.localizedValues = null;
                                object.routeToken = "";
                            }
                            if (message.legs && message.legs.length) {
                                object.legs = [];
                                for (var j = 0; j < message.legs.length; ++j)
                                    object.legs[j] = $root.google.maps.routing.v2.RouteLeg.toObject(message.legs[j], options);
                            }
                            if (message.distanceMeters != null && message.hasOwnProperty("distanceMeters"))
                                object.distanceMeters = message.distanceMeters;
                            if (message.duration != null && message.hasOwnProperty("duration"))
                                object.duration = $root.google.protobuf.Duration.toObject(message.duration, options);
                            if (message.staticDuration != null && message.hasOwnProperty("staticDuration"))
                                object.staticDuration = $root.google.protobuf.Duration.toObject(message.staticDuration, options);
                            if (message.polyline != null && message.hasOwnProperty("polyline"))
                                object.polyline = $root.google.maps.routing.v2.Polyline.toObject(message.polyline, options);
                            if (message.description != null && message.hasOwnProperty("description"))
                                object.description = message.description;
                            if (message.warnings && message.warnings.length) {
                                object.warnings = [];
                                for (var j = 0; j < message.warnings.length; ++j)
                                    object.warnings[j] = message.warnings[j];
                            }
                            if (message.viewport != null && message.hasOwnProperty("viewport"))
                                object.viewport = $root.google.geo.type.Viewport.toObject(message.viewport, options);
                            if (message.travelAdvisory != null && message.hasOwnProperty("travelAdvisory"))
                                object.travelAdvisory = $root.google.maps.routing.v2.RouteTravelAdvisory.toObject(message.travelAdvisory, options);
                            if (message.optimizedIntermediateWaypointIndex && message.optimizedIntermediateWaypointIndex.length) {
                                object.optimizedIntermediateWaypointIndex = [];
                                for (var j = 0; j < message.optimizedIntermediateWaypointIndex.length; ++j)
                                    object.optimizedIntermediateWaypointIndex[j] = message.optimizedIntermediateWaypointIndex[j];
                            }
                            if (message.localizedValues != null && message.hasOwnProperty("localizedValues"))
                                object.localizedValues = $root.google.maps.routing.v2.Route.RouteLocalizedValues.toObject(message.localizedValues, options);
                            if (message.routeToken != null && message.hasOwnProperty("routeToken"))
                                object.routeToken = message.routeToken;
                            if (message.routeLabels && message.routeLabels.length) {
                                object.routeLabels = [];
                                for (var j = 0; j < message.routeLabels.length; ++j)
                                    object.routeLabels[j] = options.enums === String ? $root.google.maps.routing.v2.RouteLabel[message.routeLabels[j]] === undefined ? message.routeLabels[j] : $root.google.maps.routing.v2.RouteLabel[message.routeLabels[j]] : message.routeLabels[j];
                            }
                            return object;
                        };
    
                        /**
                         * Converts this Route to JSON.
                         * @function toJSON
                         * @memberof google.maps.routing.v2.Route
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        Route.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for Route
                         * @function getTypeUrl
                         * @memberof google.maps.routing.v2.Route
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        Route.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.maps.routing.v2.Route";
                        };
    
                        Route.RouteLocalizedValues = (function() {
    
                            /**
                             * Properties of a RouteLocalizedValues.
                             * @memberof google.maps.routing.v2.Route
                             * @interface IRouteLocalizedValues
                             * @property {google.type.ILocalizedText|null} [distance] RouteLocalizedValues distance
                             * @property {google.type.ILocalizedText|null} [duration] RouteLocalizedValues duration
                             * @property {google.type.ILocalizedText|null} [staticDuration] RouteLocalizedValues staticDuration
                             * @property {google.type.ILocalizedText|null} [transitFare] RouteLocalizedValues transitFare
                             */
    
                            /**
                             * Constructs a new RouteLocalizedValues.
                             * @memberof google.maps.routing.v2.Route
                             * @classdesc Represents a RouteLocalizedValues.
                             * @implements IRouteLocalizedValues
                             * @constructor
                             * @param {google.maps.routing.v2.Route.IRouteLocalizedValues=} [properties] Properties to set
                             */
                            function RouteLocalizedValues(properties) {
                                if (properties)
                                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                        if (properties[keys[i]] != null)
                                            this[keys[i]] = properties[keys[i]];
                            }
    
                            /**
                             * RouteLocalizedValues distance.
                             * @member {google.type.ILocalizedText|null|undefined} distance
                             * @memberof google.maps.routing.v2.Route.RouteLocalizedValues
                             * @instance
                             */
                            RouteLocalizedValues.prototype.distance = null;
    
                            /**
                             * RouteLocalizedValues duration.
                             * @member {google.type.ILocalizedText|null|undefined} duration
                             * @memberof google.maps.routing.v2.Route.RouteLocalizedValues
                             * @instance
                             */
                            RouteLocalizedValues.prototype.duration = null;
    
                            /**
                             * RouteLocalizedValues staticDuration.
                             * @member {google.type.ILocalizedText|null|undefined} staticDuration
                             * @memberof google.maps.routing.v2.Route.RouteLocalizedValues
                             * @instance
                             */
                            RouteLocalizedValues.prototype.staticDuration = null;
    
                            /**
                             * RouteLocalizedValues transitFare.
                             * @member {google.type.ILocalizedText|null|undefined} transitFare
                             * @memberof google.maps.routing.v2.Route.RouteLocalizedValues
                             * @instance
                             */
                            RouteLocalizedValues.prototype.transitFare = null;
    
                            /**
                             * Creates a new RouteLocalizedValues instance using the specified properties.
                             * @function create
                             * @memberof google.maps.routing.v2.Route.RouteLocalizedValues
                             * @static
                             * @param {google.maps.routing.v2.Route.IRouteLocalizedValues=} [properties] Properties to set
                             * @returns {google.maps.routing.v2.Route.RouteLocalizedValues} RouteLocalizedValues instance
                             */
                            RouteLocalizedValues.create = function create(properties) {
                                return new RouteLocalizedValues(properties);
                            };
    
                            /**
                             * Encodes the specified RouteLocalizedValues message. Does not implicitly {@link google.maps.routing.v2.Route.RouteLocalizedValues.verify|verify} messages.
                             * @function encode
                             * @memberof google.maps.routing.v2.Route.RouteLocalizedValues
                             * @static
                             * @param {google.maps.routing.v2.Route.IRouteLocalizedValues} message RouteLocalizedValues message or plain object to encode
                             * @param {$protobuf.Writer} [writer] Writer to encode to
                             * @returns {$protobuf.Writer} Writer
                             */
                            RouteLocalizedValues.encode = function encode(message, writer) {
                                if (!writer)
                                    writer = $Writer.create();
                                if (message.distance != null && Object.hasOwnProperty.call(message, "distance"))
                                    $root.google.type.LocalizedText.encode(message.distance, writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                                if (message.duration != null && Object.hasOwnProperty.call(message, "duration"))
                                    $root.google.type.LocalizedText.encode(message.duration, writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                                if (message.staticDuration != null && Object.hasOwnProperty.call(message, "staticDuration"))
                                    $root.google.type.LocalizedText.encode(message.staticDuration, writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();
                                if (message.transitFare != null && Object.hasOwnProperty.call(message, "transitFare"))
                                    $root.google.type.LocalizedText.encode(message.transitFare, writer.uint32(/* id 4, wireType 2 =*/34).fork()).ldelim();
                                return writer;
                            };
    
                            /**
                             * Encodes the specified RouteLocalizedValues message, length delimited. Does not implicitly {@link google.maps.routing.v2.Route.RouteLocalizedValues.verify|verify} messages.
                             * @function encodeDelimited
                             * @memberof google.maps.routing.v2.Route.RouteLocalizedValues
                             * @static
                             * @param {google.maps.routing.v2.Route.IRouteLocalizedValues} message RouteLocalizedValues message or plain object to encode
                             * @param {$protobuf.Writer} [writer] Writer to encode to
                             * @returns {$protobuf.Writer} Writer
                             */
                            RouteLocalizedValues.encodeDelimited = function encodeDelimited(message, writer) {
                                return this.encode(message, writer).ldelim();
                            };
    
                            /**
                             * Decodes a RouteLocalizedValues message from the specified reader or buffer.
                             * @function decode
                             * @memberof google.maps.routing.v2.Route.RouteLocalizedValues
                             * @static
                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                             * @param {number} [length] Message length if known beforehand
                             * @returns {google.maps.routing.v2.Route.RouteLocalizedValues} RouteLocalizedValues
                             * @throws {Error} If the payload is not a reader or valid buffer
                             * @throws {$protobuf.util.ProtocolError} If required fields are missing
                             */
                            RouteLocalizedValues.decode = function decode(reader, length) {
                                if (!(reader instanceof $Reader))
                                    reader = $Reader.create(reader);
                                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.maps.routing.v2.Route.RouteLocalizedValues();
                                while (reader.pos < end) {
                                    var tag = reader.uint32();
                                    switch (tag >>> 3) {
                                    case 1: {
                                            message.distance = $root.google.type.LocalizedText.decode(reader, reader.uint32());
                                            break;
                                        }
                                    case 2: {
                                            message.duration = $root.google.type.LocalizedText.decode(reader, reader.uint32());
                                            break;
                                        }
                                    case 3: {
                                            message.staticDuration = $root.google.type.LocalizedText.decode(reader, reader.uint32());
                                            break;
                                        }
                                    case 4: {
                                            message.transitFare = $root.google.type.LocalizedText.decode(reader, reader.uint32());
                                            break;
                                        }
                                    default:
                                        reader.skipType(tag & 7);
                                        break;
                                    }
                                }
                                return message;
                            };
    
                            /**
                             * Decodes a RouteLocalizedValues message from the specified reader or buffer, length delimited.
                             * @function decodeDelimited
                             * @memberof google.maps.routing.v2.Route.RouteLocalizedValues
                             * @static
                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                             * @returns {google.maps.routing.v2.Route.RouteLocalizedValues} RouteLocalizedValues
                             * @throws {Error} If the payload is not a reader or valid buffer
                             * @throws {$protobuf.util.ProtocolError} If required fields are missing
                             */
                            RouteLocalizedValues.decodeDelimited = function decodeDelimited(reader) {
                                if (!(reader instanceof $Reader))
                                    reader = new $Reader(reader);
                                return this.decode(reader, reader.uint32());
                            };
    
                            /**
                             * Verifies a RouteLocalizedValues message.
                             * @function verify
                             * @memberof google.maps.routing.v2.Route.RouteLocalizedValues
                             * @static
                             * @param {Object.<string,*>} message Plain object to verify
                             * @returns {string|null} `null` if valid, otherwise the reason why it is not
                             */
                            RouteLocalizedValues.verify = function verify(message) {
                                if (typeof message !== "object" || message === null)
                                    return "object expected";
                                if (message.distance != null && message.hasOwnProperty("distance")) {
                                    var error = $root.google.type.LocalizedText.verify(message.distance);
                                    if (error)
                                        return "distance." + error;
                                }
                                if (message.duration != null && message.hasOwnProperty("duration")) {
                                    var error = $root.google.type.LocalizedText.verify(message.duration);
                                    if (error)
                                        return "duration." + error;
                                }
                                if (message.staticDuration != null && message.hasOwnProperty("staticDuration")) {
                                    var error = $root.google.type.LocalizedText.verify(message.staticDuration);
                                    if (error)
                                        return "staticDuration." + error;
                                }
                                if (message.transitFare != null && message.hasOwnProperty("transitFare")) {
                                    var error = $root.google.type.LocalizedText.verify(message.transitFare);
                                    if (error)
                                        return "transitFare." + error;
                                }
                                return null;
                            };
    
                            /**
                             * Creates a RouteLocalizedValues message from a plain object. Also converts values to their respective internal types.
                             * @function fromObject
                             * @memberof google.maps.routing.v2.Route.RouteLocalizedValues
                             * @static
                             * @param {Object.<string,*>} object Plain object
                             * @returns {google.maps.routing.v2.Route.RouteLocalizedValues} RouteLocalizedValues
                             */
                            RouteLocalizedValues.fromObject = function fromObject(object) {
                                if (object instanceof $root.google.maps.routing.v2.Route.RouteLocalizedValues)
                                    return object;
                                var message = new $root.google.maps.routing.v2.Route.RouteLocalizedValues();
                                if (object.distance != null) {
                                    if (typeof object.distance !== "object")
                                        throw TypeError(".google.maps.routing.v2.Route.RouteLocalizedValues.distance: object expected");
                                    message.distance = $root.google.type.LocalizedText.fromObject(object.distance);
                                }
                                if (object.duration != null) {
                                    if (typeof object.duration !== "object")
                                        throw TypeError(".google.maps.routing.v2.Route.RouteLocalizedValues.duration: object expected");
                                    message.duration = $root.google.type.LocalizedText.fromObject(object.duration);
                                }
                                if (object.staticDuration != null) {
                                    if (typeof object.staticDuration !== "object")
                                        throw TypeError(".google.maps.routing.v2.Route.RouteLocalizedValues.staticDuration: object expected");
                                    message.staticDuration = $root.google.type.LocalizedText.fromObject(object.staticDuration);
                                }
                                if (object.transitFare != null) {
                                    if (typeof object.transitFare !== "object")
                                        throw TypeError(".google.maps.routing.v2.Route.RouteLocalizedValues.transitFare: object expected");
                                    message.transitFare = $root.google.type.LocalizedText.fromObject(object.transitFare);
                                }
                                return message;
                            };
    
                            /**
                             * Creates a plain object from a RouteLocalizedValues message. Also converts values to other types if specified.
                             * @function toObject
                             * @memberof google.maps.routing.v2.Route.RouteLocalizedValues
                             * @static
                             * @param {google.maps.routing.v2.Route.RouteLocalizedValues} message RouteLocalizedValues
                             * @param {$protobuf.IConversionOptions} [options] Conversion options
                             * @returns {Object.<string,*>} Plain object
                             */
                            RouteLocalizedValues.toObject = function toObject(message, options) {
                                if (!options)
                                    options = {};
                                var object = {};
                                if (options.defaults) {
                                    object.distance = null;
                                    object.duration = null;
                                    object.staticDuration = null;
                                    object.transitFare = null;
                                }
                                if (message.distance != null && message.hasOwnProperty("distance"))
                                    object.distance = $root.google.type.LocalizedText.toObject(message.distance, options);
                                if (message.duration != null && message.hasOwnProperty("duration"))
                                    object.duration = $root.google.type.LocalizedText.toObject(message.duration, options);
                                if (message.staticDuration != null && message.hasOwnProperty("staticDuration"))
                                    object.staticDuration = $root.google.type.LocalizedText.toObject(message.staticDuration, options);
                                if (message.transitFare != null && message.hasOwnProperty("transitFare"))
                                    object.transitFare = $root.google.type.LocalizedText.toObject(message.transitFare, options);
                                return object;
                            };
    
                            /**
                             * Converts this RouteLocalizedValues to JSON.
                             * @function toJSON
                             * @memberof google.maps.routing.v2.Route.RouteLocalizedValues
                             * @instance
                             * @returns {Object.<string,*>} JSON object
                             */
                            RouteLocalizedValues.prototype.toJSON = function toJSON() {
                                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                            };
    
                            /**
                             * Gets the default type url for RouteLocalizedValues
                             * @function getTypeUrl
                             * @memberof google.maps.routing.v2.Route.RouteLocalizedValues
                             * @static
                             * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                             * @returns {string} The default type url
                             */
                            RouteLocalizedValues.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                                if (typeUrlPrefix === undefined) {
                                    typeUrlPrefix = "type.googleapis.com";
                                }
                                return typeUrlPrefix + "/google.maps.routing.v2.Route.RouteLocalizedValues";
                            };
    
                            return RouteLocalizedValues;
                        })();
    
                        return Route;
                    })();
    
                    v2.RouteTravelAdvisory = (function() {
    
                        /**
                         * Properties of a RouteTravelAdvisory.
                         * @memberof google.maps.routing.v2
                         * @interface IRouteTravelAdvisory
                         * @property {google.maps.routing.v2.ITollInfo|null} [tollInfo] RouteTravelAdvisory tollInfo
                         * @property {Array.<google.maps.routing.v2.ISpeedReadingInterval>|null} [speedReadingIntervals] RouteTravelAdvisory speedReadingIntervals
                         * @property {number|Long|null} [fuelConsumptionMicroliters] RouteTravelAdvisory fuelConsumptionMicroliters
                         * @property {boolean|null} [routeRestrictionsPartiallyIgnored] RouteTravelAdvisory routeRestrictionsPartiallyIgnored
                         * @property {google.type.IMoney|null} [transitFare] RouteTravelAdvisory transitFare
                         */
    
                        /**
                         * Constructs a new RouteTravelAdvisory.
                         * @memberof google.maps.routing.v2
                         * @classdesc Represents a RouteTravelAdvisory.
                         * @implements IRouteTravelAdvisory
                         * @constructor
                         * @param {google.maps.routing.v2.IRouteTravelAdvisory=} [properties] Properties to set
                         */
                        function RouteTravelAdvisory(properties) {
                            this.speedReadingIntervals = [];
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * RouteTravelAdvisory tollInfo.
                         * @member {google.maps.routing.v2.ITollInfo|null|undefined} tollInfo
                         * @memberof google.maps.routing.v2.RouteTravelAdvisory
                         * @instance
                         */
                        RouteTravelAdvisory.prototype.tollInfo = null;
    
                        /**
                         * RouteTravelAdvisory speedReadingIntervals.
                         * @member {Array.<google.maps.routing.v2.ISpeedReadingInterval>} speedReadingIntervals
                         * @memberof google.maps.routing.v2.RouteTravelAdvisory
                         * @instance
                         */
                        RouteTravelAdvisory.prototype.speedReadingIntervals = $util.emptyArray;
    
                        /**
                         * RouteTravelAdvisory fuelConsumptionMicroliters.
                         * @member {number|Long} fuelConsumptionMicroliters
                         * @memberof google.maps.routing.v2.RouteTravelAdvisory
                         * @instance
                         */
                        RouteTravelAdvisory.prototype.fuelConsumptionMicroliters = $util.Long ? $util.Long.fromBits(0,0,false) : 0;
    
                        /**
                         * RouteTravelAdvisory routeRestrictionsPartiallyIgnored.
                         * @member {boolean} routeRestrictionsPartiallyIgnored
                         * @memberof google.maps.routing.v2.RouteTravelAdvisory
                         * @instance
                         */
                        RouteTravelAdvisory.prototype.routeRestrictionsPartiallyIgnored = false;
    
                        /**
                         * RouteTravelAdvisory transitFare.
                         * @member {google.type.IMoney|null|undefined} transitFare
                         * @memberof google.maps.routing.v2.RouteTravelAdvisory
                         * @instance
                         */
                        RouteTravelAdvisory.prototype.transitFare = null;
    
                        /**
                         * Creates a new RouteTravelAdvisory instance using the specified properties.
                         * @function create
                         * @memberof google.maps.routing.v2.RouteTravelAdvisory
                         * @static
                         * @param {google.maps.routing.v2.IRouteTravelAdvisory=} [properties] Properties to set
                         * @returns {google.maps.routing.v2.RouteTravelAdvisory} RouteTravelAdvisory instance
                         */
                        RouteTravelAdvisory.create = function create(properties) {
                            return new RouteTravelAdvisory(properties);
                        };
    
                        /**
                         * Encodes the specified RouteTravelAdvisory message. Does not implicitly {@link google.maps.routing.v2.RouteTravelAdvisory.verify|verify} messages.
                         * @function encode
                         * @memberof google.maps.routing.v2.RouteTravelAdvisory
                         * @static
                         * @param {google.maps.routing.v2.IRouteTravelAdvisory} message RouteTravelAdvisory message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        RouteTravelAdvisory.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.tollInfo != null && Object.hasOwnProperty.call(message, "tollInfo"))
                                $root.google.maps.routing.v2.TollInfo.encode(message.tollInfo, writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                            if (message.speedReadingIntervals != null && message.speedReadingIntervals.length)
                                for (var i = 0; i < message.speedReadingIntervals.length; ++i)
                                    $root.google.maps.routing.v2.SpeedReadingInterval.encode(message.speedReadingIntervals[i], writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();
                            if (message.fuelConsumptionMicroliters != null && Object.hasOwnProperty.call(message, "fuelConsumptionMicroliters"))
                                writer.uint32(/* id 5, wireType 0 =*/40).int64(message.fuelConsumptionMicroliters);
                            if (message.routeRestrictionsPartiallyIgnored != null && Object.hasOwnProperty.call(message, "routeRestrictionsPartiallyIgnored"))
                                writer.uint32(/* id 6, wireType 0 =*/48).bool(message.routeRestrictionsPartiallyIgnored);
                            if (message.transitFare != null && Object.hasOwnProperty.call(message, "transitFare"))
                                $root.google.type.Money.encode(message.transitFare, writer.uint32(/* id 7, wireType 2 =*/58).fork()).ldelim();
                            return writer;
                        };
    
                        /**
                         * Encodes the specified RouteTravelAdvisory message, length delimited. Does not implicitly {@link google.maps.routing.v2.RouteTravelAdvisory.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.maps.routing.v2.RouteTravelAdvisory
                         * @static
                         * @param {google.maps.routing.v2.IRouteTravelAdvisory} message RouteTravelAdvisory message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        RouteTravelAdvisory.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a RouteTravelAdvisory message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.maps.routing.v2.RouteTravelAdvisory
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.maps.routing.v2.RouteTravelAdvisory} RouteTravelAdvisory
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        RouteTravelAdvisory.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.maps.routing.v2.RouteTravelAdvisory();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 2: {
                                        message.tollInfo = $root.google.maps.routing.v2.TollInfo.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 3: {
                                        if (!(message.speedReadingIntervals && message.speedReadingIntervals.length))
                                            message.speedReadingIntervals = [];
                                        message.speedReadingIntervals.push($root.google.maps.routing.v2.SpeedReadingInterval.decode(reader, reader.uint32()));
                                        break;
                                    }
                                case 5: {
                                        message.fuelConsumptionMicroliters = reader.int64();
                                        break;
                                    }
                                case 6: {
                                        message.routeRestrictionsPartiallyIgnored = reader.bool();
                                        break;
                                    }
                                case 7: {
                                        message.transitFare = $root.google.type.Money.decode(reader, reader.uint32());
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a RouteTravelAdvisory message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.maps.routing.v2.RouteTravelAdvisory
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.maps.routing.v2.RouteTravelAdvisory} RouteTravelAdvisory
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        RouteTravelAdvisory.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a RouteTravelAdvisory message.
                         * @function verify
                         * @memberof google.maps.routing.v2.RouteTravelAdvisory
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        RouteTravelAdvisory.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.tollInfo != null && message.hasOwnProperty("tollInfo")) {
                                var error = $root.google.maps.routing.v2.TollInfo.verify(message.tollInfo);
                                if (error)
                                    return "tollInfo." + error;
                            }
                            if (message.speedReadingIntervals != null && message.hasOwnProperty("speedReadingIntervals")) {
                                if (!Array.isArray(message.speedReadingIntervals))
                                    return "speedReadingIntervals: array expected";
                                for (var i = 0; i < message.speedReadingIntervals.length; ++i) {
                                    var error = $root.google.maps.routing.v2.SpeedReadingInterval.verify(message.speedReadingIntervals[i]);
                                    if (error)
                                        return "speedReadingIntervals." + error;
                                }
                            }
                            if (message.fuelConsumptionMicroliters != null && message.hasOwnProperty("fuelConsumptionMicroliters"))
                                if (!$util.isInteger(message.fuelConsumptionMicroliters) && !(message.fuelConsumptionMicroliters && $util.isInteger(message.fuelConsumptionMicroliters.low) && $util.isInteger(message.fuelConsumptionMicroliters.high)))
                                    return "fuelConsumptionMicroliters: integer|Long expected";
                            if (message.routeRestrictionsPartiallyIgnored != null && message.hasOwnProperty("routeRestrictionsPartiallyIgnored"))
                                if (typeof message.routeRestrictionsPartiallyIgnored !== "boolean")
                                    return "routeRestrictionsPartiallyIgnored: boolean expected";
                            if (message.transitFare != null && message.hasOwnProperty("transitFare")) {
                                var error = $root.google.type.Money.verify(message.transitFare);
                                if (error)
                                    return "transitFare." + error;
                            }
                            return null;
                        };
    
                        /**
                         * Creates a RouteTravelAdvisory message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.maps.routing.v2.RouteTravelAdvisory
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.maps.routing.v2.RouteTravelAdvisory} RouteTravelAdvisory
                         */
                        RouteTravelAdvisory.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.maps.routing.v2.RouteTravelAdvisory)
                                return object;
                            var message = new $root.google.maps.routing.v2.RouteTravelAdvisory();
                            if (object.tollInfo != null) {
                                if (typeof object.tollInfo !== "object")
                                    throw TypeError(".google.maps.routing.v2.RouteTravelAdvisory.tollInfo: object expected");
                                message.tollInfo = $root.google.maps.routing.v2.TollInfo.fromObject(object.tollInfo);
                            }
                            if (object.speedReadingIntervals) {
                                if (!Array.isArray(object.speedReadingIntervals))
                                    throw TypeError(".google.maps.routing.v2.RouteTravelAdvisory.speedReadingIntervals: array expected");
                                message.speedReadingIntervals = [];
                                for (var i = 0; i < object.speedReadingIntervals.length; ++i) {
                                    if (typeof object.speedReadingIntervals[i] !== "object")
                                        throw TypeError(".google.maps.routing.v2.RouteTravelAdvisory.speedReadingIntervals: object expected");
                                    message.speedReadingIntervals[i] = $root.google.maps.routing.v2.SpeedReadingInterval.fromObject(object.speedReadingIntervals[i]);
                                }
                            }
                            if (object.fuelConsumptionMicroliters != null)
                                if ($util.Long)
                                    (message.fuelConsumptionMicroliters = $util.Long.fromValue(object.fuelConsumptionMicroliters)).unsigned = false;
                                else if (typeof object.fuelConsumptionMicroliters === "string")
                                    message.fuelConsumptionMicroliters = parseInt(object.fuelConsumptionMicroliters, 10);
                                else if (typeof object.fuelConsumptionMicroliters === "number")
                                    message.fuelConsumptionMicroliters = object.fuelConsumptionMicroliters;
                                else if (typeof object.fuelConsumptionMicroliters === "object")
                                    message.fuelConsumptionMicroliters = new $util.LongBits(object.fuelConsumptionMicroliters.low >>> 0, object.fuelConsumptionMicroliters.high >>> 0).toNumber();
                            if (object.routeRestrictionsPartiallyIgnored != null)
                                message.routeRestrictionsPartiallyIgnored = Boolean(object.routeRestrictionsPartiallyIgnored);
                            if (object.transitFare != null) {
                                if (typeof object.transitFare !== "object")
                                    throw TypeError(".google.maps.routing.v2.RouteTravelAdvisory.transitFare: object expected");
                                message.transitFare = $root.google.type.Money.fromObject(object.transitFare);
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a RouteTravelAdvisory message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.maps.routing.v2.RouteTravelAdvisory
                         * @static
                         * @param {google.maps.routing.v2.RouteTravelAdvisory} message RouteTravelAdvisory
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        RouteTravelAdvisory.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.arrays || options.defaults)
                                object.speedReadingIntervals = [];
                            if (options.defaults) {
                                object.tollInfo = null;
                                if ($util.Long) {
                                    var long = new $util.Long(0, 0, false);
                                    object.fuelConsumptionMicroliters = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                                } else
                                    object.fuelConsumptionMicroliters = options.longs === String ? "0" : 0;
                                object.routeRestrictionsPartiallyIgnored = false;
                                object.transitFare = null;
                            }
                            if (message.tollInfo != null && message.hasOwnProperty("tollInfo"))
                                object.tollInfo = $root.google.maps.routing.v2.TollInfo.toObject(message.tollInfo, options);
                            if (message.speedReadingIntervals && message.speedReadingIntervals.length) {
                                object.speedReadingIntervals = [];
                                for (var j = 0; j < message.speedReadingIntervals.length; ++j)
                                    object.speedReadingIntervals[j] = $root.google.maps.routing.v2.SpeedReadingInterval.toObject(message.speedReadingIntervals[j], options);
                            }
                            if (message.fuelConsumptionMicroliters != null && message.hasOwnProperty("fuelConsumptionMicroliters"))
                                if (typeof message.fuelConsumptionMicroliters === "number")
                                    object.fuelConsumptionMicroliters = options.longs === String ? String(message.fuelConsumptionMicroliters) : message.fuelConsumptionMicroliters;
                                else
                                    object.fuelConsumptionMicroliters = options.longs === String ? $util.Long.prototype.toString.call(message.fuelConsumptionMicroliters) : options.longs === Number ? new $util.LongBits(message.fuelConsumptionMicroliters.low >>> 0, message.fuelConsumptionMicroliters.high >>> 0).toNumber() : message.fuelConsumptionMicroliters;
                            if (message.routeRestrictionsPartiallyIgnored != null && message.hasOwnProperty("routeRestrictionsPartiallyIgnored"))
                                object.routeRestrictionsPartiallyIgnored = message.routeRestrictionsPartiallyIgnored;
                            if (message.transitFare != null && message.hasOwnProperty("transitFare"))
                                object.transitFare = $root.google.type.Money.toObject(message.transitFare, options);
                            return object;
                        };
    
                        /**
                         * Converts this RouteTravelAdvisory to JSON.
                         * @function toJSON
                         * @memberof google.maps.routing.v2.RouteTravelAdvisory
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        RouteTravelAdvisory.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for RouteTravelAdvisory
                         * @function getTypeUrl
                         * @memberof google.maps.routing.v2.RouteTravelAdvisory
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        RouteTravelAdvisory.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.maps.routing.v2.RouteTravelAdvisory";
                        };
    
                        return RouteTravelAdvisory;
                    })();
    
                    v2.RouteLegTravelAdvisory = (function() {
    
                        /**
                         * Properties of a RouteLegTravelAdvisory.
                         * @memberof google.maps.routing.v2
                         * @interface IRouteLegTravelAdvisory
                         * @property {google.maps.routing.v2.ITollInfo|null} [tollInfo] RouteLegTravelAdvisory tollInfo
                         * @property {Array.<google.maps.routing.v2.ISpeedReadingInterval>|null} [speedReadingIntervals] RouteLegTravelAdvisory speedReadingIntervals
                         */
    
                        /**
                         * Constructs a new RouteLegTravelAdvisory.
                         * @memberof google.maps.routing.v2
                         * @classdesc Represents a RouteLegTravelAdvisory.
                         * @implements IRouteLegTravelAdvisory
                         * @constructor
                         * @param {google.maps.routing.v2.IRouteLegTravelAdvisory=} [properties] Properties to set
                         */
                        function RouteLegTravelAdvisory(properties) {
                            this.speedReadingIntervals = [];
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * RouteLegTravelAdvisory tollInfo.
                         * @member {google.maps.routing.v2.ITollInfo|null|undefined} tollInfo
                         * @memberof google.maps.routing.v2.RouteLegTravelAdvisory
                         * @instance
                         */
                        RouteLegTravelAdvisory.prototype.tollInfo = null;
    
                        /**
                         * RouteLegTravelAdvisory speedReadingIntervals.
                         * @member {Array.<google.maps.routing.v2.ISpeedReadingInterval>} speedReadingIntervals
                         * @memberof google.maps.routing.v2.RouteLegTravelAdvisory
                         * @instance
                         */
                        RouteLegTravelAdvisory.prototype.speedReadingIntervals = $util.emptyArray;
    
                        /**
                         * Creates a new RouteLegTravelAdvisory instance using the specified properties.
                         * @function create
                         * @memberof google.maps.routing.v2.RouteLegTravelAdvisory
                         * @static
                         * @param {google.maps.routing.v2.IRouteLegTravelAdvisory=} [properties] Properties to set
                         * @returns {google.maps.routing.v2.RouteLegTravelAdvisory} RouteLegTravelAdvisory instance
                         */
                        RouteLegTravelAdvisory.create = function create(properties) {
                            return new RouteLegTravelAdvisory(properties);
                        };
    
                        /**
                         * Encodes the specified RouteLegTravelAdvisory message. Does not implicitly {@link google.maps.routing.v2.RouteLegTravelAdvisory.verify|verify} messages.
                         * @function encode
                         * @memberof google.maps.routing.v2.RouteLegTravelAdvisory
                         * @static
                         * @param {google.maps.routing.v2.IRouteLegTravelAdvisory} message RouteLegTravelAdvisory message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        RouteLegTravelAdvisory.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.tollInfo != null && Object.hasOwnProperty.call(message, "tollInfo"))
                                $root.google.maps.routing.v2.TollInfo.encode(message.tollInfo, writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                            if (message.speedReadingIntervals != null && message.speedReadingIntervals.length)
                                for (var i = 0; i < message.speedReadingIntervals.length; ++i)
                                    $root.google.maps.routing.v2.SpeedReadingInterval.encode(message.speedReadingIntervals[i], writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                            return writer;
                        };
    
                        /**
                         * Encodes the specified RouteLegTravelAdvisory message, length delimited. Does not implicitly {@link google.maps.routing.v2.RouteLegTravelAdvisory.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.maps.routing.v2.RouteLegTravelAdvisory
                         * @static
                         * @param {google.maps.routing.v2.IRouteLegTravelAdvisory} message RouteLegTravelAdvisory message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        RouteLegTravelAdvisory.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a RouteLegTravelAdvisory message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.maps.routing.v2.RouteLegTravelAdvisory
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.maps.routing.v2.RouteLegTravelAdvisory} RouteLegTravelAdvisory
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        RouteLegTravelAdvisory.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.maps.routing.v2.RouteLegTravelAdvisory();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.tollInfo = $root.google.maps.routing.v2.TollInfo.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 2: {
                                        if (!(message.speedReadingIntervals && message.speedReadingIntervals.length))
                                            message.speedReadingIntervals = [];
                                        message.speedReadingIntervals.push($root.google.maps.routing.v2.SpeedReadingInterval.decode(reader, reader.uint32()));
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a RouteLegTravelAdvisory message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.maps.routing.v2.RouteLegTravelAdvisory
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.maps.routing.v2.RouteLegTravelAdvisory} RouteLegTravelAdvisory
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        RouteLegTravelAdvisory.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a RouteLegTravelAdvisory message.
                         * @function verify
                         * @memberof google.maps.routing.v2.RouteLegTravelAdvisory
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        RouteLegTravelAdvisory.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.tollInfo != null && message.hasOwnProperty("tollInfo")) {
                                var error = $root.google.maps.routing.v2.TollInfo.verify(message.tollInfo);
                                if (error)
                                    return "tollInfo." + error;
                            }
                            if (message.speedReadingIntervals != null && message.hasOwnProperty("speedReadingIntervals")) {
                                if (!Array.isArray(message.speedReadingIntervals))
                                    return "speedReadingIntervals: array expected";
                                for (var i = 0; i < message.speedReadingIntervals.length; ++i) {
                                    var error = $root.google.maps.routing.v2.SpeedReadingInterval.verify(message.speedReadingIntervals[i]);
                                    if (error)
                                        return "speedReadingIntervals." + error;
                                }
                            }
                            return null;
                        };
    
                        /**
                         * Creates a RouteLegTravelAdvisory message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.maps.routing.v2.RouteLegTravelAdvisory
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.maps.routing.v2.RouteLegTravelAdvisory} RouteLegTravelAdvisory
                         */
                        RouteLegTravelAdvisory.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.maps.routing.v2.RouteLegTravelAdvisory)
                                return object;
                            var message = new $root.google.maps.routing.v2.RouteLegTravelAdvisory();
                            if (object.tollInfo != null) {
                                if (typeof object.tollInfo !== "object")
                                    throw TypeError(".google.maps.routing.v2.RouteLegTravelAdvisory.tollInfo: object expected");
                                message.tollInfo = $root.google.maps.routing.v2.TollInfo.fromObject(object.tollInfo);
                            }
                            if (object.speedReadingIntervals) {
                                if (!Array.isArray(object.speedReadingIntervals))
                                    throw TypeError(".google.maps.routing.v2.RouteLegTravelAdvisory.speedReadingIntervals: array expected");
                                message.speedReadingIntervals = [];
                                for (var i = 0; i < object.speedReadingIntervals.length; ++i) {
                                    if (typeof object.speedReadingIntervals[i] !== "object")
                                        throw TypeError(".google.maps.routing.v2.RouteLegTravelAdvisory.speedReadingIntervals: object expected");
                                    message.speedReadingIntervals[i] = $root.google.maps.routing.v2.SpeedReadingInterval.fromObject(object.speedReadingIntervals[i]);
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a RouteLegTravelAdvisory message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.maps.routing.v2.RouteLegTravelAdvisory
                         * @static
                         * @param {google.maps.routing.v2.RouteLegTravelAdvisory} message RouteLegTravelAdvisory
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        RouteLegTravelAdvisory.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.arrays || options.defaults)
                                object.speedReadingIntervals = [];
                            if (options.defaults)
                                object.tollInfo = null;
                            if (message.tollInfo != null && message.hasOwnProperty("tollInfo"))
                                object.tollInfo = $root.google.maps.routing.v2.TollInfo.toObject(message.tollInfo, options);
                            if (message.speedReadingIntervals && message.speedReadingIntervals.length) {
                                object.speedReadingIntervals = [];
                                for (var j = 0; j < message.speedReadingIntervals.length; ++j)
                                    object.speedReadingIntervals[j] = $root.google.maps.routing.v2.SpeedReadingInterval.toObject(message.speedReadingIntervals[j], options);
                            }
                            return object;
                        };
    
                        /**
                         * Converts this RouteLegTravelAdvisory to JSON.
                         * @function toJSON
                         * @memberof google.maps.routing.v2.RouteLegTravelAdvisory
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        RouteLegTravelAdvisory.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for RouteLegTravelAdvisory
                         * @function getTypeUrl
                         * @memberof google.maps.routing.v2.RouteLegTravelAdvisory
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        RouteLegTravelAdvisory.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.maps.routing.v2.RouteLegTravelAdvisory";
                        };
    
                        return RouteLegTravelAdvisory;
                    })();
    
                    v2.RouteLegStepTravelAdvisory = (function() {
    
                        /**
                         * Properties of a RouteLegStepTravelAdvisory.
                         * @memberof google.maps.routing.v2
                         * @interface IRouteLegStepTravelAdvisory
                         * @property {Array.<google.maps.routing.v2.ISpeedReadingInterval>|null} [speedReadingIntervals] RouteLegStepTravelAdvisory speedReadingIntervals
                         */
    
                        /**
                         * Constructs a new RouteLegStepTravelAdvisory.
                         * @memberof google.maps.routing.v2
                         * @classdesc Represents a RouteLegStepTravelAdvisory.
                         * @implements IRouteLegStepTravelAdvisory
                         * @constructor
                         * @param {google.maps.routing.v2.IRouteLegStepTravelAdvisory=} [properties] Properties to set
                         */
                        function RouteLegStepTravelAdvisory(properties) {
                            this.speedReadingIntervals = [];
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * RouteLegStepTravelAdvisory speedReadingIntervals.
                         * @member {Array.<google.maps.routing.v2.ISpeedReadingInterval>} speedReadingIntervals
                         * @memberof google.maps.routing.v2.RouteLegStepTravelAdvisory
                         * @instance
                         */
                        RouteLegStepTravelAdvisory.prototype.speedReadingIntervals = $util.emptyArray;
    
                        /**
                         * Creates a new RouteLegStepTravelAdvisory instance using the specified properties.
                         * @function create
                         * @memberof google.maps.routing.v2.RouteLegStepTravelAdvisory
                         * @static
                         * @param {google.maps.routing.v2.IRouteLegStepTravelAdvisory=} [properties] Properties to set
                         * @returns {google.maps.routing.v2.RouteLegStepTravelAdvisory} RouteLegStepTravelAdvisory instance
                         */
                        RouteLegStepTravelAdvisory.create = function create(properties) {
                            return new RouteLegStepTravelAdvisory(properties);
                        };
    
                        /**
                         * Encodes the specified RouteLegStepTravelAdvisory message. Does not implicitly {@link google.maps.routing.v2.RouteLegStepTravelAdvisory.verify|verify} messages.
                         * @function encode
                         * @memberof google.maps.routing.v2.RouteLegStepTravelAdvisory
                         * @static
                         * @param {google.maps.routing.v2.IRouteLegStepTravelAdvisory} message RouteLegStepTravelAdvisory message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        RouteLegStepTravelAdvisory.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.speedReadingIntervals != null && message.speedReadingIntervals.length)
                                for (var i = 0; i < message.speedReadingIntervals.length; ++i)
                                    $root.google.maps.routing.v2.SpeedReadingInterval.encode(message.speedReadingIntervals[i], writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                            return writer;
                        };
    
                        /**
                         * Encodes the specified RouteLegStepTravelAdvisory message, length delimited. Does not implicitly {@link google.maps.routing.v2.RouteLegStepTravelAdvisory.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.maps.routing.v2.RouteLegStepTravelAdvisory
                         * @static
                         * @param {google.maps.routing.v2.IRouteLegStepTravelAdvisory} message RouteLegStepTravelAdvisory message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        RouteLegStepTravelAdvisory.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a RouteLegStepTravelAdvisory message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.maps.routing.v2.RouteLegStepTravelAdvisory
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.maps.routing.v2.RouteLegStepTravelAdvisory} RouteLegStepTravelAdvisory
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        RouteLegStepTravelAdvisory.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.maps.routing.v2.RouteLegStepTravelAdvisory();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        if (!(message.speedReadingIntervals && message.speedReadingIntervals.length))
                                            message.speedReadingIntervals = [];
                                        message.speedReadingIntervals.push($root.google.maps.routing.v2.SpeedReadingInterval.decode(reader, reader.uint32()));
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a RouteLegStepTravelAdvisory message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.maps.routing.v2.RouteLegStepTravelAdvisory
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.maps.routing.v2.RouteLegStepTravelAdvisory} RouteLegStepTravelAdvisory
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        RouteLegStepTravelAdvisory.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a RouteLegStepTravelAdvisory message.
                         * @function verify
                         * @memberof google.maps.routing.v2.RouteLegStepTravelAdvisory
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        RouteLegStepTravelAdvisory.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.speedReadingIntervals != null && message.hasOwnProperty("speedReadingIntervals")) {
                                if (!Array.isArray(message.speedReadingIntervals))
                                    return "speedReadingIntervals: array expected";
                                for (var i = 0; i < message.speedReadingIntervals.length; ++i) {
                                    var error = $root.google.maps.routing.v2.SpeedReadingInterval.verify(message.speedReadingIntervals[i]);
                                    if (error)
                                        return "speedReadingIntervals." + error;
                                }
                            }
                            return null;
                        };
    
                        /**
                         * Creates a RouteLegStepTravelAdvisory message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.maps.routing.v2.RouteLegStepTravelAdvisory
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.maps.routing.v2.RouteLegStepTravelAdvisory} RouteLegStepTravelAdvisory
                         */
                        RouteLegStepTravelAdvisory.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.maps.routing.v2.RouteLegStepTravelAdvisory)
                                return object;
                            var message = new $root.google.maps.routing.v2.RouteLegStepTravelAdvisory();
                            if (object.speedReadingIntervals) {
                                if (!Array.isArray(object.speedReadingIntervals))
                                    throw TypeError(".google.maps.routing.v2.RouteLegStepTravelAdvisory.speedReadingIntervals: array expected");
                                message.speedReadingIntervals = [];
                                for (var i = 0; i < object.speedReadingIntervals.length; ++i) {
                                    if (typeof object.speedReadingIntervals[i] !== "object")
                                        throw TypeError(".google.maps.routing.v2.RouteLegStepTravelAdvisory.speedReadingIntervals: object expected");
                                    message.speedReadingIntervals[i] = $root.google.maps.routing.v2.SpeedReadingInterval.fromObject(object.speedReadingIntervals[i]);
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a RouteLegStepTravelAdvisory message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.maps.routing.v2.RouteLegStepTravelAdvisory
                         * @static
                         * @param {google.maps.routing.v2.RouteLegStepTravelAdvisory} message RouteLegStepTravelAdvisory
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        RouteLegStepTravelAdvisory.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.arrays || options.defaults)
                                object.speedReadingIntervals = [];
                            if (message.speedReadingIntervals && message.speedReadingIntervals.length) {
                                object.speedReadingIntervals = [];
                                for (var j = 0; j < message.speedReadingIntervals.length; ++j)
                                    object.speedReadingIntervals[j] = $root.google.maps.routing.v2.SpeedReadingInterval.toObject(message.speedReadingIntervals[j], options);
                            }
                            return object;
                        };
    
                        /**
                         * Converts this RouteLegStepTravelAdvisory to JSON.
                         * @function toJSON
                         * @memberof google.maps.routing.v2.RouteLegStepTravelAdvisory
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        RouteLegStepTravelAdvisory.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for RouteLegStepTravelAdvisory
                         * @function getTypeUrl
                         * @memberof google.maps.routing.v2.RouteLegStepTravelAdvisory
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        RouteLegStepTravelAdvisory.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.maps.routing.v2.RouteLegStepTravelAdvisory";
                        };
    
                        return RouteLegStepTravelAdvisory;
                    })();
    
                    v2.RouteLeg = (function() {
    
                        /**
                         * Properties of a RouteLeg.
                         * @memberof google.maps.routing.v2
                         * @interface IRouteLeg
                         * @property {number|null} [distanceMeters] RouteLeg distanceMeters
                         * @property {google.protobuf.IDuration|null} [duration] RouteLeg duration
                         * @property {google.protobuf.IDuration|null} [staticDuration] RouteLeg staticDuration
                         * @property {google.maps.routing.v2.IPolyline|null} [polyline] RouteLeg polyline
                         * @property {google.maps.routing.v2.ILocation|null} [startLocation] RouteLeg startLocation
                         * @property {google.maps.routing.v2.ILocation|null} [endLocation] RouteLeg endLocation
                         * @property {Array.<google.maps.routing.v2.IRouteLegStep>|null} [steps] RouteLeg steps
                         * @property {google.maps.routing.v2.IRouteLegTravelAdvisory|null} [travelAdvisory] RouteLeg travelAdvisory
                         * @property {google.maps.routing.v2.RouteLeg.IRouteLegLocalizedValues|null} [localizedValues] RouteLeg localizedValues
                         * @property {google.maps.routing.v2.RouteLeg.IStepsOverview|null} [stepsOverview] RouteLeg stepsOverview
                         */
    
                        /**
                         * Constructs a new RouteLeg.
                         * @memberof google.maps.routing.v2
                         * @classdesc Represents a RouteLeg.
                         * @implements IRouteLeg
                         * @constructor
                         * @param {google.maps.routing.v2.IRouteLeg=} [properties] Properties to set
                         */
                        function RouteLeg(properties) {
                            this.steps = [];
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * RouteLeg distanceMeters.
                         * @member {number} distanceMeters
                         * @memberof google.maps.routing.v2.RouteLeg
                         * @instance
                         */
                        RouteLeg.prototype.distanceMeters = 0;
    
                        /**
                         * RouteLeg duration.
                         * @member {google.protobuf.IDuration|null|undefined} duration
                         * @memberof google.maps.routing.v2.RouteLeg
                         * @instance
                         */
                        RouteLeg.prototype.duration = null;
    
                        /**
                         * RouteLeg staticDuration.
                         * @member {google.protobuf.IDuration|null|undefined} staticDuration
                         * @memberof google.maps.routing.v2.RouteLeg
                         * @instance
                         */
                        RouteLeg.prototype.staticDuration = null;
    
                        /**
                         * RouteLeg polyline.
                         * @member {google.maps.routing.v2.IPolyline|null|undefined} polyline
                         * @memberof google.maps.routing.v2.RouteLeg
                         * @instance
                         */
                        RouteLeg.prototype.polyline = null;
    
                        /**
                         * RouteLeg startLocation.
                         * @member {google.maps.routing.v2.ILocation|null|undefined} startLocation
                         * @memberof google.maps.routing.v2.RouteLeg
                         * @instance
                         */
                        RouteLeg.prototype.startLocation = null;
    
                        /**
                         * RouteLeg endLocation.
                         * @member {google.maps.routing.v2.ILocation|null|undefined} endLocation
                         * @memberof google.maps.routing.v2.RouteLeg
                         * @instance
                         */
                        RouteLeg.prototype.endLocation = null;
    
                        /**
                         * RouteLeg steps.
                         * @member {Array.<google.maps.routing.v2.IRouteLegStep>} steps
                         * @memberof google.maps.routing.v2.RouteLeg
                         * @instance
                         */
                        RouteLeg.prototype.steps = $util.emptyArray;
    
                        /**
                         * RouteLeg travelAdvisory.
                         * @member {google.maps.routing.v2.IRouteLegTravelAdvisory|null|undefined} travelAdvisory
                         * @memberof google.maps.routing.v2.RouteLeg
                         * @instance
                         */
                        RouteLeg.prototype.travelAdvisory = null;
    
                        /**
                         * RouteLeg localizedValues.
                         * @member {google.maps.routing.v2.RouteLeg.IRouteLegLocalizedValues|null|undefined} localizedValues
                         * @memberof google.maps.routing.v2.RouteLeg
                         * @instance
                         */
                        RouteLeg.prototype.localizedValues = null;
    
                        /**
                         * RouteLeg stepsOverview.
                         * @member {google.maps.routing.v2.RouteLeg.IStepsOverview|null|undefined} stepsOverview
                         * @memberof google.maps.routing.v2.RouteLeg
                         * @instance
                         */
                        RouteLeg.prototype.stepsOverview = null;
    
                        /**
                         * Creates a new RouteLeg instance using the specified properties.
                         * @function create
                         * @memberof google.maps.routing.v2.RouteLeg
                         * @static
                         * @param {google.maps.routing.v2.IRouteLeg=} [properties] Properties to set
                         * @returns {google.maps.routing.v2.RouteLeg} RouteLeg instance
                         */
                        RouteLeg.create = function create(properties) {
                            return new RouteLeg(properties);
                        };
    
                        /**
                         * Encodes the specified RouteLeg message. Does not implicitly {@link google.maps.routing.v2.RouteLeg.verify|verify} messages.
                         * @function encode
                         * @memberof google.maps.routing.v2.RouteLeg
                         * @static
                         * @param {google.maps.routing.v2.IRouteLeg} message RouteLeg message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        RouteLeg.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.distanceMeters != null && Object.hasOwnProperty.call(message, "distanceMeters"))
                                writer.uint32(/* id 1, wireType 0 =*/8).int32(message.distanceMeters);
                            if (message.duration != null && Object.hasOwnProperty.call(message, "duration"))
                                $root.google.protobuf.Duration.encode(message.duration, writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                            if (message.staticDuration != null && Object.hasOwnProperty.call(message, "staticDuration"))
                                $root.google.protobuf.Duration.encode(message.staticDuration, writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();
                            if (message.polyline != null && Object.hasOwnProperty.call(message, "polyline"))
                                $root.google.maps.routing.v2.Polyline.encode(message.polyline, writer.uint32(/* id 4, wireType 2 =*/34).fork()).ldelim();
                            if (message.startLocation != null && Object.hasOwnProperty.call(message, "startLocation"))
                                $root.google.maps.routing.v2.Location.encode(message.startLocation, writer.uint32(/* id 5, wireType 2 =*/42).fork()).ldelim();
                            if (message.endLocation != null && Object.hasOwnProperty.call(message, "endLocation"))
                                $root.google.maps.routing.v2.Location.encode(message.endLocation, writer.uint32(/* id 6, wireType 2 =*/50).fork()).ldelim();
                            if (message.steps != null && message.steps.length)
                                for (var i = 0; i < message.steps.length; ++i)
                                    $root.google.maps.routing.v2.RouteLegStep.encode(message.steps[i], writer.uint32(/* id 7, wireType 2 =*/58).fork()).ldelim();
                            if (message.travelAdvisory != null && Object.hasOwnProperty.call(message, "travelAdvisory"))
                                $root.google.maps.routing.v2.RouteLegTravelAdvisory.encode(message.travelAdvisory, writer.uint32(/* id 8, wireType 2 =*/66).fork()).ldelim();
                            if (message.localizedValues != null && Object.hasOwnProperty.call(message, "localizedValues"))
                                $root.google.maps.routing.v2.RouteLeg.RouteLegLocalizedValues.encode(message.localizedValues, writer.uint32(/* id 9, wireType 2 =*/74).fork()).ldelim();
                            if (message.stepsOverview != null && Object.hasOwnProperty.call(message, "stepsOverview"))
                                $root.google.maps.routing.v2.RouteLeg.StepsOverview.encode(message.stepsOverview, writer.uint32(/* id 10, wireType 2 =*/82).fork()).ldelim();
                            return writer;
                        };
    
                        /**
                         * Encodes the specified RouteLeg message, length delimited. Does not implicitly {@link google.maps.routing.v2.RouteLeg.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.maps.routing.v2.RouteLeg
                         * @static
                         * @param {google.maps.routing.v2.IRouteLeg} message RouteLeg message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        RouteLeg.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a RouteLeg message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.maps.routing.v2.RouteLeg
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.maps.routing.v2.RouteLeg} RouteLeg
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        RouteLeg.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.maps.routing.v2.RouteLeg();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.distanceMeters = reader.int32();
                                        break;
                                    }
                                case 2: {
                                        message.duration = $root.google.protobuf.Duration.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 3: {
                                        message.staticDuration = $root.google.protobuf.Duration.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 4: {
                                        message.polyline = $root.google.maps.routing.v2.Polyline.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 5: {
                                        message.startLocation = $root.google.maps.routing.v2.Location.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 6: {
                                        message.endLocation = $root.google.maps.routing.v2.Location.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 7: {
                                        if (!(message.steps && message.steps.length))
                                            message.steps = [];
                                        message.steps.push($root.google.maps.routing.v2.RouteLegStep.decode(reader, reader.uint32()));
                                        break;
                                    }
                                case 8: {
                                        message.travelAdvisory = $root.google.maps.routing.v2.RouteLegTravelAdvisory.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 9: {
                                        message.localizedValues = $root.google.maps.routing.v2.RouteLeg.RouteLegLocalizedValues.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 10: {
                                        message.stepsOverview = $root.google.maps.routing.v2.RouteLeg.StepsOverview.decode(reader, reader.uint32());
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a RouteLeg message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.maps.routing.v2.RouteLeg
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.maps.routing.v2.RouteLeg} RouteLeg
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        RouteLeg.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a RouteLeg message.
                         * @function verify
                         * @memberof google.maps.routing.v2.RouteLeg
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        RouteLeg.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.distanceMeters != null && message.hasOwnProperty("distanceMeters"))
                                if (!$util.isInteger(message.distanceMeters))
                                    return "distanceMeters: integer expected";
                            if (message.duration != null && message.hasOwnProperty("duration")) {
                                var error = $root.google.protobuf.Duration.verify(message.duration);
                                if (error)
                                    return "duration." + error;
                            }
                            if (message.staticDuration != null && message.hasOwnProperty("staticDuration")) {
                                var error = $root.google.protobuf.Duration.verify(message.staticDuration);
                                if (error)
                                    return "staticDuration." + error;
                            }
                            if (message.polyline != null && message.hasOwnProperty("polyline")) {
                                var error = $root.google.maps.routing.v2.Polyline.verify(message.polyline);
                                if (error)
                                    return "polyline." + error;
                            }
                            if (message.startLocation != null && message.hasOwnProperty("startLocation")) {
                                var error = $root.google.maps.routing.v2.Location.verify(message.startLocation);
                                if (error)
                                    return "startLocation." + error;
                            }
                            if (message.endLocation != null && message.hasOwnProperty("endLocation")) {
                                var error = $root.google.maps.routing.v2.Location.verify(message.endLocation);
                                if (error)
                                    return "endLocation." + error;
                            }
                            if (message.steps != null && message.hasOwnProperty("steps")) {
                                if (!Array.isArray(message.steps))
                                    return "steps: array expected";
                                for (var i = 0; i < message.steps.length; ++i) {
                                    var error = $root.google.maps.routing.v2.RouteLegStep.verify(message.steps[i]);
                                    if (error)
                                        return "steps." + error;
                                }
                            }
                            if (message.travelAdvisory != null && message.hasOwnProperty("travelAdvisory")) {
                                var error = $root.google.maps.routing.v2.RouteLegTravelAdvisory.verify(message.travelAdvisory);
                                if (error)
                                    return "travelAdvisory." + error;
                            }
                            if (message.localizedValues != null && message.hasOwnProperty("localizedValues")) {
                                var error = $root.google.maps.routing.v2.RouteLeg.RouteLegLocalizedValues.verify(message.localizedValues);
                                if (error)
                                    return "localizedValues." + error;
                            }
                            if (message.stepsOverview != null && message.hasOwnProperty("stepsOverview")) {
                                var error = $root.google.maps.routing.v2.RouteLeg.StepsOverview.verify(message.stepsOverview);
                                if (error)
                                    return "stepsOverview." + error;
                            }
                            return null;
                        };
    
                        /**
                         * Creates a RouteLeg message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.maps.routing.v2.RouteLeg
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.maps.routing.v2.RouteLeg} RouteLeg
                         */
                        RouteLeg.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.maps.routing.v2.RouteLeg)
                                return object;
                            var message = new $root.google.maps.routing.v2.RouteLeg();
                            if (object.distanceMeters != null)
                                message.distanceMeters = object.distanceMeters | 0;
                            if (object.duration != null) {
                                if (typeof object.duration !== "object")
                                    throw TypeError(".google.maps.routing.v2.RouteLeg.duration: object expected");
                                message.duration = $root.google.protobuf.Duration.fromObject(object.duration);
                            }
                            if (object.staticDuration != null) {
                                if (typeof object.staticDuration !== "object")
                                    throw TypeError(".google.maps.routing.v2.RouteLeg.staticDuration: object expected");
                                message.staticDuration = $root.google.protobuf.Duration.fromObject(object.staticDuration);
                            }
                            if (object.polyline != null) {
                                if (typeof object.polyline !== "object")
                                    throw TypeError(".google.maps.routing.v2.RouteLeg.polyline: object expected");
                                message.polyline = $root.google.maps.routing.v2.Polyline.fromObject(object.polyline);
                            }
                            if (object.startLocation != null) {
                                if (typeof object.startLocation !== "object")
                                    throw TypeError(".google.maps.routing.v2.RouteLeg.startLocation: object expected");
                                message.startLocation = $root.google.maps.routing.v2.Location.fromObject(object.startLocation);
                            }
                            if (object.endLocation != null) {
                                if (typeof object.endLocation !== "object")
                                    throw TypeError(".google.maps.routing.v2.RouteLeg.endLocation: object expected");
                                message.endLocation = $root.google.maps.routing.v2.Location.fromObject(object.endLocation);
                            }
                            if (object.steps) {
                                if (!Array.isArray(object.steps))
                                    throw TypeError(".google.maps.routing.v2.RouteLeg.steps: array expected");
                                message.steps = [];
                                for (var i = 0; i < object.steps.length; ++i) {
                                    if (typeof object.steps[i] !== "object")
                                        throw TypeError(".google.maps.routing.v2.RouteLeg.steps: object expected");
                                    message.steps[i] = $root.google.maps.routing.v2.RouteLegStep.fromObject(object.steps[i]);
                                }
                            }
                            if (object.travelAdvisory != null) {
                                if (typeof object.travelAdvisory !== "object")
                                    throw TypeError(".google.maps.routing.v2.RouteLeg.travelAdvisory: object expected");
                                message.travelAdvisory = $root.google.maps.routing.v2.RouteLegTravelAdvisory.fromObject(object.travelAdvisory);
                            }
                            if (object.localizedValues != null) {
                                if (typeof object.localizedValues !== "object")
                                    throw TypeError(".google.maps.routing.v2.RouteLeg.localizedValues: object expected");
                                message.localizedValues = $root.google.maps.routing.v2.RouteLeg.RouteLegLocalizedValues.fromObject(object.localizedValues);
                            }
                            if (object.stepsOverview != null) {
                                if (typeof object.stepsOverview !== "object")
                                    throw TypeError(".google.maps.routing.v2.RouteLeg.stepsOverview: object expected");
                                message.stepsOverview = $root.google.maps.routing.v2.RouteLeg.StepsOverview.fromObject(object.stepsOverview);
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a RouteLeg message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.maps.routing.v2.RouteLeg
                         * @static
                         * @param {google.maps.routing.v2.RouteLeg} message RouteLeg
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        RouteLeg.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.arrays || options.defaults)
                                object.steps = [];
                            if (options.defaults) {
                                object.distanceMeters = 0;
                                object.duration = null;
                                object.staticDuration = null;
                                object.polyline = null;
                                object.startLocation = null;
                                object.endLocation = null;
                                object.travelAdvisory = null;
                                object.localizedValues = null;
                                object.stepsOverview = null;
                            }
                            if (message.distanceMeters != null && message.hasOwnProperty("distanceMeters"))
                                object.distanceMeters = message.distanceMeters;
                            if (message.duration != null && message.hasOwnProperty("duration"))
                                object.duration = $root.google.protobuf.Duration.toObject(message.duration, options);
                            if (message.staticDuration != null && message.hasOwnProperty("staticDuration"))
                                object.staticDuration = $root.google.protobuf.Duration.toObject(message.staticDuration, options);
                            if (message.polyline != null && message.hasOwnProperty("polyline"))
                                object.polyline = $root.google.maps.routing.v2.Polyline.toObject(message.polyline, options);
                            if (message.startLocation != null && message.hasOwnProperty("startLocation"))
                                object.startLocation = $root.google.maps.routing.v2.Location.toObject(message.startLocation, options);
                            if (message.endLocation != null && message.hasOwnProperty("endLocation"))
                                object.endLocation = $root.google.maps.routing.v2.Location.toObject(message.endLocation, options);
                            if (message.steps && message.steps.length) {
                                object.steps = [];
                                for (var j = 0; j < message.steps.length; ++j)
                                    object.steps[j] = $root.google.maps.routing.v2.RouteLegStep.toObject(message.steps[j], options);
                            }
                            if (message.travelAdvisory != null && message.hasOwnProperty("travelAdvisory"))
                                object.travelAdvisory = $root.google.maps.routing.v2.RouteLegTravelAdvisory.toObject(message.travelAdvisory, options);
                            if (message.localizedValues != null && message.hasOwnProperty("localizedValues"))
                                object.localizedValues = $root.google.maps.routing.v2.RouteLeg.RouteLegLocalizedValues.toObject(message.localizedValues, options);
                            if (message.stepsOverview != null && message.hasOwnProperty("stepsOverview"))
                                object.stepsOverview = $root.google.maps.routing.v2.RouteLeg.StepsOverview.toObject(message.stepsOverview, options);
                            return object;
                        };
    
                        /**
                         * Converts this RouteLeg to JSON.
                         * @function toJSON
                         * @memberof google.maps.routing.v2.RouteLeg
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        RouteLeg.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for RouteLeg
                         * @function getTypeUrl
                         * @memberof google.maps.routing.v2.RouteLeg
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        RouteLeg.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.maps.routing.v2.RouteLeg";
                        };
    
                        RouteLeg.RouteLegLocalizedValues = (function() {
    
                            /**
                             * Properties of a RouteLegLocalizedValues.
                             * @memberof google.maps.routing.v2.RouteLeg
                             * @interface IRouteLegLocalizedValues
                             * @property {google.type.ILocalizedText|null} [distance] RouteLegLocalizedValues distance
                             * @property {google.type.ILocalizedText|null} [duration] RouteLegLocalizedValues duration
                             * @property {google.type.ILocalizedText|null} [staticDuration] RouteLegLocalizedValues staticDuration
                             */
    
                            /**
                             * Constructs a new RouteLegLocalizedValues.
                             * @memberof google.maps.routing.v2.RouteLeg
                             * @classdesc Represents a RouteLegLocalizedValues.
                             * @implements IRouteLegLocalizedValues
                             * @constructor
                             * @param {google.maps.routing.v2.RouteLeg.IRouteLegLocalizedValues=} [properties] Properties to set
                             */
                            function RouteLegLocalizedValues(properties) {
                                if (properties)
                                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                        if (properties[keys[i]] != null)
                                            this[keys[i]] = properties[keys[i]];
                            }
    
                            /**
                             * RouteLegLocalizedValues distance.
                             * @member {google.type.ILocalizedText|null|undefined} distance
                             * @memberof google.maps.routing.v2.RouteLeg.RouteLegLocalizedValues
                             * @instance
                             */
                            RouteLegLocalizedValues.prototype.distance = null;
    
                            /**
                             * RouteLegLocalizedValues duration.
                             * @member {google.type.ILocalizedText|null|undefined} duration
                             * @memberof google.maps.routing.v2.RouteLeg.RouteLegLocalizedValues
                             * @instance
                             */
                            RouteLegLocalizedValues.prototype.duration = null;
    
                            /**
                             * RouteLegLocalizedValues staticDuration.
                             * @member {google.type.ILocalizedText|null|undefined} staticDuration
                             * @memberof google.maps.routing.v2.RouteLeg.RouteLegLocalizedValues
                             * @instance
                             */
                            RouteLegLocalizedValues.prototype.staticDuration = null;
    
                            /**
                             * Creates a new RouteLegLocalizedValues instance using the specified properties.
                             * @function create
                             * @memberof google.maps.routing.v2.RouteLeg.RouteLegLocalizedValues
                             * @static
                             * @param {google.maps.routing.v2.RouteLeg.IRouteLegLocalizedValues=} [properties] Properties to set
                             * @returns {google.maps.routing.v2.RouteLeg.RouteLegLocalizedValues} RouteLegLocalizedValues instance
                             */
                            RouteLegLocalizedValues.create = function create(properties) {
                                return new RouteLegLocalizedValues(properties);
                            };
    
                            /**
                             * Encodes the specified RouteLegLocalizedValues message. Does not implicitly {@link google.maps.routing.v2.RouteLeg.RouteLegLocalizedValues.verify|verify} messages.
                             * @function encode
                             * @memberof google.maps.routing.v2.RouteLeg.RouteLegLocalizedValues
                             * @static
                             * @param {google.maps.routing.v2.RouteLeg.IRouteLegLocalizedValues} message RouteLegLocalizedValues message or plain object to encode
                             * @param {$protobuf.Writer} [writer] Writer to encode to
                             * @returns {$protobuf.Writer} Writer
                             */
                            RouteLegLocalizedValues.encode = function encode(message, writer) {
                                if (!writer)
                                    writer = $Writer.create();
                                if (message.distance != null && Object.hasOwnProperty.call(message, "distance"))
                                    $root.google.type.LocalizedText.encode(message.distance, writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                                if (message.duration != null && Object.hasOwnProperty.call(message, "duration"))
                                    $root.google.type.LocalizedText.encode(message.duration, writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                                if (message.staticDuration != null && Object.hasOwnProperty.call(message, "staticDuration"))
                                    $root.google.type.LocalizedText.encode(message.staticDuration, writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();
                                return writer;
                            };
    
                            /**
                             * Encodes the specified RouteLegLocalizedValues message, length delimited. Does not implicitly {@link google.maps.routing.v2.RouteLeg.RouteLegLocalizedValues.verify|verify} messages.
                             * @function encodeDelimited
                             * @memberof google.maps.routing.v2.RouteLeg.RouteLegLocalizedValues
                             * @static
                             * @param {google.maps.routing.v2.RouteLeg.IRouteLegLocalizedValues} message RouteLegLocalizedValues message or plain object to encode
                             * @param {$protobuf.Writer} [writer] Writer to encode to
                             * @returns {$protobuf.Writer} Writer
                             */
                            RouteLegLocalizedValues.encodeDelimited = function encodeDelimited(message, writer) {
                                return this.encode(message, writer).ldelim();
                            };
    
                            /**
                             * Decodes a RouteLegLocalizedValues message from the specified reader or buffer.
                             * @function decode
                             * @memberof google.maps.routing.v2.RouteLeg.RouteLegLocalizedValues
                             * @static
                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                             * @param {number} [length] Message length if known beforehand
                             * @returns {google.maps.routing.v2.RouteLeg.RouteLegLocalizedValues} RouteLegLocalizedValues
                             * @throws {Error} If the payload is not a reader or valid buffer
                             * @throws {$protobuf.util.ProtocolError} If required fields are missing
                             */
                            RouteLegLocalizedValues.decode = function decode(reader, length) {
                                if (!(reader instanceof $Reader))
                                    reader = $Reader.create(reader);
                                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.maps.routing.v2.RouteLeg.RouteLegLocalizedValues();
                                while (reader.pos < end) {
                                    var tag = reader.uint32();
                                    switch (tag >>> 3) {
                                    case 1: {
                                            message.distance = $root.google.type.LocalizedText.decode(reader, reader.uint32());
                                            break;
                                        }
                                    case 2: {
                                            message.duration = $root.google.type.LocalizedText.decode(reader, reader.uint32());
                                            break;
                                        }
                                    case 3: {
                                            message.staticDuration = $root.google.type.LocalizedText.decode(reader, reader.uint32());
                                            break;
                                        }
                                    default:
                                        reader.skipType(tag & 7);
                                        break;
                                    }
                                }
                                return message;
                            };
    
                            /**
                             * Decodes a RouteLegLocalizedValues message from the specified reader or buffer, length delimited.
                             * @function decodeDelimited
                             * @memberof google.maps.routing.v2.RouteLeg.RouteLegLocalizedValues
                             * @static
                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                             * @returns {google.maps.routing.v2.RouteLeg.RouteLegLocalizedValues} RouteLegLocalizedValues
                             * @throws {Error} If the payload is not a reader or valid buffer
                             * @throws {$protobuf.util.ProtocolError} If required fields are missing
                             */
                            RouteLegLocalizedValues.decodeDelimited = function decodeDelimited(reader) {
                                if (!(reader instanceof $Reader))
                                    reader = new $Reader(reader);
                                return this.decode(reader, reader.uint32());
                            };
    
                            /**
                             * Verifies a RouteLegLocalizedValues message.
                             * @function verify
                             * @memberof google.maps.routing.v2.RouteLeg.RouteLegLocalizedValues
                             * @static
                             * @param {Object.<string,*>} message Plain object to verify
                             * @returns {string|null} `null` if valid, otherwise the reason why it is not
                             */
                            RouteLegLocalizedValues.verify = function verify(message) {
                                if (typeof message !== "object" || message === null)
                                    return "object expected";
                                if (message.distance != null && message.hasOwnProperty("distance")) {
                                    var error = $root.google.type.LocalizedText.verify(message.distance);
                                    if (error)
                                        return "distance." + error;
                                }
                                if (message.duration != null && message.hasOwnProperty("duration")) {
                                    var error = $root.google.type.LocalizedText.verify(message.duration);
                                    if (error)
                                        return "duration." + error;
                                }
                                if (message.staticDuration != null && message.hasOwnProperty("staticDuration")) {
                                    var error = $root.google.type.LocalizedText.verify(message.staticDuration);
                                    if (error)
                                        return "staticDuration." + error;
                                }
                                return null;
                            };
    
                            /**
                             * Creates a RouteLegLocalizedValues message from a plain object. Also converts values to their respective internal types.
                             * @function fromObject
                             * @memberof google.maps.routing.v2.RouteLeg.RouteLegLocalizedValues
                             * @static
                             * @param {Object.<string,*>} object Plain object
                             * @returns {google.maps.routing.v2.RouteLeg.RouteLegLocalizedValues} RouteLegLocalizedValues
                             */
                            RouteLegLocalizedValues.fromObject = function fromObject(object) {
                                if (object instanceof $root.google.maps.routing.v2.RouteLeg.RouteLegLocalizedValues)
                                    return object;
                                var message = new $root.google.maps.routing.v2.RouteLeg.RouteLegLocalizedValues();
                                if (object.distance != null) {
                                    if (typeof object.distance !== "object")
                                        throw TypeError(".google.maps.routing.v2.RouteLeg.RouteLegLocalizedValues.distance: object expected");
                                    message.distance = $root.google.type.LocalizedText.fromObject(object.distance);
                                }
                                if (object.duration != null) {
                                    if (typeof object.duration !== "object")
                                        throw TypeError(".google.maps.routing.v2.RouteLeg.RouteLegLocalizedValues.duration: object expected");
                                    message.duration = $root.google.type.LocalizedText.fromObject(object.duration);
                                }
                                if (object.staticDuration != null) {
                                    if (typeof object.staticDuration !== "object")
                                        throw TypeError(".google.maps.routing.v2.RouteLeg.RouteLegLocalizedValues.staticDuration: object expected");
                                    message.staticDuration = $root.google.type.LocalizedText.fromObject(object.staticDuration);
                                }
                                return message;
                            };
    
                            /**
                             * Creates a plain object from a RouteLegLocalizedValues message. Also converts values to other types if specified.
                             * @function toObject
                             * @memberof google.maps.routing.v2.RouteLeg.RouteLegLocalizedValues
                             * @static
                             * @param {google.maps.routing.v2.RouteLeg.RouteLegLocalizedValues} message RouteLegLocalizedValues
                             * @param {$protobuf.IConversionOptions} [options] Conversion options
                             * @returns {Object.<string,*>} Plain object
                             */
                            RouteLegLocalizedValues.toObject = function toObject(message, options) {
                                if (!options)
                                    options = {};
                                var object = {};
                                if (options.defaults) {
                                    object.distance = null;
                                    object.duration = null;
                                    object.staticDuration = null;
                                }
                                if (message.distance != null && message.hasOwnProperty("distance"))
                                    object.distance = $root.google.type.LocalizedText.toObject(message.distance, options);
                                if (message.duration != null && message.hasOwnProperty("duration"))
                                    object.duration = $root.google.type.LocalizedText.toObject(message.duration, options);
                                if (message.staticDuration != null && message.hasOwnProperty("staticDuration"))
                                    object.staticDuration = $root.google.type.LocalizedText.toObject(message.staticDuration, options);
                                return object;
                            };
    
                            /**
                             * Converts this RouteLegLocalizedValues to JSON.
                             * @function toJSON
                             * @memberof google.maps.routing.v2.RouteLeg.RouteLegLocalizedValues
                             * @instance
                             * @returns {Object.<string,*>} JSON object
                             */
                            RouteLegLocalizedValues.prototype.toJSON = function toJSON() {
                                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                            };
    
                            /**
                             * Gets the default type url for RouteLegLocalizedValues
                             * @function getTypeUrl
                             * @memberof google.maps.routing.v2.RouteLeg.RouteLegLocalizedValues
                             * @static
                             * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                             * @returns {string} The default type url
                             */
                            RouteLegLocalizedValues.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                                if (typeUrlPrefix === undefined) {
                                    typeUrlPrefix = "type.googleapis.com";
                                }
                                return typeUrlPrefix + "/google.maps.routing.v2.RouteLeg.RouteLegLocalizedValues";
                            };
    
                            return RouteLegLocalizedValues;
                        })();
    
                        RouteLeg.StepsOverview = (function() {
    
                            /**
                             * Properties of a StepsOverview.
                             * @memberof google.maps.routing.v2.RouteLeg
                             * @interface IStepsOverview
                             * @property {Array.<google.maps.routing.v2.RouteLeg.StepsOverview.IMultiModalSegment>|null} [multiModalSegments] StepsOverview multiModalSegments
                             */
    
                            /**
                             * Constructs a new StepsOverview.
                             * @memberof google.maps.routing.v2.RouteLeg
                             * @classdesc Represents a StepsOverview.
                             * @implements IStepsOverview
                             * @constructor
                             * @param {google.maps.routing.v2.RouteLeg.IStepsOverview=} [properties] Properties to set
                             */
                            function StepsOverview(properties) {
                                this.multiModalSegments = [];
                                if (properties)
                                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                        if (properties[keys[i]] != null)
                                            this[keys[i]] = properties[keys[i]];
                            }
    
                            /**
                             * StepsOverview multiModalSegments.
                             * @member {Array.<google.maps.routing.v2.RouteLeg.StepsOverview.IMultiModalSegment>} multiModalSegments
                             * @memberof google.maps.routing.v2.RouteLeg.StepsOverview
                             * @instance
                             */
                            StepsOverview.prototype.multiModalSegments = $util.emptyArray;
    
                            /**
                             * Creates a new StepsOverview instance using the specified properties.
                             * @function create
                             * @memberof google.maps.routing.v2.RouteLeg.StepsOverview
                             * @static
                             * @param {google.maps.routing.v2.RouteLeg.IStepsOverview=} [properties] Properties to set
                             * @returns {google.maps.routing.v2.RouteLeg.StepsOverview} StepsOverview instance
                             */
                            StepsOverview.create = function create(properties) {
                                return new StepsOverview(properties);
                            };
    
                            /**
                             * Encodes the specified StepsOverview message. Does not implicitly {@link google.maps.routing.v2.RouteLeg.StepsOverview.verify|verify} messages.
                             * @function encode
                             * @memberof google.maps.routing.v2.RouteLeg.StepsOverview
                             * @static
                             * @param {google.maps.routing.v2.RouteLeg.IStepsOverview} message StepsOverview message or plain object to encode
                             * @param {$protobuf.Writer} [writer] Writer to encode to
                             * @returns {$protobuf.Writer} Writer
                             */
                            StepsOverview.encode = function encode(message, writer) {
                                if (!writer)
                                    writer = $Writer.create();
                                if (message.multiModalSegments != null && message.multiModalSegments.length)
                                    for (var i = 0; i < message.multiModalSegments.length; ++i)
                                        $root.google.maps.routing.v2.RouteLeg.StepsOverview.MultiModalSegment.encode(message.multiModalSegments[i], writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                                return writer;
                            };
    
                            /**
                             * Encodes the specified StepsOverview message, length delimited. Does not implicitly {@link google.maps.routing.v2.RouteLeg.StepsOverview.verify|verify} messages.
                             * @function encodeDelimited
                             * @memberof google.maps.routing.v2.RouteLeg.StepsOverview
                             * @static
                             * @param {google.maps.routing.v2.RouteLeg.IStepsOverview} message StepsOverview message or plain object to encode
                             * @param {$protobuf.Writer} [writer] Writer to encode to
                             * @returns {$protobuf.Writer} Writer
                             */
                            StepsOverview.encodeDelimited = function encodeDelimited(message, writer) {
                                return this.encode(message, writer).ldelim();
                            };
    
                            /**
                             * Decodes a StepsOverview message from the specified reader or buffer.
                             * @function decode
                             * @memberof google.maps.routing.v2.RouteLeg.StepsOverview
                             * @static
                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                             * @param {number} [length] Message length if known beforehand
                             * @returns {google.maps.routing.v2.RouteLeg.StepsOverview} StepsOverview
                             * @throws {Error} If the payload is not a reader or valid buffer
                             * @throws {$protobuf.util.ProtocolError} If required fields are missing
                             */
                            StepsOverview.decode = function decode(reader, length) {
                                if (!(reader instanceof $Reader))
                                    reader = $Reader.create(reader);
                                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.maps.routing.v2.RouteLeg.StepsOverview();
                                while (reader.pos < end) {
                                    var tag = reader.uint32();
                                    switch (tag >>> 3) {
                                    case 1: {
                                            if (!(message.multiModalSegments && message.multiModalSegments.length))
                                                message.multiModalSegments = [];
                                            message.multiModalSegments.push($root.google.maps.routing.v2.RouteLeg.StepsOverview.MultiModalSegment.decode(reader, reader.uint32()));
                                            break;
                                        }
                                    default:
                                        reader.skipType(tag & 7);
                                        break;
                                    }
                                }
                                return message;
                            };
    
                            /**
                             * Decodes a StepsOverview message from the specified reader or buffer, length delimited.
                             * @function decodeDelimited
                             * @memberof google.maps.routing.v2.RouteLeg.StepsOverview
                             * @static
                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                             * @returns {google.maps.routing.v2.RouteLeg.StepsOverview} StepsOverview
                             * @throws {Error} If the payload is not a reader or valid buffer
                             * @throws {$protobuf.util.ProtocolError} If required fields are missing
                             */
                            StepsOverview.decodeDelimited = function decodeDelimited(reader) {
                                if (!(reader instanceof $Reader))
                                    reader = new $Reader(reader);
                                return this.decode(reader, reader.uint32());
                            };
    
                            /**
                             * Verifies a StepsOverview message.
                             * @function verify
                             * @memberof google.maps.routing.v2.RouteLeg.StepsOverview
                             * @static
                             * @param {Object.<string,*>} message Plain object to verify
                             * @returns {string|null} `null` if valid, otherwise the reason why it is not
                             */
                            StepsOverview.verify = function verify(message) {
                                if (typeof message !== "object" || message === null)
                                    return "object expected";
                                if (message.multiModalSegments != null && message.hasOwnProperty("multiModalSegments")) {
                                    if (!Array.isArray(message.multiModalSegments))
                                        return "multiModalSegments: array expected";
                                    for (var i = 0; i < message.multiModalSegments.length; ++i) {
                                        var error = $root.google.maps.routing.v2.RouteLeg.StepsOverview.MultiModalSegment.verify(message.multiModalSegments[i]);
                                        if (error)
                                            return "multiModalSegments." + error;
                                    }
                                }
                                return null;
                            };
    
                            /**
                             * Creates a StepsOverview message from a plain object. Also converts values to their respective internal types.
                             * @function fromObject
                             * @memberof google.maps.routing.v2.RouteLeg.StepsOverview
                             * @static
                             * @param {Object.<string,*>} object Plain object
                             * @returns {google.maps.routing.v2.RouteLeg.StepsOverview} StepsOverview
                             */
                            StepsOverview.fromObject = function fromObject(object) {
                                if (object instanceof $root.google.maps.routing.v2.RouteLeg.StepsOverview)
                                    return object;
                                var message = new $root.google.maps.routing.v2.RouteLeg.StepsOverview();
                                if (object.multiModalSegments) {
                                    if (!Array.isArray(object.multiModalSegments))
                                        throw TypeError(".google.maps.routing.v2.RouteLeg.StepsOverview.multiModalSegments: array expected");
                                    message.multiModalSegments = [];
                                    for (var i = 0; i < object.multiModalSegments.length; ++i) {
                                        if (typeof object.multiModalSegments[i] !== "object")
                                            throw TypeError(".google.maps.routing.v2.RouteLeg.StepsOverview.multiModalSegments: object expected");
                                        message.multiModalSegments[i] = $root.google.maps.routing.v2.RouteLeg.StepsOverview.MultiModalSegment.fromObject(object.multiModalSegments[i]);
                                    }
                                }
                                return message;
                            };
    
                            /**
                             * Creates a plain object from a StepsOverview message. Also converts values to other types if specified.
                             * @function toObject
                             * @memberof google.maps.routing.v2.RouteLeg.StepsOverview
                             * @static
                             * @param {google.maps.routing.v2.RouteLeg.StepsOverview} message StepsOverview
                             * @param {$protobuf.IConversionOptions} [options] Conversion options
                             * @returns {Object.<string,*>} Plain object
                             */
                            StepsOverview.toObject = function toObject(message, options) {
                                if (!options)
                                    options = {};
                                var object = {};
                                if (options.arrays || options.defaults)
                                    object.multiModalSegments = [];
                                if (message.multiModalSegments && message.multiModalSegments.length) {
                                    object.multiModalSegments = [];
                                    for (var j = 0; j < message.multiModalSegments.length; ++j)
                                        object.multiModalSegments[j] = $root.google.maps.routing.v2.RouteLeg.StepsOverview.MultiModalSegment.toObject(message.multiModalSegments[j], options);
                                }
                                return object;
                            };
    
                            /**
                             * Converts this StepsOverview to JSON.
                             * @function toJSON
                             * @memberof google.maps.routing.v2.RouteLeg.StepsOverview
                             * @instance
                             * @returns {Object.<string,*>} JSON object
                             */
                            StepsOverview.prototype.toJSON = function toJSON() {
                                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                            };
    
                            /**
                             * Gets the default type url for StepsOverview
                             * @function getTypeUrl
                             * @memberof google.maps.routing.v2.RouteLeg.StepsOverview
                             * @static
                             * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                             * @returns {string} The default type url
                             */
                            StepsOverview.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                                if (typeUrlPrefix === undefined) {
                                    typeUrlPrefix = "type.googleapis.com";
                                }
                                return typeUrlPrefix + "/google.maps.routing.v2.RouteLeg.StepsOverview";
                            };
    
                            StepsOverview.MultiModalSegment = (function() {
    
                                /**
                                 * Properties of a MultiModalSegment.
                                 * @memberof google.maps.routing.v2.RouteLeg.StepsOverview
                                 * @interface IMultiModalSegment
                                 * @property {number|null} [stepStartIndex] MultiModalSegment stepStartIndex
                                 * @property {number|null} [stepEndIndex] MultiModalSegment stepEndIndex
                                 * @property {google.maps.routing.v2.INavigationInstruction|null} [navigationInstruction] MultiModalSegment navigationInstruction
                                 * @property {google.maps.routing.v2.RouteTravelMode|null} [travelMode] MultiModalSegment travelMode
                                 */
    
                                /**
                                 * Constructs a new MultiModalSegment.
                                 * @memberof google.maps.routing.v2.RouteLeg.StepsOverview
                                 * @classdesc Represents a MultiModalSegment.
                                 * @implements IMultiModalSegment
                                 * @constructor
                                 * @param {google.maps.routing.v2.RouteLeg.StepsOverview.IMultiModalSegment=} [properties] Properties to set
                                 */
                                function MultiModalSegment(properties) {
                                    if (properties)
                                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                            if (properties[keys[i]] != null)
                                                this[keys[i]] = properties[keys[i]];
                                }
    
                                /**
                                 * MultiModalSegment stepStartIndex.
                                 * @member {number|null|undefined} stepStartIndex
                                 * @memberof google.maps.routing.v2.RouteLeg.StepsOverview.MultiModalSegment
                                 * @instance
                                 */
                                MultiModalSegment.prototype.stepStartIndex = null;
    
                                /**
                                 * MultiModalSegment stepEndIndex.
                                 * @member {number|null|undefined} stepEndIndex
                                 * @memberof google.maps.routing.v2.RouteLeg.StepsOverview.MultiModalSegment
                                 * @instance
                                 */
                                MultiModalSegment.prototype.stepEndIndex = null;
    
                                /**
                                 * MultiModalSegment navigationInstruction.
                                 * @member {google.maps.routing.v2.INavigationInstruction|null|undefined} navigationInstruction
                                 * @memberof google.maps.routing.v2.RouteLeg.StepsOverview.MultiModalSegment
                                 * @instance
                                 */
                                MultiModalSegment.prototype.navigationInstruction = null;
    
                                /**
                                 * MultiModalSegment travelMode.
                                 * @member {google.maps.routing.v2.RouteTravelMode} travelMode
                                 * @memberof google.maps.routing.v2.RouteLeg.StepsOverview.MultiModalSegment
                                 * @instance
                                 */
                                MultiModalSegment.prototype.travelMode = 0;
    
                                // OneOf field names bound to virtual getters and setters
                                var $oneOfFields;
    
                                /**
                                 * MultiModalSegment _stepStartIndex.
                                 * @member {"stepStartIndex"|undefined} _stepStartIndex
                                 * @memberof google.maps.routing.v2.RouteLeg.StepsOverview.MultiModalSegment
                                 * @instance
                                 */
                                Object.defineProperty(MultiModalSegment.prototype, "_stepStartIndex", {
                                    get: $util.oneOfGetter($oneOfFields = ["stepStartIndex"]),
                                    set: $util.oneOfSetter($oneOfFields)
                                });
    
                                /**
                                 * MultiModalSegment _stepEndIndex.
                                 * @member {"stepEndIndex"|undefined} _stepEndIndex
                                 * @memberof google.maps.routing.v2.RouteLeg.StepsOverview.MultiModalSegment
                                 * @instance
                                 */
                                Object.defineProperty(MultiModalSegment.prototype, "_stepEndIndex", {
                                    get: $util.oneOfGetter($oneOfFields = ["stepEndIndex"]),
                                    set: $util.oneOfSetter($oneOfFields)
                                });
    
                                /**
                                 * Creates a new MultiModalSegment instance using the specified properties.
                                 * @function create
                                 * @memberof google.maps.routing.v2.RouteLeg.StepsOverview.MultiModalSegment
                                 * @static
                                 * @param {google.maps.routing.v2.RouteLeg.StepsOverview.IMultiModalSegment=} [properties] Properties to set
                                 * @returns {google.maps.routing.v2.RouteLeg.StepsOverview.MultiModalSegment} MultiModalSegment instance
                                 */
                                MultiModalSegment.create = function create(properties) {
                                    return new MultiModalSegment(properties);
                                };
    
                                /**
                                 * Encodes the specified MultiModalSegment message. Does not implicitly {@link google.maps.routing.v2.RouteLeg.StepsOverview.MultiModalSegment.verify|verify} messages.
                                 * @function encode
                                 * @memberof google.maps.routing.v2.RouteLeg.StepsOverview.MultiModalSegment
                                 * @static
                                 * @param {google.maps.routing.v2.RouteLeg.StepsOverview.IMultiModalSegment} message MultiModalSegment message or plain object to encode
                                 * @param {$protobuf.Writer} [writer] Writer to encode to
                                 * @returns {$protobuf.Writer} Writer
                                 */
                                MultiModalSegment.encode = function encode(message, writer) {
                                    if (!writer)
                                        writer = $Writer.create();
                                    if (message.stepStartIndex != null && Object.hasOwnProperty.call(message, "stepStartIndex"))
                                        writer.uint32(/* id 1, wireType 0 =*/8).int32(message.stepStartIndex);
                                    if (message.stepEndIndex != null && Object.hasOwnProperty.call(message, "stepEndIndex"))
                                        writer.uint32(/* id 2, wireType 0 =*/16).int32(message.stepEndIndex);
                                    if (message.navigationInstruction != null && Object.hasOwnProperty.call(message, "navigationInstruction"))
                                        $root.google.maps.routing.v2.NavigationInstruction.encode(message.navigationInstruction, writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();
                                    if (message.travelMode != null && Object.hasOwnProperty.call(message, "travelMode"))
                                        writer.uint32(/* id 4, wireType 0 =*/32).int32(message.travelMode);
                                    return writer;
                                };
    
                                /**
                                 * Encodes the specified MultiModalSegment message, length delimited. Does not implicitly {@link google.maps.routing.v2.RouteLeg.StepsOverview.MultiModalSegment.verify|verify} messages.
                                 * @function encodeDelimited
                                 * @memberof google.maps.routing.v2.RouteLeg.StepsOverview.MultiModalSegment
                                 * @static
                                 * @param {google.maps.routing.v2.RouteLeg.StepsOverview.IMultiModalSegment} message MultiModalSegment message or plain object to encode
                                 * @param {$protobuf.Writer} [writer] Writer to encode to
                                 * @returns {$protobuf.Writer} Writer
                                 */
                                MultiModalSegment.encodeDelimited = function encodeDelimited(message, writer) {
                                    return this.encode(message, writer).ldelim();
                                };
    
                                /**
                                 * Decodes a MultiModalSegment message from the specified reader or buffer.
                                 * @function decode
                                 * @memberof google.maps.routing.v2.RouteLeg.StepsOverview.MultiModalSegment
                                 * @static
                                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                                 * @param {number} [length] Message length if known beforehand
                                 * @returns {google.maps.routing.v2.RouteLeg.StepsOverview.MultiModalSegment} MultiModalSegment
                                 * @throws {Error} If the payload is not a reader or valid buffer
                                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                                 */
                                MultiModalSegment.decode = function decode(reader, length) {
                                    if (!(reader instanceof $Reader))
                                        reader = $Reader.create(reader);
                                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.maps.routing.v2.RouteLeg.StepsOverview.MultiModalSegment();
                                    while (reader.pos < end) {
                                        var tag = reader.uint32();
                                        switch (tag >>> 3) {
                                        case 1: {
                                                message.stepStartIndex = reader.int32();
                                                break;
                                            }
                                        case 2: {
                                                message.stepEndIndex = reader.int32();
                                                break;
                                            }
                                        case 3: {
                                                message.navigationInstruction = $root.google.maps.routing.v2.NavigationInstruction.decode(reader, reader.uint32());
                                                break;
                                            }
                                        case 4: {
                                                message.travelMode = reader.int32();
                                                break;
                                            }
                                        default:
                                            reader.skipType(tag & 7);
                                            break;
                                        }
                                    }
                                    return message;
                                };
    
                                /**
                                 * Decodes a MultiModalSegment message from the specified reader or buffer, length delimited.
                                 * @function decodeDelimited
                                 * @memberof google.maps.routing.v2.RouteLeg.StepsOverview.MultiModalSegment
                                 * @static
                                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                                 * @returns {google.maps.routing.v2.RouteLeg.StepsOverview.MultiModalSegment} MultiModalSegment
                                 * @throws {Error} If the payload is not a reader or valid buffer
                                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                                 */
                                MultiModalSegment.decodeDelimited = function decodeDelimited(reader) {
                                    if (!(reader instanceof $Reader))
                                        reader = new $Reader(reader);
                                    return this.decode(reader, reader.uint32());
                                };
    
                                /**
                                 * Verifies a MultiModalSegment message.
                                 * @function verify
                                 * @memberof google.maps.routing.v2.RouteLeg.StepsOverview.MultiModalSegment
                                 * @static
                                 * @param {Object.<string,*>} message Plain object to verify
                                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                                 */
                                MultiModalSegment.verify = function verify(message) {
                                    if (typeof message !== "object" || message === null)
                                        return "object expected";
                                    var properties = {};
                                    if (message.stepStartIndex != null && message.hasOwnProperty("stepStartIndex")) {
                                        properties._stepStartIndex = 1;
                                        if (!$util.isInteger(message.stepStartIndex))
                                            return "stepStartIndex: integer expected";
                                    }
                                    if (message.stepEndIndex != null && message.hasOwnProperty("stepEndIndex")) {
                                        properties._stepEndIndex = 1;
                                        if (!$util.isInteger(message.stepEndIndex))
                                            return "stepEndIndex: integer expected";
                                    }
                                    if (message.navigationInstruction != null && message.hasOwnProperty("navigationInstruction")) {
                                        var error = $root.google.maps.routing.v2.NavigationInstruction.verify(message.navigationInstruction);
                                        if (error)
                                            return "navigationInstruction." + error;
                                    }
                                    if (message.travelMode != null && message.hasOwnProperty("travelMode"))
                                        switch (message.travelMode) {
                                        default:
                                            return "travelMode: enum value expected";
                                        case 0:
                                        case 1:
                                        case 2:
                                        case 3:
                                        case 4:
                                        case 7:
                                            break;
                                        }
                                    return null;
                                };
    
                                /**
                                 * Creates a MultiModalSegment message from a plain object. Also converts values to their respective internal types.
                                 * @function fromObject
                                 * @memberof google.maps.routing.v2.RouteLeg.StepsOverview.MultiModalSegment
                                 * @static
                                 * @param {Object.<string,*>} object Plain object
                                 * @returns {google.maps.routing.v2.RouteLeg.StepsOverview.MultiModalSegment} MultiModalSegment
                                 */
                                MultiModalSegment.fromObject = function fromObject(object) {
                                    if (object instanceof $root.google.maps.routing.v2.RouteLeg.StepsOverview.MultiModalSegment)
                                        return object;
                                    var message = new $root.google.maps.routing.v2.RouteLeg.StepsOverview.MultiModalSegment();
                                    if (object.stepStartIndex != null)
                                        message.stepStartIndex = object.stepStartIndex | 0;
                                    if (object.stepEndIndex != null)
                                        message.stepEndIndex = object.stepEndIndex | 0;
                                    if (object.navigationInstruction != null) {
                                        if (typeof object.navigationInstruction !== "object")
                                            throw TypeError(".google.maps.routing.v2.RouteLeg.StepsOverview.MultiModalSegment.navigationInstruction: object expected");
                                        message.navigationInstruction = $root.google.maps.routing.v2.NavigationInstruction.fromObject(object.navigationInstruction);
                                    }
                                    switch (object.travelMode) {
                                    default:
                                        if (typeof object.travelMode === "number") {
                                            message.travelMode = object.travelMode;
                                            break;
                                        }
                                        break;
                                    case "TRAVEL_MODE_UNSPECIFIED":
                                    case 0:
                                        message.travelMode = 0;
                                        break;
                                    case "DRIVE":
                                    case 1:
                                        message.travelMode = 1;
                                        break;
                                    case "BICYCLE":
                                    case 2:
                                        message.travelMode = 2;
                                        break;
                                    case "WALK":
                                    case 3:
                                        message.travelMode = 3;
                                        break;
                                    case "TWO_WHEELER":
                                    case 4:
                                        message.travelMode = 4;
                                        break;
                                    case "TRANSIT":
                                    case 7:
                                        message.travelMode = 7;
                                        break;
                                    }
                                    return message;
                                };
    
                                /**
                                 * Creates a plain object from a MultiModalSegment message. Also converts values to other types if specified.
                                 * @function toObject
                                 * @memberof google.maps.routing.v2.RouteLeg.StepsOverview.MultiModalSegment
                                 * @static
                                 * @param {google.maps.routing.v2.RouteLeg.StepsOverview.MultiModalSegment} message MultiModalSegment
                                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                                 * @returns {Object.<string,*>} Plain object
                                 */
                                MultiModalSegment.toObject = function toObject(message, options) {
                                    if (!options)
                                        options = {};
                                    var object = {};
                                    if (options.defaults) {
                                        object.navigationInstruction = null;
                                        object.travelMode = options.enums === String ? "TRAVEL_MODE_UNSPECIFIED" : 0;
                                    }
                                    if (message.stepStartIndex != null && message.hasOwnProperty("stepStartIndex")) {
                                        object.stepStartIndex = message.stepStartIndex;
                                        if (options.oneofs)
                                            object._stepStartIndex = "stepStartIndex";
                                    }
                                    if (message.stepEndIndex != null && message.hasOwnProperty("stepEndIndex")) {
                                        object.stepEndIndex = message.stepEndIndex;
                                        if (options.oneofs)
                                            object._stepEndIndex = "stepEndIndex";
                                    }
                                    if (message.navigationInstruction != null && message.hasOwnProperty("navigationInstruction"))
                                        object.navigationInstruction = $root.google.maps.routing.v2.NavigationInstruction.toObject(message.navigationInstruction, options);
                                    if (message.travelMode != null && message.hasOwnProperty("travelMode"))
                                        object.travelMode = options.enums === String ? $root.google.maps.routing.v2.RouteTravelMode[message.travelMode] === undefined ? message.travelMode : $root.google.maps.routing.v2.RouteTravelMode[message.travelMode] : message.travelMode;
                                    return object;
                                };
    
                                /**
                                 * Converts this MultiModalSegment to JSON.
                                 * @function toJSON
                                 * @memberof google.maps.routing.v2.RouteLeg.StepsOverview.MultiModalSegment
                                 * @instance
                                 * @returns {Object.<string,*>} JSON object
                                 */
                                MultiModalSegment.prototype.toJSON = function toJSON() {
                                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                                };
    
                                /**
                                 * Gets the default type url for MultiModalSegment
                                 * @function getTypeUrl
                                 * @memberof google.maps.routing.v2.RouteLeg.StepsOverview.MultiModalSegment
                                 * @static
                                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                                 * @returns {string} The default type url
                                 */
                                MultiModalSegment.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                                    if (typeUrlPrefix === undefined) {
                                        typeUrlPrefix = "type.googleapis.com";
                                    }
                                    return typeUrlPrefix + "/google.maps.routing.v2.RouteLeg.StepsOverview.MultiModalSegment";
                                };
    
                                return MultiModalSegment;
                            })();
    
                            return StepsOverview;
                        })();
    
                        return RouteLeg;
                    })();
    
                    v2.RouteLegStep = (function() {
    
                        /**
                         * Properties of a RouteLegStep.
                         * @memberof google.maps.routing.v2
                         * @interface IRouteLegStep
                         * @property {number|null} [distanceMeters] RouteLegStep distanceMeters
                         * @property {google.protobuf.IDuration|null} [staticDuration] RouteLegStep staticDuration
                         * @property {google.maps.routing.v2.IPolyline|null} [polyline] RouteLegStep polyline
                         * @property {google.maps.routing.v2.ILocation|null} [startLocation] RouteLegStep startLocation
                         * @property {google.maps.routing.v2.ILocation|null} [endLocation] RouteLegStep endLocation
                         * @property {google.maps.routing.v2.INavigationInstruction|null} [navigationInstruction] RouteLegStep navigationInstruction
                         * @property {google.maps.routing.v2.IRouteLegStepTravelAdvisory|null} [travelAdvisory] RouteLegStep travelAdvisory
                         * @property {google.maps.routing.v2.RouteLegStep.IRouteLegStepLocalizedValues|null} [localizedValues] RouteLegStep localizedValues
                         * @property {google.maps.routing.v2.IRouteLegStepTransitDetails|null} [transitDetails] RouteLegStep transitDetails
                         * @property {google.maps.routing.v2.RouteTravelMode|null} [travelMode] RouteLegStep travelMode
                         */
    
                        /**
                         * Constructs a new RouteLegStep.
                         * @memberof google.maps.routing.v2
                         * @classdesc Represents a RouteLegStep.
                         * @implements IRouteLegStep
                         * @constructor
                         * @param {google.maps.routing.v2.IRouteLegStep=} [properties] Properties to set
                         */
                        function RouteLegStep(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * RouteLegStep distanceMeters.
                         * @member {number} distanceMeters
                         * @memberof google.maps.routing.v2.RouteLegStep
                         * @instance
                         */
                        RouteLegStep.prototype.distanceMeters = 0;
    
                        /**
                         * RouteLegStep staticDuration.
                         * @member {google.protobuf.IDuration|null|undefined} staticDuration
                         * @memberof google.maps.routing.v2.RouteLegStep
                         * @instance
                         */
                        RouteLegStep.prototype.staticDuration = null;
    
                        /**
                         * RouteLegStep polyline.
                         * @member {google.maps.routing.v2.IPolyline|null|undefined} polyline
                         * @memberof google.maps.routing.v2.RouteLegStep
                         * @instance
                         */
                        RouteLegStep.prototype.polyline = null;
    
                        /**
                         * RouteLegStep startLocation.
                         * @member {google.maps.routing.v2.ILocation|null|undefined} startLocation
                         * @memberof google.maps.routing.v2.RouteLegStep
                         * @instance
                         */
                        RouteLegStep.prototype.startLocation = null;
    
                        /**
                         * RouteLegStep endLocation.
                         * @member {google.maps.routing.v2.ILocation|null|undefined} endLocation
                         * @memberof google.maps.routing.v2.RouteLegStep
                         * @instance
                         */
                        RouteLegStep.prototype.endLocation = null;
    
                        /**
                         * RouteLegStep navigationInstruction.
                         * @member {google.maps.routing.v2.INavigationInstruction|null|undefined} navigationInstruction
                         * @memberof google.maps.routing.v2.RouteLegStep
                         * @instance
                         */
                        RouteLegStep.prototype.navigationInstruction = null;
    
                        /**
                         * RouteLegStep travelAdvisory.
                         * @member {google.maps.routing.v2.IRouteLegStepTravelAdvisory|null|undefined} travelAdvisory
                         * @memberof google.maps.routing.v2.RouteLegStep
                         * @instance
                         */
                        RouteLegStep.prototype.travelAdvisory = null;
    
                        /**
                         * RouteLegStep localizedValues.
                         * @member {google.maps.routing.v2.RouteLegStep.IRouteLegStepLocalizedValues|null|undefined} localizedValues
                         * @memberof google.maps.routing.v2.RouteLegStep
                         * @instance
                         */
                        RouteLegStep.prototype.localizedValues = null;
    
                        /**
                         * RouteLegStep transitDetails.
                         * @member {google.maps.routing.v2.IRouteLegStepTransitDetails|null|undefined} transitDetails
                         * @memberof google.maps.routing.v2.RouteLegStep
                         * @instance
                         */
                        RouteLegStep.prototype.transitDetails = null;
    
                        /**
                         * RouteLegStep travelMode.
                         * @member {google.maps.routing.v2.RouteTravelMode} travelMode
                         * @memberof google.maps.routing.v2.RouteLegStep
                         * @instance
                         */
                        RouteLegStep.prototype.travelMode = 0;
    
                        /**
                         * Creates a new RouteLegStep instance using the specified properties.
                         * @function create
                         * @memberof google.maps.routing.v2.RouteLegStep
                         * @static
                         * @param {google.maps.routing.v2.IRouteLegStep=} [properties] Properties to set
                         * @returns {google.maps.routing.v2.RouteLegStep} RouteLegStep instance
                         */
                        RouteLegStep.create = function create(properties) {
                            return new RouteLegStep(properties);
                        };
    
                        /**
                         * Encodes the specified RouteLegStep message. Does not implicitly {@link google.maps.routing.v2.RouteLegStep.verify|verify} messages.
                         * @function encode
                         * @memberof google.maps.routing.v2.RouteLegStep
                         * @static
                         * @param {google.maps.routing.v2.IRouteLegStep} message RouteLegStep message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        RouteLegStep.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.distanceMeters != null && Object.hasOwnProperty.call(message, "distanceMeters"))
                                writer.uint32(/* id 1, wireType 0 =*/8).int32(message.distanceMeters);
                            if (message.staticDuration != null && Object.hasOwnProperty.call(message, "staticDuration"))
                                $root.google.protobuf.Duration.encode(message.staticDuration, writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                            if (message.polyline != null && Object.hasOwnProperty.call(message, "polyline"))
                                $root.google.maps.routing.v2.Polyline.encode(message.polyline, writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();
                            if (message.startLocation != null && Object.hasOwnProperty.call(message, "startLocation"))
                                $root.google.maps.routing.v2.Location.encode(message.startLocation, writer.uint32(/* id 4, wireType 2 =*/34).fork()).ldelim();
                            if (message.endLocation != null && Object.hasOwnProperty.call(message, "endLocation"))
                                $root.google.maps.routing.v2.Location.encode(message.endLocation, writer.uint32(/* id 5, wireType 2 =*/42).fork()).ldelim();
                            if (message.navigationInstruction != null && Object.hasOwnProperty.call(message, "navigationInstruction"))
                                $root.google.maps.routing.v2.NavigationInstruction.encode(message.navigationInstruction, writer.uint32(/* id 6, wireType 2 =*/50).fork()).ldelim();
                            if (message.travelAdvisory != null && Object.hasOwnProperty.call(message, "travelAdvisory"))
                                $root.google.maps.routing.v2.RouteLegStepTravelAdvisory.encode(message.travelAdvisory, writer.uint32(/* id 7, wireType 2 =*/58).fork()).ldelim();
                            if (message.localizedValues != null && Object.hasOwnProperty.call(message, "localizedValues"))
                                $root.google.maps.routing.v2.RouteLegStep.RouteLegStepLocalizedValues.encode(message.localizedValues, writer.uint32(/* id 8, wireType 2 =*/66).fork()).ldelim();
                            if (message.transitDetails != null && Object.hasOwnProperty.call(message, "transitDetails"))
                                $root.google.maps.routing.v2.RouteLegStepTransitDetails.encode(message.transitDetails, writer.uint32(/* id 9, wireType 2 =*/74).fork()).ldelim();
                            if (message.travelMode != null && Object.hasOwnProperty.call(message, "travelMode"))
                                writer.uint32(/* id 10, wireType 0 =*/80).int32(message.travelMode);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified RouteLegStep message, length delimited. Does not implicitly {@link google.maps.routing.v2.RouteLegStep.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.maps.routing.v2.RouteLegStep
                         * @static
                         * @param {google.maps.routing.v2.IRouteLegStep} message RouteLegStep message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        RouteLegStep.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a RouteLegStep message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.maps.routing.v2.RouteLegStep
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.maps.routing.v2.RouteLegStep} RouteLegStep
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        RouteLegStep.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.maps.routing.v2.RouteLegStep();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.distanceMeters = reader.int32();
                                        break;
                                    }
                                case 2: {
                                        message.staticDuration = $root.google.protobuf.Duration.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 3: {
                                        message.polyline = $root.google.maps.routing.v2.Polyline.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 4: {
                                        message.startLocation = $root.google.maps.routing.v2.Location.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 5: {
                                        message.endLocation = $root.google.maps.routing.v2.Location.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 6: {
                                        message.navigationInstruction = $root.google.maps.routing.v2.NavigationInstruction.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 7: {
                                        message.travelAdvisory = $root.google.maps.routing.v2.RouteLegStepTravelAdvisory.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 8: {
                                        message.localizedValues = $root.google.maps.routing.v2.RouteLegStep.RouteLegStepLocalizedValues.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 9: {
                                        message.transitDetails = $root.google.maps.routing.v2.RouteLegStepTransitDetails.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 10: {
                                        message.travelMode = reader.int32();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a RouteLegStep message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.maps.routing.v2.RouteLegStep
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.maps.routing.v2.RouteLegStep} RouteLegStep
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        RouteLegStep.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a RouteLegStep message.
                         * @function verify
                         * @memberof google.maps.routing.v2.RouteLegStep
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        RouteLegStep.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.distanceMeters != null && message.hasOwnProperty("distanceMeters"))
                                if (!$util.isInteger(message.distanceMeters))
                                    return "distanceMeters: integer expected";
                            if (message.staticDuration != null && message.hasOwnProperty("staticDuration")) {
                                var error = $root.google.protobuf.Duration.verify(message.staticDuration);
                                if (error)
                                    return "staticDuration." + error;
                            }
                            if (message.polyline != null && message.hasOwnProperty("polyline")) {
                                var error = $root.google.maps.routing.v2.Polyline.verify(message.polyline);
                                if (error)
                                    return "polyline." + error;
                            }
                            if (message.startLocation != null && message.hasOwnProperty("startLocation")) {
                                var error = $root.google.maps.routing.v2.Location.verify(message.startLocation);
                                if (error)
                                    return "startLocation." + error;
                            }
                            if (message.endLocation != null && message.hasOwnProperty("endLocation")) {
                                var error = $root.google.maps.routing.v2.Location.verify(message.endLocation);
                                if (error)
                                    return "endLocation." + error;
                            }
                            if (message.navigationInstruction != null && message.hasOwnProperty("navigationInstruction")) {
                                var error = $root.google.maps.routing.v2.NavigationInstruction.verify(message.navigationInstruction);
                                if (error)
                                    return "navigationInstruction." + error;
                            }
                            if (message.travelAdvisory != null && message.hasOwnProperty("travelAdvisory")) {
                                var error = $root.google.maps.routing.v2.RouteLegStepTravelAdvisory.verify(message.travelAdvisory);
                                if (error)
                                    return "travelAdvisory." + error;
                            }
                            if (message.localizedValues != null && message.hasOwnProperty("localizedValues")) {
                                var error = $root.google.maps.routing.v2.RouteLegStep.RouteLegStepLocalizedValues.verify(message.localizedValues);
                                if (error)
                                    return "localizedValues." + error;
                            }
                            if (message.transitDetails != null && message.hasOwnProperty("transitDetails")) {
                                var error = $root.google.maps.routing.v2.RouteLegStepTransitDetails.verify(message.transitDetails);
                                if (error)
                                    return "transitDetails." + error;
                            }
                            if (message.travelMode != null && message.hasOwnProperty("travelMode"))
                                switch (message.travelMode) {
                                default:
                                    return "travelMode: enum value expected";
                                case 0:
                                case 1:
                                case 2:
                                case 3:
                                case 4:
                                case 7:
                                    break;
                                }
                            return null;
                        };
    
                        /**
                         * Creates a RouteLegStep message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.maps.routing.v2.RouteLegStep
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.maps.routing.v2.RouteLegStep} RouteLegStep
                         */
                        RouteLegStep.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.maps.routing.v2.RouteLegStep)
                                return object;
                            var message = new $root.google.maps.routing.v2.RouteLegStep();
                            if (object.distanceMeters != null)
                                message.distanceMeters = object.distanceMeters | 0;
                            if (object.staticDuration != null) {
                                if (typeof object.staticDuration !== "object")
                                    throw TypeError(".google.maps.routing.v2.RouteLegStep.staticDuration: object expected");
                                message.staticDuration = $root.google.protobuf.Duration.fromObject(object.staticDuration);
                            }
                            if (object.polyline != null) {
                                if (typeof object.polyline !== "object")
                                    throw TypeError(".google.maps.routing.v2.RouteLegStep.polyline: object expected");
                                message.polyline = $root.google.maps.routing.v2.Polyline.fromObject(object.polyline);
                            }
                            if (object.startLocation != null) {
                                if (typeof object.startLocation !== "object")
                                    throw TypeError(".google.maps.routing.v2.RouteLegStep.startLocation: object expected");
                                message.startLocation = $root.google.maps.routing.v2.Location.fromObject(object.startLocation);
                            }
                            if (object.endLocation != null) {
                                if (typeof object.endLocation !== "object")
                                    throw TypeError(".google.maps.routing.v2.RouteLegStep.endLocation: object expected");
                                message.endLocation = $root.google.maps.routing.v2.Location.fromObject(object.endLocation);
                            }
                            if (object.navigationInstruction != null) {
                                if (typeof object.navigationInstruction !== "object")
                                    throw TypeError(".google.maps.routing.v2.RouteLegStep.navigationInstruction: object expected");
                                message.navigationInstruction = $root.google.maps.routing.v2.NavigationInstruction.fromObject(object.navigationInstruction);
                            }
                            if (object.travelAdvisory != null) {
                                if (typeof object.travelAdvisory !== "object")
                                    throw TypeError(".google.maps.routing.v2.RouteLegStep.travelAdvisory: object expected");
                                message.travelAdvisory = $root.google.maps.routing.v2.RouteLegStepTravelAdvisory.fromObject(object.travelAdvisory);
                            }
                            if (object.localizedValues != null) {
                                if (typeof object.localizedValues !== "object")
                                    throw TypeError(".google.maps.routing.v2.RouteLegStep.localizedValues: object expected");
                                message.localizedValues = $root.google.maps.routing.v2.RouteLegStep.RouteLegStepLocalizedValues.fromObject(object.localizedValues);
                            }
                            if (object.transitDetails != null) {
                                if (typeof object.transitDetails !== "object")
                                    throw TypeError(".google.maps.routing.v2.RouteLegStep.transitDetails: object expected");
                                message.transitDetails = $root.google.maps.routing.v2.RouteLegStepTransitDetails.fromObject(object.transitDetails);
                            }
                            switch (object.travelMode) {
                            default:
                                if (typeof object.travelMode === "number") {
                                    message.travelMode = object.travelMode;
                                    break;
                                }
                                break;
                            case "TRAVEL_MODE_UNSPECIFIED":
                            case 0:
                                message.travelMode = 0;
                                break;
                            case "DRIVE":
                            case 1:
                                message.travelMode = 1;
                                break;
                            case "BICYCLE":
                            case 2:
                                message.travelMode = 2;
                                break;
                            case "WALK":
                            case 3:
                                message.travelMode = 3;
                                break;
                            case "TWO_WHEELER":
                            case 4:
                                message.travelMode = 4;
                                break;
                            case "TRANSIT":
                            case 7:
                                message.travelMode = 7;
                                break;
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a RouteLegStep message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.maps.routing.v2.RouteLegStep
                         * @static
                         * @param {google.maps.routing.v2.RouteLegStep} message RouteLegStep
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        RouteLegStep.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.distanceMeters = 0;
                                object.staticDuration = null;
                                object.polyline = null;
                                object.startLocation = null;
                                object.endLocation = null;
                                object.navigationInstruction = null;
                                object.travelAdvisory = null;
                                object.localizedValues = null;
                                object.transitDetails = null;
                                object.travelMode = options.enums === String ? "TRAVEL_MODE_UNSPECIFIED" : 0;
                            }
                            if (message.distanceMeters != null && message.hasOwnProperty("distanceMeters"))
                                object.distanceMeters = message.distanceMeters;
                            if (message.staticDuration != null && message.hasOwnProperty("staticDuration"))
                                object.staticDuration = $root.google.protobuf.Duration.toObject(message.staticDuration, options);
                            if (message.polyline != null && message.hasOwnProperty("polyline"))
                                object.polyline = $root.google.maps.routing.v2.Polyline.toObject(message.polyline, options);
                            if (message.startLocation != null && message.hasOwnProperty("startLocation"))
                                object.startLocation = $root.google.maps.routing.v2.Location.toObject(message.startLocation, options);
                            if (message.endLocation != null && message.hasOwnProperty("endLocation"))
                                object.endLocation = $root.google.maps.routing.v2.Location.toObject(message.endLocation, options);
                            if (message.navigationInstruction != null && message.hasOwnProperty("navigationInstruction"))
                                object.navigationInstruction = $root.google.maps.routing.v2.NavigationInstruction.toObject(message.navigationInstruction, options);
                            if (message.travelAdvisory != null && message.hasOwnProperty("travelAdvisory"))
                                object.travelAdvisory = $root.google.maps.routing.v2.RouteLegStepTravelAdvisory.toObject(message.travelAdvisory, options);
                            if (message.localizedValues != null && message.hasOwnProperty("localizedValues"))
                                object.localizedValues = $root.google.maps.routing.v2.RouteLegStep.RouteLegStepLocalizedValues.toObject(message.localizedValues, options);
                            if (message.transitDetails != null && message.hasOwnProperty("transitDetails"))
                                object.transitDetails = $root.google.maps.routing.v2.RouteLegStepTransitDetails.toObject(message.transitDetails, options);
                            if (message.travelMode != null && message.hasOwnProperty("travelMode"))
                                object.travelMode = options.enums === String ? $root.google.maps.routing.v2.RouteTravelMode[message.travelMode] === undefined ? message.travelMode : $root.google.maps.routing.v2.RouteTravelMode[message.travelMode] : message.travelMode;
                            return object;
                        };
    
                        /**
                         * Converts this RouteLegStep to JSON.
                         * @function toJSON
                         * @memberof google.maps.routing.v2.RouteLegStep
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        RouteLegStep.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for RouteLegStep
                         * @function getTypeUrl
                         * @memberof google.maps.routing.v2.RouteLegStep
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        RouteLegStep.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.maps.routing.v2.RouteLegStep";
                        };
    
                        RouteLegStep.RouteLegStepLocalizedValues = (function() {
    
                            /**
                             * Properties of a RouteLegStepLocalizedValues.
                             * @memberof google.maps.routing.v2.RouteLegStep
                             * @interface IRouteLegStepLocalizedValues
                             * @property {google.type.ILocalizedText|null} [distance] RouteLegStepLocalizedValues distance
                             * @property {google.type.ILocalizedText|null} [staticDuration] RouteLegStepLocalizedValues staticDuration
                             */
    
                            /**
                             * Constructs a new RouteLegStepLocalizedValues.
                             * @memberof google.maps.routing.v2.RouteLegStep
                             * @classdesc Represents a RouteLegStepLocalizedValues.
                             * @implements IRouteLegStepLocalizedValues
                             * @constructor
                             * @param {google.maps.routing.v2.RouteLegStep.IRouteLegStepLocalizedValues=} [properties] Properties to set
                             */
                            function RouteLegStepLocalizedValues(properties) {
                                if (properties)
                                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                        if (properties[keys[i]] != null)
                                            this[keys[i]] = properties[keys[i]];
                            }
    
                            /**
                             * RouteLegStepLocalizedValues distance.
                             * @member {google.type.ILocalizedText|null|undefined} distance
                             * @memberof google.maps.routing.v2.RouteLegStep.RouteLegStepLocalizedValues
                             * @instance
                             */
                            RouteLegStepLocalizedValues.prototype.distance = null;
    
                            /**
                             * RouteLegStepLocalizedValues staticDuration.
                             * @member {google.type.ILocalizedText|null|undefined} staticDuration
                             * @memberof google.maps.routing.v2.RouteLegStep.RouteLegStepLocalizedValues
                             * @instance
                             */
                            RouteLegStepLocalizedValues.prototype.staticDuration = null;
    
                            /**
                             * Creates a new RouteLegStepLocalizedValues instance using the specified properties.
                             * @function create
                             * @memberof google.maps.routing.v2.RouteLegStep.RouteLegStepLocalizedValues
                             * @static
                             * @param {google.maps.routing.v2.RouteLegStep.IRouteLegStepLocalizedValues=} [properties] Properties to set
                             * @returns {google.maps.routing.v2.RouteLegStep.RouteLegStepLocalizedValues} RouteLegStepLocalizedValues instance
                             */
                            RouteLegStepLocalizedValues.create = function create(properties) {
                                return new RouteLegStepLocalizedValues(properties);
                            };
    
                            /**
                             * Encodes the specified RouteLegStepLocalizedValues message. Does not implicitly {@link google.maps.routing.v2.RouteLegStep.RouteLegStepLocalizedValues.verify|verify} messages.
                             * @function encode
                             * @memberof google.maps.routing.v2.RouteLegStep.RouteLegStepLocalizedValues
                             * @static
                             * @param {google.maps.routing.v2.RouteLegStep.IRouteLegStepLocalizedValues} message RouteLegStepLocalizedValues message or plain object to encode
                             * @param {$protobuf.Writer} [writer] Writer to encode to
                             * @returns {$protobuf.Writer} Writer
                             */
                            RouteLegStepLocalizedValues.encode = function encode(message, writer) {
                                if (!writer)
                                    writer = $Writer.create();
                                if (message.distance != null && Object.hasOwnProperty.call(message, "distance"))
                                    $root.google.type.LocalizedText.encode(message.distance, writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                                if (message.staticDuration != null && Object.hasOwnProperty.call(message, "staticDuration"))
                                    $root.google.type.LocalizedText.encode(message.staticDuration, writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();
                                return writer;
                            };
    
                            /**
                             * Encodes the specified RouteLegStepLocalizedValues message, length delimited. Does not implicitly {@link google.maps.routing.v2.RouteLegStep.RouteLegStepLocalizedValues.verify|verify} messages.
                             * @function encodeDelimited
                             * @memberof google.maps.routing.v2.RouteLegStep.RouteLegStepLocalizedValues
                             * @static
                             * @param {google.maps.routing.v2.RouteLegStep.IRouteLegStepLocalizedValues} message RouteLegStepLocalizedValues message or plain object to encode
                             * @param {$protobuf.Writer} [writer] Writer to encode to
                             * @returns {$protobuf.Writer} Writer
                             */
                            RouteLegStepLocalizedValues.encodeDelimited = function encodeDelimited(message, writer) {
                                return this.encode(message, writer).ldelim();
                            };
    
                            /**
                             * Decodes a RouteLegStepLocalizedValues message from the specified reader or buffer.
                             * @function decode
                             * @memberof google.maps.routing.v2.RouteLegStep.RouteLegStepLocalizedValues
                             * @static
                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                             * @param {number} [length] Message length if known beforehand
                             * @returns {google.maps.routing.v2.RouteLegStep.RouteLegStepLocalizedValues} RouteLegStepLocalizedValues
                             * @throws {Error} If the payload is not a reader or valid buffer
                             * @throws {$protobuf.util.ProtocolError} If required fields are missing
                             */
                            RouteLegStepLocalizedValues.decode = function decode(reader, length) {
                                if (!(reader instanceof $Reader))
                                    reader = $Reader.create(reader);
                                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.maps.routing.v2.RouteLegStep.RouteLegStepLocalizedValues();
                                while (reader.pos < end) {
                                    var tag = reader.uint32();
                                    switch (tag >>> 3) {
                                    case 1: {
                                            message.distance = $root.google.type.LocalizedText.decode(reader, reader.uint32());
                                            break;
                                        }
                                    case 3: {
                                            message.staticDuration = $root.google.type.LocalizedText.decode(reader, reader.uint32());
                                            break;
                                        }
                                    default:
                                        reader.skipType(tag & 7);
                                        break;
                                    }
                                }
                                return message;
                            };
    
                            /**
                             * Decodes a RouteLegStepLocalizedValues message from the specified reader or buffer, length delimited.
                             * @function decodeDelimited
                             * @memberof google.maps.routing.v2.RouteLegStep.RouteLegStepLocalizedValues
                             * @static
                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                             * @returns {google.maps.routing.v2.RouteLegStep.RouteLegStepLocalizedValues} RouteLegStepLocalizedValues
                             * @throws {Error} If the payload is not a reader or valid buffer
                             * @throws {$protobuf.util.ProtocolError} If required fields are missing
                             */
                            RouteLegStepLocalizedValues.decodeDelimited = function decodeDelimited(reader) {
                                if (!(reader instanceof $Reader))
                                    reader = new $Reader(reader);
                                return this.decode(reader, reader.uint32());
                            };
    
                            /**
                             * Verifies a RouteLegStepLocalizedValues message.
                             * @function verify
                             * @memberof google.maps.routing.v2.RouteLegStep.RouteLegStepLocalizedValues
                             * @static
                             * @param {Object.<string,*>} message Plain object to verify
                             * @returns {string|null} `null` if valid, otherwise the reason why it is not
                             */
                            RouteLegStepLocalizedValues.verify = function verify(message) {
                                if (typeof message !== "object" || message === null)
                                    return "object expected";
                                if (message.distance != null && message.hasOwnProperty("distance")) {
                                    var error = $root.google.type.LocalizedText.verify(message.distance);
                                    if (error)
                                        return "distance." + error;
                                }
                                if (message.staticDuration != null && message.hasOwnProperty("staticDuration")) {
                                    var error = $root.google.type.LocalizedText.verify(message.staticDuration);
                                    if (error)
                                        return "staticDuration." + error;
                                }
                                return null;
                            };
    
                            /**
                             * Creates a RouteLegStepLocalizedValues message from a plain object. Also converts values to their respective internal types.
                             * @function fromObject
                             * @memberof google.maps.routing.v2.RouteLegStep.RouteLegStepLocalizedValues
                             * @static
                             * @param {Object.<string,*>} object Plain object
                             * @returns {google.maps.routing.v2.RouteLegStep.RouteLegStepLocalizedValues} RouteLegStepLocalizedValues
                             */
                            RouteLegStepLocalizedValues.fromObject = function fromObject(object) {
                                if (object instanceof $root.google.maps.routing.v2.RouteLegStep.RouteLegStepLocalizedValues)
                                    return object;
                                var message = new $root.google.maps.routing.v2.RouteLegStep.RouteLegStepLocalizedValues();
                                if (object.distance != null) {
                                    if (typeof object.distance !== "object")
                                        throw TypeError(".google.maps.routing.v2.RouteLegStep.RouteLegStepLocalizedValues.distance: object expected");
                                    message.distance = $root.google.type.LocalizedText.fromObject(object.distance);
                                }
                                if (object.staticDuration != null) {
                                    if (typeof object.staticDuration !== "object")
                                        throw TypeError(".google.maps.routing.v2.RouteLegStep.RouteLegStepLocalizedValues.staticDuration: object expected");
                                    message.staticDuration = $root.google.type.LocalizedText.fromObject(object.staticDuration);
                                }
                                return message;
                            };
    
                            /**
                             * Creates a plain object from a RouteLegStepLocalizedValues message. Also converts values to other types if specified.
                             * @function toObject
                             * @memberof google.maps.routing.v2.RouteLegStep.RouteLegStepLocalizedValues
                             * @static
                             * @param {google.maps.routing.v2.RouteLegStep.RouteLegStepLocalizedValues} message RouteLegStepLocalizedValues
                             * @param {$protobuf.IConversionOptions} [options] Conversion options
                             * @returns {Object.<string,*>} Plain object
                             */
                            RouteLegStepLocalizedValues.toObject = function toObject(message, options) {
                                if (!options)
                                    options = {};
                                var object = {};
                                if (options.defaults) {
                                    object.distance = null;
                                    object.staticDuration = null;
                                }
                                if (message.distance != null && message.hasOwnProperty("distance"))
                                    object.distance = $root.google.type.LocalizedText.toObject(message.distance, options);
                                if (message.staticDuration != null && message.hasOwnProperty("staticDuration"))
                                    object.staticDuration = $root.google.type.LocalizedText.toObject(message.staticDuration, options);
                                return object;
                            };
    
                            /**
                             * Converts this RouteLegStepLocalizedValues to JSON.
                             * @function toJSON
                             * @memberof google.maps.routing.v2.RouteLegStep.RouteLegStepLocalizedValues
                             * @instance
                             * @returns {Object.<string,*>} JSON object
                             */
                            RouteLegStepLocalizedValues.prototype.toJSON = function toJSON() {
                                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                            };
    
                            /**
                             * Gets the default type url for RouteLegStepLocalizedValues
                             * @function getTypeUrl
                             * @memberof google.maps.routing.v2.RouteLegStep.RouteLegStepLocalizedValues
                             * @static
                             * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                             * @returns {string} The default type url
                             */
                            RouteLegStepLocalizedValues.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                                if (typeUrlPrefix === undefined) {
                                    typeUrlPrefix = "type.googleapis.com";
                                }
                                return typeUrlPrefix + "/google.maps.routing.v2.RouteLegStep.RouteLegStepLocalizedValues";
                            };
    
                            return RouteLegStepLocalizedValues;
                        })();
    
                        return RouteLegStep;
                    })();
    
                    v2.RouteLegStepTransitDetails = (function() {
    
                        /**
                         * Properties of a RouteLegStepTransitDetails.
                         * @memberof google.maps.routing.v2
                         * @interface IRouteLegStepTransitDetails
                         * @property {google.maps.routing.v2.RouteLegStepTransitDetails.ITransitStopDetails|null} [stopDetails] RouteLegStepTransitDetails stopDetails
                         * @property {google.maps.routing.v2.RouteLegStepTransitDetails.ITransitDetailsLocalizedValues|null} [localizedValues] RouteLegStepTransitDetails localizedValues
                         * @property {string|null} [headsign] RouteLegStepTransitDetails headsign
                         * @property {google.protobuf.IDuration|null} [headway] RouteLegStepTransitDetails headway
                         * @property {google.maps.routing.v2.ITransitLine|null} [transitLine] RouteLegStepTransitDetails transitLine
                         * @property {number|null} [stopCount] RouteLegStepTransitDetails stopCount
                         * @property {string|null} [tripShortText] RouteLegStepTransitDetails tripShortText
                         */
    
                        /**
                         * Constructs a new RouteLegStepTransitDetails.
                         * @memberof google.maps.routing.v2
                         * @classdesc Represents a RouteLegStepTransitDetails.
                         * @implements IRouteLegStepTransitDetails
                         * @constructor
                         * @param {google.maps.routing.v2.IRouteLegStepTransitDetails=} [properties] Properties to set
                         */
                        function RouteLegStepTransitDetails(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * RouteLegStepTransitDetails stopDetails.
                         * @member {google.maps.routing.v2.RouteLegStepTransitDetails.ITransitStopDetails|null|undefined} stopDetails
                         * @memberof google.maps.routing.v2.RouteLegStepTransitDetails
                         * @instance
                         */
                        RouteLegStepTransitDetails.prototype.stopDetails = null;
    
                        /**
                         * RouteLegStepTransitDetails localizedValues.
                         * @member {google.maps.routing.v2.RouteLegStepTransitDetails.ITransitDetailsLocalizedValues|null|undefined} localizedValues
                         * @memberof google.maps.routing.v2.RouteLegStepTransitDetails
                         * @instance
                         */
                        RouteLegStepTransitDetails.prototype.localizedValues = null;
    
                        /**
                         * RouteLegStepTransitDetails headsign.
                         * @member {string} headsign
                         * @memberof google.maps.routing.v2.RouteLegStepTransitDetails
                         * @instance
                         */
                        RouteLegStepTransitDetails.prototype.headsign = "";
    
                        /**
                         * RouteLegStepTransitDetails headway.
                         * @member {google.protobuf.IDuration|null|undefined} headway
                         * @memberof google.maps.routing.v2.RouteLegStepTransitDetails
                         * @instance
                         */
                        RouteLegStepTransitDetails.prototype.headway = null;
    
                        /**
                         * RouteLegStepTransitDetails transitLine.
                         * @member {google.maps.routing.v2.ITransitLine|null|undefined} transitLine
                         * @memberof google.maps.routing.v2.RouteLegStepTransitDetails
                         * @instance
                         */
                        RouteLegStepTransitDetails.prototype.transitLine = null;
    
                        /**
                         * RouteLegStepTransitDetails stopCount.
                         * @member {number} stopCount
                         * @memberof google.maps.routing.v2.RouteLegStepTransitDetails
                         * @instance
                         */
                        RouteLegStepTransitDetails.prototype.stopCount = 0;
    
                        /**
                         * RouteLegStepTransitDetails tripShortText.
                         * @member {string} tripShortText
                         * @memberof google.maps.routing.v2.RouteLegStepTransitDetails
                         * @instance
                         */
                        RouteLegStepTransitDetails.prototype.tripShortText = "";
    
                        /**
                         * Creates a new RouteLegStepTransitDetails instance using the specified properties.
                         * @function create
                         * @memberof google.maps.routing.v2.RouteLegStepTransitDetails
                         * @static
                         * @param {google.maps.routing.v2.IRouteLegStepTransitDetails=} [properties] Properties to set
                         * @returns {google.maps.routing.v2.RouteLegStepTransitDetails} RouteLegStepTransitDetails instance
                         */
                        RouteLegStepTransitDetails.create = function create(properties) {
                            return new RouteLegStepTransitDetails(properties);
                        };
    
                        /**
                         * Encodes the specified RouteLegStepTransitDetails message. Does not implicitly {@link google.maps.routing.v2.RouteLegStepTransitDetails.verify|verify} messages.
                         * @function encode
                         * @memberof google.maps.routing.v2.RouteLegStepTransitDetails
                         * @static
                         * @param {google.maps.routing.v2.IRouteLegStepTransitDetails} message RouteLegStepTransitDetails message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        RouteLegStepTransitDetails.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.stopDetails != null && Object.hasOwnProperty.call(message, "stopDetails"))
                                $root.google.maps.routing.v2.RouteLegStepTransitDetails.TransitStopDetails.encode(message.stopDetails, writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                            if (message.localizedValues != null && Object.hasOwnProperty.call(message, "localizedValues"))
                                $root.google.maps.routing.v2.RouteLegStepTransitDetails.TransitDetailsLocalizedValues.encode(message.localizedValues, writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                            if (message.headsign != null && Object.hasOwnProperty.call(message, "headsign"))
                                writer.uint32(/* id 3, wireType 2 =*/26).string(message.headsign);
                            if (message.headway != null && Object.hasOwnProperty.call(message, "headway"))
                                $root.google.protobuf.Duration.encode(message.headway, writer.uint32(/* id 4, wireType 2 =*/34).fork()).ldelim();
                            if (message.transitLine != null && Object.hasOwnProperty.call(message, "transitLine"))
                                $root.google.maps.routing.v2.TransitLine.encode(message.transitLine, writer.uint32(/* id 5, wireType 2 =*/42).fork()).ldelim();
                            if (message.stopCount != null && Object.hasOwnProperty.call(message, "stopCount"))
                                writer.uint32(/* id 6, wireType 0 =*/48).int32(message.stopCount);
                            if (message.tripShortText != null && Object.hasOwnProperty.call(message, "tripShortText"))
                                writer.uint32(/* id 7, wireType 2 =*/58).string(message.tripShortText);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified RouteLegStepTransitDetails message, length delimited. Does not implicitly {@link google.maps.routing.v2.RouteLegStepTransitDetails.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.maps.routing.v2.RouteLegStepTransitDetails
                         * @static
                         * @param {google.maps.routing.v2.IRouteLegStepTransitDetails} message RouteLegStepTransitDetails message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        RouteLegStepTransitDetails.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a RouteLegStepTransitDetails message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.maps.routing.v2.RouteLegStepTransitDetails
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.maps.routing.v2.RouteLegStepTransitDetails} RouteLegStepTransitDetails
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        RouteLegStepTransitDetails.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.maps.routing.v2.RouteLegStepTransitDetails();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.stopDetails = $root.google.maps.routing.v2.RouteLegStepTransitDetails.TransitStopDetails.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 2: {
                                        message.localizedValues = $root.google.maps.routing.v2.RouteLegStepTransitDetails.TransitDetailsLocalizedValues.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 3: {
                                        message.headsign = reader.string();
                                        break;
                                    }
                                case 4: {
                                        message.headway = $root.google.protobuf.Duration.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 5: {
                                        message.transitLine = $root.google.maps.routing.v2.TransitLine.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 6: {
                                        message.stopCount = reader.int32();
                                        break;
                                    }
                                case 7: {
                                        message.tripShortText = reader.string();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a RouteLegStepTransitDetails message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.maps.routing.v2.RouteLegStepTransitDetails
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.maps.routing.v2.RouteLegStepTransitDetails} RouteLegStepTransitDetails
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        RouteLegStepTransitDetails.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a RouteLegStepTransitDetails message.
                         * @function verify
                         * @memberof google.maps.routing.v2.RouteLegStepTransitDetails
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        RouteLegStepTransitDetails.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.stopDetails != null && message.hasOwnProperty("stopDetails")) {
                                var error = $root.google.maps.routing.v2.RouteLegStepTransitDetails.TransitStopDetails.verify(message.stopDetails);
                                if (error)
                                    return "stopDetails." + error;
                            }
                            if (message.localizedValues != null && message.hasOwnProperty("localizedValues")) {
                                var error = $root.google.maps.routing.v2.RouteLegStepTransitDetails.TransitDetailsLocalizedValues.verify(message.localizedValues);
                                if (error)
                                    return "localizedValues." + error;
                            }
                            if (message.headsign != null && message.hasOwnProperty("headsign"))
                                if (!$util.isString(message.headsign))
                                    return "headsign: string expected";
                            if (message.headway != null && message.hasOwnProperty("headway")) {
                                var error = $root.google.protobuf.Duration.verify(message.headway);
                                if (error)
                                    return "headway." + error;
                            }
                            if (message.transitLine != null && message.hasOwnProperty("transitLine")) {
                                var error = $root.google.maps.routing.v2.TransitLine.verify(message.transitLine);
                                if (error)
                                    return "transitLine." + error;
                            }
                            if (message.stopCount != null && message.hasOwnProperty("stopCount"))
                                if (!$util.isInteger(message.stopCount))
                                    return "stopCount: integer expected";
                            if (message.tripShortText != null && message.hasOwnProperty("tripShortText"))
                                if (!$util.isString(message.tripShortText))
                                    return "tripShortText: string expected";
                            return null;
                        };
    
                        /**
                         * Creates a RouteLegStepTransitDetails message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.maps.routing.v2.RouteLegStepTransitDetails
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.maps.routing.v2.RouteLegStepTransitDetails} RouteLegStepTransitDetails
                         */
                        RouteLegStepTransitDetails.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.maps.routing.v2.RouteLegStepTransitDetails)
                                return object;
                            var message = new $root.google.maps.routing.v2.RouteLegStepTransitDetails();
                            if (object.stopDetails != null) {
                                if (typeof object.stopDetails !== "object")
                                    throw TypeError(".google.maps.routing.v2.RouteLegStepTransitDetails.stopDetails: object expected");
                                message.stopDetails = $root.google.maps.routing.v2.RouteLegStepTransitDetails.TransitStopDetails.fromObject(object.stopDetails);
                            }
                            if (object.localizedValues != null) {
                                if (typeof object.localizedValues !== "object")
                                    throw TypeError(".google.maps.routing.v2.RouteLegStepTransitDetails.localizedValues: object expected");
                                message.localizedValues = $root.google.maps.routing.v2.RouteLegStepTransitDetails.TransitDetailsLocalizedValues.fromObject(object.localizedValues);
                            }
                            if (object.headsign != null)
                                message.headsign = String(object.headsign);
                            if (object.headway != null) {
                                if (typeof object.headway !== "object")
                                    throw TypeError(".google.maps.routing.v2.RouteLegStepTransitDetails.headway: object expected");
                                message.headway = $root.google.protobuf.Duration.fromObject(object.headway);
                            }
                            if (object.transitLine != null) {
                                if (typeof object.transitLine !== "object")
                                    throw TypeError(".google.maps.routing.v2.RouteLegStepTransitDetails.transitLine: object expected");
                                message.transitLine = $root.google.maps.routing.v2.TransitLine.fromObject(object.transitLine);
                            }
                            if (object.stopCount != null)
                                message.stopCount = object.stopCount | 0;
                            if (object.tripShortText != null)
                                message.tripShortText = String(object.tripShortText);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a RouteLegStepTransitDetails message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.maps.routing.v2.RouteLegStepTransitDetails
                         * @static
                         * @param {google.maps.routing.v2.RouteLegStepTransitDetails} message RouteLegStepTransitDetails
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        RouteLegStepTransitDetails.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.stopDetails = null;
                                object.localizedValues = null;
                                object.headsign = "";
                                object.headway = null;
                                object.transitLine = null;
                                object.stopCount = 0;
                                object.tripShortText = "";
                            }
                            if (message.stopDetails != null && message.hasOwnProperty("stopDetails"))
                                object.stopDetails = $root.google.maps.routing.v2.RouteLegStepTransitDetails.TransitStopDetails.toObject(message.stopDetails, options);
                            if (message.localizedValues != null && message.hasOwnProperty("localizedValues"))
                                object.localizedValues = $root.google.maps.routing.v2.RouteLegStepTransitDetails.TransitDetailsLocalizedValues.toObject(message.localizedValues, options);
                            if (message.headsign != null && message.hasOwnProperty("headsign"))
                                object.headsign = message.headsign;
                            if (message.headway != null && message.hasOwnProperty("headway"))
                                object.headway = $root.google.protobuf.Duration.toObject(message.headway, options);
                            if (message.transitLine != null && message.hasOwnProperty("transitLine"))
                                object.transitLine = $root.google.maps.routing.v2.TransitLine.toObject(message.transitLine, options);
                            if (message.stopCount != null && message.hasOwnProperty("stopCount"))
                                object.stopCount = message.stopCount;
                            if (message.tripShortText != null && message.hasOwnProperty("tripShortText"))
                                object.tripShortText = message.tripShortText;
                            return object;
                        };
    
                        /**
                         * Converts this RouteLegStepTransitDetails to JSON.
                         * @function toJSON
                         * @memberof google.maps.routing.v2.RouteLegStepTransitDetails
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        RouteLegStepTransitDetails.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for RouteLegStepTransitDetails
                         * @function getTypeUrl
                         * @memberof google.maps.routing.v2.RouteLegStepTransitDetails
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        RouteLegStepTransitDetails.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.maps.routing.v2.RouteLegStepTransitDetails";
                        };
    
                        RouteLegStepTransitDetails.TransitStopDetails = (function() {
    
                            /**
                             * Properties of a TransitStopDetails.
                             * @memberof google.maps.routing.v2.RouteLegStepTransitDetails
                             * @interface ITransitStopDetails
                             * @property {google.maps.routing.v2.ITransitStop|null} [arrivalStop] TransitStopDetails arrivalStop
                             * @property {google.protobuf.ITimestamp|null} [arrivalTime] TransitStopDetails arrivalTime
                             * @property {google.maps.routing.v2.ITransitStop|null} [departureStop] TransitStopDetails departureStop
                             * @property {google.protobuf.ITimestamp|null} [departureTime] TransitStopDetails departureTime
                             */
    
                            /**
                             * Constructs a new TransitStopDetails.
                             * @memberof google.maps.routing.v2.RouteLegStepTransitDetails
                             * @classdesc Represents a TransitStopDetails.
                             * @implements ITransitStopDetails
                             * @constructor
                             * @param {google.maps.routing.v2.RouteLegStepTransitDetails.ITransitStopDetails=} [properties] Properties to set
                             */
                            function TransitStopDetails(properties) {
                                if (properties)
                                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                        if (properties[keys[i]] != null)
                                            this[keys[i]] = properties[keys[i]];
                            }
    
                            /**
                             * TransitStopDetails arrivalStop.
                             * @member {google.maps.routing.v2.ITransitStop|null|undefined} arrivalStop
                             * @memberof google.maps.routing.v2.RouteLegStepTransitDetails.TransitStopDetails
                             * @instance
                             */
                            TransitStopDetails.prototype.arrivalStop = null;
    
                            /**
                             * TransitStopDetails arrivalTime.
                             * @member {google.protobuf.ITimestamp|null|undefined} arrivalTime
                             * @memberof google.maps.routing.v2.RouteLegStepTransitDetails.TransitStopDetails
                             * @instance
                             */
                            TransitStopDetails.prototype.arrivalTime = null;
    
                            /**
                             * TransitStopDetails departureStop.
                             * @member {google.maps.routing.v2.ITransitStop|null|undefined} departureStop
                             * @memberof google.maps.routing.v2.RouteLegStepTransitDetails.TransitStopDetails
                             * @instance
                             */
                            TransitStopDetails.prototype.departureStop = null;
    
                            /**
                             * TransitStopDetails departureTime.
                             * @member {google.protobuf.ITimestamp|null|undefined} departureTime
                             * @memberof google.maps.routing.v2.RouteLegStepTransitDetails.TransitStopDetails
                             * @instance
                             */
                            TransitStopDetails.prototype.departureTime = null;
    
                            /**
                             * Creates a new TransitStopDetails instance using the specified properties.
                             * @function create
                             * @memberof google.maps.routing.v2.RouteLegStepTransitDetails.TransitStopDetails
                             * @static
                             * @param {google.maps.routing.v2.RouteLegStepTransitDetails.ITransitStopDetails=} [properties] Properties to set
                             * @returns {google.maps.routing.v2.RouteLegStepTransitDetails.TransitStopDetails} TransitStopDetails instance
                             */
                            TransitStopDetails.create = function create(properties) {
                                return new TransitStopDetails(properties);
                            };
    
                            /**
                             * Encodes the specified TransitStopDetails message. Does not implicitly {@link google.maps.routing.v2.RouteLegStepTransitDetails.TransitStopDetails.verify|verify} messages.
                             * @function encode
                             * @memberof google.maps.routing.v2.RouteLegStepTransitDetails.TransitStopDetails
                             * @static
                             * @param {google.maps.routing.v2.RouteLegStepTransitDetails.ITransitStopDetails} message TransitStopDetails message or plain object to encode
                             * @param {$protobuf.Writer} [writer] Writer to encode to
                             * @returns {$protobuf.Writer} Writer
                             */
                            TransitStopDetails.encode = function encode(message, writer) {
                                if (!writer)
                                    writer = $Writer.create();
                                if (message.arrivalStop != null && Object.hasOwnProperty.call(message, "arrivalStop"))
                                    $root.google.maps.routing.v2.TransitStop.encode(message.arrivalStop, writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                                if (message.arrivalTime != null && Object.hasOwnProperty.call(message, "arrivalTime"))
                                    $root.google.protobuf.Timestamp.encode(message.arrivalTime, writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                                if (message.departureStop != null && Object.hasOwnProperty.call(message, "departureStop"))
                                    $root.google.maps.routing.v2.TransitStop.encode(message.departureStop, writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();
                                if (message.departureTime != null && Object.hasOwnProperty.call(message, "departureTime"))
                                    $root.google.protobuf.Timestamp.encode(message.departureTime, writer.uint32(/* id 4, wireType 2 =*/34).fork()).ldelim();
                                return writer;
                            };
    
                            /**
                             * Encodes the specified TransitStopDetails message, length delimited. Does not implicitly {@link google.maps.routing.v2.RouteLegStepTransitDetails.TransitStopDetails.verify|verify} messages.
                             * @function encodeDelimited
                             * @memberof google.maps.routing.v2.RouteLegStepTransitDetails.TransitStopDetails
                             * @static
                             * @param {google.maps.routing.v2.RouteLegStepTransitDetails.ITransitStopDetails} message TransitStopDetails message or plain object to encode
                             * @param {$protobuf.Writer} [writer] Writer to encode to
                             * @returns {$protobuf.Writer} Writer
                             */
                            TransitStopDetails.encodeDelimited = function encodeDelimited(message, writer) {
                                return this.encode(message, writer).ldelim();
                            };
    
                            /**
                             * Decodes a TransitStopDetails message from the specified reader or buffer.
                             * @function decode
                             * @memberof google.maps.routing.v2.RouteLegStepTransitDetails.TransitStopDetails
                             * @static
                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                             * @param {number} [length] Message length if known beforehand
                             * @returns {google.maps.routing.v2.RouteLegStepTransitDetails.TransitStopDetails} TransitStopDetails
                             * @throws {Error} If the payload is not a reader or valid buffer
                             * @throws {$protobuf.util.ProtocolError} If required fields are missing
                             */
                            TransitStopDetails.decode = function decode(reader, length) {
                                if (!(reader instanceof $Reader))
                                    reader = $Reader.create(reader);
                                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.maps.routing.v2.RouteLegStepTransitDetails.TransitStopDetails();
                                while (reader.pos < end) {
                                    var tag = reader.uint32();
                                    switch (tag >>> 3) {
                                    case 1: {
                                            message.arrivalStop = $root.google.maps.routing.v2.TransitStop.decode(reader, reader.uint32());
                                            break;
                                        }
                                    case 2: {
                                            message.arrivalTime = $root.google.protobuf.Timestamp.decode(reader, reader.uint32());
                                            break;
                                        }
                                    case 3: {
                                            message.departureStop = $root.google.maps.routing.v2.TransitStop.decode(reader, reader.uint32());
                                            break;
                                        }
                                    case 4: {
                                            message.departureTime = $root.google.protobuf.Timestamp.decode(reader, reader.uint32());
                                            break;
                                        }
                                    default:
                                        reader.skipType(tag & 7);
                                        break;
                                    }
                                }
                                return message;
                            };
    
                            /**
                             * Decodes a TransitStopDetails message from the specified reader or buffer, length delimited.
                             * @function decodeDelimited
                             * @memberof google.maps.routing.v2.RouteLegStepTransitDetails.TransitStopDetails
                             * @static
                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                             * @returns {google.maps.routing.v2.RouteLegStepTransitDetails.TransitStopDetails} TransitStopDetails
                             * @throws {Error} If the payload is not a reader or valid buffer
                             * @throws {$protobuf.util.ProtocolError} If required fields are missing
                             */
                            TransitStopDetails.decodeDelimited = function decodeDelimited(reader) {
                                if (!(reader instanceof $Reader))
                                    reader = new $Reader(reader);
                                return this.decode(reader, reader.uint32());
                            };
    
                            /**
                             * Verifies a TransitStopDetails message.
                             * @function verify
                             * @memberof google.maps.routing.v2.RouteLegStepTransitDetails.TransitStopDetails
                             * @static
                             * @param {Object.<string,*>} message Plain object to verify
                             * @returns {string|null} `null` if valid, otherwise the reason why it is not
                             */
                            TransitStopDetails.verify = function verify(message) {
                                if (typeof message !== "object" || message === null)
                                    return "object expected";
                                if (message.arrivalStop != null && message.hasOwnProperty("arrivalStop")) {
                                    var error = $root.google.maps.routing.v2.TransitStop.verify(message.arrivalStop);
                                    if (error)
                                        return "arrivalStop." + error;
                                }
                                if (message.arrivalTime != null && message.hasOwnProperty("arrivalTime")) {
                                    var error = $root.google.protobuf.Timestamp.verify(message.arrivalTime);
                                    if (error)
                                        return "arrivalTime." + error;
                                }
                                if (message.departureStop != null && message.hasOwnProperty("departureStop")) {
                                    var error = $root.google.maps.routing.v2.TransitStop.verify(message.departureStop);
                                    if (error)
                                        return "departureStop." + error;
                                }
                                if (message.departureTime != null && message.hasOwnProperty("departureTime")) {
                                    var error = $root.google.protobuf.Timestamp.verify(message.departureTime);
                                    if (error)
                                        return "departureTime." + error;
                                }
                                return null;
                            };
    
                            /**
                             * Creates a TransitStopDetails message from a plain object. Also converts values to their respective internal types.
                             * @function fromObject
                             * @memberof google.maps.routing.v2.RouteLegStepTransitDetails.TransitStopDetails
                             * @static
                             * @param {Object.<string,*>} object Plain object
                             * @returns {google.maps.routing.v2.RouteLegStepTransitDetails.TransitStopDetails} TransitStopDetails
                             */
                            TransitStopDetails.fromObject = function fromObject(object) {
                                if (object instanceof $root.google.maps.routing.v2.RouteLegStepTransitDetails.TransitStopDetails)
                                    return object;
                                var message = new $root.google.maps.routing.v2.RouteLegStepTransitDetails.TransitStopDetails();
                                if (object.arrivalStop != null) {
                                    if (typeof object.arrivalStop !== "object")
                                        throw TypeError(".google.maps.routing.v2.RouteLegStepTransitDetails.TransitStopDetails.arrivalStop: object expected");
                                    message.arrivalStop = $root.google.maps.routing.v2.TransitStop.fromObject(object.arrivalStop);
                                }
                                if (object.arrivalTime != null) {
                                    if (typeof object.arrivalTime !== "object")
                                        throw TypeError(".google.maps.routing.v2.RouteLegStepTransitDetails.TransitStopDetails.arrivalTime: object expected");
                                    message.arrivalTime = $root.google.protobuf.Timestamp.fromObject(object.arrivalTime);
                                }
                                if (object.departureStop != null) {
                                    if (typeof object.departureStop !== "object")
                                        throw TypeError(".google.maps.routing.v2.RouteLegStepTransitDetails.TransitStopDetails.departureStop: object expected");
                                    message.departureStop = $root.google.maps.routing.v2.TransitStop.fromObject(object.departureStop);
                                }
                                if (object.departureTime != null) {
                                    if (typeof object.departureTime !== "object")
                                        throw TypeError(".google.maps.routing.v2.RouteLegStepTransitDetails.TransitStopDetails.departureTime: object expected");
                                    message.departureTime = $root.google.protobuf.Timestamp.fromObject(object.departureTime);
                                }
                                return message;
                            };
    
                            /**
                             * Creates a plain object from a TransitStopDetails message. Also converts values to other types if specified.
                             * @function toObject
                             * @memberof google.maps.routing.v2.RouteLegStepTransitDetails.TransitStopDetails
                             * @static
                             * @param {google.maps.routing.v2.RouteLegStepTransitDetails.TransitStopDetails} message TransitStopDetails
                             * @param {$protobuf.IConversionOptions} [options] Conversion options
                             * @returns {Object.<string,*>} Plain object
                             */
                            TransitStopDetails.toObject = function toObject(message, options) {
                                if (!options)
                                    options = {};
                                var object = {};
                                if (options.defaults) {
                                    object.arrivalStop = null;
                                    object.arrivalTime = null;
                                    object.departureStop = null;
                                    object.departureTime = null;
                                }
                                if (message.arrivalStop != null && message.hasOwnProperty("arrivalStop"))
                                    object.arrivalStop = $root.google.maps.routing.v2.TransitStop.toObject(message.arrivalStop, options);
                                if (message.arrivalTime != null && message.hasOwnProperty("arrivalTime"))
                                    object.arrivalTime = $root.google.protobuf.Timestamp.toObject(message.arrivalTime, options);
                                if (message.departureStop != null && message.hasOwnProperty("departureStop"))
                                    object.departureStop = $root.google.maps.routing.v2.TransitStop.toObject(message.departureStop, options);
                                if (message.departureTime != null && message.hasOwnProperty("departureTime"))
                                    object.departureTime = $root.google.protobuf.Timestamp.toObject(message.departureTime, options);
                                return object;
                            };
    
                            /**
                             * Converts this TransitStopDetails to JSON.
                             * @function toJSON
                             * @memberof google.maps.routing.v2.RouteLegStepTransitDetails.TransitStopDetails
                             * @instance
                             * @returns {Object.<string,*>} JSON object
                             */
                            TransitStopDetails.prototype.toJSON = function toJSON() {
                                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                            };
    
                            /**
                             * Gets the default type url for TransitStopDetails
                             * @function getTypeUrl
                             * @memberof google.maps.routing.v2.RouteLegStepTransitDetails.TransitStopDetails
                             * @static
                             * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                             * @returns {string} The default type url
                             */
                            TransitStopDetails.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                                if (typeUrlPrefix === undefined) {
                                    typeUrlPrefix = "type.googleapis.com";
                                }
                                return typeUrlPrefix + "/google.maps.routing.v2.RouteLegStepTransitDetails.TransitStopDetails";
                            };
    
                            return TransitStopDetails;
                        })();
    
                        RouteLegStepTransitDetails.TransitDetailsLocalizedValues = (function() {
    
                            /**
                             * Properties of a TransitDetailsLocalizedValues.
                             * @memberof google.maps.routing.v2.RouteLegStepTransitDetails
                             * @interface ITransitDetailsLocalizedValues
                             * @property {google.maps.routing.v2.ILocalizedTime|null} [arrivalTime] TransitDetailsLocalizedValues arrivalTime
                             * @property {google.maps.routing.v2.ILocalizedTime|null} [departureTime] TransitDetailsLocalizedValues departureTime
                             */
    
                            /**
                             * Constructs a new TransitDetailsLocalizedValues.
                             * @memberof google.maps.routing.v2.RouteLegStepTransitDetails
                             * @classdesc Represents a TransitDetailsLocalizedValues.
                             * @implements ITransitDetailsLocalizedValues
                             * @constructor
                             * @param {google.maps.routing.v2.RouteLegStepTransitDetails.ITransitDetailsLocalizedValues=} [properties] Properties to set
                             */
                            function TransitDetailsLocalizedValues(properties) {
                                if (properties)
                                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                        if (properties[keys[i]] != null)
                                            this[keys[i]] = properties[keys[i]];
                            }
    
                            /**
                             * TransitDetailsLocalizedValues arrivalTime.
                             * @member {google.maps.routing.v2.ILocalizedTime|null|undefined} arrivalTime
                             * @memberof google.maps.routing.v2.RouteLegStepTransitDetails.TransitDetailsLocalizedValues
                             * @instance
                             */
                            TransitDetailsLocalizedValues.prototype.arrivalTime = null;
    
                            /**
                             * TransitDetailsLocalizedValues departureTime.
                             * @member {google.maps.routing.v2.ILocalizedTime|null|undefined} departureTime
                             * @memberof google.maps.routing.v2.RouteLegStepTransitDetails.TransitDetailsLocalizedValues
                             * @instance
                             */
                            TransitDetailsLocalizedValues.prototype.departureTime = null;
    
                            /**
                             * Creates a new TransitDetailsLocalizedValues instance using the specified properties.
                             * @function create
                             * @memberof google.maps.routing.v2.RouteLegStepTransitDetails.TransitDetailsLocalizedValues
                             * @static
                             * @param {google.maps.routing.v2.RouteLegStepTransitDetails.ITransitDetailsLocalizedValues=} [properties] Properties to set
                             * @returns {google.maps.routing.v2.RouteLegStepTransitDetails.TransitDetailsLocalizedValues} TransitDetailsLocalizedValues instance
                             */
                            TransitDetailsLocalizedValues.create = function create(properties) {
                                return new TransitDetailsLocalizedValues(properties);
                            };
    
                            /**
                             * Encodes the specified TransitDetailsLocalizedValues message. Does not implicitly {@link google.maps.routing.v2.RouteLegStepTransitDetails.TransitDetailsLocalizedValues.verify|verify} messages.
                             * @function encode
                             * @memberof google.maps.routing.v2.RouteLegStepTransitDetails.TransitDetailsLocalizedValues
                             * @static
                             * @param {google.maps.routing.v2.RouteLegStepTransitDetails.ITransitDetailsLocalizedValues} message TransitDetailsLocalizedValues message or plain object to encode
                             * @param {$protobuf.Writer} [writer] Writer to encode to
                             * @returns {$protobuf.Writer} Writer
                             */
                            TransitDetailsLocalizedValues.encode = function encode(message, writer) {
                                if (!writer)
                                    writer = $Writer.create();
                                if (message.arrivalTime != null && Object.hasOwnProperty.call(message, "arrivalTime"))
                                    $root.google.maps.routing.v2.LocalizedTime.encode(message.arrivalTime, writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                                if (message.departureTime != null && Object.hasOwnProperty.call(message, "departureTime"))
                                    $root.google.maps.routing.v2.LocalizedTime.encode(message.departureTime, writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                                return writer;
                            };
    
                            /**
                             * Encodes the specified TransitDetailsLocalizedValues message, length delimited. Does not implicitly {@link google.maps.routing.v2.RouteLegStepTransitDetails.TransitDetailsLocalizedValues.verify|verify} messages.
                             * @function encodeDelimited
                             * @memberof google.maps.routing.v2.RouteLegStepTransitDetails.TransitDetailsLocalizedValues
                             * @static
                             * @param {google.maps.routing.v2.RouteLegStepTransitDetails.ITransitDetailsLocalizedValues} message TransitDetailsLocalizedValues message or plain object to encode
                             * @param {$protobuf.Writer} [writer] Writer to encode to
                             * @returns {$protobuf.Writer} Writer
                             */
                            TransitDetailsLocalizedValues.encodeDelimited = function encodeDelimited(message, writer) {
                                return this.encode(message, writer).ldelim();
                            };
    
                            /**
                             * Decodes a TransitDetailsLocalizedValues message from the specified reader or buffer.
                             * @function decode
                             * @memberof google.maps.routing.v2.RouteLegStepTransitDetails.TransitDetailsLocalizedValues
                             * @static
                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                             * @param {number} [length] Message length if known beforehand
                             * @returns {google.maps.routing.v2.RouteLegStepTransitDetails.TransitDetailsLocalizedValues} TransitDetailsLocalizedValues
                             * @throws {Error} If the payload is not a reader or valid buffer
                             * @throws {$protobuf.util.ProtocolError} If required fields are missing
                             */
                            TransitDetailsLocalizedValues.decode = function decode(reader, length) {
                                if (!(reader instanceof $Reader))
                                    reader = $Reader.create(reader);
                                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.maps.routing.v2.RouteLegStepTransitDetails.TransitDetailsLocalizedValues();
                                while (reader.pos < end) {
                                    var tag = reader.uint32();
                                    switch (tag >>> 3) {
                                    case 1: {
                                            message.arrivalTime = $root.google.maps.routing.v2.LocalizedTime.decode(reader, reader.uint32());
                                            break;
                                        }
                                    case 2: {
                                            message.departureTime = $root.google.maps.routing.v2.LocalizedTime.decode(reader, reader.uint32());
                                            break;
                                        }
                                    default:
                                        reader.skipType(tag & 7);
                                        break;
                                    }
                                }
                                return message;
                            };
    
                            /**
                             * Decodes a TransitDetailsLocalizedValues message from the specified reader or buffer, length delimited.
                             * @function decodeDelimited
                             * @memberof google.maps.routing.v2.RouteLegStepTransitDetails.TransitDetailsLocalizedValues
                             * @static
                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                             * @returns {google.maps.routing.v2.RouteLegStepTransitDetails.TransitDetailsLocalizedValues} TransitDetailsLocalizedValues
                             * @throws {Error} If the payload is not a reader or valid buffer
                             * @throws {$protobuf.util.ProtocolError} If required fields are missing
                             */
                            TransitDetailsLocalizedValues.decodeDelimited = function decodeDelimited(reader) {
                                if (!(reader instanceof $Reader))
                                    reader = new $Reader(reader);
                                return this.decode(reader, reader.uint32());
                            };
    
                            /**
                             * Verifies a TransitDetailsLocalizedValues message.
                             * @function verify
                             * @memberof google.maps.routing.v2.RouteLegStepTransitDetails.TransitDetailsLocalizedValues
                             * @static
                             * @param {Object.<string,*>} message Plain object to verify
                             * @returns {string|null} `null` if valid, otherwise the reason why it is not
                             */
                            TransitDetailsLocalizedValues.verify = function verify(message) {
                                if (typeof message !== "object" || message === null)
                                    return "object expected";
                                if (message.arrivalTime != null && message.hasOwnProperty("arrivalTime")) {
                                    var error = $root.google.maps.routing.v2.LocalizedTime.verify(message.arrivalTime);
                                    if (error)
                                        return "arrivalTime." + error;
                                }
                                if (message.departureTime != null && message.hasOwnProperty("departureTime")) {
                                    var error = $root.google.maps.routing.v2.LocalizedTime.verify(message.departureTime);
                                    if (error)
                                        return "departureTime." + error;
                                }
                                return null;
                            };
    
                            /**
                             * Creates a TransitDetailsLocalizedValues message from a plain object. Also converts values to their respective internal types.
                             * @function fromObject
                             * @memberof google.maps.routing.v2.RouteLegStepTransitDetails.TransitDetailsLocalizedValues
                             * @static
                             * @param {Object.<string,*>} object Plain object
                             * @returns {google.maps.routing.v2.RouteLegStepTransitDetails.TransitDetailsLocalizedValues} TransitDetailsLocalizedValues
                             */
                            TransitDetailsLocalizedValues.fromObject = function fromObject(object) {
                                if (object instanceof $root.google.maps.routing.v2.RouteLegStepTransitDetails.TransitDetailsLocalizedValues)
                                    return object;
                                var message = new $root.google.maps.routing.v2.RouteLegStepTransitDetails.TransitDetailsLocalizedValues();
                                if (object.arrivalTime != null) {
                                    if (typeof object.arrivalTime !== "object")
                                        throw TypeError(".google.maps.routing.v2.RouteLegStepTransitDetails.TransitDetailsLocalizedValues.arrivalTime: object expected");
                                    message.arrivalTime = $root.google.maps.routing.v2.LocalizedTime.fromObject(object.arrivalTime);
                                }
                                if (object.departureTime != null) {
                                    if (typeof object.departureTime !== "object")
                                        throw TypeError(".google.maps.routing.v2.RouteLegStepTransitDetails.TransitDetailsLocalizedValues.departureTime: object expected");
                                    message.departureTime = $root.google.maps.routing.v2.LocalizedTime.fromObject(object.departureTime);
                                }
                                return message;
                            };
    
                            /**
                             * Creates a plain object from a TransitDetailsLocalizedValues message. Also converts values to other types if specified.
                             * @function toObject
                             * @memberof google.maps.routing.v2.RouteLegStepTransitDetails.TransitDetailsLocalizedValues
                             * @static
                             * @param {google.maps.routing.v2.RouteLegStepTransitDetails.TransitDetailsLocalizedValues} message TransitDetailsLocalizedValues
                             * @param {$protobuf.IConversionOptions} [options] Conversion options
                             * @returns {Object.<string,*>} Plain object
                             */
                            TransitDetailsLocalizedValues.toObject = function toObject(message, options) {
                                if (!options)
                                    options = {};
                                var object = {};
                                if (options.defaults) {
                                    object.arrivalTime = null;
                                    object.departureTime = null;
                                }
                                if (message.arrivalTime != null && message.hasOwnProperty("arrivalTime"))
                                    object.arrivalTime = $root.google.maps.routing.v2.LocalizedTime.toObject(message.arrivalTime, options);
                                if (message.departureTime != null && message.hasOwnProperty("departureTime"))
                                    object.departureTime = $root.google.maps.routing.v2.LocalizedTime.toObject(message.departureTime, options);
                                return object;
                            };
    
                            /**
                             * Converts this TransitDetailsLocalizedValues to JSON.
                             * @function toJSON
                             * @memberof google.maps.routing.v2.RouteLegStepTransitDetails.TransitDetailsLocalizedValues
                             * @instance
                             * @returns {Object.<string,*>} JSON object
                             */
                            TransitDetailsLocalizedValues.prototype.toJSON = function toJSON() {
                                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                            };
    
                            /**
                             * Gets the default type url for TransitDetailsLocalizedValues
                             * @function getTypeUrl
                             * @memberof google.maps.routing.v2.RouteLegStepTransitDetails.TransitDetailsLocalizedValues
                             * @static
                             * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                             * @returns {string} The default type url
                             */
                            TransitDetailsLocalizedValues.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                                if (typeUrlPrefix === undefined) {
                                    typeUrlPrefix = "type.googleapis.com";
                                }
                                return typeUrlPrefix + "/google.maps.routing.v2.RouteLegStepTransitDetails.TransitDetailsLocalizedValues";
                            };
    
                            return TransitDetailsLocalizedValues;
                        })();
    
                        return RouteLegStepTransitDetails;
                    })();
    
                    /**
                     * RouteLabel enum.
                     * @name google.maps.routing.v2.RouteLabel
                     * @enum {number}
                     * @property {number} ROUTE_LABEL_UNSPECIFIED=0 ROUTE_LABEL_UNSPECIFIED value
                     * @property {number} DEFAULT_ROUTE=1 DEFAULT_ROUTE value
                     * @property {number} DEFAULT_ROUTE_ALTERNATE=2 DEFAULT_ROUTE_ALTERNATE value
                     * @property {number} FUEL_EFFICIENT=3 FUEL_EFFICIENT value
                     */
                    v2.RouteLabel = (function() {
                        var valuesById = {}, values = Object.create(valuesById);
                        values[valuesById[0] = "ROUTE_LABEL_UNSPECIFIED"] = 0;
                        values[valuesById[1] = "DEFAULT_ROUTE"] = 1;
                        values[valuesById[2] = "DEFAULT_ROUTE_ALTERNATE"] = 2;
                        values[valuesById[3] = "FUEL_EFFICIENT"] = 3;
                        return values;
                    })();
    
                    /**
                     * RouteTravelMode enum.
                     * @name google.maps.routing.v2.RouteTravelMode
                     * @enum {number}
                     * @property {number} TRAVEL_MODE_UNSPECIFIED=0 TRAVEL_MODE_UNSPECIFIED value
                     * @property {number} DRIVE=1 DRIVE value
                     * @property {number} BICYCLE=2 BICYCLE value
                     * @property {number} WALK=3 WALK value
                     * @property {number} TWO_WHEELER=4 TWO_WHEELER value
                     * @property {number} TRANSIT=7 TRANSIT value
                     */
                    v2.RouteTravelMode = (function() {
                        var valuesById = {}, values = Object.create(valuesById);
                        values[valuesById[0] = "TRAVEL_MODE_UNSPECIFIED"] = 0;
                        values[valuesById[1] = "DRIVE"] = 1;
                        values[valuesById[2] = "BICYCLE"] = 2;
                        values[valuesById[3] = "WALK"] = 3;
                        values[valuesById[4] = "TWO_WHEELER"] = 4;
                        values[valuesById[7] = "TRANSIT"] = 7;
                        return values;
                    })();
    
                    v2.SpeedReadingInterval = (function() {
    
                        /**
                         * Properties of a SpeedReadingInterval.
                         * @memberof google.maps.routing.v2
                         * @interface ISpeedReadingInterval
                         * @property {number|null} [startPolylinePointIndex] SpeedReadingInterval startPolylinePointIndex
                         * @property {number|null} [endPolylinePointIndex] SpeedReadingInterval endPolylinePointIndex
                         * @property {google.maps.routing.v2.SpeedReadingInterval.Speed|null} [speed] SpeedReadingInterval speed
                         */
    
                        /**
                         * Constructs a new SpeedReadingInterval.
                         * @memberof google.maps.routing.v2
                         * @classdesc Represents a SpeedReadingInterval.
                         * @implements ISpeedReadingInterval
                         * @constructor
                         * @param {google.maps.routing.v2.ISpeedReadingInterval=} [properties] Properties to set
                         */
                        function SpeedReadingInterval(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * SpeedReadingInterval startPolylinePointIndex.
                         * @member {number|null|undefined} startPolylinePointIndex
                         * @memberof google.maps.routing.v2.SpeedReadingInterval
                         * @instance
                         */
                        SpeedReadingInterval.prototype.startPolylinePointIndex = null;
    
                        /**
                         * SpeedReadingInterval endPolylinePointIndex.
                         * @member {number|null|undefined} endPolylinePointIndex
                         * @memberof google.maps.routing.v2.SpeedReadingInterval
                         * @instance
                         */
                        SpeedReadingInterval.prototype.endPolylinePointIndex = null;
    
                        /**
                         * SpeedReadingInterval speed.
                         * @member {google.maps.routing.v2.SpeedReadingInterval.Speed|null|undefined} speed
                         * @memberof google.maps.routing.v2.SpeedReadingInterval
                         * @instance
                         */
                        SpeedReadingInterval.prototype.speed = null;
    
                        // OneOf field names bound to virtual getters and setters
                        var $oneOfFields;
    
                        /**
                         * SpeedReadingInterval _startPolylinePointIndex.
                         * @member {"startPolylinePointIndex"|undefined} _startPolylinePointIndex
                         * @memberof google.maps.routing.v2.SpeedReadingInterval
                         * @instance
                         */
                        Object.defineProperty(SpeedReadingInterval.prototype, "_startPolylinePointIndex", {
                            get: $util.oneOfGetter($oneOfFields = ["startPolylinePointIndex"]),
                            set: $util.oneOfSetter($oneOfFields)
                        });
    
                        /**
                         * SpeedReadingInterval _endPolylinePointIndex.
                         * @member {"endPolylinePointIndex"|undefined} _endPolylinePointIndex
                         * @memberof google.maps.routing.v2.SpeedReadingInterval
                         * @instance
                         */
                        Object.defineProperty(SpeedReadingInterval.prototype, "_endPolylinePointIndex", {
                            get: $util.oneOfGetter($oneOfFields = ["endPolylinePointIndex"]),
                            set: $util.oneOfSetter($oneOfFields)
                        });
    
                        /**
                         * SpeedReadingInterval speedType.
                         * @member {"speed"|undefined} speedType
                         * @memberof google.maps.routing.v2.SpeedReadingInterval
                         * @instance
                         */
                        Object.defineProperty(SpeedReadingInterval.prototype, "speedType", {
                            get: $util.oneOfGetter($oneOfFields = ["speed"]),
                            set: $util.oneOfSetter($oneOfFields)
                        });
    
                        /**
                         * Creates a new SpeedReadingInterval instance using the specified properties.
                         * @function create
                         * @memberof google.maps.routing.v2.SpeedReadingInterval
                         * @static
                         * @param {google.maps.routing.v2.ISpeedReadingInterval=} [properties] Properties to set
                         * @returns {google.maps.routing.v2.SpeedReadingInterval} SpeedReadingInterval instance
                         */
                        SpeedReadingInterval.create = function create(properties) {
                            return new SpeedReadingInterval(properties);
                        };
    
                        /**
                         * Encodes the specified SpeedReadingInterval message. Does not implicitly {@link google.maps.routing.v2.SpeedReadingInterval.verify|verify} messages.
                         * @function encode
                         * @memberof google.maps.routing.v2.SpeedReadingInterval
                         * @static
                         * @param {google.maps.routing.v2.ISpeedReadingInterval} message SpeedReadingInterval message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        SpeedReadingInterval.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.startPolylinePointIndex != null && Object.hasOwnProperty.call(message, "startPolylinePointIndex"))
                                writer.uint32(/* id 1, wireType 0 =*/8).int32(message.startPolylinePointIndex);
                            if (message.endPolylinePointIndex != null && Object.hasOwnProperty.call(message, "endPolylinePointIndex"))
                                writer.uint32(/* id 2, wireType 0 =*/16).int32(message.endPolylinePointIndex);
                            if (message.speed != null && Object.hasOwnProperty.call(message, "speed"))
                                writer.uint32(/* id 3, wireType 0 =*/24).int32(message.speed);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified SpeedReadingInterval message, length delimited. Does not implicitly {@link google.maps.routing.v2.SpeedReadingInterval.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.maps.routing.v2.SpeedReadingInterval
                         * @static
                         * @param {google.maps.routing.v2.ISpeedReadingInterval} message SpeedReadingInterval message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        SpeedReadingInterval.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a SpeedReadingInterval message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.maps.routing.v2.SpeedReadingInterval
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.maps.routing.v2.SpeedReadingInterval} SpeedReadingInterval
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        SpeedReadingInterval.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.maps.routing.v2.SpeedReadingInterval();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.startPolylinePointIndex = reader.int32();
                                        break;
                                    }
                                case 2: {
                                        message.endPolylinePointIndex = reader.int32();
                                        break;
                                    }
                                case 3: {
                                        message.speed = reader.int32();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a SpeedReadingInterval message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.maps.routing.v2.SpeedReadingInterval
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.maps.routing.v2.SpeedReadingInterval} SpeedReadingInterval
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        SpeedReadingInterval.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a SpeedReadingInterval message.
                         * @function verify
                         * @memberof google.maps.routing.v2.SpeedReadingInterval
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        SpeedReadingInterval.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            var properties = {};
                            if (message.startPolylinePointIndex != null && message.hasOwnProperty("startPolylinePointIndex")) {
                                properties._startPolylinePointIndex = 1;
                                if (!$util.isInteger(message.startPolylinePointIndex))
                                    return "startPolylinePointIndex: integer expected";
                            }
                            if (message.endPolylinePointIndex != null && message.hasOwnProperty("endPolylinePointIndex")) {
                                properties._endPolylinePointIndex = 1;
                                if (!$util.isInteger(message.endPolylinePointIndex))
                                    return "endPolylinePointIndex: integer expected";
                            }
                            if (message.speed != null && message.hasOwnProperty("speed")) {
                                properties.speedType = 1;
                                switch (message.speed) {
                                default:
                                    return "speed: enum value expected";
                                case 0:
                                case 1:
                                case 2:
                                case 3:
                                    break;
                                }
                            }
                            return null;
                        };
    
                        /**
                         * Creates a SpeedReadingInterval message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.maps.routing.v2.SpeedReadingInterval
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.maps.routing.v2.SpeedReadingInterval} SpeedReadingInterval
                         */
                        SpeedReadingInterval.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.maps.routing.v2.SpeedReadingInterval)
                                return object;
                            var message = new $root.google.maps.routing.v2.SpeedReadingInterval();
                            if (object.startPolylinePointIndex != null)
                                message.startPolylinePointIndex = object.startPolylinePointIndex | 0;
                            if (object.endPolylinePointIndex != null)
                                message.endPolylinePointIndex = object.endPolylinePointIndex | 0;
                            switch (object.speed) {
                            default:
                                if (typeof object.speed === "number") {
                                    message.speed = object.speed;
                                    break;
                                }
                                break;
                            case "SPEED_UNSPECIFIED":
                            case 0:
                                message.speed = 0;
                                break;
                            case "NORMAL":
                            case 1:
                                message.speed = 1;
                                break;
                            case "SLOW":
                            case 2:
                                message.speed = 2;
                                break;
                            case "TRAFFIC_JAM":
                            case 3:
                                message.speed = 3;
                                break;
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a SpeedReadingInterval message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.maps.routing.v2.SpeedReadingInterval
                         * @static
                         * @param {google.maps.routing.v2.SpeedReadingInterval} message SpeedReadingInterval
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        SpeedReadingInterval.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (message.startPolylinePointIndex != null && message.hasOwnProperty("startPolylinePointIndex")) {
                                object.startPolylinePointIndex = message.startPolylinePointIndex;
                                if (options.oneofs)
                                    object._startPolylinePointIndex = "startPolylinePointIndex";
                            }
                            if (message.endPolylinePointIndex != null && message.hasOwnProperty("endPolylinePointIndex")) {
                                object.endPolylinePointIndex = message.endPolylinePointIndex;
                                if (options.oneofs)
                                    object._endPolylinePointIndex = "endPolylinePointIndex";
                            }
                            if (message.speed != null && message.hasOwnProperty("speed")) {
                                object.speed = options.enums === String ? $root.google.maps.routing.v2.SpeedReadingInterval.Speed[message.speed] === undefined ? message.speed : $root.google.maps.routing.v2.SpeedReadingInterval.Speed[message.speed] : message.speed;
                                if (options.oneofs)
                                    object.speedType = "speed";
                            }
                            return object;
                        };
    
                        /**
                         * Converts this SpeedReadingInterval to JSON.
                         * @function toJSON
                         * @memberof google.maps.routing.v2.SpeedReadingInterval
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        SpeedReadingInterval.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for SpeedReadingInterval
                         * @function getTypeUrl
                         * @memberof google.maps.routing.v2.SpeedReadingInterval
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        SpeedReadingInterval.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.maps.routing.v2.SpeedReadingInterval";
                        };
    
                        /**
                         * Speed enum.
                         * @name google.maps.routing.v2.SpeedReadingInterval.Speed
                         * @enum {number}
                         * @property {number} SPEED_UNSPECIFIED=0 SPEED_UNSPECIFIED value
                         * @property {number} NORMAL=1 NORMAL value
                         * @property {number} SLOW=2 SLOW value
                         * @property {number} TRAFFIC_JAM=3 TRAFFIC_JAM value
                         */
                        SpeedReadingInterval.Speed = (function() {
                            var valuesById = {}, values = Object.create(valuesById);
                            values[valuesById[0] = "SPEED_UNSPECIFIED"] = 0;
                            values[valuesById[1] = "NORMAL"] = 1;
                            values[valuesById[2] = "SLOW"] = 2;
                            values[valuesById[3] = "TRAFFIC_JAM"] = 3;
                            return values;
                        })();
    
                        return SpeedReadingInterval;
                    })();
    
                    v2.TollInfo = (function() {
    
                        /**
                         * Properties of a TollInfo.
                         * @memberof google.maps.routing.v2
                         * @interface ITollInfo
                         * @property {Array.<google.type.IMoney>|null} [estimatedPrice] TollInfo estimatedPrice
                         */
    
                        /**
                         * Constructs a new TollInfo.
                         * @memberof google.maps.routing.v2
                         * @classdesc Represents a TollInfo.
                         * @implements ITollInfo
                         * @constructor
                         * @param {google.maps.routing.v2.ITollInfo=} [properties] Properties to set
                         */
                        function TollInfo(properties) {
                            this.estimatedPrice = [];
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * TollInfo estimatedPrice.
                         * @member {Array.<google.type.IMoney>} estimatedPrice
                         * @memberof google.maps.routing.v2.TollInfo
                         * @instance
                         */
                        TollInfo.prototype.estimatedPrice = $util.emptyArray;
    
                        /**
                         * Creates a new TollInfo instance using the specified properties.
                         * @function create
                         * @memberof google.maps.routing.v2.TollInfo
                         * @static
                         * @param {google.maps.routing.v2.ITollInfo=} [properties] Properties to set
                         * @returns {google.maps.routing.v2.TollInfo} TollInfo instance
                         */
                        TollInfo.create = function create(properties) {
                            return new TollInfo(properties);
                        };
    
                        /**
                         * Encodes the specified TollInfo message. Does not implicitly {@link google.maps.routing.v2.TollInfo.verify|verify} messages.
                         * @function encode
                         * @memberof google.maps.routing.v2.TollInfo
                         * @static
                         * @param {google.maps.routing.v2.ITollInfo} message TollInfo message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        TollInfo.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.estimatedPrice != null && message.estimatedPrice.length)
                                for (var i = 0; i < message.estimatedPrice.length; ++i)
                                    $root.google.type.Money.encode(message.estimatedPrice[i], writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                            return writer;
                        };
    
                        /**
                         * Encodes the specified TollInfo message, length delimited. Does not implicitly {@link google.maps.routing.v2.TollInfo.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.maps.routing.v2.TollInfo
                         * @static
                         * @param {google.maps.routing.v2.ITollInfo} message TollInfo message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        TollInfo.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a TollInfo message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.maps.routing.v2.TollInfo
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.maps.routing.v2.TollInfo} TollInfo
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        TollInfo.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.maps.routing.v2.TollInfo();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        if (!(message.estimatedPrice && message.estimatedPrice.length))
                                            message.estimatedPrice = [];
                                        message.estimatedPrice.push($root.google.type.Money.decode(reader, reader.uint32()));
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a TollInfo message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.maps.routing.v2.TollInfo
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.maps.routing.v2.TollInfo} TollInfo
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        TollInfo.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a TollInfo message.
                         * @function verify
                         * @memberof google.maps.routing.v2.TollInfo
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        TollInfo.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.estimatedPrice != null && message.hasOwnProperty("estimatedPrice")) {
                                if (!Array.isArray(message.estimatedPrice))
                                    return "estimatedPrice: array expected";
                                for (var i = 0; i < message.estimatedPrice.length; ++i) {
                                    var error = $root.google.type.Money.verify(message.estimatedPrice[i]);
                                    if (error)
                                        return "estimatedPrice." + error;
                                }
                            }
                            return null;
                        };
    
                        /**
                         * Creates a TollInfo message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.maps.routing.v2.TollInfo
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.maps.routing.v2.TollInfo} TollInfo
                         */
                        TollInfo.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.maps.routing.v2.TollInfo)
                                return object;
                            var message = new $root.google.maps.routing.v2.TollInfo();
                            if (object.estimatedPrice) {
                                if (!Array.isArray(object.estimatedPrice))
                                    throw TypeError(".google.maps.routing.v2.TollInfo.estimatedPrice: array expected");
                                message.estimatedPrice = [];
                                for (var i = 0; i < object.estimatedPrice.length; ++i) {
                                    if (typeof object.estimatedPrice[i] !== "object")
                                        throw TypeError(".google.maps.routing.v2.TollInfo.estimatedPrice: object expected");
                                    message.estimatedPrice[i] = $root.google.type.Money.fromObject(object.estimatedPrice[i]);
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a TollInfo message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.maps.routing.v2.TollInfo
                         * @static
                         * @param {google.maps.routing.v2.TollInfo} message TollInfo
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        TollInfo.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.arrays || options.defaults)
                                object.estimatedPrice = [];
                            if (message.estimatedPrice && message.estimatedPrice.length) {
                                object.estimatedPrice = [];
                                for (var j = 0; j < message.estimatedPrice.length; ++j)
                                    object.estimatedPrice[j] = $root.google.type.Money.toObject(message.estimatedPrice[j], options);
                            }
                            return object;
                        };
    
                        /**
                         * Converts this TollInfo to JSON.
                         * @function toJSON
                         * @memberof google.maps.routing.v2.TollInfo
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        TollInfo.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for TollInfo
                         * @function getTypeUrl
                         * @memberof google.maps.routing.v2.TollInfo
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        TollInfo.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.maps.routing.v2.TollInfo";
                        };
    
                        return TollInfo;
                    })();
    
                    v2.TransitAgency = (function() {
    
                        /**
                         * Properties of a TransitAgency.
                         * @memberof google.maps.routing.v2
                         * @interface ITransitAgency
                         * @property {string|null} [name] TransitAgency name
                         * @property {string|null} [phoneNumber] TransitAgency phoneNumber
                         * @property {string|null} [uri] TransitAgency uri
                         */
    
                        /**
                         * Constructs a new TransitAgency.
                         * @memberof google.maps.routing.v2
                         * @classdesc Represents a TransitAgency.
                         * @implements ITransitAgency
                         * @constructor
                         * @param {google.maps.routing.v2.ITransitAgency=} [properties] Properties to set
                         */
                        function TransitAgency(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * TransitAgency name.
                         * @member {string} name
                         * @memberof google.maps.routing.v2.TransitAgency
                         * @instance
                         */
                        TransitAgency.prototype.name = "";
    
                        /**
                         * TransitAgency phoneNumber.
                         * @member {string} phoneNumber
                         * @memberof google.maps.routing.v2.TransitAgency
                         * @instance
                         */
                        TransitAgency.prototype.phoneNumber = "";
    
                        /**
                         * TransitAgency uri.
                         * @member {string} uri
                         * @memberof google.maps.routing.v2.TransitAgency
                         * @instance
                         */
                        TransitAgency.prototype.uri = "";
    
                        /**
                         * Creates a new TransitAgency instance using the specified properties.
                         * @function create
                         * @memberof google.maps.routing.v2.TransitAgency
                         * @static
                         * @param {google.maps.routing.v2.ITransitAgency=} [properties] Properties to set
                         * @returns {google.maps.routing.v2.TransitAgency} TransitAgency instance
                         */
                        TransitAgency.create = function create(properties) {
                            return new TransitAgency(properties);
                        };
    
                        /**
                         * Encodes the specified TransitAgency message. Does not implicitly {@link google.maps.routing.v2.TransitAgency.verify|verify} messages.
                         * @function encode
                         * @memberof google.maps.routing.v2.TransitAgency
                         * @static
                         * @param {google.maps.routing.v2.ITransitAgency} message TransitAgency message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        TransitAgency.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                            if (message.phoneNumber != null && Object.hasOwnProperty.call(message, "phoneNumber"))
                                writer.uint32(/* id 2, wireType 2 =*/18).string(message.phoneNumber);
                            if (message.uri != null && Object.hasOwnProperty.call(message, "uri"))
                                writer.uint32(/* id 3, wireType 2 =*/26).string(message.uri);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified TransitAgency message, length delimited. Does not implicitly {@link google.maps.routing.v2.TransitAgency.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.maps.routing.v2.TransitAgency
                         * @static
                         * @param {google.maps.routing.v2.ITransitAgency} message TransitAgency message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        TransitAgency.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a TransitAgency message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.maps.routing.v2.TransitAgency
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.maps.routing.v2.TransitAgency} TransitAgency
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        TransitAgency.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.maps.routing.v2.TransitAgency();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.name = reader.string();
                                        break;
                                    }
                                case 2: {
                                        message.phoneNumber = reader.string();
                                        break;
                                    }
                                case 3: {
                                        message.uri = reader.string();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a TransitAgency message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.maps.routing.v2.TransitAgency
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.maps.routing.v2.TransitAgency} TransitAgency
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        TransitAgency.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a TransitAgency message.
                         * @function verify
                         * @memberof google.maps.routing.v2.TransitAgency
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        TransitAgency.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.name != null && message.hasOwnProperty("name"))
                                if (!$util.isString(message.name))
                                    return "name: string expected";
                            if (message.phoneNumber != null && message.hasOwnProperty("phoneNumber"))
                                if (!$util.isString(message.phoneNumber))
                                    return "phoneNumber: string expected";
                            if (message.uri != null && message.hasOwnProperty("uri"))
                                if (!$util.isString(message.uri))
                                    return "uri: string expected";
                            return null;
                        };
    
                        /**
                         * Creates a TransitAgency message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.maps.routing.v2.TransitAgency
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.maps.routing.v2.TransitAgency} TransitAgency
                         */
                        TransitAgency.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.maps.routing.v2.TransitAgency)
                                return object;
                            var message = new $root.google.maps.routing.v2.TransitAgency();
                            if (object.name != null)
                                message.name = String(object.name);
                            if (object.phoneNumber != null)
                                message.phoneNumber = String(object.phoneNumber);
                            if (object.uri != null)
                                message.uri = String(object.uri);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a TransitAgency message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.maps.routing.v2.TransitAgency
                         * @static
                         * @param {google.maps.routing.v2.TransitAgency} message TransitAgency
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        TransitAgency.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.name = "";
                                object.phoneNumber = "";
                                object.uri = "";
                            }
                            if (message.name != null && message.hasOwnProperty("name"))
                                object.name = message.name;
                            if (message.phoneNumber != null && message.hasOwnProperty("phoneNumber"))
                                object.phoneNumber = message.phoneNumber;
                            if (message.uri != null && message.hasOwnProperty("uri"))
                                object.uri = message.uri;
                            return object;
                        };
    
                        /**
                         * Converts this TransitAgency to JSON.
                         * @function toJSON
                         * @memberof google.maps.routing.v2.TransitAgency
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        TransitAgency.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for TransitAgency
                         * @function getTypeUrl
                         * @memberof google.maps.routing.v2.TransitAgency
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        TransitAgency.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.maps.routing.v2.TransitAgency";
                        };
    
                        return TransitAgency;
                    })();
    
                    v2.TransitLine = (function() {
    
                        /**
                         * Properties of a TransitLine.
                         * @memberof google.maps.routing.v2
                         * @interface ITransitLine
                         * @property {Array.<google.maps.routing.v2.ITransitAgency>|null} [agencies] TransitLine agencies
                         * @property {string|null} [name] TransitLine name
                         * @property {string|null} [uri] TransitLine uri
                         * @property {string|null} [color] TransitLine color
                         * @property {string|null} [iconUri] TransitLine iconUri
                         * @property {string|null} [nameShort] TransitLine nameShort
                         * @property {string|null} [textColor] TransitLine textColor
                         * @property {google.maps.routing.v2.ITransitVehicle|null} [vehicle] TransitLine vehicle
                         */
    
                        /**
                         * Constructs a new TransitLine.
                         * @memberof google.maps.routing.v2
                         * @classdesc Represents a TransitLine.
                         * @implements ITransitLine
                         * @constructor
                         * @param {google.maps.routing.v2.ITransitLine=} [properties] Properties to set
                         */
                        function TransitLine(properties) {
                            this.agencies = [];
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * TransitLine agencies.
                         * @member {Array.<google.maps.routing.v2.ITransitAgency>} agencies
                         * @memberof google.maps.routing.v2.TransitLine
                         * @instance
                         */
                        TransitLine.prototype.agencies = $util.emptyArray;
    
                        /**
                         * TransitLine name.
                         * @member {string} name
                         * @memberof google.maps.routing.v2.TransitLine
                         * @instance
                         */
                        TransitLine.prototype.name = "";
    
                        /**
                         * TransitLine uri.
                         * @member {string} uri
                         * @memberof google.maps.routing.v2.TransitLine
                         * @instance
                         */
                        TransitLine.prototype.uri = "";
    
                        /**
                         * TransitLine color.
                         * @member {string} color
                         * @memberof google.maps.routing.v2.TransitLine
                         * @instance
                         */
                        TransitLine.prototype.color = "";
    
                        /**
                         * TransitLine iconUri.
                         * @member {string} iconUri
                         * @memberof google.maps.routing.v2.TransitLine
                         * @instance
                         */
                        TransitLine.prototype.iconUri = "";
    
                        /**
                         * TransitLine nameShort.
                         * @member {string} nameShort
                         * @memberof google.maps.routing.v2.TransitLine
                         * @instance
                         */
                        TransitLine.prototype.nameShort = "";
    
                        /**
                         * TransitLine textColor.
                         * @member {string} textColor
                         * @memberof google.maps.routing.v2.TransitLine
                         * @instance
                         */
                        TransitLine.prototype.textColor = "";
    
                        /**
                         * TransitLine vehicle.
                         * @member {google.maps.routing.v2.ITransitVehicle|null|undefined} vehicle
                         * @memberof google.maps.routing.v2.TransitLine
                         * @instance
                         */
                        TransitLine.prototype.vehicle = null;
    
                        /**
                         * Creates a new TransitLine instance using the specified properties.
                         * @function create
                         * @memberof google.maps.routing.v2.TransitLine
                         * @static
                         * @param {google.maps.routing.v2.ITransitLine=} [properties] Properties to set
                         * @returns {google.maps.routing.v2.TransitLine} TransitLine instance
                         */
                        TransitLine.create = function create(properties) {
                            return new TransitLine(properties);
                        };
    
                        /**
                         * Encodes the specified TransitLine message. Does not implicitly {@link google.maps.routing.v2.TransitLine.verify|verify} messages.
                         * @function encode
                         * @memberof google.maps.routing.v2.TransitLine
                         * @static
                         * @param {google.maps.routing.v2.ITransitLine} message TransitLine message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        TransitLine.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.agencies != null && message.agencies.length)
                                for (var i = 0; i < message.agencies.length; ++i)
                                    $root.google.maps.routing.v2.TransitAgency.encode(message.agencies[i], writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                            if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                                writer.uint32(/* id 2, wireType 2 =*/18).string(message.name);
                            if (message.uri != null && Object.hasOwnProperty.call(message, "uri"))
                                writer.uint32(/* id 3, wireType 2 =*/26).string(message.uri);
                            if (message.color != null && Object.hasOwnProperty.call(message, "color"))
                                writer.uint32(/* id 4, wireType 2 =*/34).string(message.color);
                            if (message.iconUri != null && Object.hasOwnProperty.call(message, "iconUri"))
                                writer.uint32(/* id 5, wireType 2 =*/42).string(message.iconUri);
                            if (message.nameShort != null && Object.hasOwnProperty.call(message, "nameShort"))
                                writer.uint32(/* id 6, wireType 2 =*/50).string(message.nameShort);
                            if (message.textColor != null && Object.hasOwnProperty.call(message, "textColor"))
                                writer.uint32(/* id 7, wireType 2 =*/58).string(message.textColor);
                            if (message.vehicle != null && Object.hasOwnProperty.call(message, "vehicle"))
                                $root.google.maps.routing.v2.TransitVehicle.encode(message.vehicle, writer.uint32(/* id 8, wireType 2 =*/66).fork()).ldelim();
                            return writer;
                        };
    
                        /**
                         * Encodes the specified TransitLine message, length delimited. Does not implicitly {@link google.maps.routing.v2.TransitLine.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.maps.routing.v2.TransitLine
                         * @static
                         * @param {google.maps.routing.v2.ITransitLine} message TransitLine message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        TransitLine.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a TransitLine message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.maps.routing.v2.TransitLine
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.maps.routing.v2.TransitLine} TransitLine
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        TransitLine.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.maps.routing.v2.TransitLine();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        if (!(message.agencies && message.agencies.length))
                                            message.agencies = [];
                                        message.agencies.push($root.google.maps.routing.v2.TransitAgency.decode(reader, reader.uint32()));
                                        break;
                                    }
                                case 2: {
                                        message.name = reader.string();
                                        break;
                                    }
                                case 3: {
                                        message.uri = reader.string();
                                        break;
                                    }
                                case 4: {
                                        message.color = reader.string();
                                        break;
                                    }
                                case 5: {
                                        message.iconUri = reader.string();
                                        break;
                                    }
                                case 6: {
                                        message.nameShort = reader.string();
                                        break;
                                    }
                                case 7: {
                                        message.textColor = reader.string();
                                        break;
                                    }
                                case 8: {
                                        message.vehicle = $root.google.maps.routing.v2.TransitVehicle.decode(reader, reader.uint32());
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a TransitLine message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.maps.routing.v2.TransitLine
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.maps.routing.v2.TransitLine} TransitLine
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        TransitLine.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a TransitLine message.
                         * @function verify
                         * @memberof google.maps.routing.v2.TransitLine
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        TransitLine.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.agencies != null && message.hasOwnProperty("agencies")) {
                                if (!Array.isArray(message.agencies))
                                    return "agencies: array expected";
                                for (var i = 0; i < message.agencies.length; ++i) {
                                    var error = $root.google.maps.routing.v2.TransitAgency.verify(message.agencies[i]);
                                    if (error)
                                        return "agencies." + error;
                                }
                            }
                            if (message.name != null && message.hasOwnProperty("name"))
                                if (!$util.isString(message.name))
                                    return "name: string expected";
                            if (message.uri != null && message.hasOwnProperty("uri"))
                                if (!$util.isString(message.uri))
                                    return "uri: string expected";
                            if (message.color != null && message.hasOwnProperty("color"))
                                if (!$util.isString(message.color))
                                    return "color: string expected";
                            if (message.iconUri != null && message.hasOwnProperty("iconUri"))
                                if (!$util.isString(message.iconUri))
                                    return "iconUri: string expected";
                            if (message.nameShort != null && message.hasOwnProperty("nameShort"))
                                if (!$util.isString(message.nameShort))
                                    return "nameShort: string expected";
                            if (message.textColor != null && message.hasOwnProperty("textColor"))
                                if (!$util.isString(message.textColor))
                                    return "textColor: string expected";
                            if (message.vehicle != null && message.hasOwnProperty("vehicle")) {
                                var error = $root.google.maps.routing.v2.TransitVehicle.verify(message.vehicle);
                                if (error)
                                    return "vehicle." + error;
                            }
                            return null;
                        };
    
                        /**
                         * Creates a TransitLine message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.maps.routing.v2.TransitLine
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.maps.routing.v2.TransitLine} TransitLine
                         */
                        TransitLine.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.maps.routing.v2.TransitLine)
                                return object;
                            var message = new $root.google.maps.routing.v2.TransitLine();
                            if (object.agencies) {
                                if (!Array.isArray(object.agencies))
                                    throw TypeError(".google.maps.routing.v2.TransitLine.agencies: array expected");
                                message.agencies = [];
                                for (var i = 0; i < object.agencies.length; ++i) {
                                    if (typeof object.agencies[i] !== "object")
                                        throw TypeError(".google.maps.routing.v2.TransitLine.agencies: object expected");
                                    message.agencies[i] = $root.google.maps.routing.v2.TransitAgency.fromObject(object.agencies[i]);
                                }
                            }
                            if (object.name != null)
                                message.name = String(object.name);
                            if (object.uri != null)
                                message.uri = String(object.uri);
                            if (object.color != null)
                                message.color = String(object.color);
                            if (object.iconUri != null)
                                message.iconUri = String(object.iconUri);
                            if (object.nameShort != null)
                                message.nameShort = String(object.nameShort);
                            if (object.textColor != null)
                                message.textColor = String(object.textColor);
                            if (object.vehicle != null) {
                                if (typeof object.vehicle !== "object")
                                    throw TypeError(".google.maps.routing.v2.TransitLine.vehicle: object expected");
                                message.vehicle = $root.google.maps.routing.v2.TransitVehicle.fromObject(object.vehicle);
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a TransitLine message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.maps.routing.v2.TransitLine
                         * @static
                         * @param {google.maps.routing.v2.TransitLine} message TransitLine
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        TransitLine.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.arrays || options.defaults)
                                object.agencies = [];
                            if (options.defaults) {
                                object.name = "";
                                object.uri = "";
                                object.color = "";
                                object.iconUri = "";
                                object.nameShort = "";
                                object.textColor = "";
                                object.vehicle = null;
                            }
                            if (message.agencies && message.agencies.length) {
                                object.agencies = [];
                                for (var j = 0; j < message.agencies.length; ++j)
                                    object.agencies[j] = $root.google.maps.routing.v2.TransitAgency.toObject(message.agencies[j], options);
                            }
                            if (message.name != null && message.hasOwnProperty("name"))
                                object.name = message.name;
                            if (message.uri != null && message.hasOwnProperty("uri"))
                                object.uri = message.uri;
                            if (message.color != null && message.hasOwnProperty("color"))
                                object.color = message.color;
                            if (message.iconUri != null && message.hasOwnProperty("iconUri"))
                                object.iconUri = message.iconUri;
                            if (message.nameShort != null && message.hasOwnProperty("nameShort"))
                                object.nameShort = message.nameShort;
                            if (message.textColor != null && message.hasOwnProperty("textColor"))
                                object.textColor = message.textColor;
                            if (message.vehicle != null && message.hasOwnProperty("vehicle"))
                                object.vehicle = $root.google.maps.routing.v2.TransitVehicle.toObject(message.vehicle, options);
                            return object;
                        };
    
                        /**
                         * Converts this TransitLine to JSON.
                         * @function toJSON
                         * @memberof google.maps.routing.v2.TransitLine
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        TransitLine.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for TransitLine
                         * @function getTypeUrl
                         * @memberof google.maps.routing.v2.TransitLine
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        TransitLine.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.maps.routing.v2.TransitLine";
                        };
    
                        return TransitLine;
                    })();
    
                    v2.TransitStop = (function() {
    
                        /**
                         * Properties of a TransitStop.
                         * @memberof google.maps.routing.v2
                         * @interface ITransitStop
                         * @property {string|null} [name] TransitStop name
                         * @property {google.maps.routing.v2.ILocation|null} [location] TransitStop location
                         */
    
                        /**
                         * Constructs a new TransitStop.
                         * @memberof google.maps.routing.v2
                         * @classdesc Represents a TransitStop.
                         * @implements ITransitStop
                         * @constructor
                         * @param {google.maps.routing.v2.ITransitStop=} [properties] Properties to set
                         */
                        function TransitStop(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * TransitStop name.
                         * @member {string} name
                         * @memberof google.maps.routing.v2.TransitStop
                         * @instance
                         */
                        TransitStop.prototype.name = "";
    
                        /**
                         * TransitStop location.
                         * @member {google.maps.routing.v2.ILocation|null|undefined} location
                         * @memberof google.maps.routing.v2.TransitStop
                         * @instance
                         */
                        TransitStop.prototype.location = null;
    
                        /**
                         * Creates a new TransitStop instance using the specified properties.
                         * @function create
                         * @memberof google.maps.routing.v2.TransitStop
                         * @static
                         * @param {google.maps.routing.v2.ITransitStop=} [properties] Properties to set
                         * @returns {google.maps.routing.v2.TransitStop} TransitStop instance
                         */
                        TransitStop.create = function create(properties) {
                            return new TransitStop(properties);
                        };
    
                        /**
                         * Encodes the specified TransitStop message. Does not implicitly {@link google.maps.routing.v2.TransitStop.verify|verify} messages.
                         * @function encode
                         * @memberof google.maps.routing.v2.TransitStop
                         * @static
                         * @param {google.maps.routing.v2.ITransitStop} message TransitStop message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        TransitStop.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                            if (message.location != null && Object.hasOwnProperty.call(message, "location"))
                                $root.google.maps.routing.v2.Location.encode(message.location, writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                            return writer;
                        };
    
                        /**
                         * Encodes the specified TransitStop message, length delimited. Does not implicitly {@link google.maps.routing.v2.TransitStop.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.maps.routing.v2.TransitStop
                         * @static
                         * @param {google.maps.routing.v2.ITransitStop} message TransitStop message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        TransitStop.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a TransitStop message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.maps.routing.v2.TransitStop
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.maps.routing.v2.TransitStop} TransitStop
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        TransitStop.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.maps.routing.v2.TransitStop();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.name = reader.string();
                                        break;
                                    }
                                case 2: {
                                        message.location = $root.google.maps.routing.v2.Location.decode(reader, reader.uint32());
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a TransitStop message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.maps.routing.v2.TransitStop
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.maps.routing.v2.TransitStop} TransitStop
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        TransitStop.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a TransitStop message.
                         * @function verify
                         * @memberof google.maps.routing.v2.TransitStop
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        TransitStop.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.name != null && message.hasOwnProperty("name"))
                                if (!$util.isString(message.name))
                                    return "name: string expected";
                            if (message.location != null && message.hasOwnProperty("location")) {
                                var error = $root.google.maps.routing.v2.Location.verify(message.location);
                                if (error)
                                    return "location." + error;
                            }
                            return null;
                        };
    
                        /**
                         * Creates a TransitStop message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.maps.routing.v2.TransitStop
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.maps.routing.v2.TransitStop} TransitStop
                         */
                        TransitStop.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.maps.routing.v2.TransitStop)
                                return object;
                            var message = new $root.google.maps.routing.v2.TransitStop();
                            if (object.name != null)
                                message.name = String(object.name);
                            if (object.location != null) {
                                if (typeof object.location !== "object")
                                    throw TypeError(".google.maps.routing.v2.TransitStop.location: object expected");
                                message.location = $root.google.maps.routing.v2.Location.fromObject(object.location);
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a TransitStop message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.maps.routing.v2.TransitStop
                         * @static
                         * @param {google.maps.routing.v2.TransitStop} message TransitStop
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        TransitStop.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.name = "";
                                object.location = null;
                            }
                            if (message.name != null && message.hasOwnProperty("name"))
                                object.name = message.name;
                            if (message.location != null && message.hasOwnProperty("location"))
                                object.location = $root.google.maps.routing.v2.Location.toObject(message.location, options);
                            return object;
                        };
    
                        /**
                         * Converts this TransitStop to JSON.
                         * @function toJSON
                         * @memberof google.maps.routing.v2.TransitStop
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        TransitStop.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for TransitStop
                         * @function getTypeUrl
                         * @memberof google.maps.routing.v2.TransitStop
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        TransitStop.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.maps.routing.v2.TransitStop";
                        };
    
                        return TransitStop;
                    })();
    
                    v2.TransitVehicle = (function() {
    
                        /**
                         * Properties of a TransitVehicle.
                         * @memberof google.maps.routing.v2
                         * @interface ITransitVehicle
                         * @property {google.type.ILocalizedText|null} [name] TransitVehicle name
                         * @property {google.maps.routing.v2.TransitVehicle.TransitVehicleType|null} [type] TransitVehicle type
                         * @property {string|null} [iconUri] TransitVehicle iconUri
                         * @property {string|null} [localIconUri] TransitVehicle localIconUri
                         */
    
                        /**
                         * Constructs a new TransitVehicle.
                         * @memberof google.maps.routing.v2
                         * @classdesc Represents a TransitVehicle.
                         * @implements ITransitVehicle
                         * @constructor
                         * @param {google.maps.routing.v2.ITransitVehicle=} [properties] Properties to set
                         */
                        function TransitVehicle(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * TransitVehicle name.
                         * @member {google.type.ILocalizedText|null|undefined} name
                         * @memberof google.maps.routing.v2.TransitVehicle
                         * @instance
                         */
                        TransitVehicle.prototype.name = null;
    
                        /**
                         * TransitVehicle type.
                         * @member {google.maps.routing.v2.TransitVehicle.TransitVehicleType} type
                         * @memberof google.maps.routing.v2.TransitVehicle
                         * @instance
                         */
                        TransitVehicle.prototype.type = 0;
    
                        /**
                         * TransitVehicle iconUri.
                         * @member {string} iconUri
                         * @memberof google.maps.routing.v2.TransitVehicle
                         * @instance
                         */
                        TransitVehicle.prototype.iconUri = "";
    
                        /**
                         * TransitVehicle localIconUri.
                         * @member {string} localIconUri
                         * @memberof google.maps.routing.v2.TransitVehicle
                         * @instance
                         */
                        TransitVehicle.prototype.localIconUri = "";
    
                        /**
                         * Creates a new TransitVehicle instance using the specified properties.
                         * @function create
                         * @memberof google.maps.routing.v2.TransitVehicle
                         * @static
                         * @param {google.maps.routing.v2.ITransitVehicle=} [properties] Properties to set
                         * @returns {google.maps.routing.v2.TransitVehicle} TransitVehicle instance
                         */
                        TransitVehicle.create = function create(properties) {
                            return new TransitVehicle(properties);
                        };
    
                        /**
                         * Encodes the specified TransitVehicle message. Does not implicitly {@link google.maps.routing.v2.TransitVehicle.verify|verify} messages.
                         * @function encode
                         * @memberof google.maps.routing.v2.TransitVehicle
                         * @static
                         * @param {google.maps.routing.v2.ITransitVehicle} message TransitVehicle message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        TransitVehicle.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                                $root.google.type.LocalizedText.encode(message.name, writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                            if (message.type != null && Object.hasOwnProperty.call(message, "type"))
                                writer.uint32(/* id 2, wireType 0 =*/16).int32(message.type);
                            if (message.iconUri != null && Object.hasOwnProperty.call(message, "iconUri"))
                                writer.uint32(/* id 3, wireType 2 =*/26).string(message.iconUri);
                            if (message.localIconUri != null && Object.hasOwnProperty.call(message, "localIconUri"))
                                writer.uint32(/* id 4, wireType 2 =*/34).string(message.localIconUri);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified TransitVehicle message, length delimited. Does not implicitly {@link google.maps.routing.v2.TransitVehicle.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.maps.routing.v2.TransitVehicle
                         * @static
                         * @param {google.maps.routing.v2.ITransitVehicle} message TransitVehicle message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        TransitVehicle.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a TransitVehicle message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.maps.routing.v2.TransitVehicle
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.maps.routing.v2.TransitVehicle} TransitVehicle
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        TransitVehicle.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.maps.routing.v2.TransitVehicle();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.name = $root.google.type.LocalizedText.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 2: {
                                        message.type = reader.int32();
                                        break;
                                    }
                                case 3: {
                                        message.iconUri = reader.string();
                                        break;
                                    }
                                case 4: {
                                        message.localIconUri = reader.string();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a TransitVehicle message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.maps.routing.v2.TransitVehicle
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.maps.routing.v2.TransitVehicle} TransitVehicle
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        TransitVehicle.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a TransitVehicle message.
                         * @function verify
                         * @memberof google.maps.routing.v2.TransitVehicle
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        TransitVehicle.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.name != null && message.hasOwnProperty("name")) {
                                var error = $root.google.type.LocalizedText.verify(message.name);
                                if (error)
                                    return "name." + error;
                            }
                            if (message.type != null && message.hasOwnProperty("type"))
                                switch (message.type) {
                                default:
                                    return "type: enum value expected";
                                case 0:
                                case 1:
                                case 2:
                                case 3:
                                case 4:
                                case 5:
                                case 6:
                                case 7:
                                case 8:
                                case 9:
                                case 10:
                                case 11:
                                case 12:
                                case 13:
                                case 14:
                                case 15:
                                case 16:
                                case 17:
                                case 18:
                                    break;
                                }
                            if (message.iconUri != null && message.hasOwnProperty("iconUri"))
                                if (!$util.isString(message.iconUri))
                                    return "iconUri: string expected";
                            if (message.localIconUri != null && message.hasOwnProperty("localIconUri"))
                                if (!$util.isString(message.localIconUri))
                                    return "localIconUri: string expected";
                            return null;
                        };
    
                        /**
                         * Creates a TransitVehicle message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.maps.routing.v2.TransitVehicle
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.maps.routing.v2.TransitVehicle} TransitVehicle
                         */
                        TransitVehicle.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.maps.routing.v2.TransitVehicle)
                                return object;
                            var message = new $root.google.maps.routing.v2.TransitVehicle();
                            if (object.name != null) {
                                if (typeof object.name !== "object")
                                    throw TypeError(".google.maps.routing.v2.TransitVehicle.name: object expected");
                                message.name = $root.google.type.LocalizedText.fromObject(object.name);
                            }
                            switch (object.type) {
                            default:
                                if (typeof object.type === "number") {
                                    message.type = object.type;
                                    break;
                                }
                                break;
                            case "TRANSIT_VEHICLE_TYPE_UNSPECIFIED":
                            case 0:
                                message.type = 0;
                                break;
                            case "BUS":
                            case 1:
                                message.type = 1;
                                break;
                            case "CABLE_CAR":
                            case 2:
                                message.type = 2;
                                break;
                            case "COMMUTER_TRAIN":
                            case 3:
                                message.type = 3;
                                break;
                            case "FERRY":
                            case 4:
                                message.type = 4;
                                break;
                            case "FUNICULAR":
                            case 5:
                                message.type = 5;
                                break;
                            case "GONDOLA_LIFT":
                            case 6:
                                message.type = 6;
                                break;
                            case "HEAVY_RAIL":
                            case 7:
                                message.type = 7;
                                break;
                            case "HIGH_SPEED_TRAIN":
                            case 8:
                                message.type = 8;
                                break;
                            case "INTERCITY_BUS":
                            case 9:
                                message.type = 9;
                                break;
                            case "LONG_DISTANCE_TRAIN":
                            case 10:
                                message.type = 10;
                                break;
                            case "METRO_RAIL":
                            case 11:
                                message.type = 11;
                                break;
                            case "MONORAIL":
                            case 12:
                                message.type = 12;
                                break;
                            case "OTHER":
                            case 13:
                                message.type = 13;
                                break;
                            case "RAIL":
                            case 14:
                                message.type = 14;
                                break;
                            case "SHARE_TAXI":
                            case 15:
                                message.type = 15;
                                break;
                            case "SUBWAY":
                            case 16:
                                message.type = 16;
                                break;
                            case "TRAM":
                            case 17:
                                message.type = 17;
                                break;
                            case "TROLLEYBUS":
                            case 18:
                                message.type = 18;
                                break;
                            }
                            if (object.iconUri != null)
                                message.iconUri = String(object.iconUri);
                            if (object.localIconUri != null)
                                message.localIconUri = String(object.localIconUri);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a TransitVehicle message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.maps.routing.v2.TransitVehicle
                         * @static
                         * @param {google.maps.routing.v2.TransitVehicle} message TransitVehicle
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        TransitVehicle.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.name = null;
                                object.type = options.enums === String ? "TRANSIT_VEHICLE_TYPE_UNSPECIFIED" : 0;
                                object.iconUri = "";
                                object.localIconUri = "";
                            }
                            if (message.name != null && message.hasOwnProperty("name"))
                                object.name = $root.google.type.LocalizedText.toObject(message.name, options);
                            if (message.type != null && message.hasOwnProperty("type"))
                                object.type = options.enums === String ? $root.google.maps.routing.v2.TransitVehicle.TransitVehicleType[message.type] === undefined ? message.type : $root.google.maps.routing.v2.TransitVehicle.TransitVehicleType[message.type] : message.type;
                            if (message.iconUri != null && message.hasOwnProperty("iconUri"))
                                object.iconUri = message.iconUri;
                            if (message.localIconUri != null && message.hasOwnProperty("localIconUri"))
                                object.localIconUri = message.localIconUri;
                            return object;
                        };
    
                        /**
                         * Converts this TransitVehicle to JSON.
                         * @function toJSON
                         * @memberof google.maps.routing.v2.TransitVehicle
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        TransitVehicle.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for TransitVehicle
                         * @function getTypeUrl
                         * @memberof google.maps.routing.v2.TransitVehicle
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        TransitVehicle.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.maps.routing.v2.TransitVehicle";
                        };
    
                        /**
                         * TransitVehicleType enum.
                         * @name google.maps.routing.v2.TransitVehicle.TransitVehicleType
                         * @enum {number}
                         * @property {number} TRANSIT_VEHICLE_TYPE_UNSPECIFIED=0 TRANSIT_VEHICLE_TYPE_UNSPECIFIED value
                         * @property {number} BUS=1 BUS value
                         * @property {number} CABLE_CAR=2 CABLE_CAR value
                         * @property {number} COMMUTER_TRAIN=3 COMMUTER_TRAIN value
                         * @property {number} FERRY=4 FERRY value
                         * @property {number} FUNICULAR=5 FUNICULAR value
                         * @property {number} GONDOLA_LIFT=6 GONDOLA_LIFT value
                         * @property {number} HEAVY_RAIL=7 HEAVY_RAIL value
                         * @property {number} HIGH_SPEED_TRAIN=8 HIGH_SPEED_TRAIN value
                         * @property {number} INTERCITY_BUS=9 INTERCITY_BUS value
                         * @property {number} LONG_DISTANCE_TRAIN=10 LONG_DISTANCE_TRAIN value
                         * @property {number} METRO_RAIL=11 METRO_RAIL value
                         * @property {number} MONORAIL=12 MONORAIL value
                         * @property {number} OTHER=13 OTHER value
                         * @property {number} RAIL=14 RAIL value
                         * @property {number} SHARE_TAXI=15 SHARE_TAXI value
                         * @property {number} SUBWAY=16 SUBWAY value
                         * @property {number} TRAM=17 TRAM value
                         * @property {number} TROLLEYBUS=18 TROLLEYBUS value
                         */
                        TransitVehicle.TransitVehicleType = (function() {
                            var valuesById = {}, values = Object.create(valuesById);
                            values[valuesById[0] = "TRANSIT_VEHICLE_TYPE_UNSPECIFIED"] = 0;
                            values[valuesById[1] = "BUS"] = 1;
                            values[valuesById[2] = "CABLE_CAR"] = 2;
                            values[valuesById[3] = "COMMUTER_TRAIN"] = 3;
                            values[valuesById[4] = "FERRY"] = 4;
                            values[valuesById[5] = "FUNICULAR"] = 5;
                            values[valuesById[6] = "GONDOLA_LIFT"] = 6;
                            values[valuesById[7] = "HEAVY_RAIL"] = 7;
                            values[valuesById[8] = "HIGH_SPEED_TRAIN"] = 8;
                            values[valuesById[9] = "INTERCITY_BUS"] = 9;
                            values[valuesById[10] = "LONG_DISTANCE_TRAIN"] = 10;
                            values[valuesById[11] = "METRO_RAIL"] = 11;
                            values[valuesById[12] = "MONORAIL"] = 12;
                            values[valuesById[13] = "OTHER"] = 13;
                            values[valuesById[14] = "RAIL"] = 14;
                            values[valuesById[15] = "SHARE_TAXI"] = 15;
                            values[valuesById[16] = "SUBWAY"] = 16;
                            values[valuesById[17] = "TRAM"] = 17;
                            values[valuesById[18] = "TROLLEYBUS"] = 18;
                            return values;
                        })();
    
                        return TransitVehicle;
                    })();
    
                    v2.RouteModifiers = (function() {
    
                        /**
                         * Properties of a RouteModifiers.
                         * @memberof google.maps.routing.v2
                         * @interface IRouteModifiers
                         * @property {boolean|null} [avoidTolls] RouteModifiers avoidTolls
                         * @property {boolean|null} [avoidHighways] RouteModifiers avoidHighways
                         * @property {boolean|null} [avoidFerries] RouteModifiers avoidFerries
                         * @property {boolean|null} [avoidIndoor] RouteModifiers avoidIndoor
                         * @property {google.maps.routing.v2.IVehicleInfo|null} [vehicleInfo] RouteModifiers vehicleInfo
                         * @property {Array.<google.maps.routing.v2.TollPass>|null} [tollPasses] RouteModifiers tollPasses
                         */
    
                        /**
                         * Constructs a new RouteModifiers.
                         * @memberof google.maps.routing.v2
                         * @classdesc Represents a RouteModifiers.
                         * @implements IRouteModifiers
                         * @constructor
                         * @param {google.maps.routing.v2.IRouteModifiers=} [properties] Properties to set
                         */
                        function RouteModifiers(properties) {
                            this.tollPasses = [];
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * RouteModifiers avoidTolls.
                         * @member {boolean} avoidTolls
                         * @memberof google.maps.routing.v2.RouteModifiers
                         * @instance
                         */
                        RouteModifiers.prototype.avoidTolls = false;
    
                        /**
                         * RouteModifiers avoidHighways.
                         * @member {boolean} avoidHighways
                         * @memberof google.maps.routing.v2.RouteModifiers
                         * @instance
                         */
                        RouteModifiers.prototype.avoidHighways = false;
    
                        /**
                         * RouteModifiers avoidFerries.
                         * @member {boolean} avoidFerries
                         * @memberof google.maps.routing.v2.RouteModifiers
                         * @instance
                         */
                        RouteModifiers.prototype.avoidFerries = false;
    
                        /**
                         * RouteModifiers avoidIndoor.
                         * @member {boolean} avoidIndoor
                         * @memberof google.maps.routing.v2.RouteModifiers
                         * @instance
                         */
                        RouteModifiers.prototype.avoidIndoor = false;
    
                        /**
                         * RouteModifiers vehicleInfo.
                         * @member {google.maps.routing.v2.IVehicleInfo|null|undefined} vehicleInfo
                         * @memberof google.maps.routing.v2.RouteModifiers
                         * @instance
                         */
                        RouteModifiers.prototype.vehicleInfo = null;
    
                        /**
                         * RouteModifiers tollPasses.
                         * @member {Array.<google.maps.routing.v2.TollPass>} tollPasses
                         * @memberof google.maps.routing.v2.RouteModifiers
                         * @instance
                         */
                        RouteModifiers.prototype.tollPasses = $util.emptyArray;
    
                        /**
                         * Creates a new RouteModifiers instance using the specified properties.
                         * @function create
                         * @memberof google.maps.routing.v2.RouteModifiers
                         * @static
                         * @param {google.maps.routing.v2.IRouteModifiers=} [properties] Properties to set
                         * @returns {google.maps.routing.v2.RouteModifiers} RouteModifiers instance
                         */
                        RouteModifiers.create = function create(properties) {
                            return new RouteModifiers(properties);
                        };
    
                        /**
                         * Encodes the specified RouteModifiers message. Does not implicitly {@link google.maps.routing.v2.RouteModifiers.verify|verify} messages.
                         * @function encode
                         * @memberof google.maps.routing.v2.RouteModifiers
                         * @static
                         * @param {google.maps.routing.v2.IRouteModifiers} message RouteModifiers message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        RouteModifiers.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.avoidTolls != null && Object.hasOwnProperty.call(message, "avoidTolls"))
                                writer.uint32(/* id 1, wireType 0 =*/8).bool(message.avoidTolls);
                            if (message.avoidHighways != null && Object.hasOwnProperty.call(message, "avoidHighways"))
                                writer.uint32(/* id 2, wireType 0 =*/16).bool(message.avoidHighways);
                            if (message.avoidFerries != null && Object.hasOwnProperty.call(message, "avoidFerries"))
                                writer.uint32(/* id 3, wireType 0 =*/24).bool(message.avoidFerries);
                            if (message.avoidIndoor != null && Object.hasOwnProperty.call(message, "avoidIndoor"))
                                writer.uint32(/* id 4, wireType 0 =*/32).bool(message.avoidIndoor);
                            if (message.vehicleInfo != null && Object.hasOwnProperty.call(message, "vehicleInfo"))
                                $root.google.maps.routing.v2.VehicleInfo.encode(message.vehicleInfo, writer.uint32(/* id 5, wireType 2 =*/42).fork()).ldelim();
                            if (message.tollPasses != null && message.tollPasses.length) {
                                writer.uint32(/* id 6, wireType 2 =*/50).fork();
                                for (var i = 0; i < message.tollPasses.length; ++i)
                                    writer.int32(message.tollPasses[i]);
                                writer.ldelim();
                            }
                            return writer;
                        };
    
                        /**
                         * Encodes the specified RouteModifiers message, length delimited. Does not implicitly {@link google.maps.routing.v2.RouteModifiers.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.maps.routing.v2.RouteModifiers
                         * @static
                         * @param {google.maps.routing.v2.IRouteModifiers} message RouteModifiers message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        RouteModifiers.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a RouteModifiers message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.maps.routing.v2.RouteModifiers
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.maps.routing.v2.RouteModifiers} RouteModifiers
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        RouteModifiers.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.maps.routing.v2.RouteModifiers();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.avoidTolls = reader.bool();
                                        break;
                                    }
                                case 2: {
                                        message.avoidHighways = reader.bool();
                                        break;
                                    }
                                case 3: {
                                        message.avoidFerries = reader.bool();
                                        break;
                                    }
                                case 4: {
                                        message.avoidIndoor = reader.bool();
                                        break;
                                    }
                                case 5: {
                                        message.vehicleInfo = $root.google.maps.routing.v2.VehicleInfo.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 6: {
                                        if (!(message.tollPasses && message.tollPasses.length))
                                            message.tollPasses = [];
                                        if ((tag & 7) === 2) {
                                            var end2 = reader.uint32() + reader.pos;
                                            while (reader.pos < end2)
                                                message.tollPasses.push(reader.int32());
                                        } else
                                            message.tollPasses.push(reader.int32());
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a RouteModifiers message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.maps.routing.v2.RouteModifiers
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.maps.routing.v2.RouteModifiers} RouteModifiers
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        RouteModifiers.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a RouteModifiers message.
                         * @function verify
                         * @memberof google.maps.routing.v2.RouteModifiers
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        RouteModifiers.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.avoidTolls != null && message.hasOwnProperty("avoidTolls"))
                                if (typeof message.avoidTolls !== "boolean")
                                    return "avoidTolls: boolean expected";
                            if (message.avoidHighways != null && message.hasOwnProperty("avoidHighways"))
                                if (typeof message.avoidHighways !== "boolean")
                                    return "avoidHighways: boolean expected";
                            if (message.avoidFerries != null && message.hasOwnProperty("avoidFerries"))
                                if (typeof message.avoidFerries !== "boolean")
                                    return "avoidFerries: boolean expected";
                            if (message.avoidIndoor != null && message.hasOwnProperty("avoidIndoor"))
                                if (typeof message.avoidIndoor !== "boolean")
                                    return "avoidIndoor: boolean expected";
                            if (message.vehicleInfo != null && message.hasOwnProperty("vehicleInfo")) {
                                var error = $root.google.maps.routing.v2.VehicleInfo.verify(message.vehicleInfo);
                                if (error)
                                    return "vehicleInfo." + error;
                            }
                            if (message.tollPasses != null && message.hasOwnProperty("tollPasses")) {
                                if (!Array.isArray(message.tollPasses))
                                    return "tollPasses: array expected";
                                for (var i = 0; i < message.tollPasses.length; ++i)
                                    switch (message.tollPasses[i]) {
                                    default:
                                        return "tollPasses: enum value[] expected";
                                    case 0:
                                    case 82:
                                    case 83:
                                    case 2:
                                    case 3:
                                    case 81:
                                    case 7:
                                    case 8:
                                    case 88:
                                    case 9:
                                    case 10:
                                    case 11:
                                    case 84:
                                    case 85:
                                    case 18:
                                    case 19:
                                    case 20:
                                    case 16:
                                    case 78:
                                    case 79:
                                    case 90:
                                    case 91:
                                    case 93:
                                    case 89:
                                    case 12:
                                    case 13:
                                    case 92:
                                    case 14:
                                    case 21:
                                    case 22:
                                    case 4:
                                    case 86:
                                    case 23:
                                    case 24:
                                    case 25:
                                    case 65:
                                    case 66:
                                    case 67:
                                    case 68:
                                    case 69:
                                    case 70:
                                    case 71:
                                    case 73:
                                    case 72:
                                    case 26:
                                    case 27:
                                    case 28:
                                    case 29:
                                    case 30:
                                    case 31:
                                    case 32:
                                    case 33:
                                    case 6:
                                    case 34:
                                    case 35:
                                    case 36:
                                    case 94:
                                    case 37:
                                    case 38:
                                    case 95:
                                    case 39:
                                    case 40:
                                    case 41:
                                    case 42:
                                    case 87:
                                    case 43:
                                    case 80:
                                    case 75:
                                    case 74:
                                    case 76:
                                    case 77:
                                    case 44:
                                    case 45:
                                    case 46:
                                    case 47:
                                    case 97:
                                    case 48:
                                    case 49:
                                    case 50:
                                    case 51:
                                    case 52:
                                    case 53:
                                    case 54:
                                    case 96:
                                    case 55:
                                    case 56:
                                    case 57:
                                    case 58:
                                    case 59:
                                    case 60:
                                    case 61:
                                    case 17:
                                    case 1:
                                    case 62:
                                    case 63:
                                    case 64:
                                        break;
                                    }
                            }
                            return null;
                        };
    
                        /**
                         * Creates a RouteModifiers message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.maps.routing.v2.RouteModifiers
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.maps.routing.v2.RouteModifiers} RouteModifiers
                         */
                        RouteModifiers.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.maps.routing.v2.RouteModifiers)
                                return object;
                            var message = new $root.google.maps.routing.v2.RouteModifiers();
                            if (object.avoidTolls != null)
                                message.avoidTolls = Boolean(object.avoidTolls);
                            if (object.avoidHighways != null)
                                message.avoidHighways = Boolean(object.avoidHighways);
                            if (object.avoidFerries != null)
                                message.avoidFerries = Boolean(object.avoidFerries);
                            if (object.avoidIndoor != null)
                                message.avoidIndoor = Boolean(object.avoidIndoor);
                            if (object.vehicleInfo != null) {
                                if (typeof object.vehicleInfo !== "object")
                                    throw TypeError(".google.maps.routing.v2.RouteModifiers.vehicleInfo: object expected");
                                message.vehicleInfo = $root.google.maps.routing.v2.VehicleInfo.fromObject(object.vehicleInfo);
                            }
                            if (object.tollPasses) {
                                if (!Array.isArray(object.tollPasses))
                                    throw TypeError(".google.maps.routing.v2.RouteModifiers.tollPasses: array expected");
                                message.tollPasses = [];
                                for (var i = 0; i < object.tollPasses.length; ++i)
                                    switch (object.tollPasses[i]) {
                                    default:
                                        if (typeof object.tollPasses[i] === "number") {
                                            message.tollPasses[i] = object.tollPasses[i];
                                            break;
                                        }
                                    case "TOLL_PASS_UNSPECIFIED":
                                    case 0:
                                        message.tollPasses[i] = 0;
                                        break;
                                    case "AU_ETOLL_TAG":
                                    case 82:
                                        message.tollPasses[i] = 82;
                                        break;
                                    case "AU_EWAY_TAG":
                                    case 83:
                                        message.tollPasses[i] = 83;
                                        break;
                                    case "AU_LINKT":
                                    case 2:
                                        message.tollPasses[i] = 2;
                                        break;
                                    case "AR_TELEPASE":
                                    case 3:
                                        message.tollPasses[i] = 3;
                                        break;
                                    case "BR_AUTO_EXPRESO":
                                    case 81:
                                        message.tollPasses[i] = 81;
                                        break;
                                    case "BR_CONECTCAR":
                                    case 7:
                                        message.tollPasses[i] = 7;
                                        break;
                                    case "BR_MOVE_MAIS":
                                    case 8:
                                        message.tollPasses[i] = 8;
                                        break;
                                    case "BR_PASSA_RAPIDO":
                                    case 88:
                                        message.tollPasses[i] = 88;
                                        break;
                                    case "BR_SEM_PARAR":
                                    case 9:
                                        message.tollPasses[i] = 9;
                                        break;
                                    case "BR_TAGGY":
                                    case 10:
                                        message.tollPasses[i] = 10;
                                        break;
                                    case "BR_VELOE":
                                    case 11:
                                        message.tollPasses[i] = 11;
                                        break;
                                    case "CA_US_AKWASASNE_SEAWAY_CORPORATE_CARD":
                                    case 84:
                                        message.tollPasses[i] = 84;
                                        break;
                                    case "CA_US_AKWASASNE_SEAWAY_TRANSIT_CARD":
                                    case 85:
                                        message.tollPasses[i] = 85;
                                        break;
                                    case "CA_US_BLUE_WATER_EDGE_PASS":
                                    case 18:
                                        message.tollPasses[i] = 18;
                                        break;
                                    case "CA_US_CONNEXION":
                                    case 19:
                                        message.tollPasses[i] = 19;
                                        break;
                                    case "CA_US_NEXUS_CARD":
                                    case 20:
                                        message.tollPasses[i] = 20;
                                        break;
                                    case "ID_E_TOLL":
                                    case 16:
                                        message.tollPasses[i] = 16;
                                        break;
                                    case "IN_FASTAG":
                                    case 78:
                                        message.tollPasses[i] = 78;
                                        break;
                                    case "IN_LOCAL_HP_PLATE_EXEMPT":
                                    case 79:
                                        message.tollPasses[i] = 79;
                                        break;
                                    case "MX_IAVE":
                                    case 90:
                                        message.tollPasses[i] = 90;
                                        break;
                                    case "MX_PASE":
                                    case 91:
                                        message.tollPasses[i] = 91;
                                        break;
                                    case "MX_QUICKPASS":
                                    case 93:
                                        message.tollPasses[i] = 93;
                                        break;
                                    case "MX_SISTEMA_TELEPEAJE_CHIHUAHUA":
                                    case 89:
                                        message.tollPasses[i] = 89;
                                        break;
                                    case "MX_TAG_IAVE":
                                    case 12:
                                        message.tollPasses[i] = 12;
                                        break;
                                    case "MX_TAG_TELEVIA":
                                    case 13:
                                        message.tollPasses[i] = 13;
                                        break;
                                    case "MX_TELEVIA":
                                    case 92:
                                        message.tollPasses[i] = 92;
                                        break;
                                    case "MX_VIAPASS":
                                    case 14:
                                        message.tollPasses[i] = 14;
                                        break;
                                    case "US_AL_FREEDOM_PASS":
                                    case 21:
                                        message.tollPasses[i] = 21;
                                        break;
                                    case "US_AK_ANTON_ANDERSON_TUNNEL_BOOK_OF_10_TICKETS":
                                    case 22:
                                        message.tollPasses[i] = 22;
                                        break;
                                    case "US_CA_FASTRAK":
                                    case 4:
                                        message.tollPasses[i] = 4;
                                        break;
                                    case "US_CA_FASTRAK_CAV_STICKER":
                                    case 86:
                                        message.tollPasses[i] = 86;
                                        break;
                                    case "US_CO_EXPRESSTOLL":
                                    case 23:
                                        message.tollPasses[i] = 23;
                                        break;
                                    case "US_CO_GO_PASS":
                                    case 24:
                                        message.tollPasses[i] = 24;
                                        break;
                                    case "US_DE_EZPASSDE":
                                    case 25:
                                        message.tollPasses[i] = 25;
                                        break;
                                    case "US_FL_BOB_SIKES_TOLL_BRIDGE_PASS":
                                    case 65:
                                        message.tollPasses[i] = 65;
                                        break;
                                    case "US_FL_DUNES_COMMUNITY_DEVELOPMENT_DISTRICT_EXPRESSCARD":
                                    case 66:
                                        message.tollPasses[i] = 66;
                                        break;
                                    case "US_FL_EPASS":
                                    case 67:
                                        message.tollPasses[i] = 67;
                                        break;
                                    case "US_FL_GIBA_TOLL_PASS":
                                    case 68:
                                        message.tollPasses[i] = 68;
                                        break;
                                    case "US_FL_LEEWAY":
                                    case 69:
                                        message.tollPasses[i] = 69;
                                        break;
                                    case "US_FL_SUNPASS":
                                    case 70:
                                        message.tollPasses[i] = 70;
                                        break;
                                    case "US_FL_SUNPASS_PRO":
                                    case 71:
                                        message.tollPasses[i] = 71;
                                        break;
                                    case "US_IL_EZPASSIL":
                                    case 73:
                                        message.tollPasses[i] = 73;
                                        break;
                                    case "US_IL_IPASS":
                                    case 72:
                                        message.tollPasses[i] = 72;
                                        break;
                                    case "US_IN_EZPASSIN":
                                    case 26:
                                        message.tollPasses[i] = 26;
                                        break;
                                    case "US_KS_BESTPASS_HORIZON":
                                    case 27:
                                        message.tollPasses[i] = 27;
                                        break;
                                    case "US_KS_KTAG":
                                    case 28:
                                        message.tollPasses[i] = 28;
                                        break;
                                    case "US_KS_NATIONALPASS":
                                    case 29:
                                        message.tollPasses[i] = 29;
                                        break;
                                    case "US_KS_PREPASS_ELITEPASS":
                                    case 30:
                                        message.tollPasses[i] = 30;
                                        break;
                                    case "US_KY_RIVERLINK":
                                    case 31:
                                        message.tollPasses[i] = 31;
                                        break;
                                    case "US_LA_GEAUXPASS":
                                    case 32:
                                        message.tollPasses[i] = 32;
                                        break;
                                    case "US_LA_TOLL_TAG":
                                    case 33:
                                        message.tollPasses[i] = 33;
                                        break;
                                    case "US_MA_EZPASSMA":
                                    case 6:
                                        message.tollPasses[i] = 6;
                                        break;
                                    case "US_MD_EZPASSMD":
                                    case 34:
                                        message.tollPasses[i] = 34;
                                        break;
                                    case "US_ME_EZPASSME":
                                    case 35:
                                        message.tollPasses[i] = 35;
                                        break;
                                    case "US_MI_AMBASSADOR_BRIDGE_PREMIER_COMMUTER_CARD":
                                    case 36:
                                        message.tollPasses[i] = 36;
                                        break;
                                    case "US_MI_BCPASS":
                                    case 94:
                                        message.tollPasses[i] = 94;
                                        break;
                                    case "US_MI_GROSSE_ILE_TOLL_BRIDGE_PASS_TAG":
                                    case 37:
                                        message.tollPasses[i] = 37;
                                        break;
                                    case "US_MI_IQ_PROX_CARD":
                                    case 38:
                                        message.tollPasses[i] = 38;
                                        break;
                                    case "US_MI_IQ_TAG":
                                    case 95:
                                        message.tollPasses[i] = 95;
                                        break;
                                    case "US_MI_MACKINAC_BRIDGE_MAC_PASS":
                                    case 39:
                                        message.tollPasses[i] = 39;
                                        break;
                                    case "US_MI_NEXPRESS_TOLL":
                                    case 40:
                                        message.tollPasses[i] = 40;
                                        break;
                                    case "US_MN_EZPASSMN":
                                    case 41:
                                        message.tollPasses[i] = 41;
                                        break;
                                    case "US_NC_EZPASSNC":
                                    case 42:
                                        message.tollPasses[i] = 42;
                                        break;
                                    case "US_NC_PEACH_PASS":
                                    case 87:
                                        message.tollPasses[i] = 87;
                                        break;
                                    case "US_NC_QUICK_PASS":
                                    case 43:
                                        message.tollPasses[i] = 43;
                                        break;
                                    case "US_NH_EZPASSNH":
                                    case 80:
                                        message.tollPasses[i] = 80;
                                        break;
                                    case "US_NJ_DOWNBEACH_EXPRESS_PASS":
                                    case 75:
                                        message.tollPasses[i] = 75;
                                        break;
                                    case "US_NJ_EZPASSNJ":
                                    case 74:
                                        message.tollPasses[i] = 74;
                                        break;
                                    case "US_NY_EXPRESSPASS":
                                    case 76:
                                        message.tollPasses[i] = 76;
                                        break;
                                    case "US_NY_EZPASSNY":
                                    case 77:
                                        message.tollPasses[i] = 77;
                                        break;
                                    case "US_OH_EZPASSOH":
                                    case 44:
                                        message.tollPasses[i] = 44;
                                        break;
                                    case "US_PA_EZPASSPA":
                                    case 45:
                                        message.tollPasses[i] = 45;
                                        break;
                                    case "US_RI_EZPASSRI":
                                    case 46:
                                        message.tollPasses[i] = 46;
                                        break;
                                    case "US_SC_PALPASS":
                                    case 47:
                                        message.tollPasses[i] = 47;
                                        break;
                                    case "US_TX_AVI_TAG":
                                    case 97:
                                        message.tollPasses[i] = 97;
                                        break;
                                    case "US_TX_BANCPASS":
                                    case 48:
                                        message.tollPasses[i] = 48;
                                        break;
                                    case "US_TX_DEL_RIO_PASS":
                                    case 49:
                                        message.tollPasses[i] = 49;
                                        break;
                                    case "US_TX_EFAST_PASS":
                                    case 50:
                                        message.tollPasses[i] = 50;
                                        break;
                                    case "US_TX_EAGLE_PASS_EXPRESS_CARD":
                                    case 51:
                                        message.tollPasses[i] = 51;
                                        break;
                                    case "US_TX_EPTOLL":
                                    case 52:
                                        message.tollPasses[i] = 52;
                                        break;
                                    case "US_TX_EZ_CROSS":
                                    case 53:
                                        message.tollPasses[i] = 53;
                                        break;
                                    case "US_TX_EZTAG":
                                    case 54:
                                        message.tollPasses[i] = 54;
                                        break;
                                    case "US_TX_FUEGO_TAG":
                                    case 96:
                                        message.tollPasses[i] = 96;
                                        break;
                                    case "US_TX_LAREDO_TRADE_TAG":
                                    case 55:
                                        message.tollPasses[i] = 55;
                                        break;
                                    case "US_TX_PLUSPASS":
                                    case 56:
                                        message.tollPasses[i] = 56;
                                        break;
                                    case "US_TX_TOLLTAG":
                                    case 57:
                                        message.tollPasses[i] = 57;
                                        break;
                                    case "US_TX_TXTAG":
                                    case 58:
                                        message.tollPasses[i] = 58;
                                        break;
                                    case "US_TX_XPRESS_CARD":
                                    case 59:
                                        message.tollPasses[i] = 59;
                                        break;
                                    case "US_UT_ADAMS_AVE_PARKWAY_EXPRESSCARD":
                                    case 60:
                                        message.tollPasses[i] = 60;
                                        break;
                                    case "US_VA_EZPASSVA":
                                    case 61:
                                        message.tollPasses[i] = 61;
                                        break;
                                    case "US_WA_BREEZEBY":
                                    case 17:
                                        message.tollPasses[i] = 17;
                                        break;
                                    case "US_WA_GOOD_TO_GO":
                                    case 1:
                                        message.tollPasses[i] = 1;
                                        break;
                                    case "US_WV_EZPASSWV":
                                    case 62:
                                        message.tollPasses[i] = 62;
                                        break;
                                    case "US_WV_MEMORIAL_BRIDGE_TICKETS":
                                    case 63:
                                        message.tollPasses[i] = 63;
                                        break;
                                    case "US_WV_NEWELL_TOLL_BRIDGE_TICKET":
                                    case 64:
                                        message.tollPasses[i] = 64;
                                        break;
                                    }
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a RouteModifiers message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.maps.routing.v2.RouteModifiers
                         * @static
                         * @param {google.maps.routing.v2.RouteModifiers} message RouteModifiers
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        RouteModifiers.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.arrays || options.defaults)
                                object.tollPasses = [];
                            if (options.defaults) {
                                object.avoidTolls = false;
                                object.avoidHighways = false;
                                object.avoidFerries = false;
                                object.avoidIndoor = false;
                                object.vehicleInfo = null;
                            }
                            if (message.avoidTolls != null && message.hasOwnProperty("avoidTolls"))
                                object.avoidTolls = message.avoidTolls;
                            if (message.avoidHighways != null && message.hasOwnProperty("avoidHighways"))
                                object.avoidHighways = message.avoidHighways;
                            if (message.avoidFerries != null && message.hasOwnProperty("avoidFerries"))
                                object.avoidFerries = message.avoidFerries;
                            if (message.avoidIndoor != null && message.hasOwnProperty("avoidIndoor"))
                                object.avoidIndoor = message.avoidIndoor;
                            if (message.vehicleInfo != null && message.hasOwnProperty("vehicleInfo"))
                                object.vehicleInfo = $root.google.maps.routing.v2.VehicleInfo.toObject(message.vehicleInfo, options);
                            if (message.tollPasses && message.tollPasses.length) {
                                object.tollPasses = [];
                                for (var j = 0; j < message.tollPasses.length; ++j)
                                    object.tollPasses[j] = options.enums === String ? $root.google.maps.routing.v2.TollPass[message.tollPasses[j]] === undefined ? message.tollPasses[j] : $root.google.maps.routing.v2.TollPass[message.tollPasses[j]] : message.tollPasses[j];
                            }
                            return object;
                        };
    
                        /**
                         * Converts this RouteModifiers to JSON.
                         * @function toJSON
                         * @memberof google.maps.routing.v2.RouteModifiers
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        RouteModifiers.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for RouteModifiers
                         * @function getTypeUrl
                         * @memberof google.maps.routing.v2.RouteModifiers
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        RouteModifiers.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.maps.routing.v2.RouteModifiers";
                        };
    
                        return RouteModifiers;
                    })();
    
                    /**
                     * TollPass enum.
                     * @name google.maps.routing.v2.TollPass
                     * @enum {number}
                     * @property {number} TOLL_PASS_UNSPECIFIED=0 TOLL_PASS_UNSPECIFIED value
                     * @property {number} AU_ETOLL_TAG=82 AU_ETOLL_TAG value
                     * @property {number} AU_EWAY_TAG=83 AU_EWAY_TAG value
                     * @property {number} AU_LINKT=2 AU_LINKT value
                     * @property {number} AR_TELEPASE=3 AR_TELEPASE value
                     * @property {number} BR_AUTO_EXPRESO=81 BR_AUTO_EXPRESO value
                     * @property {number} BR_CONECTCAR=7 BR_CONECTCAR value
                     * @property {number} BR_MOVE_MAIS=8 BR_MOVE_MAIS value
                     * @property {number} BR_PASSA_RAPIDO=88 BR_PASSA_RAPIDO value
                     * @property {number} BR_SEM_PARAR=9 BR_SEM_PARAR value
                     * @property {number} BR_TAGGY=10 BR_TAGGY value
                     * @property {number} BR_VELOE=11 BR_VELOE value
                     * @property {number} CA_US_AKWASASNE_SEAWAY_CORPORATE_CARD=84 CA_US_AKWASASNE_SEAWAY_CORPORATE_CARD value
                     * @property {number} CA_US_AKWASASNE_SEAWAY_TRANSIT_CARD=85 CA_US_AKWASASNE_SEAWAY_TRANSIT_CARD value
                     * @property {number} CA_US_BLUE_WATER_EDGE_PASS=18 CA_US_BLUE_WATER_EDGE_PASS value
                     * @property {number} CA_US_CONNEXION=19 CA_US_CONNEXION value
                     * @property {number} CA_US_NEXUS_CARD=20 CA_US_NEXUS_CARD value
                     * @property {number} ID_E_TOLL=16 ID_E_TOLL value
                     * @property {number} IN_FASTAG=78 IN_FASTAG value
                     * @property {number} IN_LOCAL_HP_PLATE_EXEMPT=79 IN_LOCAL_HP_PLATE_EXEMPT value
                     * @property {number} MX_IAVE=90 MX_IAVE value
                     * @property {number} MX_PASE=91 MX_PASE value
                     * @property {number} MX_QUICKPASS=93 MX_QUICKPASS value
                     * @property {number} MX_SISTEMA_TELEPEAJE_CHIHUAHUA=89 MX_SISTEMA_TELEPEAJE_CHIHUAHUA value
                     * @property {number} MX_TAG_IAVE=12 MX_TAG_IAVE value
                     * @property {number} MX_TAG_TELEVIA=13 MX_TAG_TELEVIA value
                     * @property {number} MX_TELEVIA=92 MX_TELEVIA value
                     * @property {number} MX_VIAPASS=14 MX_VIAPASS value
                     * @property {number} US_AL_FREEDOM_PASS=21 US_AL_FREEDOM_PASS value
                     * @property {number} US_AK_ANTON_ANDERSON_TUNNEL_BOOK_OF_10_TICKETS=22 US_AK_ANTON_ANDERSON_TUNNEL_BOOK_OF_10_TICKETS value
                     * @property {number} US_CA_FASTRAK=4 US_CA_FASTRAK value
                     * @property {number} US_CA_FASTRAK_CAV_STICKER=86 US_CA_FASTRAK_CAV_STICKER value
                     * @property {number} US_CO_EXPRESSTOLL=23 US_CO_EXPRESSTOLL value
                     * @property {number} US_CO_GO_PASS=24 US_CO_GO_PASS value
                     * @property {number} US_DE_EZPASSDE=25 US_DE_EZPASSDE value
                     * @property {number} US_FL_BOB_SIKES_TOLL_BRIDGE_PASS=65 US_FL_BOB_SIKES_TOLL_BRIDGE_PASS value
                     * @property {number} US_FL_DUNES_COMMUNITY_DEVELOPMENT_DISTRICT_EXPRESSCARD=66 US_FL_DUNES_COMMUNITY_DEVELOPMENT_DISTRICT_EXPRESSCARD value
                     * @property {number} US_FL_EPASS=67 US_FL_EPASS value
                     * @property {number} US_FL_GIBA_TOLL_PASS=68 US_FL_GIBA_TOLL_PASS value
                     * @property {number} US_FL_LEEWAY=69 US_FL_LEEWAY value
                     * @property {number} US_FL_SUNPASS=70 US_FL_SUNPASS value
                     * @property {number} US_FL_SUNPASS_PRO=71 US_FL_SUNPASS_PRO value
                     * @property {number} US_IL_EZPASSIL=73 US_IL_EZPASSIL value
                     * @property {number} US_IL_IPASS=72 US_IL_IPASS value
                     * @property {number} US_IN_EZPASSIN=26 US_IN_EZPASSIN value
                     * @property {number} US_KS_BESTPASS_HORIZON=27 US_KS_BESTPASS_HORIZON value
                     * @property {number} US_KS_KTAG=28 US_KS_KTAG value
                     * @property {number} US_KS_NATIONALPASS=29 US_KS_NATIONALPASS value
                     * @property {number} US_KS_PREPASS_ELITEPASS=30 US_KS_PREPASS_ELITEPASS value
                     * @property {number} US_KY_RIVERLINK=31 US_KY_RIVERLINK value
                     * @property {number} US_LA_GEAUXPASS=32 US_LA_GEAUXPASS value
                     * @property {number} US_LA_TOLL_TAG=33 US_LA_TOLL_TAG value
                     * @property {number} US_MA_EZPASSMA=6 US_MA_EZPASSMA value
                     * @property {number} US_MD_EZPASSMD=34 US_MD_EZPASSMD value
                     * @property {number} US_ME_EZPASSME=35 US_ME_EZPASSME value
                     * @property {number} US_MI_AMBASSADOR_BRIDGE_PREMIER_COMMUTER_CARD=36 US_MI_AMBASSADOR_BRIDGE_PREMIER_COMMUTER_CARD value
                     * @property {number} US_MI_BCPASS=94 US_MI_BCPASS value
                     * @property {number} US_MI_GROSSE_ILE_TOLL_BRIDGE_PASS_TAG=37 US_MI_GROSSE_ILE_TOLL_BRIDGE_PASS_TAG value
                     * @property {number} US_MI_IQ_PROX_CARD=38 US_MI_IQ_PROX_CARD value
                     * @property {number} US_MI_IQ_TAG=95 US_MI_IQ_TAG value
                     * @property {number} US_MI_MACKINAC_BRIDGE_MAC_PASS=39 US_MI_MACKINAC_BRIDGE_MAC_PASS value
                     * @property {number} US_MI_NEXPRESS_TOLL=40 US_MI_NEXPRESS_TOLL value
                     * @property {number} US_MN_EZPASSMN=41 US_MN_EZPASSMN value
                     * @property {number} US_NC_EZPASSNC=42 US_NC_EZPASSNC value
                     * @property {number} US_NC_PEACH_PASS=87 US_NC_PEACH_PASS value
                     * @property {number} US_NC_QUICK_PASS=43 US_NC_QUICK_PASS value
                     * @property {number} US_NH_EZPASSNH=80 US_NH_EZPASSNH value
                     * @property {number} US_NJ_DOWNBEACH_EXPRESS_PASS=75 US_NJ_DOWNBEACH_EXPRESS_PASS value
                     * @property {number} US_NJ_EZPASSNJ=74 US_NJ_EZPASSNJ value
                     * @property {number} US_NY_EXPRESSPASS=76 US_NY_EXPRESSPASS value
                     * @property {number} US_NY_EZPASSNY=77 US_NY_EZPASSNY value
                     * @property {number} US_OH_EZPASSOH=44 US_OH_EZPASSOH value
                     * @property {number} US_PA_EZPASSPA=45 US_PA_EZPASSPA value
                     * @property {number} US_RI_EZPASSRI=46 US_RI_EZPASSRI value
                     * @property {number} US_SC_PALPASS=47 US_SC_PALPASS value
                     * @property {number} US_TX_AVI_TAG=97 US_TX_AVI_TAG value
                     * @property {number} US_TX_BANCPASS=48 US_TX_BANCPASS value
                     * @property {number} US_TX_DEL_RIO_PASS=49 US_TX_DEL_RIO_PASS value
                     * @property {number} US_TX_EFAST_PASS=50 US_TX_EFAST_PASS value
                     * @property {number} US_TX_EAGLE_PASS_EXPRESS_CARD=51 US_TX_EAGLE_PASS_EXPRESS_CARD value
                     * @property {number} US_TX_EPTOLL=52 US_TX_EPTOLL value
                     * @property {number} US_TX_EZ_CROSS=53 US_TX_EZ_CROSS value
                     * @property {number} US_TX_EZTAG=54 US_TX_EZTAG value
                     * @property {number} US_TX_FUEGO_TAG=96 US_TX_FUEGO_TAG value
                     * @property {number} US_TX_LAREDO_TRADE_TAG=55 US_TX_LAREDO_TRADE_TAG value
                     * @property {number} US_TX_PLUSPASS=56 US_TX_PLUSPASS value
                     * @property {number} US_TX_TOLLTAG=57 US_TX_TOLLTAG value
                     * @property {number} US_TX_TXTAG=58 US_TX_TXTAG value
                     * @property {number} US_TX_XPRESS_CARD=59 US_TX_XPRESS_CARD value
                     * @property {number} US_UT_ADAMS_AVE_PARKWAY_EXPRESSCARD=60 US_UT_ADAMS_AVE_PARKWAY_EXPRESSCARD value
                     * @property {number} US_VA_EZPASSVA=61 US_VA_EZPASSVA value
                     * @property {number} US_WA_BREEZEBY=17 US_WA_BREEZEBY value
                     * @property {number} US_WA_GOOD_TO_GO=1 US_WA_GOOD_TO_GO value
                     * @property {number} US_WV_EZPASSWV=62 US_WV_EZPASSWV value
                     * @property {number} US_WV_MEMORIAL_BRIDGE_TICKETS=63 US_WV_MEMORIAL_BRIDGE_TICKETS value
                     * @property {number} US_WV_NEWELL_TOLL_BRIDGE_TICKET=64 US_WV_NEWELL_TOLL_BRIDGE_TICKET value
                     */
                    v2.TollPass = (function() {
                        var valuesById = {}, values = Object.create(valuesById);
                        values[valuesById[0] = "TOLL_PASS_UNSPECIFIED"] = 0;
                        values[valuesById[82] = "AU_ETOLL_TAG"] = 82;
                        values[valuesById[83] = "AU_EWAY_TAG"] = 83;
                        values[valuesById[2] = "AU_LINKT"] = 2;
                        values[valuesById[3] = "AR_TELEPASE"] = 3;
                        values[valuesById[81] = "BR_AUTO_EXPRESO"] = 81;
                        values[valuesById[7] = "BR_CONECTCAR"] = 7;
                        values[valuesById[8] = "BR_MOVE_MAIS"] = 8;
                        values[valuesById[88] = "BR_PASSA_RAPIDO"] = 88;
                        values[valuesById[9] = "BR_SEM_PARAR"] = 9;
                        values[valuesById[10] = "BR_TAGGY"] = 10;
                        values[valuesById[11] = "BR_VELOE"] = 11;
                        values[valuesById[84] = "CA_US_AKWASASNE_SEAWAY_CORPORATE_CARD"] = 84;
                        values[valuesById[85] = "CA_US_AKWASASNE_SEAWAY_TRANSIT_CARD"] = 85;
                        values[valuesById[18] = "CA_US_BLUE_WATER_EDGE_PASS"] = 18;
                        values[valuesById[19] = "CA_US_CONNEXION"] = 19;
                        values[valuesById[20] = "CA_US_NEXUS_CARD"] = 20;
                        values[valuesById[16] = "ID_E_TOLL"] = 16;
                        values[valuesById[78] = "IN_FASTAG"] = 78;
                        values[valuesById[79] = "IN_LOCAL_HP_PLATE_EXEMPT"] = 79;
                        values[valuesById[90] = "MX_IAVE"] = 90;
                        values[valuesById[91] = "MX_PASE"] = 91;
                        values[valuesById[93] = "MX_QUICKPASS"] = 93;
                        values[valuesById[89] = "MX_SISTEMA_TELEPEAJE_CHIHUAHUA"] = 89;
                        values[valuesById[12] = "MX_TAG_IAVE"] = 12;
                        values[valuesById[13] = "MX_TAG_TELEVIA"] = 13;
                        values[valuesById[92] = "MX_TELEVIA"] = 92;
                        values[valuesById[14] = "MX_VIAPASS"] = 14;
                        values[valuesById[21] = "US_AL_FREEDOM_PASS"] = 21;
                        values[valuesById[22] = "US_AK_ANTON_ANDERSON_TUNNEL_BOOK_OF_10_TICKETS"] = 22;
                        values[valuesById[4] = "US_CA_FASTRAK"] = 4;
                        values[valuesById[86] = "US_CA_FASTRAK_CAV_STICKER"] = 86;
                        values[valuesById[23] = "US_CO_EXPRESSTOLL"] = 23;
                        values[valuesById[24] = "US_CO_GO_PASS"] = 24;
                        values[valuesById[25] = "US_DE_EZPASSDE"] = 25;
                        values[valuesById[65] = "US_FL_BOB_SIKES_TOLL_BRIDGE_PASS"] = 65;
                        values[valuesById[66] = "US_FL_DUNES_COMMUNITY_DEVELOPMENT_DISTRICT_EXPRESSCARD"] = 66;
                        values[valuesById[67] = "US_FL_EPASS"] = 67;
                        values[valuesById[68] = "US_FL_GIBA_TOLL_PASS"] = 68;
                        values[valuesById[69] = "US_FL_LEEWAY"] = 69;
                        values[valuesById[70] = "US_FL_SUNPASS"] = 70;
                        values[valuesById[71] = "US_FL_SUNPASS_PRO"] = 71;
                        values[valuesById[73] = "US_IL_EZPASSIL"] = 73;
                        values[valuesById[72] = "US_IL_IPASS"] = 72;
                        values[valuesById[26] = "US_IN_EZPASSIN"] = 26;
                        values[valuesById[27] = "US_KS_BESTPASS_HORIZON"] = 27;
                        values[valuesById[28] = "US_KS_KTAG"] = 28;
                        values[valuesById[29] = "US_KS_NATIONALPASS"] = 29;
                        values[valuesById[30] = "US_KS_PREPASS_ELITEPASS"] = 30;
                        values[valuesById[31] = "US_KY_RIVERLINK"] = 31;
                        values[valuesById[32] = "US_LA_GEAUXPASS"] = 32;
                        values[valuesById[33] = "US_LA_TOLL_TAG"] = 33;
                        values[valuesById[6] = "US_MA_EZPASSMA"] = 6;
                        values[valuesById[34] = "US_MD_EZPASSMD"] = 34;
                        values[valuesById[35] = "US_ME_EZPASSME"] = 35;
                        values[valuesById[36] = "US_MI_AMBASSADOR_BRIDGE_PREMIER_COMMUTER_CARD"] = 36;
                        values[valuesById[94] = "US_MI_BCPASS"] = 94;
                        values[valuesById[37] = "US_MI_GROSSE_ILE_TOLL_BRIDGE_PASS_TAG"] = 37;
                        values[valuesById[38] = "US_MI_IQ_PROX_CARD"] = 38;
                        values[valuesById[95] = "US_MI_IQ_TAG"] = 95;
                        values[valuesById[39] = "US_MI_MACKINAC_BRIDGE_MAC_PASS"] = 39;
                        values[valuesById[40] = "US_MI_NEXPRESS_TOLL"] = 40;
                        values[valuesById[41] = "US_MN_EZPASSMN"] = 41;
                        values[valuesById[42] = "US_NC_EZPASSNC"] = 42;
                        values[valuesById[87] = "US_NC_PEACH_PASS"] = 87;
                        values[valuesById[43] = "US_NC_QUICK_PASS"] = 43;
                        values[valuesById[80] = "US_NH_EZPASSNH"] = 80;
                        values[valuesById[75] = "US_NJ_DOWNBEACH_EXPRESS_PASS"] = 75;
                        values[valuesById[74] = "US_NJ_EZPASSNJ"] = 74;
                        values[valuesById[76] = "US_NY_EXPRESSPASS"] = 76;
                        values[valuesById[77] = "US_NY_EZPASSNY"] = 77;
                        values[valuesById[44] = "US_OH_EZPASSOH"] = 44;
                        values[valuesById[45] = "US_PA_EZPASSPA"] = 45;
                        values[valuesById[46] = "US_RI_EZPASSRI"] = 46;
                        values[valuesById[47] = "US_SC_PALPASS"] = 47;
                        values[valuesById[97] = "US_TX_AVI_TAG"] = 97;
                        values[valuesById[48] = "US_TX_BANCPASS"] = 48;
                        values[valuesById[49] = "US_TX_DEL_RIO_PASS"] = 49;
                        values[valuesById[50] = "US_TX_EFAST_PASS"] = 50;
                        values[valuesById[51] = "US_TX_EAGLE_PASS_EXPRESS_CARD"] = 51;
                        values[valuesById[52] = "US_TX_EPTOLL"] = 52;
                        values[valuesById[53] = "US_TX_EZ_CROSS"] = 53;
                        values[valuesById[54] = "US_TX_EZTAG"] = 54;
                        values[valuesById[96] = "US_TX_FUEGO_TAG"] = 96;
                        values[valuesById[55] = "US_TX_LAREDO_TRADE_TAG"] = 55;
                        values[valuesById[56] = "US_TX_PLUSPASS"] = 56;
                        values[valuesById[57] = "US_TX_TOLLTAG"] = 57;
                        values[valuesById[58] = "US_TX_TXTAG"] = 58;
                        values[valuesById[59] = "US_TX_XPRESS_CARD"] = 59;
                        values[valuesById[60] = "US_UT_ADAMS_AVE_PARKWAY_EXPRESSCARD"] = 60;
                        values[valuesById[61] = "US_VA_EZPASSVA"] = 61;
                        values[valuesById[17] = "US_WA_BREEZEBY"] = 17;
                        values[valuesById[1] = "US_WA_GOOD_TO_GO"] = 1;
                        values[valuesById[62] = "US_WV_EZPASSWV"] = 62;
                        values[valuesById[63] = "US_WV_MEMORIAL_BRIDGE_TICKETS"] = 63;
                        values[valuesById[64] = "US_WV_NEWELL_TOLL_BRIDGE_TICKET"] = 64;
                        return values;
                    })();
    
                    v2.VehicleInfo = (function() {
    
                        /**
                         * Properties of a VehicleInfo.
                         * @memberof google.maps.routing.v2
                         * @interface IVehicleInfo
                         * @property {google.maps.routing.v2.VehicleEmissionType|null} [emissionType] VehicleInfo emissionType
                         */
    
                        /**
                         * Constructs a new VehicleInfo.
                         * @memberof google.maps.routing.v2
                         * @classdesc Represents a VehicleInfo.
                         * @implements IVehicleInfo
                         * @constructor
                         * @param {google.maps.routing.v2.IVehicleInfo=} [properties] Properties to set
                         */
                        function VehicleInfo(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * VehicleInfo emissionType.
                         * @member {google.maps.routing.v2.VehicleEmissionType} emissionType
                         * @memberof google.maps.routing.v2.VehicleInfo
                         * @instance
                         */
                        VehicleInfo.prototype.emissionType = 0;
    
                        /**
                         * Creates a new VehicleInfo instance using the specified properties.
                         * @function create
                         * @memberof google.maps.routing.v2.VehicleInfo
                         * @static
                         * @param {google.maps.routing.v2.IVehicleInfo=} [properties] Properties to set
                         * @returns {google.maps.routing.v2.VehicleInfo} VehicleInfo instance
                         */
                        VehicleInfo.create = function create(properties) {
                            return new VehicleInfo(properties);
                        };
    
                        /**
                         * Encodes the specified VehicleInfo message. Does not implicitly {@link google.maps.routing.v2.VehicleInfo.verify|verify} messages.
                         * @function encode
                         * @memberof google.maps.routing.v2.VehicleInfo
                         * @static
                         * @param {google.maps.routing.v2.IVehicleInfo} message VehicleInfo message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        VehicleInfo.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.emissionType != null && Object.hasOwnProperty.call(message, "emissionType"))
                                writer.uint32(/* id 2, wireType 0 =*/16).int32(message.emissionType);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified VehicleInfo message, length delimited. Does not implicitly {@link google.maps.routing.v2.VehicleInfo.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.maps.routing.v2.VehicleInfo
                         * @static
                         * @param {google.maps.routing.v2.IVehicleInfo} message VehicleInfo message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        VehicleInfo.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a VehicleInfo message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.maps.routing.v2.VehicleInfo
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.maps.routing.v2.VehicleInfo} VehicleInfo
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        VehicleInfo.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.maps.routing.v2.VehicleInfo();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 2: {
                                        message.emissionType = reader.int32();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a VehicleInfo message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.maps.routing.v2.VehicleInfo
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.maps.routing.v2.VehicleInfo} VehicleInfo
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        VehicleInfo.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a VehicleInfo message.
                         * @function verify
                         * @memberof google.maps.routing.v2.VehicleInfo
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        VehicleInfo.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.emissionType != null && message.hasOwnProperty("emissionType"))
                                switch (message.emissionType) {
                                default:
                                    return "emissionType: enum value expected";
                                case 0:
                                case 1:
                                case 2:
                                case 3:
                                case 4:
                                    break;
                                }
                            return null;
                        };
    
                        /**
                         * Creates a VehicleInfo message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.maps.routing.v2.VehicleInfo
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.maps.routing.v2.VehicleInfo} VehicleInfo
                         */
                        VehicleInfo.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.maps.routing.v2.VehicleInfo)
                                return object;
                            var message = new $root.google.maps.routing.v2.VehicleInfo();
                            switch (object.emissionType) {
                            default:
                                if (typeof object.emissionType === "number") {
                                    message.emissionType = object.emissionType;
                                    break;
                                }
                                break;
                            case "VEHICLE_EMISSION_TYPE_UNSPECIFIED":
                            case 0:
                                message.emissionType = 0;
                                break;
                            case "GASOLINE":
                            case 1:
                                message.emissionType = 1;
                                break;
                            case "ELECTRIC":
                            case 2:
                                message.emissionType = 2;
                                break;
                            case "HYBRID":
                            case 3:
                                message.emissionType = 3;
                                break;
                            case "DIESEL":
                            case 4:
                                message.emissionType = 4;
                                break;
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a VehicleInfo message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.maps.routing.v2.VehicleInfo
                         * @static
                         * @param {google.maps.routing.v2.VehicleInfo} message VehicleInfo
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        VehicleInfo.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults)
                                object.emissionType = options.enums === String ? "VEHICLE_EMISSION_TYPE_UNSPECIFIED" : 0;
                            if (message.emissionType != null && message.hasOwnProperty("emissionType"))
                                object.emissionType = options.enums === String ? $root.google.maps.routing.v2.VehicleEmissionType[message.emissionType] === undefined ? message.emissionType : $root.google.maps.routing.v2.VehicleEmissionType[message.emissionType] : message.emissionType;
                            return object;
                        };
    
                        /**
                         * Converts this VehicleInfo to JSON.
                         * @function toJSON
                         * @memberof google.maps.routing.v2.VehicleInfo
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        VehicleInfo.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for VehicleInfo
                         * @function getTypeUrl
                         * @memberof google.maps.routing.v2.VehicleInfo
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        VehicleInfo.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.maps.routing.v2.VehicleInfo";
                        };
    
                        return VehicleInfo;
                    })();
    
                    /**
                     * VehicleEmissionType enum.
                     * @name google.maps.routing.v2.VehicleEmissionType
                     * @enum {number}
                     * @property {number} VEHICLE_EMISSION_TYPE_UNSPECIFIED=0 VEHICLE_EMISSION_TYPE_UNSPECIFIED value
                     * @property {number} GASOLINE=1 GASOLINE value
                     * @property {number} ELECTRIC=2 ELECTRIC value
                     * @property {number} HYBRID=3 HYBRID value
                     * @property {number} DIESEL=4 DIESEL value
                     */
                    v2.VehicleEmissionType = (function() {
                        var valuesById = {}, values = Object.create(valuesById);
                        values[valuesById[0] = "VEHICLE_EMISSION_TYPE_UNSPECIFIED"] = 0;
                        values[valuesById[1] = "GASOLINE"] = 1;
                        values[valuesById[2] = "ELECTRIC"] = 2;
                        values[valuesById[3] = "HYBRID"] = 3;
                        values[valuesById[4] = "DIESEL"] = 4;
                        return values;
                    })();
    
                    v2.Routes = (function() {
    
                        /**
                         * Constructs a new Routes service.
                         * @memberof google.maps.routing.v2
                         * @classdesc Represents a Routes
                         * @extends $protobuf.rpc.Service
                         * @constructor
                         * @param {$protobuf.RPCImpl} rpcImpl RPC implementation
                         * @param {boolean} [requestDelimited=false] Whether requests are length-delimited
                         * @param {boolean} [responseDelimited=false] Whether responses are length-delimited
                         */
                        function Routes(rpcImpl, requestDelimited, responseDelimited) {
                            $protobuf.rpc.Service.call(this, rpcImpl, requestDelimited, responseDelimited);
                        }
    
                        (Routes.prototype = Object.create($protobuf.rpc.Service.prototype)).constructor = Routes;
    
                        /**
                         * Creates new Routes service using the specified rpc implementation.
                         * @function create
                         * @memberof google.maps.routing.v2.Routes
                         * @static
                         * @param {$protobuf.RPCImpl} rpcImpl RPC implementation
                         * @param {boolean} [requestDelimited=false] Whether requests are length-delimited
                         * @param {boolean} [responseDelimited=false] Whether responses are length-delimited
                         * @returns {Routes} RPC service. Useful where requests and/or responses are streamed.
                         */
                        Routes.create = function create(rpcImpl, requestDelimited, responseDelimited) {
                            return new this(rpcImpl, requestDelimited, responseDelimited);
                        };
    
                        /**
                         * Callback as used by {@link google.maps.routing.v2.Routes|computeRoutes}.
                         * @memberof google.maps.routing.v2.Routes
                         * @typedef ComputeRoutesCallback
                         * @type {function}
                         * @param {Error|null} error Error, if any
                         * @param {google.maps.routing.v2.ComputeRoutesResponse} [response] ComputeRoutesResponse
                         */
    
                        /**
                         * Calls ComputeRoutes.
                         * @function computeRoutes
                         * @memberof google.maps.routing.v2.Routes
                         * @instance
                         * @param {google.maps.routing.v2.IComputeRoutesRequest} request ComputeRoutesRequest message or plain object
                         * @param {google.maps.routing.v2.Routes.ComputeRoutesCallback} callback Node-style callback called with the error, if any, and ComputeRoutesResponse
                         * @returns {undefined}
                         * @variation 1
                         */
                        Object.defineProperty(Routes.prototype.computeRoutes = function computeRoutes(request, callback) {
                            return this.rpcCall(computeRoutes, $root.google.maps.routing.v2.ComputeRoutesRequest, $root.google.maps.routing.v2.ComputeRoutesResponse, request, callback);
                        }, "name", { value: "ComputeRoutes" });
    
                        /**
                         * Calls ComputeRoutes.
                         * @function computeRoutes
                         * @memberof google.maps.routing.v2.Routes
                         * @instance
                         * @param {google.maps.routing.v2.IComputeRoutesRequest} request ComputeRoutesRequest message or plain object
                         * @returns {Promise<google.maps.routing.v2.ComputeRoutesResponse>} Promise
                         * @variation 2
                         */
    
                        /**
                         * Callback as used by {@link google.maps.routing.v2.Routes|computeRouteMatrix}.
                         * @memberof google.maps.routing.v2.Routes
                         * @typedef ComputeRouteMatrixCallback
                         * @type {function}
                         * @param {Error|null} error Error, if any
                         * @param {google.maps.routing.v2.RouteMatrixElement} [response] RouteMatrixElement
                         */
    
                        /**
                         * Calls ComputeRouteMatrix.
                         * @function computeRouteMatrix
                         * @memberof google.maps.routing.v2.Routes
                         * @instance
                         * @param {google.maps.routing.v2.IComputeRouteMatrixRequest} request ComputeRouteMatrixRequest message or plain object
                         * @param {google.maps.routing.v2.Routes.ComputeRouteMatrixCallback} callback Node-style callback called with the error, if any, and RouteMatrixElement
                         * @returns {undefined}
                         * @variation 1
                         */
                        Object.defineProperty(Routes.prototype.computeRouteMatrix = function computeRouteMatrix(request, callback) {
                            return this.rpcCall(computeRouteMatrix, $root.google.maps.routing.v2.ComputeRouteMatrixRequest, $root.google.maps.routing.v2.RouteMatrixElement, request, callback);
                        }, "name", { value: "ComputeRouteMatrix" });
    
                        /**
                         * Calls ComputeRouteMatrix.
                         * @function computeRouteMatrix
                         * @memberof google.maps.routing.v2.Routes
                         * @instance
                         * @param {google.maps.routing.v2.IComputeRouteMatrixRequest} request ComputeRouteMatrixRequest message or plain object
                         * @returns {Promise<google.maps.routing.v2.RouteMatrixElement>} Promise
                         * @variation 2
                         */
    
                        return Routes;
                    })();
    
                    v2.ComputeRoutesRequest = (function() {
    
                        /**
                         * Properties of a ComputeRoutesRequest.
                         * @memberof google.maps.routing.v2
                         * @interface IComputeRoutesRequest
                         * @property {google.maps.routing.v2.IWaypoint|null} [origin] ComputeRoutesRequest origin
                         * @property {google.maps.routing.v2.IWaypoint|null} [destination] ComputeRoutesRequest destination
                         * @property {Array.<google.maps.routing.v2.IWaypoint>|null} [intermediates] ComputeRoutesRequest intermediates
                         * @property {google.maps.routing.v2.RouteTravelMode|null} [travelMode] ComputeRoutesRequest travelMode
                         * @property {google.maps.routing.v2.RoutingPreference|null} [routingPreference] ComputeRoutesRequest routingPreference
                         * @property {google.maps.routing.v2.PolylineQuality|null} [polylineQuality] ComputeRoutesRequest polylineQuality
                         * @property {google.maps.routing.v2.PolylineEncoding|null} [polylineEncoding] ComputeRoutesRequest polylineEncoding
                         * @property {google.protobuf.ITimestamp|null} [departureTime] ComputeRoutesRequest departureTime
                         * @property {google.protobuf.ITimestamp|null} [arrivalTime] ComputeRoutesRequest arrivalTime
                         * @property {boolean|null} [computeAlternativeRoutes] ComputeRoutesRequest computeAlternativeRoutes
                         * @property {google.maps.routing.v2.IRouteModifiers|null} [routeModifiers] ComputeRoutesRequest routeModifiers
                         * @property {string|null} [languageCode] ComputeRoutesRequest languageCode
                         * @property {string|null} [regionCode] ComputeRoutesRequest regionCode
                         * @property {google.maps.routing.v2.Units|null} [units] ComputeRoutesRequest units
                         * @property {boolean|null} [optimizeWaypointOrder] ComputeRoutesRequest optimizeWaypointOrder
                         * @property {Array.<google.maps.routing.v2.ComputeRoutesRequest.ReferenceRoute>|null} [requestedReferenceRoutes] ComputeRoutesRequest requestedReferenceRoutes
                         * @property {Array.<google.maps.routing.v2.ComputeRoutesRequest.ExtraComputation>|null} [extraComputations] ComputeRoutesRequest extraComputations
                         * @property {google.maps.routing.v2.TrafficModel|null} [trafficModel] ComputeRoutesRequest trafficModel
                         * @property {google.maps.routing.v2.ITransitPreferences|null} [transitPreferences] ComputeRoutesRequest transitPreferences
                         */
    
                        /**
                         * Constructs a new ComputeRoutesRequest.
                         * @memberof google.maps.routing.v2
                         * @classdesc Represents a ComputeRoutesRequest.
                         * @implements IComputeRoutesRequest
                         * @constructor
                         * @param {google.maps.routing.v2.IComputeRoutesRequest=} [properties] Properties to set
                         */
                        function ComputeRoutesRequest(properties) {
                            this.intermediates = [];
                            this.requestedReferenceRoutes = [];
                            this.extraComputations = [];
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * ComputeRoutesRequest origin.
                         * @member {google.maps.routing.v2.IWaypoint|null|undefined} origin
                         * @memberof google.maps.routing.v2.ComputeRoutesRequest
                         * @instance
                         */
                        ComputeRoutesRequest.prototype.origin = null;
    
                        /**
                         * ComputeRoutesRequest destination.
                         * @member {google.maps.routing.v2.IWaypoint|null|undefined} destination
                         * @memberof google.maps.routing.v2.ComputeRoutesRequest
                         * @instance
                         */
                        ComputeRoutesRequest.prototype.destination = null;
    
                        /**
                         * ComputeRoutesRequest intermediates.
                         * @member {Array.<google.maps.routing.v2.IWaypoint>} intermediates
                         * @memberof google.maps.routing.v2.ComputeRoutesRequest
                         * @instance
                         */
                        ComputeRoutesRequest.prototype.intermediates = $util.emptyArray;
    
                        /**
                         * ComputeRoutesRequest travelMode.
                         * @member {google.maps.routing.v2.RouteTravelMode} travelMode
                         * @memberof google.maps.routing.v2.ComputeRoutesRequest
                         * @instance
                         */
                        ComputeRoutesRequest.prototype.travelMode = 0;
    
                        /**
                         * ComputeRoutesRequest routingPreference.
                         * @member {google.maps.routing.v2.RoutingPreference} routingPreference
                         * @memberof google.maps.routing.v2.ComputeRoutesRequest
                         * @instance
                         */
                        ComputeRoutesRequest.prototype.routingPreference = 0;
    
                        /**
                         * ComputeRoutesRequest polylineQuality.
                         * @member {google.maps.routing.v2.PolylineQuality} polylineQuality
                         * @memberof google.maps.routing.v2.ComputeRoutesRequest
                         * @instance
                         */
                        ComputeRoutesRequest.prototype.polylineQuality = 0;
    
                        /**
                         * ComputeRoutesRequest polylineEncoding.
                         * @member {google.maps.routing.v2.PolylineEncoding} polylineEncoding
                         * @memberof google.maps.routing.v2.ComputeRoutesRequest
                         * @instance
                         */
                        ComputeRoutesRequest.prototype.polylineEncoding = 0;
    
                        /**
                         * ComputeRoutesRequest departureTime.
                         * @member {google.protobuf.ITimestamp|null|undefined} departureTime
                         * @memberof google.maps.routing.v2.ComputeRoutesRequest
                         * @instance
                         */
                        ComputeRoutesRequest.prototype.departureTime = null;
    
                        /**
                         * ComputeRoutesRequest arrivalTime.
                         * @member {google.protobuf.ITimestamp|null|undefined} arrivalTime
                         * @memberof google.maps.routing.v2.ComputeRoutesRequest
                         * @instance
                         */
                        ComputeRoutesRequest.prototype.arrivalTime = null;
    
                        /**
                         * ComputeRoutesRequest computeAlternativeRoutes.
                         * @member {boolean} computeAlternativeRoutes
                         * @memberof google.maps.routing.v2.ComputeRoutesRequest
                         * @instance
                         */
                        ComputeRoutesRequest.prototype.computeAlternativeRoutes = false;
    
                        /**
                         * ComputeRoutesRequest routeModifiers.
                         * @member {google.maps.routing.v2.IRouteModifiers|null|undefined} routeModifiers
                         * @memberof google.maps.routing.v2.ComputeRoutesRequest
                         * @instance
                         */
                        ComputeRoutesRequest.prototype.routeModifiers = null;
    
                        /**
                         * ComputeRoutesRequest languageCode.
                         * @member {string} languageCode
                         * @memberof google.maps.routing.v2.ComputeRoutesRequest
                         * @instance
                         */
                        ComputeRoutesRequest.prototype.languageCode = "";
    
                        /**
                         * ComputeRoutesRequest regionCode.
                         * @member {string} regionCode
                         * @memberof google.maps.routing.v2.ComputeRoutesRequest
                         * @instance
                         */
                        ComputeRoutesRequest.prototype.regionCode = "";
    
                        /**
                         * ComputeRoutesRequest units.
                         * @member {google.maps.routing.v2.Units} units
                         * @memberof google.maps.routing.v2.ComputeRoutesRequest
                         * @instance
                         */
                        ComputeRoutesRequest.prototype.units = 0;
    
                        /**
                         * ComputeRoutesRequest optimizeWaypointOrder.
                         * @member {boolean} optimizeWaypointOrder
                         * @memberof google.maps.routing.v2.ComputeRoutesRequest
                         * @instance
                         */
                        ComputeRoutesRequest.prototype.optimizeWaypointOrder = false;
    
                        /**
                         * ComputeRoutesRequest requestedReferenceRoutes.
                         * @member {Array.<google.maps.routing.v2.ComputeRoutesRequest.ReferenceRoute>} requestedReferenceRoutes
                         * @memberof google.maps.routing.v2.ComputeRoutesRequest
                         * @instance
                         */
                        ComputeRoutesRequest.prototype.requestedReferenceRoutes = $util.emptyArray;
    
                        /**
                         * ComputeRoutesRequest extraComputations.
                         * @member {Array.<google.maps.routing.v2.ComputeRoutesRequest.ExtraComputation>} extraComputations
                         * @memberof google.maps.routing.v2.ComputeRoutesRequest
                         * @instance
                         */
                        ComputeRoutesRequest.prototype.extraComputations = $util.emptyArray;
    
                        /**
                         * ComputeRoutesRequest trafficModel.
                         * @member {google.maps.routing.v2.TrafficModel} trafficModel
                         * @memberof google.maps.routing.v2.ComputeRoutesRequest
                         * @instance
                         */
                        ComputeRoutesRequest.prototype.trafficModel = 0;
    
                        /**
                         * ComputeRoutesRequest transitPreferences.
                         * @member {google.maps.routing.v2.ITransitPreferences|null|undefined} transitPreferences
                         * @memberof google.maps.routing.v2.ComputeRoutesRequest
                         * @instance
                         */
                        ComputeRoutesRequest.prototype.transitPreferences = null;
    
                        /**
                         * Creates a new ComputeRoutesRequest instance using the specified properties.
                         * @function create
                         * @memberof google.maps.routing.v2.ComputeRoutesRequest
                         * @static
                         * @param {google.maps.routing.v2.IComputeRoutesRequest=} [properties] Properties to set
                         * @returns {google.maps.routing.v2.ComputeRoutesRequest} ComputeRoutesRequest instance
                         */
                        ComputeRoutesRequest.create = function create(properties) {
                            return new ComputeRoutesRequest(properties);
                        };
    
                        /**
                         * Encodes the specified ComputeRoutesRequest message. Does not implicitly {@link google.maps.routing.v2.ComputeRoutesRequest.verify|verify} messages.
                         * @function encode
                         * @memberof google.maps.routing.v2.ComputeRoutesRequest
                         * @static
                         * @param {google.maps.routing.v2.IComputeRoutesRequest} message ComputeRoutesRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        ComputeRoutesRequest.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.origin != null && Object.hasOwnProperty.call(message, "origin"))
                                $root.google.maps.routing.v2.Waypoint.encode(message.origin, writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                            if (message.destination != null && Object.hasOwnProperty.call(message, "destination"))
                                $root.google.maps.routing.v2.Waypoint.encode(message.destination, writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                            if (message.intermediates != null && message.intermediates.length)
                                for (var i = 0; i < message.intermediates.length; ++i)
                                    $root.google.maps.routing.v2.Waypoint.encode(message.intermediates[i], writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();
                            if (message.travelMode != null && Object.hasOwnProperty.call(message, "travelMode"))
                                writer.uint32(/* id 4, wireType 0 =*/32).int32(message.travelMode);
                            if (message.routingPreference != null && Object.hasOwnProperty.call(message, "routingPreference"))
                                writer.uint32(/* id 5, wireType 0 =*/40).int32(message.routingPreference);
                            if (message.polylineQuality != null && Object.hasOwnProperty.call(message, "polylineQuality"))
                                writer.uint32(/* id 6, wireType 0 =*/48).int32(message.polylineQuality);
                            if (message.departureTime != null && Object.hasOwnProperty.call(message, "departureTime"))
                                $root.google.protobuf.Timestamp.encode(message.departureTime, writer.uint32(/* id 7, wireType 2 =*/58).fork()).ldelim();
                            if (message.computeAlternativeRoutes != null && Object.hasOwnProperty.call(message, "computeAlternativeRoutes"))
                                writer.uint32(/* id 8, wireType 0 =*/64).bool(message.computeAlternativeRoutes);
                            if (message.routeModifiers != null && Object.hasOwnProperty.call(message, "routeModifiers"))
                                $root.google.maps.routing.v2.RouteModifiers.encode(message.routeModifiers, writer.uint32(/* id 9, wireType 2 =*/74).fork()).ldelim();
                            if (message.languageCode != null && Object.hasOwnProperty.call(message, "languageCode"))
                                writer.uint32(/* id 10, wireType 2 =*/82).string(message.languageCode);
                            if (message.units != null && Object.hasOwnProperty.call(message, "units"))
                                writer.uint32(/* id 11, wireType 0 =*/88).int32(message.units);
                            if (message.polylineEncoding != null && Object.hasOwnProperty.call(message, "polylineEncoding"))
                                writer.uint32(/* id 12, wireType 0 =*/96).int32(message.polylineEncoding);
                            if (message.optimizeWaypointOrder != null && Object.hasOwnProperty.call(message, "optimizeWaypointOrder"))
                                writer.uint32(/* id 13, wireType 0 =*/104).bool(message.optimizeWaypointOrder);
                            if (message.requestedReferenceRoutes != null && message.requestedReferenceRoutes.length) {
                                writer.uint32(/* id 14, wireType 2 =*/114).fork();
                                for (var i = 0; i < message.requestedReferenceRoutes.length; ++i)
                                    writer.int32(message.requestedReferenceRoutes[i]);
                                writer.ldelim();
                            }
                            if (message.extraComputations != null && message.extraComputations.length) {
                                writer.uint32(/* id 15, wireType 2 =*/122).fork();
                                for (var i = 0; i < message.extraComputations.length; ++i)
                                    writer.int32(message.extraComputations[i]);
                                writer.ldelim();
                            }
                            if (message.regionCode != null && Object.hasOwnProperty.call(message, "regionCode"))
                                writer.uint32(/* id 16, wireType 2 =*/130).string(message.regionCode);
                            if (message.trafficModel != null && Object.hasOwnProperty.call(message, "trafficModel"))
                                writer.uint32(/* id 18, wireType 0 =*/144).int32(message.trafficModel);
                            if (message.arrivalTime != null && Object.hasOwnProperty.call(message, "arrivalTime"))
                                $root.google.protobuf.Timestamp.encode(message.arrivalTime, writer.uint32(/* id 19, wireType 2 =*/154).fork()).ldelim();
                            if (message.transitPreferences != null && Object.hasOwnProperty.call(message, "transitPreferences"))
                                $root.google.maps.routing.v2.TransitPreferences.encode(message.transitPreferences, writer.uint32(/* id 20, wireType 2 =*/162).fork()).ldelim();
                            return writer;
                        };
    
                        /**
                         * Encodes the specified ComputeRoutesRequest message, length delimited. Does not implicitly {@link google.maps.routing.v2.ComputeRoutesRequest.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.maps.routing.v2.ComputeRoutesRequest
                         * @static
                         * @param {google.maps.routing.v2.IComputeRoutesRequest} message ComputeRoutesRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        ComputeRoutesRequest.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a ComputeRoutesRequest message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.maps.routing.v2.ComputeRoutesRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.maps.routing.v2.ComputeRoutesRequest} ComputeRoutesRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        ComputeRoutesRequest.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.maps.routing.v2.ComputeRoutesRequest();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.origin = $root.google.maps.routing.v2.Waypoint.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 2: {
                                        message.destination = $root.google.maps.routing.v2.Waypoint.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 3: {
                                        if (!(message.intermediates && message.intermediates.length))
                                            message.intermediates = [];
                                        message.intermediates.push($root.google.maps.routing.v2.Waypoint.decode(reader, reader.uint32()));
                                        break;
                                    }
                                case 4: {
                                        message.travelMode = reader.int32();
                                        break;
                                    }
                                case 5: {
                                        message.routingPreference = reader.int32();
                                        break;
                                    }
                                case 6: {
                                        message.polylineQuality = reader.int32();
                                        break;
                                    }
                                case 12: {
                                        message.polylineEncoding = reader.int32();
                                        break;
                                    }
                                case 7: {
                                        message.departureTime = $root.google.protobuf.Timestamp.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 19: {
                                        message.arrivalTime = $root.google.protobuf.Timestamp.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 8: {
                                        message.computeAlternativeRoutes = reader.bool();
                                        break;
                                    }
                                case 9: {
                                        message.routeModifiers = $root.google.maps.routing.v2.RouteModifiers.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 10: {
                                        message.languageCode = reader.string();
                                        break;
                                    }
                                case 16: {
                                        message.regionCode = reader.string();
                                        break;
                                    }
                                case 11: {
                                        message.units = reader.int32();
                                        break;
                                    }
                                case 13: {
                                        message.optimizeWaypointOrder = reader.bool();
                                        break;
                                    }
                                case 14: {
                                        if (!(message.requestedReferenceRoutes && message.requestedReferenceRoutes.length))
                                            message.requestedReferenceRoutes = [];
                                        if ((tag & 7) === 2) {
                                            var end2 = reader.uint32() + reader.pos;
                                            while (reader.pos < end2)
                                                message.requestedReferenceRoutes.push(reader.int32());
                                        } else
                                            message.requestedReferenceRoutes.push(reader.int32());
                                        break;
                                    }
                                case 15: {
                                        if (!(message.extraComputations && message.extraComputations.length))
                                            message.extraComputations = [];
                                        if ((tag & 7) === 2) {
                                            var end2 = reader.uint32() + reader.pos;
                                            while (reader.pos < end2)
                                                message.extraComputations.push(reader.int32());
                                        } else
                                            message.extraComputations.push(reader.int32());
                                        break;
                                    }
                                case 18: {
                                        message.trafficModel = reader.int32();
                                        break;
                                    }
                                case 20: {
                                        message.transitPreferences = $root.google.maps.routing.v2.TransitPreferences.decode(reader, reader.uint32());
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a ComputeRoutesRequest message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.maps.routing.v2.ComputeRoutesRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.maps.routing.v2.ComputeRoutesRequest} ComputeRoutesRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        ComputeRoutesRequest.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a ComputeRoutesRequest message.
                         * @function verify
                         * @memberof google.maps.routing.v2.ComputeRoutesRequest
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        ComputeRoutesRequest.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.origin != null && message.hasOwnProperty("origin")) {
                                var error = $root.google.maps.routing.v2.Waypoint.verify(message.origin);
                                if (error)
                                    return "origin." + error;
                            }
                            if (message.destination != null && message.hasOwnProperty("destination")) {
                                var error = $root.google.maps.routing.v2.Waypoint.verify(message.destination);
                                if (error)
                                    return "destination." + error;
                            }
                            if (message.intermediates != null && message.hasOwnProperty("intermediates")) {
                                if (!Array.isArray(message.intermediates))
                                    return "intermediates: array expected";
                                for (var i = 0; i < message.intermediates.length; ++i) {
                                    var error = $root.google.maps.routing.v2.Waypoint.verify(message.intermediates[i]);
                                    if (error)
                                        return "intermediates." + error;
                                }
                            }
                            if (message.travelMode != null && message.hasOwnProperty("travelMode"))
                                switch (message.travelMode) {
                                default:
                                    return "travelMode: enum value expected";
                                case 0:
                                case 1:
                                case 2:
                                case 3:
                                case 4:
                                case 7:
                                    break;
                                }
                            if (message.routingPreference != null && message.hasOwnProperty("routingPreference"))
                                switch (message.routingPreference) {
                                default:
                                    return "routingPreference: enum value expected";
                                case 0:
                                case 1:
                                case 2:
                                case 3:
                                    break;
                                }
                            if (message.polylineQuality != null && message.hasOwnProperty("polylineQuality"))
                                switch (message.polylineQuality) {
                                default:
                                    return "polylineQuality: enum value expected";
                                case 0:
                                case 1:
                                case 2:
                                    break;
                                }
                            if (message.polylineEncoding != null && message.hasOwnProperty("polylineEncoding"))
                                switch (message.polylineEncoding) {
                                default:
                                    return "polylineEncoding: enum value expected";
                                case 0:
                                case 1:
                                case 2:
                                    break;
                                }
                            if (message.departureTime != null && message.hasOwnProperty("departureTime")) {
                                var error = $root.google.protobuf.Timestamp.verify(message.departureTime);
                                if (error)
                                    return "departureTime." + error;
                            }
                            if (message.arrivalTime != null && message.hasOwnProperty("arrivalTime")) {
                                var error = $root.google.protobuf.Timestamp.verify(message.arrivalTime);
                                if (error)
                                    return "arrivalTime." + error;
                            }
                            if (message.computeAlternativeRoutes != null && message.hasOwnProperty("computeAlternativeRoutes"))
                                if (typeof message.computeAlternativeRoutes !== "boolean")
                                    return "computeAlternativeRoutes: boolean expected";
                            if (message.routeModifiers != null && message.hasOwnProperty("routeModifiers")) {
                                var error = $root.google.maps.routing.v2.RouteModifiers.verify(message.routeModifiers);
                                if (error)
                                    return "routeModifiers." + error;
                            }
                            if (message.languageCode != null && message.hasOwnProperty("languageCode"))
                                if (!$util.isString(message.languageCode))
                                    return "languageCode: string expected";
                            if (message.regionCode != null && message.hasOwnProperty("regionCode"))
                                if (!$util.isString(message.regionCode))
                                    return "regionCode: string expected";
                            if (message.units != null && message.hasOwnProperty("units"))
                                switch (message.units) {
                                default:
                                    return "units: enum value expected";
                                case 0:
                                case 1:
                                case 2:
                                    break;
                                }
                            if (message.optimizeWaypointOrder != null && message.hasOwnProperty("optimizeWaypointOrder"))
                                if (typeof message.optimizeWaypointOrder !== "boolean")
                                    return "optimizeWaypointOrder: boolean expected";
                            if (message.requestedReferenceRoutes != null && message.hasOwnProperty("requestedReferenceRoutes")) {
                                if (!Array.isArray(message.requestedReferenceRoutes))
                                    return "requestedReferenceRoutes: array expected";
                                for (var i = 0; i < message.requestedReferenceRoutes.length; ++i)
                                    switch (message.requestedReferenceRoutes[i]) {
                                    default:
                                        return "requestedReferenceRoutes: enum value[] expected";
                                    case 0:
                                    case 1:
                                        break;
                                    }
                            }
                            if (message.extraComputations != null && message.hasOwnProperty("extraComputations")) {
                                if (!Array.isArray(message.extraComputations))
                                    return "extraComputations: array expected";
                                for (var i = 0; i < message.extraComputations.length; ++i)
                                    switch (message.extraComputations[i]) {
                                    default:
                                        return "extraComputations: enum value[] expected";
                                    case 0:
                                    case 1:
                                    case 2:
                                    case 3:
                                    case 4:
                                        break;
                                    }
                            }
                            if (message.trafficModel != null && message.hasOwnProperty("trafficModel"))
                                switch (message.trafficModel) {
                                default:
                                    return "trafficModel: enum value expected";
                                case 0:
                                case 1:
                                case 2:
                                case 3:
                                    break;
                                }
                            if (message.transitPreferences != null && message.hasOwnProperty("transitPreferences")) {
                                var error = $root.google.maps.routing.v2.TransitPreferences.verify(message.transitPreferences);
                                if (error)
                                    return "transitPreferences." + error;
                            }
                            return null;
                        };
    
                        /**
                         * Creates a ComputeRoutesRequest message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.maps.routing.v2.ComputeRoutesRequest
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.maps.routing.v2.ComputeRoutesRequest} ComputeRoutesRequest
                         */
                        ComputeRoutesRequest.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.maps.routing.v2.ComputeRoutesRequest)
                                return object;
                            var message = new $root.google.maps.routing.v2.ComputeRoutesRequest();
                            if (object.origin != null) {
                                if (typeof object.origin !== "object")
                                    throw TypeError(".google.maps.routing.v2.ComputeRoutesRequest.origin: object expected");
                                message.origin = $root.google.maps.routing.v2.Waypoint.fromObject(object.origin);
                            }
                            if (object.destination != null) {
                                if (typeof object.destination !== "object")
                                    throw TypeError(".google.maps.routing.v2.ComputeRoutesRequest.destination: object expected");
                                message.destination = $root.google.maps.routing.v2.Waypoint.fromObject(object.destination);
                            }
                            if (object.intermediates) {
                                if (!Array.isArray(object.intermediates))
                                    throw TypeError(".google.maps.routing.v2.ComputeRoutesRequest.intermediates: array expected");
                                message.intermediates = [];
                                for (var i = 0; i < object.intermediates.length; ++i) {
                                    if (typeof object.intermediates[i] !== "object")
                                        throw TypeError(".google.maps.routing.v2.ComputeRoutesRequest.intermediates: object expected");
                                    message.intermediates[i] = $root.google.maps.routing.v2.Waypoint.fromObject(object.intermediates[i]);
                                }
                            }
                            switch (object.travelMode) {
                            default:
                                if (typeof object.travelMode === "number") {
                                    message.travelMode = object.travelMode;
                                    break;
                                }
                                break;
                            case "TRAVEL_MODE_UNSPECIFIED":
                            case 0:
                                message.travelMode = 0;
                                break;
                            case "DRIVE":
                            case 1:
                                message.travelMode = 1;
                                break;
                            case "BICYCLE":
                            case 2:
                                message.travelMode = 2;
                                break;
                            case "WALK":
                            case 3:
                                message.travelMode = 3;
                                break;
                            case "TWO_WHEELER":
                            case 4:
                                message.travelMode = 4;
                                break;
                            case "TRANSIT":
                            case 7:
                                message.travelMode = 7;
                                break;
                            }
                            switch (object.routingPreference) {
                            default:
                                if (typeof object.routingPreference === "number") {
                                    message.routingPreference = object.routingPreference;
                                    break;
                                }
                                break;
                            case "ROUTING_PREFERENCE_UNSPECIFIED":
                            case 0:
                                message.routingPreference = 0;
                                break;
                            case "TRAFFIC_UNAWARE":
                            case 1:
                                message.routingPreference = 1;
                                break;
                            case "TRAFFIC_AWARE":
                            case 2:
                                message.routingPreference = 2;
                                break;
                            case "TRAFFIC_AWARE_OPTIMAL":
                            case 3:
                                message.routingPreference = 3;
                                break;
                            }
                            switch (object.polylineQuality) {
                            default:
                                if (typeof object.polylineQuality === "number") {
                                    message.polylineQuality = object.polylineQuality;
                                    break;
                                }
                                break;
                            case "POLYLINE_QUALITY_UNSPECIFIED":
                            case 0:
                                message.polylineQuality = 0;
                                break;
                            case "HIGH_QUALITY":
                            case 1:
                                message.polylineQuality = 1;
                                break;
                            case "OVERVIEW":
                            case 2:
                                message.polylineQuality = 2;
                                break;
                            }
                            switch (object.polylineEncoding) {
                            default:
                                if (typeof object.polylineEncoding === "number") {
                                    message.polylineEncoding = object.polylineEncoding;
                                    break;
                                }
                                break;
                            case "POLYLINE_ENCODING_UNSPECIFIED":
                            case 0:
                                message.polylineEncoding = 0;
                                break;
                            case "ENCODED_POLYLINE":
                            case 1:
                                message.polylineEncoding = 1;
                                break;
                            case "GEO_JSON_LINESTRING":
                            case 2:
                                message.polylineEncoding = 2;
                                break;
                            }
                            if (object.departureTime != null) {
                                if (typeof object.departureTime !== "object")
                                    throw TypeError(".google.maps.routing.v2.ComputeRoutesRequest.departureTime: object expected");
                                message.departureTime = $root.google.protobuf.Timestamp.fromObject(object.departureTime);
                            }
                            if (object.arrivalTime != null) {
                                if (typeof object.arrivalTime !== "object")
                                    throw TypeError(".google.maps.routing.v2.ComputeRoutesRequest.arrivalTime: object expected");
                                message.arrivalTime = $root.google.protobuf.Timestamp.fromObject(object.arrivalTime);
                            }
                            if (object.computeAlternativeRoutes != null)
                                message.computeAlternativeRoutes = Boolean(object.computeAlternativeRoutes);
                            if (object.routeModifiers != null) {
                                if (typeof object.routeModifiers !== "object")
                                    throw TypeError(".google.maps.routing.v2.ComputeRoutesRequest.routeModifiers: object expected");
                                message.routeModifiers = $root.google.maps.routing.v2.RouteModifiers.fromObject(object.routeModifiers);
                            }
                            if (object.languageCode != null)
                                message.languageCode = String(object.languageCode);
                            if (object.regionCode != null)
                                message.regionCode = String(object.regionCode);
                            switch (object.units) {
                            default:
                                if (typeof object.units === "number") {
                                    message.units = object.units;
                                    break;
                                }
                                break;
                            case "UNITS_UNSPECIFIED":
                            case 0:
                                message.units = 0;
                                break;
                            case "METRIC":
                            case 1:
                                message.units = 1;
                                break;
                            case "IMPERIAL":
                            case 2:
                                message.units = 2;
                                break;
                            }
                            if (object.optimizeWaypointOrder != null)
                                message.optimizeWaypointOrder = Boolean(object.optimizeWaypointOrder);
                            if (object.requestedReferenceRoutes) {
                                if (!Array.isArray(object.requestedReferenceRoutes))
                                    throw TypeError(".google.maps.routing.v2.ComputeRoutesRequest.requestedReferenceRoutes: array expected");
                                message.requestedReferenceRoutes = [];
                                for (var i = 0; i < object.requestedReferenceRoutes.length; ++i)
                                    switch (object.requestedReferenceRoutes[i]) {
                                    default:
                                        if (typeof object.requestedReferenceRoutes[i] === "number") {
                                            message.requestedReferenceRoutes[i] = object.requestedReferenceRoutes[i];
                                            break;
                                        }
                                    case "REFERENCE_ROUTE_UNSPECIFIED":
                                    case 0:
                                        message.requestedReferenceRoutes[i] = 0;
                                        break;
                                    case "FUEL_EFFICIENT":
                                    case 1:
                                        message.requestedReferenceRoutes[i] = 1;
                                        break;
                                    }
                            }
                            if (object.extraComputations) {
                                if (!Array.isArray(object.extraComputations))
                                    throw TypeError(".google.maps.routing.v2.ComputeRoutesRequest.extraComputations: array expected");
                                message.extraComputations = [];
                                for (var i = 0; i < object.extraComputations.length; ++i)
                                    switch (object.extraComputations[i]) {
                                    default:
                                        if (typeof object.extraComputations[i] === "number") {
                                            message.extraComputations[i] = object.extraComputations[i];
                                            break;
                                        }
                                    case "EXTRA_COMPUTATION_UNSPECIFIED":
                                    case 0:
                                        message.extraComputations[i] = 0;
                                        break;
                                    case "TOLLS":
                                    case 1:
                                        message.extraComputations[i] = 1;
                                        break;
                                    case "FUEL_CONSUMPTION":
                                    case 2:
                                        message.extraComputations[i] = 2;
                                        break;
                                    case "TRAFFIC_ON_POLYLINE":
                                    case 3:
                                        message.extraComputations[i] = 3;
                                        break;
                                    case "HTML_FORMATTED_NAVIGATION_INSTRUCTIONS":
                                    case 4:
                                        message.extraComputations[i] = 4;
                                        break;
                                    }
                            }
                            switch (object.trafficModel) {
                            default:
                                if (typeof object.trafficModel === "number") {
                                    message.trafficModel = object.trafficModel;
                                    break;
                                }
                                break;
                            case "TRAFFIC_MODEL_UNSPECIFIED":
                            case 0:
                                message.trafficModel = 0;
                                break;
                            case "BEST_GUESS":
                            case 1:
                                message.trafficModel = 1;
                                break;
                            case "PESSIMISTIC":
                            case 2:
                                message.trafficModel = 2;
                                break;
                            case "OPTIMISTIC":
                            case 3:
                                message.trafficModel = 3;
                                break;
                            }
                            if (object.transitPreferences != null) {
                                if (typeof object.transitPreferences !== "object")
                                    throw TypeError(".google.maps.routing.v2.ComputeRoutesRequest.transitPreferences: object expected");
                                message.transitPreferences = $root.google.maps.routing.v2.TransitPreferences.fromObject(object.transitPreferences);
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a ComputeRoutesRequest message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.maps.routing.v2.ComputeRoutesRequest
                         * @static
                         * @param {google.maps.routing.v2.ComputeRoutesRequest} message ComputeRoutesRequest
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        ComputeRoutesRequest.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.arrays || options.defaults) {
                                object.intermediates = [];
                                object.requestedReferenceRoutes = [];
                                object.extraComputations = [];
                            }
                            if (options.defaults) {
                                object.origin = null;
                                object.destination = null;
                                object.travelMode = options.enums === String ? "TRAVEL_MODE_UNSPECIFIED" : 0;
                                object.routingPreference = options.enums === String ? "ROUTING_PREFERENCE_UNSPECIFIED" : 0;
                                object.polylineQuality = options.enums === String ? "POLYLINE_QUALITY_UNSPECIFIED" : 0;
                                object.departureTime = null;
                                object.computeAlternativeRoutes = false;
                                object.routeModifiers = null;
                                object.languageCode = "";
                                object.units = options.enums === String ? "UNITS_UNSPECIFIED" : 0;
                                object.polylineEncoding = options.enums === String ? "POLYLINE_ENCODING_UNSPECIFIED" : 0;
                                object.optimizeWaypointOrder = false;
                                object.regionCode = "";
                                object.trafficModel = options.enums === String ? "TRAFFIC_MODEL_UNSPECIFIED" : 0;
                                object.arrivalTime = null;
                                object.transitPreferences = null;
                            }
                            if (message.origin != null && message.hasOwnProperty("origin"))
                                object.origin = $root.google.maps.routing.v2.Waypoint.toObject(message.origin, options);
                            if (message.destination != null && message.hasOwnProperty("destination"))
                                object.destination = $root.google.maps.routing.v2.Waypoint.toObject(message.destination, options);
                            if (message.intermediates && message.intermediates.length) {
                                object.intermediates = [];
                                for (var j = 0; j < message.intermediates.length; ++j)
                                    object.intermediates[j] = $root.google.maps.routing.v2.Waypoint.toObject(message.intermediates[j], options);
                            }
                            if (message.travelMode != null && message.hasOwnProperty("travelMode"))
                                object.travelMode = options.enums === String ? $root.google.maps.routing.v2.RouteTravelMode[message.travelMode] === undefined ? message.travelMode : $root.google.maps.routing.v2.RouteTravelMode[message.travelMode] : message.travelMode;
                            if (message.routingPreference != null && message.hasOwnProperty("routingPreference"))
                                object.routingPreference = options.enums === String ? $root.google.maps.routing.v2.RoutingPreference[message.routingPreference] === undefined ? message.routingPreference : $root.google.maps.routing.v2.RoutingPreference[message.routingPreference] : message.routingPreference;
                            if (message.polylineQuality != null && message.hasOwnProperty("polylineQuality"))
                                object.polylineQuality = options.enums === String ? $root.google.maps.routing.v2.PolylineQuality[message.polylineQuality] === undefined ? message.polylineQuality : $root.google.maps.routing.v2.PolylineQuality[message.polylineQuality] : message.polylineQuality;
                            if (message.departureTime != null && message.hasOwnProperty("departureTime"))
                                object.departureTime = $root.google.protobuf.Timestamp.toObject(message.departureTime, options);
                            if (message.computeAlternativeRoutes != null && message.hasOwnProperty("computeAlternativeRoutes"))
                                object.computeAlternativeRoutes = message.computeAlternativeRoutes;
                            if (message.routeModifiers != null && message.hasOwnProperty("routeModifiers"))
                                object.routeModifiers = $root.google.maps.routing.v2.RouteModifiers.toObject(message.routeModifiers, options);
                            if (message.languageCode != null && message.hasOwnProperty("languageCode"))
                                object.languageCode = message.languageCode;
                            if (message.units != null && message.hasOwnProperty("units"))
                                object.units = options.enums === String ? $root.google.maps.routing.v2.Units[message.units] === undefined ? message.units : $root.google.maps.routing.v2.Units[message.units] : message.units;
                            if (message.polylineEncoding != null && message.hasOwnProperty("polylineEncoding"))
                                object.polylineEncoding = options.enums === String ? $root.google.maps.routing.v2.PolylineEncoding[message.polylineEncoding] === undefined ? message.polylineEncoding : $root.google.maps.routing.v2.PolylineEncoding[message.polylineEncoding] : message.polylineEncoding;
                            if (message.optimizeWaypointOrder != null && message.hasOwnProperty("optimizeWaypointOrder"))
                                object.optimizeWaypointOrder = message.optimizeWaypointOrder;
                            if (message.requestedReferenceRoutes && message.requestedReferenceRoutes.length) {
                                object.requestedReferenceRoutes = [];
                                for (var j = 0; j < message.requestedReferenceRoutes.length; ++j)
                                    object.requestedReferenceRoutes[j] = options.enums === String ? $root.google.maps.routing.v2.ComputeRoutesRequest.ReferenceRoute[message.requestedReferenceRoutes[j]] === undefined ? message.requestedReferenceRoutes[j] : $root.google.maps.routing.v2.ComputeRoutesRequest.ReferenceRoute[message.requestedReferenceRoutes[j]] : message.requestedReferenceRoutes[j];
                            }
                            if (message.extraComputations && message.extraComputations.length) {
                                object.extraComputations = [];
                                for (var j = 0; j < message.extraComputations.length; ++j)
                                    object.extraComputations[j] = options.enums === String ? $root.google.maps.routing.v2.ComputeRoutesRequest.ExtraComputation[message.extraComputations[j]] === undefined ? message.extraComputations[j] : $root.google.maps.routing.v2.ComputeRoutesRequest.ExtraComputation[message.extraComputations[j]] : message.extraComputations[j];
                            }
                            if (message.regionCode != null && message.hasOwnProperty("regionCode"))
                                object.regionCode = message.regionCode;
                            if (message.trafficModel != null && message.hasOwnProperty("trafficModel"))
                                object.trafficModel = options.enums === String ? $root.google.maps.routing.v2.TrafficModel[message.trafficModel] === undefined ? message.trafficModel : $root.google.maps.routing.v2.TrafficModel[message.trafficModel] : message.trafficModel;
                            if (message.arrivalTime != null && message.hasOwnProperty("arrivalTime"))
                                object.arrivalTime = $root.google.protobuf.Timestamp.toObject(message.arrivalTime, options);
                            if (message.transitPreferences != null && message.hasOwnProperty("transitPreferences"))
                                object.transitPreferences = $root.google.maps.routing.v2.TransitPreferences.toObject(message.transitPreferences, options);
                            return object;
                        };
    
                        /**
                         * Converts this ComputeRoutesRequest to JSON.
                         * @function toJSON
                         * @memberof google.maps.routing.v2.ComputeRoutesRequest
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        ComputeRoutesRequest.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for ComputeRoutesRequest
                         * @function getTypeUrl
                         * @memberof google.maps.routing.v2.ComputeRoutesRequest
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        ComputeRoutesRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.maps.routing.v2.ComputeRoutesRequest";
                        };
    
                        /**
                         * ReferenceRoute enum.
                         * @name google.maps.routing.v2.ComputeRoutesRequest.ReferenceRoute
                         * @enum {number}
                         * @property {number} REFERENCE_ROUTE_UNSPECIFIED=0 REFERENCE_ROUTE_UNSPECIFIED value
                         * @property {number} FUEL_EFFICIENT=1 FUEL_EFFICIENT value
                         */
                        ComputeRoutesRequest.ReferenceRoute = (function() {
                            var valuesById = {}, values = Object.create(valuesById);
                            values[valuesById[0] = "REFERENCE_ROUTE_UNSPECIFIED"] = 0;
                            values[valuesById[1] = "FUEL_EFFICIENT"] = 1;
                            return values;
                        })();
    
                        /**
                         * ExtraComputation enum.
                         * @name google.maps.routing.v2.ComputeRoutesRequest.ExtraComputation
                         * @enum {number}
                         * @property {number} EXTRA_COMPUTATION_UNSPECIFIED=0 EXTRA_COMPUTATION_UNSPECIFIED value
                         * @property {number} TOLLS=1 TOLLS value
                         * @property {number} FUEL_CONSUMPTION=2 FUEL_CONSUMPTION value
                         * @property {number} TRAFFIC_ON_POLYLINE=3 TRAFFIC_ON_POLYLINE value
                         * @property {number} HTML_FORMATTED_NAVIGATION_INSTRUCTIONS=4 HTML_FORMATTED_NAVIGATION_INSTRUCTIONS value
                         */
                        ComputeRoutesRequest.ExtraComputation = (function() {
                            var valuesById = {}, values = Object.create(valuesById);
                            values[valuesById[0] = "EXTRA_COMPUTATION_UNSPECIFIED"] = 0;
                            values[valuesById[1] = "TOLLS"] = 1;
                            values[valuesById[2] = "FUEL_CONSUMPTION"] = 2;
                            values[valuesById[3] = "TRAFFIC_ON_POLYLINE"] = 3;
                            values[valuesById[4] = "HTML_FORMATTED_NAVIGATION_INSTRUCTIONS"] = 4;
                            return values;
                        })();
    
                        return ComputeRoutesRequest;
                    })();
    
                    v2.ComputeRoutesResponse = (function() {
    
                        /**
                         * Properties of a ComputeRoutesResponse.
                         * @memberof google.maps.routing.v2
                         * @interface IComputeRoutesResponse
                         * @property {Array.<google.maps.routing.v2.IRoute>|null} [routes] ComputeRoutesResponse routes
                         * @property {google.maps.routing.v2.IFallbackInfo|null} [fallbackInfo] ComputeRoutesResponse fallbackInfo
                         * @property {google.maps.routing.v2.IGeocodingResults|null} [geocodingResults] ComputeRoutesResponse geocodingResults
                         */
    
                        /**
                         * Constructs a new ComputeRoutesResponse.
                         * @memberof google.maps.routing.v2
                         * @classdesc Represents a ComputeRoutesResponse.
                         * @implements IComputeRoutesResponse
                         * @constructor
                         * @param {google.maps.routing.v2.IComputeRoutesResponse=} [properties] Properties to set
                         */
                        function ComputeRoutesResponse(properties) {
                            this.routes = [];
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * ComputeRoutesResponse routes.
                         * @member {Array.<google.maps.routing.v2.IRoute>} routes
                         * @memberof google.maps.routing.v2.ComputeRoutesResponse
                         * @instance
                         */
                        ComputeRoutesResponse.prototype.routes = $util.emptyArray;
    
                        /**
                         * ComputeRoutesResponse fallbackInfo.
                         * @member {google.maps.routing.v2.IFallbackInfo|null|undefined} fallbackInfo
                         * @memberof google.maps.routing.v2.ComputeRoutesResponse
                         * @instance
                         */
                        ComputeRoutesResponse.prototype.fallbackInfo = null;
    
                        /**
                         * ComputeRoutesResponse geocodingResults.
                         * @member {google.maps.routing.v2.IGeocodingResults|null|undefined} geocodingResults
                         * @memberof google.maps.routing.v2.ComputeRoutesResponse
                         * @instance
                         */
                        ComputeRoutesResponse.prototype.geocodingResults = null;
    
                        /**
                         * Creates a new ComputeRoutesResponse instance using the specified properties.
                         * @function create
                         * @memberof google.maps.routing.v2.ComputeRoutesResponse
                         * @static
                         * @param {google.maps.routing.v2.IComputeRoutesResponse=} [properties] Properties to set
                         * @returns {google.maps.routing.v2.ComputeRoutesResponse} ComputeRoutesResponse instance
                         */
                        ComputeRoutesResponse.create = function create(properties) {
                            return new ComputeRoutesResponse(properties);
                        };
    
                        /**
                         * Encodes the specified ComputeRoutesResponse message. Does not implicitly {@link google.maps.routing.v2.ComputeRoutesResponse.verify|verify} messages.
                         * @function encode
                         * @memberof google.maps.routing.v2.ComputeRoutesResponse
                         * @static
                         * @param {google.maps.routing.v2.IComputeRoutesResponse} message ComputeRoutesResponse message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        ComputeRoutesResponse.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.routes != null && message.routes.length)
                                for (var i = 0; i < message.routes.length; ++i)
                                    $root.google.maps.routing.v2.Route.encode(message.routes[i], writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                            if (message.fallbackInfo != null && Object.hasOwnProperty.call(message, "fallbackInfo"))
                                $root.google.maps.routing.v2.FallbackInfo.encode(message.fallbackInfo, writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                            if (message.geocodingResults != null && Object.hasOwnProperty.call(message, "geocodingResults"))
                                $root.google.maps.routing.v2.GeocodingResults.encode(message.geocodingResults, writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();
                            return writer;
                        };
    
                        /**
                         * Encodes the specified ComputeRoutesResponse message, length delimited. Does not implicitly {@link google.maps.routing.v2.ComputeRoutesResponse.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.maps.routing.v2.ComputeRoutesResponse
                         * @static
                         * @param {google.maps.routing.v2.IComputeRoutesResponse} message ComputeRoutesResponse message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        ComputeRoutesResponse.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a ComputeRoutesResponse message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.maps.routing.v2.ComputeRoutesResponse
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.maps.routing.v2.ComputeRoutesResponse} ComputeRoutesResponse
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        ComputeRoutesResponse.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.maps.routing.v2.ComputeRoutesResponse();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        if (!(message.routes && message.routes.length))
                                            message.routes = [];
                                        message.routes.push($root.google.maps.routing.v2.Route.decode(reader, reader.uint32()));
                                        break;
                                    }
                                case 2: {
                                        message.fallbackInfo = $root.google.maps.routing.v2.FallbackInfo.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 3: {
                                        message.geocodingResults = $root.google.maps.routing.v2.GeocodingResults.decode(reader, reader.uint32());
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a ComputeRoutesResponse message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.maps.routing.v2.ComputeRoutesResponse
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.maps.routing.v2.ComputeRoutesResponse} ComputeRoutesResponse
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        ComputeRoutesResponse.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a ComputeRoutesResponse message.
                         * @function verify
                         * @memberof google.maps.routing.v2.ComputeRoutesResponse
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        ComputeRoutesResponse.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.routes != null && message.hasOwnProperty("routes")) {
                                if (!Array.isArray(message.routes))
                                    return "routes: array expected";
                                for (var i = 0; i < message.routes.length; ++i) {
                                    var error = $root.google.maps.routing.v2.Route.verify(message.routes[i]);
                                    if (error)
                                        return "routes." + error;
                                }
                            }
                            if (message.fallbackInfo != null && message.hasOwnProperty("fallbackInfo")) {
                                var error = $root.google.maps.routing.v2.FallbackInfo.verify(message.fallbackInfo);
                                if (error)
                                    return "fallbackInfo." + error;
                            }
                            if (message.geocodingResults != null && message.hasOwnProperty("geocodingResults")) {
                                var error = $root.google.maps.routing.v2.GeocodingResults.verify(message.geocodingResults);
                                if (error)
                                    return "geocodingResults." + error;
                            }
                            return null;
                        };
    
                        /**
                         * Creates a ComputeRoutesResponse message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.maps.routing.v2.ComputeRoutesResponse
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.maps.routing.v2.ComputeRoutesResponse} ComputeRoutesResponse
                         */
                        ComputeRoutesResponse.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.maps.routing.v2.ComputeRoutesResponse)
                                return object;
                            var message = new $root.google.maps.routing.v2.ComputeRoutesResponse();
                            if (object.routes) {
                                if (!Array.isArray(object.routes))
                                    throw TypeError(".google.maps.routing.v2.ComputeRoutesResponse.routes: array expected");
                                message.routes = [];
                                for (var i = 0; i < object.routes.length; ++i) {
                                    if (typeof object.routes[i] !== "object")
                                        throw TypeError(".google.maps.routing.v2.ComputeRoutesResponse.routes: object expected");
                                    message.routes[i] = $root.google.maps.routing.v2.Route.fromObject(object.routes[i]);
                                }
                            }
                            if (object.fallbackInfo != null) {
                                if (typeof object.fallbackInfo !== "object")
                                    throw TypeError(".google.maps.routing.v2.ComputeRoutesResponse.fallbackInfo: object expected");
                                message.fallbackInfo = $root.google.maps.routing.v2.FallbackInfo.fromObject(object.fallbackInfo);
                            }
                            if (object.geocodingResults != null) {
                                if (typeof object.geocodingResults !== "object")
                                    throw TypeError(".google.maps.routing.v2.ComputeRoutesResponse.geocodingResults: object expected");
                                message.geocodingResults = $root.google.maps.routing.v2.GeocodingResults.fromObject(object.geocodingResults);
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a ComputeRoutesResponse message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.maps.routing.v2.ComputeRoutesResponse
                         * @static
                         * @param {google.maps.routing.v2.ComputeRoutesResponse} message ComputeRoutesResponse
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        ComputeRoutesResponse.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.arrays || options.defaults)
                                object.routes = [];
                            if (options.defaults) {
                                object.fallbackInfo = null;
                                object.geocodingResults = null;
                            }
                            if (message.routes && message.routes.length) {
                                object.routes = [];
                                for (var j = 0; j < message.routes.length; ++j)
                                    object.routes[j] = $root.google.maps.routing.v2.Route.toObject(message.routes[j], options);
                            }
                            if (message.fallbackInfo != null && message.hasOwnProperty("fallbackInfo"))
                                object.fallbackInfo = $root.google.maps.routing.v2.FallbackInfo.toObject(message.fallbackInfo, options);
                            if (message.geocodingResults != null && message.hasOwnProperty("geocodingResults"))
                                object.geocodingResults = $root.google.maps.routing.v2.GeocodingResults.toObject(message.geocodingResults, options);
                            return object;
                        };
    
                        /**
                         * Converts this ComputeRoutesResponse to JSON.
                         * @function toJSON
                         * @memberof google.maps.routing.v2.ComputeRoutesResponse
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        ComputeRoutesResponse.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for ComputeRoutesResponse
                         * @function getTypeUrl
                         * @memberof google.maps.routing.v2.ComputeRoutesResponse
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        ComputeRoutesResponse.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.maps.routing.v2.ComputeRoutesResponse";
                        };
    
                        return ComputeRoutesResponse;
                    })();
    
                    v2.ComputeRouteMatrixRequest = (function() {
    
                        /**
                         * Properties of a ComputeRouteMatrixRequest.
                         * @memberof google.maps.routing.v2
                         * @interface IComputeRouteMatrixRequest
                         * @property {Array.<google.maps.routing.v2.IRouteMatrixOrigin>|null} [origins] ComputeRouteMatrixRequest origins
                         * @property {Array.<google.maps.routing.v2.IRouteMatrixDestination>|null} [destinations] ComputeRouteMatrixRequest destinations
                         * @property {google.maps.routing.v2.RouteTravelMode|null} [travelMode] ComputeRouteMatrixRequest travelMode
                         * @property {google.maps.routing.v2.RoutingPreference|null} [routingPreference] ComputeRouteMatrixRequest routingPreference
                         * @property {google.protobuf.ITimestamp|null} [departureTime] ComputeRouteMatrixRequest departureTime
                         * @property {google.protobuf.ITimestamp|null} [arrivalTime] ComputeRouteMatrixRequest arrivalTime
                         * @property {string|null} [languageCode] ComputeRouteMatrixRequest languageCode
                         * @property {string|null} [regionCode] ComputeRouteMatrixRequest regionCode
                         * @property {Array.<google.maps.routing.v2.ComputeRouteMatrixRequest.ExtraComputation>|null} [extraComputations] ComputeRouteMatrixRequest extraComputations
                         * @property {google.maps.routing.v2.TrafficModel|null} [trafficModel] ComputeRouteMatrixRequest trafficModel
                         * @property {google.maps.routing.v2.ITransitPreferences|null} [transitPreferences] ComputeRouteMatrixRequest transitPreferences
                         */
    
                        /**
                         * Constructs a new ComputeRouteMatrixRequest.
                         * @memberof google.maps.routing.v2
                         * @classdesc Represents a ComputeRouteMatrixRequest.
                         * @implements IComputeRouteMatrixRequest
                         * @constructor
                         * @param {google.maps.routing.v2.IComputeRouteMatrixRequest=} [properties] Properties to set
                         */
                        function ComputeRouteMatrixRequest(properties) {
                            this.origins = [];
                            this.destinations = [];
                            this.extraComputations = [];
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * ComputeRouteMatrixRequest origins.
                         * @member {Array.<google.maps.routing.v2.IRouteMatrixOrigin>} origins
                         * @memberof google.maps.routing.v2.ComputeRouteMatrixRequest
                         * @instance
                         */
                        ComputeRouteMatrixRequest.prototype.origins = $util.emptyArray;
    
                        /**
                         * ComputeRouteMatrixRequest destinations.
                         * @member {Array.<google.maps.routing.v2.IRouteMatrixDestination>} destinations
                         * @memberof google.maps.routing.v2.ComputeRouteMatrixRequest
                         * @instance
                         */
                        ComputeRouteMatrixRequest.prototype.destinations = $util.emptyArray;
    
                        /**
                         * ComputeRouteMatrixRequest travelMode.
                         * @member {google.maps.routing.v2.RouteTravelMode} travelMode
                         * @memberof google.maps.routing.v2.ComputeRouteMatrixRequest
                         * @instance
                         */
                        ComputeRouteMatrixRequest.prototype.travelMode = 0;
    
                        /**
                         * ComputeRouteMatrixRequest routingPreference.
                         * @member {google.maps.routing.v2.RoutingPreference} routingPreference
                         * @memberof google.maps.routing.v2.ComputeRouteMatrixRequest
                         * @instance
                         */
                        ComputeRouteMatrixRequest.prototype.routingPreference = 0;
    
                        /**
                         * ComputeRouteMatrixRequest departureTime.
                         * @member {google.protobuf.ITimestamp|null|undefined} departureTime
                         * @memberof google.maps.routing.v2.ComputeRouteMatrixRequest
                         * @instance
                         */
                        ComputeRouteMatrixRequest.prototype.departureTime = null;
    
                        /**
                         * ComputeRouteMatrixRequest arrivalTime.
                         * @member {google.protobuf.ITimestamp|null|undefined} arrivalTime
                         * @memberof google.maps.routing.v2.ComputeRouteMatrixRequest
                         * @instance
                         */
                        ComputeRouteMatrixRequest.prototype.arrivalTime = null;
    
                        /**
                         * ComputeRouteMatrixRequest languageCode.
                         * @member {string} languageCode
                         * @memberof google.maps.routing.v2.ComputeRouteMatrixRequest
                         * @instance
                         */
                        ComputeRouteMatrixRequest.prototype.languageCode = "";
    
                        /**
                         * ComputeRouteMatrixRequest regionCode.
                         * @member {string} regionCode
                         * @memberof google.maps.routing.v2.ComputeRouteMatrixRequest
                         * @instance
                         */
                        ComputeRouteMatrixRequest.prototype.regionCode = "";
    
                        /**
                         * ComputeRouteMatrixRequest extraComputations.
                         * @member {Array.<google.maps.routing.v2.ComputeRouteMatrixRequest.ExtraComputation>} extraComputations
                         * @memberof google.maps.routing.v2.ComputeRouteMatrixRequest
                         * @instance
                         */
                        ComputeRouteMatrixRequest.prototype.extraComputations = $util.emptyArray;
    
                        /**
                         * ComputeRouteMatrixRequest trafficModel.
                         * @member {google.maps.routing.v2.TrafficModel} trafficModel
                         * @memberof google.maps.routing.v2.ComputeRouteMatrixRequest
                         * @instance
                         */
                        ComputeRouteMatrixRequest.prototype.trafficModel = 0;
    
                        /**
                         * ComputeRouteMatrixRequest transitPreferences.
                         * @member {google.maps.routing.v2.ITransitPreferences|null|undefined} transitPreferences
                         * @memberof google.maps.routing.v2.ComputeRouteMatrixRequest
                         * @instance
                         */
                        ComputeRouteMatrixRequest.prototype.transitPreferences = null;
    
                        /**
                         * Creates a new ComputeRouteMatrixRequest instance using the specified properties.
                         * @function create
                         * @memberof google.maps.routing.v2.ComputeRouteMatrixRequest
                         * @static
                         * @param {google.maps.routing.v2.IComputeRouteMatrixRequest=} [properties] Properties to set
                         * @returns {google.maps.routing.v2.ComputeRouteMatrixRequest} ComputeRouteMatrixRequest instance
                         */
                        ComputeRouteMatrixRequest.create = function create(properties) {
                            return new ComputeRouteMatrixRequest(properties);
                        };
    
                        /**
                         * Encodes the specified ComputeRouteMatrixRequest message. Does not implicitly {@link google.maps.routing.v2.ComputeRouteMatrixRequest.verify|verify} messages.
                         * @function encode
                         * @memberof google.maps.routing.v2.ComputeRouteMatrixRequest
                         * @static
                         * @param {google.maps.routing.v2.IComputeRouteMatrixRequest} message ComputeRouteMatrixRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        ComputeRouteMatrixRequest.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.origins != null && message.origins.length)
                                for (var i = 0; i < message.origins.length; ++i)
                                    $root.google.maps.routing.v2.RouteMatrixOrigin.encode(message.origins[i], writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                            if (message.destinations != null && message.destinations.length)
                                for (var i = 0; i < message.destinations.length; ++i)
                                    $root.google.maps.routing.v2.RouteMatrixDestination.encode(message.destinations[i], writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                            if (message.travelMode != null && Object.hasOwnProperty.call(message, "travelMode"))
                                writer.uint32(/* id 3, wireType 0 =*/24).int32(message.travelMode);
                            if (message.routingPreference != null && Object.hasOwnProperty.call(message, "routingPreference"))
                                writer.uint32(/* id 4, wireType 0 =*/32).int32(message.routingPreference);
                            if (message.departureTime != null && Object.hasOwnProperty.call(message, "departureTime"))
                                $root.google.protobuf.Timestamp.encode(message.departureTime, writer.uint32(/* id 5, wireType 2 =*/42).fork()).ldelim();
                            if (message.languageCode != null && Object.hasOwnProperty.call(message, "languageCode"))
                                writer.uint32(/* id 6, wireType 2 =*/50).string(message.languageCode);
                            if (message.extraComputations != null && message.extraComputations.length) {
                                writer.uint32(/* id 8, wireType 2 =*/66).fork();
                                for (var i = 0; i < message.extraComputations.length; ++i)
                                    writer.int32(message.extraComputations[i]);
                                writer.ldelim();
                            }
                            if (message.regionCode != null && Object.hasOwnProperty.call(message, "regionCode"))
                                writer.uint32(/* id 9, wireType 2 =*/74).string(message.regionCode);
                            if (message.trafficModel != null && Object.hasOwnProperty.call(message, "trafficModel"))
                                writer.uint32(/* id 10, wireType 0 =*/80).int32(message.trafficModel);
                            if (message.arrivalTime != null && Object.hasOwnProperty.call(message, "arrivalTime"))
                                $root.google.protobuf.Timestamp.encode(message.arrivalTime, writer.uint32(/* id 11, wireType 2 =*/90).fork()).ldelim();
                            if (message.transitPreferences != null && Object.hasOwnProperty.call(message, "transitPreferences"))
                                $root.google.maps.routing.v2.TransitPreferences.encode(message.transitPreferences, writer.uint32(/* id 12, wireType 2 =*/98).fork()).ldelim();
                            return writer;
                        };
    
                        /**
                         * Encodes the specified ComputeRouteMatrixRequest message, length delimited. Does not implicitly {@link google.maps.routing.v2.ComputeRouteMatrixRequest.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.maps.routing.v2.ComputeRouteMatrixRequest
                         * @static
                         * @param {google.maps.routing.v2.IComputeRouteMatrixRequest} message ComputeRouteMatrixRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        ComputeRouteMatrixRequest.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a ComputeRouteMatrixRequest message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.maps.routing.v2.ComputeRouteMatrixRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.maps.routing.v2.ComputeRouteMatrixRequest} ComputeRouteMatrixRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        ComputeRouteMatrixRequest.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.maps.routing.v2.ComputeRouteMatrixRequest();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        if (!(message.origins && message.origins.length))
                                            message.origins = [];
                                        message.origins.push($root.google.maps.routing.v2.RouteMatrixOrigin.decode(reader, reader.uint32()));
                                        break;
                                    }
                                case 2: {
                                        if (!(message.destinations && message.destinations.length))
                                            message.destinations = [];
                                        message.destinations.push($root.google.maps.routing.v2.RouteMatrixDestination.decode(reader, reader.uint32()));
                                        break;
                                    }
                                case 3: {
                                        message.travelMode = reader.int32();
                                        break;
                                    }
                                case 4: {
                                        message.routingPreference = reader.int32();
                                        break;
                                    }
                                case 5: {
                                        message.departureTime = $root.google.protobuf.Timestamp.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 11: {
                                        message.arrivalTime = $root.google.protobuf.Timestamp.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 6: {
                                        message.languageCode = reader.string();
                                        break;
                                    }
                                case 9: {
                                        message.regionCode = reader.string();
                                        break;
                                    }
                                case 8: {
                                        if (!(message.extraComputations && message.extraComputations.length))
                                            message.extraComputations = [];
                                        if ((tag & 7) === 2) {
                                            var end2 = reader.uint32() + reader.pos;
                                            while (reader.pos < end2)
                                                message.extraComputations.push(reader.int32());
                                        } else
                                            message.extraComputations.push(reader.int32());
                                        break;
                                    }
                                case 10: {
                                        message.trafficModel = reader.int32();
                                        break;
                                    }
                                case 12: {
                                        message.transitPreferences = $root.google.maps.routing.v2.TransitPreferences.decode(reader, reader.uint32());
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a ComputeRouteMatrixRequest message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.maps.routing.v2.ComputeRouteMatrixRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.maps.routing.v2.ComputeRouteMatrixRequest} ComputeRouteMatrixRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        ComputeRouteMatrixRequest.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a ComputeRouteMatrixRequest message.
                         * @function verify
                         * @memberof google.maps.routing.v2.ComputeRouteMatrixRequest
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        ComputeRouteMatrixRequest.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.origins != null && message.hasOwnProperty("origins")) {
                                if (!Array.isArray(message.origins))
                                    return "origins: array expected";
                                for (var i = 0; i < message.origins.length; ++i) {
                                    var error = $root.google.maps.routing.v2.RouteMatrixOrigin.verify(message.origins[i]);
                                    if (error)
                                        return "origins." + error;
                                }
                            }
                            if (message.destinations != null && message.hasOwnProperty("destinations")) {
                                if (!Array.isArray(message.destinations))
                                    return "destinations: array expected";
                                for (var i = 0; i < message.destinations.length; ++i) {
                                    var error = $root.google.maps.routing.v2.RouteMatrixDestination.verify(message.destinations[i]);
                                    if (error)
                                        return "destinations." + error;
                                }
                            }
                            if (message.travelMode != null && message.hasOwnProperty("travelMode"))
                                switch (message.travelMode) {
                                default:
                                    return "travelMode: enum value expected";
                                case 0:
                                case 1:
                                case 2:
                                case 3:
                                case 4:
                                case 7:
                                    break;
                                }
                            if (message.routingPreference != null && message.hasOwnProperty("routingPreference"))
                                switch (message.routingPreference) {
                                default:
                                    return "routingPreference: enum value expected";
                                case 0:
                                case 1:
                                case 2:
                                case 3:
                                    break;
                                }
                            if (message.departureTime != null && message.hasOwnProperty("departureTime")) {
                                var error = $root.google.protobuf.Timestamp.verify(message.departureTime);
                                if (error)
                                    return "departureTime." + error;
                            }
                            if (message.arrivalTime != null && message.hasOwnProperty("arrivalTime")) {
                                var error = $root.google.protobuf.Timestamp.verify(message.arrivalTime);
                                if (error)
                                    return "arrivalTime." + error;
                            }
                            if (message.languageCode != null && message.hasOwnProperty("languageCode"))
                                if (!$util.isString(message.languageCode))
                                    return "languageCode: string expected";
                            if (message.regionCode != null && message.hasOwnProperty("regionCode"))
                                if (!$util.isString(message.regionCode))
                                    return "regionCode: string expected";
                            if (message.extraComputations != null && message.hasOwnProperty("extraComputations")) {
                                if (!Array.isArray(message.extraComputations))
                                    return "extraComputations: array expected";
                                for (var i = 0; i < message.extraComputations.length; ++i)
                                    switch (message.extraComputations[i]) {
                                    default:
                                        return "extraComputations: enum value[] expected";
                                    case 0:
                                    case 1:
                                        break;
                                    }
                            }
                            if (message.trafficModel != null && message.hasOwnProperty("trafficModel"))
                                switch (message.trafficModel) {
                                default:
                                    return "trafficModel: enum value expected";
                                case 0:
                                case 1:
                                case 2:
                                case 3:
                                    break;
                                }
                            if (message.transitPreferences != null && message.hasOwnProperty("transitPreferences")) {
                                var error = $root.google.maps.routing.v2.TransitPreferences.verify(message.transitPreferences);
                                if (error)
                                    return "transitPreferences." + error;
                            }
                            return null;
                        };
    
                        /**
                         * Creates a ComputeRouteMatrixRequest message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.maps.routing.v2.ComputeRouteMatrixRequest
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.maps.routing.v2.ComputeRouteMatrixRequest} ComputeRouteMatrixRequest
                         */
                        ComputeRouteMatrixRequest.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.maps.routing.v2.ComputeRouteMatrixRequest)
                                return object;
                            var message = new $root.google.maps.routing.v2.ComputeRouteMatrixRequest();
                            if (object.origins) {
                                if (!Array.isArray(object.origins))
                                    throw TypeError(".google.maps.routing.v2.ComputeRouteMatrixRequest.origins: array expected");
                                message.origins = [];
                                for (var i = 0; i < object.origins.length; ++i) {
                                    if (typeof object.origins[i] !== "object")
                                        throw TypeError(".google.maps.routing.v2.ComputeRouteMatrixRequest.origins: object expected");
                                    message.origins[i] = $root.google.maps.routing.v2.RouteMatrixOrigin.fromObject(object.origins[i]);
                                }
                            }
                            if (object.destinations) {
                                if (!Array.isArray(object.destinations))
                                    throw TypeError(".google.maps.routing.v2.ComputeRouteMatrixRequest.destinations: array expected");
                                message.destinations = [];
                                for (var i = 0; i < object.destinations.length; ++i) {
                                    if (typeof object.destinations[i] !== "object")
                                        throw TypeError(".google.maps.routing.v2.ComputeRouteMatrixRequest.destinations: object expected");
                                    message.destinations[i] = $root.google.maps.routing.v2.RouteMatrixDestination.fromObject(object.destinations[i]);
                                }
                            }
                            switch (object.travelMode) {
                            default:
                                if (typeof object.travelMode === "number") {
                                    message.travelMode = object.travelMode;
                                    break;
                                }
                                break;
                            case "TRAVEL_MODE_UNSPECIFIED":
                            case 0:
                                message.travelMode = 0;
                                break;
                            case "DRIVE":
                            case 1:
                                message.travelMode = 1;
                                break;
                            case "BICYCLE":
                            case 2:
                                message.travelMode = 2;
                                break;
                            case "WALK":
                            case 3:
                                message.travelMode = 3;
                                break;
                            case "TWO_WHEELER":
                            case 4:
                                message.travelMode = 4;
                                break;
                            case "TRANSIT":
                            case 7:
                                message.travelMode = 7;
                                break;
                            }
                            switch (object.routingPreference) {
                            default:
                                if (typeof object.routingPreference === "number") {
                                    message.routingPreference = object.routingPreference;
                                    break;
                                }
                                break;
                            case "ROUTING_PREFERENCE_UNSPECIFIED":
                            case 0:
                                message.routingPreference = 0;
                                break;
                            case "TRAFFIC_UNAWARE":
                            case 1:
                                message.routingPreference = 1;
                                break;
                            case "TRAFFIC_AWARE":
                            case 2:
                                message.routingPreference = 2;
                                break;
                            case "TRAFFIC_AWARE_OPTIMAL":
                            case 3:
                                message.routingPreference = 3;
                                break;
                            }
                            if (object.departureTime != null) {
                                if (typeof object.departureTime !== "object")
                                    throw TypeError(".google.maps.routing.v2.ComputeRouteMatrixRequest.departureTime: object expected");
                                message.departureTime = $root.google.protobuf.Timestamp.fromObject(object.departureTime);
                            }
                            if (object.arrivalTime != null) {
                                if (typeof object.arrivalTime !== "object")
                                    throw TypeError(".google.maps.routing.v2.ComputeRouteMatrixRequest.arrivalTime: object expected");
                                message.arrivalTime = $root.google.protobuf.Timestamp.fromObject(object.arrivalTime);
                            }
                            if (object.languageCode != null)
                                message.languageCode = String(object.languageCode);
                            if (object.regionCode != null)
                                message.regionCode = String(object.regionCode);
                            if (object.extraComputations) {
                                if (!Array.isArray(object.extraComputations))
                                    throw TypeError(".google.maps.routing.v2.ComputeRouteMatrixRequest.extraComputations: array expected");
                                message.extraComputations = [];
                                for (var i = 0; i < object.extraComputations.length; ++i)
                                    switch (object.extraComputations[i]) {
                                    default:
                                        if (typeof object.extraComputations[i] === "number") {
                                            message.extraComputations[i] = object.extraComputations[i];
                                            break;
                                        }
                                    case "EXTRA_COMPUTATION_UNSPECIFIED":
                                    case 0:
                                        message.extraComputations[i] = 0;
                                        break;
                                    case "TOLLS":
                                    case 1:
                                        message.extraComputations[i] = 1;
                                        break;
                                    }
                            }
                            switch (object.trafficModel) {
                            default:
                                if (typeof object.trafficModel === "number") {
                                    message.trafficModel = object.trafficModel;
                                    break;
                                }
                                break;
                            case "TRAFFIC_MODEL_UNSPECIFIED":
                            case 0:
                                message.trafficModel = 0;
                                break;
                            case "BEST_GUESS":
                            case 1:
                                message.trafficModel = 1;
                                break;
                            case "PESSIMISTIC":
                            case 2:
                                message.trafficModel = 2;
                                break;
                            case "OPTIMISTIC":
                            case 3:
                                message.trafficModel = 3;
                                break;
                            }
                            if (object.transitPreferences != null) {
                                if (typeof object.transitPreferences !== "object")
                                    throw TypeError(".google.maps.routing.v2.ComputeRouteMatrixRequest.transitPreferences: object expected");
                                message.transitPreferences = $root.google.maps.routing.v2.TransitPreferences.fromObject(object.transitPreferences);
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a ComputeRouteMatrixRequest message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.maps.routing.v2.ComputeRouteMatrixRequest
                         * @static
                         * @param {google.maps.routing.v2.ComputeRouteMatrixRequest} message ComputeRouteMatrixRequest
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        ComputeRouteMatrixRequest.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.arrays || options.defaults) {
                                object.origins = [];
                                object.destinations = [];
                                object.extraComputations = [];
                            }
                            if (options.defaults) {
                                object.travelMode = options.enums === String ? "TRAVEL_MODE_UNSPECIFIED" : 0;
                                object.routingPreference = options.enums === String ? "ROUTING_PREFERENCE_UNSPECIFIED" : 0;
                                object.departureTime = null;
                                object.languageCode = "";
                                object.regionCode = "";
                                object.trafficModel = options.enums === String ? "TRAFFIC_MODEL_UNSPECIFIED" : 0;
                                object.arrivalTime = null;
                                object.transitPreferences = null;
                            }
                            if (message.origins && message.origins.length) {
                                object.origins = [];
                                for (var j = 0; j < message.origins.length; ++j)
                                    object.origins[j] = $root.google.maps.routing.v2.RouteMatrixOrigin.toObject(message.origins[j], options);
                            }
                            if (message.destinations && message.destinations.length) {
                                object.destinations = [];
                                for (var j = 0; j < message.destinations.length; ++j)
                                    object.destinations[j] = $root.google.maps.routing.v2.RouteMatrixDestination.toObject(message.destinations[j], options);
                            }
                            if (message.travelMode != null && message.hasOwnProperty("travelMode"))
                                object.travelMode = options.enums === String ? $root.google.maps.routing.v2.RouteTravelMode[message.travelMode] === undefined ? message.travelMode : $root.google.maps.routing.v2.RouteTravelMode[message.travelMode] : message.travelMode;
                            if (message.routingPreference != null && message.hasOwnProperty("routingPreference"))
                                object.routingPreference = options.enums === String ? $root.google.maps.routing.v2.RoutingPreference[message.routingPreference] === undefined ? message.routingPreference : $root.google.maps.routing.v2.RoutingPreference[message.routingPreference] : message.routingPreference;
                            if (message.departureTime != null && message.hasOwnProperty("departureTime"))
                                object.departureTime = $root.google.protobuf.Timestamp.toObject(message.departureTime, options);
                            if (message.languageCode != null && message.hasOwnProperty("languageCode"))
                                object.languageCode = message.languageCode;
                            if (message.extraComputations && message.extraComputations.length) {
                                object.extraComputations = [];
                                for (var j = 0; j < message.extraComputations.length; ++j)
                                    object.extraComputations[j] = options.enums === String ? $root.google.maps.routing.v2.ComputeRouteMatrixRequest.ExtraComputation[message.extraComputations[j]] === undefined ? message.extraComputations[j] : $root.google.maps.routing.v2.ComputeRouteMatrixRequest.ExtraComputation[message.extraComputations[j]] : message.extraComputations[j];
                            }
                            if (message.regionCode != null && message.hasOwnProperty("regionCode"))
                                object.regionCode = message.regionCode;
                            if (message.trafficModel != null && message.hasOwnProperty("trafficModel"))
                                object.trafficModel = options.enums === String ? $root.google.maps.routing.v2.TrafficModel[message.trafficModel] === undefined ? message.trafficModel : $root.google.maps.routing.v2.TrafficModel[message.trafficModel] : message.trafficModel;
                            if (message.arrivalTime != null && message.hasOwnProperty("arrivalTime"))
                                object.arrivalTime = $root.google.protobuf.Timestamp.toObject(message.arrivalTime, options);
                            if (message.transitPreferences != null && message.hasOwnProperty("transitPreferences"))
                                object.transitPreferences = $root.google.maps.routing.v2.TransitPreferences.toObject(message.transitPreferences, options);
                            return object;
                        };
    
                        /**
                         * Converts this ComputeRouteMatrixRequest to JSON.
                         * @function toJSON
                         * @memberof google.maps.routing.v2.ComputeRouteMatrixRequest
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        ComputeRouteMatrixRequest.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for ComputeRouteMatrixRequest
                         * @function getTypeUrl
                         * @memberof google.maps.routing.v2.ComputeRouteMatrixRequest
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        ComputeRouteMatrixRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.maps.routing.v2.ComputeRouteMatrixRequest";
                        };
    
                        /**
                         * ExtraComputation enum.
                         * @name google.maps.routing.v2.ComputeRouteMatrixRequest.ExtraComputation
                         * @enum {number}
                         * @property {number} EXTRA_COMPUTATION_UNSPECIFIED=0 EXTRA_COMPUTATION_UNSPECIFIED value
                         * @property {number} TOLLS=1 TOLLS value
                         */
                        ComputeRouteMatrixRequest.ExtraComputation = (function() {
                            var valuesById = {}, values = Object.create(valuesById);
                            values[valuesById[0] = "EXTRA_COMPUTATION_UNSPECIFIED"] = 0;
                            values[valuesById[1] = "TOLLS"] = 1;
                            return values;
                        })();
    
                        return ComputeRouteMatrixRequest;
                    })();
    
                    v2.RouteMatrixOrigin = (function() {
    
                        /**
                         * Properties of a RouteMatrixOrigin.
                         * @memberof google.maps.routing.v2
                         * @interface IRouteMatrixOrigin
                         * @property {google.maps.routing.v2.IWaypoint|null} [waypoint] RouteMatrixOrigin waypoint
                         * @property {google.maps.routing.v2.IRouteModifiers|null} [routeModifiers] RouteMatrixOrigin routeModifiers
                         */
    
                        /**
                         * Constructs a new RouteMatrixOrigin.
                         * @memberof google.maps.routing.v2
                         * @classdesc Represents a RouteMatrixOrigin.
                         * @implements IRouteMatrixOrigin
                         * @constructor
                         * @param {google.maps.routing.v2.IRouteMatrixOrigin=} [properties] Properties to set
                         */
                        function RouteMatrixOrigin(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * RouteMatrixOrigin waypoint.
                         * @member {google.maps.routing.v2.IWaypoint|null|undefined} waypoint
                         * @memberof google.maps.routing.v2.RouteMatrixOrigin
                         * @instance
                         */
                        RouteMatrixOrigin.prototype.waypoint = null;
    
                        /**
                         * RouteMatrixOrigin routeModifiers.
                         * @member {google.maps.routing.v2.IRouteModifiers|null|undefined} routeModifiers
                         * @memberof google.maps.routing.v2.RouteMatrixOrigin
                         * @instance
                         */
                        RouteMatrixOrigin.prototype.routeModifiers = null;
    
                        /**
                         * Creates a new RouteMatrixOrigin instance using the specified properties.
                         * @function create
                         * @memberof google.maps.routing.v2.RouteMatrixOrigin
                         * @static
                         * @param {google.maps.routing.v2.IRouteMatrixOrigin=} [properties] Properties to set
                         * @returns {google.maps.routing.v2.RouteMatrixOrigin} RouteMatrixOrigin instance
                         */
                        RouteMatrixOrigin.create = function create(properties) {
                            return new RouteMatrixOrigin(properties);
                        };
    
                        /**
                         * Encodes the specified RouteMatrixOrigin message. Does not implicitly {@link google.maps.routing.v2.RouteMatrixOrigin.verify|verify} messages.
                         * @function encode
                         * @memberof google.maps.routing.v2.RouteMatrixOrigin
                         * @static
                         * @param {google.maps.routing.v2.IRouteMatrixOrigin} message RouteMatrixOrigin message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        RouteMatrixOrigin.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.waypoint != null && Object.hasOwnProperty.call(message, "waypoint"))
                                $root.google.maps.routing.v2.Waypoint.encode(message.waypoint, writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                            if (message.routeModifiers != null && Object.hasOwnProperty.call(message, "routeModifiers"))
                                $root.google.maps.routing.v2.RouteModifiers.encode(message.routeModifiers, writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                            return writer;
                        };
    
                        /**
                         * Encodes the specified RouteMatrixOrigin message, length delimited. Does not implicitly {@link google.maps.routing.v2.RouteMatrixOrigin.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.maps.routing.v2.RouteMatrixOrigin
                         * @static
                         * @param {google.maps.routing.v2.IRouteMatrixOrigin} message RouteMatrixOrigin message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        RouteMatrixOrigin.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a RouteMatrixOrigin message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.maps.routing.v2.RouteMatrixOrigin
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.maps.routing.v2.RouteMatrixOrigin} RouteMatrixOrigin
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        RouteMatrixOrigin.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.maps.routing.v2.RouteMatrixOrigin();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.waypoint = $root.google.maps.routing.v2.Waypoint.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 2: {
                                        message.routeModifiers = $root.google.maps.routing.v2.RouteModifiers.decode(reader, reader.uint32());
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a RouteMatrixOrigin message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.maps.routing.v2.RouteMatrixOrigin
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.maps.routing.v2.RouteMatrixOrigin} RouteMatrixOrigin
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        RouteMatrixOrigin.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a RouteMatrixOrigin message.
                         * @function verify
                         * @memberof google.maps.routing.v2.RouteMatrixOrigin
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        RouteMatrixOrigin.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.waypoint != null && message.hasOwnProperty("waypoint")) {
                                var error = $root.google.maps.routing.v2.Waypoint.verify(message.waypoint);
                                if (error)
                                    return "waypoint." + error;
                            }
                            if (message.routeModifiers != null && message.hasOwnProperty("routeModifiers")) {
                                var error = $root.google.maps.routing.v2.RouteModifiers.verify(message.routeModifiers);
                                if (error)
                                    return "routeModifiers." + error;
                            }
                            return null;
                        };
    
                        /**
                         * Creates a RouteMatrixOrigin message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.maps.routing.v2.RouteMatrixOrigin
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.maps.routing.v2.RouteMatrixOrigin} RouteMatrixOrigin
                         */
                        RouteMatrixOrigin.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.maps.routing.v2.RouteMatrixOrigin)
                                return object;
                            var message = new $root.google.maps.routing.v2.RouteMatrixOrigin();
                            if (object.waypoint != null) {
                                if (typeof object.waypoint !== "object")
                                    throw TypeError(".google.maps.routing.v2.RouteMatrixOrigin.waypoint: object expected");
                                message.waypoint = $root.google.maps.routing.v2.Waypoint.fromObject(object.waypoint);
                            }
                            if (object.routeModifiers != null) {
                                if (typeof object.routeModifiers !== "object")
                                    throw TypeError(".google.maps.routing.v2.RouteMatrixOrigin.routeModifiers: object expected");
                                message.routeModifiers = $root.google.maps.routing.v2.RouteModifiers.fromObject(object.routeModifiers);
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a RouteMatrixOrigin message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.maps.routing.v2.RouteMatrixOrigin
                         * @static
                         * @param {google.maps.routing.v2.RouteMatrixOrigin} message RouteMatrixOrigin
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        RouteMatrixOrigin.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.waypoint = null;
                                object.routeModifiers = null;
                            }
                            if (message.waypoint != null && message.hasOwnProperty("waypoint"))
                                object.waypoint = $root.google.maps.routing.v2.Waypoint.toObject(message.waypoint, options);
                            if (message.routeModifiers != null && message.hasOwnProperty("routeModifiers"))
                                object.routeModifiers = $root.google.maps.routing.v2.RouteModifiers.toObject(message.routeModifiers, options);
                            return object;
                        };
    
                        /**
                         * Converts this RouteMatrixOrigin to JSON.
                         * @function toJSON
                         * @memberof google.maps.routing.v2.RouteMatrixOrigin
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        RouteMatrixOrigin.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for RouteMatrixOrigin
                         * @function getTypeUrl
                         * @memberof google.maps.routing.v2.RouteMatrixOrigin
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        RouteMatrixOrigin.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.maps.routing.v2.RouteMatrixOrigin";
                        };
    
                        return RouteMatrixOrigin;
                    })();
    
                    v2.RouteMatrixDestination = (function() {
    
                        /**
                         * Properties of a RouteMatrixDestination.
                         * @memberof google.maps.routing.v2
                         * @interface IRouteMatrixDestination
                         * @property {google.maps.routing.v2.IWaypoint|null} [waypoint] RouteMatrixDestination waypoint
                         */
    
                        /**
                         * Constructs a new RouteMatrixDestination.
                         * @memberof google.maps.routing.v2
                         * @classdesc Represents a RouteMatrixDestination.
                         * @implements IRouteMatrixDestination
                         * @constructor
                         * @param {google.maps.routing.v2.IRouteMatrixDestination=} [properties] Properties to set
                         */
                        function RouteMatrixDestination(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * RouteMatrixDestination waypoint.
                         * @member {google.maps.routing.v2.IWaypoint|null|undefined} waypoint
                         * @memberof google.maps.routing.v2.RouteMatrixDestination
                         * @instance
                         */
                        RouteMatrixDestination.prototype.waypoint = null;
    
                        /**
                         * Creates a new RouteMatrixDestination instance using the specified properties.
                         * @function create
                         * @memberof google.maps.routing.v2.RouteMatrixDestination
                         * @static
                         * @param {google.maps.routing.v2.IRouteMatrixDestination=} [properties] Properties to set
                         * @returns {google.maps.routing.v2.RouteMatrixDestination} RouteMatrixDestination instance
                         */
                        RouteMatrixDestination.create = function create(properties) {
                            return new RouteMatrixDestination(properties);
                        };
    
                        /**
                         * Encodes the specified RouteMatrixDestination message. Does not implicitly {@link google.maps.routing.v2.RouteMatrixDestination.verify|verify} messages.
                         * @function encode
                         * @memberof google.maps.routing.v2.RouteMatrixDestination
                         * @static
                         * @param {google.maps.routing.v2.IRouteMatrixDestination} message RouteMatrixDestination message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        RouteMatrixDestination.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.waypoint != null && Object.hasOwnProperty.call(message, "waypoint"))
                                $root.google.maps.routing.v2.Waypoint.encode(message.waypoint, writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                            return writer;
                        };
    
                        /**
                         * Encodes the specified RouteMatrixDestination message, length delimited. Does not implicitly {@link google.maps.routing.v2.RouteMatrixDestination.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.maps.routing.v2.RouteMatrixDestination
                         * @static
                         * @param {google.maps.routing.v2.IRouteMatrixDestination} message RouteMatrixDestination message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        RouteMatrixDestination.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a RouteMatrixDestination message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.maps.routing.v2.RouteMatrixDestination
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.maps.routing.v2.RouteMatrixDestination} RouteMatrixDestination
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        RouteMatrixDestination.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.maps.routing.v2.RouteMatrixDestination();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.waypoint = $root.google.maps.routing.v2.Waypoint.decode(reader, reader.uint32());
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a RouteMatrixDestination message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.maps.routing.v2.RouteMatrixDestination
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.maps.routing.v2.RouteMatrixDestination} RouteMatrixDestination
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        RouteMatrixDestination.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a RouteMatrixDestination message.
                         * @function verify
                         * @memberof google.maps.routing.v2.RouteMatrixDestination
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        RouteMatrixDestination.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.waypoint != null && message.hasOwnProperty("waypoint")) {
                                var error = $root.google.maps.routing.v2.Waypoint.verify(message.waypoint);
                                if (error)
                                    return "waypoint." + error;
                            }
                            return null;
                        };
    
                        /**
                         * Creates a RouteMatrixDestination message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.maps.routing.v2.RouteMatrixDestination
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.maps.routing.v2.RouteMatrixDestination} RouteMatrixDestination
                         */
                        RouteMatrixDestination.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.maps.routing.v2.RouteMatrixDestination)
                                return object;
                            var message = new $root.google.maps.routing.v2.RouteMatrixDestination();
                            if (object.waypoint != null) {
                                if (typeof object.waypoint !== "object")
                                    throw TypeError(".google.maps.routing.v2.RouteMatrixDestination.waypoint: object expected");
                                message.waypoint = $root.google.maps.routing.v2.Waypoint.fromObject(object.waypoint);
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a RouteMatrixDestination message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.maps.routing.v2.RouteMatrixDestination
                         * @static
                         * @param {google.maps.routing.v2.RouteMatrixDestination} message RouteMatrixDestination
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        RouteMatrixDestination.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults)
                                object.waypoint = null;
                            if (message.waypoint != null && message.hasOwnProperty("waypoint"))
                                object.waypoint = $root.google.maps.routing.v2.Waypoint.toObject(message.waypoint, options);
                            return object;
                        };
    
                        /**
                         * Converts this RouteMatrixDestination to JSON.
                         * @function toJSON
                         * @memberof google.maps.routing.v2.RouteMatrixDestination
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        RouteMatrixDestination.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for RouteMatrixDestination
                         * @function getTypeUrl
                         * @memberof google.maps.routing.v2.RouteMatrixDestination
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        RouteMatrixDestination.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.maps.routing.v2.RouteMatrixDestination";
                        };
    
                        return RouteMatrixDestination;
                    })();
    
                    v2.RouteMatrixElement = (function() {
    
                        /**
                         * Properties of a RouteMatrixElement.
                         * @memberof google.maps.routing.v2
                         * @interface IRouteMatrixElement
                         * @property {number|null} [originIndex] RouteMatrixElement originIndex
                         * @property {number|null} [destinationIndex] RouteMatrixElement destinationIndex
                         * @property {google.rpc.IStatus|null} [status] RouteMatrixElement status
                         * @property {google.maps.routing.v2.RouteMatrixElementCondition|null} [condition] RouteMatrixElement condition
                         * @property {number|null} [distanceMeters] RouteMatrixElement distanceMeters
                         * @property {google.protobuf.IDuration|null} [duration] RouteMatrixElement duration
                         * @property {google.protobuf.IDuration|null} [staticDuration] RouteMatrixElement staticDuration
                         * @property {google.maps.routing.v2.IRouteTravelAdvisory|null} [travelAdvisory] RouteMatrixElement travelAdvisory
                         * @property {google.maps.routing.v2.IFallbackInfo|null} [fallbackInfo] RouteMatrixElement fallbackInfo
                         * @property {google.maps.routing.v2.RouteMatrixElement.ILocalizedValues|null} [localizedValues] RouteMatrixElement localizedValues
                         */
    
                        /**
                         * Constructs a new RouteMatrixElement.
                         * @memberof google.maps.routing.v2
                         * @classdesc Represents a RouteMatrixElement.
                         * @implements IRouteMatrixElement
                         * @constructor
                         * @param {google.maps.routing.v2.IRouteMatrixElement=} [properties] Properties to set
                         */
                        function RouteMatrixElement(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * RouteMatrixElement originIndex.
                         * @member {number|null|undefined} originIndex
                         * @memberof google.maps.routing.v2.RouteMatrixElement
                         * @instance
                         */
                        RouteMatrixElement.prototype.originIndex = null;
    
                        /**
                         * RouteMatrixElement destinationIndex.
                         * @member {number|null|undefined} destinationIndex
                         * @memberof google.maps.routing.v2.RouteMatrixElement
                         * @instance
                         */
                        RouteMatrixElement.prototype.destinationIndex = null;
    
                        /**
                         * RouteMatrixElement status.
                         * @member {google.rpc.IStatus|null|undefined} status
                         * @memberof google.maps.routing.v2.RouteMatrixElement
                         * @instance
                         */
                        RouteMatrixElement.prototype.status = null;
    
                        /**
                         * RouteMatrixElement condition.
                         * @member {google.maps.routing.v2.RouteMatrixElementCondition} condition
                         * @memberof google.maps.routing.v2.RouteMatrixElement
                         * @instance
                         */
                        RouteMatrixElement.prototype.condition = 0;
    
                        /**
                         * RouteMatrixElement distanceMeters.
                         * @member {number} distanceMeters
                         * @memberof google.maps.routing.v2.RouteMatrixElement
                         * @instance
                         */
                        RouteMatrixElement.prototype.distanceMeters = 0;
    
                        /**
                         * RouteMatrixElement duration.
                         * @member {google.protobuf.IDuration|null|undefined} duration
                         * @memberof google.maps.routing.v2.RouteMatrixElement
                         * @instance
                         */
                        RouteMatrixElement.prototype.duration = null;
    
                        /**
                         * RouteMatrixElement staticDuration.
                         * @member {google.protobuf.IDuration|null|undefined} staticDuration
                         * @memberof google.maps.routing.v2.RouteMatrixElement
                         * @instance
                         */
                        RouteMatrixElement.prototype.staticDuration = null;
    
                        /**
                         * RouteMatrixElement travelAdvisory.
                         * @member {google.maps.routing.v2.IRouteTravelAdvisory|null|undefined} travelAdvisory
                         * @memberof google.maps.routing.v2.RouteMatrixElement
                         * @instance
                         */
                        RouteMatrixElement.prototype.travelAdvisory = null;
    
                        /**
                         * RouteMatrixElement fallbackInfo.
                         * @member {google.maps.routing.v2.IFallbackInfo|null|undefined} fallbackInfo
                         * @memberof google.maps.routing.v2.RouteMatrixElement
                         * @instance
                         */
                        RouteMatrixElement.prototype.fallbackInfo = null;
    
                        /**
                         * RouteMatrixElement localizedValues.
                         * @member {google.maps.routing.v2.RouteMatrixElement.ILocalizedValues|null|undefined} localizedValues
                         * @memberof google.maps.routing.v2.RouteMatrixElement
                         * @instance
                         */
                        RouteMatrixElement.prototype.localizedValues = null;
    
                        // OneOf field names bound to virtual getters and setters
                        var $oneOfFields;
    
                        /**
                         * RouteMatrixElement _originIndex.
                         * @member {"originIndex"|undefined} _originIndex
                         * @memberof google.maps.routing.v2.RouteMatrixElement
                         * @instance
                         */
                        Object.defineProperty(RouteMatrixElement.prototype, "_originIndex", {
                            get: $util.oneOfGetter($oneOfFields = ["originIndex"]),
                            set: $util.oneOfSetter($oneOfFields)
                        });
    
                        /**
                         * RouteMatrixElement _destinationIndex.
                         * @member {"destinationIndex"|undefined} _destinationIndex
                         * @memberof google.maps.routing.v2.RouteMatrixElement
                         * @instance
                         */
                        Object.defineProperty(RouteMatrixElement.prototype, "_destinationIndex", {
                            get: $util.oneOfGetter($oneOfFields = ["destinationIndex"]),
                            set: $util.oneOfSetter($oneOfFields)
                        });
    
                        /**
                         * Creates a new RouteMatrixElement instance using the specified properties.
                         * @function create
                         * @memberof google.maps.routing.v2.RouteMatrixElement
                         * @static
                         * @param {google.maps.routing.v2.IRouteMatrixElement=} [properties] Properties to set
                         * @returns {google.maps.routing.v2.RouteMatrixElement} RouteMatrixElement instance
                         */
                        RouteMatrixElement.create = function create(properties) {
                            return new RouteMatrixElement(properties);
                        };
    
                        /**
                         * Encodes the specified RouteMatrixElement message. Does not implicitly {@link google.maps.routing.v2.RouteMatrixElement.verify|verify} messages.
                         * @function encode
                         * @memberof google.maps.routing.v2.RouteMatrixElement
                         * @static
                         * @param {google.maps.routing.v2.IRouteMatrixElement} message RouteMatrixElement message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        RouteMatrixElement.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.originIndex != null && Object.hasOwnProperty.call(message, "originIndex"))
                                writer.uint32(/* id 1, wireType 0 =*/8).int32(message.originIndex);
                            if (message.destinationIndex != null && Object.hasOwnProperty.call(message, "destinationIndex"))
                                writer.uint32(/* id 2, wireType 0 =*/16).int32(message.destinationIndex);
                            if (message.status != null && Object.hasOwnProperty.call(message, "status"))
                                $root.google.rpc.Status.encode(message.status, writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();
                            if (message.distanceMeters != null && Object.hasOwnProperty.call(message, "distanceMeters"))
                                writer.uint32(/* id 4, wireType 0 =*/32).int32(message.distanceMeters);
                            if (message.duration != null && Object.hasOwnProperty.call(message, "duration"))
                                $root.google.protobuf.Duration.encode(message.duration, writer.uint32(/* id 5, wireType 2 =*/42).fork()).ldelim();
                            if (message.staticDuration != null && Object.hasOwnProperty.call(message, "staticDuration"))
                                $root.google.protobuf.Duration.encode(message.staticDuration, writer.uint32(/* id 6, wireType 2 =*/50).fork()).ldelim();
                            if (message.travelAdvisory != null && Object.hasOwnProperty.call(message, "travelAdvisory"))
                                $root.google.maps.routing.v2.RouteTravelAdvisory.encode(message.travelAdvisory, writer.uint32(/* id 7, wireType 2 =*/58).fork()).ldelim();
                            if (message.fallbackInfo != null && Object.hasOwnProperty.call(message, "fallbackInfo"))
                                $root.google.maps.routing.v2.FallbackInfo.encode(message.fallbackInfo, writer.uint32(/* id 8, wireType 2 =*/66).fork()).ldelim();
                            if (message.condition != null && Object.hasOwnProperty.call(message, "condition"))
                                writer.uint32(/* id 9, wireType 0 =*/72).int32(message.condition);
                            if (message.localizedValues != null && Object.hasOwnProperty.call(message, "localizedValues"))
                                $root.google.maps.routing.v2.RouteMatrixElement.LocalizedValues.encode(message.localizedValues, writer.uint32(/* id 10, wireType 2 =*/82).fork()).ldelim();
                            return writer;
                        };
    
                        /**
                         * Encodes the specified RouteMatrixElement message, length delimited. Does not implicitly {@link google.maps.routing.v2.RouteMatrixElement.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.maps.routing.v2.RouteMatrixElement
                         * @static
                         * @param {google.maps.routing.v2.IRouteMatrixElement} message RouteMatrixElement message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        RouteMatrixElement.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a RouteMatrixElement message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.maps.routing.v2.RouteMatrixElement
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.maps.routing.v2.RouteMatrixElement} RouteMatrixElement
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        RouteMatrixElement.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.maps.routing.v2.RouteMatrixElement();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.originIndex = reader.int32();
                                        break;
                                    }
                                case 2: {
                                        message.destinationIndex = reader.int32();
                                        break;
                                    }
                                case 3: {
                                        message.status = $root.google.rpc.Status.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 9: {
                                        message.condition = reader.int32();
                                        break;
                                    }
                                case 4: {
                                        message.distanceMeters = reader.int32();
                                        break;
                                    }
                                case 5: {
                                        message.duration = $root.google.protobuf.Duration.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 6: {
                                        message.staticDuration = $root.google.protobuf.Duration.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 7: {
                                        message.travelAdvisory = $root.google.maps.routing.v2.RouteTravelAdvisory.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 8: {
                                        message.fallbackInfo = $root.google.maps.routing.v2.FallbackInfo.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 10: {
                                        message.localizedValues = $root.google.maps.routing.v2.RouteMatrixElement.LocalizedValues.decode(reader, reader.uint32());
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a RouteMatrixElement message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.maps.routing.v2.RouteMatrixElement
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.maps.routing.v2.RouteMatrixElement} RouteMatrixElement
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        RouteMatrixElement.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a RouteMatrixElement message.
                         * @function verify
                         * @memberof google.maps.routing.v2.RouteMatrixElement
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        RouteMatrixElement.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            var properties = {};
                            if (message.originIndex != null && message.hasOwnProperty("originIndex")) {
                                properties._originIndex = 1;
                                if (!$util.isInteger(message.originIndex))
                                    return "originIndex: integer expected";
                            }
                            if (message.destinationIndex != null && message.hasOwnProperty("destinationIndex")) {
                                properties._destinationIndex = 1;
                                if (!$util.isInteger(message.destinationIndex))
                                    return "destinationIndex: integer expected";
                            }
                            if (message.status != null && message.hasOwnProperty("status")) {
                                var error = $root.google.rpc.Status.verify(message.status);
                                if (error)
                                    return "status." + error;
                            }
                            if (message.condition != null && message.hasOwnProperty("condition"))
                                switch (message.condition) {
                                default:
                                    return "condition: enum value expected";
                                case 0:
                                case 1:
                                case 2:
                                    break;
                                }
                            if (message.distanceMeters != null && message.hasOwnProperty("distanceMeters"))
                                if (!$util.isInteger(message.distanceMeters))
                                    return "distanceMeters: integer expected";
                            if (message.duration != null && message.hasOwnProperty("duration")) {
                                var error = $root.google.protobuf.Duration.verify(message.duration);
                                if (error)
                                    return "duration." + error;
                            }
                            if (message.staticDuration != null && message.hasOwnProperty("staticDuration")) {
                                var error = $root.google.protobuf.Duration.verify(message.staticDuration);
                                if (error)
                                    return "staticDuration." + error;
                            }
                            if (message.travelAdvisory != null && message.hasOwnProperty("travelAdvisory")) {
                                var error = $root.google.maps.routing.v2.RouteTravelAdvisory.verify(message.travelAdvisory);
                                if (error)
                                    return "travelAdvisory." + error;
                            }
                            if (message.fallbackInfo != null && message.hasOwnProperty("fallbackInfo")) {
                                var error = $root.google.maps.routing.v2.FallbackInfo.verify(message.fallbackInfo);
                                if (error)
                                    return "fallbackInfo." + error;
                            }
                            if (message.localizedValues != null && message.hasOwnProperty("localizedValues")) {
                                var error = $root.google.maps.routing.v2.RouteMatrixElement.LocalizedValues.verify(message.localizedValues);
                                if (error)
                                    return "localizedValues." + error;
                            }
                            return null;
                        };
    
                        /**
                         * Creates a RouteMatrixElement message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.maps.routing.v2.RouteMatrixElement
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.maps.routing.v2.RouteMatrixElement} RouteMatrixElement
                         */
                        RouteMatrixElement.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.maps.routing.v2.RouteMatrixElement)
                                return object;
                            var message = new $root.google.maps.routing.v2.RouteMatrixElement();
                            if (object.originIndex != null)
                                message.originIndex = object.originIndex | 0;
                            if (object.destinationIndex != null)
                                message.destinationIndex = object.destinationIndex | 0;
                            if (object.status != null) {
                                if (typeof object.status !== "object")
                                    throw TypeError(".google.maps.routing.v2.RouteMatrixElement.status: object expected");
                                message.status = $root.google.rpc.Status.fromObject(object.status);
                            }
                            switch (object.condition) {
                            default:
                                if (typeof object.condition === "number") {
                                    message.condition = object.condition;
                                    break;
                                }
                                break;
                            case "ROUTE_MATRIX_ELEMENT_CONDITION_UNSPECIFIED":
                            case 0:
                                message.condition = 0;
                                break;
                            case "ROUTE_EXISTS":
                            case 1:
                                message.condition = 1;
                                break;
                            case "ROUTE_NOT_FOUND":
                            case 2:
                                message.condition = 2;
                                break;
                            }
                            if (object.distanceMeters != null)
                                message.distanceMeters = object.distanceMeters | 0;
                            if (object.duration != null) {
                                if (typeof object.duration !== "object")
                                    throw TypeError(".google.maps.routing.v2.RouteMatrixElement.duration: object expected");
                                message.duration = $root.google.protobuf.Duration.fromObject(object.duration);
                            }
                            if (object.staticDuration != null) {
                                if (typeof object.staticDuration !== "object")
                                    throw TypeError(".google.maps.routing.v2.RouteMatrixElement.staticDuration: object expected");
                                message.staticDuration = $root.google.protobuf.Duration.fromObject(object.staticDuration);
                            }
                            if (object.travelAdvisory != null) {
                                if (typeof object.travelAdvisory !== "object")
                                    throw TypeError(".google.maps.routing.v2.RouteMatrixElement.travelAdvisory: object expected");
                                message.travelAdvisory = $root.google.maps.routing.v2.RouteTravelAdvisory.fromObject(object.travelAdvisory);
                            }
                            if (object.fallbackInfo != null) {
                                if (typeof object.fallbackInfo !== "object")
                                    throw TypeError(".google.maps.routing.v2.RouteMatrixElement.fallbackInfo: object expected");
                                message.fallbackInfo = $root.google.maps.routing.v2.FallbackInfo.fromObject(object.fallbackInfo);
                            }
                            if (object.localizedValues != null) {
                                if (typeof object.localizedValues !== "object")
                                    throw TypeError(".google.maps.routing.v2.RouteMatrixElement.localizedValues: object expected");
                                message.localizedValues = $root.google.maps.routing.v2.RouteMatrixElement.LocalizedValues.fromObject(object.localizedValues);
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a RouteMatrixElement message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.maps.routing.v2.RouteMatrixElement
                         * @static
                         * @param {google.maps.routing.v2.RouteMatrixElement} message RouteMatrixElement
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        RouteMatrixElement.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.status = null;
                                object.distanceMeters = 0;
                                object.duration = null;
                                object.staticDuration = null;
                                object.travelAdvisory = null;
                                object.fallbackInfo = null;
                                object.condition = options.enums === String ? "ROUTE_MATRIX_ELEMENT_CONDITION_UNSPECIFIED" : 0;
                                object.localizedValues = null;
                            }
                            if (message.originIndex != null && message.hasOwnProperty("originIndex")) {
                                object.originIndex = message.originIndex;
                                if (options.oneofs)
                                    object._originIndex = "originIndex";
                            }
                            if (message.destinationIndex != null && message.hasOwnProperty("destinationIndex")) {
                                object.destinationIndex = message.destinationIndex;
                                if (options.oneofs)
                                    object._destinationIndex = "destinationIndex";
                            }
                            if (message.status != null && message.hasOwnProperty("status"))
                                object.status = $root.google.rpc.Status.toObject(message.status, options);
                            if (message.distanceMeters != null && message.hasOwnProperty("distanceMeters"))
                                object.distanceMeters = message.distanceMeters;
                            if (message.duration != null && message.hasOwnProperty("duration"))
                                object.duration = $root.google.protobuf.Duration.toObject(message.duration, options);
                            if (message.staticDuration != null && message.hasOwnProperty("staticDuration"))
                                object.staticDuration = $root.google.protobuf.Duration.toObject(message.staticDuration, options);
                            if (message.travelAdvisory != null && message.hasOwnProperty("travelAdvisory"))
                                object.travelAdvisory = $root.google.maps.routing.v2.RouteTravelAdvisory.toObject(message.travelAdvisory, options);
                            if (message.fallbackInfo != null && message.hasOwnProperty("fallbackInfo"))
                                object.fallbackInfo = $root.google.maps.routing.v2.FallbackInfo.toObject(message.fallbackInfo, options);
                            if (message.condition != null && message.hasOwnProperty("condition"))
                                object.condition = options.enums === String ? $root.google.maps.routing.v2.RouteMatrixElementCondition[message.condition] === undefined ? message.condition : $root.google.maps.routing.v2.RouteMatrixElementCondition[message.condition] : message.condition;
                            if (message.localizedValues != null && message.hasOwnProperty("localizedValues"))
                                object.localizedValues = $root.google.maps.routing.v2.RouteMatrixElement.LocalizedValues.toObject(message.localizedValues, options);
                            return object;
                        };
    
                        /**
                         * Converts this RouteMatrixElement to JSON.
                         * @function toJSON
                         * @memberof google.maps.routing.v2.RouteMatrixElement
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        RouteMatrixElement.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for RouteMatrixElement
                         * @function getTypeUrl
                         * @memberof google.maps.routing.v2.RouteMatrixElement
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        RouteMatrixElement.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.maps.routing.v2.RouteMatrixElement";
                        };
    
                        RouteMatrixElement.LocalizedValues = (function() {
    
                            /**
                             * Properties of a LocalizedValues.
                             * @memberof google.maps.routing.v2.RouteMatrixElement
                             * @interface ILocalizedValues
                             * @property {google.type.ILocalizedText|null} [distance] LocalizedValues distance
                             * @property {google.type.ILocalizedText|null} [duration] LocalizedValues duration
                             * @property {google.type.ILocalizedText|null} [staticDuration] LocalizedValues staticDuration
                             * @property {google.type.ILocalizedText|null} [transitFare] LocalizedValues transitFare
                             */
    
                            /**
                             * Constructs a new LocalizedValues.
                             * @memberof google.maps.routing.v2.RouteMatrixElement
                             * @classdesc Represents a LocalizedValues.
                             * @implements ILocalizedValues
                             * @constructor
                             * @param {google.maps.routing.v2.RouteMatrixElement.ILocalizedValues=} [properties] Properties to set
                             */
                            function LocalizedValues(properties) {
                                if (properties)
                                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                        if (properties[keys[i]] != null)
                                            this[keys[i]] = properties[keys[i]];
                            }
    
                            /**
                             * LocalizedValues distance.
                             * @member {google.type.ILocalizedText|null|undefined} distance
                             * @memberof google.maps.routing.v2.RouteMatrixElement.LocalizedValues
                             * @instance
                             */
                            LocalizedValues.prototype.distance = null;
    
                            /**
                             * LocalizedValues duration.
                             * @member {google.type.ILocalizedText|null|undefined} duration
                             * @memberof google.maps.routing.v2.RouteMatrixElement.LocalizedValues
                             * @instance
                             */
                            LocalizedValues.prototype.duration = null;
    
                            /**
                             * LocalizedValues staticDuration.
                             * @member {google.type.ILocalizedText|null|undefined} staticDuration
                             * @memberof google.maps.routing.v2.RouteMatrixElement.LocalizedValues
                             * @instance
                             */
                            LocalizedValues.prototype.staticDuration = null;
    
                            /**
                             * LocalizedValues transitFare.
                             * @member {google.type.ILocalizedText|null|undefined} transitFare
                             * @memberof google.maps.routing.v2.RouteMatrixElement.LocalizedValues
                             * @instance
                             */
                            LocalizedValues.prototype.transitFare = null;
    
                            /**
                             * Creates a new LocalizedValues instance using the specified properties.
                             * @function create
                             * @memberof google.maps.routing.v2.RouteMatrixElement.LocalizedValues
                             * @static
                             * @param {google.maps.routing.v2.RouteMatrixElement.ILocalizedValues=} [properties] Properties to set
                             * @returns {google.maps.routing.v2.RouteMatrixElement.LocalizedValues} LocalizedValues instance
                             */
                            LocalizedValues.create = function create(properties) {
                                return new LocalizedValues(properties);
                            };
    
                            /**
                             * Encodes the specified LocalizedValues message. Does not implicitly {@link google.maps.routing.v2.RouteMatrixElement.LocalizedValues.verify|verify} messages.
                             * @function encode
                             * @memberof google.maps.routing.v2.RouteMatrixElement.LocalizedValues
                             * @static
                             * @param {google.maps.routing.v2.RouteMatrixElement.ILocalizedValues} message LocalizedValues message or plain object to encode
                             * @param {$protobuf.Writer} [writer] Writer to encode to
                             * @returns {$protobuf.Writer} Writer
                             */
                            LocalizedValues.encode = function encode(message, writer) {
                                if (!writer)
                                    writer = $Writer.create();
                                if (message.distance != null && Object.hasOwnProperty.call(message, "distance"))
                                    $root.google.type.LocalizedText.encode(message.distance, writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                                if (message.duration != null && Object.hasOwnProperty.call(message, "duration"))
                                    $root.google.type.LocalizedText.encode(message.duration, writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                                if (message.staticDuration != null && Object.hasOwnProperty.call(message, "staticDuration"))
                                    $root.google.type.LocalizedText.encode(message.staticDuration, writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();
                                if (message.transitFare != null && Object.hasOwnProperty.call(message, "transitFare"))
                                    $root.google.type.LocalizedText.encode(message.transitFare, writer.uint32(/* id 4, wireType 2 =*/34).fork()).ldelim();
                                return writer;
                            };
    
                            /**
                             * Encodes the specified LocalizedValues message, length delimited. Does not implicitly {@link google.maps.routing.v2.RouteMatrixElement.LocalizedValues.verify|verify} messages.
                             * @function encodeDelimited
                             * @memberof google.maps.routing.v2.RouteMatrixElement.LocalizedValues
                             * @static
                             * @param {google.maps.routing.v2.RouteMatrixElement.ILocalizedValues} message LocalizedValues message or plain object to encode
                             * @param {$protobuf.Writer} [writer] Writer to encode to
                             * @returns {$protobuf.Writer} Writer
                             */
                            LocalizedValues.encodeDelimited = function encodeDelimited(message, writer) {
                                return this.encode(message, writer).ldelim();
                            };
    
                            /**
                             * Decodes a LocalizedValues message from the specified reader or buffer.
                             * @function decode
                             * @memberof google.maps.routing.v2.RouteMatrixElement.LocalizedValues
                             * @static
                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                             * @param {number} [length] Message length if known beforehand
                             * @returns {google.maps.routing.v2.RouteMatrixElement.LocalizedValues} LocalizedValues
                             * @throws {Error} If the payload is not a reader or valid buffer
                             * @throws {$protobuf.util.ProtocolError} If required fields are missing
                             */
                            LocalizedValues.decode = function decode(reader, length) {
                                if (!(reader instanceof $Reader))
                                    reader = $Reader.create(reader);
                                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.maps.routing.v2.RouteMatrixElement.LocalizedValues();
                                while (reader.pos < end) {
                                    var tag = reader.uint32();
                                    switch (tag >>> 3) {
                                    case 1: {
                                            message.distance = $root.google.type.LocalizedText.decode(reader, reader.uint32());
                                            break;
                                        }
                                    case 2: {
                                            message.duration = $root.google.type.LocalizedText.decode(reader, reader.uint32());
                                            break;
                                        }
                                    case 3: {
                                            message.staticDuration = $root.google.type.LocalizedText.decode(reader, reader.uint32());
                                            break;
                                        }
                                    case 4: {
                                            message.transitFare = $root.google.type.LocalizedText.decode(reader, reader.uint32());
                                            break;
                                        }
                                    default:
                                        reader.skipType(tag & 7);
                                        break;
                                    }
                                }
                                return message;
                            };
    
                            /**
                             * Decodes a LocalizedValues message from the specified reader or buffer, length delimited.
                             * @function decodeDelimited
                             * @memberof google.maps.routing.v2.RouteMatrixElement.LocalizedValues
                             * @static
                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                             * @returns {google.maps.routing.v2.RouteMatrixElement.LocalizedValues} LocalizedValues
                             * @throws {Error} If the payload is not a reader or valid buffer
                             * @throws {$protobuf.util.ProtocolError} If required fields are missing
                             */
                            LocalizedValues.decodeDelimited = function decodeDelimited(reader) {
                                if (!(reader instanceof $Reader))
                                    reader = new $Reader(reader);
                                return this.decode(reader, reader.uint32());
                            };
    
                            /**
                             * Verifies a LocalizedValues message.
                             * @function verify
                             * @memberof google.maps.routing.v2.RouteMatrixElement.LocalizedValues
                             * @static
                             * @param {Object.<string,*>} message Plain object to verify
                             * @returns {string|null} `null` if valid, otherwise the reason why it is not
                             */
                            LocalizedValues.verify = function verify(message) {
                                if (typeof message !== "object" || message === null)
                                    return "object expected";
                                if (message.distance != null && message.hasOwnProperty("distance")) {
                                    var error = $root.google.type.LocalizedText.verify(message.distance);
                                    if (error)
                                        return "distance." + error;
                                }
                                if (message.duration != null && message.hasOwnProperty("duration")) {
                                    var error = $root.google.type.LocalizedText.verify(message.duration);
                                    if (error)
                                        return "duration." + error;
                                }
                                if (message.staticDuration != null && message.hasOwnProperty("staticDuration")) {
                                    var error = $root.google.type.LocalizedText.verify(message.staticDuration);
                                    if (error)
                                        return "staticDuration." + error;
                                }
                                if (message.transitFare != null && message.hasOwnProperty("transitFare")) {
                                    var error = $root.google.type.LocalizedText.verify(message.transitFare);
                                    if (error)
                                        return "transitFare." + error;
                                }
                                return null;
                            };
    
                            /**
                             * Creates a LocalizedValues message from a plain object. Also converts values to their respective internal types.
                             * @function fromObject
                             * @memberof google.maps.routing.v2.RouteMatrixElement.LocalizedValues
                             * @static
                             * @param {Object.<string,*>} object Plain object
                             * @returns {google.maps.routing.v2.RouteMatrixElement.LocalizedValues} LocalizedValues
                             */
                            LocalizedValues.fromObject = function fromObject(object) {
                                if (object instanceof $root.google.maps.routing.v2.RouteMatrixElement.LocalizedValues)
                                    return object;
                                var message = new $root.google.maps.routing.v2.RouteMatrixElement.LocalizedValues();
                                if (object.distance != null) {
                                    if (typeof object.distance !== "object")
                                        throw TypeError(".google.maps.routing.v2.RouteMatrixElement.LocalizedValues.distance: object expected");
                                    message.distance = $root.google.type.LocalizedText.fromObject(object.distance);
                                }
                                if (object.duration != null) {
                                    if (typeof object.duration !== "object")
                                        throw TypeError(".google.maps.routing.v2.RouteMatrixElement.LocalizedValues.duration: object expected");
                                    message.duration = $root.google.type.LocalizedText.fromObject(object.duration);
                                }
                                if (object.staticDuration != null) {
                                    if (typeof object.staticDuration !== "object")
                                        throw TypeError(".google.maps.routing.v2.RouteMatrixElement.LocalizedValues.staticDuration: object expected");
                                    message.staticDuration = $root.google.type.LocalizedText.fromObject(object.staticDuration);
                                }
                                if (object.transitFare != null) {
                                    if (typeof object.transitFare !== "object")
                                        throw TypeError(".google.maps.routing.v2.RouteMatrixElement.LocalizedValues.transitFare: object expected");
                                    message.transitFare = $root.google.type.LocalizedText.fromObject(object.transitFare);
                                }
                                return message;
                            };
    
                            /**
                             * Creates a plain object from a LocalizedValues message. Also converts values to other types if specified.
                             * @function toObject
                             * @memberof google.maps.routing.v2.RouteMatrixElement.LocalizedValues
                             * @static
                             * @param {google.maps.routing.v2.RouteMatrixElement.LocalizedValues} message LocalizedValues
                             * @param {$protobuf.IConversionOptions} [options] Conversion options
                             * @returns {Object.<string,*>} Plain object
                             */
                            LocalizedValues.toObject = function toObject(message, options) {
                                if (!options)
                                    options = {};
                                var object = {};
                                if (options.defaults) {
                                    object.distance = null;
                                    object.duration = null;
                                    object.staticDuration = null;
                                    object.transitFare = null;
                                }
                                if (message.distance != null && message.hasOwnProperty("distance"))
                                    object.distance = $root.google.type.LocalizedText.toObject(message.distance, options);
                                if (message.duration != null && message.hasOwnProperty("duration"))
                                    object.duration = $root.google.type.LocalizedText.toObject(message.duration, options);
                                if (message.staticDuration != null && message.hasOwnProperty("staticDuration"))
                                    object.staticDuration = $root.google.type.LocalizedText.toObject(message.staticDuration, options);
                                if (message.transitFare != null && message.hasOwnProperty("transitFare"))
                                    object.transitFare = $root.google.type.LocalizedText.toObject(message.transitFare, options);
                                return object;
                            };
    
                            /**
                             * Converts this LocalizedValues to JSON.
                             * @function toJSON
                             * @memberof google.maps.routing.v2.RouteMatrixElement.LocalizedValues
                             * @instance
                             * @returns {Object.<string,*>} JSON object
                             */
                            LocalizedValues.prototype.toJSON = function toJSON() {
                                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                            };
    
                            /**
                             * Gets the default type url for LocalizedValues
                             * @function getTypeUrl
                             * @memberof google.maps.routing.v2.RouteMatrixElement.LocalizedValues
                             * @static
                             * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                             * @returns {string} The default type url
                             */
                            LocalizedValues.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                                if (typeUrlPrefix === undefined) {
                                    typeUrlPrefix = "type.googleapis.com";
                                }
                                return typeUrlPrefix + "/google.maps.routing.v2.RouteMatrixElement.LocalizedValues";
                            };
    
                            return LocalizedValues;
                        })();
    
                        return RouteMatrixElement;
                    })();
    
                    /**
                     * RouteMatrixElementCondition enum.
                     * @name google.maps.routing.v2.RouteMatrixElementCondition
                     * @enum {number}
                     * @property {number} ROUTE_MATRIX_ELEMENT_CONDITION_UNSPECIFIED=0 ROUTE_MATRIX_ELEMENT_CONDITION_UNSPECIFIED value
                     * @property {number} ROUTE_EXISTS=1 ROUTE_EXISTS value
                     * @property {number} ROUTE_NOT_FOUND=2 ROUTE_NOT_FOUND value
                     */
                    v2.RouteMatrixElementCondition = (function() {
                        var valuesById = {}, values = Object.create(valuesById);
                        values[valuesById[0] = "ROUTE_MATRIX_ELEMENT_CONDITION_UNSPECIFIED"] = 0;
                        values[valuesById[1] = "ROUTE_EXISTS"] = 1;
                        values[valuesById[2] = "ROUTE_NOT_FOUND"] = 2;
                        return values;
                    })();
    
                    /**
                     * RoutingPreference enum.
                     * @name google.maps.routing.v2.RoutingPreference
                     * @enum {number}
                     * @property {number} ROUTING_PREFERENCE_UNSPECIFIED=0 ROUTING_PREFERENCE_UNSPECIFIED value
                     * @property {number} TRAFFIC_UNAWARE=1 TRAFFIC_UNAWARE value
                     * @property {number} TRAFFIC_AWARE=2 TRAFFIC_AWARE value
                     * @property {number} TRAFFIC_AWARE_OPTIMAL=3 TRAFFIC_AWARE_OPTIMAL value
                     */
                    v2.RoutingPreference = (function() {
                        var valuesById = {}, values = Object.create(valuesById);
                        values[valuesById[0] = "ROUTING_PREFERENCE_UNSPECIFIED"] = 0;
                        values[valuesById[1] = "TRAFFIC_UNAWARE"] = 1;
                        values[valuesById[2] = "TRAFFIC_AWARE"] = 2;
                        values[valuesById[3] = "TRAFFIC_AWARE_OPTIMAL"] = 3;
                        return values;
                    })();
    
                    /**
                     * TrafficModel enum.
                     * @name google.maps.routing.v2.TrafficModel
                     * @enum {number}
                     * @property {number} TRAFFIC_MODEL_UNSPECIFIED=0 TRAFFIC_MODEL_UNSPECIFIED value
                     * @property {number} BEST_GUESS=1 BEST_GUESS value
                     * @property {number} PESSIMISTIC=2 PESSIMISTIC value
                     * @property {number} OPTIMISTIC=3 OPTIMISTIC value
                     */
                    v2.TrafficModel = (function() {
                        var valuesById = {}, values = Object.create(valuesById);
                        values[valuesById[0] = "TRAFFIC_MODEL_UNSPECIFIED"] = 0;
                        values[valuesById[1] = "BEST_GUESS"] = 1;
                        values[valuesById[2] = "PESSIMISTIC"] = 2;
                        values[valuesById[3] = "OPTIMISTIC"] = 3;
                        return values;
                    })();
    
                    v2.TransitPreferences = (function() {
    
                        /**
                         * Properties of a TransitPreferences.
                         * @memberof google.maps.routing.v2
                         * @interface ITransitPreferences
                         * @property {Array.<google.maps.routing.v2.TransitPreferences.TransitTravelMode>|null} [allowedTravelModes] TransitPreferences allowedTravelModes
                         * @property {google.maps.routing.v2.TransitPreferences.TransitRoutingPreference|null} [routingPreference] TransitPreferences routingPreference
                         */
    
                        /**
                         * Constructs a new TransitPreferences.
                         * @memberof google.maps.routing.v2
                         * @classdesc Represents a TransitPreferences.
                         * @implements ITransitPreferences
                         * @constructor
                         * @param {google.maps.routing.v2.ITransitPreferences=} [properties] Properties to set
                         */
                        function TransitPreferences(properties) {
                            this.allowedTravelModes = [];
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * TransitPreferences allowedTravelModes.
                         * @member {Array.<google.maps.routing.v2.TransitPreferences.TransitTravelMode>} allowedTravelModes
                         * @memberof google.maps.routing.v2.TransitPreferences
                         * @instance
                         */
                        TransitPreferences.prototype.allowedTravelModes = $util.emptyArray;
    
                        /**
                         * TransitPreferences routingPreference.
                         * @member {google.maps.routing.v2.TransitPreferences.TransitRoutingPreference} routingPreference
                         * @memberof google.maps.routing.v2.TransitPreferences
                         * @instance
                         */
                        TransitPreferences.prototype.routingPreference = 0;
    
                        /**
                         * Creates a new TransitPreferences instance using the specified properties.
                         * @function create
                         * @memberof google.maps.routing.v2.TransitPreferences
                         * @static
                         * @param {google.maps.routing.v2.ITransitPreferences=} [properties] Properties to set
                         * @returns {google.maps.routing.v2.TransitPreferences} TransitPreferences instance
                         */
                        TransitPreferences.create = function create(properties) {
                            return new TransitPreferences(properties);
                        };
    
                        /**
                         * Encodes the specified TransitPreferences message. Does not implicitly {@link google.maps.routing.v2.TransitPreferences.verify|verify} messages.
                         * @function encode
                         * @memberof google.maps.routing.v2.TransitPreferences
                         * @static
                         * @param {google.maps.routing.v2.ITransitPreferences} message TransitPreferences message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        TransitPreferences.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.allowedTravelModes != null && message.allowedTravelModes.length) {
                                writer.uint32(/* id 1, wireType 2 =*/10).fork();
                                for (var i = 0; i < message.allowedTravelModes.length; ++i)
                                    writer.int32(message.allowedTravelModes[i]);
                                writer.ldelim();
                            }
                            if (message.routingPreference != null && Object.hasOwnProperty.call(message, "routingPreference"))
                                writer.uint32(/* id 2, wireType 0 =*/16).int32(message.routingPreference);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified TransitPreferences message, length delimited. Does not implicitly {@link google.maps.routing.v2.TransitPreferences.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.maps.routing.v2.TransitPreferences
                         * @static
                         * @param {google.maps.routing.v2.ITransitPreferences} message TransitPreferences message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        TransitPreferences.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a TransitPreferences message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.maps.routing.v2.TransitPreferences
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.maps.routing.v2.TransitPreferences} TransitPreferences
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        TransitPreferences.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.maps.routing.v2.TransitPreferences();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        if (!(message.allowedTravelModes && message.allowedTravelModes.length))
                                            message.allowedTravelModes = [];
                                        if ((tag & 7) === 2) {
                                            var end2 = reader.uint32() + reader.pos;
                                            while (reader.pos < end2)
                                                message.allowedTravelModes.push(reader.int32());
                                        } else
                                            message.allowedTravelModes.push(reader.int32());
                                        break;
                                    }
                                case 2: {
                                        message.routingPreference = reader.int32();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a TransitPreferences message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.maps.routing.v2.TransitPreferences
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.maps.routing.v2.TransitPreferences} TransitPreferences
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        TransitPreferences.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a TransitPreferences message.
                         * @function verify
                         * @memberof google.maps.routing.v2.TransitPreferences
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        TransitPreferences.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.allowedTravelModes != null && message.hasOwnProperty("allowedTravelModes")) {
                                if (!Array.isArray(message.allowedTravelModes))
                                    return "allowedTravelModes: array expected";
                                for (var i = 0; i < message.allowedTravelModes.length; ++i)
                                    switch (message.allowedTravelModes[i]) {
                                    default:
                                        return "allowedTravelModes: enum value[] expected";
                                    case 0:
                                    case 1:
                                    case 2:
                                    case 3:
                                    case 4:
                                    case 5:
                                        break;
                                    }
                            }
                            if (message.routingPreference != null && message.hasOwnProperty("routingPreference"))
                                switch (message.routingPreference) {
                                default:
                                    return "routingPreference: enum value expected";
                                case 0:
                                case 1:
                                case 2:
                                    break;
                                }
                            return null;
                        };
    
                        /**
                         * Creates a TransitPreferences message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.maps.routing.v2.TransitPreferences
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.maps.routing.v2.TransitPreferences} TransitPreferences
                         */
                        TransitPreferences.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.maps.routing.v2.TransitPreferences)
                                return object;
                            var message = new $root.google.maps.routing.v2.TransitPreferences();
                            if (object.allowedTravelModes) {
                                if (!Array.isArray(object.allowedTravelModes))
                                    throw TypeError(".google.maps.routing.v2.TransitPreferences.allowedTravelModes: array expected");
                                message.allowedTravelModes = [];
                                for (var i = 0; i < object.allowedTravelModes.length; ++i)
                                    switch (object.allowedTravelModes[i]) {
                                    default:
                                        if (typeof object.allowedTravelModes[i] === "number") {
                                            message.allowedTravelModes[i] = object.allowedTravelModes[i];
                                            break;
                                        }
                                    case "TRANSIT_TRAVEL_MODE_UNSPECIFIED":
                                    case 0:
                                        message.allowedTravelModes[i] = 0;
                                        break;
                                    case "BUS":
                                    case 1:
                                        message.allowedTravelModes[i] = 1;
                                        break;
                                    case "SUBWAY":
                                    case 2:
                                        message.allowedTravelModes[i] = 2;
                                        break;
                                    case "TRAIN":
                                    case 3:
                                        message.allowedTravelModes[i] = 3;
                                        break;
                                    case "LIGHT_RAIL":
                                    case 4:
                                        message.allowedTravelModes[i] = 4;
                                        break;
                                    case "RAIL":
                                    case 5:
                                        message.allowedTravelModes[i] = 5;
                                        break;
                                    }
                            }
                            switch (object.routingPreference) {
                            default:
                                if (typeof object.routingPreference === "number") {
                                    message.routingPreference = object.routingPreference;
                                    break;
                                }
                                break;
                            case "TRANSIT_ROUTING_PREFERENCE_UNSPECIFIED":
                            case 0:
                                message.routingPreference = 0;
                                break;
                            case "LESS_WALKING":
                            case 1:
                                message.routingPreference = 1;
                                break;
                            case "FEWER_TRANSFERS":
                            case 2:
                                message.routingPreference = 2;
                                break;
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a TransitPreferences message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.maps.routing.v2.TransitPreferences
                         * @static
                         * @param {google.maps.routing.v2.TransitPreferences} message TransitPreferences
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        TransitPreferences.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.arrays || options.defaults)
                                object.allowedTravelModes = [];
                            if (options.defaults)
                                object.routingPreference = options.enums === String ? "TRANSIT_ROUTING_PREFERENCE_UNSPECIFIED" : 0;
                            if (message.allowedTravelModes && message.allowedTravelModes.length) {
                                object.allowedTravelModes = [];
                                for (var j = 0; j < message.allowedTravelModes.length; ++j)
                                    object.allowedTravelModes[j] = options.enums === String ? $root.google.maps.routing.v2.TransitPreferences.TransitTravelMode[message.allowedTravelModes[j]] === undefined ? message.allowedTravelModes[j] : $root.google.maps.routing.v2.TransitPreferences.TransitTravelMode[message.allowedTravelModes[j]] : message.allowedTravelModes[j];
                            }
                            if (message.routingPreference != null && message.hasOwnProperty("routingPreference"))
                                object.routingPreference = options.enums === String ? $root.google.maps.routing.v2.TransitPreferences.TransitRoutingPreference[message.routingPreference] === undefined ? message.routingPreference : $root.google.maps.routing.v2.TransitPreferences.TransitRoutingPreference[message.routingPreference] : message.routingPreference;
                            return object;
                        };
    
                        /**
                         * Converts this TransitPreferences to JSON.
                         * @function toJSON
                         * @memberof google.maps.routing.v2.TransitPreferences
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        TransitPreferences.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for TransitPreferences
                         * @function getTypeUrl
                         * @memberof google.maps.routing.v2.TransitPreferences
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        TransitPreferences.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.maps.routing.v2.TransitPreferences";
                        };
    
                        /**
                         * TransitTravelMode enum.
                         * @name google.maps.routing.v2.TransitPreferences.TransitTravelMode
                         * @enum {number}
                         * @property {number} TRANSIT_TRAVEL_MODE_UNSPECIFIED=0 TRANSIT_TRAVEL_MODE_UNSPECIFIED value
                         * @property {number} BUS=1 BUS value
                         * @property {number} SUBWAY=2 SUBWAY value
                         * @property {number} TRAIN=3 TRAIN value
                         * @property {number} LIGHT_RAIL=4 LIGHT_RAIL value
                         * @property {number} RAIL=5 RAIL value
                         */
                        TransitPreferences.TransitTravelMode = (function() {
                            var valuesById = {}, values = Object.create(valuesById);
                            values[valuesById[0] = "TRANSIT_TRAVEL_MODE_UNSPECIFIED"] = 0;
                            values[valuesById[1] = "BUS"] = 1;
                            values[valuesById[2] = "SUBWAY"] = 2;
                            values[valuesById[3] = "TRAIN"] = 3;
                            values[valuesById[4] = "LIGHT_RAIL"] = 4;
                            values[valuesById[5] = "RAIL"] = 5;
                            return values;
                        })();
    
                        /**
                         * TransitRoutingPreference enum.
                         * @name google.maps.routing.v2.TransitPreferences.TransitRoutingPreference
                         * @enum {number}
                         * @property {number} TRANSIT_ROUTING_PREFERENCE_UNSPECIFIED=0 TRANSIT_ROUTING_PREFERENCE_UNSPECIFIED value
                         * @property {number} LESS_WALKING=1 LESS_WALKING value
                         * @property {number} FEWER_TRANSFERS=2 FEWER_TRANSFERS value
                         */
                        TransitPreferences.TransitRoutingPreference = (function() {
                            var valuesById = {}, values = Object.create(valuesById);
                            values[valuesById[0] = "TRANSIT_ROUTING_PREFERENCE_UNSPECIFIED"] = 0;
                            values[valuesById[1] = "LESS_WALKING"] = 1;
                            values[valuesById[2] = "FEWER_TRANSFERS"] = 2;
                            return values;
                        })();
    
                        return TransitPreferences;
                    })();
    
                    /**
                     * Units enum.
                     * @name google.maps.routing.v2.Units
                     * @enum {number}
                     * @property {number} UNITS_UNSPECIFIED=0 UNITS_UNSPECIFIED value
                     * @property {number} METRIC=1 METRIC value
                     * @property {number} IMPERIAL=2 IMPERIAL value
                     */
                    v2.Units = (function() {
                        var valuesById = {}, values = Object.create(valuesById);
                        values[valuesById[0] = "UNITS_UNSPECIFIED"] = 0;
                        values[valuesById[1] = "METRIC"] = 1;
                        values[valuesById[2] = "IMPERIAL"] = 2;
                        return values;
                    })();
    
                    v2.Waypoint = (function() {
    
                        /**
                         * Properties of a Waypoint.
                         * @memberof google.maps.routing.v2
                         * @interface IWaypoint
                         * @property {google.maps.routing.v2.ILocation|null} [location] Waypoint location
                         * @property {string|null} [placeId] Waypoint placeId
                         * @property {string|null} [address] Waypoint address
                         * @property {boolean|null} [via] Waypoint via
                         * @property {boolean|null} [vehicleStopover] Waypoint vehicleStopover
                         * @property {boolean|null} [sideOfRoad] Waypoint sideOfRoad
                         */
    
                        /**
                         * Constructs a new Waypoint.
                         * @memberof google.maps.routing.v2
                         * @classdesc Represents a Waypoint.
                         * @implements IWaypoint
                         * @constructor
                         * @param {google.maps.routing.v2.IWaypoint=} [properties] Properties to set
                         */
                        function Waypoint(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * Waypoint location.
                         * @member {google.maps.routing.v2.ILocation|null|undefined} location
                         * @memberof google.maps.routing.v2.Waypoint
                         * @instance
                         */
                        Waypoint.prototype.location = null;
    
                        /**
                         * Waypoint placeId.
                         * @member {string|null|undefined} placeId
                         * @memberof google.maps.routing.v2.Waypoint
                         * @instance
                         */
                        Waypoint.prototype.placeId = null;
    
                        /**
                         * Waypoint address.
                         * @member {string|null|undefined} address
                         * @memberof google.maps.routing.v2.Waypoint
                         * @instance
                         */
                        Waypoint.prototype.address = null;
    
                        /**
                         * Waypoint via.
                         * @member {boolean} via
                         * @memberof google.maps.routing.v2.Waypoint
                         * @instance
                         */
                        Waypoint.prototype.via = false;
    
                        /**
                         * Waypoint vehicleStopover.
                         * @member {boolean} vehicleStopover
                         * @memberof google.maps.routing.v2.Waypoint
                         * @instance
                         */
                        Waypoint.prototype.vehicleStopover = false;
    
                        /**
                         * Waypoint sideOfRoad.
                         * @member {boolean} sideOfRoad
                         * @memberof google.maps.routing.v2.Waypoint
                         * @instance
                         */
                        Waypoint.prototype.sideOfRoad = false;
    
                        // OneOf field names bound to virtual getters and setters
                        var $oneOfFields;
    
                        /**
                         * Waypoint locationType.
                         * @member {"location"|"placeId"|"address"|undefined} locationType
                         * @memberof google.maps.routing.v2.Waypoint
                         * @instance
                         */
                        Object.defineProperty(Waypoint.prototype, "locationType", {
                            get: $util.oneOfGetter($oneOfFields = ["location", "placeId", "address"]),
                            set: $util.oneOfSetter($oneOfFields)
                        });
    
                        /**
                         * Creates a new Waypoint instance using the specified properties.
                         * @function create
                         * @memberof google.maps.routing.v2.Waypoint
                         * @static
                         * @param {google.maps.routing.v2.IWaypoint=} [properties] Properties to set
                         * @returns {google.maps.routing.v2.Waypoint} Waypoint instance
                         */
                        Waypoint.create = function create(properties) {
                            return new Waypoint(properties);
                        };
    
                        /**
                         * Encodes the specified Waypoint message. Does not implicitly {@link google.maps.routing.v2.Waypoint.verify|verify} messages.
                         * @function encode
                         * @memberof google.maps.routing.v2.Waypoint
                         * @static
                         * @param {google.maps.routing.v2.IWaypoint} message Waypoint message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        Waypoint.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.location != null && Object.hasOwnProperty.call(message, "location"))
                                $root.google.maps.routing.v2.Location.encode(message.location, writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                            if (message.placeId != null && Object.hasOwnProperty.call(message, "placeId"))
                                writer.uint32(/* id 2, wireType 2 =*/18).string(message.placeId);
                            if (message.via != null && Object.hasOwnProperty.call(message, "via"))
                                writer.uint32(/* id 3, wireType 0 =*/24).bool(message.via);
                            if (message.vehicleStopover != null && Object.hasOwnProperty.call(message, "vehicleStopover"))
                                writer.uint32(/* id 4, wireType 0 =*/32).bool(message.vehicleStopover);
                            if (message.sideOfRoad != null && Object.hasOwnProperty.call(message, "sideOfRoad"))
                                writer.uint32(/* id 5, wireType 0 =*/40).bool(message.sideOfRoad);
                            if (message.address != null && Object.hasOwnProperty.call(message, "address"))
                                writer.uint32(/* id 7, wireType 2 =*/58).string(message.address);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified Waypoint message, length delimited. Does not implicitly {@link google.maps.routing.v2.Waypoint.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.maps.routing.v2.Waypoint
                         * @static
                         * @param {google.maps.routing.v2.IWaypoint} message Waypoint message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        Waypoint.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a Waypoint message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.maps.routing.v2.Waypoint
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.maps.routing.v2.Waypoint} Waypoint
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        Waypoint.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.maps.routing.v2.Waypoint();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.location = $root.google.maps.routing.v2.Location.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 2: {
                                        message.placeId = reader.string();
                                        break;
                                    }
                                case 7: {
                                        message.address = reader.string();
                                        break;
                                    }
                                case 3: {
                                        message.via = reader.bool();
                                        break;
                                    }
                                case 4: {
                                        message.vehicleStopover = reader.bool();
                                        break;
                                    }
                                case 5: {
                                        message.sideOfRoad = reader.bool();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a Waypoint message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.maps.routing.v2.Waypoint
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.maps.routing.v2.Waypoint} Waypoint
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        Waypoint.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a Waypoint message.
                         * @function verify
                         * @memberof google.maps.routing.v2.Waypoint
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        Waypoint.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            var properties = {};
                            if (message.location != null && message.hasOwnProperty("location")) {
                                properties.locationType = 1;
                                {
                                    var error = $root.google.maps.routing.v2.Location.verify(message.location);
                                    if (error)
                                        return "location." + error;
                                }
                            }
                            if (message.placeId != null && message.hasOwnProperty("placeId")) {
                                if (properties.locationType === 1)
                                    return "locationType: multiple values";
                                properties.locationType = 1;
                                if (!$util.isString(message.placeId))
                                    return "placeId: string expected";
                            }
                            if (message.address != null && message.hasOwnProperty("address")) {
                                if (properties.locationType === 1)
                                    return "locationType: multiple values";
                                properties.locationType = 1;
                                if (!$util.isString(message.address))
                                    return "address: string expected";
                            }
                            if (message.via != null && message.hasOwnProperty("via"))
                                if (typeof message.via !== "boolean")
                                    return "via: boolean expected";
                            if (message.vehicleStopover != null && message.hasOwnProperty("vehicleStopover"))
                                if (typeof message.vehicleStopover !== "boolean")
                                    return "vehicleStopover: boolean expected";
                            if (message.sideOfRoad != null && message.hasOwnProperty("sideOfRoad"))
                                if (typeof message.sideOfRoad !== "boolean")
                                    return "sideOfRoad: boolean expected";
                            return null;
                        };
    
                        /**
                         * Creates a Waypoint message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.maps.routing.v2.Waypoint
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.maps.routing.v2.Waypoint} Waypoint
                         */
                        Waypoint.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.maps.routing.v2.Waypoint)
                                return object;
                            var message = new $root.google.maps.routing.v2.Waypoint();
                            if (object.location != null) {
                                if (typeof object.location !== "object")
                                    throw TypeError(".google.maps.routing.v2.Waypoint.location: object expected");
                                message.location = $root.google.maps.routing.v2.Location.fromObject(object.location);
                            }
                            if (object.placeId != null)
                                message.placeId = String(object.placeId);
                            if (object.address != null)
                                message.address = String(object.address);
                            if (object.via != null)
                                message.via = Boolean(object.via);
                            if (object.vehicleStopover != null)
                                message.vehicleStopover = Boolean(object.vehicleStopover);
                            if (object.sideOfRoad != null)
                                message.sideOfRoad = Boolean(object.sideOfRoad);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a Waypoint message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.maps.routing.v2.Waypoint
                         * @static
                         * @param {google.maps.routing.v2.Waypoint} message Waypoint
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        Waypoint.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.via = false;
                                object.vehicleStopover = false;
                                object.sideOfRoad = false;
                            }
                            if (message.location != null && message.hasOwnProperty("location")) {
                                object.location = $root.google.maps.routing.v2.Location.toObject(message.location, options);
                                if (options.oneofs)
                                    object.locationType = "location";
                            }
                            if (message.placeId != null && message.hasOwnProperty("placeId")) {
                                object.placeId = message.placeId;
                                if (options.oneofs)
                                    object.locationType = "placeId";
                            }
                            if (message.via != null && message.hasOwnProperty("via"))
                                object.via = message.via;
                            if (message.vehicleStopover != null && message.hasOwnProperty("vehicleStopover"))
                                object.vehicleStopover = message.vehicleStopover;
                            if (message.sideOfRoad != null && message.hasOwnProperty("sideOfRoad"))
                                object.sideOfRoad = message.sideOfRoad;
                            if (message.address != null && message.hasOwnProperty("address")) {
                                object.address = message.address;
                                if (options.oneofs)
                                    object.locationType = "address";
                            }
                            return object;
                        };
    
                        /**
                         * Converts this Waypoint to JSON.
                         * @function toJSON
                         * @memberof google.maps.routing.v2.Waypoint
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        Waypoint.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for Waypoint
                         * @function getTypeUrl
                         * @memberof google.maps.routing.v2.Waypoint
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        Waypoint.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.maps.routing.v2.Waypoint";
                        };
    
                        return Waypoint;
                    })();
    
                    return v2;
                })();
    
                return routing;
            })();
    
            return maps;
        })();
    
        google.rpc = (function() {
    
            /**
             * Namespace rpc.
             * @memberof google
             * @namespace
             */
            var rpc = {};
    
            rpc.Status = (function() {
    
                /**
                 * Properties of a Status.
                 * @memberof google.rpc
                 * @interface IStatus
                 * @property {number|null} [code] Status code
                 * @property {string|null} [message] Status message
                 * @property {Array.<google.protobuf.IAny>|null} [details] Status details
                 */
    
                /**
                 * Constructs a new Status.
                 * @memberof google.rpc
                 * @classdesc Represents a Status.
                 * @implements IStatus
                 * @constructor
                 * @param {google.rpc.IStatus=} [properties] Properties to set
                 */
                function Status(properties) {
                    this.details = [];
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * Status code.
                 * @member {number} code
                 * @memberof google.rpc.Status
                 * @instance
                 */
                Status.prototype.code = 0;
    
                /**
                 * Status message.
                 * @member {string} message
                 * @memberof google.rpc.Status
                 * @instance
                 */
                Status.prototype.message = "";
    
                /**
                 * Status details.
                 * @member {Array.<google.protobuf.IAny>} details
                 * @memberof google.rpc.Status
                 * @instance
                 */
                Status.prototype.details = $util.emptyArray;
    
                /**
                 * Creates a new Status instance using the specified properties.
                 * @function create
                 * @memberof google.rpc.Status
                 * @static
                 * @param {google.rpc.IStatus=} [properties] Properties to set
                 * @returns {google.rpc.Status} Status instance
                 */
                Status.create = function create(properties) {
                    return new Status(properties);
                };
    
                /**
                 * Encodes the specified Status message. Does not implicitly {@link google.rpc.Status.verify|verify} messages.
                 * @function encode
                 * @memberof google.rpc.Status
                 * @static
                 * @param {google.rpc.IStatus} message Status message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                Status.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.code != null && Object.hasOwnProperty.call(message, "code"))
                        writer.uint32(/* id 1, wireType 0 =*/8).int32(message.code);
                    if (message.message != null && Object.hasOwnProperty.call(message, "message"))
                        writer.uint32(/* id 2, wireType 2 =*/18).string(message.message);
                    if (message.details != null && message.details.length)
                        for (var i = 0; i < message.details.length; ++i)
                            $root.google.protobuf.Any.encode(message.details[i], writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();
                    return writer;
                };
    
                /**
                 * Encodes the specified Status message, length delimited. Does not implicitly {@link google.rpc.Status.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.rpc.Status
                 * @static
                 * @param {google.rpc.IStatus} message Status message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                Status.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a Status message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.rpc.Status
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.rpc.Status} Status
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                Status.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.rpc.Status();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1: {
                                message.code = reader.int32();
                                break;
                            }
                        case 2: {
                                message.message = reader.string();
                                break;
                            }
                        case 3: {
                                if (!(message.details && message.details.length))
                                    message.details = [];
                                message.details.push($root.google.protobuf.Any.decode(reader, reader.uint32()));
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a Status message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.rpc.Status
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.rpc.Status} Status
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                Status.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a Status message.
                 * @function verify
                 * @memberof google.rpc.Status
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                Status.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.code != null && message.hasOwnProperty("code"))
                        if (!$util.isInteger(message.code))
                            return "code: integer expected";
                    if (message.message != null && message.hasOwnProperty("message"))
                        if (!$util.isString(message.message))
                            return "message: string expected";
                    if (message.details != null && message.hasOwnProperty("details")) {
                        if (!Array.isArray(message.details))
                            return "details: array expected";
                        for (var i = 0; i < message.details.length; ++i) {
                            var error = $root.google.protobuf.Any.verify(message.details[i]);
                            if (error)
                                return "details." + error;
                        }
                    }
                    return null;
                };
    
                /**
                 * Creates a Status message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.rpc.Status
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.rpc.Status} Status
                 */
                Status.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.rpc.Status)
                        return object;
                    var message = new $root.google.rpc.Status();
                    if (object.code != null)
                        message.code = object.code | 0;
                    if (object.message != null)
                        message.message = String(object.message);
                    if (object.details) {
                        if (!Array.isArray(object.details))
                            throw TypeError(".google.rpc.Status.details: array expected");
                        message.details = [];
                        for (var i = 0; i < object.details.length; ++i) {
                            if (typeof object.details[i] !== "object")
                                throw TypeError(".google.rpc.Status.details: object expected");
                            message.details[i] = $root.google.protobuf.Any.fromObject(object.details[i]);
                        }
                    }
                    return message;
                };
    
                /**
                 * Creates a plain object from a Status message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.rpc.Status
                 * @static
                 * @param {google.rpc.Status} message Status
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                Status.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.arrays || options.defaults)
                        object.details = [];
                    if (options.defaults) {
                        object.code = 0;
                        object.message = "";
                    }
                    if (message.code != null && message.hasOwnProperty("code"))
                        object.code = message.code;
                    if (message.message != null && message.hasOwnProperty("message"))
                        object.message = message.message;
                    if (message.details && message.details.length) {
                        object.details = [];
                        for (var j = 0; j < message.details.length; ++j)
                            object.details[j] = $root.google.protobuf.Any.toObject(message.details[j], options);
                    }
                    return object;
                };
    
                /**
                 * Converts this Status to JSON.
                 * @function toJSON
                 * @memberof google.rpc.Status
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                Status.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for Status
                 * @function getTypeUrl
                 * @memberof google.rpc.Status
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                Status.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.rpc.Status";
                };
    
                return Status;
            })();
    
            return rpc;
        })();
    
        google.api = (function() {
    
            /**
             * Namespace api.
             * @memberof google
             * @namespace
             */
            var api = {};
    
            api.Http = (function() {
    
                /**
                 * Properties of a Http.
                 * @memberof google.api
                 * @interface IHttp
                 * @property {Array.<google.api.IHttpRule>|null} [rules] Http rules
                 * @property {boolean|null} [fullyDecodeReservedExpansion] Http fullyDecodeReservedExpansion
                 */
    
                /**
                 * Constructs a new Http.
                 * @memberof google.api
                 * @classdesc Represents a Http.
                 * @implements IHttp
                 * @constructor
                 * @param {google.api.IHttp=} [properties] Properties to set
                 */
                function Http(properties) {
                    this.rules = [];
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * Http rules.
                 * @member {Array.<google.api.IHttpRule>} rules
                 * @memberof google.api.Http
                 * @instance
                 */
                Http.prototype.rules = $util.emptyArray;
    
                /**
                 * Http fullyDecodeReservedExpansion.
                 * @member {boolean} fullyDecodeReservedExpansion
                 * @memberof google.api.Http
                 * @instance
                 */
                Http.prototype.fullyDecodeReservedExpansion = false;
    
                /**
                 * Creates a new Http instance using the specified properties.
                 * @function create
                 * @memberof google.api.Http
                 * @static
                 * @param {google.api.IHttp=} [properties] Properties to set
                 * @returns {google.api.Http} Http instance
                 */
                Http.create = function create(properties) {
                    return new Http(properties);
                };
    
                /**
                 * Encodes the specified Http message. Does not implicitly {@link google.api.Http.verify|verify} messages.
                 * @function encode
                 * @memberof google.api.Http
                 * @static
                 * @param {google.api.IHttp} message Http message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                Http.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.rules != null && message.rules.length)
                        for (var i = 0; i < message.rules.length; ++i)
                            $root.google.api.HttpRule.encode(message.rules[i], writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                    if (message.fullyDecodeReservedExpansion != null && Object.hasOwnProperty.call(message, "fullyDecodeReservedExpansion"))
                        writer.uint32(/* id 2, wireType 0 =*/16).bool(message.fullyDecodeReservedExpansion);
                    return writer;
                };
    
                /**
                 * Encodes the specified Http message, length delimited. Does not implicitly {@link google.api.Http.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.api.Http
                 * @static
                 * @param {google.api.IHttp} message Http message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                Http.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a Http message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.api.Http
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.api.Http} Http
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                Http.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.api.Http();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1: {
                                if (!(message.rules && message.rules.length))
                                    message.rules = [];
                                message.rules.push($root.google.api.HttpRule.decode(reader, reader.uint32()));
                                break;
                            }
                        case 2: {
                                message.fullyDecodeReservedExpansion = reader.bool();
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a Http message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.api.Http
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.api.Http} Http
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                Http.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a Http message.
                 * @function verify
                 * @memberof google.api.Http
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                Http.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.rules != null && message.hasOwnProperty("rules")) {
                        if (!Array.isArray(message.rules))
                            return "rules: array expected";
                        for (var i = 0; i < message.rules.length; ++i) {
                            var error = $root.google.api.HttpRule.verify(message.rules[i]);
                            if (error)
                                return "rules." + error;
                        }
                    }
                    if (message.fullyDecodeReservedExpansion != null && message.hasOwnProperty("fullyDecodeReservedExpansion"))
                        if (typeof message.fullyDecodeReservedExpansion !== "boolean")
                            return "fullyDecodeReservedExpansion: boolean expected";
                    return null;
                };
    
                /**
                 * Creates a Http message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.api.Http
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.api.Http} Http
                 */
                Http.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.api.Http)
                        return object;
                    var message = new $root.google.api.Http();
                    if (object.rules) {
                        if (!Array.isArray(object.rules))
                            throw TypeError(".google.api.Http.rules: array expected");
                        message.rules = [];
                        for (var i = 0; i < object.rules.length; ++i) {
                            if (typeof object.rules[i] !== "object")
                                throw TypeError(".google.api.Http.rules: object expected");
                            message.rules[i] = $root.google.api.HttpRule.fromObject(object.rules[i]);
                        }
                    }
                    if (object.fullyDecodeReservedExpansion != null)
                        message.fullyDecodeReservedExpansion = Boolean(object.fullyDecodeReservedExpansion);
                    return message;
                };
    
                /**
                 * Creates a plain object from a Http message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.api.Http
                 * @static
                 * @param {google.api.Http} message Http
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                Http.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.arrays || options.defaults)
                        object.rules = [];
                    if (options.defaults)
                        object.fullyDecodeReservedExpansion = false;
                    if (message.rules && message.rules.length) {
                        object.rules = [];
                        for (var j = 0; j < message.rules.length; ++j)
                            object.rules[j] = $root.google.api.HttpRule.toObject(message.rules[j], options);
                    }
                    if (message.fullyDecodeReservedExpansion != null && message.hasOwnProperty("fullyDecodeReservedExpansion"))
                        object.fullyDecodeReservedExpansion = message.fullyDecodeReservedExpansion;
                    return object;
                };
    
                /**
                 * Converts this Http to JSON.
                 * @function toJSON
                 * @memberof google.api.Http
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                Http.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for Http
                 * @function getTypeUrl
                 * @memberof google.api.Http
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                Http.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.api.Http";
                };
    
                return Http;
            })();
    
            api.HttpRule = (function() {
    
                /**
                 * Properties of a HttpRule.
                 * @memberof google.api
                 * @interface IHttpRule
                 * @property {string|null} [selector] HttpRule selector
                 * @property {string|null} [get] HttpRule get
                 * @property {string|null} [put] HttpRule put
                 * @property {string|null} [post] HttpRule post
                 * @property {string|null} ["delete"] HttpRule delete
                 * @property {string|null} [patch] HttpRule patch
                 * @property {google.api.ICustomHttpPattern|null} [custom] HttpRule custom
                 * @property {string|null} [body] HttpRule body
                 * @property {string|null} [responseBody] HttpRule responseBody
                 * @property {Array.<google.api.IHttpRule>|null} [additionalBindings] HttpRule additionalBindings
                 */
    
                /**
                 * Constructs a new HttpRule.
                 * @memberof google.api
                 * @classdesc Represents a HttpRule.
                 * @implements IHttpRule
                 * @constructor
                 * @param {google.api.IHttpRule=} [properties] Properties to set
                 */
                function HttpRule(properties) {
                    this.additionalBindings = [];
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * HttpRule selector.
                 * @member {string} selector
                 * @memberof google.api.HttpRule
                 * @instance
                 */
                HttpRule.prototype.selector = "";
    
                /**
                 * HttpRule get.
                 * @member {string|null|undefined} get
                 * @memberof google.api.HttpRule
                 * @instance
                 */
                HttpRule.prototype.get = null;
    
                /**
                 * HttpRule put.
                 * @member {string|null|undefined} put
                 * @memberof google.api.HttpRule
                 * @instance
                 */
                HttpRule.prototype.put = null;
    
                /**
                 * HttpRule post.
                 * @member {string|null|undefined} post
                 * @memberof google.api.HttpRule
                 * @instance
                 */
                HttpRule.prototype.post = null;
    
                /**
                 * HttpRule delete.
                 * @member {string|null|undefined} delete
                 * @memberof google.api.HttpRule
                 * @instance
                 */
                HttpRule.prototype["delete"] = null;
    
                /**
                 * HttpRule patch.
                 * @member {string|null|undefined} patch
                 * @memberof google.api.HttpRule
                 * @instance
                 */
                HttpRule.prototype.patch = null;
    
                /**
                 * HttpRule custom.
                 * @member {google.api.ICustomHttpPattern|null|undefined} custom
                 * @memberof google.api.HttpRule
                 * @instance
                 */
                HttpRule.prototype.custom = null;
    
                /**
                 * HttpRule body.
                 * @member {string} body
                 * @memberof google.api.HttpRule
                 * @instance
                 */
                HttpRule.prototype.body = "";
    
                /**
                 * HttpRule responseBody.
                 * @member {string} responseBody
                 * @memberof google.api.HttpRule
                 * @instance
                 */
                HttpRule.prototype.responseBody = "";
    
                /**
                 * HttpRule additionalBindings.
                 * @member {Array.<google.api.IHttpRule>} additionalBindings
                 * @memberof google.api.HttpRule
                 * @instance
                 */
                HttpRule.prototype.additionalBindings = $util.emptyArray;
    
                // OneOf field names bound to virtual getters and setters
                var $oneOfFields;
    
                /**
                 * HttpRule pattern.
                 * @member {"get"|"put"|"post"|"delete"|"patch"|"custom"|undefined} pattern
                 * @memberof google.api.HttpRule
                 * @instance
                 */
                Object.defineProperty(HttpRule.prototype, "pattern", {
                    get: $util.oneOfGetter($oneOfFields = ["get", "put", "post", "delete", "patch", "custom"]),
                    set: $util.oneOfSetter($oneOfFields)
                });
    
                /**
                 * Creates a new HttpRule instance using the specified properties.
                 * @function create
                 * @memberof google.api.HttpRule
                 * @static
                 * @param {google.api.IHttpRule=} [properties] Properties to set
                 * @returns {google.api.HttpRule} HttpRule instance
                 */
                HttpRule.create = function create(properties) {
                    return new HttpRule(properties);
                };
    
                /**
                 * Encodes the specified HttpRule message. Does not implicitly {@link google.api.HttpRule.verify|verify} messages.
                 * @function encode
                 * @memberof google.api.HttpRule
                 * @static
                 * @param {google.api.IHttpRule} message HttpRule message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                HttpRule.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.selector != null && Object.hasOwnProperty.call(message, "selector"))
                        writer.uint32(/* id 1, wireType 2 =*/10).string(message.selector);
                    if (message.get != null && Object.hasOwnProperty.call(message, "get"))
                        writer.uint32(/* id 2, wireType 2 =*/18).string(message.get);
                    if (message.put != null && Object.hasOwnProperty.call(message, "put"))
                        writer.uint32(/* id 3, wireType 2 =*/26).string(message.put);
                    if (message.post != null && Object.hasOwnProperty.call(message, "post"))
                        writer.uint32(/* id 4, wireType 2 =*/34).string(message.post);
                    if (message["delete"] != null && Object.hasOwnProperty.call(message, "delete"))
                        writer.uint32(/* id 5, wireType 2 =*/42).string(message["delete"]);
                    if (message.patch != null && Object.hasOwnProperty.call(message, "patch"))
                        writer.uint32(/* id 6, wireType 2 =*/50).string(message.patch);
                    if (message.body != null && Object.hasOwnProperty.call(message, "body"))
                        writer.uint32(/* id 7, wireType 2 =*/58).string(message.body);
                    if (message.custom != null && Object.hasOwnProperty.call(message, "custom"))
                        $root.google.api.CustomHttpPattern.encode(message.custom, writer.uint32(/* id 8, wireType 2 =*/66).fork()).ldelim();
                    if (message.additionalBindings != null && message.additionalBindings.length)
                        for (var i = 0; i < message.additionalBindings.length; ++i)
                            $root.google.api.HttpRule.encode(message.additionalBindings[i], writer.uint32(/* id 11, wireType 2 =*/90).fork()).ldelim();
                    if (message.responseBody != null && Object.hasOwnProperty.call(message, "responseBody"))
                        writer.uint32(/* id 12, wireType 2 =*/98).string(message.responseBody);
                    return writer;
                };
    
                /**
                 * Encodes the specified HttpRule message, length delimited. Does not implicitly {@link google.api.HttpRule.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.api.HttpRule
                 * @static
                 * @param {google.api.IHttpRule} message HttpRule message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                HttpRule.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a HttpRule message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.api.HttpRule
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.api.HttpRule} HttpRule
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                HttpRule.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.api.HttpRule();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1: {
                                message.selector = reader.string();
                                break;
                            }
                        case 2: {
                                message.get = reader.string();
                                break;
                            }
                        case 3: {
                                message.put = reader.string();
                                break;
                            }
                        case 4: {
                                message.post = reader.string();
                                break;
                            }
                        case 5: {
                                message["delete"] = reader.string();
                                break;
                            }
                        case 6: {
                                message.patch = reader.string();
                                break;
                            }
                        case 8: {
                                message.custom = $root.google.api.CustomHttpPattern.decode(reader, reader.uint32());
                                break;
                            }
                        case 7: {
                                message.body = reader.string();
                                break;
                            }
                        case 12: {
                                message.responseBody = reader.string();
                                break;
                            }
                        case 11: {
                                if (!(message.additionalBindings && message.additionalBindings.length))
                                    message.additionalBindings = [];
                                message.additionalBindings.push($root.google.api.HttpRule.decode(reader, reader.uint32()));
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a HttpRule message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.api.HttpRule
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.api.HttpRule} HttpRule
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                HttpRule.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a HttpRule message.
                 * @function verify
                 * @memberof google.api.HttpRule
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                HttpRule.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    var properties = {};
                    if (message.selector != null && message.hasOwnProperty("selector"))
                        if (!$util.isString(message.selector))
                            return "selector: string expected";
                    if (message.get != null && message.hasOwnProperty("get")) {
                        properties.pattern = 1;
                        if (!$util.isString(message.get))
                            return "get: string expected";
                    }
                    if (message.put != null && message.hasOwnProperty("put")) {
                        if (properties.pattern === 1)
                            return "pattern: multiple values";
                        properties.pattern = 1;
                        if (!$util.isString(message.put))
                            return "put: string expected";
                    }
                    if (message.post != null && message.hasOwnProperty("post")) {
                        if (properties.pattern === 1)
                            return "pattern: multiple values";
                        properties.pattern = 1;
                        if (!$util.isString(message.post))
                            return "post: string expected";
                    }
                    if (message["delete"] != null && message.hasOwnProperty("delete")) {
                        if (properties.pattern === 1)
                            return "pattern: multiple values";
                        properties.pattern = 1;
                        if (!$util.isString(message["delete"]))
                            return "delete: string expected";
                    }
                    if (message.patch != null && message.hasOwnProperty("patch")) {
                        if (properties.pattern === 1)
                            return "pattern: multiple values";
                        properties.pattern = 1;
                        if (!$util.isString(message.patch))
                            return "patch: string expected";
                    }
                    if (message.custom != null && message.hasOwnProperty("custom")) {
                        if (properties.pattern === 1)
                            return "pattern: multiple values";
                        properties.pattern = 1;
                        {
                            var error = $root.google.api.CustomHttpPattern.verify(message.custom);
                            if (error)
                                return "custom." + error;
                        }
                    }
                    if (message.body != null && message.hasOwnProperty("body"))
                        if (!$util.isString(message.body))
                            return "body: string expected";
                    if (message.responseBody != null && message.hasOwnProperty("responseBody"))
                        if (!$util.isString(message.responseBody))
                            return "responseBody: string expected";
                    if (message.additionalBindings != null && message.hasOwnProperty("additionalBindings")) {
                        if (!Array.isArray(message.additionalBindings))
                            return "additionalBindings: array expected";
                        for (var i = 0; i < message.additionalBindings.length; ++i) {
                            var error = $root.google.api.HttpRule.verify(message.additionalBindings[i]);
                            if (error)
                                return "additionalBindings." + error;
                        }
                    }
                    return null;
                };
    
                /**
                 * Creates a HttpRule message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.api.HttpRule
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.api.HttpRule} HttpRule
                 */
                HttpRule.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.api.HttpRule)
                        return object;
                    var message = new $root.google.api.HttpRule();
                    if (object.selector != null)
                        message.selector = String(object.selector);
                    if (object.get != null)
                        message.get = String(object.get);
                    if (object.put != null)
                        message.put = String(object.put);
                    if (object.post != null)
                        message.post = String(object.post);
                    if (object["delete"] != null)
                        message["delete"] = String(object["delete"]);
                    if (object.patch != null)
                        message.patch = String(object.patch);
                    if (object.custom != null) {
                        if (typeof object.custom !== "object")
                            throw TypeError(".google.api.HttpRule.custom: object expected");
                        message.custom = $root.google.api.CustomHttpPattern.fromObject(object.custom);
                    }
                    if (object.body != null)
                        message.body = String(object.body);
                    if (object.responseBody != null)
                        message.responseBody = String(object.responseBody);
                    if (object.additionalBindings) {
                        if (!Array.isArray(object.additionalBindings))
                            throw TypeError(".google.api.HttpRule.additionalBindings: array expected");
                        message.additionalBindings = [];
                        for (var i = 0; i < object.additionalBindings.length; ++i) {
                            if (typeof object.additionalBindings[i] !== "object")
                                throw TypeError(".google.api.HttpRule.additionalBindings: object expected");
                            message.additionalBindings[i] = $root.google.api.HttpRule.fromObject(object.additionalBindings[i]);
                        }
                    }
                    return message;
                };
    
                /**
                 * Creates a plain object from a HttpRule message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.api.HttpRule
                 * @static
                 * @param {google.api.HttpRule} message HttpRule
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                HttpRule.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.arrays || options.defaults)
                        object.additionalBindings = [];
                    if (options.defaults) {
                        object.selector = "";
                        object.body = "";
                        object.responseBody = "";
                    }
                    if (message.selector != null && message.hasOwnProperty("selector"))
                        object.selector = message.selector;
                    if (message.get != null && message.hasOwnProperty("get")) {
                        object.get = message.get;
                        if (options.oneofs)
                            object.pattern = "get";
                    }
                    if (message.put != null && message.hasOwnProperty("put")) {
                        object.put = message.put;
                        if (options.oneofs)
                            object.pattern = "put";
                    }
                    if (message.post != null && message.hasOwnProperty("post")) {
                        object.post = message.post;
                        if (options.oneofs)
                            object.pattern = "post";
                    }
                    if (message["delete"] != null && message.hasOwnProperty("delete")) {
                        object["delete"] = message["delete"];
                        if (options.oneofs)
                            object.pattern = "delete";
                    }
                    if (message.patch != null && message.hasOwnProperty("patch")) {
                        object.patch = message.patch;
                        if (options.oneofs)
                            object.pattern = "patch";
                    }
                    if (message.body != null && message.hasOwnProperty("body"))
                        object.body = message.body;
                    if (message.custom != null && message.hasOwnProperty("custom")) {
                        object.custom = $root.google.api.CustomHttpPattern.toObject(message.custom, options);
                        if (options.oneofs)
                            object.pattern = "custom";
                    }
                    if (message.additionalBindings && message.additionalBindings.length) {
                        object.additionalBindings = [];
                        for (var j = 0; j < message.additionalBindings.length; ++j)
                            object.additionalBindings[j] = $root.google.api.HttpRule.toObject(message.additionalBindings[j], options);
                    }
                    if (message.responseBody != null && message.hasOwnProperty("responseBody"))
                        object.responseBody = message.responseBody;
                    return object;
                };
    
                /**
                 * Converts this HttpRule to JSON.
                 * @function toJSON
                 * @memberof google.api.HttpRule
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                HttpRule.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for HttpRule
                 * @function getTypeUrl
                 * @memberof google.api.HttpRule
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                HttpRule.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.api.HttpRule";
                };
    
                return HttpRule;
            })();
    
            api.CustomHttpPattern = (function() {
    
                /**
                 * Properties of a CustomHttpPattern.
                 * @memberof google.api
                 * @interface ICustomHttpPattern
                 * @property {string|null} [kind] CustomHttpPattern kind
                 * @property {string|null} [path] CustomHttpPattern path
                 */
    
                /**
                 * Constructs a new CustomHttpPattern.
                 * @memberof google.api
                 * @classdesc Represents a CustomHttpPattern.
                 * @implements ICustomHttpPattern
                 * @constructor
                 * @param {google.api.ICustomHttpPattern=} [properties] Properties to set
                 */
                function CustomHttpPattern(properties) {
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * CustomHttpPattern kind.
                 * @member {string} kind
                 * @memberof google.api.CustomHttpPattern
                 * @instance
                 */
                CustomHttpPattern.prototype.kind = "";
    
                /**
                 * CustomHttpPattern path.
                 * @member {string} path
                 * @memberof google.api.CustomHttpPattern
                 * @instance
                 */
                CustomHttpPattern.prototype.path = "";
    
                /**
                 * Creates a new CustomHttpPattern instance using the specified properties.
                 * @function create
                 * @memberof google.api.CustomHttpPattern
                 * @static
                 * @param {google.api.ICustomHttpPattern=} [properties] Properties to set
                 * @returns {google.api.CustomHttpPattern} CustomHttpPattern instance
                 */
                CustomHttpPattern.create = function create(properties) {
                    return new CustomHttpPattern(properties);
                };
    
                /**
                 * Encodes the specified CustomHttpPattern message. Does not implicitly {@link google.api.CustomHttpPattern.verify|verify} messages.
                 * @function encode
                 * @memberof google.api.CustomHttpPattern
                 * @static
                 * @param {google.api.ICustomHttpPattern} message CustomHttpPattern message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                CustomHttpPattern.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.kind != null && Object.hasOwnProperty.call(message, "kind"))
                        writer.uint32(/* id 1, wireType 2 =*/10).string(message.kind);
                    if (message.path != null && Object.hasOwnProperty.call(message, "path"))
                        writer.uint32(/* id 2, wireType 2 =*/18).string(message.path);
                    return writer;
                };
    
                /**
                 * Encodes the specified CustomHttpPattern message, length delimited. Does not implicitly {@link google.api.CustomHttpPattern.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.api.CustomHttpPattern
                 * @static
                 * @param {google.api.ICustomHttpPattern} message CustomHttpPattern message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                CustomHttpPattern.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a CustomHttpPattern message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.api.CustomHttpPattern
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.api.CustomHttpPattern} CustomHttpPattern
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                CustomHttpPattern.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.api.CustomHttpPattern();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1: {
                                message.kind = reader.string();
                                break;
                            }
                        case 2: {
                                message.path = reader.string();
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a CustomHttpPattern message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.api.CustomHttpPattern
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.api.CustomHttpPattern} CustomHttpPattern
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                CustomHttpPattern.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a CustomHttpPattern message.
                 * @function verify
                 * @memberof google.api.CustomHttpPattern
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                CustomHttpPattern.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.kind != null && message.hasOwnProperty("kind"))
                        if (!$util.isString(message.kind))
                            return "kind: string expected";
                    if (message.path != null && message.hasOwnProperty("path"))
                        if (!$util.isString(message.path))
                            return "path: string expected";
                    return null;
                };
    
                /**
                 * Creates a CustomHttpPattern message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.api.CustomHttpPattern
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.api.CustomHttpPattern} CustomHttpPattern
                 */
                CustomHttpPattern.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.api.CustomHttpPattern)
                        return object;
                    var message = new $root.google.api.CustomHttpPattern();
                    if (object.kind != null)
                        message.kind = String(object.kind);
                    if (object.path != null)
                        message.path = String(object.path);
                    return message;
                };
    
                /**
                 * Creates a plain object from a CustomHttpPattern message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.api.CustomHttpPattern
                 * @static
                 * @param {google.api.CustomHttpPattern} message CustomHttpPattern
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                CustomHttpPattern.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.defaults) {
                        object.kind = "";
                        object.path = "";
                    }
                    if (message.kind != null && message.hasOwnProperty("kind"))
                        object.kind = message.kind;
                    if (message.path != null && message.hasOwnProperty("path"))
                        object.path = message.path;
                    return object;
                };
    
                /**
                 * Converts this CustomHttpPattern to JSON.
                 * @function toJSON
                 * @memberof google.api.CustomHttpPattern
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                CustomHttpPattern.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for CustomHttpPattern
                 * @function getTypeUrl
                 * @memberof google.api.CustomHttpPattern
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                CustomHttpPattern.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.api.CustomHttpPattern";
                };
    
                return CustomHttpPattern;
            })();
    
            api.CommonLanguageSettings = (function() {
    
                /**
                 * Properties of a CommonLanguageSettings.
                 * @memberof google.api
                 * @interface ICommonLanguageSettings
                 * @property {string|null} [referenceDocsUri] CommonLanguageSettings referenceDocsUri
                 * @property {Array.<google.api.ClientLibraryDestination>|null} [destinations] CommonLanguageSettings destinations
                 */
    
                /**
                 * Constructs a new CommonLanguageSettings.
                 * @memberof google.api
                 * @classdesc Represents a CommonLanguageSettings.
                 * @implements ICommonLanguageSettings
                 * @constructor
                 * @param {google.api.ICommonLanguageSettings=} [properties] Properties to set
                 */
                function CommonLanguageSettings(properties) {
                    this.destinations = [];
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * CommonLanguageSettings referenceDocsUri.
                 * @member {string} referenceDocsUri
                 * @memberof google.api.CommonLanguageSettings
                 * @instance
                 */
                CommonLanguageSettings.prototype.referenceDocsUri = "";
    
                /**
                 * CommonLanguageSettings destinations.
                 * @member {Array.<google.api.ClientLibraryDestination>} destinations
                 * @memberof google.api.CommonLanguageSettings
                 * @instance
                 */
                CommonLanguageSettings.prototype.destinations = $util.emptyArray;
    
                /**
                 * Creates a new CommonLanguageSettings instance using the specified properties.
                 * @function create
                 * @memberof google.api.CommonLanguageSettings
                 * @static
                 * @param {google.api.ICommonLanguageSettings=} [properties] Properties to set
                 * @returns {google.api.CommonLanguageSettings} CommonLanguageSettings instance
                 */
                CommonLanguageSettings.create = function create(properties) {
                    return new CommonLanguageSettings(properties);
                };
    
                /**
                 * Encodes the specified CommonLanguageSettings message. Does not implicitly {@link google.api.CommonLanguageSettings.verify|verify} messages.
                 * @function encode
                 * @memberof google.api.CommonLanguageSettings
                 * @static
                 * @param {google.api.ICommonLanguageSettings} message CommonLanguageSettings message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                CommonLanguageSettings.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.referenceDocsUri != null && Object.hasOwnProperty.call(message, "referenceDocsUri"))
                        writer.uint32(/* id 1, wireType 2 =*/10).string(message.referenceDocsUri);
                    if (message.destinations != null && message.destinations.length) {
                        writer.uint32(/* id 2, wireType 2 =*/18).fork();
                        for (var i = 0; i < message.destinations.length; ++i)
                            writer.int32(message.destinations[i]);
                        writer.ldelim();
                    }
                    return writer;
                };
    
                /**
                 * Encodes the specified CommonLanguageSettings message, length delimited. Does not implicitly {@link google.api.CommonLanguageSettings.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.api.CommonLanguageSettings
                 * @static
                 * @param {google.api.ICommonLanguageSettings} message CommonLanguageSettings message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                CommonLanguageSettings.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a CommonLanguageSettings message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.api.CommonLanguageSettings
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.api.CommonLanguageSettings} CommonLanguageSettings
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                CommonLanguageSettings.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.api.CommonLanguageSettings();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1: {
                                message.referenceDocsUri = reader.string();
                                break;
                            }
                        case 2: {
                                if (!(message.destinations && message.destinations.length))
                                    message.destinations = [];
                                if ((tag & 7) === 2) {
                                    var end2 = reader.uint32() + reader.pos;
                                    while (reader.pos < end2)
                                        message.destinations.push(reader.int32());
                                } else
                                    message.destinations.push(reader.int32());
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a CommonLanguageSettings message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.api.CommonLanguageSettings
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.api.CommonLanguageSettings} CommonLanguageSettings
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                CommonLanguageSettings.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a CommonLanguageSettings message.
                 * @function verify
                 * @memberof google.api.CommonLanguageSettings
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                CommonLanguageSettings.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.referenceDocsUri != null && message.hasOwnProperty("referenceDocsUri"))
                        if (!$util.isString(message.referenceDocsUri))
                            return "referenceDocsUri: string expected";
                    if (message.destinations != null && message.hasOwnProperty("destinations")) {
                        if (!Array.isArray(message.destinations))
                            return "destinations: array expected";
                        for (var i = 0; i < message.destinations.length; ++i)
                            switch (message.destinations[i]) {
                            default:
                                return "destinations: enum value[] expected";
                            case 0:
                            case 10:
                            case 20:
                                break;
                            }
                    }
                    return null;
                };
    
                /**
                 * Creates a CommonLanguageSettings message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.api.CommonLanguageSettings
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.api.CommonLanguageSettings} CommonLanguageSettings
                 */
                CommonLanguageSettings.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.api.CommonLanguageSettings)
                        return object;
                    var message = new $root.google.api.CommonLanguageSettings();
                    if (object.referenceDocsUri != null)
                        message.referenceDocsUri = String(object.referenceDocsUri);
                    if (object.destinations) {
                        if (!Array.isArray(object.destinations))
                            throw TypeError(".google.api.CommonLanguageSettings.destinations: array expected");
                        message.destinations = [];
                        for (var i = 0; i < object.destinations.length; ++i)
                            switch (object.destinations[i]) {
                            default:
                                if (typeof object.destinations[i] === "number") {
                                    message.destinations[i] = object.destinations[i];
                                    break;
                                }
                            case "CLIENT_LIBRARY_DESTINATION_UNSPECIFIED":
                            case 0:
                                message.destinations[i] = 0;
                                break;
                            case "GITHUB":
                            case 10:
                                message.destinations[i] = 10;
                                break;
                            case "PACKAGE_MANAGER":
                            case 20:
                                message.destinations[i] = 20;
                                break;
                            }
                    }
                    return message;
                };
    
                /**
                 * Creates a plain object from a CommonLanguageSettings message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.api.CommonLanguageSettings
                 * @static
                 * @param {google.api.CommonLanguageSettings} message CommonLanguageSettings
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                CommonLanguageSettings.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.arrays || options.defaults)
                        object.destinations = [];
                    if (options.defaults)
                        object.referenceDocsUri = "";
                    if (message.referenceDocsUri != null && message.hasOwnProperty("referenceDocsUri"))
                        object.referenceDocsUri = message.referenceDocsUri;
                    if (message.destinations && message.destinations.length) {
                        object.destinations = [];
                        for (var j = 0; j < message.destinations.length; ++j)
                            object.destinations[j] = options.enums === String ? $root.google.api.ClientLibraryDestination[message.destinations[j]] === undefined ? message.destinations[j] : $root.google.api.ClientLibraryDestination[message.destinations[j]] : message.destinations[j];
                    }
                    return object;
                };
    
                /**
                 * Converts this CommonLanguageSettings to JSON.
                 * @function toJSON
                 * @memberof google.api.CommonLanguageSettings
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                CommonLanguageSettings.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for CommonLanguageSettings
                 * @function getTypeUrl
                 * @memberof google.api.CommonLanguageSettings
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                CommonLanguageSettings.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.api.CommonLanguageSettings";
                };
    
                return CommonLanguageSettings;
            })();
    
            api.ClientLibrarySettings = (function() {
    
                /**
                 * Properties of a ClientLibrarySettings.
                 * @memberof google.api
                 * @interface IClientLibrarySettings
                 * @property {string|null} [version] ClientLibrarySettings version
                 * @property {google.api.LaunchStage|null} [launchStage] ClientLibrarySettings launchStage
                 * @property {boolean|null} [restNumericEnums] ClientLibrarySettings restNumericEnums
                 * @property {google.api.IJavaSettings|null} [javaSettings] ClientLibrarySettings javaSettings
                 * @property {google.api.ICppSettings|null} [cppSettings] ClientLibrarySettings cppSettings
                 * @property {google.api.IPhpSettings|null} [phpSettings] ClientLibrarySettings phpSettings
                 * @property {google.api.IPythonSettings|null} [pythonSettings] ClientLibrarySettings pythonSettings
                 * @property {google.api.INodeSettings|null} [nodeSettings] ClientLibrarySettings nodeSettings
                 * @property {google.api.IDotnetSettings|null} [dotnetSettings] ClientLibrarySettings dotnetSettings
                 * @property {google.api.IRubySettings|null} [rubySettings] ClientLibrarySettings rubySettings
                 * @property {google.api.IGoSettings|null} [goSettings] ClientLibrarySettings goSettings
                 */
    
                /**
                 * Constructs a new ClientLibrarySettings.
                 * @memberof google.api
                 * @classdesc Represents a ClientLibrarySettings.
                 * @implements IClientLibrarySettings
                 * @constructor
                 * @param {google.api.IClientLibrarySettings=} [properties] Properties to set
                 */
                function ClientLibrarySettings(properties) {
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * ClientLibrarySettings version.
                 * @member {string} version
                 * @memberof google.api.ClientLibrarySettings
                 * @instance
                 */
                ClientLibrarySettings.prototype.version = "";
    
                /**
                 * ClientLibrarySettings launchStage.
                 * @member {google.api.LaunchStage} launchStage
                 * @memberof google.api.ClientLibrarySettings
                 * @instance
                 */
                ClientLibrarySettings.prototype.launchStage = 0;
    
                /**
                 * ClientLibrarySettings restNumericEnums.
                 * @member {boolean} restNumericEnums
                 * @memberof google.api.ClientLibrarySettings
                 * @instance
                 */
                ClientLibrarySettings.prototype.restNumericEnums = false;
    
                /**
                 * ClientLibrarySettings javaSettings.
                 * @member {google.api.IJavaSettings|null|undefined} javaSettings
                 * @memberof google.api.ClientLibrarySettings
                 * @instance
                 */
                ClientLibrarySettings.prototype.javaSettings = null;
    
                /**
                 * ClientLibrarySettings cppSettings.
                 * @member {google.api.ICppSettings|null|undefined} cppSettings
                 * @memberof google.api.ClientLibrarySettings
                 * @instance
                 */
                ClientLibrarySettings.prototype.cppSettings = null;
    
                /**
                 * ClientLibrarySettings phpSettings.
                 * @member {google.api.IPhpSettings|null|undefined} phpSettings
                 * @memberof google.api.ClientLibrarySettings
                 * @instance
                 */
                ClientLibrarySettings.prototype.phpSettings = null;
    
                /**
                 * ClientLibrarySettings pythonSettings.
                 * @member {google.api.IPythonSettings|null|undefined} pythonSettings
                 * @memberof google.api.ClientLibrarySettings
                 * @instance
                 */
                ClientLibrarySettings.prototype.pythonSettings = null;
    
                /**
                 * ClientLibrarySettings nodeSettings.
                 * @member {google.api.INodeSettings|null|undefined} nodeSettings
                 * @memberof google.api.ClientLibrarySettings
                 * @instance
                 */
                ClientLibrarySettings.prototype.nodeSettings = null;
    
                /**
                 * ClientLibrarySettings dotnetSettings.
                 * @member {google.api.IDotnetSettings|null|undefined} dotnetSettings
                 * @memberof google.api.ClientLibrarySettings
                 * @instance
                 */
                ClientLibrarySettings.prototype.dotnetSettings = null;
    
                /**
                 * ClientLibrarySettings rubySettings.
                 * @member {google.api.IRubySettings|null|undefined} rubySettings
                 * @memberof google.api.ClientLibrarySettings
                 * @instance
                 */
                ClientLibrarySettings.prototype.rubySettings = null;
    
                /**
                 * ClientLibrarySettings goSettings.
                 * @member {google.api.IGoSettings|null|undefined} goSettings
                 * @memberof google.api.ClientLibrarySettings
                 * @instance
                 */
                ClientLibrarySettings.prototype.goSettings = null;
    
                /**
                 * Creates a new ClientLibrarySettings instance using the specified properties.
                 * @function create
                 * @memberof google.api.ClientLibrarySettings
                 * @static
                 * @param {google.api.IClientLibrarySettings=} [properties] Properties to set
                 * @returns {google.api.ClientLibrarySettings} ClientLibrarySettings instance
                 */
                ClientLibrarySettings.create = function create(properties) {
                    return new ClientLibrarySettings(properties);
                };
    
                /**
                 * Encodes the specified ClientLibrarySettings message. Does not implicitly {@link google.api.ClientLibrarySettings.verify|verify} messages.
                 * @function encode
                 * @memberof google.api.ClientLibrarySettings
                 * @static
                 * @param {google.api.IClientLibrarySettings} message ClientLibrarySettings message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                ClientLibrarySettings.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.version != null && Object.hasOwnProperty.call(message, "version"))
                        writer.uint32(/* id 1, wireType 2 =*/10).string(message.version);
                    if (message.launchStage != null && Object.hasOwnProperty.call(message, "launchStage"))
                        writer.uint32(/* id 2, wireType 0 =*/16).int32(message.launchStage);
                    if (message.restNumericEnums != null && Object.hasOwnProperty.call(message, "restNumericEnums"))
                        writer.uint32(/* id 3, wireType 0 =*/24).bool(message.restNumericEnums);
                    if (message.javaSettings != null && Object.hasOwnProperty.call(message, "javaSettings"))
                        $root.google.api.JavaSettings.encode(message.javaSettings, writer.uint32(/* id 21, wireType 2 =*/170).fork()).ldelim();
                    if (message.cppSettings != null && Object.hasOwnProperty.call(message, "cppSettings"))
                        $root.google.api.CppSettings.encode(message.cppSettings, writer.uint32(/* id 22, wireType 2 =*/178).fork()).ldelim();
                    if (message.phpSettings != null && Object.hasOwnProperty.call(message, "phpSettings"))
                        $root.google.api.PhpSettings.encode(message.phpSettings, writer.uint32(/* id 23, wireType 2 =*/186).fork()).ldelim();
                    if (message.pythonSettings != null && Object.hasOwnProperty.call(message, "pythonSettings"))
                        $root.google.api.PythonSettings.encode(message.pythonSettings, writer.uint32(/* id 24, wireType 2 =*/194).fork()).ldelim();
                    if (message.nodeSettings != null && Object.hasOwnProperty.call(message, "nodeSettings"))
                        $root.google.api.NodeSettings.encode(message.nodeSettings, writer.uint32(/* id 25, wireType 2 =*/202).fork()).ldelim();
                    if (message.dotnetSettings != null && Object.hasOwnProperty.call(message, "dotnetSettings"))
                        $root.google.api.DotnetSettings.encode(message.dotnetSettings, writer.uint32(/* id 26, wireType 2 =*/210).fork()).ldelim();
                    if (message.rubySettings != null && Object.hasOwnProperty.call(message, "rubySettings"))
                        $root.google.api.RubySettings.encode(message.rubySettings, writer.uint32(/* id 27, wireType 2 =*/218).fork()).ldelim();
                    if (message.goSettings != null && Object.hasOwnProperty.call(message, "goSettings"))
                        $root.google.api.GoSettings.encode(message.goSettings, writer.uint32(/* id 28, wireType 2 =*/226).fork()).ldelim();
                    return writer;
                };
    
                /**
                 * Encodes the specified ClientLibrarySettings message, length delimited. Does not implicitly {@link google.api.ClientLibrarySettings.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.api.ClientLibrarySettings
                 * @static
                 * @param {google.api.IClientLibrarySettings} message ClientLibrarySettings message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                ClientLibrarySettings.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a ClientLibrarySettings message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.api.ClientLibrarySettings
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.api.ClientLibrarySettings} ClientLibrarySettings
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                ClientLibrarySettings.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.api.ClientLibrarySettings();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1: {
                                message.version = reader.string();
                                break;
                            }
                        case 2: {
                                message.launchStage = reader.int32();
                                break;
                            }
                        case 3: {
                                message.restNumericEnums = reader.bool();
                                break;
                            }
                        case 21: {
                                message.javaSettings = $root.google.api.JavaSettings.decode(reader, reader.uint32());
                                break;
                            }
                        case 22: {
                                message.cppSettings = $root.google.api.CppSettings.decode(reader, reader.uint32());
                                break;
                            }
                        case 23: {
                                message.phpSettings = $root.google.api.PhpSettings.decode(reader, reader.uint32());
                                break;
                            }
                        case 24: {
                                message.pythonSettings = $root.google.api.PythonSettings.decode(reader, reader.uint32());
                                break;
                            }
                        case 25: {
                                message.nodeSettings = $root.google.api.NodeSettings.decode(reader, reader.uint32());
                                break;
                            }
                        case 26: {
                                message.dotnetSettings = $root.google.api.DotnetSettings.decode(reader, reader.uint32());
                                break;
                            }
                        case 27: {
                                message.rubySettings = $root.google.api.RubySettings.decode(reader, reader.uint32());
                                break;
                            }
                        case 28: {
                                message.goSettings = $root.google.api.GoSettings.decode(reader, reader.uint32());
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a ClientLibrarySettings message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.api.ClientLibrarySettings
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.api.ClientLibrarySettings} ClientLibrarySettings
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                ClientLibrarySettings.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a ClientLibrarySettings message.
                 * @function verify
                 * @memberof google.api.ClientLibrarySettings
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                ClientLibrarySettings.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.version != null && message.hasOwnProperty("version"))
                        if (!$util.isString(message.version))
                            return "version: string expected";
                    if (message.launchStage != null && message.hasOwnProperty("launchStage"))
                        switch (message.launchStage) {
                        default:
                            return "launchStage: enum value expected";
                        case 0:
                        case 6:
                        case 7:
                        case 1:
                        case 2:
                        case 3:
                        case 4:
                        case 5:
                            break;
                        }
                    if (message.restNumericEnums != null && message.hasOwnProperty("restNumericEnums"))
                        if (typeof message.restNumericEnums !== "boolean")
                            return "restNumericEnums: boolean expected";
                    if (message.javaSettings != null && message.hasOwnProperty("javaSettings")) {
                        var error = $root.google.api.JavaSettings.verify(message.javaSettings);
                        if (error)
                            return "javaSettings." + error;
                    }
                    if (message.cppSettings != null && message.hasOwnProperty("cppSettings")) {
                        var error = $root.google.api.CppSettings.verify(message.cppSettings);
                        if (error)
                            return "cppSettings." + error;
                    }
                    if (message.phpSettings != null && message.hasOwnProperty("phpSettings")) {
                        var error = $root.google.api.PhpSettings.verify(message.phpSettings);
                        if (error)
                            return "phpSettings." + error;
                    }
                    if (message.pythonSettings != null && message.hasOwnProperty("pythonSettings")) {
                        var error = $root.google.api.PythonSettings.verify(message.pythonSettings);
                        if (error)
                            return "pythonSettings." + error;
                    }
                    if (message.nodeSettings != null && message.hasOwnProperty("nodeSettings")) {
                        var error = $root.google.api.NodeSettings.verify(message.nodeSettings);
                        if (error)
                            return "nodeSettings." + error;
                    }
                    if (message.dotnetSettings != null && message.hasOwnProperty("dotnetSettings")) {
                        var error = $root.google.api.DotnetSettings.verify(message.dotnetSettings);
                        if (error)
                            return "dotnetSettings." + error;
                    }
                    if (message.rubySettings != null && message.hasOwnProperty("rubySettings")) {
                        var error = $root.google.api.RubySettings.verify(message.rubySettings);
                        if (error)
                            return "rubySettings." + error;
                    }
                    if (message.goSettings != null && message.hasOwnProperty("goSettings")) {
                        var error = $root.google.api.GoSettings.verify(message.goSettings);
                        if (error)
                            return "goSettings." + error;
                    }
                    return null;
                };
    
                /**
                 * Creates a ClientLibrarySettings message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.api.ClientLibrarySettings
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.api.ClientLibrarySettings} ClientLibrarySettings
                 */
                ClientLibrarySettings.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.api.ClientLibrarySettings)
                        return object;
                    var message = new $root.google.api.ClientLibrarySettings();
                    if (object.version != null)
                        message.version = String(object.version);
                    switch (object.launchStage) {
                    default:
                        if (typeof object.launchStage === "number") {
                            message.launchStage = object.launchStage;
                            break;
                        }
                        break;
                    case "LAUNCH_STAGE_UNSPECIFIED":
                    case 0:
                        message.launchStage = 0;
                        break;
                    case "UNIMPLEMENTED":
                    case 6:
                        message.launchStage = 6;
                        break;
                    case "PRELAUNCH":
                    case 7:
                        message.launchStage = 7;
                        break;
                    case "EARLY_ACCESS":
                    case 1:
                        message.launchStage = 1;
                        break;
                    case "ALPHA":
                    case 2:
                        message.launchStage = 2;
                        break;
                    case "BETA":
                    case 3:
                        message.launchStage = 3;
                        break;
                    case "GA":
                    case 4:
                        message.launchStage = 4;
                        break;
                    case "DEPRECATED":
                    case 5:
                        message.launchStage = 5;
                        break;
                    }
                    if (object.restNumericEnums != null)
                        message.restNumericEnums = Boolean(object.restNumericEnums);
                    if (object.javaSettings != null) {
                        if (typeof object.javaSettings !== "object")
                            throw TypeError(".google.api.ClientLibrarySettings.javaSettings: object expected");
                        message.javaSettings = $root.google.api.JavaSettings.fromObject(object.javaSettings);
                    }
                    if (object.cppSettings != null) {
                        if (typeof object.cppSettings !== "object")
                            throw TypeError(".google.api.ClientLibrarySettings.cppSettings: object expected");
                        message.cppSettings = $root.google.api.CppSettings.fromObject(object.cppSettings);
                    }
                    if (object.phpSettings != null) {
                        if (typeof object.phpSettings !== "object")
                            throw TypeError(".google.api.ClientLibrarySettings.phpSettings: object expected");
                        message.phpSettings = $root.google.api.PhpSettings.fromObject(object.phpSettings);
                    }
                    if (object.pythonSettings != null) {
                        if (typeof object.pythonSettings !== "object")
                            throw TypeError(".google.api.ClientLibrarySettings.pythonSettings: object expected");
                        message.pythonSettings = $root.google.api.PythonSettings.fromObject(object.pythonSettings);
                    }
                    if (object.nodeSettings != null) {
                        if (typeof object.nodeSettings !== "object")
                            throw TypeError(".google.api.ClientLibrarySettings.nodeSettings: object expected");
                        message.nodeSettings = $root.google.api.NodeSettings.fromObject(object.nodeSettings);
                    }
                    if (object.dotnetSettings != null) {
                        if (typeof object.dotnetSettings !== "object")
                            throw TypeError(".google.api.ClientLibrarySettings.dotnetSettings: object expected");
                        message.dotnetSettings = $root.google.api.DotnetSettings.fromObject(object.dotnetSettings);
                    }
                    if (object.rubySettings != null) {
                        if (typeof object.rubySettings !== "object")
                            throw TypeError(".google.api.ClientLibrarySettings.rubySettings: object expected");
                        message.rubySettings = $root.google.api.RubySettings.fromObject(object.rubySettings);
                    }
                    if (object.goSettings != null) {
                        if (typeof object.goSettings !== "object")
                            throw TypeError(".google.api.ClientLibrarySettings.goSettings: object expected");
                        message.goSettings = $root.google.api.GoSettings.fromObject(object.goSettings);
                    }
                    return message;
                };
    
                /**
                 * Creates a plain object from a ClientLibrarySettings message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.api.ClientLibrarySettings
                 * @static
                 * @param {google.api.ClientLibrarySettings} message ClientLibrarySettings
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                ClientLibrarySettings.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.defaults) {
                        object.version = "";
                        object.launchStage = options.enums === String ? "LAUNCH_STAGE_UNSPECIFIED" : 0;
                        object.restNumericEnums = false;
                        object.javaSettings = null;
                        object.cppSettings = null;
                        object.phpSettings = null;
                        object.pythonSettings = null;
                        object.nodeSettings = null;
                        object.dotnetSettings = null;
                        object.rubySettings = null;
                        object.goSettings = null;
                    }
                    if (message.version != null && message.hasOwnProperty("version"))
                        object.version = message.version;
                    if (message.launchStage != null && message.hasOwnProperty("launchStage"))
                        object.launchStage = options.enums === String ? $root.google.api.LaunchStage[message.launchStage] === undefined ? message.launchStage : $root.google.api.LaunchStage[message.launchStage] : message.launchStage;
                    if (message.restNumericEnums != null && message.hasOwnProperty("restNumericEnums"))
                        object.restNumericEnums = message.restNumericEnums;
                    if (message.javaSettings != null && message.hasOwnProperty("javaSettings"))
                        object.javaSettings = $root.google.api.JavaSettings.toObject(message.javaSettings, options);
                    if (message.cppSettings != null && message.hasOwnProperty("cppSettings"))
                        object.cppSettings = $root.google.api.CppSettings.toObject(message.cppSettings, options);
                    if (message.phpSettings != null && message.hasOwnProperty("phpSettings"))
                        object.phpSettings = $root.google.api.PhpSettings.toObject(message.phpSettings, options);
                    if (message.pythonSettings != null && message.hasOwnProperty("pythonSettings"))
                        object.pythonSettings = $root.google.api.PythonSettings.toObject(message.pythonSettings, options);
                    if (message.nodeSettings != null && message.hasOwnProperty("nodeSettings"))
                        object.nodeSettings = $root.google.api.NodeSettings.toObject(message.nodeSettings, options);
                    if (message.dotnetSettings != null && message.hasOwnProperty("dotnetSettings"))
                        object.dotnetSettings = $root.google.api.DotnetSettings.toObject(message.dotnetSettings, options);
                    if (message.rubySettings != null && message.hasOwnProperty("rubySettings"))
                        object.rubySettings = $root.google.api.RubySettings.toObject(message.rubySettings, options);
                    if (message.goSettings != null && message.hasOwnProperty("goSettings"))
                        object.goSettings = $root.google.api.GoSettings.toObject(message.goSettings, options);
                    return object;
                };
    
                /**
                 * Converts this ClientLibrarySettings to JSON.
                 * @function toJSON
                 * @memberof google.api.ClientLibrarySettings
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                ClientLibrarySettings.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for ClientLibrarySettings
                 * @function getTypeUrl
                 * @memberof google.api.ClientLibrarySettings
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                ClientLibrarySettings.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.api.ClientLibrarySettings";
                };
    
                return ClientLibrarySettings;
            })();
    
            api.Publishing = (function() {
    
                /**
                 * Properties of a Publishing.
                 * @memberof google.api
                 * @interface IPublishing
                 * @property {Array.<google.api.IMethodSettings>|null} [methodSettings] Publishing methodSettings
                 * @property {string|null} [newIssueUri] Publishing newIssueUri
                 * @property {string|null} [documentationUri] Publishing documentationUri
                 * @property {string|null} [apiShortName] Publishing apiShortName
                 * @property {string|null} [githubLabel] Publishing githubLabel
                 * @property {Array.<string>|null} [codeownerGithubTeams] Publishing codeownerGithubTeams
                 * @property {string|null} [docTagPrefix] Publishing docTagPrefix
                 * @property {google.api.ClientLibraryOrganization|null} [organization] Publishing organization
                 * @property {Array.<google.api.IClientLibrarySettings>|null} [librarySettings] Publishing librarySettings
                 */
    
                /**
                 * Constructs a new Publishing.
                 * @memberof google.api
                 * @classdesc Represents a Publishing.
                 * @implements IPublishing
                 * @constructor
                 * @param {google.api.IPublishing=} [properties] Properties to set
                 */
                function Publishing(properties) {
                    this.methodSettings = [];
                    this.codeownerGithubTeams = [];
                    this.librarySettings = [];
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * Publishing methodSettings.
                 * @member {Array.<google.api.IMethodSettings>} methodSettings
                 * @memberof google.api.Publishing
                 * @instance
                 */
                Publishing.prototype.methodSettings = $util.emptyArray;
    
                /**
                 * Publishing newIssueUri.
                 * @member {string} newIssueUri
                 * @memberof google.api.Publishing
                 * @instance
                 */
                Publishing.prototype.newIssueUri = "";
    
                /**
                 * Publishing documentationUri.
                 * @member {string} documentationUri
                 * @memberof google.api.Publishing
                 * @instance
                 */
                Publishing.prototype.documentationUri = "";
    
                /**
                 * Publishing apiShortName.
                 * @member {string} apiShortName
                 * @memberof google.api.Publishing
                 * @instance
                 */
                Publishing.prototype.apiShortName = "";
    
                /**
                 * Publishing githubLabel.
                 * @member {string} githubLabel
                 * @memberof google.api.Publishing
                 * @instance
                 */
                Publishing.prototype.githubLabel = "";
    
                /**
                 * Publishing codeownerGithubTeams.
                 * @member {Array.<string>} codeownerGithubTeams
                 * @memberof google.api.Publishing
                 * @instance
                 */
                Publishing.prototype.codeownerGithubTeams = $util.emptyArray;
    
                /**
                 * Publishing docTagPrefix.
                 * @member {string} docTagPrefix
                 * @memberof google.api.Publishing
                 * @instance
                 */
                Publishing.prototype.docTagPrefix = "";
    
                /**
                 * Publishing organization.
                 * @member {google.api.ClientLibraryOrganization} organization
                 * @memberof google.api.Publishing
                 * @instance
                 */
                Publishing.prototype.organization = 0;
    
                /**
                 * Publishing librarySettings.
                 * @member {Array.<google.api.IClientLibrarySettings>} librarySettings
                 * @memberof google.api.Publishing
                 * @instance
                 */
                Publishing.prototype.librarySettings = $util.emptyArray;
    
                /**
                 * Creates a new Publishing instance using the specified properties.
                 * @function create
                 * @memberof google.api.Publishing
                 * @static
                 * @param {google.api.IPublishing=} [properties] Properties to set
                 * @returns {google.api.Publishing} Publishing instance
                 */
                Publishing.create = function create(properties) {
                    return new Publishing(properties);
                };
    
                /**
                 * Encodes the specified Publishing message. Does not implicitly {@link google.api.Publishing.verify|verify} messages.
                 * @function encode
                 * @memberof google.api.Publishing
                 * @static
                 * @param {google.api.IPublishing} message Publishing message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                Publishing.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.methodSettings != null && message.methodSettings.length)
                        for (var i = 0; i < message.methodSettings.length; ++i)
                            $root.google.api.MethodSettings.encode(message.methodSettings[i], writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                    if (message.newIssueUri != null && Object.hasOwnProperty.call(message, "newIssueUri"))
                        writer.uint32(/* id 101, wireType 2 =*/810).string(message.newIssueUri);
                    if (message.documentationUri != null && Object.hasOwnProperty.call(message, "documentationUri"))
                        writer.uint32(/* id 102, wireType 2 =*/818).string(message.documentationUri);
                    if (message.apiShortName != null && Object.hasOwnProperty.call(message, "apiShortName"))
                        writer.uint32(/* id 103, wireType 2 =*/826).string(message.apiShortName);
                    if (message.githubLabel != null && Object.hasOwnProperty.call(message, "githubLabel"))
                        writer.uint32(/* id 104, wireType 2 =*/834).string(message.githubLabel);
                    if (message.codeownerGithubTeams != null && message.codeownerGithubTeams.length)
                        for (var i = 0; i < message.codeownerGithubTeams.length; ++i)
                            writer.uint32(/* id 105, wireType 2 =*/842).string(message.codeownerGithubTeams[i]);
                    if (message.docTagPrefix != null && Object.hasOwnProperty.call(message, "docTagPrefix"))
                        writer.uint32(/* id 106, wireType 2 =*/850).string(message.docTagPrefix);
                    if (message.organization != null && Object.hasOwnProperty.call(message, "organization"))
                        writer.uint32(/* id 107, wireType 0 =*/856).int32(message.organization);
                    if (message.librarySettings != null && message.librarySettings.length)
                        for (var i = 0; i < message.librarySettings.length; ++i)
                            $root.google.api.ClientLibrarySettings.encode(message.librarySettings[i], writer.uint32(/* id 109, wireType 2 =*/874).fork()).ldelim();
                    return writer;
                };
    
                /**
                 * Encodes the specified Publishing message, length delimited. Does not implicitly {@link google.api.Publishing.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.api.Publishing
                 * @static
                 * @param {google.api.IPublishing} message Publishing message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                Publishing.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a Publishing message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.api.Publishing
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.api.Publishing} Publishing
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                Publishing.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.api.Publishing();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 2: {
                                if (!(message.methodSettings && message.methodSettings.length))
                                    message.methodSettings = [];
                                message.methodSettings.push($root.google.api.MethodSettings.decode(reader, reader.uint32()));
                                break;
                            }
                        case 101: {
                                message.newIssueUri = reader.string();
                                break;
                            }
                        case 102: {
                                message.documentationUri = reader.string();
                                break;
                            }
                        case 103: {
                                message.apiShortName = reader.string();
                                break;
                            }
                        case 104: {
                                message.githubLabel = reader.string();
                                break;
                            }
                        case 105: {
                                if (!(message.codeownerGithubTeams && message.codeownerGithubTeams.length))
                                    message.codeownerGithubTeams = [];
                                message.codeownerGithubTeams.push(reader.string());
                                break;
                            }
                        case 106: {
                                message.docTagPrefix = reader.string();
                                break;
                            }
                        case 107: {
                                message.organization = reader.int32();
                                break;
                            }
                        case 109: {
                                if (!(message.librarySettings && message.librarySettings.length))
                                    message.librarySettings = [];
                                message.librarySettings.push($root.google.api.ClientLibrarySettings.decode(reader, reader.uint32()));
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a Publishing message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.api.Publishing
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.api.Publishing} Publishing
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                Publishing.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a Publishing message.
                 * @function verify
                 * @memberof google.api.Publishing
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                Publishing.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.methodSettings != null && message.hasOwnProperty("methodSettings")) {
                        if (!Array.isArray(message.methodSettings))
                            return "methodSettings: array expected";
                        for (var i = 0; i < message.methodSettings.length; ++i) {
                            var error = $root.google.api.MethodSettings.verify(message.methodSettings[i]);
                            if (error)
                                return "methodSettings." + error;
                        }
                    }
                    if (message.newIssueUri != null && message.hasOwnProperty("newIssueUri"))
                        if (!$util.isString(message.newIssueUri))
                            return "newIssueUri: string expected";
                    if (message.documentationUri != null && message.hasOwnProperty("documentationUri"))
                        if (!$util.isString(message.documentationUri))
                            return "documentationUri: string expected";
                    if (message.apiShortName != null && message.hasOwnProperty("apiShortName"))
                        if (!$util.isString(message.apiShortName))
                            return "apiShortName: string expected";
                    if (message.githubLabel != null && message.hasOwnProperty("githubLabel"))
                        if (!$util.isString(message.githubLabel))
                            return "githubLabel: string expected";
                    if (message.codeownerGithubTeams != null && message.hasOwnProperty("codeownerGithubTeams")) {
                        if (!Array.isArray(message.codeownerGithubTeams))
                            return "codeownerGithubTeams: array expected";
                        for (var i = 0; i < message.codeownerGithubTeams.length; ++i)
                            if (!$util.isString(message.codeownerGithubTeams[i]))
                                return "codeownerGithubTeams: string[] expected";
                    }
                    if (message.docTagPrefix != null && message.hasOwnProperty("docTagPrefix"))
                        if (!$util.isString(message.docTagPrefix))
                            return "docTagPrefix: string expected";
                    if (message.organization != null && message.hasOwnProperty("organization"))
                        switch (message.organization) {
                        default:
                            return "organization: enum value expected";
                        case 0:
                        case 1:
                        case 2:
                        case 3:
                        case 4:
                            break;
                        }
                    if (message.librarySettings != null && message.hasOwnProperty("librarySettings")) {
                        if (!Array.isArray(message.librarySettings))
                            return "librarySettings: array expected";
                        for (var i = 0; i < message.librarySettings.length; ++i) {
                            var error = $root.google.api.ClientLibrarySettings.verify(message.librarySettings[i]);
                            if (error)
                                return "librarySettings." + error;
                        }
                    }
                    return null;
                };
    
                /**
                 * Creates a Publishing message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.api.Publishing
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.api.Publishing} Publishing
                 */
                Publishing.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.api.Publishing)
                        return object;
                    var message = new $root.google.api.Publishing();
                    if (object.methodSettings) {
                        if (!Array.isArray(object.methodSettings))
                            throw TypeError(".google.api.Publishing.methodSettings: array expected");
                        message.methodSettings = [];
                        for (var i = 0; i < object.methodSettings.length; ++i) {
                            if (typeof object.methodSettings[i] !== "object")
                                throw TypeError(".google.api.Publishing.methodSettings: object expected");
                            message.methodSettings[i] = $root.google.api.MethodSettings.fromObject(object.methodSettings[i]);
                        }
                    }
                    if (object.newIssueUri != null)
                        message.newIssueUri = String(object.newIssueUri);
                    if (object.documentationUri != null)
                        message.documentationUri = String(object.documentationUri);
                    if (object.apiShortName != null)
                        message.apiShortName = String(object.apiShortName);
                    if (object.githubLabel != null)
                        message.githubLabel = String(object.githubLabel);
                    if (object.codeownerGithubTeams) {
                        if (!Array.isArray(object.codeownerGithubTeams))
                            throw TypeError(".google.api.Publishing.codeownerGithubTeams: array expected");
                        message.codeownerGithubTeams = [];
                        for (var i = 0; i < object.codeownerGithubTeams.length; ++i)
                            message.codeownerGithubTeams[i] = String(object.codeownerGithubTeams[i]);
                    }
                    if (object.docTagPrefix != null)
                        message.docTagPrefix = String(object.docTagPrefix);
                    switch (object.organization) {
                    default:
                        if (typeof object.organization === "number") {
                            message.organization = object.organization;
                            break;
                        }
                        break;
                    case "CLIENT_LIBRARY_ORGANIZATION_UNSPECIFIED":
                    case 0:
                        message.organization = 0;
                        break;
                    case "CLOUD":
                    case 1:
                        message.organization = 1;
                        break;
                    case "ADS":
                    case 2:
                        message.organization = 2;
                        break;
                    case "PHOTOS":
                    case 3:
                        message.organization = 3;
                        break;
                    case "STREET_VIEW":
                    case 4:
                        message.organization = 4;
                        break;
                    }
                    if (object.librarySettings) {
                        if (!Array.isArray(object.librarySettings))
                            throw TypeError(".google.api.Publishing.librarySettings: array expected");
                        message.librarySettings = [];
                        for (var i = 0; i < object.librarySettings.length; ++i) {
                            if (typeof object.librarySettings[i] !== "object")
                                throw TypeError(".google.api.Publishing.librarySettings: object expected");
                            message.librarySettings[i] = $root.google.api.ClientLibrarySettings.fromObject(object.librarySettings[i]);
                        }
                    }
                    return message;
                };
    
                /**
                 * Creates a plain object from a Publishing message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.api.Publishing
                 * @static
                 * @param {google.api.Publishing} message Publishing
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                Publishing.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.arrays || options.defaults) {
                        object.methodSettings = [];
                        object.codeownerGithubTeams = [];
                        object.librarySettings = [];
                    }
                    if (options.defaults) {
                        object.newIssueUri = "";
                        object.documentationUri = "";
                        object.apiShortName = "";
                        object.githubLabel = "";
                        object.docTagPrefix = "";
                        object.organization = options.enums === String ? "CLIENT_LIBRARY_ORGANIZATION_UNSPECIFIED" : 0;
                    }
                    if (message.methodSettings && message.methodSettings.length) {
                        object.methodSettings = [];
                        for (var j = 0; j < message.methodSettings.length; ++j)
                            object.methodSettings[j] = $root.google.api.MethodSettings.toObject(message.methodSettings[j], options);
                    }
                    if (message.newIssueUri != null && message.hasOwnProperty("newIssueUri"))
                        object.newIssueUri = message.newIssueUri;
                    if (message.documentationUri != null && message.hasOwnProperty("documentationUri"))
                        object.documentationUri = message.documentationUri;
                    if (message.apiShortName != null && message.hasOwnProperty("apiShortName"))
                        object.apiShortName = message.apiShortName;
                    if (message.githubLabel != null && message.hasOwnProperty("githubLabel"))
                        object.githubLabel = message.githubLabel;
                    if (message.codeownerGithubTeams && message.codeownerGithubTeams.length) {
                        object.codeownerGithubTeams = [];
                        for (var j = 0; j < message.codeownerGithubTeams.length; ++j)
                            object.codeownerGithubTeams[j] = message.codeownerGithubTeams[j];
                    }
                    if (message.docTagPrefix != null && message.hasOwnProperty("docTagPrefix"))
                        object.docTagPrefix = message.docTagPrefix;
                    if (message.organization != null && message.hasOwnProperty("organization"))
                        object.organization = options.enums === String ? $root.google.api.ClientLibraryOrganization[message.organization] === undefined ? message.organization : $root.google.api.ClientLibraryOrganization[message.organization] : message.organization;
                    if (message.librarySettings && message.librarySettings.length) {
                        object.librarySettings = [];
                        for (var j = 0; j < message.librarySettings.length; ++j)
                            object.librarySettings[j] = $root.google.api.ClientLibrarySettings.toObject(message.librarySettings[j], options);
                    }
                    return object;
                };
    
                /**
                 * Converts this Publishing to JSON.
                 * @function toJSON
                 * @memberof google.api.Publishing
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                Publishing.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for Publishing
                 * @function getTypeUrl
                 * @memberof google.api.Publishing
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                Publishing.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.api.Publishing";
                };
    
                return Publishing;
            })();
    
            api.JavaSettings = (function() {
    
                /**
                 * Properties of a JavaSettings.
                 * @memberof google.api
                 * @interface IJavaSettings
                 * @property {string|null} [libraryPackage] JavaSettings libraryPackage
                 * @property {Object.<string,string>|null} [serviceClassNames] JavaSettings serviceClassNames
                 * @property {google.api.ICommonLanguageSettings|null} [common] JavaSettings common
                 */
    
                /**
                 * Constructs a new JavaSettings.
                 * @memberof google.api
                 * @classdesc Represents a JavaSettings.
                 * @implements IJavaSettings
                 * @constructor
                 * @param {google.api.IJavaSettings=} [properties] Properties to set
                 */
                function JavaSettings(properties) {
                    this.serviceClassNames = {};
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * JavaSettings libraryPackage.
                 * @member {string} libraryPackage
                 * @memberof google.api.JavaSettings
                 * @instance
                 */
                JavaSettings.prototype.libraryPackage = "";
    
                /**
                 * JavaSettings serviceClassNames.
                 * @member {Object.<string,string>} serviceClassNames
                 * @memberof google.api.JavaSettings
                 * @instance
                 */
                JavaSettings.prototype.serviceClassNames = $util.emptyObject;
    
                /**
                 * JavaSettings common.
                 * @member {google.api.ICommonLanguageSettings|null|undefined} common
                 * @memberof google.api.JavaSettings
                 * @instance
                 */
                JavaSettings.prototype.common = null;
    
                /**
                 * Creates a new JavaSettings instance using the specified properties.
                 * @function create
                 * @memberof google.api.JavaSettings
                 * @static
                 * @param {google.api.IJavaSettings=} [properties] Properties to set
                 * @returns {google.api.JavaSettings} JavaSettings instance
                 */
                JavaSettings.create = function create(properties) {
                    return new JavaSettings(properties);
                };
    
                /**
                 * Encodes the specified JavaSettings message. Does not implicitly {@link google.api.JavaSettings.verify|verify} messages.
                 * @function encode
                 * @memberof google.api.JavaSettings
                 * @static
                 * @param {google.api.IJavaSettings} message JavaSettings message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                JavaSettings.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.libraryPackage != null && Object.hasOwnProperty.call(message, "libraryPackage"))
                        writer.uint32(/* id 1, wireType 2 =*/10).string(message.libraryPackage);
                    if (message.serviceClassNames != null && Object.hasOwnProperty.call(message, "serviceClassNames"))
                        for (var keys = Object.keys(message.serviceClassNames), i = 0; i < keys.length; ++i)
                            writer.uint32(/* id 2, wireType 2 =*/18).fork().uint32(/* id 1, wireType 2 =*/10).string(keys[i]).uint32(/* id 2, wireType 2 =*/18).string(message.serviceClassNames[keys[i]]).ldelim();
                    if (message.common != null && Object.hasOwnProperty.call(message, "common"))
                        $root.google.api.CommonLanguageSettings.encode(message.common, writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();
                    return writer;
                };
    
                /**
                 * Encodes the specified JavaSettings message, length delimited. Does not implicitly {@link google.api.JavaSettings.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.api.JavaSettings
                 * @static
                 * @param {google.api.IJavaSettings} message JavaSettings message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                JavaSettings.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a JavaSettings message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.api.JavaSettings
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.api.JavaSettings} JavaSettings
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                JavaSettings.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.api.JavaSettings(), key, value;
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1: {
                                message.libraryPackage = reader.string();
                                break;
                            }
                        case 2: {
                                if (message.serviceClassNames === $util.emptyObject)
                                    message.serviceClassNames = {};
                                var end2 = reader.uint32() + reader.pos;
                                key = "";
                                value = "";
                                while (reader.pos < end2) {
                                    var tag2 = reader.uint32();
                                    switch (tag2 >>> 3) {
                                    case 1:
                                        key = reader.string();
                                        break;
                                    case 2:
                                        value = reader.string();
                                        break;
                                    default:
                                        reader.skipType(tag2 & 7);
                                        break;
                                    }
                                }
                                message.serviceClassNames[key] = value;
                                break;
                            }
                        case 3: {
                                message.common = $root.google.api.CommonLanguageSettings.decode(reader, reader.uint32());
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a JavaSettings message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.api.JavaSettings
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.api.JavaSettings} JavaSettings
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                JavaSettings.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a JavaSettings message.
                 * @function verify
                 * @memberof google.api.JavaSettings
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                JavaSettings.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.libraryPackage != null && message.hasOwnProperty("libraryPackage"))
                        if (!$util.isString(message.libraryPackage))
                            return "libraryPackage: string expected";
                    if (message.serviceClassNames != null && message.hasOwnProperty("serviceClassNames")) {
                        if (!$util.isObject(message.serviceClassNames))
                            return "serviceClassNames: object expected";
                        var key = Object.keys(message.serviceClassNames);
                        for (var i = 0; i < key.length; ++i)
                            if (!$util.isString(message.serviceClassNames[key[i]]))
                                return "serviceClassNames: string{k:string} expected";
                    }
                    if (message.common != null && message.hasOwnProperty("common")) {
                        var error = $root.google.api.CommonLanguageSettings.verify(message.common);
                        if (error)
                            return "common." + error;
                    }
                    return null;
                };
    
                /**
                 * Creates a JavaSettings message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.api.JavaSettings
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.api.JavaSettings} JavaSettings
                 */
                JavaSettings.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.api.JavaSettings)
                        return object;
                    var message = new $root.google.api.JavaSettings();
                    if (object.libraryPackage != null)
                        message.libraryPackage = String(object.libraryPackage);
                    if (object.serviceClassNames) {
                        if (typeof object.serviceClassNames !== "object")
                            throw TypeError(".google.api.JavaSettings.serviceClassNames: object expected");
                        message.serviceClassNames = {};
                        for (var keys = Object.keys(object.serviceClassNames), i = 0; i < keys.length; ++i)
                            message.serviceClassNames[keys[i]] = String(object.serviceClassNames[keys[i]]);
                    }
                    if (object.common != null) {
                        if (typeof object.common !== "object")
                            throw TypeError(".google.api.JavaSettings.common: object expected");
                        message.common = $root.google.api.CommonLanguageSettings.fromObject(object.common);
                    }
                    return message;
                };
    
                /**
                 * Creates a plain object from a JavaSettings message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.api.JavaSettings
                 * @static
                 * @param {google.api.JavaSettings} message JavaSettings
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                JavaSettings.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.objects || options.defaults)
                        object.serviceClassNames = {};
                    if (options.defaults) {
                        object.libraryPackage = "";
                        object.common = null;
                    }
                    if (message.libraryPackage != null && message.hasOwnProperty("libraryPackage"))
                        object.libraryPackage = message.libraryPackage;
                    var keys2;
                    if (message.serviceClassNames && (keys2 = Object.keys(message.serviceClassNames)).length) {
                        object.serviceClassNames = {};
                        for (var j = 0; j < keys2.length; ++j)
                            object.serviceClassNames[keys2[j]] = message.serviceClassNames[keys2[j]];
                    }
                    if (message.common != null && message.hasOwnProperty("common"))
                        object.common = $root.google.api.CommonLanguageSettings.toObject(message.common, options);
                    return object;
                };
    
                /**
                 * Converts this JavaSettings to JSON.
                 * @function toJSON
                 * @memberof google.api.JavaSettings
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                JavaSettings.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for JavaSettings
                 * @function getTypeUrl
                 * @memberof google.api.JavaSettings
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                JavaSettings.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.api.JavaSettings";
                };
    
                return JavaSettings;
            })();
    
            api.CppSettings = (function() {
    
                /**
                 * Properties of a CppSettings.
                 * @memberof google.api
                 * @interface ICppSettings
                 * @property {google.api.ICommonLanguageSettings|null} [common] CppSettings common
                 */
    
                /**
                 * Constructs a new CppSettings.
                 * @memberof google.api
                 * @classdesc Represents a CppSettings.
                 * @implements ICppSettings
                 * @constructor
                 * @param {google.api.ICppSettings=} [properties] Properties to set
                 */
                function CppSettings(properties) {
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * CppSettings common.
                 * @member {google.api.ICommonLanguageSettings|null|undefined} common
                 * @memberof google.api.CppSettings
                 * @instance
                 */
                CppSettings.prototype.common = null;
    
                /**
                 * Creates a new CppSettings instance using the specified properties.
                 * @function create
                 * @memberof google.api.CppSettings
                 * @static
                 * @param {google.api.ICppSettings=} [properties] Properties to set
                 * @returns {google.api.CppSettings} CppSettings instance
                 */
                CppSettings.create = function create(properties) {
                    return new CppSettings(properties);
                };
    
                /**
                 * Encodes the specified CppSettings message. Does not implicitly {@link google.api.CppSettings.verify|verify} messages.
                 * @function encode
                 * @memberof google.api.CppSettings
                 * @static
                 * @param {google.api.ICppSettings} message CppSettings message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                CppSettings.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.common != null && Object.hasOwnProperty.call(message, "common"))
                        $root.google.api.CommonLanguageSettings.encode(message.common, writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                    return writer;
                };
    
                /**
                 * Encodes the specified CppSettings message, length delimited. Does not implicitly {@link google.api.CppSettings.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.api.CppSettings
                 * @static
                 * @param {google.api.ICppSettings} message CppSettings message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                CppSettings.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a CppSettings message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.api.CppSettings
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.api.CppSettings} CppSettings
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                CppSettings.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.api.CppSettings();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1: {
                                message.common = $root.google.api.CommonLanguageSettings.decode(reader, reader.uint32());
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a CppSettings message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.api.CppSettings
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.api.CppSettings} CppSettings
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                CppSettings.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a CppSettings message.
                 * @function verify
                 * @memberof google.api.CppSettings
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                CppSettings.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.common != null && message.hasOwnProperty("common")) {
                        var error = $root.google.api.CommonLanguageSettings.verify(message.common);
                        if (error)
                            return "common." + error;
                    }
                    return null;
                };
    
                /**
                 * Creates a CppSettings message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.api.CppSettings
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.api.CppSettings} CppSettings
                 */
                CppSettings.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.api.CppSettings)
                        return object;
                    var message = new $root.google.api.CppSettings();
                    if (object.common != null) {
                        if (typeof object.common !== "object")
                            throw TypeError(".google.api.CppSettings.common: object expected");
                        message.common = $root.google.api.CommonLanguageSettings.fromObject(object.common);
                    }
                    return message;
                };
    
                /**
                 * Creates a plain object from a CppSettings message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.api.CppSettings
                 * @static
                 * @param {google.api.CppSettings} message CppSettings
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                CppSettings.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.defaults)
                        object.common = null;
                    if (message.common != null && message.hasOwnProperty("common"))
                        object.common = $root.google.api.CommonLanguageSettings.toObject(message.common, options);
                    return object;
                };
    
                /**
                 * Converts this CppSettings to JSON.
                 * @function toJSON
                 * @memberof google.api.CppSettings
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                CppSettings.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for CppSettings
                 * @function getTypeUrl
                 * @memberof google.api.CppSettings
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                CppSettings.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.api.CppSettings";
                };
    
                return CppSettings;
            })();
    
            api.PhpSettings = (function() {
    
                /**
                 * Properties of a PhpSettings.
                 * @memberof google.api
                 * @interface IPhpSettings
                 * @property {google.api.ICommonLanguageSettings|null} [common] PhpSettings common
                 */
    
                /**
                 * Constructs a new PhpSettings.
                 * @memberof google.api
                 * @classdesc Represents a PhpSettings.
                 * @implements IPhpSettings
                 * @constructor
                 * @param {google.api.IPhpSettings=} [properties] Properties to set
                 */
                function PhpSettings(properties) {
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * PhpSettings common.
                 * @member {google.api.ICommonLanguageSettings|null|undefined} common
                 * @memberof google.api.PhpSettings
                 * @instance
                 */
                PhpSettings.prototype.common = null;
    
                /**
                 * Creates a new PhpSettings instance using the specified properties.
                 * @function create
                 * @memberof google.api.PhpSettings
                 * @static
                 * @param {google.api.IPhpSettings=} [properties] Properties to set
                 * @returns {google.api.PhpSettings} PhpSettings instance
                 */
                PhpSettings.create = function create(properties) {
                    return new PhpSettings(properties);
                };
    
                /**
                 * Encodes the specified PhpSettings message. Does not implicitly {@link google.api.PhpSettings.verify|verify} messages.
                 * @function encode
                 * @memberof google.api.PhpSettings
                 * @static
                 * @param {google.api.IPhpSettings} message PhpSettings message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                PhpSettings.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.common != null && Object.hasOwnProperty.call(message, "common"))
                        $root.google.api.CommonLanguageSettings.encode(message.common, writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                    return writer;
                };
    
                /**
                 * Encodes the specified PhpSettings message, length delimited. Does not implicitly {@link google.api.PhpSettings.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.api.PhpSettings
                 * @static
                 * @param {google.api.IPhpSettings} message PhpSettings message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                PhpSettings.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a PhpSettings message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.api.PhpSettings
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.api.PhpSettings} PhpSettings
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                PhpSettings.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.api.PhpSettings();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1: {
                                message.common = $root.google.api.CommonLanguageSettings.decode(reader, reader.uint32());
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a PhpSettings message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.api.PhpSettings
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.api.PhpSettings} PhpSettings
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                PhpSettings.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a PhpSettings message.
                 * @function verify
                 * @memberof google.api.PhpSettings
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                PhpSettings.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.common != null && message.hasOwnProperty("common")) {
                        var error = $root.google.api.CommonLanguageSettings.verify(message.common);
                        if (error)
                            return "common." + error;
                    }
                    return null;
                };
    
                /**
                 * Creates a PhpSettings message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.api.PhpSettings
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.api.PhpSettings} PhpSettings
                 */
                PhpSettings.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.api.PhpSettings)
                        return object;
                    var message = new $root.google.api.PhpSettings();
                    if (object.common != null) {
                        if (typeof object.common !== "object")
                            throw TypeError(".google.api.PhpSettings.common: object expected");
                        message.common = $root.google.api.CommonLanguageSettings.fromObject(object.common);
                    }
                    return message;
                };
    
                /**
                 * Creates a plain object from a PhpSettings message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.api.PhpSettings
                 * @static
                 * @param {google.api.PhpSettings} message PhpSettings
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                PhpSettings.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.defaults)
                        object.common = null;
                    if (message.common != null && message.hasOwnProperty("common"))
                        object.common = $root.google.api.CommonLanguageSettings.toObject(message.common, options);
                    return object;
                };
    
                /**
                 * Converts this PhpSettings to JSON.
                 * @function toJSON
                 * @memberof google.api.PhpSettings
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                PhpSettings.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for PhpSettings
                 * @function getTypeUrl
                 * @memberof google.api.PhpSettings
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                PhpSettings.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.api.PhpSettings";
                };
    
                return PhpSettings;
            })();
    
            api.PythonSettings = (function() {
    
                /**
                 * Properties of a PythonSettings.
                 * @memberof google.api
                 * @interface IPythonSettings
                 * @property {google.api.ICommonLanguageSettings|null} [common] PythonSettings common
                 */
    
                /**
                 * Constructs a new PythonSettings.
                 * @memberof google.api
                 * @classdesc Represents a PythonSettings.
                 * @implements IPythonSettings
                 * @constructor
                 * @param {google.api.IPythonSettings=} [properties] Properties to set
                 */
                function PythonSettings(properties) {
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * PythonSettings common.
                 * @member {google.api.ICommonLanguageSettings|null|undefined} common
                 * @memberof google.api.PythonSettings
                 * @instance
                 */
                PythonSettings.prototype.common = null;
    
                /**
                 * Creates a new PythonSettings instance using the specified properties.
                 * @function create
                 * @memberof google.api.PythonSettings
                 * @static
                 * @param {google.api.IPythonSettings=} [properties] Properties to set
                 * @returns {google.api.PythonSettings} PythonSettings instance
                 */
                PythonSettings.create = function create(properties) {
                    return new PythonSettings(properties);
                };
    
                /**
                 * Encodes the specified PythonSettings message. Does not implicitly {@link google.api.PythonSettings.verify|verify} messages.
                 * @function encode
                 * @memberof google.api.PythonSettings
                 * @static
                 * @param {google.api.IPythonSettings} message PythonSettings message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                PythonSettings.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.common != null && Object.hasOwnProperty.call(message, "common"))
                        $root.google.api.CommonLanguageSettings.encode(message.common, writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                    return writer;
                };
    
                /**
                 * Encodes the specified PythonSettings message, length delimited. Does not implicitly {@link google.api.PythonSettings.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.api.PythonSettings
                 * @static
                 * @param {google.api.IPythonSettings} message PythonSettings message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                PythonSettings.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a PythonSettings message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.api.PythonSettings
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.api.PythonSettings} PythonSettings
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                PythonSettings.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.api.PythonSettings();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1: {
                                message.common = $root.google.api.CommonLanguageSettings.decode(reader, reader.uint32());
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a PythonSettings message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.api.PythonSettings
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.api.PythonSettings} PythonSettings
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                PythonSettings.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a PythonSettings message.
                 * @function verify
                 * @memberof google.api.PythonSettings
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                PythonSettings.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.common != null && message.hasOwnProperty("common")) {
                        var error = $root.google.api.CommonLanguageSettings.verify(message.common);
                        if (error)
                            return "common." + error;
                    }
                    return null;
                };
    
                /**
                 * Creates a PythonSettings message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.api.PythonSettings
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.api.PythonSettings} PythonSettings
                 */
                PythonSettings.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.api.PythonSettings)
                        return object;
                    var message = new $root.google.api.PythonSettings();
                    if (object.common != null) {
                        if (typeof object.common !== "object")
                            throw TypeError(".google.api.PythonSettings.common: object expected");
                        message.common = $root.google.api.CommonLanguageSettings.fromObject(object.common);
                    }
                    return message;
                };
    
                /**
                 * Creates a plain object from a PythonSettings message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.api.PythonSettings
                 * @static
                 * @param {google.api.PythonSettings} message PythonSettings
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                PythonSettings.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.defaults)
                        object.common = null;
                    if (message.common != null && message.hasOwnProperty("common"))
                        object.common = $root.google.api.CommonLanguageSettings.toObject(message.common, options);
                    return object;
                };
    
                /**
                 * Converts this PythonSettings to JSON.
                 * @function toJSON
                 * @memberof google.api.PythonSettings
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                PythonSettings.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for PythonSettings
                 * @function getTypeUrl
                 * @memberof google.api.PythonSettings
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                PythonSettings.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.api.PythonSettings";
                };
    
                return PythonSettings;
            })();
    
            api.NodeSettings = (function() {
    
                /**
                 * Properties of a NodeSettings.
                 * @memberof google.api
                 * @interface INodeSettings
                 * @property {google.api.ICommonLanguageSettings|null} [common] NodeSettings common
                 */
    
                /**
                 * Constructs a new NodeSettings.
                 * @memberof google.api
                 * @classdesc Represents a NodeSettings.
                 * @implements INodeSettings
                 * @constructor
                 * @param {google.api.INodeSettings=} [properties] Properties to set
                 */
                function NodeSettings(properties) {
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * NodeSettings common.
                 * @member {google.api.ICommonLanguageSettings|null|undefined} common
                 * @memberof google.api.NodeSettings
                 * @instance
                 */
                NodeSettings.prototype.common = null;
    
                /**
                 * Creates a new NodeSettings instance using the specified properties.
                 * @function create
                 * @memberof google.api.NodeSettings
                 * @static
                 * @param {google.api.INodeSettings=} [properties] Properties to set
                 * @returns {google.api.NodeSettings} NodeSettings instance
                 */
                NodeSettings.create = function create(properties) {
                    return new NodeSettings(properties);
                };
    
                /**
                 * Encodes the specified NodeSettings message. Does not implicitly {@link google.api.NodeSettings.verify|verify} messages.
                 * @function encode
                 * @memberof google.api.NodeSettings
                 * @static
                 * @param {google.api.INodeSettings} message NodeSettings message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                NodeSettings.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.common != null && Object.hasOwnProperty.call(message, "common"))
                        $root.google.api.CommonLanguageSettings.encode(message.common, writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                    return writer;
                };
    
                /**
                 * Encodes the specified NodeSettings message, length delimited. Does not implicitly {@link google.api.NodeSettings.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.api.NodeSettings
                 * @static
                 * @param {google.api.INodeSettings} message NodeSettings message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                NodeSettings.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a NodeSettings message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.api.NodeSettings
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.api.NodeSettings} NodeSettings
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                NodeSettings.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.api.NodeSettings();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1: {
                                message.common = $root.google.api.CommonLanguageSettings.decode(reader, reader.uint32());
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a NodeSettings message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.api.NodeSettings
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.api.NodeSettings} NodeSettings
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                NodeSettings.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a NodeSettings message.
                 * @function verify
                 * @memberof google.api.NodeSettings
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                NodeSettings.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.common != null && message.hasOwnProperty("common")) {
                        var error = $root.google.api.CommonLanguageSettings.verify(message.common);
                        if (error)
                            return "common." + error;
                    }
                    return null;
                };
    
                /**
                 * Creates a NodeSettings message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.api.NodeSettings
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.api.NodeSettings} NodeSettings
                 */
                NodeSettings.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.api.NodeSettings)
                        return object;
                    var message = new $root.google.api.NodeSettings();
                    if (object.common != null) {
                        if (typeof object.common !== "object")
                            throw TypeError(".google.api.NodeSettings.common: object expected");
                        message.common = $root.google.api.CommonLanguageSettings.fromObject(object.common);
                    }
                    return message;
                };
    
                /**
                 * Creates a plain object from a NodeSettings message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.api.NodeSettings
                 * @static
                 * @param {google.api.NodeSettings} message NodeSettings
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                NodeSettings.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.defaults)
                        object.common = null;
                    if (message.common != null && message.hasOwnProperty("common"))
                        object.common = $root.google.api.CommonLanguageSettings.toObject(message.common, options);
                    return object;
                };
    
                /**
                 * Converts this NodeSettings to JSON.
                 * @function toJSON
                 * @memberof google.api.NodeSettings
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                NodeSettings.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for NodeSettings
                 * @function getTypeUrl
                 * @memberof google.api.NodeSettings
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                NodeSettings.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.api.NodeSettings";
                };
    
                return NodeSettings;
            })();
    
            api.DotnetSettings = (function() {
    
                /**
                 * Properties of a DotnetSettings.
                 * @memberof google.api
                 * @interface IDotnetSettings
                 * @property {google.api.ICommonLanguageSettings|null} [common] DotnetSettings common
                 */
    
                /**
                 * Constructs a new DotnetSettings.
                 * @memberof google.api
                 * @classdesc Represents a DotnetSettings.
                 * @implements IDotnetSettings
                 * @constructor
                 * @param {google.api.IDotnetSettings=} [properties] Properties to set
                 */
                function DotnetSettings(properties) {
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * DotnetSettings common.
                 * @member {google.api.ICommonLanguageSettings|null|undefined} common
                 * @memberof google.api.DotnetSettings
                 * @instance
                 */
                DotnetSettings.prototype.common = null;
    
                /**
                 * Creates a new DotnetSettings instance using the specified properties.
                 * @function create
                 * @memberof google.api.DotnetSettings
                 * @static
                 * @param {google.api.IDotnetSettings=} [properties] Properties to set
                 * @returns {google.api.DotnetSettings} DotnetSettings instance
                 */
                DotnetSettings.create = function create(properties) {
                    return new DotnetSettings(properties);
                };
    
                /**
                 * Encodes the specified DotnetSettings message. Does not implicitly {@link google.api.DotnetSettings.verify|verify} messages.
                 * @function encode
                 * @memberof google.api.DotnetSettings
                 * @static
                 * @param {google.api.IDotnetSettings} message DotnetSettings message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                DotnetSettings.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.common != null && Object.hasOwnProperty.call(message, "common"))
                        $root.google.api.CommonLanguageSettings.encode(message.common, writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                    return writer;
                };
    
                /**
                 * Encodes the specified DotnetSettings message, length delimited. Does not implicitly {@link google.api.DotnetSettings.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.api.DotnetSettings
                 * @static
                 * @param {google.api.IDotnetSettings} message DotnetSettings message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                DotnetSettings.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a DotnetSettings message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.api.DotnetSettings
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.api.DotnetSettings} DotnetSettings
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                DotnetSettings.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.api.DotnetSettings();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1: {
                                message.common = $root.google.api.CommonLanguageSettings.decode(reader, reader.uint32());
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a DotnetSettings message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.api.DotnetSettings
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.api.DotnetSettings} DotnetSettings
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                DotnetSettings.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a DotnetSettings message.
                 * @function verify
                 * @memberof google.api.DotnetSettings
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                DotnetSettings.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.common != null && message.hasOwnProperty("common")) {
                        var error = $root.google.api.CommonLanguageSettings.verify(message.common);
                        if (error)
                            return "common." + error;
                    }
                    return null;
                };
    
                /**
                 * Creates a DotnetSettings message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.api.DotnetSettings
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.api.DotnetSettings} DotnetSettings
                 */
                DotnetSettings.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.api.DotnetSettings)
                        return object;
                    var message = new $root.google.api.DotnetSettings();
                    if (object.common != null) {
                        if (typeof object.common !== "object")
                            throw TypeError(".google.api.DotnetSettings.common: object expected");
                        message.common = $root.google.api.CommonLanguageSettings.fromObject(object.common);
                    }
                    return message;
                };
    
                /**
                 * Creates a plain object from a DotnetSettings message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.api.DotnetSettings
                 * @static
                 * @param {google.api.DotnetSettings} message DotnetSettings
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                DotnetSettings.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.defaults)
                        object.common = null;
                    if (message.common != null && message.hasOwnProperty("common"))
                        object.common = $root.google.api.CommonLanguageSettings.toObject(message.common, options);
                    return object;
                };
    
                /**
                 * Converts this DotnetSettings to JSON.
                 * @function toJSON
                 * @memberof google.api.DotnetSettings
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                DotnetSettings.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for DotnetSettings
                 * @function getTypeUrl
                 * @memberof google.api.DotnetSettings
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                DotnetSettings.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.api.DotnetSettings";
                };
    
                return DotnetSettings;
            })();
    
            api.RubySettings = (function() {
    
                /**
                 * Properties of a RubySettings.
                 * @memberof google.api
                 * @interface IRubySettings
                 * @property {google.api.ICommonLanguageSettings|null} [common] RubySettings common
                 */
    
                /**
                 * Constructs a new RubySettings.
                 * @memberof google.api
                 * @classdesc Represents a RubySettings.
                 * @implements IRubySettings
                 * @constructor
                 * @param {google.api.IRubySettings=} [properties] Properties to set
                 */
                function RubySettings(properties) {
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * RubySettings common.
                 * @member {google.api.ICommonLanguageSettings|null|undefined} common
                 * @memberof google.api.RubySettings
                 * @instance
                 */
                RubySettings.prototype.common = null;
    
                /**
                 * Creates a new RubySettings instance using the specified properties.
                 * @function create
                 * @memberof google.api.RubySettings
                 * @static
                 * @param {google.api.IRubySettings=} [properties] Properties to set
                 * @returns {google.api.RubySettings} RubySettings instance
                 */
                RubySettings.create = function create(properties) {
                    return new RubySettings(properties);
                };
    
                /**
                 * Encodes the specified RubySettings message. Does not implicitly {@link google.api.RubySettings.verify|verify} messages.
                 * @function encode
                 * @memberof google.api.RubySettings
                 * @static
                 * @param {google.api.IRubySettings} message RubySettings message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                RubySettings.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.common != null && Object.hasOwnProperty.call(message, "common"))
                        $root.google.api.CommonLanguageSettings.encode(message.common, writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                    return writer;
                };
    
                /**
                 * Encodes the specified RubySettings message, length delimited. Does not implicitly {@link google.api.RubySettings.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.api.RubySettings
                 * @static
                 * @param {google.api.IRubySettings} message RubySettings message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                RubySettings.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a RubySettings message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.api.RubySettings
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.api.RubySettings} RubySettings
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                RubySettings.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.api.RubySettings();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1: {
                                message.common = $root.google.api.CommonLanguageSettings.decode(reader, reader.uint32());
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a RubySettings message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.api.RubySettings
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.api.RubySettings} RubySettings
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                RubySettings.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a RubySettings message.
                 * @function verify
                 * @memberof google.api.RubySettings
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                RubySettings.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.common != null && message.hasOwnProperty("common")) {
                        var error = $root.google.api.CommonLanguageSettings.verify(message.common);
                        if (error)
                            return "common." + error;
                    }
                    return null;
                };
    
                /**
                 * Creates a RubySettings message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.api.RubySettings
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.api.RubySettings} RubySettings
                 */
                RubySettings.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.api.RubySettings)
                        return object;
                    var message = new $root.google.api.RubySettings();
                    if (object.common != null) {
                        if (typeof object.common !== "object")
                            throw TypeError(".google.api.RubySettings.common: object expected");
                        message.common = $root.google.api.CommonLanguageSettings.fromObject(object.common);
                    }
                    return message;
                };
    
                /**
                 * Creates a plain object from a RubySettings message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.api.RubySettings
                 * @static
                 * @param {google.api.RubySettings} message RubySettings
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                RubySettings.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.defaults)
                        object.common = null;
                    if (message.common != null && message.hasOwnProperty("common"))
                        object.common = $root.google.api.CommonLanguageSettings.toObject(message.common, options);
                    return object;
                };
    
                /**
                 * Converts this RubySettings to JSON.
                 * @function toJSON
                 * @memberof google.api.RubySettings
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                RubySettings.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for RubySettings
                 * @function getTypeUrl
                 * @memberof google.api.RubySettings
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                RubySettings.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.api.RubySettings";
                };
    
                return RubySettings;
            })();
    
            api.GoSettings = (function() {
    
                /**
                 * Properties of a GoSettings.
                 * @memberof google.api
                 * @interface IGoSettings
                 * @property {google.api.ICommonLanguageSettings|null} [common] GoSettings common
                 */
    
                /**
                 * Constructs a new GoSettings.
                 * @memberof google.api
                 * @classdesc Represents a GoSettings.
                 * @implements IGoSettings
                 * @constructor
                 * @param {google.api.IGoSettings=} [properties] Properties to set
                 */
                function GoSettings(properties) {
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * GoSettings common.
                 * @member {google.api.ICommonLanguageSettings|null|undefined} common
                 * @memberof google.api.GoSettings
                 * @instance
                 */
                GoSettings.prototype.common = null;
    
                /**
                 * Creates a new GoSettings instance using the specified properties.
                 * @function create
                 * @memberof google.api.GoSettings
                 * @static
                 * @param {google.api.IGoSettings=} [properties] Properties to set
                 * @returns {google.api.GoSettings} GoSettings instance
                 */
                GoSettings.create = function create(properties) {
                    return new GoSettings(properties);
                };
    
                /**
                 * Encodes the specified GoSettings message. Does not implicitly {@link google.api.GoSettings.verify|verify} messages.
                 * @function encode
                 * @memberof google.api.GoSettings
                 * @static
                 * @param {google.api.IGoSettings} message GoSettings message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                GoSettings.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.common != null && Object.hasOwnProperty.call(message, "common"))
                        $root.google.api.CommonLanguageSettings.encode(message.common, writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                    return writer;
                };
    
                /**
                 * Encodes the specified GoSettings message, length delimited. Does not implicitly {@link google.api.GoSettings.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.api.GoSettings
                 * @static
                 * @param {google.api.IGoSettings} message GoSettings message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                GoSettings.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a GoSettings message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.api.GoSettings
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.api.GoSettings} GoSettings
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                GoSettings.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.api.GoSettings();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1: {
                                message.common = $root.google.api.CommonLanguageSettings.decode(reader, reader.uint32());
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a GoSettings message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.api.GoSettings
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.api.GoSettings} GoSettings
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                GoSettings.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a GoSettings message.
                 * @function verify
                 * @memberof google.api.GoSettings
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                GoSettings.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.common != null && message.hasOwnProperty("common")) {
                        var error = $root.google.api.CommonLanguageSettings.verify(message.common);
                        if (error)
                            return "common." + error;
                    }
                    return null;
                };
    
                /**
                 * Creates a GoSettings message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.api.GoSettings
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.api.GoSettings} GoSettings
                 */
                GoSettings.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.api.GoSettings)
                        return object;
                    var message = new $root.google.api.GoSettings();
                    if (object.common != null) {
                        if (typeof object.common !== "object")
                            throw TypeError(".google.api.GoSettings.common: object expected");
                        message.common = $root.google.api.CommonLanguageSettings.fromObject(object.common);
                    }
                    return message;
                };
    
                /**
                 * Creates a plain object from a GoSettings message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.api.GoSettings
                 * @static
                 * @param {google.api.GoSettings} message GoSettings
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                GoSettings.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.defaults)
                        object.common = null;
                    if (message.common != null && message.hasOwnProperty("common"))
                        object.common = $root.google.api.CommonLanguageSettings.toObject(message.common, options);
                    return object;
                };
    
                /**
                 * Converts this GoSettings to JSON.
                 * @function toJSON
                 * @memberof google.api.GoSettings
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                GoSettings.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for GoSettings
                 * @function getTypeUrl
                 * @memberof google.api.GoSettings
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                GoSettings.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.api.GoSettings";
                };
    
                return GoSettings;
            })();
    
            api.MethodSettings = (function() {
    
                /**
                 * Properties of a MethodSettings.
                 * @memberof google.api
                 * @interface IMethodSettings
                 * @property {string|null} [selector] MethodSettings selector
                 * @property {google.api.MethodSettings.ILongRunning|null} [longRunning] MethodSettings longRunning
                 */
    
                /**
                 * Constructs a new MethodSettings.
                 * @memberof google.api
                 * @classdesc Represents a MethodSettings.
                 * @implements IMethodSettings
                 * @constructor
                 * @param {google.api.IMethodSettings=} [properties] Properties to set
                 */
                function MethodSettings(properties) {
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * MethodSettings selector.
                 * @member {string} selector
                 * @memberof google.api.MethodSettings
                 * @instance
                 */
                MethodSettings.prototype.selector = "";
    
                /**
                 * MethodSettings longRunning.
                 * @member {google.api.MethodSettings.ILongRunning|null|undefined} longRunning
                 * @memberof google.api.MethodSettings
                 * @instance
                 */
                MethodSettings.prototype.longRunning = null;
    
                /**
                 * Creates a new MethodSettings instance using the specified properties.
                 * @function create
                 * @memberof google.api.MethodSettings
                 * @static
                 * @param {google.api.IMethodSettings=} [properties] Properties to set
                 * @returns {google.api.MethodSettings} MethodSettings instance
                 */
                MethodSettings.create = function create(properties) {
                    return new MethodSettings(properties);
                };
    
                /**
                 * Encodes the specified MethodSettings message. Does not implicitly {@link google.api.MethodSettings.verify|verify} messages.
                 * @function encode
                 * @memberof google.api.MethodSettings
                 * @static
                 * @param {google.api.IMethodSettings} message MethodSettings message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                MethodSettings.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.selector != null && Object.hasOwnProperty.call(message, "selector"))
                        writer.uint32(/* id 1, wireType 2 =*/10).string(message.selector);
                    if (message.longRunning != null && Object.hasOwnProperty.call(message, "longRunning"))
                        $root.google.api.MethodSettings.LongRunning.encode(message.longRunning, writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                    return writer;
                };
    
                /**
                 * Encodes the specified MethodSettings message, length delimited. Does not implicitly {@link google.api.MethodSettings.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.api.MethodSettings
                 * @static
                 * @param {google.api.IMethodSettings} message MethodSettings message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                MethodSettings.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a MethodSettings message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.api.MethodSettings
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.api.MethodSettings} MethodSettings
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                MethodSettings.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.api.MethodSettings();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1: {
                                message.selector = reader.string();
                                break;
                            }
                        case 2: {
                                message.longRunning = $root.google.api.MethodSettings.LongRunning.decode(reader, reader.uint32());
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a MethodSettings message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.api.MethodSettings
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.api.MethodSettings} MethodSettings
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                MethodSettings.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a MethodSettings message.
                 * @function verify
                 * @memberof google.api.MethodSettings
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                MethodSettings.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.selector != null && message.hasOwnProperty("selector"))
                        if (!$util.isString(message.selector))
                            return "selector: string expected";
                    if (message.longRunning != null && message.hasOwnProperty("longRunning")) {
                        var error = $root.google.api.MethodSettings.LongRunning.verify(message.longRunning);
                        if (error)
                            return "longRunning." + error;
                    }
                    return null;
                };
    
                /**
                 * Creates a MethodSettings message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.api.MethodSettings
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.api.MethodSettings} MethodSettings
                 */
                MethodSettings.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.api.MethodSettings)
                        return object;
                    var message = new $root.google.api.MethodSettings();
                    if (object.selector != null)
                        message.selector = String(object.selector);
                    if (object.longRunning != null) {
                        if (typeof object.longRunning !== "object")
                            throw TypeError(".google.api.MethodSettings.longRunning: object expected");
                        message.longRunning = $root.google.api.MethodSettings.LongRunning.fromObject(object.longRunning);
                    }
                    return message;
                };
    
                /**
                 * Creates a plain object from a MethodSettings message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.api.MethodSettings
                 * @static
                 * @param {google.api.MethodSettings} message MethodSettings
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                MethodSettings.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.defaults) {
                        object.selector = "";
                        object.longRunning = null;
                    }
                    if (message.selector != null && message.hasOwnProperty("selector"))
                        object.selector = message.selector;
                    if (message.longRunning != null && message.hasOwnProperty("longRunning"))
                        object.longRunning = $root.google.api.MethodSettings.LongRunning.toObject(message.longRunning, options);
                    return object;
                };
    
                /**
                 * Converts this MethodSettings to JSON.
                 * @function toJSON
                 * @memberof google.api.MethodSettings
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                MethodSettings.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for MethodSettings
                 * @function getTypeUrl
                 * @memberof google.api.MethodSettings
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                MethodSettings.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.api.MethodSettings";
                };
    
                MethodSettings.LongRunning = (function() {
    
                    /**
                     * Properties of a LongRunning.
                     * @memberof google.api.MethodSettings
                     * @interface ILongRunning
                     * @property {google.protobuf.IDuration|null} [initialPollDelay] LongRunning initialPollDelay
                     * @property {number|null} [pollDelayMultiplier] LongRunning pollDelayMultiplier
                     * @property {google.protobuf.IDuration|null} [maxPollDelay] LongRunning maxPollDelay
                     * @property {google.protobuf.IDuration|null} [totalPollTimeout] LongRunning totalPollTimeout
                     */
    
                    /**
                     * Constructs a new LongRunning.
                     * @memberof google.api.MethodSettings
                     * @classdesc Represents a LongRunning.
                     * @implements ILongRunning
                     * @constructor
                     * @param {google.api.MethodSettings.ILongRunning=} [properties] Properties to set
                     */
                    function LongRunning(properties) {
                        if (properties)
                            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                if (properties[keys[i]] != null)
                                    this[keys[i]] = properties[keys[i]];
                    }
    
                    /**
                     * LongRunning initialPollDelay.
                     * @member {google.protobuf.IDuration|null|undefined} initialPollDelay
                     * @memberof google.api.MethodSettings.LongRunning
                     * @instance
                     */
                    LongRunning.prototype.initialPollDelay = null;
    
                    /**
                     * LongRunning pollDelayMultiplier.
                     * @member {number} pollDelayMultiplier
                     * @memberof google.api.MethodSettings.LongRunning
                     * @instance
                     */
                    LongRunning.prototype.pollDelayMultiplier = 0;
    
                    /**
                     * LongRunning maxPollDelay.
                     * @member {google.protobuf.IDuration|null|undefined} maxPollDelay
                     * @memberof google.api.MethodSettings.LongRunning
                     * @instance
                     */
                    LongRunning.prototype.maxPollDelay = null;
    
                    /**
                     * LongRunning totalPollTimeout.
                     * @member {google.protobuf.IDuration|null|undefined} totalPollTimeout
                     * @memberof google.api.MethodSettings.LongRunning
                     * @instance
                     */
                    LongRunning.prototype.totalPollTimeout = null;
    
                    /**
                     * Creates a new LongRunning instance using the specified properties.
                     * @function create
                     * @memberof google.api.MethodSettings.LongRunning
                     * @static
                     * @param {google.api.MethodSettings.ILongRunning=} [properties] Properties to set
                     * @returns {google.api.MethodSettings.LongRunning} LongRunning instance
                     */
                    LongRunning.create = function create(properties) {
                        return new LongRunning(properties);
                    };
    
                    /**
                     * Encodes the specified LongRunning message. Does not implicitly {@link google.api.MethodSettings.LongRunning.verify|verify} messages.
                     * @function encode
                     * @memberof google.api.MethodSettings.LongRunning
                     * @static
                     * @param {google.api.MethodSettings.ILongRunning} message LongRunning message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    LongRunning.encode = function encode(message, writer) {
                        if (!writer)
                            writer = $Writer.create();
                        if (message.initialPollDelay != null && Object.hasOwnProperty.call(message, "initialPollDelay"))
                            $root.google.protobuf.Duration.encode(message.initialPollDelay, writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                        if (message.pollDelayMultiplier != null && Object.hasOwnProperty.call(message, "pollDelayMultiplier"))
                            writer.uint32(/* id 2, wireType 5 =*/21).float(message.pollDelayMultiplier);
                        if (message.maxPollDelay != null && Object.hasOwnProperty.call(message, "maxPollDelay"))
                            $root.google.protobuf.Duration.encode(message.maxPollDelay, writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();
                        if (message.totalPollTimeout != null && Object.hasOwnProperty.call(message, "totalPollTimeout"))
                            $root.google.protobuf.Duration.encode(message.totalPollTimeout, writer.uint32(/* id 4, wireType 2 =*/34).fork()).ldelim();
                        return writer;
                    };
    
                    /**
                     * Encodes the specified LongRunning message, length delimited. Does not implicitly {@link google.api.MethodSettings.LongRunning.verify|verify} messages.
                     * @function encodeDelimited
                     * @memberof google.api.MethodSettings.LongRunning
                     * @static
                     * @param {google.api.MethodSettings.ILongRunning} message LongRunning message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    LongRunning.encodeDelimited = function encodeDelimited(message, writer) {
                        return this.encode(message, writer).ldelim();
                    };
    
                    /**
                     * Decodes a LongRunning message from the specified reader or buffer.
                     * @function decode
                     * @memberof google.api.MethodSettings.LongRunning
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @param {number} [length] Message length if known beforehand
                     * @returns {google.api.MethodSettings.LongRunning} LongRunning
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    LongRunning.decode = function decode(reader, length) {
                        if (!(reader instanceof $Reader))
                            reader = $Reader.create(reader);
                        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.api.MethodSettings.LongRunning();
                        while (reader.pos < end) {
                            var tag = reader.uint32();
                            switch (tag >>> 3) {
                            case 1: {
                                    message.initialPollDelay = $root.google.protobuf.Duration.decode(reader, reader.uint32());
                                    break;
                                }
                            case 2: {
                                    message.pollDelayMultiplier = reader.float();
                                    break;
                                }
                            case 3: {
                                    message.maxPollDelay = $root.google.protobuf.Duration.decode(reader, reader.uint32());
                                    break;
                                }
                            case 4: {
                                    message.totalPollTimeout = $root.google.protobuf.Duration.decode(reader, reader.uint32());
                                    break;
                                }
                            default:
                                reader.skipType(tag & 7);
                                break;
                            }
                        }
                        return message;
                    };
    
                    /**
                     * Decodes a LongRunning message from the specified reader or buffer, length delimited.
                     * @function decodeDelimited
                     * @memberof google.api.MethodSettings.LongRunning
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @returns {google.api.MethodSettings.LongRunning} LongRunning
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    LongRunning.decodeDelimited = function decodeDelimited(reader) {
                        if (!(reader instanceof $Reader))
                            reader = new $Reader(reader);
                        return this.decode(reader, reader.uint32());
                    };
    
                    /**
                     * Verifies a LongRunning message.
                     * @function verify
                     * @memberof google.api.MethodSettings.LongRunning
                     * @static
                     * @param {Object.<string,*>} message Plain object to verify
                     * @returns {string|null} `null` if valid, otherwise the reason why it is not
                     */
                    LongRunning.verify = function verify(message) {
                        if (typeof message !== "object" || message === null)
                            return "object expected";
                        if (message.initialPollDelay != null && message.hasOwnProperty("initialPollDelay")) {
                            var error = $root.google.protobuf.Duration.verify(message.initialPollDelay);
                            if (error)
                                return "initialPollDelay." + error;
                        }
                        if (message.pollDelayMultiplier != null && message.hasOwnProperty("pollDelayMultiplier"))
                            if (typeof message.pollDelayMultiplier !== "number")
                                return "pollDelayMultiplier: number expected";
                        if (message.maxPollDelay != null && message.hasOwnProperty("maxPollDelay")) {
                            var error = $root.google.protobuf.Duration.verify(message.maxPollDelay);
                            if (error)
                                return "maxPollDelay." + error;
                        }
                        if (message.totalPollTimeout != null && message.hasOwnProperty("totalPollTimeout")) {
                            var error = $root.google.protobuf.Duration.verify(message.totalPollTimeout);
                            if (error)
                                return "totalPollTimeout." + error;
                        }
                        return null;
                    };
    
                    /**
                     * Creates a LongRunning message from a plain object. Also converts values to their respective internal types.
                     * @function fromObject
                     * @memberof google.api.MethodSettings.LongRunning
                     * @static
                     * @param {Object.<string,*>} object Plain object
                     * @returns {google.api.MethodSettings.LongRunning} LongRunning
                     */
                    LongRunning.fromObject = function fromObject(object) {
                        if (object instanceof $root.google.api.MethodSettings.LongRunning)
                            return object;
                        var message = new $root.google.api.MethodSettings.LongRunning();
                        if (object.initialPollDelay != null) {
                            if (typeof object.initialPollDelay !== "object")
                                throw TypeError(".google.api.MethodSettings.LongRunning.initialPollDelay: object expected");
                            message.initialPollDelay = $root.google.protobuf.Duration.fromObject(object.initialPollDelay);
                        }
                        if (object.pollDelayMultiplier != null)
                            message.pollDelayMultiplier = Number(object.pollDelayMultiplier);
                        if (object.maxPollDelay != null) {
                            if (typeof object.maxPollDelay !== "object")
                                throw TypeError(".google.api.MethodSettings.LongRunning.maxPollDelay: object expected");
                            message.maxPollDelay = $root.google.protobuf.Duration.fromObject(object.maxPollDelay);
                        }
                        if (object.totalPollTimeout != null) {
                            if (typeof object.totalPollTimeout !== "object")
                                throw TypeError(".google.api.MethodSettings.LongRunning.totalPollTimeout: object expected");
                            message.totalPollTimeout = $root.google.protobuf.Duration.fromObject(object.totalPollTimeout);
                        }
                        return message;
                    };
    
                    /**
                     * Creates a plain object from a LongRunning message. Also converts values to other types if specified.
                     * @function toObject
                     * @memberof google.api.MethodSettings.LongRunning
                     * @static
                     * @param {google.api.MethodSettings.LongRunning} message LongRunning
                     * @param {$protobuf.IConversionOptions} [options] Conversion options
                     * @returns {Object.<string,*>} Plain object
                     */
                    LongRunning.toObject = function toObject(message, options) {
                        if (!options)
                            options = {};
                        var object = {};
                        if (options.defaults) {
                            object.initialPollDelay = null;
                            object.pollDelayMultiplier = 0;
                            object.maxPollDelay = null;
                            object.totalPollTimeout = null;
                        }
                        if (message.initialPollDelay != null && message.hasOwnProperty("initialPollDelay"))
                            object.initialPollDelay = $root.google.protobuf.Duration.toObject(message.initialPollDelay, options);
                        if (message.pollDelayMultiplier != null && message.hasOwnProperty("pollDelayMultiplier"))
                            object.pollDelayMultiplier = options.json && !isFinite(message.pollDelayMultiplier) ? String(message.pollDelayMultiplier) : message.pollDelayMultiplier;
                        if (message.maxPollDelay != null && message.hasOwnProperty("maxPollDelay"))
                            object.maxPollDelay = $root.google.protobuf.Duration.toObject(message.maxPollDelay, options);
                        if (message.totalPollTimeout != null && message.hasOwnProperty("totalPollTimeout"))
                            object.totalPollTimeout = $root.google.protobuf.Duration.toObject(message.totalPollTimeout, options);
                        return object;
                    };
    
                    /**
                     * Converts this LongRunning to JSON.
                     * @function toJSON
                     * @memberof google.api.MethodSettings.LongRunning
                     * @instance
                     * @returns {Object.<string,*>} JSON object
                     */
                    LongRunning.prototype.toJSON = function toJSON() {
                        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                    };
    
                    /**
                     * Gets the default type url for LongRunning
                     * @function getTypeUrl
                     * @memberof google.api.MethodSettings.LongRunning
                     * @static
                     * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                     * @returns {string} The default type url
                     */
                    LongRunning.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                        if (typeUrlPrefix === undefined) {
                            typeUrlPrefix = "type.googleapis.com";
                        }
                        return typeUrlPrefix + "/google.api.MethodSettings.LongRunning";
                    };
    
                    return LongRunning;
                })();
    
                return MethodSettings;
            })();
    
            /**
             * ClientLibraryOrganization enum.
             * @name google.api.ClientLibraryOrganization
             * @enum {number}
             * @property {number} CLIENT_LIBRARY_ORGANIZATION_UNSPECIFIED=0 CLIENT_LIBRARY_ORGANIZATION_UNSPECIFIED value
             * @property {number} CLOUD=1 CLOUD value
             * @property {number} ADS=2 ADS value
             * @property {number} PHOTOS=3 PHOTOS value
             * @property {number} STREET_VIEW=4 STREET_VIEW value
             */
            api.ClientLibraryOrganization = (function() {
                var valuesById = {}, values = Object.create(valuesById);
                values[valuesById[0] = "CLIENT_LIBRARY_ORGANIZATION_UNSPECIFIED"] = 0;
                values[valuesById[1] = "CLOUD"] = 1;
                values[valuesById[2] = "ADS"] = 2;
                values[valuesById[3] = "PHOTOS"] = 3;
                values[valuesById[4] = "STREET_VIEW"] = 4;
                return values;
            })();
    
            /**
             * ClientLibraryDestination enum.
             * @name google.api.ClientLibraryDestination
             * @enum {number}
             * @property {number} CLIENT_LIBRARY_DESTINATION_UNSPECIFIED=0 CLIENT_LIBRARY_DESTINATION_UNSPECIFIED value
             * @property {number} GITHUB=10 GITHUB value
             * @property {number} PACKAGE_MANAGER=20 PACKAGE_MANAGER value
             */
            api.ClientLibraryDestination = (function() {
                var valuesById = {}, values = Object.create(valuesById);
                values[valuesById[0] = "CLIENT_LIBRARY_DESTINATION_UNSPECIFIED"] = 0;
                values[valuesById[10] = "GITHUB"] = 10;
                values[valuesById[20] = "PACKAGE_MANAGER"] = 20;
                return values;
            })();
    
            /**
             * LaunchStage enum.
             * @name google.api.LaunchStage
             * @enum {number}
             * @property {number} LAUNCH_STAGE_UNSPECIFIED=0 LAUNCH_STAGE_UNSPECIFIED value
             * @property {number} UNIMPLEMENTED=6 UNIMPLEMENTED value
             * @property {number} PRELAUNCH=7 PRELAUNCH value
             * @property {number} EARLY_ACCESS=1 EARLY_ACCESS value
             * @property {number} ALPHA=2 ALPHA value
             * @property {number} BETA=3 BETA value
             * @property {number} GA=4 GA value
             * @property {number} DEPRECATED=5 DEPRECATED value
             */
            api.LaunchStage = (function() {
                var valuesById = {}, values = Object.create(valuesById);
                values[valuesById[0] = "LAUNCH_STAGE_UNSPECIFIED"] = 0;
                values[valuesById[6] = "UNIMPLEMENTED"] = 6;
                values[valuesById[7] = "PRELAUNCH"] = 7;
                values[valuesById[1] = "EARLY_ACCESS"] = 1;
                values[valuesById[2] = "ALPHA"] = 2;
                values[valuesById[3] = "BETA"] = 3;
                values[valuesById[4] = "GA"] = 4;
                values[valuesById[5] = "DEPRECATED"] = 5;
                return values;
            })();
    
            /**
             * FieldBehavior enum.
             * @name google.api.FieldBehavior
             * @enum {number}
             * @property {number} FIELD_BEHAVIOR_UNSPECIFIED=0 FIELD_BEHAVIOR_UNSPECIFIED value
             * @property {number} OPTIONAL=1 OPTIONAL value
             * @property {number} REQUIRED=2 REQUIRED value
             * @property {number} OUTPUT_ONLY=3 OUTPUT_ONLY value
             * @property {number} INPUT_ONLY=4 INPUT_ONLY value
             * @property {number} IMMUTABLE=5 IMMUTABLE value
             * @property {number} UNORDERED_LIST=6 UNORDERED_LIST value
             * @property {number} NON_EMPTY_DEFAULT=7 NON_EMPTY_DEFAULT value
             */
            api.FieldBehavior = (function() {
                var valuesById = {}, values = Object.create(valuesById);
                values[valuesById[0] = "FIELD_BEHAVIOR_UNSPECIFIED"] = 0;
                values[valuesById[1] = "OPTIONAL"] = 1;
                values[valuesById[2] = "REQUIRED"] = 2;
                values[valuesById[3] = "OUTPUT_ONLY"] = 3;
                values[valuesById[4] = "INPUT_ONLY"] = 4;
                values[valuesById[5] = "IMMUTABLE"] = 5;
                values[valuesById[6] = "UNORDERED_LIST"] = 6;
                values[valuesById[7] = "NON_EMPTY_DEFAULT"] = 7;
                return values;
            })();
    
            return api;
        })();
    
        return google;
    })();

    return $root;
});
