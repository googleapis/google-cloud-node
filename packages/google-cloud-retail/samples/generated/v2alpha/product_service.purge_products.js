// Copyright 2022 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     https://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
// ** This file is automatically generated by gapic-generator-typescript. **
// ** https://github.com/googleapis/gapic-generator-typescript **
// ** All changes to this file may be overwritten. **



'use strict';

function main(parent, filter) {
  // [START retail_v2alpha_generated_ProductService_PurgeProducts_async]
  /**
   * This snippet has been automatically generated and should be regarded as a code template only.
   * It will require modifications to work.
   * It may require correct/in-range values for request initialization.
   * TODO(developer): Uncomment these variables before running the sample.
   */
  /**
   *  Required. The resource name of the branch under which the products are
   *  created. The format is
   *  `projects/${projectId}/locations/global/catalogs/${catalogId}/branches/${branchId}`
   */
  // const parent = 'abc123'
  /**
   *  Required. The filter string to specify the products to be deleted with a
   *  length limit of 5,000 characters.
   *  Empty string filter is not allowed. "*" implies delete all items in a
   *  branch.
   *  The eligible fields for filtering are:
   *  * `availability`: Double quoted
   *  Product.availability google.cloud.retail.v2alpha.Product.availability 
   *  string.
   *  * `create_time` : in ISO 8601 "zulu" format.
   *  Supported syntax:
   *  * Comparators (">", "<", ">=", "<=", "=").
   *    Examples:
   *    * create_time <= "2015-02-13T17:05:46Z"
   *    * availability = "IN_STOCK"
   *  * Conjunctions ("AND")
   *    Examples:
   *    * create_time <= "2015-02-13T17:05:46Z" AND availability = "PREORDER"
   *  * Disjunctions ("OR")
   *    Examples:
   *    * create_time <= "2015-02-13T17:05:46Z" OR availability = "IN_STOCK"
   *  * Can support nested queries.
   *    Examples:
   *    * (create_time <= "2015-02-13T17:05:46Z" AND availability = "PREORDER")
   *    OR (create_time >= "2015-02-14T13:03:32Z" AND availability = "IN_STOCK")
   *  * Filter Limits:
   *    * Filter should not contain more than 6 conditions.
   *    * Max nesting depth should not exceed 2 levels.
   *  Examples queries:
   *  * Delete back order products created before a timestamp.
   *    create_time <= "2015-02-13T17:05:46Z" OR availability = "BACKORDER"
   */
  // const filter = 'abc123'
  /**
   *  Actually perform the purge.
   *  If `force` is set to false, the method will return the expected purge count
   *  without deleting any products.
   */
  // const force = true

  // Imports the Retail library
  const {ProductServiceClient} = require('@google-cloud/retail').v2alpha;

  // Instantiates a client
  const retailClient = new ProductServiceClient();

  async function callPurgeProducts() {
    // Construct request
    const request = {
      parent,
      filter,
    };

    // Run request
    const [operation] = await retailClient.purgeProducts(request);
    const [response] = await operation.promise();
    console.log(response);
  }

  callPurgeProducts();
  // [END retail_v2alpha_generated_ProductService_PurgeProducts_async]
}

process.on('unhandledRejection', err => {
  console.error(err.message);
  process.exitCode = 1;
});
main(...process.argv.slice(2));
