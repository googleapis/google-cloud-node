// Copyright 2023 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     https://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
// ** This file is automatically generated by gapic-generator-typescript. **
// ** https://github.com/googleapis/gapic-generator-typescript **
// ** All changes to this file may be overwritten. **

/* global window */
import type * as gax from 'google-gax';
import type {
  Callback,
  CallOptions,
  Descriptors,
  ClientOptions,
  GrpcClientOptions,
  PaginationCallback,
  GaxCall,
  LocationsClient,
  LocationProtos,
} from 'google-gax';
import {Transform} from 'stream';
import * as protos from '../../protos/protos';
import jsonProtos = require('../../protos/protos.json');
/**
 * Client JSON configuration object, loaded from
 * `src/v2alpha/catalog_service_client_config.json`.
 * This file defines retry strategy and timeouts for all API methods in this library.
 */
import * as gapicConfig from './catalog_service_client_config.json';
const version = require('../../../package.json').version;

/**
 *  Service for managing catalog configuration.
 * @class
 * @memberof v2alpha
 */
export class CatalogServiceClient {
  private _terminated = false;
  private _opts: ClientOptions;
  private _providedCustomServicePath: boolean;
  private _gaxModule: typeof gax | typeof gax.fallback;
  private _gaxGrpc: gax.GrpcClient | gax.fallback.GrpcClient;
  private _protos: {};
  private _defaults: {[method: string]: gax.CallSettings};
  auth: gax.GoogleAuth;
  descriptors: Descriptors = {
    page: {},
    stream: {},
    longrunning: {},
    batching: {},
  };
  warn: (code: string, message: string, warnType?: string) => void;
  innerApiCalls: {[name: string]: Function};
  locationsClient: LocationsClient;
  pathTemplates: {[name: string]: gax.PathTemplate};
  operationsClient: gax.OperationsClient;
  catalogServiceStub?: Promise<{[name: string]: Function}>;

  /**
   * Construct an instance of CatalogServiceClient.
   *
   * @param {object} [options] - The configuration object.
   * The options accepted by the constructor are described in detail
   * in [this document](https://github.com/googleapis/gax-nodejs/blob/main/client-libraries.md#creating-the-client-instance).
   * The common options are:
   * @param {object} [options.credentials] - Credentials object.
   * @param {string} [options.credentials.client_email]
   * @param {string} [options.credentials.private_key]
   * @param {string} [options.email] - Account email address. Required when
   *     using a .pem or .p12 keyFilename.
   * @param {string} [options.keyFilename] - Full path to the a .json, .pem, or
   *     .p12 key downloaded from the Google Developers Console. If you provide
   *     a path to a JSON file, the projectId option below is not necessary.
   *     NOTE: .pem and .p12 require you to specify options.email as well.
   * @param {number} [options.port] - The port on which to connect to
   *     the remote host.
   * @param {string} [options.projectId] - The project ID from the Google
   *     Developer's Console, e.g. 'grape-spaceship-123'. We will also check
   *     the environment variable GCLOUD_PROJECT for your project ID. If your
   *     app is running in an environment which supports
   *     {@link https://developers.google.com/identity/protocols/application-default-credentials Application Default Credentials},
   *     your project ID will be detected automatically.
   * @param {string} [options.apiEndpoint] - The domain name of the
   *     API remote host.
   * @param {gax.ClientConfig} [options.clientConfig] - Client configuration override.
   *     Follows the structure of {@link gapicConfig}.
   * @param {boolean | "rest"} [options.fallback] - Use HTTP fallback mode.
   *     Pass "rest" to use HTTP/1.1 REST API instead of gRPC.
   *     For more information, please check the
   *     {@link https://github.com/googleapis/gax-nodejs/blob/main/client-libraries.md#http11-rest-api-mode documentation}.
   * @param {gax} [gaxInstance]: loaded instance of `google-gax`. Useful if you
   *     need to avoid loading the default gRPC version and want to use the fallback
   *     HTTP implementation. Load only fallback version and pass it to the constructor:
   *     ```
   *     const gax = require('google-gax/build/src/fallback'); // avoids loading google-gax with gRPC
   *     const client = new CatalogServiceClient({fallback: 'rest'}, gax);
   *     ```
   */
  constructor(
    opts?: ClientOptions,
    gaxInstance?: typeof gax | typeof gax.fallback
  ) {
    // Ensure that options include all the required fields.
    const staticMembers = this.constructor as typeof CatalogServiceClient;
    const servicePath =
      opts?.servicePath || opts?.apiEndpoint || staticMembers.servicePath;
    this._providedCustomServicePath = !!(
      opts?.servicePath || opts?.apiEndpoint
    );
    const port = opts?.port || staticMembers.port;
    const clientConfig = opts?.clientConfig ?? {};
    const fallback =
      opts?.fallback ??
      (typeof window !== 'undefined' && typeof window?.fetch === 'function');
    opts = Object.assign({servicePath, port, clientConfig, fallback}, opts);

    // Request numeric enum values if REST transport is used.
    opts.numericEnums = true;

    // If scopes are unset in options and we're connecting to a non-default endpoint, set scopes just in case.
    if (servicePath !== staticMembers.servicePath && !('scopes' in opts)) {
      opts['scopes'] = staticMembers.scopes;
    }

    // Load google-gax module synchronously if needed
    if (!gaxInstance) {
      gaxInstance = require('google-gax') as typeof gax;
    }

    // Choose either gRPC or proto-over-HTTP implementation of google-gax.
    this._gaxModule = opts.fallback ? gaxInstance.fallback : gaxInstance;

    // Create a `gaxGrpc` object, with any grpc-specific options sent to the client.
    this._gaxGrpc = new this._gaxModule.GrpcClient(opts);

    // Save options to use in initialize() method.
    this._opts = opts;

    // Save the auth object to the client, for use by other methods.
    this.auth = this._gaxGrpc.auth as gax.GoogleAuth;

    // Set useJWTAccessWithScope on the auth object.
    this.auth.useJWTAccessWithScope = true;

    // Set defaultServicePath on the auth object.
    this.auth.defaultServicePath = staticMembers.servicePath;

    // Set the default scopes in auth client if needed.
    if (servicePath === staticMembers.servicePath) {
      this.auth.defaultScopes = staticMembers.scopes;
    }
    this.locationsClient = new this._gaxModule.LocationsClient(
      this._gaxGrpc,
      opts
    );

    // Determine the client header string.
    const clientHeader = [`gax/${this._gaxModule.version}`, `gapic/${version}`];
    if (typeof process !== 'undefined' && 'versions' in process) {
      clientHeader.push(`gl-node/${process.versions.node}`);
    } else {
      clientHeader.push(`gl-web/${this._gaxModule.version}`);
    }
    if (!opts.fallback) {
      clientHeader.push(`grpc/${this._gaxGrpc.grpcVersion}`);
    } else if (opts.fallback === 'rest') {
      clientHeader.push(`rest/${this._gaxGrpc.grpcVersion}`);
    }
    if (opts.libName && opts.libVersion) {
      clientHeader.push(`${opts.libName}/${opts.libVersion}`);
    }
    // Load the applicable protos.
    this._protos = this._gaxGrpc.loadProtoJSON(jsonProtos);

    // This API contains "path templates"; forward-slash-separated
    // identifiers to uniquely identify resources within the API.
    // Create useful helper objects for these.
    this.pathTemplates = {
      attributesConfigPathTemplate: new this._gaxModule.PathTemplate(
        'projects/{project}/locations/{location}/catalogs/{catalog}/attributesConfig'
      ),
      branchPathTemplate: new this._gaxModule.PathTemplate(
        'projects/{project}/locations/{location}/catalogs/{catalog}/branches/{branch}'
      ),
      catalogPathTemplate: new this._gaxModule.PathTemplate(
        'projects/{project}/locations/{location}/catalogs/{catalog}'
      ),
      completionConfigPathTemplate: new this._gaxModule.PathTemplate(
        'projects/{project}/locations/{location}/catalogs/{catalog}/completionConfig'
      ),
      controlPathTemplate: new this._gaxModule.PathTemplate(
        'projects/{project}/locations/{location}/catalogs/{catalog}/controls/{control}'
      ),
      locationPathTemplate: new this._gaxModule.PathTemplate(
        'projects/{project}/locations/{location}'
      ),
      modelPathTemplate: new this._gaxModule.PathTemplate(
        'projects/{project}/locations/{location}/catalogs/{catalog}/models/{model}'
      ),
      productPathTemplate: new this._gaxModule.PathTemplate(
        'projects/{project}/locations/{location}/catalogs/{catalog}/branches/{branch}/products/{product}'
      ),
      servingConfigPathTemplate: new this._gaxModule.PathTemplate(
        'projects/{project}/locations/{location}/catalogs/{catalog}/servingConfigs/{serving_config}'
      ),
    };

    // Some of the methods on this service return "paged" results,
    // (e.g. 50 results at a time, with tokens to get subsequent
    // pages). Denote the keys used for pagination and results.
    this.descriptors.page = {
      listCatalogs: new this._gaxModule.PageDescriptor(
        'pageToken',
        'nextPageToken',
        'catalogs'
      ),
    };

    const protoFilesRoot = this._gaxModule.protobuf.Root.fromJSON(jsonProtos);
    // This API contains "long-running operations", which return a
    // an Operation object that allows for tracking of the operation,
    // rather than holding a request open.
    const lroOptions: GrpcClientOptions = {
      auth: this.auth,
      grpc: 'grpc' in this._gaxGrpc ? this._gaxGrpc.grpc : undefined,
    };
    if (opts.fallback === 'rest') {
      lroOptions.protoJson = protoFilesRoot;
      lroOptions.httpRules = [
        {
          selector: 'google.longrunning.Operations.GetOperation',
          get: '/v2alpha/{name=projects/*/locations/*/catalogs/*/branches/*/operations/*}',
          additional_bindings: [
            {
              get: '/v2alpha/{name=projects/*/locations/*/catalogs/*/branches/*/places/*/operations/*}',
            },
            {
              get: '/v2alpha/{name=projects/*/locations/*/catalogs/*/operations/*}',
            },
            {get: '/v2alpha/{name=projects/*/locations/*/operations/*}'},
            {get: '/v2alpha/{name=projects/*/operations/*}'},
          ],
        },
        {
          selector: 'google.longrunning.Operations.ListOperations',
          get: '/v2alpha/{name=projects/*/locations/*/catalogs/*}/operations',
          additional_bindings: [
            {get: '/v2alpha/{name=projects/*/locations/*}/operations'},
            {get: '/v2alpha/{name=projects/*}/operations'},
          ],
        },
      ];
    }
    this.operationsClient = this._gaxModule
      .lro(lroOptions)
      .operationsClient(opts);

    this.descriptors.longrunning = {};

    // Put together the default options sent with requests.
    this._defaults = this._gaxGrpc.constructSettings(
      'google.cloud.retail.v2alpha.CatalogService',
      gapicConfig as gax.ClientConfig,
      opts.clientConfig || {},
      {'x-goog-api-client': clientHeader.join(' ')}
    );

    // Set up a dictionary of "inner API calls"; the core implementation
    // of calling the API is handled in `google-gax`, with this code
    // merely providing the destination and request information.
    this.innerApiCalls = {};

    // Add a warn function to the client constructor so it can be easily tested.
    this.warn = this._gaxModule.warn;
  }

  /**
   * Initialize the client.
   * Performs asynchronous operations (such as authentication) and prepares the client.
   * This function will be called automatically when any class method is called for the
   * first time, but if you need to initialize it before calling an actual method,
   * feel free to call initialize() directly.
   *
   * You can await on this method if you want to make sure the client is initialized.
   *
   * @returns {Promise} A promise that resolves to an authenticated service stub.
   */
  initialize() {
    // If the client stub promise is already initialized, return immediately.
    if (this.catalogServiceStub) {
      return this.catalogServiceStub;
    }

    // Put together the "service stub" for
    // google.cloud.retail.v2alpha.CatalogService.
    this.catalogServiceStub = this._gaxGrpc.createStub(
      this._opts.fallback
        ? (this._protos as protobuf.Root).lookupService(
            'google.cloud.retail.v2alpha.CatalogService'
          )
        : // eslint-disable-next-line @typescript-eslint/no-explicit-any
          (this._protos as any).google.cloud.retail.v2alpha.CatalogService,
      this._opts,
      this._providedCustomServicePath
    ) as Promise<{[method: string]: Function}>;

    // Iterate over each of the methods that the service provides
    // and create an API call method for each.
    const catalogServiceStubMethods = [
      'listCatalogs',
      'updateCatalog',
      'setDefaultBranch',
      'getDefaultBranch',
      'getCompletionConfig',
      'updateCompletionConfig',
      'getAttributesConfig',
      'updateAttributesConfig',
      'addCatalogAttribute',
      'removeCatalogAttribute',
      'batchRemoveCatalogAttributes',
      'replaceCatalogAttribute',
    ];
    for (const methodName of catalogServiceStubMethods) {
      const callPromise = this.catalogServiceStub.then(
        stub =>
          (...args: Array<{}>) => {
            if (this._terminated) {
              return Promise.reject('The client has already been closed.');
            }
            const func = stub[methodName];
            return func.apply(stub, args);
          },
        (err: Error | null | undefined) => () => {
          throw err;
        }
      );

      const descriptor = this.descriptors.page[methodName] || undefined;
      const apiCall = this._gaxModule.createApiCall(
        callPromise,
        this._defaults[methodName],
        descriptor,
        this._opts.fallback
      );

      this.innerApiCalls[methodName] = apiCall;
    }

    return this.catalogServiceStub;
  }

  /**
   * The DNS address for this API service.
   * @returns {string} The DNS address for this service.
   */
  static get servicePath() {
    return 'retail.googleapis.com';
  }

  /**
   * The DNS address for this API service - same as servicePath(),
   * exists for compatibility reasons.
   * @returns {string} The DNS address for this service.
   */
  static get apiEndpoint() {
    return 'retail.googleapis.com';
  }

  /**
   * The port for this API service.
   * @returns {number} The default port for this service.
   */
  static get port() {
    return 443;
  }

  /**
   * The scopes needed to make gRPC calls for every method defined
   * in this service.
   * @returns {string[]} List of default scopes.
   */
  static get scopes() {
    return ['https://www.googleapis.com/auth/cloud-platform'];
  }

  getProjectId(): Promise<string>;
  getProjectId(callback: Callback<string, undefined, undefined>): void;
  /**
   * Return the project ID used by this class.
   * @returns {Promise} A promise that resolves to string containing the project ID.
   */
  getProjectId(
    callback?: Callback<string, undefined, undefined>
  ): Promise<string> | void {
    if (callback) {
      this.auth.getProjectId(callback);
      return;
    }
    return this.auth.getProjectId();
  }

  // -------------------
  // -- Service calls --
  // -------------------
  /**
   * Updates the {@link google.cloud.retail.v2alpha.Catalog|Catalog}s.
   *
   * @param {Object} request
   *   The request object that will be sent.
   * @param {google.cloud.retail.v2alpha.Catalog} request.catalog
   *   Required. The {@link google.cloud.retail.v2alpha.Catalog|Catalog} to update.
   *
   *   If the caller does not have permission to update the
   *   {@link google.cloud.retail.v2alpha.Catalog|Catalog}, regardless of whether or
   *   not it exists, a PERMISSION_DENIED error is returned.
   *
   *   If the {@link google.cloud.retail.v2alpha.Catalog|Catalog} to update does not
   *   exist, a NOT_FOUND error is returned.
   * @param {google.protobuf.FieldMask} request.updateMask
   *   Indicates which fields in the provided
   *   {@link google.cloud.retail.v2alpha.Catalog|Catalog} to update.
   *
   *   If an unsupported or unknown field is provided, an INVALID_ARGUMENT error
   *   is returned.
   * @param {object} [options]
   *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
   * @returns {Promise} - The promise which resolves to an array.
   *   The first element of the array is an object representing [Catalog]{@link google.cloud.retail.v2alpha.Catalog}.
   *   Please see the
   *   [documentation](https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#regular-methods)
   *   for more details and examples.
   * @example <caption>include:samples/generated/v2alpha/catalog_service.update_catalog.js</caption>
   * region_tag:retail_v2alpha_generated_CatalogService_UpdateCatalog_async
   */
  updateCatalog(
    request?: protos.google.cloud.retail.v2alpha.IUpdateCatalogRequest,
    options?: CallOptions
  ): Promise<
    [
      protos.google.cloud.retail.v2alpha.ICatalog,
      protos.google.cloud.retail.v2alpha.IUpdateCatalogRequest | undefined,
      {} | undefined
    ]
  >;
  updateCatalog(
    request: protos.google.cloud.retail.v2alpha.IUpdateCatalogRequest,
    options: CallOptions,
    callback: Callback<
      protos.google.cloud.retail.v2alpha.ICatalog,
      | protos.google.cloud.retail.v2alpha.IUpdateCatalogRequest
      | null
      | undefined,
      {} | null | undefined
    >
  ): void;
  updateCatalog(
    request: protos.google.cloud.retail.v2alpha.IUpdateCatalogRequest,
    callback: Callback<
      protos.google.cloud.retail.v2alpha.ICatalog,
      | protos.google.cloud.retail.v2alpha.IUpdateCatalogRequest
      | null
      | undefined,
      {} | null | undefined
    >
  ): void;
  updateCatalog(
    request?: protos.google.cloud.retail.v2alpha.IUpdateCatalogRequest,
    optionsOrCallback?:
      | CallOptions
      | Callback<
          protos.google.cloud.retail.v2alpha.ICatalog,
          | protos.google.cloud.retail.v2alpha.IUpdateCatalogRequest
          | null
          | undefined,
          {} | null | undefined
        >,
    callback?: Callback<
      protos.google.cloud.retail.v2alpha.ICatalog,
      | protos.google.cloud.retail.v2alpha.IUpdateCatalogRequest
      | null
      | undefined,
      {} | null | undefined
    >
  ): Promise<
    [
      protos.google.cloud.retail.v2alpha.ICatalog,
      protos.google.cloud.retail.v2alpha.IUpdateCatalogRequest | undefined,
      {} | undefined
    ]
  > | void {
    request = request || {};
    let options: CallOptions;
    if (typeof optionsOrCallback === 'function' && callback === undefined) {
      callback = optionsOrCallback;
      options = {};
    } else {
      options = optionsOrCallback as CallOptions;
    }
    options = options || {};
    options.otherArgs = options.otherArgs || {};
    options.otherArgs.headers = options.otherArgs.headers || {};
    options.otherArgs.headers['x-goog-request-params'] =
      this._gaxModule.routingHeader.fromParams({
        'catalog.name': request.catalog!.name ?? '',
      });
    this.initialize();
    return this.innerApiCalls.updateCatalog(request, options, callback);
  }
  /**
   * Set a specified branch id as default branch. API methods such as
   * {@link google.cloud.retail.v2alpha.SearchService.Search|SearchService.Search},
   * {@link google.cloud.retail.v2alpha.ProductService.GetProduct|ProductService.GetProduct},
   * {@link google.cloud.retail.v2alpha.ProductService.ListProducts|ProductService.ListProducts}
   * will treat requests using "default_branch" to the actual branch id set as
   * default.
   *
   * For example, if `projects/* /locations/* /catalogs/* /branches/1` is set as
   * default, setting
   * {@link google.cloud.retail.v2alpha.SearchRequest.branch|SearchRequest.branch} to
   * `projects/* /locations/* /catalogs/* /branches/default_branch` is equivalent
   * to setting
   * {@link google.cloud.retail.v2alpha.SearchRequest.branch|SearchRequest.branch} to
   * `projects/* /locations/* /catalogs/* /branches/1`.
   *
   * Using multiple branches can be useful when developers would like
   * to have a staging branch to test and verify for future usage. When it
   * becomes ready, developers switch on the staging branch using this API while
   * keeping using `projects/* /locations/* /catalogs/* /branches/default_branch`
   * as {@link google.cloud.retail.v2alpha.SearchRequest.branch|SearchRequest.branch}
   * to route the traffic to this staging branch.
   *
   * CAUTION: If you have live predict/search traffic, switching the default
   * branch could potentially cause outages if the ID space of the new branch is
   * very different from the old one.
   *
   * More specifically:
   *
   * * PredictionService will only return product IDs from branch {newBranch}.
   * * SearchService will only return product IDs from branch {newBranch}
   *   (if branch is not explicitly set).
   * * UserEventService will only join events with products from branch
   *   {newBranch}.
   *
   * @param {Object} request
   *   The request object that will be sent.
   * @param {string} request.catalog
   *   Full resource name of the catalog, such as
   *   `projects/* /locations/global/catalogs/default_catalog`.
   * @param {string} request.branchId
   *   The final component of the resource name of a branch.
   *
   *   This field must be one of "0", "1" or "2". Otherwise, an INVALID_ARGUMENT
   *   error is returned.
   *
   *   If there are no sufficient active products in the targeted branch and
   *   {@link google.cloud.retail.v2alpha.SetDefaultBranchRequest.force|force} is not
   *   set, a FAILED_PRECONDITION error is returned.
   * @param {string} request.note
   *   Some note on this request, this can be retrieved by
   *   {@link google.cloud.retail.v2alpha.CatalogService.GetDefaultBranch|CatalogService.GetDefaultBranch}
   *   before next valid default branch set occurs.
   *
   *   This field must be a UTF-8 encoded string with a length limit of 1,000
   *   characters. Otherwise, an INVALID_ARGUMENT error is returned.
   * @param {boolean} request.force
   *   If set to true, it permits switching to a branch with
   *   {@link google.cloud.retail.v2alpha.SetDefaultBranchRequest.branch_id|branch_id}
   *   even if it has no sufficient active products.
   * @param {object} [options]
   *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
   * @returns {Promise} - The promise which resolves to an array.
   *   The first element of the array is an object representing [Empty]{@link google.protobuf.Empty}.
   *   Please see the
   *   [documentation](https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#regular-methods)
   *   for more details and examples.
   * @example <caption>include:samples/generated/v2alpha/catalog_service.set_default_branch.js</caption>
   * region_tag:retail_v2alpha_generated_CatalogService_SetDefaultBranch_async
   */
  setDefaultBranch(
    request?: protos.google.cloud.retail.v2alpha.ISetDefaultBranchRequest,
    options?: CallOptions
  ): Promise<
    [
      protos.google.protobuf.IEmpty,
      protos.google.cloud.retail.v2alpha.ISetDefaultBranchRequest | undefined,
      {} | undefined
    ]
  >;
  setDefaultBranch(
    request: protos.google.cloud.retail.v2alpha.ISetDefaultBranchRequest,
    options: CallOptions,
    callback: Callback<
      protos.google.protobuf.IEmpty,
      | protos.google.cloud.retail.v2alpha.ISetDefaultBranchRequest
      | null
      | undefined,
      {} | null | undefined
    >
  ): void;
  setDefaultBranch(
    request: protos.google.cloud.retail.v2alpha.ISetDefaultBranchRequest,
    callback: Callback<
      protos.google.protobuf.IEmpty,
      | protos.google.cloud.retail.v2alpha.ISetDefaultBranchRequest
      | null
      | undefined,
      {} | null | undefined
    >
  ): void;
  setDefaultBranch(
    request?: protos.google.cloud.retail.v2alpha.ISetDefaultBranchRequest,
    optionsOrCallback?:
      | CallOptions
      | Callback<
          protos.google.protobuf.IEmpty,
          | protos.google.cloud.retail.v2alpha.ISetDefaultBranchRequest
          | null
          | undefined,
          {} | null | undefined
        >,
    callback?: Callback<
      protos.google.protobuf.IEmpty,
      | protos.google.cloud.retail.v2alpha.ISetDefaultBranchRequest
      | null
      | undefined,
      {} | null | undefined
    >
  ): Promise<
    [
      protos.google.protobuf.IEmpty,
      protos.google.cloud.retail.v2alpha.ISetDefaultBranchRequest | undefined,
      {} | undefined
    ]
  > | void {
    request = request || {};
    let options: CallOptions;
    if (typeof optionsOrCallback === 'function' && callback === undefined) {
      callback = optionsOrCallback;
      options = {};
    } else {
      options = optionsOrCallback as CallOptions;
    }
    options = options || {};
    options.otherArgs = options.otherArgs || {};
    options.otherArgs.headers = options.otherArgs.headers || {};
    options.otherArgs.headers['x-goog-request-params'] =
      this._gaxModule.routingHeader.fromParams({
        catalog: request.catalog ?? '',
      });
    this.initialize();
    return this.innerApiCalls.setDefaultBranch(request, options, callback);
  }
  /**
   * Get which branch is currently default branch set by
   * {@link google.cloud.retail.v2alpha.CatalogService.SetDefaultBranch|CatalogService.SetDefaultBranch}
   * method under a specified parent catalog.
   *
   * @param {Object} request
   *   The request object that will be sent.
   * @param {string} request.catalog
   *   The parent catalog resource name, such as
   *   `projects/* /locations/global/catalogs/default_catalog`.
   * @param {object} [options]
   *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
   * @returns {Promise} - The promise which resolves to an array.
   *   The first element of the array is an object representing [GetDefaultBranchResponse]{@link google.cloud.retail.v2alpha.GetDefaultBranchResponse}.
   *   Please see the
   *   [documentation](https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#regular-methods)
   *   for more details and examples.
   * @example <caption>include:samples/generated/v2alpha/catalog_service.get_default_branch.js</caption>
   * region_tag:retail_v2alpha_generated_CatalogService_GetDefaultBranch_async
   */
  getDefaultBranch(
    request?: protos.google.cloud.retail.v2alpha.IGetDefaultBranchRequest,
    options?: CallOptions
  ): Promise<
    [
      protos.google.cloud.retail.v2alpha.IGetDefaultBranchResponse,
      protos.google.cloud.retail.v2alpha.IGetDefaultBranchRequest | undefined,
      {} | undefined
    ]
  >;
  getDefaultBranch(
    request: protos.google.cloud.retail.v2alpha.IGetDefaultBranchRequest,
    options: CallOptions,
    callback: Callback<
      protos.google.cloud.retail.v2alpha.IGetDefaultBranchResponse,
      | protos.google.cloud.retail.v2alpha.IGetDefaultBranchRequest
      | null
      | undefined,
      {} | null | undefined
    >
  ): void;
  getDefaultBranch(
    request: protos.google.cloud.retail.v2alpha.IGetDefaultBranchRequest,
    callback: Callback<
      protos.google.cloud.retail.v2alpha.IGetDefaultBranchResponse,
      | protos.google.cloud.retail.v2alpha.IGetDefaultBranchRequest
      | null
      | undefined,
      {} | null | undefined
    >
  ): void;
  getDefaultBranch(
    request?: protos.google.cloud.retail.v2alpha.IGetDefaultBranchRequest,
    optionsOrCallback?:
      | CallOptions
      | Callback<
          protos.google.cloud.retail.v2alpha.IGetDefaultBranchResponse,
          | protos.google.cloud.retail.v2alpha.IGetDefaultBranchRequest
          | null
          | undefined,
          {} | null | undefined
        >,
    callback?: Callback<
      protos.google.cloud.retail.v2alpha.IGetDefaultBranchResponse,
      | protos.google.cloud.retail.v2alpha.IGetDefaultBranchRequest
      | null
      | undefined,
      {} | null | undefined
    >
  ): Promise<
    [
      protos.google.cloud.retail.v2alpha.IGetDefaultBranchResponse,
      protos.google.cloud.retail.v2alpha.IGetDefaultBranchRequest | undefined,
      {} | undefined
    ]
  > | void {
    request = request || {};
    let options: CallOptions;
    if (typeof optionsOrCallback === 'function' && callback === undefined) {
      callback = optionsOrCallback;
      options = {};
    } else {
      options = optionsOrCallback as CallOptions;
    }
    options = options || {};
    options.otherArgs = options.otherArgs || {};
    options.otherArgs.headers = options.otherArgs.headers || {};
    options.otherArgs.headers['x-goog-request-params'] =
      this._gaxModule.routingHeader.fromParams({
        catalog: request.catalog ?? '',
      });
    this.initialize();
    return this.innerApiCalls.getDefaultBranch(request, options, callback);
  }
  /**
   * Gets a {@link google.cloud.retail.v2alpha.CompletionConfig|CompletionConfig}.
   *
   * @param {Object} request
   *   The request object that will be sent.
   * @param {string} request.name
   *   Required. Full CompletionConfig resource name. Format:
   *   `projects/{project_number}/locations/{location_id}/catalogs/{catalog_id}/completionConfig`
   * @param {object} [options]
   *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
   * @returns {Promise} - The promise which resolves to an array.
   *   The first element of the array is an object representing [CompletionConfig]{@link google.cloud.retail.v2alpha.CompletionConfig}.
   *   Please see the
   *   [documentation](https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#regular-methods)
   *   for more details and examples.
   * @example <caption>include:samples/generated/v2alpha/catalog_service.get_completion_config.js</caption>
   * region_tag:retail_v2alpha_generated_CatalogService_GetCompletionConfig_async
   */
  getCompletionConfig(
    request?: protos.google.cloud.retail.v2alpha.IGetCompletionConfigRequest,
    options?: CallOptions
  ): Promise<
    [
      protos.google.cloud.retail.v2alpha.ICompletionConfig,
      (
        | protos.google.cloud.retail.v2alpha.IGetCompletionConfigRequest
        | undefined
      ),
      {} | undefined
    ]
  >;
  getCompletionConfig(
    request: protos.google.cloud.retail.v2alpha.IGetCompletionConfigRequest,
    options: CallOptions,
    callback: Callback<
      protos.google.cloud.retail.v2alpha.ICompletionConfig,
      | protos.google.cloud.retail.v2alpha.IGetCompletionConfigRequest
      | null
      | undefined,
      {} | null | undefined
    >
  ): void;
  getCompletionConfig(
    request: protos.google.cloud.retail.v2alpha.IGetCompletionConfigRequest,
    callback: Callback<
      protos.google.cloud.retail.v2alpha.ICompletionConfig,
      | protos.google.cloud.retail.v2alpha.IGetCompletionConfigRequest
      | null
      | undefined,
      {} | null | undefined
    >
  ): void;
  getCompletionConfig(
    request?: protos.google.cloud.retail.v2alpha.IGetCompletionConfigRequest,
    optionsOrCallback?:
      | CallOptions
      | Callback<
          protos.google.cloud.retail.v2alpha.ICompletionConfig,
          | protos.google.cloud.retail.v2alpha.IGetCompletionConfigRequest
          | null
          | undefined,
          {} | null | undefined
        >,
    callback?: Callback<
      protos.google.cloud.retail.v2alpha.ICompletionConfig,
      | protos.google.cloud.retail.v2alpha.IGetCompletionConfigRequest
      | null
      | undefined,
      {} | null | undefined
    >
  ): Promise<
    [
      protos.google.cloud.retail.v2alpha.ICompletionConfig,
      (
        | protos.google.cloud.retail.v2alpha.IGetCompletionConfigRequest
        | undefined
      ),
      {} | undefined
    ]
  > | void {
    request = request || {};
    let options: CallOptions;
    if (typeof optionsOrCallback === 'function' && callback === undefined) {
      callback = optionsOrCallback;
      options = {};
    } else {
      options = optionsOrCallback as CallOptions;
    }
    options = options || {};
    options.otherArgs = options.otherArgs || {};
    options.otherArgs.headers = options.otherArgs.headers || {};
    options.otherArgs.headers['x-goog-request-params'] =
      this._gaxModule.routingHeader.fromParams({
        name: request.name ?? '',
      });
    this.initialize();
    return this.innerApiCalls.getCompletionConfig(request, options, callback);
  }
  /**
   * Updates the
   * {@link google.cloud.retail.v2alpha.CompletionConfig|CompletionConfig}s.
   *
   * @param {Object} request
   *   The request object that will be sent.
   * @param {google.cloud.retail.v2alpha.CompletionConfig} request.completionConfig
   *   Required. The
   *   {@link google.cloud.retail.v2alpha.CompletionConfig|CompletionConfig} to update.
   *
   *   If the caller does not have permission to update the
   *   {@link google.cloud.retail.v2alpha.CompletionConfig|CompletionConfig}, then a
   *   PERMISSION_DENIED error is returned.
   *
   *   If the {@link google.cloud.retail.v2alpha.CompletionConfig|CompletionConfig} to
   *   update does not exist, a NOT_FOUND error is returned.
   * @param {google.protobuf.FieldMask} request.updateMask
   *   Indicates which fields in the provided
   *   {@link google.cloud.retail.v2alpha.CompletionConfig|CompletionConfig} to update.
   *   The following are the only supported fields:
   *
   *   * {@link google.cloud.retail.v2alpha.CompletionConfig.matching_order|CompletionConfig.matching_order}
   *   * {@link google.cloud.retail.v2alpha.CompletionConfig.max_suggestions|CompletionConfig.max_suggestions}
   *   * {@link google.cloud.retail.v2alpha.CompletionConfig.min_prefix_length|CompletionConfig.min_prefix_length}
   *   * {@link google.cloud.retail.v2alpha.CompletionConfig.auto_learning|CompletionConfig.auto_learning}
   *
   *   If not set, all supported fields are updated.
   * @param {object} [options]
   *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
   * @returns {Promise} - The promise which resolves to an array.
   *   The first element of the array is an object representing [CompletionConfig]{@link google.cloud.retail.v2alpha.CompletionConfig}.
   *   Please see the
   *   [documentation](https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#regular-methods)
   *   for more details and examples.
   * @example <caption>include:samples/generated/v2alpha/catalog_service.update_completion_config.js</caption>
   * region_tag:retail_v2alpha_generated_CatalogService_UpdateCompletionConfig_async
   */
  updateCompletionConfig(
    request?: protos.google.cloud.retail.v2alpha.IUpdateCompletionConfigRequest,
    options?: CallOptions
  ): Promise<
    [
      protos.google.cloud.retail.v2alpha.ICompletionConfig,
      (
        | protos.google.cloud.retail.v2alpha.IUpdateCompletionConfigRequest
        | undefined
      ),
      {} | undefined
    ]
  >;
  updateCompletionConfig(
    request: protos.google.cloud.retail.v2alpha.IUpdateCompletionConfigRequest,
    options: CallOptions,
    callback: Callback<
      protos.google.cloud.retail.v2alpha.ICompletionConfig,
      | protos.google.cloud.retail.v2alpha.IUpdateCompletionConfigRequest
      | null
      | undefined,
      {} | null | undefined
    >
  ): void;
  updateCompletionConfig(
    request: protos.google.cloud.retail.v2alpha.IUpdateCompletionConfigRequest,
    callback: Callback<
      protos.google.cloud.retail.v2alpha.ICompletionConfig,
      | protos.google.cloud.retail.v2alpha.IUpdateCompletionConfigRequest
      | null
      | undefined,
      {} | null | undefined
    >
  ): void;
  updateCompletionConfig(
    request?: protos.google.cloud.retail.v2alpha.IUpdateCompletionConfigRequest,
    optionsOrCallback?:
      | CallOptions
      | Callback<
          protos.google.cloud.retail.v2alpha.ICompletionConfig,
          | protos.google.cloud.retail.v2alpha.IUpdateCompletionConfigRequest
          | null
          | undefined,
          {} | null | undefined
        >,
    callback?: Callback<
      protos.google.cloud.retail.v2alpha.ICompletionConfig,
      | protos.google.cloud.retail.v2alpha.IUpdateCompletionConfigRequest
      | null
      | undefined,
      {} | null | undefined
    >
  ): Promise<
    [
      protos.google.cloud.retail.v2alpha.ICompletionConfig,
      (
        | protos.google.cloud.retail.v2alpha.IUpdateCompletionConfigRequest
        | undefined
      ),
      {} | undefined
    ]
  > | void {
    request = request || {};
    let options: CallOptions;
    if (typeof optionsOrCallback === 'function' && callback === undefined) {
      callback = optionsOrCallback;
      options = {};
    } else {
      options = optionsOrCallback as CallOptions;
    }
    options = options || {};
    options.otherArgs = options.otherArgs || {};
    options.otherArgs.headers = options.otherArgs.headers || {};
    options.otherArgs.headers['x-goog-request-params'] =
      this._gaxModule.routingHeader.fromParams({
        'completion_config.name': request.completionConfig!.name ?? '',
      });
    this.initialize();
    return this.innerApiCalls.updateCompletionConfig(
      request,
      options,
      callback
    );
  }
  /**
   * Gets an {@link google.cloud.retail.v2alpha.AttributesConfig|AttributesConfig}.
   *
   * @param {Object} request
   *   The request object that will be sent.
   * @param {string} request.name
   *   Required. Full AttributesConfig resource name. Format:
   *   `projects/{project_number}/locations/{location_id}/catalogs/{catalog_id}/attributesConfig`
   * @param {object} [options]
   *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
   * @returns {Promise} - The promise which resolves to an array.
   *   The first element of the array is an object representing [AttributesConfig]{@link google.cloud.retail.v2alpha.AttributesConfig}.
   *   Please see the
   *   [documentation](https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#regular-methods)
   *   for more details and examples.
   * @example <caption>include:samples/generated/v2alpha/catalog_service.get_attributes_config.js</caption>
   * region_tag:retail_v2alpha_generated_CatalogService_GetAttributesConfig_async
   */
  getAttributesConfig(
    request?: protos.google.cloud.retail.v2alpha.IGetAttributesConfigRequest,
    options?: CallOptions
  ): Promise<
    [
      protos.google.cloud.retail.v2alpha.IAttributesConfig,
      (
        | protos.google.cloud.retail.v2alpha.IGetAttributesConfigRequest
        | undefined
      ),
      {} | undefined
    ]
  >;
  getAttributesConfig(
    request: protos.google.cloud.retail.v2alpha.IGetAttributesConfigRequest,
    options: CallOptions,
    callback: Callback<
      protos.google.cloud.retail.v2alpha.IAttributesConfig,
      | protos.google.cloud.retail.v2alpha.IGetAttributesConfigRequest
      | null
      | undefined,
      {} | null | undefined
    >
  ): void;
  getAttributesConfig(
    request: protos.google.cloud.retail.v2alpha.IGetAttributesConfigRequest,
    callback: Callback<
      protos.google.cloud.retail.v2alpha.IAttributesConfig,
      | protos.google.cloud.retail.v2alpha.IGetAttributesConfigRequest
      | null
      | undefined,
      {} | null | undefined
    >
  ): void;
  getAttributesConfig(
    request?: protos.google.cloud.retail.v2alpha.IGetAttributesConfigRequest,
    optionsOrCallback?:
      | CallOptions
      | Callback<
          protos.google.cloud.retail.v2alpha.IAttributesConfig,
          | protos.google.cloud.retail.v2alpha.IGetAttributesConfigRequest
          | null
          | undefined,
          {} | null | undefined
        >,
    callback?: Callback<
      protos.google.cloud.retail.v2alpha.IAttributesConfig,
      | protos.google.cloud.retail.v2alpha.IGetAttributesConfigRequest
      | null
      | undefined,
      {} | null | undefined
    >
  ): Promise<
    [
      protos.google.cloud.retail.v2alpha.IAttributesConfig,
      (
        | protos.google.cloud.retail.v2alpha.IGetAttributesConfigRequest
        | undefined
      ),
      {} | undefined
    ]
  > | void {
    request = request || {};
    let options: CallOptions;
    if (typeof optionsOrCallback === 'function' && callback === undefined) {
      callback = optionsOrCallback;
      options = {};
    } else {
      options = optionsOrCallback as CallOptions;
    }
    options = options || {};
    options.otherArgs = options.otherArgs || {};
    options.otherArgs.headers = options.otherArgs.headers || {};
    options.otherArgs.headers['x-goog-request-params'] =
      this._gaxModule.routingHeader.fromParams({
        name: request.name ?? '',
      });
    this.initialize();
    return this.innerApiCalls.getAttributesConfig(request, options, callback);
  }
  /**
   * Updates the
   * {@link google.cloud.retail.v2alpha.AttributesConfig|AttributesConfig}.
   *
   * The catalog attributes in the request will be updated in the catalog, or
   * inserted if they do not exist. Existing catalog attributes not included in
   * the request will remain unchanged. Attributes that are assigned to
   * products, but do not exist at the catalog level, are always included in the
   * response. The product attribute is assigned default values for missing
   * catalog attribute fields, e.g., searchable and dynamic facetable options.
   *
   * @param {Object} request
   *   The request object that will be sent.
   * @param {google.cloud.retail.v2alpha.AttributesConfig} request.attributesConfig
   *   Required. The
   *   {@link google.cloud.retail.v2alpha.AttributesConfig|AttributesConfig} to update.
   * @param {google.protobuf.FieldMask} request.updateMask
   *   Indicates which fields in the provided
   *   {@link google.cloud.retail.v2alpha.AttributesConfig|AttributesConfig} to update.
   *   The following is the only supported field:
   *
   *   * {@link google.cloud.retail.v2alpha.AttributesConfig.catalog_attributes|AttributesConfig.catalog_attributes}
   *
   *   If not set, all supported fields are updated.
   * @param {object} [options]
   *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
   * @returns {Promise} - The promise which resolves to an array.
   *   The first element of the array is an object representing [AttributesConfig]{@link google.cloud.retail.v2alpha.AttributesConfig}.
   *   Please see the
   *   [documentation](https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#regular-methods)
   *   for more details and examples.
   * @example <caption>include:samples/generated/v2alpha/catalog_service.update_attributes_config.js</caption>
   * region_tag:retail_v2alpha_generated_CatalogService_UpdateAttributesConfig_async
   */
  updateAttributesConfig(
    request?: protos.google.cloud.retail.v2alpha.IUpdateAttributesConfigRequest,
    options?: CallOptions
  ): Promise<
    [
      protos.google.cloud.retail.v2alpha.IAttributesConfig,
      (
        | protos.google.cloud.retail.v2alpha.IUpdateAttributesConfigRequest
        | undefined
      ),
      {} | undefined
    ]
  >;
  updateAttributesConfig(
    request: protos.google.cloud.retail.v2alpha.IUpdateAttributesConfigRequest,
    options: CallOptions,
    callback: Callback<
      protos.google.cloud.retail.v2alpha.IAttributesConfig,
      | protos.google.cloud.retail.v2alpha.IUpdateAttributesConfigRequest
      | null
      | undefined,
      {} | null | undefined
    >
  ): void;
  updateAttributesConfig(
    request: protos.google.cloud.retail.v2alpha.IUpdateAttributesConfigRequest,
    callback: Callback<
      protos.google.cloud.retail.v2alpha.IAttributesConfig,
      | protos.google.cloud.retail.v2alpha.IUpdateAttributesConfigRequest
      | null
      | undefined,
      {} | null | undefined
    >
  ): void;
  updateAttributesConfig(
    request?: protos.google.cloud.retail.v2alpha.IUpdateAttributesConfigRequest,
    optionsOrCallback?:
      | CallOptions
      | Callback<
          protos.google.cloud.retail.v2alpha.IAttributesConfig,
          | protos.google.cloud.retail.v2alpha.IUpdateAttributesConfigRequest
          | null
          | undefined,
          {} | null | undefined
        >,
    callback?: Callback<
      protos.google.cloud.retail.v2alpha.IAttributesConfig,
      | protos.google.cloud.retail.v2alpha.IUpdateAttributesConfigRequest
      | null
      | undefined,
      {} | null | undefined
    >
  ): Promise<
    [
      protos.google.cloud.retail.v2alpha.IAttributesConfig,
      (
        | protos.google.cloud.retail.v2alpha.IUpdateAttributesConfigRequest
        | undefined
      ),
      {} | undefined
    ]
  > | void {
    request = request || {};
    let options: CallOptions;
    if (typeof optionsOrCallback === 'function' && callback === undefined) {
      callback = optionsOrCallback;
      options = {};
    } else {
      options = optionsOrCallback as CallOptions;
    }
    options = options || {};
    options.otherArgs = options.otherArgs || {};
    options.otherArgs.headers = options.otherArgs.headers || {};
    options.otherArgs.headers['x-goog-request-params'] =
      this._gaxModule.routingHeader.fromParams({
        'attributes_config.name': request.attributesConfig!.name ?? '',
      });
    this.initialize();
    return this.innerApiCalls.updateAttributesConfig(
      request,
      options,
      callback
    );
  }
  /**
   * Adds the specified
   * {@link google.cloud.retail.v2alpha.CatalogAttribute|CatalogAttribute} to the
   * {@link google.cloud.retail.v2alpha.AttributesConfig|AttributesConfig}.
   *
   * If the {@link google.cloud.retail.v2alpha.CatalogAttribute|CatalogAttribute} to
   * add already exists, an ALREADY_EXISTS error is returned.
   *
   * @param {Object} request
   *   The request object that will be sent.
   * @param {string} request.attributesConfig
   *   Required. Full AttributesConfig resource name. Format:
   *   `projects/{project_number}/locations/{location_id}/catalogs/{catalog_id}/attributesConfig`
   * @param {google.cloud.retail.v2alpha.CatalogAttribute} request.catalogAttribute
   *   Required. The
   *   {@link google.cloud.retail.v2alpha.CatalogAttribute|CatalogAttribute} to add.
   * @param {object} [options]
   *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
   * @returns {Promise} - The promise which resolves to an array.
   *   The first element of the array is an object representing [AttributesConfig]{@link google.cloud.retail.v2alpha.AttributesConfig}.
   *   Please see the
   *   [documentation](https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#regular-methods)
   *   for more details and examples.
   * @example <caption>include:samples/generated/v2alpha/catalog_service.add_catalog_attribute.js</caption>
   * region_tag:retail_v2alpha_generated_CatalogService_AddCatalogAttribute_async
   */
  addCatalogAttribute(
    request?: protos.google.cloud.retail.v2alpha.IAddCatalogAttributeRequest,
    options?: CallOptions
  ): Promise<
    [
      protos.google.cloud.retail.v2alpha.IAttributesConfig,
      (
        | protos.google.cloud.retail.v2alpha.IAddCatalogAttributeRequest
        | undefined
      ),
      {} | undefined
    ]
  >;
  addCatalogAttribute(
    request: protos.google.cloud.retail.v2alpha.IAddCatalogAttributeRequest,
    options: CallOptions,
    callback: Callback<
      protos.google.cloud.retail.v2alpha.IAttributesConfig,
      | protos.google.cloud.retail.v2alpha.IAddCatalogAttributeRequest
      | null
      | undefined,
      {} | null | undefined
    >
  ): void;
  addCatalogAttribute(
    request: protos.google.cloud.retail.v2alpha.IAddCatalogAttributeRequest,
    callback: Callback<
      protos.google.cloud.retail.v2alpha.IAttributesConfig,
      | protos.google.cloud.retail.v2alpha.IAddCatalogAttributeRequest
      | null
      | undefined,
      {} | null | undefined
    >
  ): void;
  addCatalogAttribute(
    request?: protos.google.cloud.retail.v2alpha.IAddCatalogAttributeRequest,
    optionsOrCallback?:
      | CallOptions
      | Callback<
          protos.google.cloud.retail.v2alpha.IAttributesConfig,
          | protos.google.cloud.retail.v2alpha.IAddCatalogAttributeRequest
          | null
          | undefined,
          {} | null | undefined
        >,
    callback?: Callback<
      protos.google.cloud.retail.v2alpha.IAttributesConfig,
      | protos.google.cloud.retail.v2alpha.IAddCatalogAttributeRequest
      | null
      | undefined,
      {} | null | undefined
    >
  ): Promise<
    [
      protos.google.cloud.retail.v2alpha.IAttributesConfig,
      (
        | protos.google.cloud.retail.v2alpha.IAddCatalogAttributeRequest
        | undefined
      ),
      {} | undefined
    ]
  > | void {
    request = request || {};
    let options: CallOptions;
    if (typeof optionsOrCallback === 'function' && callback === undefined) {
      callback = optionsOrCallback;
      options = {};
    } else {
      options = optionsOrCallback as CallOptions;
    }
    options = options || {};
    options.otherArgs = options.otherArgs || {};
    options.otherArgs.headers = options.otherArgs.headers || {};
    options.otherArgs.headers['x-goog-request-params'] =
      this._gaxModule.routingHeader.fromParams({
        attributes_config: request.attributesConfig ?? '',
      });
    this.initialize();
    return this.innerApiCalls.addCatalogAttribute(request, options, callback);
  }
  /**
   * Removes the specified
   * {@link google.cloud.retail.v2alpha.CatalogAttribute|CatalogAttribute} from the
   * {@link google.cloud.retail.v2alpha.AttributesConfig|AttributesConfig}.
   *
   * If the {@link google.cloud.retail.v2alpha.CatalogAttribute|CatalogAttribute} to
   * remove does not exist, a NOT_FOUND error is returned.
   *
   * @param {Object} request
   *   The request object that will be sent.
   * @param {string} request.attributesConfig
   *   Required. Full AttributesConfig resource name. Format:
   *   `projects/{project_number}/locations/{location_id}/catalogs/{catalog_id}/attributesConfig`
   * @param {string} request.key
   *   Required. The attribute name key of the
   *   {@link google.cloud.retail.v2alpha.CatalogAttribute|CatalogAttribute} to remove.
   * @param {object} [options]
   *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
   * @returns {Promise} - The promise which resolves to an array.
   *   The first element of the array is an object representing [AttributesConfig]{@link google.cloud.retail.v2alpha.AttributesConfig}.
   *   Please see the
   *   [documentation](https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#regular-methods)
   *   for more details and examples.
   * @example <caption>include:samples/generated/v2alpha/catalog_service.remove_catalog_attribute.js</caption>
   * region_tag:retail_v2alpha_generated_CatalogService_RemoveCatalogAttribute_async
   */
  removeCatalogAttribute(
    request?: protos.google.cloud.retail.v2alpha.IRemoveCatalogAttributeRequest,
    options?: CallOptions
  ): Promise<
    [
      protos.google.cloud.retail.v2alpha.IAttributesConfig,
      (
        | protos.google.cloud.retail.v2alpha.IRemoveCatalogAttributeRequest
        | undefined
      ),
      {} | undefined
    ]
  >;
  removeCatalogAttribute(
    request: protos.google.cloud.retail.v2alpha.IRemoveCatalogAttributeRequest,
    options: CallOptions,
    callback: Callback<
      protos.google.cloud.retail.v2alpha.IAttributesConfig,
      | protos.google.cloud.retail.v2alpha.IRemoveCatalogAttributeRequest
      | null
      | undefined,
      {} | null | undefined
    >
  ): void;
  removeCatalogAttribute(
    request: protos.google.cloud.retail.v2alpha.IRemoveCatalogAttributeRequest,
    callback: Callback<
      protos.google.cloud.retail.v2alpha.IAttributesConfig,
      | protos.google.cloud.retail.v2alpha.IRemoveCatalogAttributeRequest
      | null
      | undefined,
      {} | null | undefined
    >
  ): void;
  removeCatalogAttribute(
    request?: protos.google.cloud.retail.v2alpha.IRemoveCatalogAttributeRequest,
    optionsOrCallback?:
      | CallOptions
      | Callback<
          protos.google.cloud.retail.v2alpha.IAttributesConfig,
          | protos.google.cloud.retail.v2alpha.IRemoveCatalogAttributeRequest
          | null
          | undefined,
          {} | null | undefined
        >,
    callback?: Callback<
      protos.google.cloud.retail.v2alpha.IAttributesConfig,
      | protos.google.cloud.retail.v2alpha.IRemoveCatalogAttributeRequest
      | null
      | undefined,
      {} | null | undefined
    >
  ): Promise<
    [
      protos.google.cloud.retail.v2alpha.IAttributesConfig,
      (
        | protos.google.cloud.retail.v2alpha.IRemoveCatalogAttributeRequest
        | undefined
      ),
      {} | undefined
    ]
  > | void {
    request = request || {};
    let options: CallOptions;
    if (typeof optionsOrCallback === 'function' && callback === undefined) {
      callback = optionsOrCallback;
      options = {};
    } else {
      options = optionsOrCallback as CallOptions;
    }
    options = options || {};
    options.otherArgs = options.otherArgs || {};
    options.otherArgs.headers = options.otherArgs.headers || {};
    options.otherArgs.headers['x-goog-request-params'] =
      this._gaxModule.routingHeader.fromParams({
        attributes_config: request.attributesConfig ?? '',
      });
    this.initialize();
    return this.innerApiCalls.removeCatalogAttribute(
      request,
      options,
      callback
    );
  }
  /**
   * Removes all specified
   * {@link google.cloud.retail.v2alpha.CatalogAttribute|CatalogAttribute}s from the
   * {@link google.cloud.retail.v2alpha.AttributesConfig|AttributesConfig}.
   *
   * @param {Object} request
   *   The request object that will be sent.
   * @param {string} request.attributesConfig
   *   Required. The attributes config resource shared by all catalog attributes
   *   being deleted. Format:
   *   `projects/{project_number}/locations/{location_id}/catalogs/{catalog_id}/attributesConfig`
   * @param {string[]} request.attributeKeys
   *   Required. The attribute name keys of the
   *   {@link google.cloud.retail.v2alpha.CatalogAttribute|CatalogAttribute}s to
   *   delete. A maximum of 1000 catalog attributes can be deleted in a batch.
   * @param {object} [options]
   *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
   * @returns {Promise} - The promise which resolves to an array.
   *   The first element of the array is an object representing [BatchRemoveCatalogAttributesResponse]{@link google.cloud.retail.v2alpha.BatchRemoveCatalogAttributesResponse}.
   *   Please see the
   *   [documentation](https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#regular-methods)
   *   for more details and examples.
   * @example <caption>include:samples/generated/v2alpha/catalog_service.batch_remove_catalog_attributes.js</caption>
   * region_tag:retail_v2alpha_generated_CatalogService_BatchRemoveCatalogAttributes_async
   */
  batchRemoveCatalogAttributes(
    request?: protos.google.cloud.retail.v2alpha.IBatchRemoveCatalogAttributesRequest,
    options?: CallOptions
  ): Promise<
    [
      protos.google.cloud.retail.v2alpha.IBatchRemoveCatalogAttributesResponse,
      (
        | protos.google.cloud.retail.v2alpha.IBatchRemoveCatalogAttributesRequest
        | undefined
      ),
      {} | undefined
    ]
  >;
  batchRemoveCatalogAttributes(
    request: protos.google.cloud.retail.v2alpha.IBatchRemoveCatalogAttributesRequest,
    options: CallOptions,
    callback: Callback<
      protos.google.cloud.retail.v2alpha.IBatchRemoveCatalogAttributesResponse,
      | protos.google.cloud.retail.v2alpha.IBatchRemoveCatalogAttributesRequest
      | null
      | undefined,
      {} | null | undefined
    >
  ): void;
  batchRemoveCatalogAttributes(
    request: protos.google.cloud.retail.v2alpha.IBatchRemoveCatalogAttributesRequest,
    callback: Callback<
      protos.google.cloud.retail.v2alpha.IBatchRemoveCatalogAttributesResponse,
      | protos.google.cloud.retail.v2alpha.IBatchRemoveCatalogAttributesRequest
      | null
      | undefined,
      {} | null | undefined
    >
  ): void;
  batchRemoveCatalogAttributes(
    request?: protos.google.cloud.retail.v2alpha.IBatchRemoveCatalogAttributesRequest,
    optionsOrCallback?:
      | CallOptions
      | Callback<
          protos.google.cloud.retail.v2alpha.IBatchRemoveCatalogAttributesResponse,
          | protos.google.cloud.retail.v2alpha.IBatchRemoveCatalogAttributesRequest
          | null
          | undefined,
          {} | null | undefined
        >,
    callback?: Callback<
      protos.google.cloud.retail.v2alpha.IBatchRemoveCatalogAttributesResponse,
      | protos.google.cloud.retail.v2alpha.IBatchRemoveCatalogAttributesRequest
      | null
      | undefined,
      {} | null | undefined
    >
  ): Promise<
    [
      protos.google.cloud.retail.v2alpha.IBatchRemoveCatalogAttributesResponse,
      (
        | protos.google.cloud.retail.v2alpha.IBatchRemoveCatalogAttributesRequest
        | undefined
      ),
      {} | undefined
    ]
  > | void {
    request = request || {};
    let options: CallOptions;
    if (typeof optionsOrCallback === 'function' && callback === undefined) {
      callback = optionsOrCallback;
      options = {};
    } else {
      options = optionsOrCallback as CallOptions;
    }
    options = options || {};
    options.otherArgs = options.otherArgs || {};
    options.otherArgs.headers = options.otherArgs.headers || {};
    options.otherArgs.headers['x-goog-request-params'] =
      this._gaxModule.routingHeader.fromParams({
        attributes_config: request.attributesConfig ?? '',
      });
    this.initialize();
    return this.innerApiCalls.batchRemoveCatalogAttributes(
      request,
      options,
      callback
    );
  }
  /**
   * Replaces the specified
   * {@link google.cloud.retail.v2alpha.CatalogAttribute|CatalogAttribute} in the
   * {@link google.cloud.retail.v2alpha.AttributesConfig|AttributesConfig} by
   * updating the catalog attribute with the same
   * {@link google.cloud.retail.v2alpha.CatalogAttribute.key|CatalogAttribute.key}.
   *
   * If the {@link google.cloud.retail.v2alpha.CatalogAttribute|CatalogAttribute} to
   * replace does not exist, a NOT_FOUND error is returned.
   *
   * @param {Object} request
   *   The request object that will be sent.
   * @param {string} request.attributesConfig
   *   Required. Full AttributesConfig resource name. Format:
   *   `projects/{project_number}/locations/{location_id}/catalogs/{catalog_id}/attributesConfig`
   * @param {google.cloud.retail.v2alpha.CatalogAttribute} request.catalogAttribute
   *   Required. The updated
   *   {@link google.cloud.retail.v2alpha.CatalogAttribute|CatalogAttribute}.
   * @param {google.protobuf.FieldMask} request.updateMask
   *   Indicates which fields in the provided
   *   {@link google.cloud.retail.v2alpha.CatalogAttribute|CatalogAttribute} to update.
   *   The following are NOT supported:
   *
   *   * {@link google.cloud.retail.v2alpha.CatalogAttribute.key|CatalogAttribute.key}
   *
   *   If not set, all supported fields are updated.
   * @param {object} [options]
   *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
   * @returns {Promise} - The promise which resolves to an array.
   *   The first element of the array is an object representing [AttributesConfig]{@link google.cloud.retail.v2alpha.AttributesConfig}.
   *   Please see the
   *   [documentation](https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#regular-methods)
   *   for more details and examples.
   * @example <caption>include:samples/generated/v2alpha/catalog_service.replace_catalog_attribute.js</caption>
   * region_tag:retail_v2alpha_generated_CatalogService_ReplaceCatalogAttribute_async
   */
  replaceCatalogAttribute(
    request?: protos.google.cloud.retail.v2alpha.IReplaceCatalogAttributeRequest,
    options?: CallOptions
  ): Promise<
    [
      protos.google.cloud.retail.v2alpha.IAttributesConfig,
      (
        | protos.google.cloud.retail.v2alpha.IReplaceCatalogAttributeRequest
        | undefined
      ),
      {} | undefined
    ]
  >;
  replaceCatalogAttribute(
    request: protos.google.cloud.retail.v2alpha.IReplaceCatalogAttributeRequest,
    options: CallOptions,
    callback: Callback<
      protos.google.cloud.retail.v2alpha.IAttributesConfig,
      | protos.google.cloud.retail.v2alpha.IReplaceCatalogAttributeRequest
      | null
      | undefined,
      {} | null | undefined
    >
  ): void;
  replaceCatalogAttribute(
    request: protos.google.cloud.retail.v2alpha.IReplaceCatalogAttributeRequest,
    callback: Callback<
      protos.google.cloud.retail.v2alpha.IAttributesConfig,
      | protos.google.cloud.retail.v2alpha.IReplaceCatalogAttributeRequest
      | null
      | undefined,
      {} | null | undefined
    >
  ): void;
  replaceCatalogAttribute(
    request?: protos.google.cloud.retail.v2alpha.IReplaceCatalogAttributeRequest,
    optionsOrCallback?:
      | CallOptions
      | Callback<
          protos.google.cloud.retail.v2alpha.IAttributesConfig,
          | protos.google.cloud.retail.v2alpha.IReplaceCatalogAttributeRequest
          | null
          | undefined,
          {} | null | undefined
        >,
    callback?: Callback<
      protos.google.cloud.retail.v2alpha.IAttributesConfig,
      | protos.google.cloud.retail.v2alpha.IReplaceCatalogAttributeRequest
      | null
      | undefined,
      {} | null | undefined
    >
  ): Promise<
    [
      protos.google.cloud.retail.v2alpha.IAttributesConfig,
      (
        | protos.google.cloud.retail.v2alpha.IReplaceCatalogAttributeRequest
        | undefined
      ),
      {} | undefined
    ]
  > | void {
    request = request || {};
    let options: CallOptions;
    if (typeof optionsOrCallback === 'function' && callback === undefined) {
      callback = optionsOrCallback;
      options = {};
    } else {
      options = optionsOrCallback as CallOptions;
    }
    options = options || {};
    options.otherArgs = options.otherArgs || {};
    options.otherArgs.headers = options.otherArgs.headers || {};
    options.otherArgs.headers['x-goog-request-params'] =
      this._gaxModule.routingHeader.fromParams({
        attributes_config: request.attributesConfig ?? '',
      });
    this.initialize();
    return this.innerApiCalls.replaceCatalogAttribute(
      request,
      options,
      callback
    );
  }

  /**
   * Lists all the {@link google.cloud.retail.v2alpha.Catalog|Catalog}s associated
   * with the project.
   *
   * @param {Object} request
   *   The request object that will be sent.
   * @param {string} request.parent
   *   Required. The account resource name with an associated location.
   *
   *   If the caller does not have permission to list
   *   {@link google.cloud.retail.v2alpha.Catalog|Catalog}s under this location,
   *   regardless of whether or not this location exists, a PERMISSION_DENIED
   *   error is returned.
   * @param {number} request.pageSize
   *   Maximum number of {@link google.cloud.retail.v2alpha.Catalog|Catalog}s to
   *   return. If unspecified, defaults to 50. The maximum allowed value is 1000.
   *   Values above 1000 will be coerced to 1000.
   *
   *   If this field is negative, an INVALID_ARGUMENT is returned.
   * @param {string} request.pageToken
   *   A page token
   *   {@link google.cloud.retail.v2alpha.ListCatalogsResponse.next_page_token|ListCatalogsResponse.next_page_token},
   *   received from a previous
   *   {@link google.cloud.retail.v2alpha.CatalogService.ListCatalogs|CatalogService.ListCatalogs}
   *   call. Provide this to retrieve the subsequent page.
   *
   *   When paginating, all other parameters provided to
   *   {@link google.cloud.retail.v2alpha.CatalogService.ListCatalogs|CatalogService.ListCatalogs}
   *   must match the call that provided the page token. Otherwise, an
   *   INVALID_ARGUMENT error is returned.
   * @param {object} [options]
   *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
   * @returns {Promise} - The promise which resolves to an array.
   *   The first element of the array is Array of [Catalog]{@link google.cloud.retail.v2alpha.Catalog}.
   *   The client library will perform auto-pagination by default: it will call the API as many
   *   times as needed and will merge results from all the pages into this array.
   *   Note that it can affect your quota.
   *   We recommend using `listCatalogsAsync()`
   *   method described below for async iteration which you can stop as needed.
   *   Please see the
   *   [documentation](https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#auto-pagination)
   *   for more details and examples.
   */
  listCatalogs(
    request?: protos.google.cloud.retail.v2alpha.IListCatalogsRequest,
    options?: CallOptions
  ): Promise<
    [
      protos.google.cloud.retail.v2alpha.ICatalog[],
      protos.google.cloud.retail.v2alpha.IListCatalogsRequest | null,
      protos.google.cloud.retail.v2alpha.IListCatalogsResponse
    ]
  >;
  listCatalogs(
    request: protos.google.cloud.retail.v2alpha.IListCatalogsRequest,
    options: CallOptions,
    callback: PaginationCallback<
      protos.google.cloud.retail.v2alpha.IListCatalogsRequest,
      | protos.google.cloud.retail.v2alpha.IListCatalogsResponse
      | null
      | undefined,
      protos.google.cloud.retail.v2alpha.ICatalog
    >
  ): void;
  listCatalogs(
    request: protos.google.cloud.retail.v2alpha.IListCatalogsRequest,
    callback: PaginationCallback<
      protos.google.cloud.retail.v2alpha.IListCatalogsRequest,
      | protos.google.cloud.retail.v2alpha.IListCatalogsResponse
      | null
      | undefined,
      protos.google.cloud.retail.v2alpha.ICatalog
    >
  ): void;
  listCatalogs(
    request?: protos.google.cloud.retail.v2alpha.IListCatalogsRequest,
    optionsOrCallback?:
      | CallOptions
      | PaginationCallback<
          protos.google.cloud.retail.v2alpha.IListCatalogsRequest,
          | protos.google.cloud.retail.v2alpha.IListCatalogsResponse
          | null
          | undefined,
          protos.google.cloud.retail.v2alpha.ICatalog
        >,
    callback?: PaginationCallback<
      protos.google.cloud.retail.v2alpha.IListCatalogsRequest,
      | protos.google.cloud.retail.v2alpha.IListCatalogsResponse
      | null
      | undefined,
      protos.google.cloud.retail.v2alpha.ICatalog
    >
  ): Promise<
    [
      protos.google.cloud.retail.v2alpha.ICatalog[],
      protos.google.cloud.retail.v2alpha.IListCatalogsRequest | null,
      protos.google.cloud.retail.v2alpha.IListCatalogsResponse
    ]
  > | void {
    request = request || {};
    let options: CallOptions;
    if (typeof optionsOrCallback === 'function' && callback === undefined) {
      callback = optionsOrCallback;
      options = {};
    } else {
      options = optionsOrCallback as CallOptions;
    }
    options = options || {};
    options.otherArgs = options.otherArgs || {};
    options.otherArgs.headers = options.otherArgs.headers || {};
    options.otherArgs.headers['x-goog-request-params'] =
      this._gaxModule.routingHeader.fromParams({
        parent: request.parent ?? '',
      });
    this.initialize();
    return this.innerApiCalls.listCatalogs(request, options, callback);
  }

  /**
   * Equivalent to `method.name.toCamelCase()`, but returns a NodeJS Stream object.
   * @param {Object} request
   *   The request object that will be sent.
   * @param {string} request.parent
   *   Required. The account resource name with an associated location.
   *
   *   If the caller does not have permission to list
   *   {@link google.cloud.retail.v2alpha.Catalog|Catalog}s under this location,
   *   regardless of whether or not this location exists, a PERMISSION_DENIED
   *   error is returned.
   * @param {number} request.pageSize
   *   Maximum number of {@link google.cloud.retail.v2alpha.Catalog|Catalog}s to
   *   return. If unspecified, defaults to 50. The maximum allowed value is 1000.
   *   Values above 1000 will be coerced to 1000.
   *
   *   If this field is negative, an INVALID_ARGUMENT is returned.
   * @param {string} request.pageToken
   *   A page token
   *   {@link google.cloud.retail.v2alpha.ListCatalogsResponse.next_page_token|ListCatalogsResponse.next_page_token},
   *   received from a previous
   *   {@link google.cloud.retail.v2alpha.CatalogService.ListCatalogs|CatalogService.ListCatalogs}
   *   call. Provide this to retrieve the subsequent page.
   *
   *   When paginating, all other parameters provided to
   *   {@link google.cloud.retail.v2alpha.CatalogService.ListCatalogs|CatalogService.ListCatalogs}
   *   must match the call that provided the page token. Otherwise, an
   *   INVALID_ARGUMENT error is returned.
   * @param {object} [options]
   *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
   * @returns {Stream}
   *   An object stream which emits an object representing [Catalog]{@link google.cloud.retail.v2alpha.Catalog} on 'data' event.
   *   The client library will perform auto-pagination by default: it will call the API as many
   *   times as needed. Note that it can affect your quota.
   *   We recommend using `listCatalogsAsync()`
   *   method described below for async iteration which you can stop as needed.
   *   Please see the
   *   [documentation](https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#auto-pagination)
   *   for more details and examples.
   */
  listCatalogsStream(
    request?: protos.google.cloud.retail.v2alpha.IListCatalogsRequest,
    options?: CallOptions
  ): Transform {
    request = request || {};
    options = options || {};
    options.otherArgs = options.otherArgs || {};
    options.otherArgs.headers = options.otherArgs.headers || {};
    options.otherArgs.headers['x-goog-request-params'] =
      this._gaxModule.routingHeader.fromParams({
        parent: request.parent ?? '',
      });
    const defaultCallSettings = this._defaults['listCatalogs'];
    const callSettings = defaultCallSettings.merge(options);
    this.initialize();
    return this.descriptors.page.listCatalogs.createStream(
      this.innerApiCalls.listCatalogs as GaxCall,
      request,
      callSettings
    );
  }

  /**
   * Equivalent to `listCatalogs`, but returns an iterable object.
   *
   * `for`-`await`-`of` syntax is used with the iterable to get response elements on-demand.
   * @param {Object} request
   *   The request object that will be sent.
   * @param {string} request.parent
   *   Required. The account resource name with an associated location.
   *
   *   If the caller does not have permission to list
   *   {@link google.cloud.retail.v2alpha.Catalog|Catalog}s under this location,
   *   regardless of whether or not this location exists, a PERMISSION_DENIED
   *   error is returned.
   * @param {number} request.pageSize
   *   Maximum number of {@link google.cloud.retail.v2alpha.Catalog|Catalog}s to
   *   return. If unspecified, defaults to 50. The maximum allowed value is 1000.
   *   Values above 1000 will be coerced to 1000.
   *
   *   If this field is negative, an INVALID_ARGUMENT is returned.
   * @param {string} request.pageToken
   *   A page token
   *   {@link google.cloud.retail.v2alpha.ListCatalogsResponse.next_page_token|ListCatalogsResponse.next_page_token},
   *   received from a previous
   *   {@link google.cloud.retail.v2alpha.CatalogService.ListCatalogs|CatalogService.ListCatalogs}
   *   call. Provide this to retrieve the subsequent page.
   *
   *   When paginating, all other parameters provided to
   *   {@link google.cloud.retail.v2alpha.CatalogService.ListCatalogs|CatalogService.ListCatalogs}
   *   must match the call that provided the page token. Otherwise, an
   *   INVALID_ARGUMENT error is returned.
   * @param {object} [options]
   *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
   * @returns {Object}
   *   An iterable Object that allows [async iteration](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Iteration_protocols).
   *   When you iterate the returned iterable, each element will be an object representing
   *   [Catalog]{@link google.cloud.retail.v2alpha.Catalog}. The API will be called under the hood as needed, once per the page,
   *   so you can stop the iteration when you don't need more results.
   *   Please see the
   *   [documentation](https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#auto-pagination)
   *   for more details and examples.
   * @example <caption>include:samples/generated/v2alpha/catalog_service.list_catalogs.js</caption>
   * region_tag:retail_v2alpha_generated_CatalogService_ListCatalogs_async
   */
  listCatalogsAsync(
    request?: protos.google.cloud.retail.v2alpha.IListCatalogsRequest,
    options?: CallOptions
  ): AsyncIterable<protos.google.cloud.retail.v2alpha.ICatalog> {
    request = request || {};
    options = options || {};
    options.otherArgs = options.otherArgs || {};
    options.otherArgs.headers = options.otherArgs.headers || {};
    options.otherArgs.headers['x-goog-request-params'] =
      this._gaxModule.routingHeader.fromParams({
        parent: request.parent ?? '',
      });
    const defaultCallSettings = this._defaults['listCatalogs'];
    const callSettings = defaultCallSettings.merge(options);
    this.initialize();
    return this.descriptors.page.listCatalogs.asyncIterate(
      this.innerApiCalls['listCatalogs'] as GaxCall,
      request as {},
      callSettings
    ) as AsyncIterable<protos.google.cloud.retail.v2alpha.ICatalog>;
  }
  /**
   * Gets information about a location.
   *
   * @param {Object} request
   *   The request object that will be sent.
   * @param {string} request.name
   *   Resource name for the location.
   * @param {object} [options]
   *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
   * @returns {Promise} - The promise which resolves to an array.
   *   The first element of the array is an object representing [Location]{@link google.cloud.location.Location}.
   *   Please see the
   *   [documentation](https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#regular-methods)
   *   for more details and examples.
   * @example
   * ```
   * const [response] = await client.getLocation(request);
   * ```
   */
  getLocation(
    request: LocationProtos.google.cloud.location.IGetLocationRequest,
    options?:
      | gax.CallOptions
      | Callback<
          LocationProtos.google.cloud.location.ILocation,
          | LocationProtos.google.cloud.location.IGetLocationRequest
          | null
          | undefined,
          {} | null | undefined
        >,
    callback?: Callback<
      LocationProtos.google.cloud.location.ILocation,
      | LocationProtos.google.cloud.location.IGetLocationRequest
      | null
      | undefined,
      {} | null | undefined
    >
  ): Promise<LocationProtos.google.cloud.location.ILocation> {
    return this.locationsClient.getLocation(request, options, callback);
  }

  /**
   * Lists information about the supported locations for this service. Returns an iterable object.
   *
   * `for`-`await`-`of` syntax is used with the iterable to get response elements on-demand.
   * @param {Object} request
   *   The request object that will be sent.
   * @param {string} request.name
   *   The resource that owns the locations collection, if applicable.
   * @param {string} request.filter
   *   The standard list filter.
   * @param {number} request.pageSize
   *   The standard list page size.
   * @param {string} request.pageToken
   *   The standard list page token.
   * @param {object} [options]
   *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
   * @returns {Object}
   *   An iterable Object that allows [async iteration](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Iteration_protocols).
   *   When you iterate the returned iterable, each element will be an object representing
   *   [Location]{@link google.cloud.location.Location}. The API will be called under the hood as needed, once per the page,
   *   so you can stop the iteration when you don't need more results.
   *   Please see the
   *   [documentation](https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#auto-pagination)
   *   for more details and examples.
   * @example
   * ```
   * const iterable = client.listLocationsAsync(request);
   * for await (const response of iterable) {
   *   // process response
   * }
   * ```
   */
  listLocationsAsync(
    request: LocationProtos.google.cloud.location.IListLocationsRequest,
    options?: CallOptions
  ): AsyncIterable<LocationProtos.google.cloud.location.ILocation> {
    return this.locationsClient.listLocationsAsync(request, options);
  }

  /**
   * Gets the latest state of a long-running operation.  Clients can use this
   * method to poll the operation result at intervals as recommended by the API
   * service.
   *
   * @param {Object} request - The request object that will be sent.
   * @param {string} request.name - The name of the operation resource.
   * @param {Object=} options
   *   Optional parameters. You can override the default settings for this call,
   *   e.g, timeout, retries, paginations, etc. See [gax.CallOptions]{@link
   *   https://googleapis.github.io/gax-nodejs/global.html#CallOptions} for the
   *   details.
   * @param {function(?Error, ?Object)=} callback
   *   The function which will be called with the result of the API call.
   *
   *   The second parameter to the callback is an object representing
   * [google.longrunning.Operation]{@link
   * external:"google.longrunning.Operation"}.
   * @return {Promise} - The promise which resolves to an array.
   *   The first element of the array is an object representing
   * [google.longrunning.Operation]{@link
   * external:"google.longrunning.Operation"}. The promise has a method named
   * "cancel" which cancels the ongoing API call.
   *
   * @example
   * ```
   * const client = longrunning.operationsClient();
   * const name = '';
   * const [response] = await client.getOperation({name});
   * // doThingsWith(response)
   * ```
   */
  getOperation(
    request: protos.google.longrunning.GetOperationRequest,
    options?:
      | gax.CallOptions
      | Callback<
          protos.google.longrunning.Operation,
          protos.google.longrunning.GetOperationRequest,
          {} | null | undefined
        >,
    callback?: Callback<
      protos.google.longrunning.Operation,
      protos.google.longrunning.GetOperationRequest,
      {} | null | undefined
    >
  ): Promise<[protos.google.longrunning.Operation]> {
    return this.operationsClient.getOperation(request, options, callback);
  }
  /**
   * Lists operations that match the specified filter in the request. If the
   * server doesn't support this method, it returns `UNIMPLEMENTED`. Returns an iterable object.
   *
   * For-await-of syntax is used with the iterable to recursively get response element on-demand.
   *
   * @param {Object} request - The request object that will be sent.
   * @param {string} request.name - The name of the operation collection.
   * @param {string} request.filter - The standard list filter.
   * @param {number=} request.pageSize -
   *   The maximum number of resources contained in the underlying API
   *   response. If page streaming is performed per-resource, this
   *   parameter does not affect the return value. If page streaming is
   *   performed per-page, this determines the maximum number of
   *   resources in a page.
   * @param {Object=} options
   *   Optional parameters. You can override the default settings for this call,
   *   e.g, timeout, retries, paginations, etc. See [gax.CallOptions]{@link
   *   https://googleapis.github.io/gax-nodejs/global.html#CallOptions} for the
   *   details.
   * @returns {Object}
   *   An iterable Object that conforms to @link https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Iteration_protocols.
   *
   * @example
   * ```
   * const client = longrunning.operationsClient();
   * for await (const response of client.listOperationsAsync(request));
   * // doThingsWith(response)
   * ```
   */
  listOperationsAsync(
    request: protos.google.longrunning.ListOperationsRequest,
    options?: gax.CallOptions
  ): AsyncIterable<protos.google.longrunning.ListOperationsResponse> {
    return this.operationsClient.listOperationsAsync(request, options);
  }
  /**
   * Starts asynchronous cancellation on a long-running operation.  The server
   * makes a best effort to cancel the operation, but success is not
   * guaranteed.  If the server doesn't support this method, it returns
   * `google.rpc.Code.UNIMPLEMENTED`.  Clients can use
   * {@link Operations.GetOperation} or
   * other methods to check whether the cancellation succeeded or whether the
   * operation completed despite cancellation. On successful cancellation,
   * the operation is not deleted; instead, it becomes an operation with
   * an {@link Operation.error} value with a {@link google.rpc.Status.code} of
   * 1, corresponding to `Code.CANCELLED`.
   *
   * @param {Object} request - The request object that will be sent.
   * @param {string} request.name - The name of the operation resource to be cancelled.
   * @param {Object=} options
   *   Optional parameters. You can override the default settings for this call,
   * e.g, timeout, retries, paginations, etc. See [gax.CallOptions]{@link
   * https://googleapis.github.io/gax-nodejs/global.html#CallOptions} for the
   * details.
   * @param {function(?Error)=} callback
   *   The function which will be called with the result of the API call.
   * @return {Promise} - The promise which resolves when API call finishes.
   *   The promise has a method named "cancel" which cancels the ongoing API
   * call.
   *
   * @example
   * ```
   * const client = longrunning.operationsClient();
   * await client.cancelOperation({name: ''});
   * ```
   */
  cancelOperation(
    request: protos.google.longrunning.CancelOperationRequest,
    options?:
      | gax.CallOptions
      | Callback<
          protos.google.protobuf.Empty,
          protos.google.longrunning.CancelOperationRequest,
          {} | undefined | null
        >,
    callback?: Callback<
      protos.google.longrunning.CancelOperationRequest,
      protos.google.protobuf.Empty,
      {} | undefined | null
    >
  ): Promise<protos.google.protobuf.Empty> {
    return this.operationsClient.cancelOperation(request, options, callback);
  }

  /**
   * Deletes a long-running operation. This method indicates that the client is
   * no longer interested in the operation result. It does not cancel the
   * operation. If the server doesn't support this method, it returns
   * `google.rpc.Code.UNIMPLEMENTED`.
   *
   * @param {Object} request - The request object that will be sent.
   * @param {string} request.name - The name of the operation resource to be deleted.
   * @param {Object=} options
   *   Optional parameters. You can override the default settings for this call,
   * e.g, timeout, retries, paginations, etc. See [gax.CallOptions]{@link
   * https://googleapis.github.io/gax-nodejs/global.html#CallOptions} for the
   * details.
   * @param {function(?Error)=} callback
   *   The function which will be called with the result of the API call.
   * @return {Promise} - The promise which resolves when API call finishes.
   *   The promise has a method named "cancel" which cancels the ongoing API
   * call.
   *
   * @example
   * ```
   * const client = longrunning.operationsClient();
   * await client.deleteOperation({name: ''});
   * ```
   */
  deleteOperation(
    request: protos.google.longrunning.DeleteOperationRequest,
    options?:
      | gax.CallOptions
      | Callback<
          protos.google.protobuf.Empty,
          protos.google.longrunning.DeleteOperationRequest,
          {} | null | undefined
        >,
    callback?: Callback<
      protos.google.protobuf.Empty,
      protos.google.longrunning.DeleteOperationRequest,
      {} | null | undefined
    >
  ): Promise<protos.google.protobuf.Empty> {
    return this.operationsClient.deleteOperation(request, options, callback);
  }

  // --------------------
  // -- Path templates --
  // --------------------

  /**
   * Return a fully-qualified attributesConfig resource name string.
   *
   * @param {string} project
   * @param {string} location
   * @param {string} catalog
   * @returns {string} Resource name string.
   */
  attributesConfigPath(project: string, location: string, catalog: string) {
    return this.pathTemplates.attributesConfigPathTemplate.render({
      project: project,
      location: location,
      catalog: catalog,
    });
  }

  /**
   * Parse the project from AttributesConfig resource.
   *
   * @param {string} attributesConfigName
   *   A fully-qualified path representing AttributesConfig resource.
   * @returns {string} A string representing the project.
   */
  matchProjectFromAttributesConfigName(attributesConfigName: string) {
    return this.pathTemplates.attributesConfigPathTemplate.match(
      attributesConfigName
    ).project;
  }

  /**
   * Parse the location from AttributesConfig resource.
   *
   * @param {string} attributesConfigName
   *   A fully-qualified path representing AttributesConfig resource.
   * @returns {string} A string representing the location.
   */
  matchLocationFromAttributesConfigName(attributesConfigName: string) {
    return this.pathTemplates.attributesConfigPathTemplate.match(
      attributesConfigName
    ).location;
  }

  /**
   * Parse the catalog from AttributesConfig resource.
   *
   * @param {string} attributesConfigName
   *   A fully-qualified path representing AttributesConfig resource.
   * @returns {string} A string representing the catalog.
   */
  matchCatalogFromAttributesConfigName(attributesConfigName: string) {
    return this.pathTemplates.attributesConfigPathTemplate.match(
      attributesConfigName
    ).catalog;
  }

  /**
   * Return a fully-qualified branch resource name string.
   *
   * @param {string} project
   * @param {string} location
   * @param {string} catalog
   * @param {string} branch
   * @returns {string} Resource name string.
   */
  branchPath(
    project: string,
    location: string,
    catalog: string,
    branch: string
  ) {
    return this.pathTemplates.branchPathTemplate.render({
      project: project,
      location: location,
      catalog: catalog,
      branch: branch,
    });
  }

  /**
   * Parse the project from Branch resource.
   *
   * @param {string} branchName
   *   A fully-qualified path representing Branch resource.
   * @returns {string} A string representing the project.
   */
  matchProjectFromBranchName(branchName: string) {
    return this.pathTemplates.branchPathTemplate.match(branchName).project;
  }

  /**
   * Parse the location from Branch resource.
   *
   * @param {string} branchName
   *   A fully-qualified path representing Branch resource.
   * @returns {string} A string representing the location.
   */
  matchLocationFromBranchName(branchName: string) {
    return this.pathTemplates.branchPathTemplate.match(branchName).location;
  }

  /**
   * Parse the catalog from Branch resource.
   *
   * @param {string} branchName
   *   A fully-qualified path representing Branch resource.
   * @returns {string} A string representing the catalog.
   */
  matchCatalogFromBranchName(branchName: string) {
    return this.pathTemplates.branchPathTemplate.match(branchName).catalog;
  }

  /**
   * Parse the branch from Branch resource.
   *
   * @param {string} branchName
   *   A fully-qualified path representing Branch resource.
   * @returns {string} A string representing the branch.
   */
  matchBranchFromBranchName(branchName: string) {
    return this.pathTemplates.branchPathTemplate.match(branchName).branch;
  }

  /**
   * Return a fully-qualified catalog resource name string.
   *
   * @param {string} project
   * @param {string} location
   * @param {string} catalog
   * @returns {string} Resource name string.
   */
  catalogPath(project: string, location: string, catalog: string) {
    return this.pathTemplates.catalogPathTemplate.render({
      project: project,
      location: location,
      catalog: catalog,
    });
  }

  /**
   * Parse the project from Catalog resource.
   *
   * @param {string} catalogName
   *   A fully-qualified path representing Catalog resource.
   * @returns {string} A string representing the project.
   */
  matchProjectFromCatalogName(catalogName: string) {
    return this.pathTemplates.catalogPathTemplate.match(catalogName).project;
  }

  /**
   * Parse the location from Catalog resource.
   *
   * @param {string} catalogName
   *   A fully-qualified path representing Catalog resource.
   * @returns {string} A string representing the location.
   */
  matchLocationFromCatalogName(catalogName: string) {
    return this.pathTemplates.catalogPathTemplate.match(catalogName).location;
  }

  /**
   * Parse the catalog from Catalog resource.
   *
   * @param {string} catalogName
   *   A fully-qualified path representing Catalog resource.
   * @returns {string} A string representing the catalog.
   */
  matchCatalogFromCatalogName(catalogName: string) {
    return this.pathTemplates.catalogPathTemplate.match(catalogName).catalog;
  }

  /**
   * Return a fully-qualified completionConfig resource name string.
   *
   * @param {string} project
   * @param {string} location
   * @param {string} catalog
   * @returns {string} Resource name string.
   */
  completionConfigPath(project: string, location: string, catalog: string) {
    return this.pathTemplates.completionConfigPathTemplate.render({
      project: project,
      location: location,
      catalog: catalog,
    });
  }

  /**
   * Parse the project from CompletionConfig resource.
   *
   * @param {string} completionConfigName
   *   A fully-qualified path representing CompletionConfig resource.
   * @returns {string} A string representing the project.
   */
  matchProjectFromCompletionConfigName(completionConfigName: string) {
    return this.pathTemplates.completionConfigPathTemplate.match(
      completionConfigName
    ).project;
  }

  /**
   * Parse the location from CompletionConfig resource.
   *
   * @param {string} completionConfigName
   *   A fully-qualified path representing CompletionConfig resource.
   * @returns {string} A string representing the location.
   */
  matchLocationFromCompletionConfigName(completionConfigName: string) {
    return this.pathTemplates.completionConfigPathTemplate.match(
      completionConfigName
    ).location;
  }

  /**
   * Parse the catalog from CompletionConfig resource.
   *
   * @param {string} completionConfigName
   *   A fully-qualified path representing CompletionConfig resource.
   * @returns {string} A string representing the catalog.
   */
  matchCatalogFromCompletionConfigName(completionConfigName: string) {
    return this.pathTemplates.completionConfigPathTemplate.match(
      completionConfigName
    ).catalog;
  }

  /**
   * Return a fully-qualified control resource name string.
   *
   * @param {string} project
   * @param {string} location
   * @param {string} catalog
   * @param {string} control
   * @returns {string} Resource name string.
   */
  controlPath(
    project: string,
    location: string,
    catalog: string,
    control: string
  ) {
    return this.pathTemplates.controlPathTemplate.render({
      project: project,
      location: location,
      catalog: catalog,
      control: control,
    });
  }

  /**
   * Parse the project from Control resource.
   *
   * @param {string} controlName
   *   A fully-qualified path representing Control resource.
   * @returns {string} A string representing the project.
   */
  matchProjectFromControlName(controlName: string) {
    return this.pathTemplates.controlPathTemplate.match(controlName).project;
  }

  /**
   * Parse the location from Control resource.
   *
   * @param {string} controlName
   *   A fully-qualified path representing Control resource.
   * @returns {string} A string representing the location.
   */
  matchLocationFromControlName(controlName: string) {
    return this.pathTemplates.controlPathTemplate.match(controlName).location;
  }

  /**
   * Parse the catalog from Control resource.
   *
   * @param {string} controlName
   *   A fully-qualified path representing Control resource.
   * @returns {string} A string representing the catalog.
   */
  matchCatalogFromControlName(controlName: string) {
    return this.pathTemplates.controlPathTemplate.match(controlName).catalog;
  }

  /**
   * Parse the control from Control resource.
   *
   * @param {string} controlName
   *   A fully-qualified path representing Control resource.
   * @returns {string} A string representing the control.
   */
  matchControlFromControlName(controlName: string) {
    return this.pathTemplates.controlPathTemplate.match(controlName).control;
  }

  /**
   * Return a fully-qualified location resource name string.
   *
   * @param {string} project
   * @param {string} location
   * @returns {string} Resource name string.
   */
  locationPath(project: string, location: string) {
    return this.pathTemplates.locationPathTemplate.render({
      project: project,
      location: location,
    });
  }

  /**
   * Parse the project from Location resource.
   *
   * @param {string} locationName
   *   A fully-qualified path representing Location resource.
   * @returns {string} A string representing the project.
   */
  matchProjectFromLocationName(locationName: string) {
    return this.pathTemplates.locationPathTemplate.match(locationName).project;
  }

  /**
   * Parse the location from Location resource.
   *
   * @param {string} locationName
   *   A fully-qualified path representing Location resource.
   * @returns {string} A string representing the location.
   */
  matchLocationFromLocationName(locationName: string) {
    return this.pathTemplates.locationPathTemplate.match(locationName).location;
  }

  /**
   * Return a fully-qualified model resource name string.
   *
   * @param {string} project
   * @param {string} location
   * @param {string} catalog
   * @param {string} model
   * @returns {string} Resource name string.
   */
  modelPath(project: string, location: string, catalog: string, model: string) {
    return this.pathTemplates.modelPathTemplate.render({
      project: project,
      location: location,
      catalog: catalog,
      model: model,
    });
  }

  /**
   * Parse the project from Model resource.
   *
   * @param {string} modelName
   *   A fully-qualified path representing Model resource.
   * @returns {string} A string representing the project.
   */
  matchProjectFromModelName(modelName: string) {
    return this.pathTemplates.modelPathTemplate.match(modelName).project;
  }

  /**
   * Parse the location from Model resource.
   *
   * @param {string} modelName
   *   A fully-qualified path representing Model resource.
   * @returns {string} A string representing the location.
   */
  matchLocationFromModelName(modelName: string) {
    return this.pathTemplates.modelPathTemplate.match(modelName).location;
  }

  /**
   * Parse the catalog from Model resource.
   *
   * @param {string} modelName
   *   A fully-qualified path representing Model resource.
   * @returns {string} A string representing the catalog.
   */
  matchCatalogFromModelName(modelName: string) {
    return this.pathTemplates.modelPathTemplate.match(modelName).catalog;
  }

  /**
   * Parse the model from Model resource.
   *
   * @param {string} modelName
   *   A fully-qualified path representing Model resource.
   * @returns {string} A string representing the model.
   */
  matchModelFromModelName(modelName: string) {
    return this.pathTemplates.modelPathTemplate.match(modelName).model;
  }

  /**
   * Return a fully-qualified product resource name string.
   *
   * @param {string} project
   * @param {string} location
   * @param {string} catalog
   * @param {string} branch
   * @param {string} product
   * @returns {string} Resource name string.
   */
  productPath(
    project: string,
    location: string,
    catalog: string,
    branch: string,
    product: string
  ) {
    return this.pathTemplates.productPathTemplate.render({
      project: project,
      location: location,
      catalog: catalog,
      branch: branch,
      product: product,
    });
  }

  /**
   * Parse the project from Product resource.
   *
   * @param {string} productName
   *   A fully-qualified path representing Product resource.
   * @returns {string} A string representing the project.
   */
  matchProjectFromProductName(productName: string) {
    return this.pathTemplates.productPathTemplate.match(productName).project;
  }

  /**
   * Parse the location from Product resource.
   *
   * @param {string} productName
   *   A fully-qualified path representing Product resource.
   * @returns {string} A string representing the location.
   */
  matchLocationFromProductName(productName: string) {
    return this.pathTemplates.productPathTemplate.match(productName).location;
  }

  /**
   * Parse the catalog from Product resource.
   *
   * @param {string} productName
   *   A fully-qualified path representing Product resource.
   * @returns {string} A string representing the catalog.
   */
  matchCatalogFromProductName(productName: string) {
    return this.pathTemplates.productPathTemplate.match(productName).catalog;
  }

  /**
   * Parse the branch from Product resource.
   *
   * @param {string} productName
   *   A fully-qualified path representing Product resource.
   * @returns {string} A string representing the branch.
   */
  matchBranchFromProductName(productName: string) {
    return this.pathTemplates.productPathTemplate.match(productName).branch;
  }

  /**
   * Parse the product from Product resource.
   *
   * @param {string} productName
   *   A fully-qualified path representing Product resource.
   * @returns {string} A string representing the product.
   */
  matchProductFromProductName(productName: string) {
    return this.pathTemplates.productPathTemplate.match(productName).product;
  }

  /**
   * Return a fully-qualified servingConfig resource name string.
   *
   * @param {string} project
   * @param {string} location
   * @param {string} catalog
   * @param {string} serving_config
   * @returns {string} Resource name string.
   */
  servingConfigPath(
    project: string,
    location: string,
    catalog: string,
    servingConfig: string
  ) {
    return this.pathTemplates.servingConfigPathTemplate.render({
      project: project,
      location: location,
      catalog: catalog,
      serving_config: servingConfig,
    });
  }

  /**
   * Parse the project from ServingConfig resource.
   *
   * @param {string} servingConfigName
   *   A fully-qualified path representing ServingConfig resource.
   * @returns {string} A string representing the project.
   */
  matchProjectFromServingConfigName(servingConfigName: string) {
    return this.pathTemplates.servingConfigPathTemplate.match(servingConfigName)
      .project;
  }

  /**
   * Parse the location from ServingConfig resource.
   *
   * @param {string} servingConfigName
   *   A fully-qualified path representing ServingConfig resource.
   * @returns {string} A string representing the location.
   */
  matchLocationFromServingConfigName(servingConfigName: string) {
    return this.pathTemplates.servingConfigPathTemplate.match(servingConfigName)
      .location;
  }

  /**
   * Parse the catalog from ServingConfig resource.
   *
   * @param {string} servingConfigName
   *   A fully-qualified path representing ServingConfig resource.
   * @returns {string} A string representing the catalog.
   */
  matchCatalogFromServingConfigName(servingConfigName: string) {
    return this.pathTemplates.servingConfigPathTemplate.match(servingConfigName)
      .catalog;
  }

  /**
   * Parse the serving_config from ServingConfig resource.
   *
   * @param {string} servingConfigName
   *   A fully-qualified path representing ServingConfig resource.
   * @returns {string} A string representing the serving_config.
   */
  matchServingConfigFromServingConfigName(servingConfigName: string) {
    return this.pathTemplates.servingConfigPathTemplate.match(servingConfigName)
      .serving_config;
  }

  /**
   * Terminate the gRPC channel and close the client.
   *
   * The client will no longer be usable and all future behavior is undefined.
   * @returns {Promise} A promise that resolves when the client is closed.
   */
  close(): Promise<void> {
    if (this.catalogServiceStub && !this._terminated) {
      return this.catalogServiceStub.then(stub => {
        this._terminated = true;
        stub.close();
        this.locationsClient.close();
        this.operationsClient.close();
      });
    }
    return Promise.resolve();
  }
}
