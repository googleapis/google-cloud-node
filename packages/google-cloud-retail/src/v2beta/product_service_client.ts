// Copyright 2023 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     https://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
// ** This file is automatically generated by gapic-generator-typescript. **
// ** https://github.com/googleapis/gapic-generator-typescript **
// ** All changes to this file may be overwritten. **

/* global window */
import type * as gax from 'google-gax';
import type {
  Callback,
  CallOptions,
  Descriptors,
  ClientOptions,
  GrpcClientOptions,
  LROperation,
  PaginationCallback,
  GaxCall,
  LocationsClient,
  LocationProtos,
} from 'google-gax';
import {Transform} from 'stream';
import * as protos from '../../protos/protos';
import jsonProtos = require('../../protos/protos.json');
/**
 * Client JSON configuration object, loaded from
 * `src/v2beta/product_service_client_config.json`.
 * This file defines retry strategy and timeouts for all API methods in this library.
 */
import * as gapicConfig from './product_service_client_config.json';
const version = require('../../../package.json').version;

/**
 *  Service for ingesting {@link google.cloud.retail.v2beta.Product|Product}
 *  information of the customer's website.
 * @class
 * @memberof v2beta
 */
export class ProductServiceClient {
  private _terminated = false;
  private _opts: ClientOptions;
  private _providedCustomServicePath: boolean;
  private _gaxModule: typeof gax | typeof gax.fallback;
  private _gaxGrpc: gax.GrpcClient | gax.fallback.GrpcClient;
  private _protos: {};
  private _defaults: {[method: string]: gax.CallSettings};
  auth: gax.GoogleAuth;
  descriptors: Descriptors = {
    page: {},
    stream: {},
    longrunning: {},
    batching: {},
  };
  warn: (code: string, message: string, warnType?: string) => void;
  innerApiCalls: {[name: string]: Function};
  locationsClient: LocationsClient;
  pathTemplates: {[name: string]: gax.PathTemplate};
  operationsClient: gax.OperationsClient;
  productServiceStub?: Promise<{[name: string]: Function}>;

  /**
   * Construct an instance of ProductServiceClient.
   *
   * @param {object} [options] - The configuration object.
   * The options accepted by the constructor are described in detail
   * in [this document](https://github.com/googleapis/gax-nodejs/blob/main/client-libraries.md#creating-the-client-instance).
   * The common options are:
   * @param {object} [options.credentials] - Credentials object.
   * @param {string} [options.credentials.client_email]
   * @param {string} [options.credentials.private_key]
   * @param {string} [options.email] - Account email address. Required when
   *     using a .pem or .p12 keyFilename.
   * @param {string} [options.keyFilename] - Full path to the a .json, .pem, or
   *     .p12 key downloaded from the Google Developers Console. If you provide
   *     a path to a JSON file, the projectId option below is not necessary.
   *     NOTE: .pem and .p12 require you to specify options.email as well.
   * @param {number} [options.port] - The port on which to connect to
   *     the remote host.
   * @param {string} [options.projectId] - The project ID from the Google
   *     Developer's Console, e.g. 'grape-spaceship-123'. We will also check
   *     the environment variable GCLOUD_PROJECT for your project ID. If your
   *     app is running in an environment which supports
   *     {@link https://developers.google.com/identity/protocols/application-default-credentials Application Default Credentials},
   *     your project ID will be detected automatically.
   * @param {string} [options.apiEndpoint] - The domain name of the
   *     API remote host.
   * @param {gax.ClientConfig} [options.clientConfig] - Client configuration override.
   *     Follows the structure of {@link gapicConfig}.
   * @param {boolean | "rest"} [options.fallback] - Use HTTP fallback mode.
   *     Pass "rest" to use HTTP/1.1 REST API instead of gRPC.
   *     For more information, please check the
   *     {@link https://github.com/googleapis/gax-nodejs/blob/main/client-libraries.md#http11-rest-api-mode documentation}.
   * @param {gax} [gaxInstance]: loaded instance of `google-gax`. Useful if you
   *     need to avoid loading the default gRPC version and want to use the fallback
   *     HTTP implementation. Load only fallback version and pass it to the constructor:
   *     ```
   *     const gax = require('google-gax/build/src/fallback'); // avoids loading google-gax with gRPC
   *     const client = new ProductServiceClient({fallback: 'rest'}, gax);
   *     ```
   */
  constructor(
    opts?: ClientOptions,
    gaxInstance?: typeof gax | typeof gax.fallback
  ) {
    // Ensure that options include all the required fields.
    const staticMembers = this.constructor as typeof ProductServiceClient;
    const servicePath =
      opts?.servicePath || opts?.apiEndpoint || staticMembers.servicePath;
    this._providedCustomServicePath = !!(
      opts?.servicePath || opts?.apiEndpoint
    );
    const port = opts?.port || staticMembers.port;
    const clientConfig = opts?.clientConfig ?? {};
    const fallback =
      opts?.fallback ??
      (typeof window !== 'undefined' && typeof window?.fetch === 'function');
    opts = Object.assign({servicePath, port, clientConfig, fallback}, opts);

    // Request numeric enum values if REST transport is used.
    opts.numericEnums = true;

    // If scopes are unset in options and we're connecting to a non-default endpoint, set scopes just in case.
    if (servicePath !== staticMembers.servicePath && !('scopes' in opts)) {
      opts['scopes'] = staticMembers.scopes;
    }

    // Load google-gax module synchronously if needed
    if (!gaxInstance) {
      gaxInstance = require('google-gax') as typeof gax;
    }

    // Choose either gRPC or proto-over-HTTP implementation of google-gax.
    this._gaxModule = opts.fallback ? gaxInstance.fallback : gaxInstance;

    // Create a `gaxGrpc` object, with any grpc-specific options sent to the client.
    this._gaxGrpc = new this._gaxModule.GrpcClient(opts);

    // Save options to use in initialize() method.
    this._opts = opts;

    // Save the auth object to the client, for use by other methods.
    this.auth = this._gaxGrpc.auth as gax.GoogleAuth;

    // Set useJWTAccessWithScope on the auth object.
    this.auth.useJWTAccessWithScope = true;

    // Set defaultServicePath on the auth object.
    this.auth.defaultServicePath = staticMembers.servicePath;

    // Set the default scopes in auth client if needed.
    if (servicePath === staticMembers.servicePath) {
      this.auth.defaultScopes = staticMembers.scopes;
    }
    this.locationsClient = new this._gaxModule.LocationsClient(
      this._gaxGrpc,
      opts
    );

    // Determine the client header string.
    const clientHeader = [`gax/${this._gaxModule.version}`, `gapic/${version}`];
    if (typeof process !== 'undefined' && 'versions' in process) {
      clientHeader.push(`gl-node/${process.versions.node}`);
    } else {
      clientHeader.push(`gl-web/${this._gaxModule.version}`);
    }
    if (!opts.fallback) {
      clientHeader.push(`grpc/${this._gaxGrpc.grpcVersion}`);
    } else if (opts.fallback === 'rest') {
      clientHeader.push(`rest/${this._gaxGrpc.grpcVersion}`);
    }
    if (opts.libName && opts.libVersion) {
      clientHeader.push(`${opts.libName}/${opts.libVersion}`);
    }
    // Load the applicable protos.
    this._protos = this._gaxGrpc.loadProtoJSON(jsonProtos);

    // This API contains "path templates"; forward-slash-separated
    // identifiers to uniquely identify resources within the API.
    // Create useful helper objects for these.
    this.pathTemplates = {
      attributesConfigPathTemplate: new this._gaxModule.PathTemplate(
        'projects/{project}/locations/{location}/catalogs/{catalog}/attributesConfig'
      ),
      branchPathTemplate: new this._gaxModule.PathTemplate(
        'projects/{project}/locations/{location}/catalogs/{catalog}/branches/{branch}'
      ),
      catalogPathTemplate: new this._gaxModule.PathTemplate(
        'projects/{project}/locations/{location}/catalogs/{catalog}'
      ),
      completionConfigPathTemplate: new this._gaxModule.PathTemplate(
        'projects/{project}/locations/{location}/catalogs/{catalog}/completionConfig'
      ),
      controlPathTemplate: new this._gaxModule.PathTemplate(
        'projects/{project}/locations/{location}/catalogs/{catalog}/controls/{control}'
      ),
      modelPathTemplate: new this._gaxModule.PathTemplate(
        'projects/{project}/locations/{location}/catalogs/{catalog}/models/{model}'
      ),
      productPathTemplate: new this._gaxModule.PathTemplate(
        'projects/{project}/locations/{location}/catalogs/{catalog}/branches/{branch}/products/{product}'
      ),
      servingConfigPathTemplate: new this._gaxModule.PathTemplate(
        'projects/{project}/locations/{location}/catalogs/{catalog}/servingConfigs/{serving_config}'
      ),
    };

    // Some of the methods on this service return "paged" results,
    // (e.g. 50 results at a time, with tokens to get subsequent
    // pages). Denote the keys used for pagination and results.
    this.descriptors.page = {
      listProducts: new this._gaxModule.PageDescriptor(
        'pageToken',
        'nextPageToken',
        'products'
      ),
    };

    const protoFilesRoot = this._gaxModule.protobuf.Root.fromJSON(jsonProtos);
    // This API contains "long-running operations", which return a
    // an Operation object that allows for tracking of the operation,
    // rather than holding a request open.
    const lroOptions: GrpcClientOptions = {
      auth: this.auth,
      grpc: 'grpc' in this._gaxGrpc ? this._gaxGrpc.grpc : undefined,
    };
    if (opts.fallback === 'rest') {
      lroOptions.protoJson = protoFilesRoot;
      lroOptions.httpRules = [
        {
          selector: 'google.longrunning.Operations.GetOperation',
          get: '/v2beta/{name=projects/*/locations/*/catalogs/*/branches/*/operations/*}',
          additional_bindings: [
            {
              get: '/v2beta/{name=projects/*/locations/*/catalogs/*/operations/*}',
            },
            {get: '/v2beta/{name=projects/*/locations/*/operations/*}'},
            {get: '/v2beta/{name=projects/*/operations/*}'},
          ],
        },
        {
          selector: 'google.longrunning.Operations.ListOperations',
          get: '/v2beta/{name=projects/*/locations/*/catalogs/*}/operations',
          additional_bindings: [
            {get: '/v2beta/{name=projects/*/locations/*}/operations'},
            {get: '/v2beta/{name=projects/*}/operations'},
          ],
        },
      ];
    }
    this.operationsClient = this._gaxModule
      .lro(lroOptions)
      .operationsClient(opts);
    const importProductsResponse = protoFilesRoot.lookup(
      '.google.cloud.retail.v2beta.ImportProductsResponse'
    ) as gax.protobuf.Type;
    const importProductsMetadata = protoFilesRoot.lookup(
      '.google.cloud.retail.v2beta.ImportMetadata'
    ) as gax.protobuf.Type;
    const setInventoryResponse = protoFilesRoot.lookup(
      '.google.cloud.retail.v2beta.SetInventoryResponse'
    ) as gax.protobuf.Type;
    const setInventoryMetadata = protoFilesRoot.lookup(
      '.google.cloud.retail.v2beta.SetInventoryMetadata'
    ) as gax.protobuf.Type;
    const addFulfillmentPlacesResponse = protoFilesRoot.lookup(
      '.google.cloud.retail.v2beta.AddFulfillmentPlacesResponse'
    ) as gax.protobuf.Type;
    const addFulfillmentPlacesMetadata = protoFilesRoot.lookup(
      '.google.cloud.retail.v2beta.AddFulfillmentPlacesMetadata'
    ) as gax.protobuf.Type;
    const removeFulfillmentPlacesResponse = protoFilesRoot.lookup(
      '.google.cloud.retail.v2beta.RemoveFulfillmentPlacesResponse'
    ) as gax.protobuf.Type;
    const removeFulfillmentPlacesMetadata = protoFilesRoot.lookup(
      '.google.cloud.retail.v2beta.RemoveFulfillmentPlacesMetadata'
    ) as gax.protobuf.Type;
    const addLocalInventoriesResponse = protoFilesRoot.lookup(
      '.google.cloud.retail.v2beta.AddLocalInventoriesResponse'
    ) as gax.protobuf.Type;
    const addLocalInventoriesMetadata = protoFilesRoot.lookup(
      '.google.cloud.retail.v2beta.AddLocalInventoriesMetadata'
    ) as gax.protobuf.Type;
    const removeLocalInventoriesResponse = protoFilesRoot.lookup(
      '.google.cloud.retail.v2beta.RemoveLocalInventoriesResponse'
    ) as gax.protobuf.Type;
    const removeLocalInventoriesMetadata = protoFilesRoot.lookup(
      '.google.cloud.retail.v2beta.RemoveLocalInventoriesMetadata'
    ) as gax.protobuf.Type;

    this.descriptors.longrunning = {
      importProducts: new this._gaxModule.LongrunningDescriptor(
        this.operationsClient,
        importProductsResponse.decode.bind(importProductsResponse),
        importProductsMetadata.decode.bind(importProductsMetadata)
      ),
      setInventory: new this._gaxModule.LongrunningDescriptor(
        this.operationsClient,
        setInventoryResponse.decode.bind(setInventoryResponse),
        setInventoryMetadata.decode.bind(setInventoryMetadata)
      ),
      addFulfillmentPlaces: new this._gaxModule.LongrunningDescriptor(
        this.operationsClient,
        addFulfillmentPlacesResponse.decode.bind(addFulfillmentPlacesResponse),
        addFulfillmentPlacesMetadata.decode.bind(addFulfillmentPlacesMetadata)
      ),
      removeFulfillmentPlaces: new this._gaxModule.LongrunningDescriptor(
        this.operationsClient,
        removeFulfillmentPlacesResponse.decode.bind(
          removeFulfillmentPlacesResponse
        ),
        removeFulfillmentPlacesMetadata.decode.bind(
          removeFulfillmentPlacesMetadata
        )
      ),
      addLocalInventories: new this._gaxModule.LongrunningDescriptor(
        this.operationsClient,
        addLocalInventoriesResponse.decode.bind(addLocalInventoriesResponse),
        addLocalInventoriesMetadata.decode.bind(addLocalInventoriesMetadata)
      ),
      removeLocalInventories: new this._gaxModule.LongrunningDescriptor(
        this.operationsClient,
        removeLocalInventoriesResponse.decode.bind(
          removeLocalInventoriesResponse
        ),
        removeLocalInventoriesMetadata.decode.bind(
          removeLocalInventoriesMetadata
        )
      ),
    };

    // Put together the default options sent with requests.
    this._defaults = this._gaxGrpc.constructSettings(
      'google.cloud.retail.v2beta.ProductService',
      gapicConfig as gax.ClientConfig,
      opts.clientConfig || {},
      {'x-goog-api-client': clientHeader.join(' ')}
    );

    // Set up a dictionary of "inner API calls"; the core implementation
    // of calling the API is handled in `google-gax`, with this code
    // merely providing the destination and request information.
    this.innerApiCalls = {};

    // Add a warn function to the client constructor so it can be easily tested.
    this.warn = this._gaxModule.warn;
  }

  /**
   * Initialize the client.
   * Performs asynchronous operations (such as authentication) and prepares the client.
   * This function will be called automatically when any class method is called for the
   * first time, but if you need to initialize it before calling an actual method,
   * feel free to call initialize() directly.
   *
   * You can await on this method if you want to make sure the client is initialized.
   *
   * @returns {Promise} A promise that resolves to an authenticated service stub.
   */
  initialize() {
    // If the client stub promise is already initialized, return immediately.
    if (this.productServiceStub) {
      return this.productServiceStub;
    }

    // Put together the "service stub" for
    // google.cloud.retail.v2beta.ProductService.
    this.productServiceStub = this._gaxGrpc.createStub(
      this._opts.fallback
        ? (this._protos as protobuf.Root).lookupService(
            'google.cloud.retail.v2beta.ProductService'
          )
        : // eslint-disable-next-line @typescript-eslint/no-explicit-any
          (this._protos as any).google.cloud.retail.v2beta.ProductService,
      this._opts,
      this._providedCustomServicePath
    ) as Promise<{[method: string]: Function}>;

    // Iterate over each of the methods that the service provides
    // and create an API call method for each.
    const productServiceStubMethods = [
      'createProduct',
      'getProduct',
      'listProducts',
      'updateProduct',
      'deleteProduct',
      'importProducts',
      'setInventory',
      'addFulfillmentPlaces',
      'removeFulfillmentPlaces',
      'addLocalInventories',
      'removeLocalInventories',
    ];
    for (const methodName of productServiceStubMethods) {
      const callPromise = this.productServiceStub.then(
        stub =>
          (...args: Array<{}>) => {
            if (this._terminated) {
              return Promise.reject('The client has already been closed.');
            }
            const func = stub[methodName];
            return func.apply(stub, args);
          },
        (err: Error | null | undefined) => () => {
          throw err;
        }
      );

      const descriptor =
        this.descriptors.page[methodName] ||
        this.descriptors.longrunning[methodName] ||
        undefined;
      const apiCall = this._gaxModule.createApiCall(
        callPromise,
        this._defaults[methodName],
        descriptor,
        this._opts.fallback
      );

      this.innerApiCalls[methodName] = apiCall;
    }

    return this.productServiceStub;
  }

  /**
   * The DNS address for this API service.
   * @returns {string} The DNS address for this service.
   */
  static get servicePath() {
    return 'retail.googleapis.com';
  }

  /**
   * The DNS address for this API service - same as servicePath(),
   * exists for compatibility reasons.
   * @returns {string} The DNS address for this service.
   */
  static get apiEndpoint() {
    return 'retail.googleapis.com';
  }

  /**
   * The port for this API service.
   * @returns {number} The default port for this service.
   */
  static get port() {
    return 443;
  }

  /**
   * The scopes needed to make gRPC calls for every method defined
   * in this service.
   * @returns {string[]} List of default scopes.
   */
  static get scopes() {
    return ['https://www.googleapis.com/auth/cloud-platform'];
  }

  getProjectId(): Promise<string>;
  getProjectId(callback: Callback<string, undefined, undefined>): void;
  /**
   * Return the project ID used by this class.
   * @returns {Promise} A promise that resolves to string containing the project ID.
   */
  getProjectId(
    callback?: Callback<string, undefined, undefined>
  ): Promise<string> | void {
    if (callback) {
      this.auth.getProjectId(callback);
      return;
    }
    return this.auth.getProjectId();
  }

  // -------------------
  // -- Service calls --
  // -------------------
  /**
   * Creates a {@link google.cloud.retail.v2beta.Product|Product}.
   *
   * @param {Object} request
   *   The request object that will be sent.
   * @param {string} request.parent
   *   Required. The parent catalog resource name, such as
   *   `projects/* /locations/global/catalogs/default_catalog/branches/default_branch`.
   * @param {google.cloud.retail.v2beta.Product} request.product
   *   Required. The {@link google.cloud.retail.v2beta.Product|Product} to create.
   * @param {string} request.productId
   *   Required. The ID to use for the
   *   {@link google.cloud.retail.v2beta.Product|Product}, which will become the final
   *   component of the {@link google.cloud.retail.v2beta.Product.name|Product.name}.
   *
   *   If the caller does not have permission to create the
   *   {@link google.cloud.retail.v2beta.Product|Product}, regardless of whether or not
   *   it exists, a PERMISSION_DENIED error is returned.
   *
   *   This field must be unique among all
   *   {@link google.cloud.retail.v2beta.Product|Product}s with the same
   *   {@link google.cloud.retail.v2beta.CreateProductRequest.parent|parent}.
   *   Otherwise, an ALREADY_EXISTS error is returned.
   *
   *   This field must be a UTF-8 encoded string with a length limit of 128
   *   characters. Otherwise, an INVALID_ARGUMENT error is returned.
   * @param {object} [options]
   *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
   * @returns {Promise} - The promise which resolves to an array.
   *   The first element of the array is an object representing [Product]{@link google.cloud.retail.v2beta.Product}.
   *   Please see the
   *   [documentation](https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#regular-methods)
   *   for more details and examples.
   * @example <caption>include:samples/generated/v2beta/product_service.create_product.js</caption>
   * region_tag:retail_v2beta_generated_ProductService_CreateProduct_async
   */
  createProduct(
    request?: protos.google.cloud.retail.v2beta.ICreateProductRequest,
    options?: CallOptions
  ): Promise<
    [
      protos.google.cloud.retail.v2beta.IProduct,
      protos.google.cloud.retail.v2beta.ICreateProductRequest | undefined,
      {} | undefined
    ]
  >;
  createProduct(
    request: protos.google.cloud.retail.v2beta.ICreateProductRequest,
    options: CallOptions,
    callback: Callback<
      protos.google.cloud.retail.v2beta.IProduct,
      | protos.google.cloud.retail.v2beta.ICreateProductRequest
      | null
      | undefined,
      {} | null | undefined
    >
  ): void;
  createProduct(
    request: protos.google.cloud.retail.v2beta.ICreateProductRequest,
    callback: Callback<
      protos.google.cloud.retail.v2beta.IProduct,
      | protos.google.cloud.retail.v2beta.ICreateProductRequest
      | null
      | undefined,
      {} | null | undefined
    >
  ): void;
  createProduct(
    request?: protos.google.cloud.retail.v2beta.ICreateProductRequest,
    optionsOrCallback?:
      | CallOptions
      | Callback<
          protos.google.cloud.retail.v2beta.IProduct,
          | protos.google.cloud.retail.v2beta.ICreateProductRequest
          | null
          | undefined,
          {} | null | undefined
        >,
    callback?: Callback<
      protos.google.cloud.retail.v2beta.IProduct,
      | protos.google.cloud.retail.v2beta.ICreateProductRequest
      | null
      | undefined,
      {} | null | undefined
    >
  ): Promise<
    [
      protos.google.cloud.retail.v2beta.IProduct,
      protos.google.cloud.retail.v2beta.ICreateProductRequest | undefined,
      {} | undefined
    ]
  > | void {
    request = request || {};
    let options: CallOptions;
    if (typeof optionsOrCallback === 'function' && callback === undefined) {
      callback = optionsOrCallback;
      options = {};
    } else {
      options = optionsOrCallback as CallOptions;
    }
    options = options || {};
    options.otherArgs = options.otherArgs || {};
    options.otherArgs.headers = options.otherArgs.headers || {};
    options.otherArgs.headers['x-goog-request-params'] =
      this._gaxModule.routingHeader.fromParams({
        parent: request.parent ?? '',
      });
    this.initialize();
    return this.innerApiCalls.createProduct(request, options, callback);
  }
  /**
   * Gets a {@link google.cloud.retail.v2beta.Product|Product}.
   *
   * @param {Object} request
   *   The request object that will be sent.
   * @param {string} request.name
   *   Required. Full resource name of
   *   {@link google.cloud.retail.v2beta.Product|Product}, such as
   *   `projects/* /locations/global/catalogs/default_catalog/branches/default_branch/products/some_product_id`.
   *
   *   If the caller does not have permission to access the
   *   {@link google.cloud.retail.v2beta.Product|Product}, regardless of whether or not
   *   it exists, a PERMISSION_DENIED error is returned.
   *
   *   If the requested {@link google.cloud.retail.v2beta.Product|Product} does not
   *   exist, a NOT_FOUND error is returned.
   * @param {object} [options]
   *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
   * @returns {Promise} - The promise which resolves to an array.
   *   The first element of the array is an object representing [Product]{@link google.cloud.retail.v2beta.Product}.
   *   Please see the
   *   [documentation](https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#regular-methods)
   *   for more details and examples.
   * @example <caption>include:samples/generated/v2beta/product_service.get_product.js</caption>
   * region_tag:retail_v2beta_generated_ProductService_GetProduct_async
   */
  getProduct(
    request?: protos.google.cloud.retail.v2beta.IGetProductRequest,
    options?: CallOptions
  ): Promise<
    [
      protos.google.cloud.retail.v2beta.IProduct,
      protos.google.cloud.retail.v2beta.IGetProductRequest | undefined,
      {} | undefined
    ]
  >;
  getProduct(
    request: protos.google.cloud.retail.v2beta.IGetProductRequest,
    options: CallOptions,
    callback: Callback<
      protos.google.cloud.retail.v2beta.IProduct,
      protos.google.cloud.retail.v2beta.IGetProductRequest | null | undefined,
      {} | null | undefined
    >
  ): void;
  getProduct(
    request: protos.google.cloud.retail.v2beta.IGetProductRequest,
    callback: Callback<
      protos.google.cloud.retail.v2beta.IProduct,
      protos.google.cloud.retail.v2beta.IGetProductRequest | null | undefined,
      {} | null | undefined
    >
  ): void;
  getProduct(
    request?: protos.google.cloud.retail.v2beta.IGetProductRequest,
    optionsOrCallback?:
      | CallOptions
      | Callback<
          protos.google.cloud.retail.v2beta.IProduct,
          | protos.google.cloud.retail.v2beta.IGetProductRequest
          | null
          | undefined,
          {} | null | undefined
        >,
    callback?: Callback<
      protos.google.cloud.retail.v2beta.IProduct,
      protos.google.cloud.retail.v2beta.IGetProductRequest | null | undefined,
      {} | null | undefined
    >
  ): Promise<
    [
      protos.google.cloud.retail.v2beta.IProduct,
      protos.google.cloud.retail.v2beta.IGetProductRequest | undefined,
      {} | undefined
    ]
  > | void {
    request = request || {};
    let options: CallOptions;
    if (typeof optionsOrCallback === 'function' && callback === undefined) {
      callback = optionsOrCallback;
      options = {};
    } else {
      options = optionsOrCallback as CallOptions;
    }
    options = options || {};
    options.otherArgs = options.otherArgs || {};
    options.otherArgs.headers = options.otherArgs.headers || {};
    options.otherArgs.headers['x-goog-request-params'] =
      this._gaxModule.routingHeader.fromParams({
        name: request.name ?? '',
      });
    this.initialize();
    return this.innerApiCalls.getProduct(request, options, callback);
  }
  /**
   * Updates a {@link google.cloud.retail.v2beta.Product|Product}.
   *
   * @param {Object} request
   *   The request object that will be sent.
   * @param {google.cloud.retail.v2beta.Product} request.product
   *   Required. The product to update/create.
   *
   *   If the caller does not have permission to update the
   *   {@link google.cloud.retail.v2beta.Product|Product}, regardless of whether or not
   *   it exists, a PERMISSION_DENIED error is returned.
   *
   *   If the {@link google.cloud.retail.v2beta.Product|Product} to update does not
   *   exist and
   *   {@link google.cloud.retail.v2beta.UpdateProductRequest.allow_missing|allow_missing}
   *   is not set, a NOT_FOUND error is returned.
   * @param {google.protobuf.FieldMask} request.updateMask
   *   Indicates which fields in the provided
   *   {@link google.cloud.retail.v2beta.Product|Product} to update. The immutable and
   *   output only fields are NOT supported. If not set, all supported fields (the
   *   fields that are neither immutable nor output only) are updated.
   *
   *   If an unsupported or unknown field is provided, an INVALID_ARGUMENT error
   *   is returned.
   *
   *   The attribute key can be updated by setting the mask path as
   *   "attributes.${key_name}". If a key name is present in the mask but not in
   *   the patching product from the request, this key will be deleted after the
   *   update.
   * @param {boolean} request.allowMissing
   *   If set to true, and the {@link google.cloud.retail.v2beta.Product|Product} is
   *   not found, a new {@link google.cloud.retail.v2beta.Product|Product} will be
   *   created. In this situation, `update_mask` is ignored.
   * @param {object} [options]
   *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
   * @returns {Promise} - The promise which resolves to an array.
   *   The first element of the array is an object representing [Product]{@link google.cloud.retail.v2beta.Product}.
   *   Please see the
   *   [documentation](https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#regular-methods)
   *   for more details and examples.
   * @example <caption>include:samples/generated/v2beta/product_service.update_product.js</caption>
   * region_tag:retail_v2beta_generated_ProductService_UpdateProduct_async
   */
  updateProduct(
    request?: protos.google.cloud.retail.v2beta.IUpdateProductRequest,
    options?: CallOptions
  ): Promise<
    [
      protos.google.cloud.retail.v2beta.IProduct,
      protos.google.cloud.retail.v2beta.IUpdateProductRequest | undefined,
      {} | undefined
    ]
  >;
  updateProduct(
    request: protos.google.cloud.retail.v2beta.IUpdateProductRequest,
    options: CallOptions,
    callback: Callback<
      protos.google.cloud.retail.v2beta.IProduct,
      | protos.google.cloud.retail.v2beta.IUpdateProductRequest
      | null
      | undefined,
      {} | null | undefined
    >
  ): void;
  updateProduct(
    request: protos.google.cloud.retail.v2beta.IUpdateProductRequest,
    callback: Callback<
      protos.google.cloud.retail.v2beta.IProduct,
      | protos.google.cloud.retail.v2beta.IUpdateProductRequest
      | null
      | undefined,
      {} | null | undefined
    >
  ): void;
  updateProduct(
    request?: protos.google.cloud.retail.v2beta.IUpdateProductRequest,
    optionsOrCallback?:
      | CallOptions
      | Callback<
          protos.google.cloud.retail.v2beta.IProduct,
          | protos.google.cloud.retail.v2beta.IUpdateProductRequest
          | null
          | undefined,
          {} | null | undefined
        >,
    callback?: Callback<
      protos.google.cloud.retail.v2beta.IProduct,
      | protos.google.cloud.retail.v2beta.IUpdateProductRequest
      | null
      | undefined,
      {} | null | undefined
    >
  ): Promise<
    [
      protos.google.cloud.retail.v2beta.IProduct,
      protos.google.cloud.retail.v2beta.IUpdateProductRequest | undefined,
      {} | undefined
    ]
  > | void {
    request = request || {};
    let options: CallOptions;
    if (typeof optionsOrCallback === 'function' && callback === undefined) {
      callback = optionsOrCallback;
      options = {};
    } else {
      options = optionsOrCallback as CallOptions;
    }
    options = options || {};
    options.otherArgs = options.otherArgs || {};
    options.otherArgs.headers = options.otherArgs.headers || {};
    options.otherArgs.headers['x-goog-request-params'] =
      this._gaxModule.routingHeader.fromParams({
        'product.name': request.product!.name ?? '',
      });
    this.initialize();
    return this.innerApiCalls.updateProduct(request, options, callback);
  }
  /**
   * Deletes a {@link google.cloud.retail.v2beta.Product|Product}.
   *
   * @param {Object} request
   *   The request object that will be sent.
   * @param {string} request.name
   *   Required. Full resource name of
   *   {@link google.cloud.retail.v2beta.Product|Product}, such as
   *   `projects/* /locations/global/catalogs/default_catalog/branches/default_branch/products/some_product_id`.
   *
   *   If the caller does not have permission to delete the
   *   {@link google.cloud.retail.v2beta.Product|Product}, regardless of whether or not
   *   it exists, a PERMISSION_DENIED error is returned.
   *
   *   If the {@link google.cloud.retail.v2beta.Product|Product} to delete does not
   *   exist, a NOT_FOUND error is returned.
   *
   *   The {@link google.cloud.retail.v2beta.Product|Product} to delete can neither be
   *   a
   *   {@link google.cloud.retail.v2beta.Product.Type.COLLECTION|Product.Type.COLLECTION}
   *   {@link google.cloud.retail.v2beta.Product|Product} member nor a
   *   {@link google.cloud.retail.v2beta.Product.Type.PRIMARY|Product.Type.PRIMARY}
   *   {@link google.cloud.retail.v2beta.Product|Product} with more than one
   *   {@link google.cloud.retail.v2beta.Product.Type.VARIANT|variants}. Otherwise, an
   *   INVALID_ARGUMENT error is returned.
   *
   *   All inventory information for the named
   *   {@link google.cloud.retail.v2beta.Product|Product} will be deleted.
   * @param {object} [options]
   *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
   * @returns {Promise} - The promise which resolves to an array.
   *   The first element of the array is an object representing [Empty]{@link google.protobuf.Empty}.
   *   Please see the
   *   [documentation](https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#regular-methods)
   *   for more details and examples.
   * @example <caption>include:samples/generated/v2beta/product_service.delete_product.js</caption>
   * region_tag:retail_v2beta_generated_ProductService_DeleteProduct_async
   */
  deleteProduct(
    request?: protos.google.cloud.retail.v2beta.IDeleteProductRequest,
    options?: CallOptions
  ): Promise<
    [
      protos.google.protobuf.IEmpty,
      protos.google.cloud.retail.v2beta.IDeleteProductRequest | undefined,
      {} | undefined
    ]
  >;
  deleteProduct(
    request: protos.google.cloud.retail.v2beta.IDeleteProductRequest,
    options: CallOptions,
    callback: Callback<
      protos.google.protobuf.IEmpty,
      | protos.google.cloud.retail.v2beta.IDeleteProductRequest
      | null
      | undefined,
      {} | null | undefined
    >
  ): void;
  deleteProduct(
    request: protos.google.cloud.retail.v2beta.IDeleteProductRequest,
    callback: Callback<
      protos.google.protobuf.IEmpty,
      | protos.google.cloud.retail.v2beta.IDeleteProductRequest
      | null
      | undefined,
      {} | null | undefined
    >
  ): void;
  deleteProduct(
    request?: protos.google.cloud.retail.v2beta.IDeleteProductRequest,
    optionsOrCallback?:
      | CallOptions
      | Callback<
          protos.google.protobuf.IEmpty,
          | protos.google.cloud.retail.v2beta.IDeleteProductRequest
          | null
          | undefined,
          {} | null | undefined
        >,
    callback?: Callback<
      protos.google.protobuf.IEmpty,
      | protos.google.cloud.retail.v2beta.IDeleteProductRequest
      | null
      | undefined,
      {} | null | undefined
    >
  ): Promise<
    [
      protos.google.protobuf.IEmpty,
      protos.google.cloud.retail.v2beta.IDeleteProductRequest | undefined,
      {} | undefined
    ]
  > | void {
    request = request || {};
    let options: CallOptions;
    if (typeof optionsOrCallback === 'function' && callback === undefined) {
      callback = optionsOrCallback;
      options = {};
    } else {
      options = optionsOrCallback as CallOptions;
    }
    options = options || {};
    options.otherArgs = options.otherArgs || {};
    options.otherArgs.headers = options.otherArgs.headers || {};
    options.otherArgs.headers['x-goog-request-params'] =
      this._gaxModule.routingHeader.fromParams({
        name: request.name ?? '',
      });
    this.initialize();
    return this.innerApiCalls.deleteProduct(request, options, callback);
  }

  /**
   * Bulk import of multiple {@link google.cloud.retail.v2beta.Product|Product}s.
   *
   * Request processing may be synchronous.
   * Non-existing items are created.
   *
   * Note that it is possible for a subset of the
   * {@link google.cloud.retail.v2beta.Product|Product}s to be successfully updated.
   *
   * @param {Object} request
   *   The request object that will be sent.
   * @param {string} request.parent
   *   Required.
   *   `projects/1234/locations/global/catalogs/default_catalog/branches/default_branch`
   *
   *   If no updateMask is specified, requires products.create permission.
   *   If updateMask is specified, requires products.update permission.
   * @param {string} request.requestId
   *   Deprecated. This field has no effect.
   * @param {google.cloud.retail.v2beta.ProductInputConfig} request.inputConfig
   *   Required. The desired input location of the data.
   * @param {google.cloud.retail.v2beta.ImportErrorsConfig} request.errorsConfig
   *   The desired location of errors incurred during the Import.
   * @param {google.protobuf.FieldMask} request.updateMask
   *   Indicates which fields in the provided imported `products` to update. If
   *   not set, all fields are updated.
   * @param {google.cloud.retail.v2beta.ImportProductsRequest.ReconciliationMode} request.reconciliationMode
   *   The mode of reconciliation between existing products and the products to be
   *   imported. Defaults to
   *   {@link google.cloud.retail.v2beta.ImportProductsRequest.ReconciliationMode.INCREMENTAL|ReconciliationMode.INCREMENTAL}.
   * @param {string} request.notificationPubsubTopic
   *   Full Pub/Sub topic name for receiving notification. If this field is set,
   *   when the import is finished, a notification is sent to
   *   specified Pub/Sub topic. The message data is JSON string of a
   *   {@link google.longrunning.Operation|Operation}.
   *
   *   Format of the Pub/Sub topic is `projects/{project}/topics/{topic}`. It has
   *   to be within the same project as
   *   {@link google.cloud.retail.v2beta.ImportProductsRequest.parent|ImportProductsRequest.parent}.
   *   Make sure that `service-<project
   *   number>@gcp-sa-retail.iam.gserviceaccount.com` has the
   *   `pubsub.topics.publish` IAM permission on the topic.
   * @param {object} [options]
   *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
   * @returns {Promise} - The promise which resolves to an array.
   *   The first element of the array is an object representing
   *   a long running operation. Its `promise()` method returns a promise
   *   you can `await` for.
   *   Please see the
   *   [documentation](https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#long-running-operations)
   *   for more details and examples.
   * @example <caption>include:samples/generated/v2beta/product_service.import_products.js</caption>
   * region_tag:retail_v2beta_generated_ProductService_ImportProducts_async
   */
  importProducts(
    request?: protos.google.cloud.retail.v2beta.IImportProductsRequest,
    options?: CallOptions
  ): Promise<
    [
      LROperation<
        protos.google.cloud.retail.v2beta.IImportProductsResponse,
        protos.google.cloud.retail.v2beta.IImportMetadata
      >,
      protos.google.longrunning.IOperation | undefined,
      {} | undefined
    ]
  >;
  importProducts(
    request: protos.google.cloud.retail.v2beta.IImportProductsRequest,
    options: CallOptions,
    callback: Callback<
      LROperation<
        protos.google.cloud.retail.v2beta.IImportProductsResponse,
        protos.google.cloud.retail.v2beta.IImportMetadata
      >,
      protos.google.longrunning.IOperation | null | undefined,
      {} | null | undefined
    >
  ): void;
  importProducts(
    request: protos.google.cloud.retail.v2beta.IImportProductsRequest,
    callback: Callback<
      LROperation<
        protos.google.cloud.retail.v2beta.IImportProductsResponse,
        protos.google.cloud.retail.v2beta.IImportMetadata
      >,
      protos.google.longrunning.IOperation | null | undefined,
      {} | null | undefined
    >
  ): void;
  importProducts(
    request?: protos.google.cloud.retail.v2beta.IImportProductsRequest,
    optionsOrCallback?:
      | CallOptions
      | Callback<
          LROperation<
            protos.google.cloud.retail.v2beta.IImportProductsResponse,
            protos.google.cloud.retail.v2beta.IImportMetadata
          >,
          protos.google.longrunning.IOperation | null | undefined,
          {} | null | undefined
        >,
    callback?: Callback<
      LROperation<
        protos.google.cloud.retail.v2beta.IImportProductsResponse,
        protos.google.cloud.retail.v2beta.IImportMetadata
      >,
      protos.google.longrunning.IOperation | null | undefined,
      {} | null | undefined
    >
  ): Promise<
    [
      LROperation<
        protos.google.cloud.retail.v2beta.IImportProductsResponse,
        protos.google.cloud.retail.v2beta.IImportMetadata
      >,
      protos.google.longrunning.IOperation | undefined,
      {} | undefined
    ]
  > | void {
    request = request || {};
    let options: CallOptions;
    if (typeof optionsOrCallback === 'function' && callback === undefined) {
      callback = optionsOrCallback;
      options = {};
    } else {
      options = optionsOrCallback as CallOptions;
    }
    options = options || {};
    options.otherArgs = options.otherArgs || {};
    options.otherArgs.headers = options.otherArgs.headers || {};
    options.otherArgs.headers['x-goog-request-params'] =
      this._gaxModule.routingHeader.fromParams({
        parent: request.parent ?? '',
      });
    this.initialize();
    return this.innerApiCalls.importProducts(request, options, callback);
  }
  /**
   * Check the status of the long running operation returned by `importProducts()`.
   * @param {String} name
   *   The operation name that will be passed.
   * @returns {Promise} - The promise which resolves to an object.
   *   The decoded operation object has result and metadata field to get information from.
   *   Please see the
   *   [documentation](https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#long-running-operations)
   *   for more details and examples.
   * @example <caption>include:samples/generated/v2beta/product_service.import_products.js</caption>
   * region_tag:retail_v2beta_generated_ProductService_ImportProducts_async
   */
  async checkImportProductsProgress(
    name: string
  ): Promise<
    LROperation<
      protos.google.cloud.retail.v2beta.ImportProductsResponse,
      protos.google.cloud.retail.v2beta.ImportMetadata
    >
  > {
    const request =
      new this._gaxModule.operationsProtos.google.longrunning.GetOperationRequest(
        {name}
      );
    const [operation] = await this.operationsClient.getOperation(request);
    const decodeOperation = new this._gaxModule.Operation(
      operation,
      this.descriptors.longrunning.importProducts,
      this._gaxModule.createDefaultBackoffSettings()
    );
    return decodeOperation as LROperation<
      protos.google.cloud.retail.v2beta.ImportProductsResponse,
      protos.google.cloud.retail.v2beta.ImportMetadata
    >;
  }
  /**
   * Updates inventory information for a
   * {@link google.cloud.retail.v2beta.Product|Product} while respecting the last
   * update timestamps of each inventory field.
   *
   * This process is asynchronous and does not require the
   * {@link google.cloud.retail.v2beta.Product|Product} to exist before updating
   * fulfillment information. If the request is valid, the update is enqueued
   * and processed downstream. As a consequence, when a response is returned,
   * updates are not immediately manifested in the
   * {@link google.cloud.retail.v2beta.Product|Product} queried by
   * {@link google.cloud.retail.v2beta.ProductService.GetProduct|ProductService.GetProduct}
   * or
   * {@link google.cloud.retail.v2beta.ProductService.ListProducts|ProductService.ListProducts}.
   *
   * When inventory is updated with
   * {@link google.cloud.retail.v2beta.ProductService.CreateProduct|ProductService.CreateProduct}
   * and
   * {@link google.cloud.retail.v2beta.ProductService.UpdateProduct|ProductService.UpdateProduct},
   * the specified inventory field value(s) overwrite any existing value(s)
   * while ignoring the last update time for this field. Furthermore, the last
   * update times for the specified inventory fields are overwritten by the
   * times of the
   * {@link google.cloud.retail.v2beta.ProductService.CreateProduct|ProductService.CreateProduct}
   * or
   * {@link google.cloud.retail.v2beta.ProductService.UpdateProduct|ProductService.UpdateProduct}
   * request.
   *
   * If no inventory fields are set in
   * {@link google.cloud.retail.v2beta.CreateProductRequest.product|CreateProductRequest.product},
   * then any pre-existing inventory information for this product is used.
   *
   * If no inventory fields are set in
   * {@link google.cloud.retail.v2beta.SetInventoryRequest.set_mask|SetInventoryRequest.set_mask},
   * then any existing inventory information is preserved.
   *
   * Pre-existing inventory information can only be updated with
   * {@link google.cloud.retail.v2beta.ProductService.SetInventory|ProductService.SetInventory},
   * {@link google.cloud.retail.v2beta.ProductService.AddFulfillmentPlaces|ProductService.AddFulfillmentPlaces},
   * and
   * {@link google.cloud.retail.v2beta.ProductService.RemoveFulfillmentPlaces|ProductService.RemoveFulfillmentPlaces}.
   *
   * The returned {@link google.longrunning.Operation|Operation}s is obsolete after
   * one day, and the {@link google.longrunning.Operations.GetOperation|GetOperation}
   * API returns `NOT_FOUND` afterwards.
   *
   * If conflicting updates are issued, the
   * {@link google.longrunning.Operation|Operation}s associated with the stale
   * updates are not marked as {@link google.longrunning.Operation.done|done} until
   * they are obsolete.
   *
   * This feature is only available for users who have Retail Search enabled.
   * Enable Retail Search on Cloud Console before using this feature.
   *
   * @param {Object} request
   *   The request object that will be sent.
   * @param {google.cloud.retail.v2beta.Product} request.inventory
   *   Required. The inventory information to update. The allowable fields to
   *   update are:
   *
   *   * {@link google.cloud.retail.v2beta.Product.price_info|Product.price_info}
   *   * {@link google.cloud.retail.v2beta.Product.availability|Product.availability}
   *   * {@link google.cloud.retail.v2beta.Product.available_quantity|Product.available_quantity}
   *   * {@link google.cloud.retail.v2beta.Product.fulfillment_info|Product.fulfillment_info}
   *   The updated inventory fields must be specified in
   *   {@link google.cloud.retail.v2beta.SetInventoryRequest.set_mask|SetInventoryRequest.set_mask}.
   *
   *   If
   *   {@link google.cloud.retail.v2beta.Product.name|SetInventoryRequest.inventory.name}
   *   is empty or invalid, an INVALID_ARGUMENT error is returned.
   *
   *   If the caller does not have permission to update the
   *   {@link google.cloud.retail.v2beta.Product|Product} named in
   *   {@link google.cloud.retail.v2beta.Product.name|Product.name}, regardless of
   *   whether or not it exists, a PERMISSION_DENIED error is returned.
   *
   *   If the {@link google.cloud.retail.v2beta.Product|Product} to update does not
   *   have existing inventory information, the provided inventory information
   *   will be inserted.
   *
   *   If the {@link google.cloud.retail.v2beta.Product|Product} to update has existing
   *   inventory information, the provided inventory information will be merged
   *   while respecting the last update time for each inventory field, using the
   *   provided or default value for
   *   {@link google.cloud.retail.v2beta.SetInventoryRequest.set_time|SetInventoryRequest.set_time}.
   *
   *   The caller can replace place IDs for a subset of fulfillment types in the
   *   following ways:
   *
   *   * Adds "fulfillment_info" in
   *   {@link google.cloud.retail.v2beta.SetInventoryRequest.set_mask|SetInventoryRequest.set_mask}
   *   * Specifies only the desired fulfillment types and corresponding place IDs
   *   to update in
   *   {@link google.cloud.retail.v2beta.Product.fulfillment_info|SetInventoryRequest.inventory.fulfillment_info}
   *
   *   The caller can clear all place IDs from a subset of fulfillment types in
   *   the following ways:
   *
   *   * Adds "fulfillment_info" in
   *   {@link google.cloud.retail.v2beta.SetInventoryRequest.set_mask|SetInventoryRequest.set_mask}
   *   * Specifies only the desired fulfillment types to clear in
   *   {@link google.cloud.retail.v2beta.Product.fulfillment_info|SetInventoryRequest.inventory.fulfillment_info}
   *   * Checks that only the desired fulfillment info types have empty
   *   {@link google.cloud.retail.v2beta.FulfillmentInfo.place_ids|SetInventoryRequest.inventory.fulfillment_info.place_ids}
   *
   *   The last update time is recorded for the following inventory fields:
   *   * {@link google.cloud.retail.v2beta.Product.price_info|Product.price_info}
   *   * {@link google.cloud.retail.v2beta.Product.availability|Product.availability}
   *   * {@link google.cloud.retail.v2beta.Product.available_quantity|Product.available_quantity}
   *   * {@link google.cloud.retail.v2beta.Product.fulfillment_info|Product.fulfillment_info}
   *
   *   If a full overwrite of inventory information while ignoring timestamps is
   *   needed,
   *   {@link google.cloud.retail.v2beta.ProductService.UpdateProduct|ProductService.UpdateProduct}
   *   should be invoked instead.
   * @param {google.protobuf.FieldMask} request.setMask
   *   Indicates which inventory fields in the provided
   *   {@link google.cloud.retail.v2beta.Product|Product} to update.
   *
   *   At least one field must be provided.
   *
   *   If an unsupported or unknown field is provided, an INVALID_ARGUMENT error
   *   is returned and the entire update will be ignored.
   * @param {google.protobuf.Timestamp} request.setTime
   *   The time when the request is issued, used to prevent
   *   out-of-order updates on inventory fields with the last update time
   *   recorded. If not provided, the internal system time will be used.
   * @param {boolean} request.allowMissing
   *   If set to true, and the {@link google.cloud.retail.v2beta.Product|Product} with
   *   name {@link google.cloud.retail.v2beta.Product.name|Product.name} is not found,
   *   the inventory update will still be processed and retained for at most 1 day
   *   until the {@link google.cloud.retail.v2beta.Product|Product} is created. If set
   *   to false, a NOT_FOUND error is returned if the
   *   {@link google.cloud.retail.v2beta.Product|Product} is not found.
   * @param {object} [options]
   *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
   * @returns {Promise} - The promise which resolves to an array.
   *   The first element of the array is an object representing
   *   a long running operation. Its `promise()` method returns a promise
   *   you can `await` for.
   *   Please see the
   *   [documentation](https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#long-running-operations)
   *   for more details and examples.
   * @example <caption>include:samples/generated/v2beta/product_service.set_inventory.js</caption>
   * region_tag:retail_v2beta_generated_ProductService_SetInventory_async
   */
  setInventory(
    request?: protos.google.cloud.retail.v2beta.ISetInventoryRequest,
    options?: CallOptions
  ): Promise<
    [
      LROperation<
        protos.google.cloud.retail.v2beta.ISetInventoryResponse,
        protos.google.cloud.retail.v2beta.ISetInventoryMetadata
      >,
      protos.google.longrunning.IOperation | undefined,
      {} | undefined
    ]
  >;
  setInventory(
    request: protos.google.cloud.retail.v2beta.ISetInventoryRequest,
    options: CallOptions,
    callback: Callback<
      LROperation<
        protos.google.cloud.retail.v2beta.ISetInventoryResponse,
        protos.google.cloud.retail.v2beta.ISetInventoryMetadata
      >,
      protos.google.longrunning.IOperation | null | undefined,
      {} | null | undefined
    >
  ): void;
  setInventory(
    request: protos.google.cloud.retail.v2beta.ISetInventoryRequest,
    callback: Callback<
      LROperation<
        protos.google.cloud.retail.v2beta.ISetInventoryResponse,
        protos.google.cloud.retail.v2beta.ISetInventoryMetadata
      >,
      protos.google.longrunning.IOperation | null | undefined,
      {} | null | undefined
    >
  ): void;
  setInventory(
    request?: protos.google.cloud.retail.v2beta.ISetInventoryRequest,
    optionsOrCallback?:
      | CallOptions
      | Callback<
          LROperation<
            protos.google.cloud.retail.v2beta.ISetInventoryResponse,
            protos.google.cloud.retail.v2beta.ISetInventoryMetadata
          >,
          protos.google.longrunning.IOperation | null | undefined,
          {} | null | undefined
        >,
    callback?: Callback<
      LROperation<
        protos.google.cloud.retail.v2beta.ISetInventoryResponse,
        protos.google.cloud.retail.v2beta.ISetInventoryMetadata
      >,
      protos.google.longrunning.IOperation | null | undefined,
      {} | null | undefined
    >
  ): Promise<
    [
      LROperation<
        protos.google.cloud.retail.v2beta.ISetInventoryResponse,
        protos.google.cloud.retail.v2beta.ISetInventoryMetadata
      >,
      protos.google.longrunning.IOperation | undefined,
      {} | undefined
    ]
  > | void {
    request = request || {};
    let options: CallOptions;
    if (typeof optionsOrCallback === 'function' && callback === undefined) {
      callback = optionsOrCallback;
      options = {};
    } else {
      options = optionsOrCallback as CallOptions;
    }
    options = options || {};
    options.otherArgs = options.otherArgs || {};
    options.otherArgs.headers = options.otherArgs.headers || {};
    options.otherArgs.headers['x-goog-request-params'] =
      this._gaxModule.routingHeader.fromParams({
        'inventory.name': request.inventory!.name ?? '',
      });
    this.initialize();
    return this.innerApiCalls.setInventory(request, options, callback);
  }
  /**
   * Check the status of the long running operation returned by `setInventory()`.
   * @param {String} name
   *   The operation name that will be passed.
   * @returns {Promise} - The promise which resolves to an object.
   *   The decoded operation object has result and metadata field to get information from.
   *   Please see the
   *   [documentation](https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#long-running-operations)
   *   for more details and examples.
   * @example <caption>include:samples/generated/v2beta/product_service.set_inventory.js</caption>
   * region_tag:retail_v2beta_generated_ProductService_SetInventory_async
   */
  async checkSetInventoryProgress(
    name: string
  ): Promise<
    LROperation<
      protos.google.cloud.retail.v2beta.SetInventoryResponse,
      protos.google.cloud.retail.v2beta.SetInventoryMetadata
    >
  > {
    const request =
      new this._gaxModule.operationsProtos.google.longrunning.GetOperationRequest(
        {name}
      );
    const [operation] = await this.operationsClient.getOperation(request);
    const decodeOperation = new this._gaxModule.Operation(
      operation,
      this.descriptors.longrunning.setInventory,
      this._gaxModule.createDefaultBackoffSettings()
    );
    return decodeOperation as LROperation<
      protos.google.cloud.retail.v2beta.SetInventoryResponse,
      protos.google.cloud.retail.v2beta.SetInventoryMetadata
    >;
  }
  /**
   * Incrementally adds place IDs to
   * {@link google.cloud.retail.v2beta.FulfillmentInfo.place_ids|Product.fulfillment_info.place_ids}.
   *
   * This process is asynchronous and does not require the
   * {@link google.cloud.retail.v2beta.Product|Product} to exist before updating
   * fulfillment information. If the request is valid, the update will be
   * enqueued and processed downstream. As a consequence, when a response is
   * returned, the added place IDs are not immediately manifested in the
   * {@link google.cloud.retail.v2beta.Product|Product} queried by
   * {@link google.cloud.retail.v2beta.ProductService.GetProduct|ProductService.GetProduct}
   * or
   * {@link google.cloud.retail.v2beta.ProductService.ListProducts|ProductService.ListProducts}.
   *
   * The returned {@link google.longrunning.Operation|Operation}s will be obsolete
   * after 1 day, and {@link google.longrunning.Operations.GetOperation|GetOperation}
   * API will return NOT_FOUND afterwards.
   *
   * If conflicting updates are issued, the
   * {@link google.longrunning.Operation|Operation}s associated with the stale
   * updates will not be marked as {@link google.longrunning.Operation.done|done}
   * until being obsolete.
   *
   * This feature is only available for users who have Retail Search enabled.
   * Enable Retail Search on Cloud Console before using this feature.
   *
   * @param {Object} request
   *   The request object that will be sent.
   * @param {string} request.product
   *   Required. Full resource name of
   *   {@link google.cloud.retail.v2beta.Product|Product}, such as
   *   `projects/* /locations/global/catalogs/default_catalog/branches/default_branch/products/some_product_id`.
   *
   *   If the caller does not have permission to access the
   *   {@link google.cloud.retail.v2beta.Product|Product}, regardless of whether or not
   *   it exists, a PERMISSION_DENIED error is returned.
   * @param {string} request.type
   *   Required. The fulfillment type, including commonly used types (such as
   *   pickup in store and same day delivery), and custom types.
   *
   *   Supported values:
   *
   *   * "pickup-in-store"
   *   * "ship-to-store"
   *   * "same-day-delivery"
   *   * "next-day-delivery"
   *   * "custom-type-1"
   *   * "custom-type-2"
   *   * "custom-type-3"
   *   * "custom-type-4"
   *   * "custom-type-5"
   *
   *   If this field is set to an invalid value other than these, an
   *   INVALID_ARGUMENT error is returned.
   *
   *   This field directly corresponds to
   *   {@link google.cloud.retail.v2beta.FulfillmentInfo.type|Product.fulfillment_info.type}.
   * @param {string[]} request.placeIds
   *   Required. The IDs for this
   *   {@link google.cloud.retail.v2beta.AddFulfillmentPlacesRequest.type|type}, such
   *   as the store IDs for "pickup-in-store" or the region IDs for
   *   "same-day-delivery" to be added for this
   *   {@link google.cloud.retail.v2beta.AddFulfillmentPlacesRequest.type|type}.
   *   Duplicate IDs will be automatically ignored.
   *
   *   At least 1 value is required, and a maximum of 2000 values are allowed.
   *   Each value must be a string with a length limit of 10 characters, matching
   *   the pattern `[a-zA-Z0-9_-]+`, such as "store1" or "REGION-2". Otherwise, an
   *   INVALID_ARGUMENT error is returned.
   *
   *   If the total number of place IDs exceeds 2000 for this
   *   {@link google.cloud.retail.v2beta.AddFulfillmentPlacesRequest.type|type} after
   *   adding, then the update will be rejected.
   * @param {google.protobuf.Timestamp} request.addTime
   *   The time when the fulfillment updates are issued, used to prevent
   *   out-of-order updates on fulfillment information. If not provided, the
   *   internal system time will be used.
   * @param {boolean} request.allowMissing
   *   If set to true, and the {@link google.cloud.retail.v2beta.Product|Product} is
   *   not found, the fulfillment information will still be processed and retained
   *   for at most 1 day and processed once the
   *   {@link google.cloud.retail.v2beta.Product|Product} is created. If set to false,
   *   a NOT_FOUND error is returned if the
   *   {@link google.cloud.retail.v2beta.Product|Product} is not found.
   * @param {object} [options]
   *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
   * @returns {Promise} - The promise which resolves to an array.
   *   The first element of the array is an object representing
   *   a long running operation. Its `promise()` method returns a promise
   *   you can `await` for.
   *   Please see the
   *   [documentation](https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#long-running-operations)
   *   for more details and examples.
   * @example <caption>include:samples/generated/v2beta/product_service.add_fulfillment_places.js</caption>
   * region_tag:retail_v2beta_generated_ProductService_AddFulfillmentPlaces_async
   */
  addFulfillmentPlaces(
    request?: protos.google.cloud.retail.v2beta.IAddFulfillmentPlacesRequest,
    options?: CallOptions
  ): Promise<
    [
      LROperation<
        protos.google.cloud.retail.v2beta.IAddFulfillmentPlacesResponse,
        protos.google.cloud.retail.v2beta.IAddFulfillmentPlacesMetadata
      >,
      protos.google.longrunning.IOperation | undefined,
      {} | undefined
    ]
  >;
  addFulfillmentPlaces(
    request: protos.google.cloud.retail.v2beta.IAddFulfillmentPlacesRequest,
    options: CallOptions,
    callback: Callback<
      LROperation<
        protos.google.cloud.retail.v2beta.IAddFulfillmentPlacesResponse,
        protos.google.cloud.retail.v2beta.IAddFulfillmentPlacesMetadata
      >,
      protos.google.longrunning.IOperation | null | undefined,
      {} | null | undefined
    >
  ): void;
  addFulfillmentPlaces(
    request: protos.google.cloud.retail.v2beta.IAddFulfillmentPlacesRequest,
    callback: Callback<
      LROperation<
        protos.google.cloud.retail.v2beta.IAddFulfillmentPlacesResponse,
        protos.google.cloud.retail.v2beta.IAddFulfillmentPlacesMetadata
      >,
      protos.google.longrunning.IOperation | null | undefined,
      {} | null | undefined
    >
  ): void;
  addFulfillmentPlaces(
    request?: protos.google.cloud.retail.v2beta.IAddFulfillmentPlacesRequest,
    optionsOrCallback?:
      | CallOptions
      | Callback<
          LROperation<
            protos.google.cloud.retail.v2beta.IAddFulfillmentPlacesResponse,
            protos.google.cloud.retail.v2beta.IAddFulfillmentPlacesMetadata
          >,
          protos.google.longrunning.IOperation | null | undefined,
          {} | null | undefined
        >,
    callback?: Callback<
      LROperation<
        protos.google.cloud.retail.v2beta.IAddFulfillmentPlacesResponse,
        protos.google.cloud.retail.v2beta.IAddFulfillmentPlacesMetadata
      >,
      protos.google.longrunning.IOperation | null | undefined,
      {} | null | undefined
    >
  ): Promise<
    [
      LROperation<
        protos.google.cloud.retail.v2beta.IAddFulfillmentPlacesResponse,
        protos.google.cloud.retail.v2beta.IAddFulfillmentPlacesMetadata
      >,
      protos.google.longrunning.IOperation | undefined,
      {} | undefined
    ]
  > | void {
    request = request || {};
    let options: CallOptions;
    if (typeof optionsOrCallback === 'function' && callback === undefined) {
      callback = optionsOrCallback;
      options = {};
    } else {
      options = optionsOrCallback as CallOptions;
    }
    options = options || {};
    options.otherArgs = options.otherArgs || {};
    options.otherArgs.headers = options.otherArgs.headers || {};
    options.otherArgs.headers['x-goog-request-params'] =
      this._gaxModule.routingHeader.fromParams({
        product: request.product ?? '',
      });
    this.initialize();
    return this.innerApiCalls.addFulfillmentPlaces(request, options, callback);
  }
  /**
   * Check the status of the long running operation returned by `addFulfillmentPlaces()`.
   * @param {String} name
   *   The operation name that will be passed.
   * @returns {Promise} - The promise which resolves to an object.
   *   The decoded operation object has result and metadata field to get information from.
   *   Please see the
   *   [documentation](https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#long-running-operations)
   *   for more details and examples.
   * @example <caption>include:samples/generated/v2beta/product_service.add_fulfillment_places.js</caption>
   * region_tag:retail_v2beta_generated_ProductService_AddFulfillmentPlaces_async
   */
  async checkAddFulfillmentPlacesProgress(
    name: string
  ): Promise<
    LROperation<
      protos.google.cloud.retail.v2beta.AddFulfillmentPlacesResponse,
      protos.google.cloud.retail.v2beta.AddFulfillmentPlacesMetadata
    >
  > {
    const request =
      new this._gaxModule.operationsProtos.google.longrunning.GetOperationRequest(
        {name}
      );
    const [operation] = await this.operationsClient.getOperation(request);
    const decodeOperation = new this._gaxModule.Operation(
      operation,
      this.descriptors.longrunning.addFulfillmentPlaces,
      this._gaxModule.createDefaultBackoffSettings()
    );
    return decodeOperation as LROperation<
      protos.google.cloud.retail.v2beta.AddFulfillmentPlacesResponse,
      protos.google.cloud.retail.v2beta.AddFulfillmentPlacesMetadata
    >;
  }
  /**
   * Incrementally removes place IDs from a
   * {@link google.cloud.retail.v2beta.FulfillmentInfo.place_ids|Product.fulfillment_info.place_ids}.
   *
   * This process is asynchronous and does not require the
   * {@link google.cloud.retail.v2beta.Product|Product} to exist before updating
   * fulfillment information. If the request is valid, the update will be
   * enqueued and processed downstream. As a consequence, when a response is
   * returned, the removed place IDs are not immediately manifested in the
   * {@link google.cloud.retail.v2beta.Product|Product} queried by
   * {@link google.cloud.retail.v2beta.ProductService.GetProduct|ProductService.GetProduct}
   * or
   * {@link google.cloud.retail.v2beta.ProductService.ListProducts|ProductService.ListProducts}.
   *
   * The returned {@link google.longrunning.Operation|Operation}s will be obsolete
   * after 1 day, and {@link google.longrunning.Operations.GetOperation|GetOperation}
   * API will return NOT_FOUND afterwards.
   *
   * If conflicting updates are issued, the
   * {@link google.longrunning.Operation|Operation}s associated with the stale
   * updates will not be marked as {@link google.longrunning.Operation.done|done}
   * until being obsolete.
   *
   * This feature is only available for users who have Retail Search enabled.
   * Enable Retail Search on Cloud Console before using this feature.
   *
   * @param {Object} request
   *   The request object that will be sent.
   * @param {string} request.product
   *   Required. Full resource name of
   *   {@link google.cloud.retail.v2beta.Product|Product}, such as
   *   `projects/* /locations/global/catalogs/default_catalog/branches/default_branch/products/some_product_id`.
   *
   *   If the caller does not have permission to access the
   *   {@link google.cloud.retail.v2beta.Product|Product}, regardless of whether or not
   *   it exists, a PERMISSION_DENIED error is returned.
   * @param {string} request.type
   *   Required. The fulfillment type, including commonly used types (such as
   *   pickup in store and same day delivery), and custom types.
   *
   *   Supported values:
   *
   *   * "pickup-in-store"
   *   * "ship-to-store"
   *   * "same-day-delivery"
   *   * "next-day-delivery"
   *   * "custom-type-1"
   *   * "custom-type-2"
   *   * "custom-type-3"
   *   * "custom-type-4"
   *   * "custom-type-5"
   *
   *   If this field is set to an invalid value other than these, an
   *   INVALID_ARGUMENT error is returned.
   *
   *   This field directly corresponds to
   *   {@link google.cloud.retail.v2beta.FulfillmentInfo.type|Product.fulfillment_info.type}.
   * @param {string[]} request.placeIds
   *   Required. The IDs for this
   *   {@link google.cloud.retail.v2beta.RemoveFulfillmentPlacesRequest.type|type},
   *   such as the store IDs for "pickup-in-store" or the region IDs for
   *   "same-day-delivery", to be removed for this
   *   {@link google.cloud.retail.v2beta.RemoveFulfillmentPlacesRequest.type|type}.
   *
   *   At least 1 value is required, and a maximum of 2000 values are allowed.
   *   Each value must be a string with a length limit of 10 characters, matching
   *   the pattern `[a-zA-Z0-9_-]+`, such as "store1" or "REGION-2". Otherwise, an
   *   INVALID_ARGUMENT error is returned.
   * @param {google.protobuf.Timestamp} request.removeTime
   *   The time when the fulfillment updates are issued, used to prevent
   *   out-of-order updates on fulfillment information. If not provided, the
   *   internal system time will be used.
   * @param {boolean} request.allowMissing
   *   If set to true, and the {@link google.cloud.retail.v2beta.Product|Product} is
   *   not found, the fulfillment information will still be processed and retained
   *   for at most 1 day and processed once the
   *   {@link google.cloud.retail.v2beta.Product|Product} is created. If set to false,
   *   a NOT_FOUND error is returned if the
   *   {@link google.cloud.retail.v2beta.Product|Product} is not found.
   * @param {object} [options]
   *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
   * @returns {Promise} - The promise which resolves to an array.
   *   The first element of the array is an object representing
   *   a long running operation. Its `promise()` method returns a promise
   *   you can `await` for.
   *   Please see the
   *   [documentation](https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#long-running-operations)
   *   for more details and examples.
   * @example <caption>include:samples/generated/v2beta/product_service.remove_fulfillment_places.js</caption>
   * region_tag:retail_v2beta_generated_ProductService_RemoveFulfillmentPlaces_async
   */
  removeFulfillmentPlaces(
    request?: protos.google.cloud.retail.v2beta.IRemoveFulfillmentPlacesRequest,
    options?: CallOptions
  ): Promise<
    [
      LROperation<
        protos.google.cloud.retail.v2beta.IRemoveFulfillmentPlacesResponse,
        protos.google.cloud.retail.v2beta.IRemoveFulfillmentPlacesMetadata
      >,
      protos.google.longrunning.IOperation | undefined,
      {} | undefined
    ]
  >;
  removeFulfillmentPlaces(
    request: protos.google.cloud.retail.v2beta.IRemoveFulfillmentPlacesRequest,
    options: CallOptions,
    callback: Callback<
      LROperation<
        protos.google.cloud.retail.v2beta.IRemoveFulfillmentPlacesResponse,
        protos.google.cloud.retail.v2beta.IRemoveFulfillmentPlacesMetadata
      >,
      protos.google.longrunning.IOperation | null | undefined,
      {} | null | undefined
    >
  ): void;
  removeFulfillmentPlaces(
    request: protos.google.cloud.retail.v2beta.IRemoveFulfillmentPlacesRequest,
    callback: Callback<
      LROperation<
        protos.google.cloud.retail.v2beta.IRemoveFulfillmentPlacesResponse,
        protos.google.cloud.retail.v2beta.IRemoveFulfillmentPlacesMetadata
      >,
      protos.google.longrunning.IOperation | null | undefined,
      {} | null | undefined
    >
  ): void;
  removeFulfillmentPlaces(
    request?: protos.google.cloud.retail.v2beta.IRemoveFulfillmentPlacesRequest,
    optionsOrCallback?:
      | CallOptions
      | Callback<
          LROperation<
            protos.google.cloud.retail.v2beta.IRemoveFulfillmentPlacesResponse,
            protos.google.cloud.retail.v2beta.IRemoveFulfillmentPlacesMetadata
          >,
          protos.google.longrunning.IOperation | null | undefined,
          {} | null | undefined
        >,
    callback?: Callback<
      LROperation<
        protos.google.cloud.retail.v2beta.IRemoveFulfillmentPlacesResponse,
        protos.google.cloud.retail.v2beta.IRemoveFulfillmentPlacesMetadata
      >,
      protos.google.longrunning.IOperation | null | undefined,
      {} | null | undefined
    >
  ): Promise<
    [
      LROperation<
        protos.google.cloud.retail.v2beta.IRemoveFulfillmentPlacesResponse,
        protos.google.cloud.retail.v2beta.IRemoveFulfillmentPlacesMetadata
      >,
      protos.google.longrunning.IOperation | undefined,
      {} | undefined
    ]
  > | void {
    request = request || {};
    let options: CallOptions;
    if (typeof optionsOrCallback === 'function' && callback === undefined) {
      callback = optionsOrCallback;
      options = {};
    } else {
      options = optionsOrCallback as CallOptions;
    }
    options = options || {};
    options.otherArgs = options.otherArgs || {};
    options.otherArgs.headers = options.otherArgs.headers || {};
    options.otherArgs.headers['x-goog-request-params'] =
      this._gaxModule.routingHeader.fromParams({
        product: request.product ?? '',
      });
    this.initialize();
    return this.innerApiCalls.removeFulfillmentPlaces(
      request,
      options,
      callback
    );
  }
  /**
   * Check the status of the long running operation returned by `removeFulfillmentPlaces()`.
   * @param {String} name
   *   The operation name that will be passed.
   * @returns {Promise} - The promise which resolves to an object.
   *   The decoded operation object has result and metadata field to get information from.
   *   Please see the
   *   [documentation](https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#long-running-operations)
   *   for more details and examples.
   * @example <caption>include:samples/generated/v2beta/product_service.remove_fulfillment_places.js</caption>
   * region_tag:retail_v2beta_generated_ProductService_RemoveFulfillmentPlaces_async
   */
  async checkRemoveFulfillmentPlacesProgress(
    name: string
  ): Promise<
    LROperation<
      protos.google.cloud.retail.v2beta.RemoveFulfillmentPlacesResponse,
      protos.google.cloud.retail.v2beta.RemoveFulfillmentPlacesMetadata
    >
  > {
    const request =
      new this._gaxModule.operationsProtos.google.longrunning.GetOperationRequest(
        {name}
      );
    const [operation] = await this.operationsClient.getOperation(request);
    const decodeOperation = new this._gaxModule.Operation(
      operation,
      this.descriptors.longrunning.removeFulfillmentPlaces,
      this._gaxModule.createDefaultBackoffSettings()
    );
    return decodeOperation as LROperation<
      protos.google.cloud.retail.v2beta.RemoveFulfillmentPlacesResponse,
      protos.google.cloud.retail.v2beta.RemoveFulfillmentPlacesMetadata
    >;
  }
  /**
   * Updates local inventory information for a
   * {@link google.cloud.retail.v2beta.Product|Product} at a list of places, while
   * respecting the last update timestamps of each inventory field.
   *
   * This process is asynchronous and does not require the
   * {@link google.cloud.retail.v2beta.Product|Product} to exist before updating
   * inventory information. If the request is valid, the update will be enqueued
   * and processed downstream. As a consequence, when a response is returned,
   * updates are not immediately manifested in the
   * {@link google.cloud.retail.v2beta.Product|Product} queried by
   * {@link google.cloud.retail.v2beta.ProductService.GetProduct|ProductService.GetProduct}
   * or
   * {@link google.cloud.retail.v2beta.ProductService.ListProducts|ProductService.ListProducts}.
   *
   * Local inventory information can only be modified using this method.
   * {@link google.cloud.retail.v2beta.ProductService.CreateProduct|ProductService.CreateProduct}
   * and
   * {@link google.cloud.retail.v2beta.ProductService.UpdateProduct|ProductService.UpdateProduct}
   * has no effect on local inventories.
   *
   * The returned {@link google.longrunning.Operation|Operation}s will be obsolete
   * after 1 day, and {@link google.longrunning.Operations.GetOperation|GetOperation}
   * API will return NOT_FOUND afterwards.
   *
   * If conflicting updates are issued, the
   * {@link google.longrunning.Operation|Operation}s associated with the stale
   * updates will not be marked as {@link google.longrunning.Operation.done|done}
   * until being obsolete.
   *
   * This feature is only available for users who have Retail Search enabled.
   * Enable Retail Search on Cloud Console before using this feature.
   *
   * @param {Object} request
   *   The request object that will be sent.
   * @param {string} request.product
   *   Required. Full resource name of
   *   {@link google.cloud.retail.v2beta.Product|Product}, such as
   *   `projects/* /locations/global/catalogs/default_catalog/branches/default_branch/products/some_product_id`.
   *
   *   If the caller does not have permission to access the
   *   {@link google.cloud.retail.v2beta.Product|Product}, regardless of whether or not
   *   it exists, a PERMISSION_DENIED error is returned.
   * @param {number[]} request.localInventories
   *   Required. A list of inventory information at difference places. Each place
   *   is identified by its place ID. At most 3000 inventories are allowed per
   *   request.
   * @param {google.protobuf.FieldMask} request.addMask
   *   Indicates which inventory fields in the provided list of
   *   {@link google.cloud.retail.v2beta.LocalInventory|LocalInventory} to update. The
   *   field is updated to the provided value.
   *
   *   If a field is set while the place does not have a previous local inventory,
   *   the local inventory at that store is created.
   *
   *   If a field is set while the value of that field is not provided, the
   *   original field value, if it exists, is deleted.
   *
   *   If the mask is not set or set with empty paths, all inventory fields will
   *   be updated.
   *
   *   If an unsupported or unknown field is provided, an INVALID_ARGUMENT error
   *   is returned and the entire update will be ignored.
   * @param {google.protobuf.Timestamp} request.addTime
   *   The time when the inventory updates are issued. Used to prevent
   *   out-of-order updates on local inventory fields. If not provided, the
   *   internal system time will be used.
   * @param {boolean} request.allowMissing
   *   If set to true, and the {@link google.cloud.retail.v2beta.Product|Product} is
   *   not found, the local inventory will still be processed and retained for at
   *   most 1 day and processed once the
   *   {@link google.cloud.retail.v2beta.Product|Product} is created. If set to false,
   *   a NOT_FOUND error is returned if the
   *   {@link google.cloud.retail.v2beta.Product|Product} is not found.
   * @param {object} [options]
   *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
   * @returns {Promise} - The promise which resolves to an array.
   *   The first element of the array is an object representing
   *   a long running operation. Its `promise()` method returns a promise
   *   you can `await` for.
   *   Please see the
   *   [documentation](https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#long-running-operations)
   *   for more details and examples.
   * @example <caption>include:samples/generated/v2beta/product_service.add_local_inventories.js</caption>
   * region_tag:retail_v2beta_generated_ProductService_AddLocalInventories_async
   */
  addLocalInventories(
    request?: protos.google.cloud.retail.v2beta.IAddLocalInventoriesRequest,
    options?: CallOptions
  ): Promise<
    [
      LROperation<
        protos.google.cloud.retail.v2beta.IAddLocalInventoriesResponse,
        protos.google.cloud.retail.v2beta.IAddLocalInventoriesMetadata
      >,
      protos.google.longrunning.IOperation | undefined,
      {} | undefined
    ]
  >;
  addLocalInventories(
    request: protos.google.cloud.retail.v2beta.IAddLocalInventoriesRequest,
    options: CallOptions,
    callback: Callback<
      LROperation<
        protos.google.cloud.retail.v2beta.IAddLocalInventoriesResponse,
        protos.google.cloud.retail.v2beta.IAddLocalInventoriesMetadata
      >,
      protos.google.longrunning.IOperation | null | undefined,
      {} | null | undefined
    >
  ): void;
  addLocalInventories(
    request: protos.google.cloud.retail.v2beta.IAddLocalInventoriesRequest,
    callback: Callback<
      LROperation<
        protos.google.cloud.retail.v2beta.IAddLocalInventoriesResponse,
        protos.google.cloud.retail.v2beta.IAddLocalInventoriesMetadata
      >,
      protos.google.longrunning.IOperation | null | undefined,
      {} | null | undefined
    >
  ): void;
  addLocalInventories(
    request?: protos.google.cloud.retail.v2beta.IAddLocalInventoriesRequest,
    optionsOrCallback?:
      | CallOptions
      | Callback<
          LROperation<
            protos.google.cloud.retail.v2beta.IAddLocalInventoriesResponse,
            protos.google.cloud.retail.v2beta.IAddLocalInventoriesMetadata
          >,
          protos.google.longrunning.IOperation | null | undefined,
          {} | null | undefined
        >,
    callback?: Callback<
      LROperation<
        protos.google.cloud.retail.v2beta.IAddLocalInventoriesResponse,
        protos.google.cloud.retail.v2beta.IAddLocalInventoriesMetadata
      >,
      protos.google.longrunning.IOperation | null | undefined,
      {} | null | undefined
    >
  ): Promise<
    [
      LROperation<
        protos.google.cloud.retail.v2beta.IAddLocalInventoriesResponse,
        protos.google.cloud.retail.v2beta.IAddLocalInventoriesMetadata
      >,
      protos.google.longrunning.IOperation | undefined,
      {} | undefined
    ]
  > | void {
    request = request || {};
    let options: CallOptions;
    if (typeof optionsOrCallback === 'function' && callback === undefined) {
      callback = optionsOrCallback;
      options = {};
    } else {
      options = optionsOrCallback as CallOptions;
    }
    options = options || {};
    options.otherArgs = options.otherArgs || {};
    options.otherArgs.headers = options.otherArgs.headers || {};
    options.otherArgs.headers['x-goog-request-params'] =
      this._gaxModule.routingHeader.fromParams({
        product: request.product ?? '',
      });
    this.initialize();
    return this.innerApiCalls.addLocalInventories(request, options, callback);
  }
  /**
   * Check the status of the long running operation returned by `addLocalInventories()`.
   * @param {String} name
   *   The operation name that will be passed.
   * @returns {Promise} - The promise which resolves to an object.
   *   The decoded operation object has result and metadata field to get information from.
   *   Please see the
   *   [documentation](https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#long-running-operations)
   *   for more details and examples.
   * @example <caption>include:samples/generated/v2beta/product_service.add_local_inventories.js</caption>
   * region_tag:retail_v2beta_generated_ProductService_AddLocalInventories_async
   */
  async checkAddLocalInventoriesProgress(
    name: string
  ): Promise<
    LROperation<
      protos.google.cloud.retail.v2beta.AddLocalInventoriesResponse,
      protos.google.cloud.retail.v2beta.AddLocalInventoriesMetadata
    >
  > {
    const request =
      new this._gaxModule.operationsProtos.google.longrunning.GetOperationRequest(
        {name}
      );
    const [operation] = await this.operationsClient.getOperation(request);
    const decodeOperation = new this._gaxModule.Operation(
      operation,
      this.descriptors.longrunning.addLocalInventories,
      this._gaxModule.createDefaultBackoffSettings()
    );
    return decodeOperation as LROperation<
      protos.google.cloud.retail.v2beta.AddLocalInventoriesResponse,
      protos.google.cloud.retail.v2beta.AddLocalInventoriesMetadata
    >;
  }
  /**
   * Remove local inventory information for a
   * {@link google.cloud.retail.v2beta.Product|Product} at a list of places at a
   * removal timestamp.
   *
   * This process is asynchronous. If the request is valid, the removal will be
   * enqueued and processed downstream. As a consequence, when a response is
   * returned, removals are not immediately manifested in the
   * {@link google.cloud.retail.v2beta.Product|Product} queried by
   * {@link google.cloud.retail.v2beta.ProductService.GetProduct|ProductService.GetProduct}
   * or
   * {@link google.cloud.retail.v2beta.ProductService.ListProducts|ProductService.ListProducts}.
   *
   * Local inventory information can only be removed using this method.
   * {@link google.cloud.retail.v2beta.ProductService.CreateProduct|ProductService.CreateProduct}
   * and
   * {@link google.cloud.retail.v2beta.ProductService.UpdateProduct|ProductService.UpdateProduct}
   * has no effect on local inventories.
   *
   * The returned {@link google.longrunning.Operation|Operation}s will be obsolete
   * after 1 day, and {@link google.longrunning.Operations.GetOperation|GetOperation}
   * API will return NOT_FOUND afterwards.
   *
   * If conflicting updates are issued, the
   * {@link google.longrunning.Operation|Operation}s associated with the stale
   * updates will not be marked as {@link google.longrunning.Operation.done|done}
   * until being obsolete.
   *
   * This feature is only available for users who have Retail Search enabled.
   * Enable Retail Search on Cloud Console before using this feature.
   *
   * @param {Object} request
   *   The request object that will be sent.
   * @param {string} request.product
   *   Required. Full resource name of
   *   {@link google.cloud.retail.v2beta.Product|Product}, such as
   *   `projects/* /locations/global/catalogs/default_catalog/branches/default_branch/products/some_product_id`.
   *
   *   If the caller does not have permission to access the
   *   {@link google.cloud.retail.v2beta.Product|Product}, regardless of whether or not
   *   it exists, a PERMISSION_DENIED error is returned.
   * @param {string[]} request.placeIds
   *   Required. A list of place IDs to have their inventory deleted.
   *   At most 3000 place IDs are allowed per request.
   * @param {google.protobuf.Timestamp} request.removeTime
   *   The time when the inventory deletions are issued. Used to prevent
   *   out-of-order updates and deletions on local inventory fields. If not
   *   provided, the internal system time will be used.
   * @param {boolean} request.allowMissing
   *   If set to true, and the {@link google.cloud.retail.v2beta.Product|Product} is
   *   not found, the local inventory removal request will still be processed and
   *   retained for at most 1 day and processed once the
   *   {@link google.cloud.retail.v2beta.Product|Product} is created. If set to false,
   *   a NOT_FOUND error is returned if the
   *   {@link google.cloud.retail.v2beta.Product|Product} is not found.
   * @param {object} [options]
   *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
   * @returns {Promise} - The promise which resolves to an array.
   *   The first element of the array is an object representing
   *   a long running operation. Its `promise()` method returns a promise
   *   you can `await` for.
   *   Please see the
   *   [documentation](https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#long-running-operations)
   *   for more details and examples.
   * @example <caption>include:samples/generated/v2beta/product_service.remove_local_inventories.js</caption>
   * region_tag:retail_v2beta_generated_ProductService_RemoveLocalInventories_async
   */
  removeLocalInventories(
    request?: protos.google.cloud.retail.v2beta.IRemoveLocalInventoriesRequest,
    options?: CallOptions
  ): Promise<
    [
      LROperation<
        protos.google.cloud.retail.v2beta.IRemoveLocalInventoriesResponse,
        protos.google.cloud.retail.v2beta.IRemoveLocalInventoriesMetadata
      >,
      protos.google.longrunning.IOperation | undefined,
      {} | undefined
    ]
  >;
  removeLocalInventories(
    request: protos.google.cloud.retail.v2beta.IRemoveLocalInventoriesRequest,
    options: CallOptions,
    callback: Callback<
      LROperation<
        protos.google.cloud.retail.v2beta.IRemoveLocalInventoriesResponse,
        protos.google.cloud.retail.v2beta.IRemoveLocalInventoriesMetadata
      >,
      protos.google.longrunning.IOperation | null | undefined,
      {} | null | undefined
    >
  ): void;
  removeLocalInventories(
    request: protos.google.cloud.retail.v2beta.IRemoveLocalInventoriesRequest,
    callback: Callback<
      LROperation<
        protos.google.cloud.retail.v2beta.IRemoveLocalInventoriesResponse,
        protos.google.cloud.retail.v2beta.IRemoveLocalInventoriesMetadata
      >,
      protos.google.longrunning.IOperation | null | undefined,
      {} | null | undefined
    >
  ): void;
  removeLocalInventories(
    request?: protos.google.cloud.retail.v2beta.IRemoveLocalInventoriesRequest,
    optionsOrCallback?:
      | CallOptions
      | Callback<
          LROperation<
            protos.google.cloud.retail.v2beta.IRemoveLocalInventoriesResponse,
            protos.google.cloud.retail.v2beta.IRemoveLocalInventoriesMetadata
          >,
          protos.google.longrunning.IOperation | null | undefined,
          {} | null | undefined
        >,
    callback?: Callback<
      LROperation<
        protos.google.cloud.retail.v2beta.IRemoveLocalInventoriesResponse,
        protos.google.cloud.retail.v2beta.IRemoveLocalInventoriesMetadata
      >,
      protos.google.longrunning.IOperation | null | undefined,
      {} | null | undefined
    >
  ): Promise<
    [
      LROperation<
        protos.google.cloud.retail.v2beta.IRemoveLocalInventoriesResponse,
        protos.google.cloud.retail.v2beta.IRemoveLocalInventoriesMetadata
      >,
      protos.google.longrunning.IOperation | undefined,
      {} | undefined
    ]
  > | void {
    request = request || {};
    let options: CallOptions;
    if (typeof optionsOrCallback === 'function' && callback === undefined) {
      callback = optionsOrCallback;
      options = {};
    } else {
      options = optionsOrCallback as CallOptions;
    }
    options = options || {};
    options.otherArgs = options.otherArgs || {};
    options.otherArgs.headers = options.otherArgs.headers || {};
    options.otherArgs.headers['x-goog-request-params'] =
      this._gaxModule.routingHeader.fromParams({
        product: request.product ?? '',
      });
    this.initialize();
    return this.innerApiCalls.removeLocalInventories(
      request,
      options,
      callback
    );
  }
  /**
   * Check the status of the long running operation returned by `removeLocalInventories()`.
   * @param {String} name
   *   The operation name that will be passed.
   * @returns {Promise} - The promise which resolves to an object.
   *   The decoded operation object has result and metadata field to get information from.
   *   Please see the
   *   [documentation](https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#long-running-operations)
   *   for more details and examples.
   * @example <caption>include:samples/generated/v2beta/product_service.remove_local_inventories.js</caption>
   * region_tag:retail_v2beta_generated_ProductService_RemoveLocalInventories_async
   */
  async checkRemoveLocalInventoriesProgress(
    name: string
  ): Promise<
    LROperation<
      protos.google.cloud.retail.v2beta.RemoveLocalInventoriesResponse,
      protos.google.cloud.retail.v2beta.RemoveLocalInventoriesMetadata
    >
  > {
    const request =
      new this._gaxModule.operationsProtos.google.longrunning.GetOperationRequest(
        {name}
      );
    const [operation] = await this.operationsClient.getOperation(request);
    const decodeOperation = new this._gaxModule.Operation(
      operation,
      this.descriptors.longrunning.removeLocalInventories,
      this._gaxModule.createDefaultBackoffSettings()
    );
    return decodeOperation as LROperation<
      protos.google.cloud.retail.v2beta.RemoveLocalInventoriesResponse,
      protos.google.cloud.retail.v2beta.RemoveLocalInventoriesMetadata
    >;
  }
  /**
   * Gets a list of {@link google.cloud.retail.v2beta.Product|Product}s.
   *
   * @param {Object} request
   *   The request object that will be sent.
   * @param {string} request.parent
   *   Required. The parent branch resource name, such as
   *   `projects/* /locations/global/catalogs/default_catalog/branches/0`. Use
   *   `default_branch` as the branch ID, to list products under the default
   *   branch.
   *
   *   If the caller does not have permission to list
   *   {@link google.cloud.retail.v2beta.Product|Product}s under this branch,
   *   regardless of whether or not this branch exists, a PERMISSION_DENIED error
   *   is returned.
   * @param {number} request.pageSize
   *   Maximum number of {@link google.cloud.retail.v2beta.Product|Product}s to return.
   *   If unspecified, defaults to 100. The maximum allowed value is 1000. Values
   *   above 1000 will be coerced to 1000.
   *
   *   If this field is negative, an INVALID_ARGUMENT error is returned.
   * @param {string} request.pageToken
   *   A page token
   *   {@link google.cloud.retail.v2beta.ListProductsResponse.next_page_token|ListProductsResponse.next_page_token},
   *   received from a previous
   *   {@link google.cloud.retail.v2beta.ProductService.ListProducts|ProductService.ListProducts}
   *   call. Provide this to retrieve the subsequent page.
   *
   *   When paginating, all other parameters provided to
   *   {@link google.cloud.retail.v2beta.ProductService.ListProducts|ProductService.ListProducts}
   *   must match the call that provided the page token. Otherwise, an
   *   INVALID_ARGUMENT error is returned.
   * @param {string} request.filter
   *   A filter to apply on the list results. Supported features:
   *
   *   * List all the products under the parent branch if
   *   {@link google.cloud.retail.v2beta.ListProductsRequest.filter|filter} is unset.
   *   * List
   *   {@link google.cloud.retail.v2beta.Product.Type.VARIANT|Product.Type.VARIANT}
   *   {@link google.cloud.retail.v2beta.Product|Product}s sharing the same
   *     {@link google.cloud.retail.v2beta.Product.Type.PRIMARY|Product.Type.PRIMARY}
   *     {@link google.cloud.retail.v2beta.Product|Product}. For example:
   *       `primary_product_id = "some_product_id"`
   *   * List {@link google.cloud.retail.v2beta.Product|Product}s bundled in a
   *   {@link google.cloud.retail.v2beta.Product.Type.COLLECTION|Product.Type.COLLECTION}
   *   {@link google.cloud.retail.v2beta.Product|Product}.
   *     For example:
   *       `collection_product_id = "some_product_id"`
   *   * List {@link google.cloud.retail.v2beta.Product|Product}s with a partibular
   *   type. For example:
   *       `type = "PRIMARY"`
   *       `type = "VARIANT"`
   *       `type = "COLLECTION"`
   *
   *   If the field is unrecognizable, an INVALID_ARGUMENT error is returned.
   *
   *   If the specified
   *   {@link google.cloud.retail.v2beta.Product.Type.PRIMARY|Product.Type.PRIMARY}
   *   {@link google.cloud.retail.v2beta.Product|Product} or
   *   {@link google.cloud.retail.v2beta.Product.Type.COLLECTION|Product.Type.COLLECTION}
   *   {@link google.cloud.retail.v2beta.Product|Product} does not exist, a NOT_FOUND
   *   error is returned.
   * @param {google.protobuf.FieldMask} request.readMask
   *   The fields of {@link google.cloud.retail.v2beta.Product|Product} to return in
   *   the responses. If not set or empty, the following fields are returned:
   *
   *   * {@link google.cloud.retail.v2beta.Product.name|Product.name}
   *   * {@link google.cloud.retail.v2beta.Product.id|Product.id}
   *   * {@link google.cloud.retail.v2beta.Product.title|Product.title}
   *   * {@link google.cloud.retail.v2beta.Product.uri|Product.uri}
   *   * {@link google.cloud.retail.v2beta.Product.images|Product.images}
   *   * {@link google.cloud.retail.v2beta.Product.price_info|Product.price_info}
   *   * {@link google.cloud.retail.v2beta.Product.brands|Product.brands}
   *
   *   If "*" is provided, all fields are returned.
   *   {@link google.cloud.retail.v2beta.Product.name|Product.name} is always returned
   *   no matter what mask is set.
   *
   *   If an unsupported or unknown field is provided, an INVALID_ARGUMENT error
   *   is returned.
   * @param {object} [options]
   *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
   * @returns {Promise} - The promise which resolves to an array.
   *   The first element of the array is Array of [Product]{@link google.cloud.retail.v2beta.Product}.
   *   The client library will perform auto-pagination by default: it will call the API as many
   *   times as needed and will merge results from all the pages into this array.
   *   Note that it can affect your quota.
   *   We recommend using `listProductsAsync()`
   *   method described below for async iteration which you can stop as needed.
   *   Please see the
   *   [documentation](https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#auto-pagination)
   *   for more details and examples.
   */
  listProducts(
    request?: protos.google.cloud.retail.v2beta.IListProductsRequest,
    options?: CallOptions
  ): Promise<
    [
      protos.google.cloud.retail.v2beta.IProduct[],
      protos.google.cloud.retail.v2beta.IListProductsRequest | null,
      protos.google.cloud.retail.v2beta.IListProductsResponse
    ]
  >;
  listProducts(
    request: protos.google.cloud.retail.v2beta.IListProductsRequest,
    options: CallOptions,
    callback: PaginationCallback<
      protos.google.cloud.retail.v2beta.IListProductsRequest,
      | protos.google.cloud.retail.v2beta.IListProductsResponse
      | null
      | undefined,
      protos.google.cloud.retail.v2beta.IProduct
    >
  ): void;
  listProducts(
    request: protos.google.cloud.retail.v2beta.IListProductsRequest,
    callback: PaginationCallback<
      protos.google.cloud.retail.v2beta.IListProductsRequest,
      | protos.google.cloud.retail.v2beta.IListProductsResponse
      | null
      | undefined,
      protos.google.cloud.retail.v2beta.IProduct
    >
  ): void;
  listProducts(
    request?: protos.google.cloud.retail.v2beta.IListProductsRequest,
    optionsOrCallback?:
      | CallOptions
      | PaginationCallback<
          protos.google.cloud.retail.v2beta.IListProductsRequest,
          | protos.google.cloud.retail.v2beta.IListProductsResponse
          | null
          | undefined,
          protos.google.cloud.retail.v2beta.IProduct
        >,
    callback?: PaginationCallback<
      protos.google.cloud.retail.v2beta.IListProductsRequest,
      | protos.google.cloud.retail.v2beta.IListProductsResponse
      | null
      | undefined,
      protos.google.cloud.retail.v2beta.IProduct
    >
  ): Promise<
    [
      protos.google.cloud.retail.v2beta.IProduct[],
      protos.google.cloud.retail.v2beta.IListProductsRequest | null,
      protos.google.cloud.retail.v2beta.IListProductsResponse
    ]
  > | void {
    request = request || {};
    let options: CallOptions;
    if (typeof optionsOrCallback === 'function' && callback === undefined) {
      callback = optionsOrCallback;
      options = {};
    } else {
      options = optionsOrCallback as CallOptions;
    }
    options = options || {};
    options.otherArgs = options.otherArgs || {};
    options.otherArgs.headers = options.otherArgs.headers || {};
    options.otherArgs.headers['x-goog-request-params'] =
      this._gaxModule.routingHeader.fromParams({
        parent: request.parent ?? '',
      });
    this.initialize();
    return this.innerApiCalls.listProducts(request, options, callback);
  }

  /**
   * Equivalent to `method.name.toCamelCase()`, but returns a NodeJS Stream object.
   * @param {Object} request
   *   The request object that will be sent.
   * @param {string} request.parent
   *   Required. The parent branch resource name, such as
   *   `projects/* /locations/global/catalogs/default_catalog/branches/0`. Use
   *   `default_branch` as the branch ID, to list products under the default
   *   branch.
   *
   *   If the caller does not have permission to list
   *   {@link google.cloud.retail.v2beta.Product|Product}s under this branch,
   *   regardless of whether or not this branch exists, a PERMISSION_DENIED error
   *   is returned.
   * @param {number} request.pageSize
   *   Maximum number of {@link google.cloud.retail.v2beta.Product|Product}s to return.
   *   If unspecified, defaults to 100. The maximum allowed value is 1000. Values
   *   above 1000 will be coerced to 1000.
   *
   *   If this field is negative, an INVALID_ARGUMENT error is returned.
   * @param {string} request.pageToken
   *   A page token
   *   {@link google.cloud.retail.v2beta.ListProductsResponse.next_page_token|ListProductsResponse.next_page_token},
   *   received from a previous
   *   {@link google.cloud.retail.v2beta.ProductService.ListProducts|ProductService.ListProducts}
   *   call. Provide this to retrieve the subsequent page.
   *
   *   When paginating, all other parameters provided to
   *   {@link google.cloud.retail.v2beta.ProductService.ListProducts|ProductService.ListProducts}
   *   must match the call that provided the page token. Otherwise, an
   *   INVALID_ARGUMENT error is returned.
   * @param {string} request.filter
   *   A filter to apply on the list results. Supported features:
   *
   *   * List all the products under the parent branch if
   *   {@link google.cloud.retail.v2beta.ListProductsRequest.filter|filter} is unset.
   *   * List
   *   {@link google.cloud.retail.v2beta.Product.Type.VARIANT|Product.Type.VARIANT}
   *   {@link google.cloud.retail.v2beta.Product|Product}s sharing the same
   *     {@link google.cloud.retail.v2beta.Product.Type.PRIMARY|Product.Type.PRIMARY}
   *     {@link google.cloud.retail.v2beta.Product|Product}. For example:
   *       `primary_product_id = "some_product_id"`
   *   * List {@link google.cloud.retail.v2beta.Product|Product}s bundled in a
   *   {@link google.cloud.retail.v2beta.Product.Type.COLLECTION|Product.Type.COLLECTION}
   *   {@link google.cloud.retail.v2beta.Product|Product}.
   *     For example:
   *       `collection_product_id = "some_product_id"`
   *   * List {@link google.cloud.retail.v2beta.Product|Product}s with a partibular
   *   type. For example:
   *       `type = "PRIMARY"`
   *       `type = "VARIANT"`
   *       `type = "COLLECTION"`
   *
   *   If the field is unrecognizable, an INVALID_ARGUMENT error is returned.
   *
   *   If the specified
   *   {@link google.cloud.retail.v2beta.Product.Type.PRIMARY|Product.Type.PRIMARY}
   *   {@link google.cloud.retail.v2beta.Product|Product} or
   *   {@link google.cloud.retail.v2beta.Product.Type.COLLECTION|Product.Type.COLLECTION}
   *   {@link google.cloud.retail.v2beta.Product|Product} does not exist, a NOT_FOUND
   *   error is returned.
   * @param {google.protobuf.FieldMask} request.readMask
   *   The fields of {@link google.cloud.retail.v2beta.Product|Product} to return in
   *   the responses. If not set or empty, the following fields are returned:
   *
   *   * {@link google.cloud.retail.v2beta.Product.name|Product.name}
   *   * {@link google.cloud.retail.v2beta.Product.id|Product.id}
   *   * {@link google.cloud.retail.v2beta.Product.title|Product.title}
   *   * {@link google.cloud.retail.v2beta.Product.uri|Product.uri}
   *   * {@link google.cloud.retail.v2beta.Product.images|Product.images}
   *   * {@link google.cloud.retail.v2beta.Product.price_info|Product.price_info}
   *   * {@link google.cloud.retail.v2beta.Product.brands|Product.brands}
   *
   *   If "*" is provided, all fields are returned.
   *   {@link google.cloud.retail.v2beta.Product.name|Product.name} is always returned
   *   no matter what mask is set.
   *
   *   If an unsupported or unknown field is provided, an INVALID_ARGUMENT error
   *   is returned.
   * @param {object} [options]
   *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
   * @returns {Stream}
   *   An object stream which emits an object representing [Product]{@link google.cloud.retail.v2beta.Product} on 'data' event.
   *   The client library will perform auto-pagination by default: it will call the API as many
   *   times as needed. Note that it can affect your quota.
   *   We recommend using `listProductsAsync()`
   *   method described below for async iteration which you can stop as needed.
   *   Please see the
   *   [documentation](https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#auto-pagination)
   *   for more details and examples.
   */
  listProductsStream(
    request?: protos.google.cloud.retail.v2beta.IListProductsRequest,
    options?: CallOptions
  ): Transform {
    request = request || {};
    options = options || {};
    options.otherArgs = options.otherArgs || {};
    options.otherArgs.headers = options.otherArgs.headers || {};
    options.otherArgs.headers['x-goog-request-params'] =
      this._gaxModule.routingHeader.fromParams({
        parent: request.parent ?? '',
      });
    const defaultCallSettings = this._defaults['listProducts'];
    const callSettings = defaultCallSettings.merge(options);
    this.initialize();
    return this.descriptors.page.listProducts.createStream(
      this.innerApiCalls.listProducts as GaxCall,
      request,
      callSettings
    );
  }

  /**
   * Equivalent to `listProducts`, but returns an iterable object.
   *
   * `for`-`await`-`of` syntax is used with the iterable to get response elements on-demand.
   * @param {Object} request
   *   The request object that will be sent.
   * @param {string} request.parent
   *   Required. The parent branch resource name, such as
   *   `projects/* /locations/global/catalogs/default_catalog/branches/0`. Use
   *   `default_branch` as the branch ID, to list products under the default
   *   branch.
   *
   *   If the caller does not have permission to list
   *   {@link google.cloud.retail.v2beta.Product|Product}s under this branch,
   *   regardless of whether or not this branch exists, a PERMISSION_DENIED error
   *   is returned.
   * @param {number} request.pageSize
   *   Maximum number of {@link google.cloud.retail.v2beta.Product|Product}s to return.
   *   If unspecified, defaults to 100. The maximum allowed value is 1000. Values
   *   above 1000 will be coerced to 1000.
   *
   *   If this field is negative, an INVALID_ARGUMENT error is returned.
   * @param {string} request.pageToken
   *   A page token
   *   {@link google.cloud.retail.v2beta.ListProductsResponse.next_page_token|ListProductsResponse.next_page_token},
   *   received from a previous
   *   {@link google.cloud.retail.v2beta.ProductService.ListProducts|ProductService.ListProducts}
   *   call. Provide this to retrieve the subsequent page.
   *
   *   When paginating, all other parameters provided to
   *   {@link google.cloud.retail.v2beta.ProductService.ListProducts|ProductService.ListProducts}
   *   must match the call that provided the page token. Otherwise, an
   *   INVALID_ARGUMENT error is returned.
   * @param {string} request.filter
   *   A filter to apply on the list results. Supported features:
   *
   *   * List all the products under the parent branch if
   *   {@link google.cloud.retail.v2beta.ListProductsRequest.filter|filter} is unset.
   *   * List
   *   {@link google.cloud.retail.v2beta.Product.Type.VARIANT|Product.Type.VARIANT}
   *   {@link google.cloud.retail.v2beta.Product|Product}s sharing the same
   *     {@link google.cloud.retail.v2beta.Product.Type.PRIMARY|Product.Type.PRIMARY}
   *     {@link google.cloud.retail.v2beta.Product|Product}. For example:
   *       `primary_product_id = "some_product_id"`
   *   * List {@link google.cloud.retail.v2beta.Product|Product}s bundled in a
   *   {@link google.cloud.retail.v2beta.Product.Type.COLLECTION|Product.Type.COLLECTION}
   *   {@link google.cloud.retail.v2beta.Product|Product}.
   *     For example:
   *       `collection_product_id = "some_product_id"`
   *   * List {@link google.cloud.retail.v2beta.Product|Product}s with a partibular
   *   type. For example:
   *       `type = "PRIMARY"`
   *       `type = "VARIANT"`
   *       `type = "COLLECTION"`
   *
   *   If the field is unrecognizable, an INVALID_ARGUMENT error is returned.
   *
   *   If the specified
   *   {@link google.cloud.retail.v2beta.Product.Type.PRIMARY|Product.Type.PRIMARY}
   *   {@link google.cloud.retail.v2beta.Product|Product} or
   *   {@link google.cloud.retail.v2beta.Product.Type.COLLECTION|Product.Type.COLLECTION}
   *   {@link google.cloud.retail.v2beta.Product|Product} does not exist, a NOT_FOUND
   *   error is returned.
   * @param {google.protobuf.FieldMask} request.readMask
   *   The fields of {@link google.cloud.retail.v2beta.Product|Product} to return in
   *   the responses. If not set or empty, the following fields are returned:
   *
   *   * {@link google.cloud.retail.v2beta.Product.name|Product.name}
   *   * {@link google.cloud.retail.v2beta.Product.id|Product.id}
   *   * {@link google.cloud.retail.v2beta.Product.title|Product.title}
   *   * {@link google.cloud.retail.v2beta.Product.uri|Product.uri}
   *   * {@link google.cloud.retail.v2beta.Product.images|Product.images}
   *   * {@link google.cloud.retail.v2beta.Product.price_info|Product.price_info}
   *   * {@link google.cloud.retail.v2beta.Product.brands|Product.brands}
   *
   *   If "*" is provided, all fields are returned.
   *   {@link google.cloud.retail.v2beta.Product.name|Product.name} is always returned
   *   no matter what mask is set.
   *
   *   If an unsupported or unknown field is provided, an INVALID_ARGUMENT error
   *   is returned.
   * @param {object} [options]
   *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
   * @returns {Object}
   *   An iterable Object that allows [async iteration](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Iteration_protocols).
   *   When you iterate the returned iterable, each element will be an object representing
   *   [Product]{@link google.cloud.retail.v2beta.Product}. The API will be called under the hood as needed, once per the page,
   *   so you can stop the iteration when you don't need more results.
   *   Please see the
   *   [documentation](https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#auto-pagination)
   *   for more details and examples.
   * @example <caption>include:samples/generated/v2beta/product_service.list_products.js</caption>
   * region_tag:retail_v2beta_generated_ProductService_ListProducts_async
   */
  listProductsAsync(
    request?: protos.google.cloud.retail.v2beta.IListProductsRequest,
    options?: CallOptions
  ): AsyncIterable<protos.google.cloud.retail.v2beta.IProduct> {
    request = request || {};
    options = options || {};
    options.otherArgs = options.otherArgs || {};
    options.otherArgs.headers = options.otherArgs.headers || {};
    options.otherArgs.headers['x-goog-request-params'] =
      this._gaxModule.routingHeader.fromParams({
        parent: request.parent ?? '',
      });
    const defaultCallSettings = this._defaults['listProducts'];
    const callSettings = defaultCallSettings.merge(options);
    this.initialize();
    return this.descriptors.page.listProducts.asyncIterate(
      this.innerApiCalls['listProducts'] as GaxCall,
      request as {},
      callSettings
    ) as AsyncIterable<protos.google.cloud.retail.v2beta.IProduct>;
  }
  /**
   * Gets information about a location.
   *
   * @param {Object} request
   *   The request object that will be sent.
   * @param {string} request.name
   *   Resource name for the location.
   * @param {object} [options]
   *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
   * @returns {Promise} - The promise which resolves to an array.
   *   The first element of the array is an object representing [Location]{@link google.cloud.location.Location}.
   *   Please see the
   *   [documentation](https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#regular-methods)
   *   for more details and examples.
   * @example
   * ```
   * const [response] = await client.getLocation(request);
   * ```
   */
  getLocation(
    request: LocationProtos.google.cloud.location.IGetLocationRequest,
    options?:
      | gax.CallOptions
      | Callback<
          LocationProtos.google.cloud.location.ILocation,
          | LocationProtos.google.cloud.location.IGetLocationRequest
          | null
          | undefined,
          {} | null | undefined
        >,
    callback?: Callback<
      LocationProtos.google.cloud.location.ILocation,
      | LocationProtos.google.cloud.location.IGetLocationRequest
      | null
      | undefined,
      {} | null | undefined
    >
  ): Promise<LocationProtos.google.cloud.location.ILocation> {
    return this.locationsClient.getLocation(request, options, callback);
  }

  /**
   * Lists information about the supported locations for this service. Returns an iterable object.
   *
   * `for`-`await`-`of` syntax is used with the iterable to get response elements on-demand.
   * @param {Object} request
   *   The request object that will be sent.
   * @param {string} request.name
   *   The resource that owns the locations collection, if applicable.
   * @param {string} request.filter
   *   The standard list filter.
   * @param {number} request.pageSize
   *   The standard list page size.
   * @param {string} request.pageToken
   *   The standard list page token.
   * @param {object} [options]
   *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
   * @returns {Object}
   *   An iterable Object that allows [async iteration](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Iteration_protocols).
   *   When you iterate the returned iterable, each element will be an object representing
   *   [Location]{@link google.cloud.location.Location}. The API will be called under the hood as needed, once per the page,
   *   so you can stop the iteration when you don't need more results.
   *   Please see the
   *   [documentation](https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#auto-pagination)
   *   for more details and examples.
   * @example
   * ```
   * const iterable = client.listLocationsAsync(request);
   * for await (const response of iterable) {
   *   // process response
   * }
   * ```
   */
  listLocationsAsync(
    request: LocationProtos.google.cloud.location.IListLocationsRequest,
    options?: CallOptions
  ): AsyncIterable<LocationProtos.google.cloud.location.ILocation> {
    return this.locationsClient.listLocationsAsync(request, options);
  }

  /**
   * Gets the latest state of a long-running operation.  Clients can use this
   * method to poll the operation result at intervals as recommended by the API
   * service.
   *
   * @param {Object} request - The request object that will be sent.
   * @param {string} request.name - The name of the operation resource.
   * @param {Object=} options
   *   Optional parameters. You can override the default settings for this call,
   *   e.g, timeout, retries, paginations, etc. See [gax.CallOptions]{@link
   *   https://googleapis.github.io/gax-nodejs/global.html#CallOptions} for the
   *   details.
   * @param {function(?Error, ?Object)=} callback
   *   The function which will be called with the result of the API call.
   *
   *   The second parameter to the callback is an object representing
   * [google.longrunning.Operation]{@link
   * external:"google.longrunning.Operation"}.
   * @return {Promise} - The promise which resolves to an array.
   *   The first element of the array is an object representing
   * [google.longrunning.Operation]{@link
   * external:"google.longrunning.Operation"}. The promise has a method named
   * "cancel" which cancels the ongoing API call.
   *
   * @example
   * ```
   * const client = longrunning.operationsClient();
   * const name = '';
   * const [response] = await client.getOperation({name});
   * // doThingsWith(response)
   * ```
   */
  getOperation(
    request: protos.google.longrunning.GetOperationRequest,
    options?:
      | gax.CallOptions
      | Callback<
          protos.google.longrunning.Operation,
          protos.google.longrunning.GetOperationRequest,
          {} | null | undefined
        >,
    callback?: Callback<
      protos.google.longrunning.Operation,
      protos.google.longrunning.GetOperationRequest,
      {} | null | undefined
    >
  ): Promise<[protos.google.longrunning.Operation]> {
    return this.operationsClient.getOperation(request, options, callback);
  }
  /**
   * Lists operations that match the specified filter in the request. If the
   * server doesn't support this method, it returns `UNIMPLEMENTED`. Returns an iterable object.
   *
   * For-await-of syntax is used with the iterable to recursively get response element on-demand.
   *
   * @param {Object} request - The request object that will be sent.
   * @param {string} request.name - The name of the operation collection.
   * @param {string} request.filter - The standard list filter.
   * @param {number=} request.pageSize -
   *   The maximum number of resources contained in the underlying API
   *   response. If page streaming is performed per-resource, this
   *   parameter does not affect the return value. If page streaming is
   *   performed per-page, this determines the maximum number of
   *   resources in a page.
   * @param {Object=} options
   *   Optional parameters. You can override the default settings for this call,
   *   e.g, timeout, retries, paginations, etc. See [gax.CallOptions]{@link
   *   https://googleapis.github.io/gax-nodejs/global.html#CallOptions} for the
   *   details.
   * @returns {Object}
   *   An iterable Object that conforms to @link https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Iteration_protocols.
   *
   * @example
   * ```
   * const client = longrunning.operationsClient();
   * for await (const response of client.listOperationsAsync(request));
   * // doThingsWith(response)
   * ```
   */
  listOperationsAsync(
    request: protos.google.longrunning.ListOperationsRequest,
    options?: gax.CallOptions
  ): AsyncIterable<protos.google.longrunning.ListOperationsResponse> {
    return this.operationsClient.listOperationsAsync(request, options);
  }
  /**
   * Starts asynchronous cancellation on a long-running operation.  The server
   * makes a best effort to cancel the operation, but success is not
   * guaranteed.  If the server doesn't support this method, it returns
   * `google.rpc.Code.UNIMPLEMENTED`.  Clients can use
   * {@link Operations.GetOperation} or
   * other methods to check whether the cancellation succeeded or whether the
   * operation completed despite cancellation. On successful cancellation,
   * the operation is not deleted; instead, it becomes an operation with
   * an {@link Operation.error} value with a {@link google.rpc.Status.code} of
   * 1, corresponding to `Code.CANCELLED`.
   *
   * @param {Object} request - The request object that will be sent.
   * @param {string} request.name - The name of the operation resource to be cancelled.
   * @param {Object=} options
   *   Optional parameters. You can override the default settings for this call,
   * e.g, timeout, retries, paginations, etc. See [gax.CallOptions]{@link
   * https://googleapis.github.io/gax-nodejs/global.html#CallOptions} for the
   * details.
   * @param {function(?Error)=} callback
   *   The function which will be called with the result of the API call.
   * @return {Promise} - The promise which resolves when API call finishes.
   *   The promise has a method named "cancel" which cancels the ongoing API
   * call.
   *
   * @example
   * ```
   * const client = longrunning.operationsClient();
   * await client.cancelOperation({name: ''});
   * ```
   */
  cancelOperation(
    request: protos.google.longrunning.CancelOperationRequest,
    options?:
      | gax.CallOptions
      | Callback<
          protos.google.protobuf.Empty,
          protos.google.longrunning.CancelOperationRequest,
          {} | undefined | null
        >,
    callback?: Callback<
      protos.google.longrunning.CancelOperationRequest,
      protos.google.protobuf.Empty,
      {} | undefined | null
    >
  ): Promise<protos.google.protobuf.Empty> {
    return this.operationsClient.cancelOperation(request, options, callback);
  }

  /**
   * Deletes a long-running operation. This method indicates that the client is
   * no longer interested in the operation result. It does not cancel the
   * operation. If the server doesn't support this method, it returns
   * `google.rpc.Code.UNIMPLEMENTED`.
   *
   * @param {Object} request - The request object that will be sent.
   * @param {string} request.name - The name of the operation resource to be deleted.
   * @param {Object=} options
   *   Optional parameters. You can override the default settings for this call,
   * e.g, timeout, retries, paginations, etc. See [gax.CallOptions]{@link
   * https://googleapis.github.io/gax-nodejs/global.html#CallOptions} for the
   * details.
   * @param {function(?Error)=} callback
   *   The function which will be called with the result of the API call.
   * @return {Promise} - The promise which resolves when API call finishes.
   *   The promise has a method named "cancel" which cancels the ongoing API
   * call.
   *
   * @example
   * ```
   * const client = longrunning.operationsClient();
   * await client.deleteOperation({name: ''});
   * ```
   */
  deleteOperation(
    request: protos.google.longrunning.DeleteOperationRequest,
    options?:
      | gax.CallOptions
      | Callback<
          protos.google.protobuf.Empty,
          protos.google.longrunning.DeleteOperationRequest,
          {} | null | undefined
        >,
    callback?: Callback<
      protos.google.protobuf.Empty,
      protos.google.longrunning.DeleteOperationRequest,
      {} | null | undefined
    >
  ): Promise<protos.google.protobuf.Empty> {
    return this.operationsClient.deleteOperation(request, options, callback);
  }

  // --------------------
  // -- Path templates --
  // --------------------

  /**
   * Return a fully-qualified attributesConfig resource name string.
   *
   * @param {string} project
   * @param {string} location
   * @param {string} catalog
   * @returns {string} Resource name string.
   */
  attributesConfigPath(project: string, location: string, catalog: string) {
    return this.pathTemplates.attributesConfigPathTemplate.render({
      project: project,
      location: location,
      catalog: catalog,
    });
  }

  /**
   * Parse the project from AttributesConfig resource.
   *
   * @param {string} attributesConfigName
   *   A fully-qualified path representing AttributesConfig resource.
   * @returns {string} A string representing the project.
   */
  matchProjectFromAttributesConfigName(attributesConfigName: string) {
    return this.pathTemplates.attributesConfigPathTemplate.match(
      attributesConfigName
    ).project;
  }

  /**
   * Parse the location from AttributesConfig resource.
   *
   * @param {string} attributesConfigName
   *   A fully-qualified path representing AttributesConfig resource.
   * @returns {string} A string representing the location.
   */
  matchLocationFromAttributesConfigName(attributesConfigName: string) {
    return this.pathTemplates.attributesConfigPathTemplate.match(
      attributesConfigName
    ).location;
  }

  /**
   * Parse the catalog from AttributesConfig resource.
   *
   * @param {string} attributesConfigName
   *   A fully-qualified path representing AttributesConfig resource.
   * @returns {string} A string representing the catalog.
   */
  matchCatalogFromAttributesConfigName(attributesConfigName: string) {
    return this.pathTemplates.attributesConfigPathTemplate.match(
      attributesConfigName
    ).catalog;
  }

  /**
   * Return a fully-qualified branch resource name string.
   *
   * @param {string} project
   * @param {string} location
   * @param {string} catalog
   * @param {string} branch
   * @returns {string} Resource name string.
   */
  branchPath(
    project: string,
    location: string,
    catalog: string,
    branch: string
  ) {
    return this.pathTemplates.branchPathTemplate.render({
      project: project,
      location: location,
      catalog: catalog,
      branch: branch,
    });
  }

  /**
   * Parse the project from Branch resource.
   *
   * @param {string} branchName
   *   A fully-qualified path representing Branch resource.
   * @returns {string} A string representing the project.
   */
  matchProjectFromBranchName(branchName: string) {
    return this.pathTemplates.branchPathTemplate.match(branchName).project;
  }

  /**
   * Parse the location from Branch resource.
   *
   * @param {string} branchName
   *   A fully-qualified path representing Branch resource.
   * @returns {string} A string representing the location.
   */
  matchLocationFromBranchName(branchName: string) {
    return this.pathTemplates.branchPathTemplate.match(branchName).location;
  }

  /**
   * Parse the catalog from Branch resource.
   *
   * @param {string} branchName
   *   A fully-qualified path representing Branch resource.
   * @returns {string} A string representing the catalog.
   */
  matchCatalogFromBranchName(branchName: string) {
    return this.pathTemplates.branchPathTemplate.match(branchName).catalog;
  }

  /**
   * Parse the branch from Branch resource.
   *
   * @param {string} branchName
   *   A fully-qualified path representing Branch resource.
   * @returns {string} A string representing the branch.
   */
  matchBranchFromBranchName(branchName: string) {
    return this.pathTemplates.branchPathTemplate.match(branchName).branch;
  }

  /**
   * Return a fully-qualified catalog resource name string.
   *
   * @param {string} project
   * @param {string} location
   * @param {string} catalog
   * @returns {string} Resource name string.
   */
  catalogPath(project: string, location: string, catalog: string) {
    return this.pathTemplates.catalogPathTemplate.render({
      project: project,
      location: location,
      catalog: catalog,
    });
  }

  /**
   * Parse the project from Catalog resource.
   *
   * @param {string} catalogName
   *   A fully-qualified path representing Catalog resource.
   * @returns {string} A string representing the project.
   */
  matchProjectFromCatalogName(catalogName: string) {
    return this.pathTemplates.catalogPathTemplate.match(catalogName).project;
  }

  /**
   * Parse the location from Catalog resource.
   *
   * @param {string} catalogName
   *   A fully-qualified path representing Catalog resource.
   * @returns {string} A string representing the location.
   */
  matchLocationFromCatalogName(catalogName: string) {
    return this.pathTemplates.catalogPathTemplate.match(catalogName).location;
  }

  /**
   * Parse the catalog from Catalog resource.
   *
   * @param {string} catalogName
   *   A fully-qualified path representing Catalog resource.
   * @returns {string} A string representing the catalog.
   */
  matchCatalogFromCatalogName(catalogName: string) {
    return this.pathTemplates.catalogPathTemplate.match(catalogName).catalog;
  }

  /**
   * Return a fully-qualified completionConfig resource name string.
   *
   * @param {string} project
   * @param {string} location
   * @param {string} catalog
   * @returns {string} Resource name string.
   */
  completionConfigPath(project: string, location: string, catalog: string) {
    return this.pathTemplates.completionConfigPathTemplate.render({
      project: project,
      location: location,
      catalog: catalog,
    });
  }

  /**
   * Parse the project from CompletionConfig resource.
   *
   * @param {string} completionConfigName
   *   A fully-qualified path representing CompletionConfig resource.
   * @returns {string} A string representing the project.
   */
  matchProjectFromCompletionConfigName(completionConfigName: string) {
    return this.pathTemplates.completionConfigPathTemplate.match(
      completionConfigName
    ).project;
  }

  /**
   * Parse the location from CompletionConfig resource.
   *
   * @param {string} completionConfigName
   *   A fully-qualified path representing CompletionConfig resource.
   * @returns {string} A string representing the location.
   */
  matchLocationFromCompletionConfigName(completionConfigName: string) {
    return this.pathTemplates.completionConfigPathTemplate.match(
      completionConfigName
    ).location;
  }

  /**
   * Parse the catalog from CompletionConfig resource.
   *
   * @param {string} completionConfigName
   *   A fully-qualified path representing CompletionConfig resource.
   * @returns {string} A string representing the catalog.
   */
  matchCatalogFromCompletionConfigName(completionConfigName: string) {
    return this.pathTemplates.completionConfigPathTemplate.match(
      completionConfigName
    ).catalog;
  }

  /**
   * Return a fully-qualified control resource name string.
   *
   * @param {string} project
   * @param {string} location
   * @param {string} catalog
   * @param {string} control
   * @returns {string} Resource name string.
   */
  controlPath(
    project: string,
    location: string,
    catalog: string,
    control: string
  ) {
    return this.pathTemplates.controlPathTemplate.render({
      project: project,
      location: location,
      catalog: catalog,
      control: control,
    });
  }

  /**
   * Parse the project from Control resource.
   *
   * @param {string} controlName
   *   A fully-qualified path representing Control resource.
   * @returns {string} A string representing the project.
   */
  matchProjectFromControlName(controlName: string) {
    return this.pathTemplates.controlPathTemplate.match(controlName).project;
  }

  /**
   * Parse the location from Control resource.
   *
   * @param {string} controlName
   *   A fully-qualified path representing Control resource.
   * @returns {string} A string representing the location.
   */
  matchLocationFromControlName(controlName: string) {
    return this.pathTemplates.controlPathTemplate.match(controlName).location;
  }

  /**
   * Parse the catalog from Control resource.
   *
   * @param {string} controlName
   *   A fully-qualified path representing Control resource.
   * @returns {string} A string representing the catalog.
   */
  matchCatalogFromControlName(controlName: string) {
    return this.pathTemplates.controlPathTemplate.match(controlName).catalog;
  }

  /**
   * Parse the control from Control resource.
   *
   * @param {string} controlName
   *   A fully-qualified path representing Control resource.
   * @returns {string} A string representing the control.
   */
  matchControlFromControlName(controlName: string) {
    return this.pathTemplates.controlPathTemplate.match(controlName).control;
  }

  /**
   * Return a fully-qualified model resource name string.
   *
   * @param {string} project
   * @param {string} location
   * @param {string} catalog
   * @param {string} model
   * @returns {string} Resource name string.
   */
  modelPath(project: string, location: string, catalog: string, model: string) {
    return this.pathTemplates.modelPathTemplate.render({
      project: project,
      location: location,
      catalog: catalog,
      model: model,
    });
  }

  /**
   * Parse the project from Model resource.
   *
   * @param {string} modelName
   *   A fully-qualified path representing Model resource.
   * @returns {string} A string representing the project.
   */
  matchProjectFromModelName(modelName: string) {
    return this.pathTemplates.modelPathTemplate.match(modelName).project;
  }

  /**
   * Parse the location from Model resource.
   *
   * @param {string} modelName
   *   A fully-qualified path representing Model resource.
   * @returns {string} A string representing the location.
   */
  matchLocationFromModelName(modelName: string) {
    return this.pathTemplates.modelPathTemplate.match(modelName).location;
  }

  /**
   * Parse the catalog from Model resource.
   *
   * @param {string} modelName
   *   A fully-qualified path representing Model resource.
   * @returns {string} A string representing the catalog.
   */
  matchCatalogFromModelName(modelName: string) {
    return this.pathTemplates.modelPathTemplate.match(modelName).catalog;
  }

  /**
   * Parse the model from Model resource.
   *
   * @param {string} modelName
   *   A fully-qualified path representing Model resource.
   * @returns {string} A string representing the model.
   */
  matchModelFromModelName(modelName: string) {
    return this.pathTemplates.modelPathTemplate.match(modelName).model;
  }

  /**
   * Return a fully-qualified product resource name string.
   *
   * @param {string} project
   * @param {string} location
   * @param {string} catalog
   * @param {string} branch
   * @param {string} product
   * @returns {string} Resource name string.
   */
  productPath(
    project: string,
    location: string,
    catalog: string,
    branch: string,
    product: string
  ) {
    return this.pathTemplates.productPathTemplate.render({
      project: project,
      location: location,
      catalog: catalog,
      branch: branch,
      product: product,
    });
  }

  /**
   * Parse the project from Product resource.
   *
   * @param {string} productName
   *   A fully-qualified path representing Product resource.
   * @returns {string} A string representing the project.
   */
  matchProjectFromProductName(productName: string) {
    return this.pathTemplates.productPathTemplate.match(productName).project;
  }

  /**
   * Parse the location from Product resource.
   *
   * @param {string} productName
   *   A fully-qualified path representing Product resource.
   * @returns {string} A string representing the location.
   */
  matchLocationFromProductName(productName: string) {
    return this.pathTemplates.productPathTemplate.match(productName).location;
  }

  /**
   * Parse the catalog from Product resource.
   *
   * @param {string} productName
   *   A fully-qualified path representing Product resource.
   * @returns {string} A string representing the catalog.
   */
  matchCatalogFromProductName(productName: string) {
    return this.pathTemplates.productPathTemplate.match(productName).catalog;
  }

  /**
   * Parse the branch from Product resource.
   *
   * @param {string} productName
   *   A fully-qualified path representing Product resource.
   * @returns {string} A string representing the branch.
   */
  matchBranchFromProductName(productName: string) {
    return this.pathTemplates.productPathTemplate.match(productName).branch;
  }

  /**
   * Parse the product from Product resource.
   *
   * @param {string} productName
   *   A fully-qualified path representing Product resource.
   * @returns {string} A string representing the product.
   */
  matchProductFromProductName(productName: string) {
    return this.pathTemplates.productPathTemplate.match(productName).product;
  }

  /**
   * Return a fully-qualified servingConfig resource name string.
   *
   * @param {string} project
   * @param {string} location
   * @param {string} catalog
   * @param {string} serving_config
   * @returns {string} Resource name string.
   */
  servingConfigPath(
    project: string,
    location: string,
    catalog: string,
    servingConfig: string
  ) {
    return this.pathTemplates.servingConfigPathTemplate.render({
      project: project,
      location: location,
      catalog: catalog,
      serving_config: servingConfig,
    });
  }

  /**
   * Parse the project from ServingConfig resource.
   *
   * @param {string} servingConfigName
   *   A fully-qualified path representing ServingConfig resource.
   * @returns {string} A string representing the project.
   */
  matchProjectFromServingConfigName(servingConfigName: string) {
    return this.pathTemplates.servingConfigPathTemplate.match(servingConfigName)
      .project;
  }

  /**
   * Parse the location from ServingConfig resource.
   *
   * @param {string} servingConfigName
   *   A fully-qualified path representing ServingConfig resource.
   * @returns {string} A string representing the location.
   */
  matchLocationFromServingConfigName(servingConfigName: string) {
    return this.pathTemplates.servingConfigPathTemplate.match(servingConfigName)
      .location;
  }

  /**
   * Parse the catalog from ServingConfig resource.
   *
   * @param {string} servingConfigName
   *   A fully-qualified path representing ServingConfig resource.
   * @returns {string} A string representing the catalog.
   */
  matchCatalogFromServingConfigName(servingConfigName: string) {
    return this.pathTemplates.servingConfigPathTemplate.match(servingConfigName)
      .catalog;
  }

  /**
   * Parse the serving_config from ServingConfig resource.
   *
   * @param {string} servingConfigName
   *   A fully-qualified path representing ServingConfig resource.
   * @returns {string} A string representing the serving_config.
   */
  matchServingConfigFromServingConfigName(servingConfigName: string) {
    return this.pathTemplates.servingConfigPathTemplate.match(servingConfigName)
      .serving_config;
  }

  /**
   * Terminate the gRPC channel and close the client.
   *
   * The client will no longer be usable and all future behavior is undefined.
   * @returns {Promise} A promise that resolves when the client is closed.
   */
  close(): Promise<void> {
    if (this.productServiceStub && !this._terminated) {
      return this.productServiceStub.then(stub => {
        this._terminated = true;
        stub.close();
        this.locationsClient.close();
        this.operationsClient.close();
      });
    }
    return Promise.resolve();
  }
}
