{
  "nested": {
    "google": {
      "nested": {
        "cloud": {
          "nested": {
            "bigquery": {
              "nested": {
                "migration": {
                  "nested": {
                    "v2": {
                      "options": {
                        "csharp_namespace": "Google.Cloud.BigQuery.Migration.V2",
                        "go_package": "cloud.google.com/go/bigquery/migration/apiv2/migrationpb;migrationpb",
                        "java_multiple_files": true,
                        "java_outer_classname": "MigrationServiceProto",
                        "java_package": "com.google.cloud.bigquery.migration.v2",
                        "php_namespace": "Google\\Cloud\\BigQuery\\Migration\\V2"
                      },
                      "nested": {
                        "MigrationWorkflow": {
                          "options": {
                            "(google.api.resource).type": "bigquerymigration.googleapis.com/MigrationWorkflow",
                            "(google.api.resource).pattern": "projects/{project}/locations/{location}/workflows/{workflow}"
                          },
                          "fields": {
                            "name": {
                              "type": "string",
                              "id": 1,
                              "options": {
                                "(google.api.field_behavior)": "IMMUTABLE"
                              }
                            },
                            "displayName": {
                              "type": "string",
                              "id": 6
                            },
                            "tasks": {
                              "keyType": "string",
                              "type": "MigrationTask",
                              "id": 2
                            },
                            "state": {
                              "type": "State",
                              "id": 3,
                              "options": {
                                "(google.api.field_behavior)": "OUTPUT_ONLY"
                              }
                            },
                            "createTime": {
                              "type": "google.protobuf.Timestamp",
                              "id": 4
                            },
                            "lastUpdateTime": {
                              "type": "google.protobuf.Timestamp",
                              "id": 5
                            }
                          },
                          "nested": {
                            "State": {
                              "values": {
                                "STATE_UNSPECIFIED": 0,
                                "DRAFT": 1,
                                "RUNNING": 2,
                                "PAUSED": 3,
                                "COMPLETED": 4
                              }
                            }
                          }
                        },
                        "MigrationTask": {
                          "oneofs": {
                            "taskDetails": {
                              "oneof": [
                                "translationConfigDetails"
                              ]
                            }
                          },
                          "fields": {
                            "translationConfigDetails": {
                              "type": "TranslationConfigDetails",
                              "id": 14
                            },
                            "id": {
                              "type": "string",
                              "id": 1,
                              "options": {
                                "(google.api.field_behavior)": "IMMUTABLE"
                              }
                            },
                            "type": {
                              "type": "string",
                              "id": 2
                            },
                            "state": {
                              "type": "State",
                              "id": 4,
                              "options": {
                                "(google.api.field_behavior)": "OUTPUT_ONLY"
                              }
                            },
                            "processingError": {
                              "type": "google.rpc.ErrorInfo",
                              "id": 5,
                              "options": {
                                "(google.api.field_behavior)": "OUTPUT_ONLY"
                              }
                            },
                            "createTime": {
                              "type": "google.protobuf.Timestamp",
                              "id": 6
                            },
                            "lastUpdateTime": {
                              "type": "google.protobuf.Timestamp",
                              "id": 7
                            }
                          },
                          "nested": {
                            "State": {
                              "values": {
                                "STATE_UNSPECIFIED": 0,
                                "PENDING": 1,
                                "ORCHESTRATING": 2,
                                "RUNNING": 3,
                                "PAUSED": 4,
                                "SUCCEEDED": 5,
                                "FAILED": 6
                              }
                            }
                          }
                        },
                        "MigrationSubtask": {
                          "options": {
                            "(google.api.resource).type": "bigquerymigration.googleapis.com/MigrationSubtask",
                            "(google.api.resource).pattern": "projects/{project}/locations/{location}/workflows/{workflow}/subtasks/{subtask}"
                          },
                          "fields": {
                            "name": {
                              "type": "string",
                              "id": 1,
                              "options": {
                                "(google.api.field_behavior)": "IMMUTABLE"
                              }
                            },
                            "taskId": {
                              "type": "string",
                              "id": 2
                            },
                            "type": {
                              "type": "string",
                              "id": 3
                            },
                            "state": {
                              "type": "State",
                              "id": 5,
                              "options": {
                                "(google.api.field_behavior)": "OUTPUT_ONLY"
                              }
                            },
                            "processingError": {
                              "type": "google.rpc.ErrorInfo",
                              "id": 6,
                              "options": {
                                "(google.api.field_behavior)": "OUTPUT_ONLY"
                              }
                            },
                            "resourceErrorDetails": {
                              "rule": "repeated",
                              "type": "ResourceErrorDetail",
                              "id": 12,
                              "options": {
                                "(google.api.field_behavior)": "OUTPUT_ONLY"
                              }
                            },
                            "resourceErrorCount": {
                              "type": "int32",
                              "id": 13
                            },
                            "createTime": {
                              "type": "google.protobuf.Timestamp",
                              "id": 7
                            },
                            "lastUpdateTime": {
                              "type": "google.protobuf.Timestamp",
                              "id": 8
                            },
                            "metrics": {
                              "rule": "repeated",
                              "type": "TimeSeries",
                              "id": 11
                            }
                          },
                          "nested": {
                            "State": {
                              "values": {
                                "STATE_UNSPECIFIED": 0,
                                "ACTIVE": 1,
                                "RUNNING": 2,
                                "SUCCEEDED": 3,
                                "FAILED": 4,
                                "PAUSED": 5,
                                "PENDING_DEPENDENCY": 6
                              }
                            }
                          }
                        },
                        "ResourceErrorDetail": {
                          "fields": {
                            "resourceInfo": {
                              "type": "google.rpc.ResourceInfo",
                              "id": 1,
                              "options": {
                                "(google.api.field_behavior)": "REQUIRED"
                              }
                            },
                            "errorDetails": {
                              "rule": "repeated",
                              "type": "ErrorDetail",
                              "id": 2,
                              "options": {
                                "(google.api.field_behavior)": "REQUIRED"
                              }
                            },
                            "errorCount": {
                              "type": "int32",
                              "id": 3,
                              "options": {
                                "(google.api.field_behavior)": "REQUIRED"
                              }
                            }
                          }
                        },
                        "ErrorDetail": {
                          "fields": {
                            "location": {
                              "type": "ErrorLocation",
                              "id": 1,
                              "options": {
                                "(google.api.field_behavior)": "OPTIONAL"
                              }
                            },
                            "errorInfo": {
                              "type": "google.rpc.ErrorInfo",
                              "id": 2,
                              "options": {
                                "(google.api.field_behavior)": "REQUIRED"
                              }
                            }
                          }
                        },
                        "ErrorLocation": {
                          "fields": {
                            "line": {
                              "type": "int32",
                              "id": 1,
                              "options": {
                                "(google.api.field_behavior)": "OPTIONAL"
                              }
                            },
                            "column": {
                              "type": "int32",
                              "id": 2,
                              "options": {
                                "(google.api.field_behavior)": "OPTIONAL"
                              }
                            }
                          }
                        },
                        "TimeSeries": {
                          "fields": {
                            "metric": {
                              "type": "string",
                              "id": 1,
                              "options": {
                                "(google.api.field_behavior)": "REQUIRED"
                              }
                            },
                            "valueType": {
                              "type": "google.api.MetricDescriptor.ValueType",
                              "id": 2,
                              "options": {
                                "(google.api.field_behavior)": "REQUIRED"
                              }
                            },
                            "metricKind": {
                              "type": "google.api.MetricDescriptor.MetricKind",
                              "id": 3,
                              "options": {
                                "(google.api.field_behavior)": "OPTIONAL"
                              }
                            },
                            "points": {
                              "rule": "repeated",
                              "type": "Point",
                              "id": 4,
                              "options": {
                                "(google.api.field_behavior)": "REQUIRED"
                              }
                            }
                          }
                        },
                        "Point": {
                          "fields": {
                            "interval": {
                              "type": "TimeInterval",
                              "id": 1
                            },
                            "value": {
                              "type": "TypedValue",
                              "id": 2
                            }
                          }
                        },
                        "TimeInterval": {
                          "fields": {
                            "startTime": {
                              "type": "google.protobuf.Timestamp",
                              "id": 1,
                              "options": {
                                "(google.api.field_behavior)": "OPTIONAL"
                              }
                            },
                            "endTime": {
                              "type": "google.protobuf.Timestamp",
                              "id": 2,
                              "options": {
                                "(google.api.field_behavior)": "REQUIRED"
                              }
                            }
                          }
                        },
                        "TypedValue": {
                          "oneofs": {
                            "value": {
                              "oneof": [
                                "boolValue",
                                "int64Value",
                                "doubleValue",
                                "stringValue",
                                "distributionValue"
                              ]
                            }
                          },
                          "fields": {
                            "boolValue": {
                              "type": "bool",
                              "id": 1
                            },
                            "int64Value": {
                              "type": "int64",
                              "id": 2
                            },
                            "doubleValue": {
                              "type": "double",
                              "id": 3
                            },
                            "stringValue": {
                              "type": "string",
                              "id": 4
                            },
                            "distributionValue": {
                              "type": "google.api.Distribution",
                              "id": 5
                            }
                          }
                        },
                        "TranslationConfigDetails": {
                          "oneofs": {
                            "sourceLocation": {
                              "oneof": [
                                "gcsSourcePath"
                              ]
                            },
                            "targetLocation": {
                              "oneof": [
                                "gcsTargetPath"
                              ]
                            },
                            "outputNameMapping": {
                              "oneof": [
                                "nameMappingList"
                              ]
                            }
                          },
                          "fields": {
                            "gcsSourcePath": {
                              "type": "string",
                              "id": 1
                            },
                            "gcsTargetPath": {
                              "type": "string",
                              "id": 2
                            },
                            "nameMappingList": {
                              "type": "ObjectNameMappingList",
                              "id": 5
                            },
                            "sourceDialect": {
                              "type": "Dialect",
                              "id": 3
                            },
                            "targetDialect": {
                              "type": "Dialect",
                              "id": 4
                            },
                            "sourceEnv": {
                              "type": "SourceEnv",
                              "id": 6
                            },
                            "requestSource": {
                              "type": "string",
                              "id": 8
                            }
                          }
                        },
                        "Dialect": {
                          "oneofs": {
                            "dialectValue": {
                              "oneof": [
                                "bigqueryDialect",
                                "hiveqlDialect",
                                "redshiftDialect",
                                "teradataDialect",
                                "oracleDialect",
                                "sparksqlDialect",
                                "snowflakeDialect",
                                "netezzaDialect",
                                "azureSynapseDialect",
                                "verticaDialect",
                                "sqlServerDialect",
                                "postgresqlDialect",
                                "prestoDialect",
                                "mysqlDialect"
                              ]
                            }
                          },
                          "fields": {
                            "bigqueryDialect": {
                              "type": "BigQueryDialect",
                              "id": 1
                            },
                            "hiveqlDialect": {
                              "type": "HiveQLDialect",
                              "id": 2
                            },
                            "redshiftDialect": {
                              "type": "RedshiftDialect",
                              "id": 3
                            },
                            "teradataDialect": {
                              "type": "TeradataDialect",
                              "id": 4
                            },
                            "oracleDialect": {
                              "type": "OracleDialect",
                              "id": 5
                            },
                            "sparksqlDialect": {
                              "type": "SparkSQLDialect",
                              "id": 6
                            },
                            "snowflakeDialect": {
                              "type": "SnowflakeDialect",
                              "id": 7
                            },
                            "netezzaDialect": {
                              "type": "NetezzaDialect",
                              "id": 8
                            },
                            "azureSynapseDialect": {
                              "type": "AzureSynapseDialect",
                              "id": 9
                            },
                            "verticaDialect": {
                              "type": "VerticaDialect",
                              "id": 10
                            },
                            "sqlServerDialect": {
                              "type": "SQLServerDialect",
                              "id": 11
                            },
                            "postgresqlDialect": {
                              "type": "PostgresqlDialect",
                              "id": 12
                            },
                            "prestoDialect": {
                              "type": "PrestoDialect",
                              "id": 13
                            },
                            "mysqlDialect": {
                              "type": "MySQLDialect",
                              "id": 14
                            }
                          }
                        },
                        "BigQueryDialect": {
                          "fields": {}
                        },
                        "HiveQLDialect": {
                          "fields": {}
                        },
                        "RedshiftDialect": {
                          "fields": {}
                        },
                        "TeradataDialect": {
                          "fields": {
                            "mode": {
                              "type": "Mode",
                              "id": 1
                            }
                          },
                          "nested": {
                            "Mode": {
                              "values": {
                                "MODE_UNSPECIFIED": 0,
                                "SQL": 1,
                                "BTEQ": 2
                              }
                            }
                          }
                        },
                        "OracleDialect": {
                          "fields": {}
                        },
                        "SparkSQLDialect": {
                          "fields": {}
                        },
                        "SnowflakeDialect": {
                          "fields": {}
                        },
                        "NetezzaDialect": {
                          "fields": {}
                        },
                        "AzureSynapseDialect": {
                          "fields": {}
                        },
                        "VerticaDialect": {
                          "fields": {}
                        },
                        "SQLServerDialect": {
                          "fields": {}
                        },
                        "PostgresqlDialect": {
                          "fields": {}
                        },
                        "PrestoDialect": {
                          "fields": {}
                        },
                        "MySQLDialect": {
                          "fields": {}
                        },
                        "ObjectNameMappingList": {
                          "fields": {
                            "nameMap": {
                              "rule": "repeated",
                              "type": "ObjectNameMapping",
                              "id": 1
                            }
                          }
                        },
                        "ObjectNameMapping": {
                          "fields": {
                            "source": {
                              "type": "NameMappingKey",
                              "id": 1
                            },
                            "target": {
                              "type": "NameMappingValue",
                              "id": 2
                            }
                          }
                        },
                        "NameMappingKey": {
                          "fields": {
                            "type": {
                              "type": "Type",
                              "id": 1
                            },
                            "database": {
                              "type": "string",
                              "id": 2
                            },
                            "schema": {
                              "type": "string",
                              "id": 3
                            },
                            "relation": {
                              "type": "string",
                              "id": 4
                            },
                            "attribute": {
                              "type": "string",
                              "id": 5
                            }
                          },
                          "nested": {
                            "Type": {
                              "values": {
                                "TYPE_UNSPECIFIED": 0,
                                "DATABASE": 1,
                                "SCHEMA": 2,
                                "RELATION": 3,
                                "ATTRIBUTE": 4,
                                "RELATION_ALIAS": 5,
                                "ATTRIBUTE_ALIAS": 6,
                                "FUNCTION": 7
                              }
                            }
                          }
                        },
                        "NameMappingValue": {
                          "fields": {
                            "database": {
                              "type": "string",
                              "id": 1
                            },
                            "schema": {
                              "type": "string",
                              "id": 2
                            },
                            "relation": {
                              "type": "string",
                              "id": 3
                            },
                            "attribute": {
                              "type": "string",
                              "id": 4
                            }
                          }
                        },
                        "SourceEnv": {
                          "fields": {
                            "defaultDatabase": {
                              "type": "string",
                              "id": 1
                            },
                            "schemaSearchPath": {
                              "rule": "repeated",
                              "type": "string",
                              "id": 2
                            }
                          }
                        },
                        "MigrationService": {
                          "options": {
                            "(google.api.default_host)": "bigquerymigration.googleapis.com",
                            "(google.api.oauth_scopes)": "https://www.googleapis.com/auth/cloud-platform"
                          },
                          "methods": {
                            "CreateMigrationWorkflow": {
                              "requestType": "CreateMigrationWorkflowRequest",
                              "responseType": "MigrationWorkflow",
                              "options": {
                                "(google.api.http).post": "/v2/{parent=projects/*/locations/*}/workflows",
                                "(google.api.http).body": "migration_workflow",
                                "(google.api.method_signature)": "parent,migration_workflow"
                              },
                              "parsedOptions": [
                                {
                                  "(google.api.http)": {
                                    "post": "/v2/{parent=projects/*/locations/*}/workflows",
                                    "body": "migration_workflow"
                                  }
                                },
                                {
                                  "(google.api.method_signature)": "parent,migration_workflow"
                                }
                              ]
                            },
                            "GetMigrationWorkflow": {
                              "requestType": "GetMigrationWorkflowRequest",
                              "responseType": "MigrationWorkflow",
                              "options": {
                                "(google.api.http).get": "/v2/{name=projects/*/locations/*/workflows/*}",
                                "(google.api.method_signature)": "name"
                              },
                              "parsedOptions": [
                                {
                                  "(google.api.http)": {
                                    "get": "/v2/{name=projects/*/locations/*/workflows/*}"
                                  }
                                },
                                {
                                  "(google.api.method_signature)": "name"
                                }
                              ]
                            },
                            "ListMigrationWorkflows": {
                              "requestType": "ListMigrationWorkflowsRequest",
                              "responseType": "ListMigrationWorkflowsResponse",
                              "options": {
                                "(google.api.http).get": "/v2/{parent=projects/*/locations/*}/workflows",
                                "(google.api.method_signature)": "parent"
                              },
                              "parsedOptions": [
                                {
                                  "(google.api.http)": {
                                    "get": "/v2/{parent=projects/*/locations/*}/workflows"
                                  }
                                },
                                {
                                  "(google.api.method_signature)": "parent"
                                }
                              ]
                            },
                            "DeleteMigrationWorkflow": {
                              "requestType": "DeleteMigrationWorkflowRequest",
                              "responseType": "google.protobuf.Empty",
                              "options": {
                                "(google.api.http).delete": "/v2/{name=projects/*/locations/*/workflows/*}",
                                "(google.api.method_signature)": "name"
                              },
                              "parsedOptions": [
                                {
                                  "(google.api.http)": {
                                    "delete": "/v2/{name=projects/*/locations/*/workflows/*}"
                                  }
                                },
                                {
                                  "(google.api.method_signature)": "name"
                                }
                              ]
                            },
                            "StartMigrationWorkflow": {
                              "requestType": "StartMigrationWorkflowRequest",
                              "responseType": "google.protobuf.Empty",
                              "options": {
                                "(google.api.http).post": "/v2/{name=projects/*/locations/*/workflows/*}:start",
                                "(google.api.http).body": "*",
                                "(google.api.method_signature)": "name"
                              },
                              "parsedOptions": [
                                {
                                  "(google.api.http)": {
                                    "post": "/v2/{name=projects/*/locations/*/workflows/*}:start",
                                    "body": "*"
                                  }
                                },
                                {
                                  "(google.api.method_signature)": "name"
                                }
                              ]
                            },
                            "GetMigrationSubtask": {
                              "requestType": "GetMigrationSubtaskRequest",
                              "responseType": "MigrationSubtask",
                              "options": {
                                "(google.api.http).get": "/v2/{name=projects/*/locations/*/workflows/*/subtasks/*}",
                                "(google.api.method_signature)": "name"
                              },
                              "parsedOptions": [
                                {
                                  "(google.api.http)": {
                                    "get": "/v2/{name=projects/*/locations/*/workflows/*/subtasks/*}"
                                  }
                                },
                                {
                                  "(google.api.method_signature)": "name"
                                }
                              ]
                            },
                            "ListMigrationSubtasks": {
                              "requestType": "ListMigrationSubtasksRequest",
                              "responseType": "ListMigrationSubtasksResponse",
                              "options": {
                                "(google.api.http).get": "/v2/{parent=projects/*/locations/*/workflows/*}/subtasks",
                                "(google.api.method_signature)": "parent"
                              },
                              "parsedOptions": [
                                {
                                  "(google.api.http)": {
                                    "get": "/v2/{parent=projects/*/locations/*/workflows/*}/subtasks"
                                  }
                                },
                                {
                                  "(google.api.method_signature)": "parent"
                                }
                              ]
                            }
                          }
                        },
                        "CreateMigrationWorkflowRequest": {
                          "fields": {
                            "parent": {
                              "type": "string",
                              "id": 1,
                              "options": {
                                "(google.api.field_behavior)": "REQUIRED",
                                "(google.api.resource_reference).type": "locations.googleapis.com/Location"
                              }
                            },
                            "migrationWorkflow": {
                              "type": "MigrationWorkflow",
                              "id": 2,
                              "options": {
                                "(google.api.field_behavior)": "REQUIRED"
                              }
                            }
                          }
                        },
                        "GetMigrationWorkflowRequest": {
                          "fields": {
                            "name": {
                              "type": "string",
                              "id": 1,
                              "options": {
                                "(google.api.field_behavior)": "REQUIRED",
                                "(google.api.resource_reference).type": "bigquerymigration.googleapis.com/MigrationWorkflow"
                              }
                            },
                            "readMask": {
                              "type": "google.protobuf.FieldMask",
                              "id": 2
                            }
                          }
                        },
                        "ListMigrationWorkflowsRequest": {
                          "fields": {
                            "parent": {
                              "type": "string",
                              "id": 1,
                              "options": {
                                "(google.api.field_behavior)": "REQUIRED",
                                "(google.api.resource_reference).type": "locations.googleapis.com/Location"
                              }
                            },
                            "readMask": {
                              "type": "google.protobuf.FieldMask",
                              "id": 2
                            },
                            "pageSize": {
                              "type": "int32",
                              "id": 3
                            },
                            "pageToken": {
                              "type": "string",
                              "id": 4
                            }
                          }
                        },
                        "ListMigrationWorkflowsResponse": {
                          "fields": {
                            "migrationWorkflows": {
                              "rule": "repeated",
                              "type": "MigrationWorkflow",
                              "id": 1
                            },
                            "nextPageToken": {
                              "type": "string",
                              "id": 2
                            }
                          }
                        },
                        "DeleteMigrationWorkflowRequest": {
                          "fields": {
                            "name": {
                              "type": "string",
                              "id": 1,
                              "options": {
                                "(google.api.field_behavior)": "REQUIRED",
                                "(google.api.resource_reference).type": "bigquerymigration.googleapis.com/MigrationWorkflow"
                              }
                            }
                          }
                        },
                        "StartMigrationWorkflowRequest": {
                          "fields": {
                            "name": {
                              "type": "string",
                              "id": 1,
                              "options": {
                                "(google.api.field_behavior)": "REQUIRED",
                                "(google.api.resource_reference).type": "bigquerymigration.googleapis.com/MigrationWorkflow"
                              }
                            }
                          }
                        },
                        "GetMigrationSubtaskRequest": {
                          "fields": {
                            "name": {
                              "type": "string",
                              "id": 1,
                              "options": {
                                "(google.api.field_behavior)": "REQUIRED",
                                "(google.api.resource_reference).type": "bigquerymigration.googleapis.com/MigrationSubtask"
                              }
                            },
                            "readMask": {
                              "type": "google.protobuf.FieldMask",
                              "id": 2,
                              "options": {
                                "(google.api.field_behavior)": "OPTIONAL"
                              }
                            }
                          }
                        },
                        "ListMigrationSubtasksRequest": {
                          "fields": {
                            "parent": {
                              "type": "string",
                              "id": 1,
                              "options": {
                                "(google.api.field_behavior)": "REQUIRED",
                                "(google.api.resource_reference).type": "bigquerymigration.googleapis.com/MigrationWorkflow"
                              }
                            },
                            "readMask": {
                              "type": "google.protobuf.FieldMask",
                              "id": 2,
                              "options": {
                                "(google.api.field_behavior)": "OPTIONAL"
                              }
                            },
                            "pageSize": {
                              "type": "int32",
                              "id": 3,
                              "options": {
                                "(google.api.field_behavior)": "OPTIONAL"
                              }
                            },
                            "pageToken": {
                              "type": "string",
                              "id": 4,
                              "options": {
                                "(google.api.field_behavior)": "OPTIONAL"
                              }
                            },
                            "filter": {
                              "type": "string",
                              "id": 5,
                              "options": {
                                "(google.api.field_behavior)": "OPTIONAL"
                              }
                            }
                          }
                        },
                        "ListMigrationSubtasksResponse": {
                          "fields": {
                            "migrationSubtasks": {
                              "rule": "repeated",
                              "type": "MigrationSubtask",
                              "id": 1
                            },
                            "nextPageToken": {
                              "type": "string",
                              "id": 2
                            }
                          }
                        }
                      }
                    },
                    "v2alpha": {
                      "options": {
                        "csharp_namespace": "Google.Cloud.BigQuery.Migration.V2Alpha",
                        "go_package": "cloud.google.com/go/bigquery/migration/apiv2alpha/migrationpb;migrationpb",
                        "java_multiple_files": true,
                        "java_outer_classname": "TranslationServiceProto",
                        "java_package": "com.google.cloud.bigquery.migration.v2alpha",
                        "php_namespace": "Google\\Cloud\\BigQuery\\Migration\\V2alpha"
                      },
                      "nested": {
                        "AssessmentTaskDetails": {
                          "fields": {
                            "inputPath": {
                              "type": "string",
                              "id": 1,
                              "options": {
                                "(google.api.field_behavior)": "REQUIRED"
                              }
                            },
                            "outputDataset": {
                              "type": "string",
                              "id": 2,
                              "options": {
                                "(google.api.field_behavior)": "REQUIRED"
                              }
                            },
                            "querylogsPath": {
                              "type": "string",
                              "id": 3,
                              "options": {
                                "(google.api.field_behavior)": "OPTIONAL"
                              }
                            },
                            "dataSource": {
                              "type": "string",
                              "id": 4,
                              "options": {
                                "(google.api.field_behavior)": "REQUIRED"
                              }
                            }
                          }
                        },
                        "AssessmentOrchestrationResultDetails": {
                          "fields": {
                            "outputTablesSchemaVersion": {
                              "type": "string",
                              "id": 1,
                              "options": {
                                "(google.api.field_behavior)": "OPTIONAL"
                              }
                            }
                          }
                        },
                        "MigrationWorkflow": {
                          "options": {
                            "(google.api.resource).type": "bigquerymigration.googleapis.com/MigrationWorkflow",
                            "(google.api.resource).pattern": "projects/{project}/locations/{location}/workflows/{workflow}"
                          },
                          "fields": {
                            "name": {
                              "type": "string",
                              "id": 1,
                              "options": {
                                "(google.api.field_behavior)": "IMMUTABLE"
                              }
                            },
                            "displayName": {
                              "type": "string",
                              "id": 6
                            },
                            "tasks": {
                              "keyType": "string",
                              "type": "MigrationTask",
                              "id": 2
                            },
                            "state": {
                              "type": "State",
                              "id": 3,
                              "options": {
                                "(google.api.field_behavior)": "OUTPUT_ONLY"
                              }
                            },
                            "createTime": {
                              "type": "google.protobuf.Timestamp",
                              "id": 4
                            },
                            "lastUpdateTime": {
                              "type": "google.protobuf.Timestamp",
                              "id": 5
                            }
                          },
                          "nested": {
                            "State": {
                              "values": {
                                "STATE_UNSPECIFIED": 0,
                                "DRAFT": 1,
                                "RUNNING": 2,
                                "PAUSED": 3,
                                "COMPLETED": 4
                              }
                            }
                          }
                        },
                        "MigrationTask": {
                          "oneofs": {
                            "taskDetails": {
                              "oneof": [
                                "assessmentTaskDetails",
                                "translationTaskDetails"
                              ]
                            }
                          },
                          "fields": {
                            "assessmentTaskDetails": {
                              "type": "AssessmentTaskDetails",
                              "id": 12
                            },
                            "translationTaskDetails": {
                              "type": "TranslationTaskDetails",
                              "id": 13
                            },
                            "id": {
                              "type": "string",
                              "id": 1,
                              "options": {
                                "(google.api.field_behavior)": "IMMUTABLE"
                              }
                            },
                            "type": {
                              "type": "string",
                              "id": 2
                            },
                            "details": {
                              "type": "google.protobuf.Any",
                              "id": 3
                            },
                            "state": {
                              "type": "State",
                              "id": 4,
                              "options": {
                                "(google.api.field_behavior)": "OUTPUT_ONLY"
                              }
                            },
                            "processingError": {
                              "type": "google.rpc.ErrorInfo",
                              "id": 5,
                              "options": {
                                "(google.api.field_behavior)": "OUTPUT_ONLY"
                              }
                            },
                            "createTime": {
                              "type": "google.protobuf.Timestamp",
                              "id": 6
                            },
                            "lastUpdateTime": {
                              "type": "google.protobuf.Timestamp",
                              "id": 7
                            },
                            "orchestrationResult": {
                              "type": "MigrationTaskOrchestrationResult",
                              "id": 10,
                              "options": {
                                "(google.api.field_behavior)": "OUTPUT_ONLY"
                              }
                            }
                          },
                          "nested": {
                            "State": {
                              "values": {
                                "STATE_UNSPECIFIED": 0,
                                "PENDING": 1,
                                "ORCHESTRATING": 2,
                                "RUNNING": 3,
                                "PAUSED": 4,
                                "SUCCEEDED": 5,
                                "FAILED": 6
                              }
                            }
                          }
                        },
                        "MigrationSubtask": {
                          "options": {
                            "(google.api.resource).type": "bigquerymigration.googleapis.com/MigrationSubtask",
                            "(google.api.resource).pattern": "projects/{project}/locations/{location}/workflows/{workflow}/subtasks/{subtask}"
                          },
                          "fields": {
                            "name": {
                              "type": "string",
                              "id": 1,
                              "options": {
                                "(google.api.field_behavior)": "IMMUTABLE"
                              }
                            },
                            "taskId": {
                              "type": "string",
                              "id": 2
                            },
                            "type": {
                              "type": "string",
                              "id": 3
                            },
                            "state": {
                              "type": "State",
                              "id": 5,
                              "options": {
                                "(google.api.field_behavior)": "OUTPUT_ONLY"
                              }
                            },
                            "processingError": {
                              "type": "google.rpc.ErrorInfo",
                              "id": 6,
                              "options": {
                                "(google.api.field_behavior)": "OUTPUT_ONLY"
                              }
                            },
                            "resourceErrorDetails": {
                              "rule": "repeated",
                              "type": "ResourceErrorDetail",
                              "id": 12,
                              "options": {
                                "(google.api.field_behavior)": "OUTPUT_ONLY"
                              }
                            },
                            "resourceErrorCount": {
                              "type": "int32",
                              "id": 13
                            },
                            "createTime": {
                              "type": "google.protobuf.Timestamp",
                              "id": 7
                            },
                            "lastUpdateTime": {
                              "type": "google.protobuf.Timestamp",
                              "id": 8
                            },
                            "metrics": {
                              "rule": "repeated",
                              "type": "TimeSeries",
                              "id": 11
                            }
                          },
                          "nested": {
                            "State": {
                              "values": {
                                "STATE_UNSPECIFIED": 0,
                                "ACTIVE": 1,
                                "RUNNING": 2,
                                "SUCCEEDED": 3,
                                "FAILED": 4,
                                "PAUSED": 5
                              }
                            }
                          }
                        },
                        "MigrationTaskOrchestrationResult": {
                          "oneofs": {
                            "details": {
                              "oneof": [
                                "assessmentDetails"
                              ]
                            }
                          },
                          "fields": {
                            "assessmentDetails": {
                              "type": "AssessmentOrchestrationResultDetails",
                              "id": 1
                            }
                          }
                        },
                        "ResourceErrorDetail": {
                          "fields": {
                            "resourceInfo": {
                              "type": "google.rpc.ResourceInfo",
                              "id": 1,
                              "options": {
                                "(google.api.field_behavior)": "REQUIRED"
                              }
                            },
                            "errorDetails": {
                              "rule": "repeated",
                              "type": "ErrorDetail",
                              "id": 2,
                              "options": {
                                "(google.api.field_behavior)": "REQUIRED"
                              }
                            },
                            "errorCount": {
                              "type": "int32",
                              "id": 3,
                              "options": {
                                "(google.api.field_behavior)": "REQUIRED"
                              }
                            }
                          }
                        },
                        "ErrorDetail": {
                          "fields": {
                            "location": {
                              "type": "ErrorLocation",
                              "id": 1,
                              "options": {
                                "(google.api.field_behavior)": "OPTIONAL"
                              }
                            },
                            "errorInfo": {
                              "type": "google.rpc.ErrorInfo",
                              "id": 2,
                              "options": {
                                "(google.api.field_behavior)": "REQUIRED"
                              }
                            }
                          }
                        },
                        "ErrorLocation": {
                          "fields": {
                            "line": {
                              "type": "int32",
                              "id": 1,
                              "options": {
                                "(google.api.field_behavior)": "OPTIONAL"
                              }
                            },
                            "column": {
                              "type": "int32",
                              "id": 2,
                              "options": {
                                "(google.api.field_behavior)": "OPTIONAL"
                              }
                            }
                          }
                        },
                        "TimeSeries": {
                          "fields": {
                            "metric": {
                              "type": "string",
                              "id": 1,
                              "options": {
                                "(google.api.field_behavior)": "REQUIRED"
                              }
                            },
                            "valueType": {
                              "type": "google.api.MetricDescriptor.ValueType",
                              "id": 2,
                              "options": {
                                "(google.api.field_behavior)": "REQUIRED"
                              }
                            },
                            "metricKind": {
                              "type": "google.api.MetricDescriptor.MetricKind",
                              "id": 3,
                              "options": {
                                "(google.api.field_behavior)": "OPTIONAL"
                              }
                            },
                            "points": {
                              "rule": "repeated",
                              "type": "Point",
                              "id": 4,
                              "options": {
                                "(google.api.field_behavior)": "REQUIRED"
                              }
                            }
                          }
                        },
                        "Point": {
                          "fields": {
                            "interval": {
                              "type": "TimeInterval",
                              "id": 1
                            },
                            "value": {
                              "type": "TypedValue",
                              "id": 2
                            }
                          }
                        },
                        "TimeInterval": {
                          "fields": {
                            "startTime": {
                              "type": "google.protobuf.Timestamp",
                              "id": 1,
                              "options": {
                                "(google.api.field_behavior)": "OPTIONAL"
                              }
                            },
                            "endTime": {
                              "type": "google.protobuf.Timestamp",
                              "id": 2,
                              "options": {
                                "(google.api.field_behavior)": "REQUIRED"
                              }
                            }
                          }
                        },
                        "TypedValue": {
                          "oneofs": {
                            "value": {
                              "oneof": [
                                "boolValue",
                                "int64Value",
                                "doubleValue",
                                "stringValue",
                                "distributionValue"
                              ]
                            }
                          },
                          "fields": {
                            "boolValue": {
                              "type": "bool",
                              "id": 1
                            },
                            "int64Value": {
                              "type": "int64",
                              "id": 2
                            },
                            "doubleValue": {
                              "type": "double",
                              "id": 3
                            },
                            "stringValue": {
                              "type": "string",
                              "id": 4
                            },
                            "distributionValue": {
                              "type": "google.api.Distribution",
                              "id": 5
                            }
                          }
                        },
                        "TranslationFileMapping": {
                          "fields": {
                            "inputPath": {
                              "type": "string",
                              "id": 1
                            },
                            "outputPath": {
                              "type": "string",
                              "id": 2
                            }
                          }
                        },
                        "TranslationTaskDetails": {
                          "oneofs": {
                            "languageOptions": {
                              "oneof": [
                                "teradataOptions",
                                "bteqOptions"
                              ]
                            }
                          },
                          "fields": {
                            "teradataOptions": {
                              "type": "TeradataOptions",
                              "id": 10
                            },
                            "bteqOptions": {
                              "type": "BteqOptions",
                              "id": 11
                            },
                            "inputPath": {
                              "type": "string",
                              "id": 1
                            },
                            "outputPath": {
                              "type": "string",
                              "id": 2
                            },
                            "filePaths": {
                              "rule": "repeated",
                              "type": "TranslationFileMapping",
                              "id": 12
                            },
                            "schemaPath": {
                              "type": "string",
                              "id": 3
                            },
                            "fileEncoding": {
                              "type": "FileEncoding",
                              "id": 4
                            },
                            "identifierSettings": {
                              "type": "IdentifierSettings",
                              "id": 5
                            },
                            "specialTokenMap": {
                              "keyType": "string",
                              "type": "TokenType",
                              "id": 6
                            },
                            "filter": {
                              "type": "Filter",
                              "id": 7
                            },
                            "translationExceptionTable": {
                              "type": "string",
                              "id": 13
                            }
                          },
                          "nested": {
                            "FileEncoding": {
                              "values": {
                                "FILE_ENCODING_UNSPECIFIED": 0,
                                "UTF_8": 1,
                                "ISO_8859_1": 2,
                                "US_ASCII": 3,
                                "UTF_16": 4,
                                "UTF_16LE": 5,
                                "UTF_16BE": 6
                              }
                            },
                            "TokenType": {
                              "values": {
                                "TOKEN_TYPE_UNSPECIFIED": 0,
                                "STRING": 1,
                                "INT64": 2,
                                "NUMERIC": 3,
                                "BOOL": 4,
                                "FLOAT64": 5,
                                "DATE": 6,
                                "TIMESTAMP": 7
                              }
                            }
                          }
                        },
                        "Filter": {
                          "fields": {
                            "inputFileExclusionPrefixes": {
                              "rule": "repeated",
                              "type": "string",
                              "id": 1
                            }
                          }
                        },
                        "IdentifierSettings": {
                          "fields": {
                            "outputIdentifierCase": {
                              "type": "IdentifierCase",
                              "id": 1
                            },
                            "identifierRewriteMode": {
                              "type": "IdentifierRewriteMode",
                              "id": 2
                            }
                          },
                          "nested": {
                            "IdentifierCase": {
                              "values": {
                                "IDENTIFIER_CASE_UNSPECIFIED": 0,
                                "ORIGINAL": 1,
                                "UPPER": 2,
                                "LOWER": 3
                              }
                            },
                            "IdentifierRewriteMode": {
                              "values": {
                                "IDENTIFIER_REWRITE_MODE_UNSPECIFIED": 0,
                                "NONE": 1,
                                "REWRITE_ALL": 2
                              }
                            }
                          }
                        },
                        "TeradataOptions": {
                          "fields": {}
                        },
                        "BteqOptions": {
                          "fields": {
                            "projectDataset": {
                              "type": "DatasetReference",
                              "id": 1
                            },
                            "defaultPathUri": {
                              "type": "string",
                              "id": 2
                            },
                            "fileReplacementMap": {
                              "keyType": "string",
                              "type": "string",
                              "id": 3
                            }
                          }
                        },
                        "DatasetReference": {
                          "fields": {
                            "datasetId": {
                              "type": "string",
                              "id": 1
                            },
                            "projectId": {
                              "type": "string",
                              "id": 2
                            }
                          }
                        },
                        "MigrationService": {
                          "options": {
                            "(google.api.default_host)": "bigquerymigration.googleapis.com",
                            "(google.api.oauth_scopes)": "https://www.googleapis.com/auth/cloud-platform"
                          },
                          "methods": {
                            "CreateMigrationWorkflow": {
                              "requestType": "CreateMigrationWorkflowRequest",
                              "responseType": "MigrationWorkflow",
                              "options": {
                                "(google.api.http).post": "/v2alpha/{parent=projects/*/locations/*}/workflows",
                                "(google.api.http).body": "migration_workflow",
                                "(google.api.method_signature)": "parent,migration_workflow"
                              },
                              "parsedOptions": [
                                {
                                  "(google.api.http)": {
                                    "post": "/v2alpha/{parent=projects/*/locations/*}/workflows",
                                    "body": "migration_workflow"
                                  }
                                },
                                {
                                  "(google.api.method_signature)": "parent,migration_workflow"
                                }
                              ]
                            },
                            "GetMigrationWorkflow": {
                              "requestType": "GetMigrationWorkflowRequest",
                              "responseType": "MigrationWorkflow",
                              "options": {
                                "(google.api.http).get": "/v2alpha/{name=projects/*/locations/*/workflows/*}",
                                "(google.api.method_signature)": "name"
                              },
                              "parsedOptions": [
                                {
                                  "(google.api.http)": {
                                    "get": "/v2alpha/{name=projects/*/locations/*/workflows/*}"
                                  }
                                },
                                {
                                  "(google.api.method_signature)": "name"
                                }
                              ]
                            },
                            "ListMigrationWorkflows": {
                              "requestType": "ListMigrationWorkflowsRequest",
                              "responseType": "ListMigrationWorkflowsResponse",
                              "options": {
                                "(google.api.http).get": "/v2alpha/{parent=projects/*/locations/*}/workflows",
                                "(google.api.method_signature)": "parent"
                              },
                              "parsedOptions": [
                                {
                                  "(google.api.http)": {
                                    "get": "/v2alpha/{parent=projects/*/locations/*}/workflows"
                                  }
                                },
                                {
                                  "(google.api.method_signature)": "parent"
                                }
                              ]
                            },
                            "DeleteMigrationWorkflow": {
                              "requestType": "DeleteMigrationWorkflowRequest",
                              "responseType": "google.protobuf.Empty",
                              "options": {
                                "(google.api.http).delete": "/v2alpha/{name=projects/*/locations/*/workflows/*}",
                                "(google.api.method_signature)": "name"
                              },
                              "parsedOptions": [
                                {
                                  "(google.api.http)": {
                                    "delete": "/v2alpha/{name=projects/*/locations/*/workflows/*}"
                                  }
                                },
                                {
                                  "(google.api.method_signature)": "name"
                                }
                              ]
                            },
                            "StartMigrationWorkflow": {
                              "requestType": "StartMigrationWorkflowRequest",
                              "responseType": "google.protobuf.Empty",
                              "options": {
                                "(google.api.http).post": "/v2alpha/{name=projects/*/locations/*/workflows/*}:start",
                                "(google.api.http).body": "*",
                                "(google.api.method_signature)": "name"
                              },
                              "parsedOptions": [
                                {
                                  "(google.api.http)": {
                                    "post": "/v2alpha/{name=projects/*/locations/*/workflows/*}:start",
                                    "body": "*"
                                  }
                                },
                                {
                                  "(google.api.method_signature)": "name"
                                }
                              ]
                            },
                            "GetMigrationSubtask": {
                              "requestType": "GetMigrationSubtaskRequest",
                              "responseType": "MigrationSubtask",
                              "options": {
                                "(google.api.http).get": "/v2alpha/{name=projects/*/locations/*/workflows/*/subtasks/*}",
                                "(google.api.method_signature)": "name"
                              },
                              "parsedOptions": [
                                {
                                  "(google.api.http)": {
                                    "get": "/v2alpha/{name=projects/*/locations/*/workflows/*/subtasks/*}"
                                  }
                                },
                                {
                                  "(google.api.method_signature)": "name"
                                }
                              ]
                            },
                            "ListMigrationSubtasks": {
                              "requestType": "ListMigrationSubtasksRequest",
                              "responseType": "ListMigrationSubtasksResponse",
                              "options": {
                                "(google.api.http).get": "/v2alpha/{parent=projects/*/locations/*/workflows/*}/subtasks",
                                "(google.api.method_signature)": "parent"
                              },
                              "parsedOptions": [
                                {
                                  "(google.api.http)": {
                                    "get": "/v2alpha/{parent=projects/*/locations/*/workflows/*}/subtasks"
                                  }
                                },
                                {
                                  "(google.api.method_signature)": "parent"
                                }
                              ]
                            }
                          }
                        },
                        "CreateMigrationWorkflowRequest": {
                          "fields": {
                            "parent": {
                              "type": "string",
                              "id": 1,
                              "options": {
                                "(google.api.field_behavior)": "REQUIRED",
                                "(google.api.resource_reference).type": "locations.googleapis.com/Location"
                              }
                            },
                            "migrationWorkflow": {
                              "type": "MigrationWorkflow",
                              "id": 2,
                              "options": {
                                "(google.api.field_behavior)": "REQUIRED"
                              }
                            }
                          }
                        },
                        "GetMigrationWorkflowRequest": {
                          "fields": {
                            "name": {
                              "type": "string",
                              "id": 1,
                              "options": {
                                "(google.api.field_behavior)": "REQUIRED",
                                "(google.api.resource_reference).type": "bigquerymigration.googleapis.com/MigrationWorkflow"
                              }
                            },
                            "readMask": {
                              "type": "google.protobuf.FieldMask",
                              "id": 2
                            }
                          }
                        },
                        "ListMigrationWorkflowsRequest": {
                          "fields": {
                            "parent": {
                              "type": "string",
                              "id": 1,
                              "options": {
                                "(google.api.field_behavior)": "REQUIRED",
                                "(google.api.resource_reference).type": "locations.googleapis.com/Location"
                              }
                            },
                            "readMask": {
                              "type": "google.protobuf.FieldMask",
                              "id": 2
                            },
                            "pageSize": {
                              "type": "int32",
                              "id": 3
                            },
                            "pageToken": {
                              "type": "string",
                              "id": 4
                            }
                          }
                        },
                        "ListMigrationWorkflowsResponse": {
                          "fields": {
                            "migrationWorkflows": {
                              "rule": "repeated",
                              "type": "MigrationWorkflow",
                              "id": 1
                            },
                            "nextPageToken": {
                              "type": "string",
                              "id": 2
                            }
                          }
                        },
                        "DeleteMigrationWorkflowRequest": {
                          "fields": {
                            "name": {
                              "type": "string",
                              "id": 1,
                              "options": {
                                "(google.api.field_behavior)": "REQUIRED",
                                "(google.api.resource_reference).type": "bigquerymigration.googleapis.com/MigrationWorkflow"
                              }
                            }
                          }
                        },
                        "StartMigrationWorkflowRequest": {
                          "fields": {
                            "name": {
                              "type": "string",
                              "id": 1,
                              "options": {
                                "(google.api.field_behavior)": "REQUIRED",
                                "(google.api.resource_reference).type": "bigquerymigration.googleapis.com/MigrationWorkflow"
                              }
                            }
                          }
                        },
                        "GetMigrationSubtaskRequest": {
                          "fields": {
                            "name": {
                              "type": "string",
                              "id": 1,
                              "options": {
                                "(google.api.field_behavior)": "REQUIRED",
                                "(google.api.resource_reference).type": "bigquerymigration.googleapis.com/MigrationSubtask"
                              }
                            },
                            "readMask": {
                              "type": "google.protobuf.FieldMask",
                              "id": 2,
                              "options": {
                                "(google.api.field_behavior)": "OPTIONAL"
                              }
                            }
                          }
                        },
                        "ListMigrationSubtasksRequest": {
                          "fields": {
                            "parent": {
                              "type": "string",
                              "id": 1,
                              "options": {
                                "(google.api.field_behavior)": "REQUIRED",
                                "(google.api.resource_reference).type": "bigquerymigration.googleapis.com/MigrationWorkflow"
                              }
                            },
                            "readMask": {
                              "type": "google.protobuf.FieldMask",
                              "id": 2,
                              "options": {
                                "(google.api.field_behavior)": "OPTIONAL"
                              }
                            },
                            "pageSize": {
                              "type": "int32",
                              "id": 3,
                              "options": {
                                "(google.api.field_behavior)": "OPTIONAL"
                              }
                            },
                            "pageToken": {
                              "type": "string",
                              "id": 4,
                              "options": {
                                "(google.api.field_behavior)": "OPTIONAL"
                              }
                            },
                            "filter": {
                              "type": "string",
                              "id": 5,
                              "options": {
                                "(google.api.field_behavior)": "OPTIONAL"
                              }
                            }
                          }
                        },
                        "ListMigrationSubtasksResponse": {
                          "fields": {
                            "migrationSubtasks": {
                              "rule": "repeated",
                              "type": "MigrationSubtask",
                              "id": 1
                            },
                            "nextPageToken": {
                              "type": "string",
                              "id": 2
                            }
                          }
                        },
                        "SqlTranslationService": {
                          "options": {
                            "(google.api.default_host)": "bigquerymigration.googleapis.com",
                            "(google.api.oauth_scopes)": "https://www.googleapis.com/auth/cloud-platform"
                          },
                          "methods": {
                            "TranslateQuery": {
                              "requestType": "TranslateQueryRequest",
                              "responseType": "TranslateQueryResponse",
                              "options": {
                                "(google.api.http).post": "/v2alpha/{parent=projects/*/locations/*}:translateQuery",
                                "(google.api.http).body": "*",
                                "(google.api.method_signature)": "parent,source_dialect,query"
                              },
                              "parsedOptions": [
                                {
                                  "(google.api.http)": {
                                    "post": "/v2alpha/{parent=projects/*/locations/*}:translateQuery",
                                    "body": "*"
                                  }
                                },
                                {
                                  "(google.api.method_signature)": "parent,source_dialect,query"
                                }
                              ]
                            }
                          }
                        },
                        "TranslateQueryRequest": {
                          "fields": {
                            "parent": {
                              "type": "string",
                              "id": 1,
                              "options": {
                                "(google.api.field_behavior)": "REQUIRED",
                                "(google.api.resource_reference).type": "locations.googleapis.com/Location"
                              }
                            },
                            "sourceDialect": {
                              "type": "SqlTranslationSourceDialect",
                              "id": 2,
                              "options": {
                                "(google.api.field_behavior)": "REQUIRED"
                              }
                            },
                            "query": {
                              "type": "string",
                              "id": 3,
                              "options": {
                                "(google.api.field_behavior)": "REQUIRED"
                              }
                            }
                          },
                          "nested": {
                            "SqlTranslationSourceDialect": {
                              "values": {
                                "SQL_TRANSLATION_SOURCE_DIALECT_UNSPECIFIED": 0,
                                "TERADATA": 1
                              }
                            }
                          }
                        },
                        "TranslateQueryResponse": {
                          "fields": {
                            "translationJob": {
                              "type": "string",
                              "id": 4,
                              "options": {
                                "(google.api.field_behavior)": "IMMUTABLE"
                              }
                            },
                            "translatedQuery": {
                              "type": "string",
                              "id": 1
                            },
                            "errors": {
                              "rule": "repeated",
                              "type": "SqlTranslationError",
                              "id": 2
                            },
                            "warnings": {
                              "rule": "repeated",
                              "type": "SqlTranslationWarning",
                              "id": 3
                            }
                          }
                        },
                        "SqlTranslationErrorDetail": {
                          "fields": {
                            "row": {
                              "type": "int64",
                              "id": 1
                            },
                            "column": {
                              "type": "int64",
                              "id": 2
                            },
                            "message": {
                              "type": "string",
                              "id": 3
                            }
                          }
                        },
                        "SqlTranslationError": {
                          "fields": {
                            "errorType": {
                              "type": "SqlTranslationErrorType",
                              "id": 1
                            },
                            "errorDetail": {
                              "type": "SqlTranslationErrorDetail",
                              "id": 2
                            }
                          },
                          "nested": {
                            "SqlTranslationErrorType": {
                              "values": {
                                "SQL_TRANSLATION_ERROR_TYPE_UNSPECIFIED": 0,
                                "SQL_PARSE_ERROR": 1,
                                "UNSUPPORTED_SQL_FUNCTION": 2
                              }
                            }
                          }
                        },
                        "SqlTranslationWarning": {
                          "fields": {
                            "warningDetail": {
                              "type": "SqlTranslationErrorDetail",
                              "id": 1
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "api": {
          "options": {
            "go_package": "google.golang.org/genproto/googleapis/api/annotations;annotations",
            "java_multiple_files": true,
            "java_outer_classname": "ClientProto",
            "java_package": "com.google.api",
            "objc_class_prefix": "GAPI",
            "cc_enable_arenas": true
          },
          "nested": {
            "fieldBehavior": {
              "rule": "repeated",
              "type": "google.api.FieldBehavior",
              "id": 1052,
              "extend": "google.protobuf.FieldOptions"
            },
            "FieldBehavior": {
              "values": {
                "FIELD_BEHAVIOR_UNSPECIFIED": 0,
                "OPTIONAL": 1,
                "REQUIRED": 2,
                "OUTPUT_ONLY": 3,
                "INPUT_ONLY": 4,
                "IMMUTABLE": 5,
                "UNORDERED_LIST": 6,
                "NON_EMPTY_DEFAULT": 7
              }
            },
            "resourceReference": {
              "type": "google.api.ResourceReference",
              "id": 1055,
              "extend": "google.protobuf.FieldOptions"
            },
            "resourceDefinition": {
              "rule": "repeated",
              "type": "google.api.ResourceDescriptor",
              "id": 1053,
              "extend": "google.protobuf.FileOptions"
            },
            "resource": {
              "type": "google.api.ResourceDescriptor",
              "id": 1053,
              "extend": "google.protobuf.MessageOptions"
            },
            "ResourceDescriptor": {
              "fields": {
                "type": {
                  "type": "string",
                  "id": 1
                },
                "pattern": {
                  "rule": "repeated",
                  "type": "string",
                  "id": 2
                },
                "nameField": {
                  "type": "string",
                  "id": 3
                },
                "history": {
                  "type": "History",
                  "id": 4
                },
                "plural": {
                  "type": "string",
                  "id": 5
                },
                "singular": {
                  "type": "string",
                  "id": 6
                },
                "style": {
                  "rule": "repeated",
                  "type": "Style",
                  "id": 10
                }
              },
              "nested": {
                "History": {
                  "values": {
                    "HISTORY_UNSPECIFIED": 0,
                    "ORIGINALLY_SINGLE_PATTERN": 1,
                    "FUTURE_MULTI_PATTERN": 2
                  }
                },
                "Style": {
                  "values": {
                    "STYLE_UNSPECIFIED": 0,
                    "DECLARATIVE_FRIENDLY": 1
                  }
                }
              }
            },
            "ResourceReference": {
              "fields": {
                "type": {
                  "type": "string",
                  "id": 1
                },
                "childType": {
                  "type": "string",
                  "id": 2
                }
              }
            },
            "Distribution": {
              "fields": {
                "count": {
                  "type": "int64",
                  "id": 1
                },
                "mean": {
                  "type": "double",
                  "id": 2
                },
                "sumOfSquaredDeviation": {
                  "type": "double",
                  "id": 3
                },
                "range": {
                  "type": "Range",
                  "id": 4
                },
                "bucketOptions": {
                  "type": "BucketOptions",
                  "id": 6
                },
                "bucketCounts": {
                  "rule": "repeated",
                  "type": "int64",
                  "id": 7
                },
                "exemplars": {
                  "rule": "repeated",
                  "type": "Exemplar",
                  "id": 10
                }
              },
              "nested": {
                "Range": {
                  "fields": {
                    "min": {
                      "type": "double",
                      "id": 1
                    },
                    "max": {
                      "type": "double",
                      "id": 2
                    }
                  }
                },
                "BucketOptions": {
                  "oneofs": {
                    "options": {
                      "oneof": [
                        "linearBuckets",
                        "exponentialBuckets",
                        "explicitBuckets"
                      ]
                    }
                  },
                  "fields": {
                    "linearBuckets": {
                      "type": "Linear",
                      "id": 1
                    },
                    "exponentialBuckets": {
                      "type": "Exponential",
                      "id": 2
                    },
                    "explicitBuckets": {
                      "type": "Explicit",
                      "id": 3
                    }
                  },
                  "nested": {
                    "Linear": {
                      "fields": {
                        "numFiniteBuckets": {
                          "type": "int32",
                          "id": 1
                        },
                        "width": {
                          "type": "double",
                          "id": 2
                        },
                        "offset": {
                          "type": "double",
                          "id": 3
                        }
                      }
                    },
                    "Exponential": {
                      "fields": {
                        "numFiniteBuckets": {
                          "type": "int32",
                          "id": 1
                        },
                        "growthFactor": {
                          "type": "double",
                          "id": 2
                        },
                        "scale": {
                          "type": "double",
                          "id": 3
                        }
                      }
                    },
                    "Explicit": {
                      "fields": {
                        "bounds": {
                          "rule": "repeated",
                          "type": "double",
                          "id": 1
                        }
                      }
                    }
                  }
                },
                "Exemplar": {
                  "fields": {
                    "value": {
                      "type": "double",
                      "id": 1
                    },
                    "timestamp": {
                      "type": "google.protobuf.Timestamp",
                      "id": 2
                    },
                    "attachments": {
                      "rule": "repeated",
                      "type": "google.protobuf.Any",
                      "id": 3
                    }
                  }
                }
              }
            },
            "MetricDescriptor": {
              "fields": {
                "name": {
                  "type": "string",
                  "id": 1
                },
                "type": {
                  "type": "string",
                  "id": 8
                },
                "labels": {
                  "rule": "repeated",
                  "type": "LabelDescriptor",
                  "id": 2
                },
                "metricKind": {
                  "type": "MetricKind",
                  "id": 3
                },
                "valueType": {
                  "type": "ValueType",
                  "id": 4
                },
                "unit": {
                  "type": "string",
                  "id": 5
                },
                "description": {
                  "type": "string",
                  "id": 6
                },
                "displayName": {
                  "type": "string",
                  "id": 7
                },
                "metadata": {
                  "type": "MetricDescriptorMetadata",
                  "id": 10
                },
                "launchStage": {
                  "type": "LaunchStage",
                  "id": 12
                },
                "monitoredResourceTypes": {
                  "rule": "repeated",
                  "type": "string",
                  "id": 13
                }
              },
              "nested": {
                "MetricKind": {
                  "values": {
                    "METRIC_KIND_UNSPECIFIED": 0,
                    "GAUGE": 1,
                    "DELTA": 2,
                    "CUMULATIVE": 3
                  }
                },
                "ValueType": {
                  "values": {
                    "VALUE_TYPE_UNSPECIFIED": 0,
                    "BOOL": 1,
                    "INT64": 2,
                    "DOUBLE": 3,
                    "STRING": 4,
                    "DISTRIBUTION": 5,
                    "MONEY": 6
                  }
                },
                "MetricDescriptorMetadata": {
                  "fields": {
                    "launchStage": {
                      "type": "LaunchStage",
                      "id": 1,
                      "options": {
                        "deprecated": true
                      }
                    },
                    "samplePeriod": {
                      "type": "google.protobuf.Duration",
                      "id": 2
                    },
                    "ingestDelay": {
                      "type": "google.protobuf.Duration",
                      "id": 3
                    }
                  }
                }
              }
            },
            "Metric": {
              "fields": {
                "type": {
                  "type": "string",
                  "id": 3
                },
                "labels": {
                  "keyType": "string",
                  "type": "string",
                  "id": 2
                }
              }
            },
            "LabelDescriptor": {
              "fields": {
                "key": {
                  "type": "string",
                  "id": 1
                },
                "valueType": {
                  "type": "ValueType",
                  "id": 2
                },
                "description": {
                  "type": "string",
                  "id": 3
                }
              },
              "nested": {
                "ValueType": {
                  "values": {
                    "STRING": 0,
                    "BOOL": 1,
                    "INT64": 2
                  }
                }
              }
            },
            "LaunchStage": {
              "values": {
                "LAUNCH_STAGE_UNSPECIFIED": 0,
                "UNIMPLEMENTED": 6,
                "PRELAUNCH": 7,
                "EARLY_ACCESS": 1,
                "ALPHA": 2,
                "BETA": 3,
                "GA": 4,
                "DEPRECATED": 5
              }
            },
            "http": {
              "type": "HttpRule",
              "id": 72295728,
              "extend": "google.protobuf.MethodOptions"
            },
            "Http": {
              "fields": {
                "rules": {
                  "rule": "repeated",
                  "type": "HttpRule",
                  "id": 1
                },
                "fullyDecodeReservedExpansion": {
                  "type": "bool",
                  "id": 2
                }
              }
            },
            "HttpRule": {
              "oneofs": {
                "pattern": {
                  "oneof": [
                    "get",
                    "put",
                    "post",
                    "delete",
                    "patch",
                    "custom"
                  ]
                }
              },
              "fields": {
                "selector": {
                  "type": "string",
                  "id": 1
                },
                "get": {
                  "type": "string",
                  "id": 2
                },
                "put": {
                  "type": "string",
                  "id": 3
                },
                "post": {
                  "type": "string",
                  "id": 4
                },
                "delete": {
                  "type": "string",
                  "id": 5
                },
                "patch": {
                  "type": "string",
                  "id": 6
                },
                "custom": {
                  "type": "CustomHttpPattern",
                  "id": 8
                },
                "body": {
                  "type": "string",
                  "id": 7
                },
                "responseBody": {
                  "type": "string",
                  "id": 12
                },
                "additionalBindings": {
                  "rule": "repeated",
                  "type": "HttpRule",
                  "id": 11
                }
              }
            },
            "CustomHttpPattern": {
              "fields": {
                "kind": {
                  "type": "string",
                  "id": 1
                },
                "path": {
                  "type": "string",
                  "id": 2
                }
              }
            },
            "methodSignature": {
              "rule": "repeated",
              "type": "string",
              "id": 1051,
              "extend": "google.protobuf.MethodOptions"
            },
            "defaultHost": {
              "type": "string",
              "id": 1049,
              "extend": "google.protobuf.ServiceOptions"
            },
            "oauthScopes": {
              "type": "string",
              "id": 1050,
              "extend": "google.protobuf.ServiceOptions"
            },
            "CommonLanguageSettings": {
              "fields": {
                "referenceDocsUri": {
                  "type": "string",
                  "id": 1,
                  "options": {
                    "deprecated": true
                  }
                },
                "destinations": {
                  "rule": "repeated",
                  "type": "ClientLibraryDestination",
                  "id": 2
                }
              }
            },
            "ClientLibrarySettings": {
              "fields": {
                "version": {
                  "type": "string",
                  "id": 1
                },
                "launchStage": {
                  "type": "LaunchStage",
                  "id": 2
                },
                "restNumericEnums": {
                  "type": "bool",
                  "id": 3
                },
                "javaSettings": {
                  "type": "JavaSettings",
                  "id": 21
                },
                "cppSettings": {
                  "type": "CppSettings",
                  "id": 22
                },
                "phpSettings": {
                  "type": "PhpSettings",
                  "id": 23
                },
                "pythonSettings": {
                  "type": "PythonSettings",
                  "id": 24
                },
                "nodeSettings": {
                  "type": "NodeSettings",
                  "id": 25
                },
                "dotnetSettings": {
                  "type": "DotnetSettings",
                  "id": 26
                },
                "rubySettings": {
                  "type": "RubySettings",
                  "id": 27
                },
                "goSettings": {
                  "type": "GoSettings",
                  "id": 28
                }
              }
            },
            "Publishing": {
              "fields": {
                "methodSettings": {
                  "rule": "repeated",
                  "type": "MethodSettings",
                  "id": 2
                },
                "newIssueUri": {
                  "type": "string",
                  "id": 101
                },
                "documentationUri": {
                  "type": "string",
                  "id": 102
                },
                "apiShortName": {
                  "type": "string",
                  "id": 103
                },
                "githubLabel": {
                  "type": "string",
                  "id": 104
                },
                "codeownerGithubTeams": {
                  "rule": "repeated",
                  "type": "string",
                  "id": 105
                },
                "docTagPrefix": {
                  "type": "string",
                  "id": 106
                },
                "organization": {
                  "type": "ClientLibraryOrganization",
                  "id": 107
                },
                "librarySettings": {
                  "rule": "repeated",
                  "type": "ClientLibrarySettings",
                  "id": 109
                }
              }
            },
            "JavaSettings": {
              "fields": {
                "libraryPackage": {
                  "type": "string",
                  "id": 1
                },
                "serviceClassNames": {
                  "keyType": "string",
                  "type": "string",
                  "id": 2
                },
                "common": {
                  "type": "CommonLanguageSettings",
                  "id": 3
                }
              }
            },
            "CppSettings": {
              "fields": {
                "common": {
                  "type": "CommonLanguageSettings",
                  "id": 1
                }
              }
            },
            "PhpSettings": {
              "fields": {
                "common": {
                  "type": "CommonLanguageSettings",
                  "id": 1
                }
              }
            },
            "PythonSettings": {
              "fields": {
                "common": {
                  "type": "CommonLanguageSettings",
                  "id": 1
                }
              }
            },
            "NodeSettings": {
              "fields": {
                "common": {
                  "type": "CommonLanguageSettings",
                  "id": 1
                }
              }
            },
            "DotnetSettings": {
              "fields": {
                "common": {
                  "type": "CommonLanguageSettings",
                  "id": 1
                }
              }
            },
            "RubySettings": {
              "fields": {
                "common": {
                  "type": "CommonLanguageSettings",
                  "id": 1
                }
              }
            },
            "GoSettings": {
              "fields": {
                "common": {
                  "type": "CommonLanguageSettings",
                  "id": 1
                }
              }
            },
            "MethodSettings": {
              "fields": {
                "selector": {
                  "type": "string",
                  "id": 1
                },
                "longRunning": {
                  "type": "LongRunning",
                  "id": 2
                }
              },
              "nested": {
                "LongRunning": {
                  "fields": {
                    "initialPollDelay": {
                      "type": "google.protobuf.Duration",
                      "id": 1
                    },
                    "pollDelayMultiplier": {
                      "type": "float",
                      "id": 2
                    },
                    "maxPollDelay": {
                      "type": "google.protobuf.Duration",
                      "id": 3
                    },
                    "totalPollTimeout": {
                      "type": "google.protobuf.Duration",
                      "id": 4
                    }
                  }
                }
              }
            },
            "ClientLibraryOrganization": {
              "values": {
                "CLIENT_LIBRARY_ORGANIZATION_UNSPECIFIED": 0,
                "CLOUD": 1,
                "ADS": 2,
                "PHOTOS": 3,
                "STREET_VIEW": 4
              }
            },
            "ClientLibraryDestination": {
              "values": {
                "CLIENT_LIBRARY_DESTINATION_UNSPECIFIED": 0,
                "GITHUB": 10,
                "PACKAGE_MANAGER": 20
              }
            }
          }
        },
        "protobuf": {
          "options": {
            "go_package": "google.golang.org/protobuf/types/descriptorpb",
            "java_package": "com.google.protobuf",
            "java_outer_classname": "DescriptorProtos",
            "csharp_namespace": "Google.Protobuf.Reflection",
            "objc_class_prefix": "GPB",
            "cc_enable_arenas": true,
            "optimize_for": "SPEED"
          },
          "nested": {
            "FileDescriptorSet": {
              "fields": {
                "file": {
                  "rule": "repeated",
                  "type": "FileDescriptorProto",
                  "id": 1
                }
              }
            },
            "FileDescriptorProto": {
              "fields": {
                "name": {
                  "type": "string",
                  "id": 1
                },
                "package": {
                  "type": "string",
                  "id": 2
                },
                "dependency": {
                  "rule": "repeated",
                  "type": "string",
                  "id": 3
                },
                "publicDependency": {
                  "rule": "repeated",
                  "type": "int32",
                  "id": 10,
                  "options": {
                    "packed": false
                  }
                },
                "weakDependency": {
                  "rule": "repeated",
                  "type": "int32",
                  "id": 11,
                  "options": {
                    "packed": false
                  }
                },
                "messageType": {
                  "rule": "repeated",
                  "type": "DescriptorProto",
                  "id": 4
                },
                "enumType": {
                  "rule": "repeated",
                  "type": "EnumDescriptorProto",
                  "id": 5
                },
                "service": {
                  "rule": "repeated",
                  "type": "ServiceDescriptorProto",
                  "id": 6
                },
                "extension": {
                  "rule": "repeated",
                  "type": "FieldDescriptorProto",
                  "id": 7
                },
                "options": {
                  "type": "FileOptions",
                  "id": 8
                },
                "sourceCodeInfo": {
                  "type": "SourceCodeInfo",
                  "id": 9
                },
                "syntax": {
                  "type": "string",
                  "id": 12
                },
                "edition": {
                  "type": "string",
                  "id": 13
                }
              }
            },
            "DescriptorProto": {
              "fields": {
                "name": {
                  "type": "string",
                  "id": 1
                },
                "field": {
                  "rule": "repeated",
                  "type": "FieldDescriptorProto",
                  "id": 2
                },
                "extension": {
                  "rule": "repeated",
                  "type": "FieldDescriptorProto",
                  "id": 6
                },
                "nestedType": {
                  "rule": "repeated",
                  "type": "DescriptorProto",
                  "id": 3
                },
                "enumType": {
                  "rule": "repeated",
                  "type": "EnumDescriptorProto",
                  "id": 4
                },
                "extensionRange": {
                  "rule": "repeated",
                  "type": "ExtensionRange",
                  "id": 5
                },
                "oneofDecl": {
                  "rule": "repeated",
                  "type": "OneofDescriptorProto",
                  "id": 8
                },
                "options": {
                  "type": "MessageOptions",
                  "id": 7
                },
                "reservedRange": {
                  "rule": "repeated",
                  "type": "ReservedRange",
                  "id": 9
                },
                "reservedName": {
                  "rule": "repeated",
                  "type": "string",
                  "id": 10
                }
              },
              "nested": {
                "ExtensionRange": {
                  "fields": {
                    "start": {
                      "type": "int32",
                      "id": 1
                    },
                    "end": {
                      "type": "int32",
                      "id": 2
                    },
                    "options": {
                      "type": "ExtensionRangeOptions",
                      "id": 3
                    }
                  }
                },
                "ReservedRange": {
                  "fields": {
                    "start": {
                      "type": "int32",
                      "id": 1
                    },
                    "end": {
                      "type": "int32",
                      "id": 2
                    }
                  }
                }
              }
            },
            "ExtensionRangeOptions": {
              "fields": {
                "uninterpretedOption": {
                  "rule": "repeated",
                  "type": "UninterpretedOption",
                  "id": 999
                }
              },
              "extensions": [
                [
                  1000,
                  536870911
                ]
              ]
            },
            "FieldDescriptorProto": {
              "fields": {
                "name": {
                  "type": "string",
                  "id": 1
                },
                "number": {
                  "type": "int32",
                  "id": 3
                },
                "label": {
                  "type": "Label",
                  "id": 4
                },
                "type": {
                  "type": "Type",
                  "id": 5
                },
                "typeName": {
                  "type": "string",
                  "id": 6
                },
                "extendee": {
                  "type": "string",
                  "id": 2
                },
                "defaultValue": {
                  "type": "string",
                  "id": 7
                },
                "oneofIndex": {
                  "type": "int32",
                  "id": 9
                },
                "jsonName": {
                  "type": "string",
                  "id": 10
                },
                "options": {
                  "type": "FieldOptions",
                  "id": 8
                },
                "proto3Optional": {
                  "type": "bool",
                  "id": 17
                }
              },
              "nested": {
                "Type": {
                  "values": {
                    "TYPE_DOUBLE": 1,
                    "TYPE_FLOAT": 2,
                    "TYPE_INT64": 3,
                    "TYPE_UINT64": 4,
                    "TYPE_INT32": 5,
                    "TYPE_FIXED64": 6,
                    "TYPE_FIXED32": 7,
                    "TYPE_BOOL": 8,
                    "TYPE_STRING": 9,
                    "TYPE_GROUP": 10,
                    "TYPE_MESSAGE": 11,
                    "TYPE_BYTES": 12,
                    "TYPE_UINT32": 13,
                    "TYPE_ENUM": 14,
                    "TYPE_SFIXED32": 15,
                    "TYPE_SFIXED64": 16,
                    "TYPE_SINT32": 17,
                    "TYPE_SINT64": 18
                  }
                },
                "Label": {
                  "values": {
                    "LABEL_OPTIONAL": 1,
                    "LABEL_REQUIRED": 2,
                    "LABEL_REPEATED": 3
                  }
                }
              }
            },
            "OneofDescriptorProto": {
              "fields": {
                "name": {
                  "type": "string",
                  "id": 1
                },
                "options": {
                  "type": "OneofOptions",
                  "id": 2
                }
              }
            },
            "EnumDescriptorProto": {
              "fields": {
                "name": {
                  "type": "string",
                  "id": 1
                },
                "value": {
                  "rule": "repeated",
                  "type": "EnumValueDescriptorProto",
                  "id": 2
                },
                "options": {
                  "type": "EnumOptions",
                  "id": 3
                },
                "reservedRange": {
                  "rule": "repeated",
                  "type": "EnumReservedRange",
                  "id": 4
                },
                "reservedName": {
                  "rule": "repeated",
                  "type": "string",
                  "id": 5
                }
              },
              "nested": {
                "EnumReservedRange": {
                  "fields": {
                    "start": {
                      "type": "int32",
                      "id": 1
                    },
                    "end": {
                      "type": "int32",
                      "id": 2
                    }
                  }
                }
              }
            },
            "EnumValueDescriptorProto": {
              "fields": {
                "name": {
                  "type": "string",
                  "id": 1
                },
                "number": {
                  "type": "int32",
                  "id": 2
                },
                "options": {
                  "type": "EnumValueOptions",
                  "id": 3
                }
              }
            },
            "ServiceDescriptorProto": {
              "fields": {
                "name": {
                  "type": "string",
                  "id": 1
                },
                "method": {
                  "rule": "repeated",
                  "type": "MethodDescriptorProto",
                  "id": 2
                },
                "options": {
                  "type": "ServiceOptions",
                  "id": 3
                }
              }
            },
            "MethodDescriptorProto": {
              "fields": {
                "name": {
                  "type": "string",
                  "id": 1
                },
                "inputType": {
                  "type": "string",
                  "id": 2
                },
                "outputType": {
                  "type": "string",
                  "id": 3
                },
                "options": {
                  "type": "MethodOptions",
                  "id": 4
                },
                "clientStreaming": {
                  "type": "bool",
                  "id": 5,
                  "options": {
                    "default": false
                  }
                },
                "serverStreaming": {
                  "type": "bool",
                  "id": 6,
                  "options": {
                    "default": false
                  }
                }
              }
            },
            "FileOptions": {
              "fields": {
                "javaPackage": {
                  "type": "string",
                  "id": 1
                },
                "javaOuterClassname": {
                  "type": "string",
                  "id": 8
                },
                "javaMultipleFiles": {
                  "type": "bool",
                  "id": 10,
                  "options": {
                    "default": false
                  }
                },
                "javaGenerateEqualsAndHash": {
                  "type": "bool",
                  "id": 20,
                  "options": {
                    "deprecated": true
                  }
                },
                "javaStringCheckUtf8": {
                  "type": "bool",
                  "id": 27,
                  "options": {
                    "default": false
                  }
                },
                "optimizeFor": {
                  "type": "OptimizeMode",
                  "id": 9,
                  "options": {
                    "default": "SPEED"
                  }
                },
                "goPackage": {
                  "type": "string",
                  "id": 11
                },
                "ccGenericServices": {
                  "type": "bool",
                  "id": 16,
                  "options": {
                    "default": false
                  }
                },
                "javaGenericServices": {
                  "type": "bool",
                  "id": 17,
                  "options": {
                    "default": false
                  }
                },
                "pyGenericServices": {
                  "type": "bool",
                  "id": 18,
                  "options": {
                    "default": false
                  }
                },
                "phpGenericServices": {
                  "type": "bool",
                  "id": 42,
                  "options": {
                    "default": false
                  }
                },
                "deprecated": {
                  "type": "bool",
                  "id": 23,
                  "options": {
                    "default": false
                  }
                },
                "ccEnableArenas": {
                  "type": "bool",
                  "id": 31,
                  "options": {
                    "default": true
                  }
                },
                "objcClassPrefix": {
                  "type": "string",
                  "id": 36
                },
                "csharpNamespace": {
                  "type": "string",
                  "id": 37
                },
                "swiftPrefix": {
                  "type": "string",
                  "id": 39
                },
                "phpClassPrefix": {
                  "type": "string",
                  "id": 40
                },
                "phpNamespace": {
                  "type": "string",
                  "id": 41
                },
                "phpMetadataNamespace": {
                  "type": "string",
                  "id": 44
                },
                "rubyPackage": {
                  "type": "string",
                  "id": 45
                },
                "uninterpretedOption": {
                  "rule": "repeated",
                  "type": "UninterpretedOption",
                  "id": 999
                }
              },
              "extensions": [
                [
                  1000,
                  536870911
                ]
              ],
              "reserved": [
                [
                  38,
                  38
                ]
              ],
              "nested": {
                "OptimizeMode": {
                  "values": {
                    "SPEED": 1,
                    "CODE_SIZE": 2,
                    "LITE_RUNTIME": 3
                  }
                }
              }
            },
            "MessageOptions": {
              "fields": {
                "messageSetWireFormat": {
                  "type": "bool",
                  "id": 1,
                  "options": {
                    "default": false
                  }
                },
                "noStandardDescriptorAccessor": {
                  "type": "bool",
                  "id": 2,
                  "options": {
                    "default": false
                  }
                },
                "deprecated": {
                  "type": "bool",
                  "id": 3,
                  "options": {
                    "default": false
                  }
                },
                "mapEntry": {
                  "type": "bool",
                  "id": 7
                },
                "deprecatedLegacyJsonFieldConflicts": {
                  "type": "bool",
                  "id": 11,
                  "options": {
                    "deprecated": true
                  }
                },
                "uninterpretedOption": {
                  "rule": "repeated",
                  "type": "UninterpretedOption",
                  "id": 999
                }
              },
              "extensions": [
                [
                  1000,
                  536870911
                ]
              ],
              "reserved": [
                [
                  4,
                  4
                ],
                [
                  5,
                  5
                ],
                [
                  6,
                  6
                ],
                [
                  8,
                  8
                ],
                [
                  9,
                  9
                ]
              ]
            },
            "FieldOptions": {
              "fields": {
                "ctype": {
                  "type": "CType",
                  "id": 1,
                  "options": {
                    "default": "STRING"
                  }
                },
                "packed": {
                  "type": "bool",
                  "id": 2
                },
                "jstype": {
                  "type": "JSType",
                  "id": 6,
                  "options": {
                    "default": "JS_NORMAL"
                  }
                },
                "lazy": {
                  "type": "bool",
                  "id": 5,
                  "options": {
                    "default": false
                  }
                },
                "unverifiedLazy": {
                  "type": "bool",
                  "id": 15,
                  "options": {
                    "default": false
                  }
                },
                "deprecated": {
                  "type": "bool",
                  "id": 3,
                  "options": {
                    "default": false
                  }
                },
                "weak": {
                  "type": "bool",
                  "id": 10,
                  "options": {
                    "default": false
                  }
                },
                "debugRedact": {
                  "type": "bool",
                  "id": 16,
                  "options": {
                    "default": false
                  }
                },
                "retention": {
                  "type": "OptionRetention",
                  "id": 17
                },
                "target": {
                  "type": "OptionTargetType",
                  "id": 18
                },
                "uninterpretedOption": {
                  "rule": "repeated",
                  "type": "UninterpretedOption",
                  "id": 999
                }
              },
              "extensions": [
                [
                  1000,
                  536870911
                ]
              ],
              "reserved": [
                [
                  4,
                  4
                ]
              ],
              "nested": {
                "CType": {
                  "values": {
                    "STRING": 0,
                    "CORD": 1,
                    "STRING_PIECE": 2
                  }
                },
                "JSType": {
                  "values": {
                    "JS_NORMAL": 0,
                    "JS_STRING": 1,
                    "JS_NUMBER": 2
                  }
                },
                "OptionRetention": {
                  "values": {
                    "RETENTION_UNKNOWN": 0,
                    "RETENTION_RUNTIME": 1,
                    "RETENTION_SOURCE": 2
                  }
                },
                "OptionTargetType": {
                  "values": {
                    "TARGET_TYPE_UNKNOWN": 0,
                    "TARGET_TYPE_FILE": 1,
                    "TARGET_TYPE_EXTENSION_RANGE": 2,
                    "TARGET_TYPE_MESSAGE": 3,
                    "TARGET_TYPE_FIELD": 4,
                    "TARGET_TYPE_ONEOF": 5,
                    "TARGET_TYPE_ENUM": 6,
                    "TARGET_TYPE_ENUM_ENTRY": 7,
                    "TARGET_TYPE_SERVICE": 8,
                    "TARGET_TYPE_METHOD": 9
                  }
                }
              }
            },
            "OneofOptions": {
              "fields": {
                "uninterpretedOption": {
                  "rule": "repeated",
                  "type": "UninterpretedOption",
                  "id": 999
                }
              },
              "extensions": [
                [
                  1000,
                  536870911
                ]
              ]
            },
            "EnumOptions": {
              "fields": {
                "allowAlias": {
                  "type": "bool",
                  "id": 2
                },
                "deprecated": {
                  "type": "bool",
                  "id": 3,
                  "options": {
                    "default": false
                  }
                },
                "deprecatedLegacyJsonFieldConflicts": {
                  "type": "bool",
                  "id": 6,
                  "options": {
                    "deprecated": true
                  }
                },
                "uninterpretedOption": {
                  "rule": "repeated",
                  "type": "UninterpretedOption",
                  "id": 999
                }
              },
              "extensions": [
                [
                  1000,
                  536870911
                ]
              ],
              "reserved": [
                [
                  5,
                  5
                ]
              ]
            },
            "EnumValueOptions": {
              "fields": {
                "deprecated": {
                  "type": "bool",
                  "id": 1,
                  "options": {
                    "default": false
                  }
                },
                "uninterpretedOption": {
                  "rule": "repeated",
                  "type": "UninterpretedOption",
                  "id": 999
                }
              },
              "extensions": [
                [
                  1000,
                  536870911
                ]
              ]
            },
            "ServiceOptions": {
              "fields": {
                "deprecated": {
                  "type": "bool",
                  "id": 33,
                  "options": {
                    "default": false
                  }
                },
                "uninterpretedOption": {
                  "rule": "repeated",
                  "type": "UninterpretedOption",
                  "id": 999
                }
              },
              "extensions": [
                [
                  1000,
                  536870911
                ]
              ]
            },
            "MethodOptions": {
              "fields": {
                "deprecated": {
                  "type": "bool",
                  "id": 33,
                  "options": {
                    "default": false
                  }
                },
                "idempotencyLevel": {
                  "type": "IdempotencyLevel",
                  "id": 34,
                  "options": {
                    "default": "IDEMPOTENCY_UNKNOWN"
                  }
                },
                "uninterpretedOption": {
                  "rule": "repeated",
                  "type": "UninterpretedOption",
                  "id": 999
                }
              },
              "extensions": [
                [
                  1000,
                  536870911
                ]
              ],
              "nested": {
                "IdempotencyLevel": {
                  "values": {
                    "IDEMPOTENCY_UNKNOWN": 0,
                    "NO_SIDE_EFFECTS": 1,
                    "IDEMPOTENT": 2
                  }
                }
              }
            },
            "UninterpretedOption": {
              "fields": {
                "name": {
                  "rule": "repeated",
                  "type": "NamePart",
                  "id": 2
                },
                "identifierValue": {
                  "type": "string",
                  "id": 3
                },
                "positiveIntValue": {
                  "type": "uint64",
                  "id": 4
                },
                "negativeIntValue": {
                  "type": "int64",
                  "id": 5
                },
                "doubleValue": {
                  "type": "double",
                  "id": 6
                },
                "stringValue": {
                  "type": "bytes",
                  "id": 7
                },
                "aggregateValue": {
                  "type": "string",
                  "id": 8
                }
              },
              "nested": {
                "NamePart": {
                  "fields": {
                    "namePart": {
                      "rule": "required",
                      "type": "string",
                      "id": 1
                    },
                    "isExtension": {
                      "rule": "required",
                      "type": "bool",
                      "id": 2
                    }
                  }
                }
              }
            },
            "SourceCodeInfo": {
              "fields": {
                "location": {
                  "rule": "repeated",
                  "type": "Location",
                  "id": 1
                }
              },
              "nested": {
                "Location": {
                  "fields": {
                    "path": {
                      "rule": "repeated",
                      "type": "int32",
                      "id": 1
                    },
                    "span": {
                      "rule": "repeated",
                      "type": "int32",
                      "id": 2
                    },
                    "leadingComments": {
                      "type": "string",
                      "id": 3
                    },
                    "trailingComments": {
                      "type": "string",
                      "id": 4
                    },
                    "leadingDetachedComments": {
                      "rule": "repeated",
                      "type": "string",
                      "id": 6
                    }
                  }
                }
              }
            },
            "GeneratedCodeInfo": {
              "fields": {
                "annotation": {
                  "rule": "repeated",
                  "type": "Annotation",
                  "id": 1
                }
              },
              "nested": {
                "Annotation": {
                  "fields": {
                    "path": {
                      "rule": "repeated",
                      "type": "int32",
                      "id": 1
                    },
                    "sourceFile": {
                      "type": "string",
                      "id": 2
                    },
                    "begin": {
                      "type": "int32",
                      "id": 3
                    },
                    "end": {
                      "type": "int32",
                      "id": 4
                    },
                    "semantic": {
                      "type": "Semantic",
                      "id": 5
                    }
                  },
                  "nested": {
                    "Semantic": {
                      "values": {
                        "NONE": 0,
                        "SET": 1,
                        "ALIAS": 2
                      }
                    }
                  }
                }
              }
            },
            "Duration": {
              "fields": {
                "seconds": {
                  "type": "int64",
                  "id": 1
                },
                "nanos": {
                  "type": "int32",
                  "id": 2
                }
              }
            },
            "Any": {
              "fields": {
                "type_url": {
                  "type": "string",
                  "id": 1
                },
                "value": {
                  "type": "bytes",
                  "id": 2
                }
              }
            },
            "Timestamp": {
              "fields": {
                "seconds": {
                  "type": "int64",
                  "id": 1
                },
                "nanos": {
                  "type": "int32",
                  "id": 2
                }
              }
            },
            "Empty": {
              "fields": {}
            },
            "FieldMask": {
              "fields": {
                "paths": {
                  "rule": "repeated",
                  "type": "string",
                  "id": 1
                }
              }
            }
          }
        },
        "rpc": {
          "options": {
            "go_package": "google.golang.org/genproto/googleapis/rpc/errdetails;errdetails",
            "java_multiple_files": true,
            "java_outer_classname": "ErrorDetailsProto",
            "java_package": "com.google.rpc",
            "objc_class_prefix": "RPC"
          },
          "nested": {
            "ErrorInfo": {
              "fields": {
                "reason": {
                  "type": "string",
                  "id": 1
                },
                "domain": {
                  "type": "string",
                  "id": 2
                },
                "metadata": {
                  "keyType": "string",
                  "type": "string",
                  "id": 3
                }
              }
            },
            "RetryInfo": {
              "fields": {
                "retryDelay": {
                  "type": "google.protobuf.Duration",
                  "id": 1
                }
              }
            },
            "DebugInfo": {
              "fields": {
                "stackEntries": {
                  "rule": "repeated",
                  "type": "string",
                  "id": 1
                },
                "detail": {
                  "type": "string",
                  "id": 2
                }
              }
            },
            "QuotaFailure": {
              "fields": {
                "violations": {
                  "rule": "repeated",
                  "type": "Violation",
                  "id": 1
                }
              },
              "nested": {
                "Violation": {
                  "fields": {
                    "subject": {
                      "type": "string",
                      "id": 1
                    },
                    "description": {
                      "type": "string",
                      "id": 2
                    }
                  }
                }
              }
            },
            "PreconditionFailure": {
              "fields": {
                "violations": {
                  "rule": "repeated",
                  "type": "Violation",
                  "id": 1
                }
              },
              "nested": {
                "Violation": {
                  "fields": {
                    "type": {
                      "type": "string",
                      "id": 1
                    },
                    "subject": {
                      "type": "string",
                      "id": 2
                    },
                    "description": {
                      "type": "string",
                      "id": 3
                    }
                  }
                }
              }
            },
            "BadRequest": {
              "fields": {
                "fieldViolations": {
                  "rule": "repeated",
                  "type": "FieldViolation",
                  "id": 1
                }
              },
              "nested": {
                "FieldViolation": {
                  "fields": {
                    "field": {
                      "type": "string",
                      "id": 1
                    },
                    "description": {
                      "type": "string",
                      "id": 2
                    }
                  }
                }
              }
            },
            "RequestInfo": {
              "fields": {
                "requestId": {
                  "type": "string",
                  "id": 1
                },
                "servingData": {
                  "type": "string",
                  "id": 2
                }
              }
            },
            "ResourceInfo": {
              "fields": {
                "resourceType": {
                  "type": "string",
                  "id": 1
                },
                "resourceName": {
                  "type": "string",
                  "id": 2
                },
                "owner": {
                  "type": "string",
                  "id": 3
                },
                "description": {
                  "type": "string",
                  "id": 4
                }
              }
            },
            "Help": {
              "fields": {
                "links": {
                  "rule": "repeated",
                  "type": "Link",
                  "id": 1
                }
              },
              "nested": {
                "Link": {
                  "fields": {
                    "description": {
                      "type": "string",
                      "id": 1
                    },
                    "url": {
                      "type": "string",
                      "id": 2
                    }
                  }
                }
              }
            },
            "LocalizedMessage": {
              "fields": {
                "locale": {
                  "type": "string",
                  "id": 1
                },
                "message": {
                  "type": "string",
                  "id": 2
                }
              }
            }
          }
        }
      }
    }
  }
}