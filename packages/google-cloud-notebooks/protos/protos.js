// Copyright 2023 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

/*eslint-disable block-scoped-var, id-length, no-control-regex, no-magic-numbers, no-prototype-builtins, no-redeclare, no-shadow, no-var, sort-vars*/
(function(global, factory) { /* global define, require, module */

    /* AMD */ if (typeof define === 'function' && define.amd)
        define(["protobufjs/minimal"], factory);

    /* CommonJS */ else if (typeof require === 'function' && typeof module === 'object' && module && module.exports)
        module.exports = factory(require("google-gax/build/src/protobuf").protobufMinimal);

})(this, function($protobuf) {
    "use strict";

    // Common aliases
    var $Reader = $protobuf.Reader, $Writer = $protobuf.Writer, $util = $protobuf.util;
    
    // Exported root namespace
    var $root = $protobuf.roots._google_cloud_notebooks_protos || ($protobuf.roots._google_cloud_notebooks_protos = {});
    
    $root.google = (function() {
    
        /**
         * Namespace google.
         * @exports google
         * @namespace
         */
        var google = {};
    
        google.cloud = (function() {
    
            /**
             * Namespace cloud.
             * @memberof google
             * @namespace
             */
            var cloud = {};
    
            cloud.notebooks = (function() {
    
                /**
                 * Namespace notebooks.
                 * @memberof google.cloud
                 * @namespace
                 */
                var notebooks = {};
    
                notebooks.v1 = (function() {
    
                    /**
                     * Namespace v1.
                     * @memberof google.cloud.notebooks
                     * @namespace
                     */
                    var v1 = {};
    
                    v1.DiagnosticConfig = (function() {
    
                        /**
                         * Properties of a DiagnosticConfig.
                         * @memberof google.cloud.notebooks.v1
                         * @interface IDiagnosticConfig
                         * @property {string|null} [gcsBucket] DiagnosticConfig gcsBucket
                         * @property {string|null} [relativePath] DiagnosticConfig relativePath
                         * @property {boolean|null} [repairFlagEnabled] DiagnosticConfig repairFlagEnabled
                         * @property {boolean|null} [packetCaptureFlagEnabled] DiagnosticConfig packetCaptureFlagEnabled
                         * @property {boolean|null} [copyHomeFilesFlagEnabled] DiagnosticConfig copyHomeFilesFlagEnabled
                         */
    
                        /**
                         * Constructs a new DiagnosticConfig.
                         * @memberof google.cloud.notebooks.v1
                         * @classdesc Represents a DiagnosticConfig.
                         * @implements IDiagnosticConfig
                         * @constructor
                         * @param {google.cloud.notebooks.v1.IDiagnosticConfig=} [properties] Properties to set
                         */
                        function DiagnosticConfig(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * DiagnosticConfig gcsBucket.
                         * @member {string} gcsBucket
                         * @memberof google.cloud.notebooks.v1.DiagnosticConfig
                         * @instance
                         */
                        DiagnosticConfig.prototype.gcsBucket = "";
    
                        /**
                         * DiagnosticConfig relativePath.
                         * @member {string} relativePath
                         * @memberof google.cloud.notebooks.v1.DiagnosticConfig
                         * @instance
                         */
                        DiagnosticConfig.prototype.relativePath = "";
    
                        /**
                         * DiagnosticConfig repairFlagEnabled.
                         * @member {boolean} repairFlagEnabled
                         * @memberof google.cloud.notebooks.v1.DiagnosticConfig
                         * @instance
                         */
                        DiagnosticConfig.prototype.repairFlagEnabled = false;
    
                        /**
                         * DiagnosticConfig packetCaptureFlagEnabled.
                         * @member {boolean} packetCaptureFlagEnabled
                         * @memberof google.cloud.notebooks.v1.DiagnosticConfig
                         * @instance
                         */
                        DiagnosticConfig.prototype.packetCaptureFlagEnabled = false;
    
                        /**
                         * DiagnosticConfig copyHomeFilesFlagEnabled.
                         * @member {boolean} copyHomeFilesFlagEnabled
                         * @memberof google.cloud.notebooks.v1.DiagnosticConfig
                         * @instance
                         */
                        DiagnosticConfig.prototype.copyHomeFilesFlagEnabled = false;
    
                        /**
                         * Creates a new DiagnosticConfig instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.notebooks.v1.DiagnosticConfig
                         * @static
                         * @param {google.cloud.notebooks.v1.IDiagnosticConfig=} [properties] Properties to set
                         * @returns {google.cloud.notebooks.v1.DiagnosticConfig} DiagnosticConfig instance
                         */
                        DiagnosticConfig.create = function create(properties) {
                            return new DiagnosticConfig(properties);
                        };
    
                        /**
                         * Encodes the specified DiagnosticConfig message. Does not implicitly {@link google.cloud.notebooks.v1.DiagnosticConfig.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.notebooks.v1.DiagnosticConfig
                         * @static
                         * @param {google.cloud.notebooks.v1.IDiagnosticConfig} message DiagnosticConfig message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        DiagnosticConfig.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.gcsBucket != null && Object.hasOwnProperty.call(message, "gcsBucket"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.gcsBucket);
                            if (message.relativePath != null && Object.hasOwnProperty.call(message, "relativePath"))
                                writer.uint32(/* id 2, wireType 2 =*/18).string(message.relativePath);
                            if (message.repairFlagEnabled != null && Object.hasOwnProperty.call(message, "repairFlagEnabled"))
                                writer.uint32(/* id 3, wireType 0 =*/24).bool(message.repairFlagEnabled);
                            if (message.packetCaptureFlagEnabled != null && Object.hasOwnProperty.call(message, "packetCaptureFlagEnabled"))
                                writer.uint32(/* id 4, wireType 0 =*/32).bool(message.packetCaptureFlagEnabled);
                            if (message.copyHomeFilesFlagEnabled != null && Object.hasOwnProperty.call(message, "copyHomeFilesFlagEnabled"))
                                writer.uint32(/* id 5, wireType 0 =*/40).bool(message.copyHomeFilesFlagEnabled);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified DiagnosticConfig message, length delimited. Does not implicitly {@link google.cloud.notebooks.v1.DiagnosticConfig.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.notebooks.v1.DiagnosticConfig
                         * @static
                         * @param {google.cloud.notebooks.v1.IDiagnosticConfig} message DiagnosticConfig message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        DiagnosticConfig.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a DiagnosticConfig message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.notebooks.v1.DiagnosticConfig
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.notebooks.v1.DiagnosticConfig} DiagnosticConfig
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        DiagnosticConfig.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.notebooks.v1.DiagnosticConfig();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.gcsBucket = reader.string();
                                        break;
                                    }
                                case 2: {
                                        message.relativePath = reader.string();
                                        break;
                                    }
                                case 3: {
                                        message.repairFlagEnabled = reader.bool();
                                        break;
                                    }
                                case 4: {
                                        message.packetCaptureFlagEnabled = reader.bool();
                                        break;
                                    }
                                case 5: {
                                        message.copyHomeFilesFlagEnabled = reader.bool();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a DiagnosticConfig message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.notebooks.v1.DiagnosticConfig
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.notebooks.v1.DiagnosticConfig} DiagnosticConfig
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        DiagnosticConfig.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a DiagnosticConfig message.
                         * @function verify
                         * @memberof google.cloud.notebooks.v1.DiagnosticConfig
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        DiagnosticConfig.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.gcsBucket != null && message.hasOwnProperty("gcsBucket"))
                                if (!$util.isString(message.gcsBucket))
                                    return "gcsBucket: string expected";
                            if (message.relativePath != null && message.hasOwnProperty("relativePath"))
                                if (!$util.isString(message.relativePath))
                                    return "relativePath: string expected";
                            if (message.repairFlagEnabled != null && message.hasOwnProperty("repairFlagEnabled"))
                                if (typeof message.repairFlagEnabled !== "boolean")
                                    return "repairFlagEnabled: boolean expected";
                            if (message.packetCaptureFlagEnabled != null && message.hasOwnProperty("packetCaptureFlagEnabled"))
                                if (typeof message.packetCaptureFlagEnabled !== "boolean")
                                    return "packetCaptureFlagEnabled: boolean expected";
                            if (message.copyHomeFilesFlagEnabled != null && message.hasOwnProperty("copyHomeFilesFlagEnabled"))
                                if (typeof message.copyHomeFilesFlagEnabled !== "boolean")
                                    return "copyHomeFilesFlagEnabled: boolean expected";
                            return null;
                        };
    
                        /**
                         * Creates a DiagnosticConfig message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.notebooks.v1.DiagnosticConfig
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.notebooks.v1.DiagnosticConfig} DiagnosticConfig
                         */
                        DiagnosticConfig.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.notebooks.v1.DiagnosticConfig)
                                return object;
                            var message = new $root.google.cloud.notebooks.v1.DiagnosticConfig();
                            if (object.gcsBucket != null)
                                message.gcsBucket = String(object.gcsBucket);
                            if (object.relativePath != null)
                                message.relativePath = String(object.relativePath);
                            if (object.repairFlagEnabled != null)
                                message.repairFlagEnabled = Boolean(object.repairFlagEnabled);
                            if (object.packetCaptureFlagEnabled != null)
                                message.packetCaptureFlagEnabled = Boolean(object.packetCaptureFlagEnabled);
                            if (object.copyHomeFilesFlagEnabled != null)
                                message.copyHomeFilesFlagEnabled = Boolean(object.copyHomeFilesFlagEnabled);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a DiagnosticConfig message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.notebooks.v1.DiagnosticConfig
                         * @static
                         * @param {google.cloud.notebooks.v1.DiagnosticConfig} message DiagnosticConfig
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        DiagnosticConfig.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.gcsBucket = "";
                                object.relativePath = "";
                                object.repairFlagEnabled = false;
                                object.packetCaptureFlagEnabled = false;
                                object.copyHomeFilesFlagEnabled = false;
                            }
                            if (message.gcsBucket != null && message.hasOwnProperty("gcsBucket"))
                                object.gcsBucket = message.gcsBucket;
                            if (message.relativePath != null && message.hasOwnProperty("relativePath"))
                                object.relativePath = message.relativePath;
                            if (message.repairFlagEnabled != null && message.hasOwnProperty("repairFlagEnabled"))
                                object.repairFlagEnabled = message.repairFlagEnabled;
                            if (message.packetCaptureFlagEnabled != null && message.hasOwnProperty("packetCaptureFlagEnabled"))
                                object.packetCaptureFlagEnabled = message.packetCaptureFlagEnabled;
                            if (message.copyHomeFilesFlagEnabled != null && message.hasOwnProperty("copyHomeFilesFlagEnabled"))
                                object.copyHomeFilesFlagEnabled = message.copyHomeFilesFlagEnabled;
                            return object;
                        };
    
                        /**
                         * Converts this DiagnosticConfig to JSON.
                         * @function toJSON
                         * @memberof google.cloud.notebooks.v1.DiagnosticConfig
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        DiagnosticConfig.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for DiagnosticConfig
                         * @function getTypeUrl
                         * @memberof google.cloud.notebooks.v1.DiagnosticConfig
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        DiagnosticConfig.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.notebooks.v1.DiagnosticConfig";
                        };
    
                        return DiagnosticConfig;
                    })();
    
                    v1.Environment = (function() {
    
                        /**
                         * Properties of an Environment.
                         * @memberof google.cloud.notebooks.v1
                         * @interface IEnvironment
                         * @property {string|null} [name] Environment name
                         * @property {string|null} [displayName] Environment displayName
                         * @property {string|null} [description] Environment description
                         * @property {google.cloud.notebooks.v1.IVmImage|null} [vmImage] Environment vmImage
                         * @property {google.cloud.notebooks.v1.IContainerImage|null} [containerImage] Environment containerImage
                         * @property {string|null} [postStartupScript] Environment postStartupScript
                         * @property {google.protobuf.ITimestamp|null} [createTime] Environment createTime
                         */
    
                        /**
                         * Constructs a new Environment.
                         * @memberof google.cloud.notebooks.v1
                         * @classdesc Represents an Environment.
                         * @implements IEnvironment
                         * @constructor
                         * @param {google.cloud.notebooks.v1.IEnvironment=} [properties] Properties to set
                         */
                        function Environment(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * Environment name.
                         * @member {string} name
                         * @memberof google.cloud.notebooks.v1.Environment
                         * @instance
                         */
                        Environment.prototype.name = "";
    
                        /**
                         * Environment displayName.
                         * @member {string} displayName
                         * @memberof google.cloud.notebooks.v1.Environment
                         * @instance
                         */
                        Environment.prototype.displayName = "";
    
                        /**
                         * Environment description.
                         * @member {string} description
                         * @memberof google.cloud.notebooks.v1.Environment
                         * @instance
                         */
                        Environment.prototype.description = "";
    
                        /**
                         * Environment vmImage.
                         * @member {google.cloud.notebooks.v1.IVmImage|null|undefined} vmImage
                         * @memberof google.cloud.notebooks.v1.Environment
                         * @instance
                         */
                        Environment.prototype.vmImage = null;
    
                        /**
                         * Environment containerImage.
                         * @member {google.cloud.notebooks.v1.IContainerImage|null|undefined} containerImage
                         * @memberof google.cloud.notebooks.v1.Environment
                         * @instance
                         */
                        Environment.prototype.containerImage = null;
    
                        /**
                         * Environment postStartupScript.
                         * @member {string} postStartupScript
                         * @memberof google.cloud.notebooks.v1.Environment
                         * @instance
                         */
                        Environment.prototype.postStartupScript = "";
    
                        /**
                         * Environment createTime.
                         * @member {google.protobuf.ITimestamp|null|undefined} createTime
                         * @memberof google.cloud.notebooks.v1.Environment
                         * @instance
                         */
                        Environment.prototype.createTime = null;
    
                        // OneOf field names bound to virtual getters and setters
                        var $oneOfFields;
    
                        /**
                         * Environment imageType.
                         * @member {"vmImage"|"containerImage"|undefined} imageType
                         * @memberof google.cloud.notebooks.v1.Environment
                         * @instance
                         */
                        Object.defineProperty(Environment.prototype, "imageType", {
                            get: $util.oneOfGetter($oneOfFields = ["vmImage", "containerImage"]),
                            set: $util.oneOfSetter($oneOfFields)
                        });
    
                        /**
                         * Creates a new Environment instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.notebooks.v1.Environment
                         * @static
                         * @param {google.cloud.notebooks.v1.IEnvironment=} [properties] Properties to set
                         * @returns {google.cloud.notebooks.v1.Environment} Environment instance
                         */
                        Environment.create = function create(properties) {
                            return new Environment(properties);
                        };
    
                        /**
                         * Encodes the specified Environment message. Does not implicitly {@link google.cloud.notebooks.v1.Environment.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.notebooks.v1.Environment
                         * @static
                         * @param {google.cloud.notebooks.v1.IEnvironment} message Environment message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        Environment.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                            if (message.displayName != null && Object.hasOwnProperty.call(message, "displayName"))
                                writer.uint32(/* id 2, wireType 2 =*/18).string(message.displayName);
                            if (message.description != null && Object.hasOwnProperty.call(message, "description"))
                                writer.uint32(/* id 3, wireType 2 =*/26).string(message.description);
                            if (message.vmImage != null && Object.hasOwnProperty.call(message, "vmImage"))
                                $root.google.cloud.notebooks.v1.VmImage.encode(message.vmImage, writer.uint32(/* id 6, wireType 2 =*/50).fork()).ldelim();
                            if (message.containerImage != null && Object.hasOwnProperty.call(message, "containerImage"))
                                $root.google.cloud.notebooks.v1.ContainerImage.encode(message.containerImage, writer.uint32(/* id 7, wireType 2 =*/58).fork()).ldelim();
                            if (message.postStartupScript != null && Object.hasOwnProperty.call(message, "postStartupScript"))
                                writer.uint32(/* id 8, wireType 2 =*/66).string(message.postStartupScript);
                            if (message.createTime != null && Object.hasOwnProperty.call(message, "createTime"))
                                $root.google.protobuf.Timestamp.encode(message.createTime, writer.uint32(/* id 9, wireType 2 =*/74).fork()).ldelim();
                            return writer;
                        };
    
                        /**
                         * Encodes the specified Environment message, length delimited. Does not implicitly {@link google.cloud.notebooks.v1.Environment.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.notebooks.v1.Environment
                         * @static
                         * @param {google.cloud.notebooks.v1.IEnvironment} message Environment message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        Environment.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes an Environment message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.notebooks.v1.Environment
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.notebooks.v1.Environment} Environment
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        Environment.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.notebooks.v1.Environment();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.name = reader.string();
                                        break;
                                    }
                                case 2: {
                                        message.displayName = reader.string();
                                        break;
                                    }
                                case 3: {
                                        message.description = reader.string();
                                        break;
                                    }
                                case 6: {
                                        message.vmImage = $root.google.cloud.notebooks.v1.VmImage.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 7: {
                                        message.containerImage = $root.google.cloud.notebooks.v1.ContainerImage.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 8: {
                                        message.postStartupScript = reader.string();
                                        break;
                                    }
                                case 9: {
                                        message.createTime = $root.google.protobuf.Timestamp.decode(reader, reader.uint32());
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes an Environment message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.notebooks.v1.Environment
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.notebooks.v1.Environment} Environment
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        Environment.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies an Environment message.
                         * @function verify
                         * @memberof google.cloud.notebooks.v1.Environment
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        Environment.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            var properties = {};
                            if (message.name != null && message.hasOwnProperty("name"))
                                if (!$util.isString(message.name))
                                    return "name: string expected";
                            if (message.displayName != null && message.hasOwnProperty("displayName"))
                                if (!$util.isString(message.displayName))
                                    return "displayName: string expected";
                            if (message.description != null && message.hasOwnProperty("description"))
                                if (!$util.isString(message.description))
                                    return "description: string expected";
                            if (message.vmImage != null && message.hasOwnProperty("vmImage")) {
                                properties.imageType = 1;
                                {
                                    var error = $root.google.cloud.notebooks.v1.VmImage.verify(message.vmImage);
                                    if (error)
                                        return "vmImage." + error;
                                }
                            }
                            if (message.containerImage != null && message.hasOwnProperty("containerImage")) {
                                if (properties.imageType === 1)
                                    return "imageType: multiple values";
                                properties.imageType = 1;
                                {
                                    var error = $root.google.cloud.notebooks.v1.ContainerImage.verify(message.containerImage);
                                    if (error)
                                        return "containerImage." + error;
                                }
                            }
                            if (message.postStartupScript != null && message.hasOwnProperty("postStartupScript"))
                                if (!$util.isString(message.postStartupScript))
                                    return "postStartupScript: string expected";
                            if (message.createTime != null && message.hasOwnProperty("createTime")) {
                                var error = $root.google.protobuf.Timestamp.verify(message.createTime);
                                if (error)
                                    return "createTime." + error;
                            }
                            return null;
                        };
    
                        /**
                         * Creates an Environment message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.notebooks.v1.Environment
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.notebooks.v1.Environment} Environment
                         */
                        Environment.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.notebooks.v1.Environment)
                                return object;
                            var message = new $root.google.cloud.notebooks.v1.Environment();
                            if (object.name != null)
                                message.name = String(object.name);
                            if (object.displayName != null)
                                message.displayName = String(object.displayName);
                            if (object.description != null)
                                message.description = String(object.description);
                            if (object.vmImage != null) {
                                if (typeof object.vmImage !== "object")
                                    throw TypeError(".google.cloud.notebooks.v1.Environment.vmImage: object expected");
                                message.vmImage = $root.google.cloud.notebooks.v1.VmImage.fromObject(object.vmImage);
                            }
                            if (object.containerImage != null) {
                                if (typeof object.containerImage !== "object")
                                    throw TypeError(".google.cloud.notebooks.v1.Environment.containerImage: object expected");
                                message.containerImage = $root.google.cloud.notebooks.v1.ContainerImage.fromObject(object.containerImage);
                            }
                            if (object.postStartupScript != null)
                                message.postStartupScript = String(object.postStartupScript);
                            if (object.createTime != null) {
                                if (typeof object.createTime !== "object")
                                    throw TypeError(".google.cloud.notebooks.v1.Environment.createTime: object expected");
                                message.createTime = $root.google.protobuf.Timestamp.fromObject(object.createTime);
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from an Environment message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.notebooks.v1.Environment
                         * @static
                         * @param {google.cloud.notebooks.v1.Environment} message Environment
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        Environment.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.name = "";
                                object.displayName = "";
                                object.description = "";
                                object.postStartupScript = "";
                                object.createTime = null;
                            }
                            if (message.name != null && message.hasOwnProperty("name"))
                                object.name = message.name;
                            if (message.displayName != null && message.hasOwnProperty("displayName"))
                                object.displayName = message.displayName;
                            if (message.description != null && message.hasOwnProperty("description"))
                                object.description = message.description;
                            if (message.vmImage != null && message.hasOwnProperty("vmImage")) {
                                object.vmImage = $root.google.cloud.notebooks.v1.VmImage.toObject(message.vmImage, options);
                                if (options.oneofs)
                                    object.imageType = "vmImage";
                            }
                            if (message.containerImage != null && message.hasOwnProperty("containerImage")) {
                                object.containerImage = $root.google.cloud.notebooks.v1.ContainerImage.toObject(message.containerImage, options);
                                if (options.oneofs)
                                    object.imageType = "containerImage";
                            }
                            if (message.postStartupScript != null && message.hasOwnProperty("postStartupScript"))
                                object.postStartupScript = message.postStartupScript;
                            if (message.createTime != null && message.hasOwnProperty("createTime"))
                                object.createTime = $root.google.protobuf.Timestamp.toObject(message.createTime, options);
                            return object;
                        };
    
                        /**
                         * Converts this Environment to JSON.
                         * @function toJSON
                         * @memberof google.cloud.notebooks.v1.Environment
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        Environment.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for Environment
                         * @function getTypeUrl
                         * @memberof google.cloud.notebooks.v1.Environment
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        Environment.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.notebooks.v1.Environment";
                        };
    
                        return Environment;
                    })();
    
                    v1.VmImage = (function() {
    
                        /**
                         * Properties of a VmImage.
                         * @memberof google.cloud.notebooks.v1
                         * @interface IVmImage
                         * @property {string|null} [project] VmImage project
                         * @property {string|null} [imageName] VmImage imageName
                         * @property {string|null} [imageFamily] VmImage imageFamily
                         */
    
                        /**
                         * Constructs a new VmImage.
                         * @memberof google.cloud.notebooks.v1
                         * @classdesc Represents a VmImage.
                         * @implements IVmImage
                         * @constructor
                         * @param {google.cloud.notebooks.v1.IVmImage=} [properties] Properties to set
                         */
                        function VmImage(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * VmImage project.
                         * @member {string} project
                         * @memberof google.cloud.notebooks.v1.VmImage
                         * @instance
                         */
                        VmImage.prototype.project = "";
    
                        /**
                         * VmImage imageName.
                         * @member {string|null|undefined} imageName
                         * @memberof google.cloud.notebooks.v1.VmImage
                         * @instance
                         */
                        VmImage.prototype.imageName = null;
    
                        /**
                         * VmImage imageFamily.
                         * @member {string|null|undefined} imageFamily
                         * @memberof google.cloud.notebooks.v1.VmImage
                         * @instance
                         */
                        VmImage.prototype.imageFamily = null;
    
                        // OneOf field names bound to virtual getters and setters
                        var $oneOfFields;
    
                        /**
                         * VmImage image.
                         * @member {"imageName"|"imageFamily"|undefined} image
                         * @memberof google.cloud.notebooks.v1.VmImage
                         * @instance
                         */
                        Object.defineProperty(VmImage.prototype, "image", {
                            get: $util.oneOfGetter($oneOfFields = ["imageName", "imageFamily"]),
                            set: $util.oneOfSetter($oneOfFields)
                        });
    
                        /**
                         * Creates a new VmImage instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.notebooks.v1.VmImage
                         * @static
                         * @param {google.cloud.notebooks.v1.IVmImage=} [properties] Properties to set
                         * @returns {google.cloud.notebooks.v1.VmImage} VmImage instance
                         */
                        VmImage.create = function create(properties) {
                            return new VmImage(properties);
                        };
    
                        /**
                         * Encodes the specified VmImage message. Does not implicitly {@link google.cloud.notebooks.v1.VmImage.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.notebooks.v1.VmImage
                         * @static
                         * @param {google.cloud.notebooks.v1.IVmImage} message VmImage message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        VmImage.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.project != null && Object.hasOwnProperty.call(message, "project"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.project);
                            if (message.imageName != null && Object.hasOwnProperty.call(message, "imageName"))
                                writer.uint32(/* id 2, wireType 2 =*/18).string(message.imageName);
                            if (message.imageFamily != null && Object.hasOwnProperty.call(message, "imageFamily"))
                                writer.uint32(/* id 3, wireType 2 =*/26).string(message.imageFamily);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified VmImage message, length delimited. Does not implicitly {@link google.cloud.notebooks.v1.VmImage.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.notebooks.v1.VmImage
                         * @static
                         * @param {google.cloud.notebooks.v1.IVmImage} message VmImage message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        VmImage.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a VmImage message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.notebooks.v1.VmImage
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.notebooks.v1.VmImage} VmImage
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        VmImage.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.notebooks.v1.VmImage();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.project = reader.string();
                                        break;
                                    }
                                case 2: {
                                        message.imageName = reader.string();
                                        break;
                                    }
                                case 3: {
                                        message.imageFamily = reader.string();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a VmImage message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.notebooks.v1.VmImage
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.notebooks.v1.VmImage} VmImage
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        VmImage.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a VmImage message.
                         * @function verify
                         * @memberof google.cloud.notebooks.v1.VmImage
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        VmImage.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            var properties = {};
                            if (message.project != null && message.hasOwnProperty("project"))
                                if (!$util.isString(message.project))
                                    return "project: string expected";
                            if (message.imageName != null && message.hasOwnProperty("imageName")) {
                                properties.image = 1;
                                if (!$util.isString(message.imageName))
                                    return "imageName: string expected";
                            }
                            if (message.imageFamily != null && message.hasOwnProperty("imageFamily")) {
                                if (properties.image === 1)
                                    return "image: multiple values";
                                properties.image = 1;
                                if (!$util.isString(message.imageFamily))
                                    return "imageFamily: string expected";
                            }
                            return null;
                        };
    
                        /**
                         * Creates a VmImage message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.notebooks.v1.VmImage
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.notebooks.v1.VmImage} VmImage
                         */
                        VmImage.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.notebooks.v1.VmImage)
                                return object;
                            var message = new $root.google.cloud.notebooks.v1.VmImage();
                            if (object.project != null)
                                message.project = String(object.project);
                            if (object.imageName != null)
                                message.imageName = String(object.imageName);
                            if (object.imageFamily != null)
                                message.imageFamily = String(object.imageFamily);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a VmImage message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.notebooks.v1.VmImage
                         * @static
                         * @param {google.cloud.notebooks.v1.VmImage} message VmImage
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        VmImage.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults)
                                object.project = "";
                            if (message.project != null && message.hasOwnProperty("project"))
                                object.project = message.project;
                            if (message.imageName != null && message.hasOwnProperty("imageName")) {
                                object.imageName = message.imageName;
                                if (options.oneofs)
                                    object.image = "imageName";
                            }
                            if (message.imageFamily != null && message.hasOwnProperty("imageFamily")) {
                                object.imageFamily = message.imageFamily;
                                if (options.oneofs)
                                    object.image = "imageFamily";
                            }
                            return object;
                        };
    
                        /**
                         * Converts this VmImage to JSON.
                         * @function toJSON
                         * @memberof google.cloud.notebooks.v1.VmImage
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        VmImage.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for VmImage
                         * @function getTypeUrl
                         * @memberof google.cloud.notebooks.v1.VmImage
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        VmImage.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.notebooks.v1.VmImage";
                        };
    
                        return VmImage;
                    })();
    
                    v1.ContainerImage = (function() {
    
                        /**
                         * Properties of a ContainerImage.
                         * @memberof google.cloud.notebooks.v1
                         * @interface IContainerImage
                         * @property {string|null} [repository] ContainerImage repository
                         * @property {string|null} [tag] ContainerImage tag
                         */
    
                        /**
                         * Constructs a new ContainerImage.
                         * @memberof google.cloud.notebooks.v1
                         * @classdesc Represents a ContainerImage.
                         * @implements IContainerImage
                         * @constructor
                         * @param {google.cloud.notebooks.v1.IContainerImage=} [properties] Properties to set
                         */
                        function ContainerImage(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * ContainerImage repository.
                         * @member {string} repository
                         * @memberof google.cloud.notebooks.v1.ContainerImage
                         * @instance
                         */
                        ContainerImage.prototype.repository = "";
    
                        /**
                         * ContainerImage tag.
                         * @member {string} tag
                         * @memberof google.cloud.notebooks.v1.ContainerImage
                         * @instance
                         */
                        ContainerImage.prototype.tag = "";
    
                        /**
                         * Creates a new ContainerImage instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.notebooks.v1.ContainerImage
                         * @static
                         * @param {google.cloud.notebooks.v1.IContainerImage=} [properties] Properties to set
                         * @returns {google.cloud.notebooks.v1.ContainerImage} ContainerImage instance
                         */
                        ContainerImage.create = function create(properties) {
                            return new ContainerImage(properties);
                        };
    
                        /**
                         * Encodes the specified ContainerImage message. Does not implicitly {@link google.cloud.notebooks.v1.ContainerImage.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.notebooks.v1.ContainerImage
                         * @static
                         * @param {google.cloud.notebooks.v1.IContainerImage} message ContainerImage message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        ContainerImage.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.repository != null && Object.hasOwnProperty.call(message, "repository"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.repository);
                            if (message.tag != null && Object.hasOwnProperty.call(message, "tag"))
                                writer.uint32(/* id 2, wireType 2 =*/18).string(message.tag);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified ContainerImage message, length delimited. Does not implicitly {@link google.cloud.notebooks.v1.ContainerImage.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.notebooks.v1.ContainerImage
                         * @static
                         * @param {google.cloud.notebooks.v1.IContainerImage} message ContainerImage message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        ContainerImage.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a ContainerImage message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.notebooks.v1.ContainerImage
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.notebooks.v1.ContainerImage} ContainerImage
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        ContainerImage.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.notebooks.v1.ContainerImage();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.repository = reader.string();
                                        break;
                                    }
                                case 2: {
                                        message.tag = reader.string();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a ContainerImage message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.notebooks.v1.ContainerImage
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.notebooks.v1.ContainerImage} ContainerImage
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        ContainerImage.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a ContainerImage message.
                         * @function verify
                         * @memberof google.cloud.notebooks.v1.ContainerImage
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        ContainerImage.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.repository != null && message.hasOwnProperty("repository"))
                                if (!$util.isString(message.repository))
                                    return "repository: string expected";
                            if (message.tag != null && message.hasOwnProperty("tag"))
                                if (!$util.isString(message.tag))
                                    return "tag: string expected";
                            return null;
                        };
    
                        /**
                         * Creates a ContainerImage message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.notebooks.v1.ContainerImage
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.notebooks.v1.ContainerImage} ContainerImage
                         */
                        ContainerImage.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.notebooks.v1.ContainerImage)
                                return object;
                            var message = new $root.google.cloud.notebooks.v1.ContainerImage();
                            if (object.repository != null)
                                message.repository = String(object.repository);
                            if (object.tag != null)
                                message.tag = String(object.tag);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a ContainerImage message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.notebooks.v1.ContainerImage
                         * @static
                         * @param {google.cloud.notebooks.v1.ContainerImage} message ContainerImage
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        ContainerImage.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.repository = "";
                                object.tag = "";
                            }
                            if (message.repository != null && message.hasOwnProperty("repository"))
                                object.repository = message.repository;
                            if (message.tag != null && message.hasOwnProperty("tag"))
                                object.tag = message.tag;
                            return object;
                        };
    
                        /**
                         * Converts this ContainerImage to JSON.
                         * @function toJSON
                         * @memberof google.cloud.notebooks.v1.ContainerImage
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        ContainerImage.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for ContainerImage
                         * @function getTypeUrl
                         * @memberof google.cloud.notebooks.v1.ContainerImage
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        ContainerImage.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.notebooks.v1.ContainerImage";
                        };
    
                        return ContainerImage;
                    })();
    
                    v1.Event = (function() {
    
                        /**
                         * Properties of an Event.
                         * @memberof google.cloud.notebooks.v1
                         * @interface IEvent
                         * @property {google.protobuf.ITimestamp|null} [reportTime] Event reportTime
                         * @property {google.cloud.notebooks.v1.Event.EventType|null} [type] Event type
                         * @property {Object.<string,string>|null} [details] Event details
                         */
    
                        /**
                         * Constructs a new Event.
                         * @memberof google.cloud.notebooks.v1
                         * @classdesc Represents an Event.
                         * @implements IEvent
                         * @constructor
                         * @param {google.cloud.notebooks.v1.IEvent=} [properties] Properties to set
                         */
                        function Event(properties) {
                            this.details = {};
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * Event reportTime.
                         * @member {google.protobuf.ITimestamp|null|undefined} reportTime
                         * @memberof google.cloud.notebooks.v1.Event
                         * @instance
                         */
                        Event.prototype.reportTime = null;
    
                        /**
                         * Event type.
                         * @member {google.cloud.notebooks.v1.Event.EventType} type
                         * @memberof google.cloud.notebooks.v1.Event
                         * @instance
                         */
                        Event.prototype.type = 0;
    
                        /**
                         * Event details.
                         * @member {Object.<string,string>} details
                         * @memberof google.cloud.notebooks.v1.Event
                         * @instance
                         */
                        Event.prototype.details = $util.emptyObject;
    
                        /**
                         * Creates a new Event instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.notebooks.v1.Event
                         * @static
                         * @param {google.cloud.notebooks.v1.IEvent=} [properties] Properties to set
                         * @returns {google.cloud.notebooks.v1.Event} Event instance
                         */
                        Event.create = function create(properties) {
                            return new Event(properties);
                        };
    
                        /**
                         * Encodes the specified Event message. Does not implicitly {@link google.cloud.notebooks.v1.Event.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.notebooks.v1.Event
                         * @static
                         * @param {google.cloud.notebooks.v1.IEvent} message Event message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        Event.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.reportTime != null && Object.hasOwnProperty.call(message, "reportTime"))
                                $root.google.protobuf.Timestamp.encode(message.reportTime, writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                            if (message.type != null && Object.hasOwnProperty.call(message, "type"))
                                writer.uint32(/* id 2, wireType 0 =*/16).int32(message.type);
                            if (message.details != null && Object.hasOwnProperty.call(message, "details"))
                                for (var keys = Object.keys(message.details), i = 0; i < keys.length; ++i)
                                    writer.uint32(/* id 3, wireType 2 =*/26).fork().uint32(/* id 1, wireType 2 =*/10).string(keys[i]).uint32(/* id 2, wireType 2 =*/18).string(message.details[keys[i]]).ldelim();
                            return writer;
                        };
    
                        /**
                         * Encodes the specified Event message, length delimited. Does not implicitly {@link google.cloud.notebooks.v1.Event.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.notebooks.v1.Event
                         * @static
                         * @param {google.cloud.notebooks.v1.IEvent} message Event message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        Event.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes an Event message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.notebooks.v1.Event
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.notebooks.v1.Event} Event
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        Event.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.notebooks.v1.Event(), key, value;
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.reportTime = $root.google.protobuf.Timestamp.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 2: {
                                        message.type = reader.int32();
                                        break;
                                    }
                                case 3: {
                                        if (message.details === $util.emptyObject)
                                            message.details = {};
                                        var end2 = reader.uint32() + reader.pos;
                                        key = "";
                                        value = "";
                                        while (reader.pos < end2) {
                                            var tag2 = reader.uint32();
                                            switch (tag2 >>> 3) {
                                            case 1:
                                                key = reader.string();
                                                break;
                                            case 2:
                                                value = reader.string();
                                                break;
                                            default:
                                                reader.skipType(tag2 & 7);
                                                break;
                                            }
                                        }
                                        message.details[key] = value;
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes an Event message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.notebooks.v1.Event
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.notebooks.v1.Event} Event
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        Event.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies an Event message.
                         * @function verify
                         * @memberof google.cloud.notebooks.v1.Event
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        Event.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.reportTime != null && message.hasOwnProperty("reportTime")) {
                                var error = $root.google.protobuf.Timestamp.verify(message.reportTime);
                                if (error)
                                    return "reportTime." + error;
                            }
                            if (message.type != null && message.hasOwnProperty("type"))
                                switch (message.type) {
                                default:
                                    return "type: enum value expected";
                                case 0:
                                case 1:
                                case 2:
                                case 3:
                                case 4:
                                    break;
                                }
                            if (message.details != null && message.hasOwnProperty("details")) {
                                if (!$util.isObject(message.details))
                                    return "details: object expected";
                                var key = Object.keys(message.details);
                                for (var i = 0; i < key.length; ++i)
                                    if (!$util.isString(message.details[key[i]]))
                                        return "details: string{k:string} expected";
                            }
                            return null;
                        };
    
                        /**
                         * Creates an Event message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.notebooks.v1.Event
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.notebooks.v1.Event} Event
                         */
                        Event.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.notebooks.v1.Event)
                                return object;
                            var message = new $root.google.cloud.notebooks.v1.Event();
                            if (object.reportTime != null) {
                                if (typeof object.reportTime !== "object")
                                    throw TypeError(".google.cloud.notebooks.v1.Event.reportTime: object expected");
                                message.reportTime = $root.google.protobuf.Timestamp.fromObject(object.reportTime);
                            }
                            switch (object.type) {
                            default:
                                if (typeof object.type === "number") {
                                    message.type = object.type;
                                    break;
                                }
                                break;
                            case "EVENT_TYPE_UNSPECIFIED":
                            case 0:
                                message.type = 0;
                                break;
                            case "IDLE":
                            case 1:
                                message.type = 1;
                                break;
                            case "HEARTBEAT":
                            case 2:
                                message.type = 2;
                                break;
                            case "HEALTH":
                            case 3:
                                message.type = 3;
                                break;
                            case "MAINTENANCE":
                            case 4:
                                message.type = 4;
                                break;
                            }
                            if (object.details) {
                                if (typeof object.details !== "object")
                                    throw TypeError(".google.cloud.notebooks.v1.Event.details: object expected");
                                message.details = {};
                                for (var keys = Object.keys(object.details), i = 0; i < keys.length; ++i)
                                    message.details[keys[i]] = String(object.details[keys[i]]);
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from an Event message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.notebooks.v1.Event
                         * @static
                         * @param {google.cloud.notebooks.v1.Event} message Event
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        Event.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.objects || options.defaults)
                                object.details = {};
                            if (options.defaults) {
                                object.reportTime = null;
                                object.type = options.enums === String ? "EVENT_TYPE_UNSPECIFIED" : 0;
                            }
                            if (message.reportTime != null && message.hasOwnProperty("reportTime"))
                                object.reportTime = $root.google.protobuf.Timestamp.toObject(message.reportTime, options);
                            if (message.type != null && message.hasOwnProperty("type"))
                                object.type = options.enums === String ? $root.google.cloud.notebooks.v1.Event.EventType[message.type] === undefined ? message.type : $root.google.cloud.notebooks.v1.Event.EventType[message.type] : message.type;
                            var keys2;
                            if (message.details && (keys2 = Object.keys(message.details)).length) {
                                object.details = {};
                                for (var j = 0; j < keys2.length; ++j)
                                    object.details[keys2[j]] = message.details[keys2[j]];
                            }
                            return object;
                        };
    
                        /**
                         * Converts this Event to JSON.
                         * @function toJSON
                         * @memberof google.cloud.notebooks.v1.Event
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        Event.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for Event
                         * @function getTypeUrl
                         * @memberof google.cloud.notebooks.v1.Event
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        Event.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.notebooks.v1.Event";
                        };
    
                        /**
                         * EventType enum.
                         * @name google.cloud.notebooks.v1.Event.EventType
                         * @enum {number}
                         * @property {number} EVENT_TYPE_UNSPECIFIED=0 EVENT_TYPE_UNSPECIFIED value
                         * @property {number} IDLE=1 IDLE value
                         * @property {number} HEARTBEAT=2 HEARTBEAT value
                         * @property {number} HEALTH=3 HEALTH value
                         * @property {number} MAINTENANCE=4 MAINTENANCE value
                         */
                        Event.EventType = (function() {
                            var valuesById = {}, values = Object.create(valuesById);
                            values[valuesById[0] = "EVENT_TYPE_UNSPECIFIED"] = 0;
                            values[valuesById[1] = "IDLE"] = 1;
                            values[valuesById[2] = "HEARTBEAT"] = 2;
                            values[valuesById[3] = "HEALTH"] = 3;
                            values[valuesById[4] = "MAINTENANCE"] = 4;
                            return values;
                        })();
    
                        return Event;
                    })();
    
                    v1.ExecutionTemplate = (function() {
    
                        /**
                         * Properties of an ExecutionTemplate.
                         * @memberof google.cloud.notebooks.v1
                         * @interface IExecutionTemplate
                         * @property {google.cloud.notebooks.v1.ExecutionTemplate.ScaleTier|null} [scaleTier] ExecutionTemplate scaleTier
                         * @property {string|null} [masterType] ExecutionTemplate masterType
                         * @property {google.cloud.notebooks.v1.ExecutionTemplate.ISchedulerAcceleratorConfig|null} [acceleratorConfig] ExecutionTemplate acceleratorConfig
                         * @property {Object.<string,string>|null} [labels] ExecutionTemplate labels
                         * @property {string|null} [inputNotebookFile] ExecutionTemplate inputNotebookFile
                         * @property {string|null} [containerImageUri] ExecutionTemplate containerImageUri
                         * @property {string|null} [outputNotebookFolder] ExecutionTemplate outputNotebookFolder
                         * @property {string|null} [paramsYamlFile] ExecutionTemplate paramsYamlFile
                         * @property {string|null} [parameters] ExecutionTemplate parameters
                         * @property {string|null} [serviceAccount] ExecutionTemplate serviceAccount
                         * @property {google.cloud.notebooks.v1.ExecutionTemplate.JobType|null} [jobType] ExecutionTemplate jobType
                         * @property {google.cloud.notebooks.v1.ExecutionTemplate.IDataprocParameters|null} [dataprocParameters] ExecutionTemplate dataprocParameters
                         * @property {google.cloud.notebooks.v1.ExecutionTemplate.IVertexAIParameters|null} [vertexAiParameters] ExecutionTemplate vertexAiParameters
                         * @property {string|null} [kernelSpec] ExecutionTemplate kernelSpec
                         * @property {string|null} [tensorboard] ExecutionTemplate tensorboard
                         */
    
                        /**
                         * Constructs a new ExecutionTemplate.
                         * @memberof google.cloud.notebooks.v1
                         * @classdesc Represents an ExecutionTemplate.
                         * @implements IExecutionTemplate
                         * @constructor
                         * @param {google.cloud.notebooks.v1.IExecutionTemplate=} [properties] Properties to set
                         */
                        function ExecutionTemplate(properties) {
                            this.labels = {};
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * ExecutionTemplate scaleTier.
                         * @member {google.cloud.notebooks.v1.ExecutionTemplate.ScaleTier} scaleTier
                         * @memberof google.cloud.notebooks.v1.ExecutionTemplate
                         * @instance
                         */
                        ExecutionTemplate.prototype.scaleTier = 0;
    
                        /**
                         * ExecutionTemplate masterType.
                         * @member {string} masterType
                         * @memberof google.cloud.notebooks.v1.ExecutionTemplate
                         * @instance
                         */
                        ExecutionTemplate.prototype.masterType = "";
    
                        /**
                         * ExecutionTemplate acceleratorConfig.
                         * @member {google.cloud.notebooks.v1.ExecutionTemplate.ISchedulerAcceleratorConfig|null|undefined} acceleratorConfig
                         * @memberof google.cloud.notebooks.v1.ExecutionTemplate
                         * @instance
                         */
                        ExecutionTemplate.prototype.acceleratorConfig = null;
    
                        /**
                         * ExecutionTemplate labels.
                         * @member {Object.<string,string>} labels
                         * @memberof google.cloud.notebooks.v1.ExecutionTemplate
                         * @instance
                         */
                        ExecutionTemplate.prototype.labels = $util.emptyObject;
    
                        /**
                         * ExecutionTemplate inputNotebookFile.
                         * @member {string} inputNotebookFile
                         * @memberof google.cloud.notebooks.v1.ExecutionTemplate
                         * @instance
                         */
                        ExecutionTemplate.prototype.inputNotebookFile = "";
    
                        /**
                         * ExecutionTemplate containerImageUri.
                         * @member {string} containerImageUri
                         * @memberof google.cloud.notebooks.v1.ExecutionTemplate
                         * @instance
                         */
                        ExecutionTemplate.prototype.containerImageUri = "";
    
                        /**
                         * ExecutionTemplate outputNotebookFolder.
                         * @member {string} outputNotebookFolder
                         * @memberof google.cloud.notebooks.v1.ExecutionTemplate
                         * @instance
                         */
                        ExecutionTemplate.prototype.outputNotebookFolder = "";
    
                        /**
                         * ExecutionTemplate paramsYamlFile.
                         * @member {string} paramsYamlFile
                         * @memberof google.cloud.notebooks.v1.ExecutionTemplate
                         * @instance
                         */
                        ExecutionTemplate.prototype.paramsYamlFile = "";
    
                        /**
                         * ExecutionTemplate parameters.
                         * @member {string} parameters
                         * @memberof google.cloud.notebooks.v1.ExecutionTemplate
                         * @instance
                         */
                        ExecutionTemplate.prototype.parameters = "";
    
                        /**
                         * ExecutionTemplate serviceAccount.
                         * @member {string} serviceAccount
                         * @memberof google.cloud.notebooks.v1.ExecutionTemplate
                         * @instance
                         */
                        ExecutionTemplate.prototype.serviceAccount = "";
    
                        /**
                         * ExecutionTemplate jobType.
                         * @member {google.cloud.notebooks.v1.ExecutionTemplate.JobType} jobType
                         * @memberof google.cloud.notebooks.v1.ExecutionTemplate
                         * @instance
                         */
                        ExecutionTemplate.prototype.jobType = 0;
    
                        /**
                         * ExecutionTemplate dataprocParameters.
                         * @member {google.cloud.notebooks.v1.ExecutionTemplate.IDataprocParameters|null|undefined} dataprocParameters
                         * @memberof google.cloud.notebooks.v1.ExecutionTemplate
                         * @instance
                         */
                        ExecutionTemplate.prototype.dataprocParameters = null;
    
                        /**
                         * ExecutionTemplate vertexAiParameters.
                         * @member {google.cloud.notebooks.v1.ExecutionTemplate.IVertexAIParameters|null|undefined} vertexAiParameters
                         * @memberof google.cloud.notebooks.v1.ExecutionTemplate
                         * @instance
                         */
                        ExecutionTemplate.prototype.vertexAiParameters = null;
    
                        /**
                         * ExecutionTemplate kernelSpec.
                         * @member {string} kernelSpec
                         * @memberof google.cloud.notebooks.v1.ExecutionTemplate
                         * @instance
                         */
                        ExecutionTemplate.prototype.kernelSpec = "";
    
                        /**
                         * ExecutionTemplate tensorboard.
                         * @member {string} tensorboard
                         * @memberof google.cloud.notebooks.v1.ExecutionTemplate
                         * @instance
                         */
                        ExecutionTemplate.prototype.tensorboard = "";
    
                        // OneOf field names bound to virtual getters and setters
                        var $oneOfFields;
    
                        /**
                         * ExecutionTemplate jobParameters.
                         * @member {"dataprocParameters"|"vertexAiParameters"|undefined} jobParameters
                         * @memberof google.cloud.notebooks.v1.ExecutionTemplate
                         * @instance
                         */
                        Object.defineProperty(ExecutionTemplate.prototype, "jobParameters", {
                            get: $util.oneOfGetter($oneOfFields = ["dataprocParameters", "vertexAiParameters"]),
                            set: $util.oneOfSetter($oneOfFields)
                        });
    
                        /**
                         * Creates a new ExecutionTemplate instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.notebooks.v1.ExecutionTemplate
                         * @static
                         * @param {google.cloud.notebooks.v1.IExecutionTemplate=} [properties] Properties to set
                         * @returns {google.cloud.notebooks.v1.ExecutionTemplate} ExecutionTemplate instance
                         */
                        ExecutionTemplate.create = function create(properties) {
                            return new ExecutionTemplate(properties);
                        };
    
                        /**
                         * Encodes the specified ExecutionTemplate message. Does not implicitly {@link google.cloud.notebooks.v1.ExecutionTemplate.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.notebooks.v1.ExecutionTemplate
                         * @static
                         * @param {google.cloud.notebooks.v1.IExecutionTemplate} message ExecutionTemplate message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        ExecutionTemplate.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.scaleTier != null && Object.hasOwnProperty.call(message, "scaleTier"))
                                writer.uint32(/* id 1, wireType 0 =*/8).int32(message.scaleTier);
                            if (message.masterType != null && Object.hasOwnProperty.call(message, "masterType"))
                                writer.uint32(/* id 2, wireType 2 =*/18).string(message.masterType);
                            if (message.acceleratorConfig != null && Object.hasOwnProperty.call(message, "acceleratorConfig"))
                                $root.google.cloud.notebooks.v1.ExecutionTemplate.SchedulerAcceleratorConfig.encode(message.acceleratorConfig, writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();
                            if (message.labels != null && Object.hasOwnProperty.call(message, "labels"))
                                for (var keys = Object.keys(message.labels), i = 0; i < keys.length; ++i)
                                    writer.uint32(/* id 4, wireType 2 =*/34).fork().uint32(/* id 1, wireType 2 =*/10).string(keys[i]).uint32(/* id 2, wireType 2 =*/18).string(message.labels[keys[i]]).ldelim();
                            if (message.inputNotebookFile != null && Object.hasOwnProperty.call(message, "inputNotebookFile"))
                                writer.uint32(/* id 5, wireType 2 =*/42).string(message.inputNotebookFile);
                            if (message.containerImageUri != null && Object.hasOwnProperty.call(message, "containerImageUri"))
                                writer.uint32(/* id 6, wireType 2 =*/50).string(message.containerImageUri);
                            if (message.outputNotebookFolder != null && Object.hasOwnProperty.call(message, "outputNotebookFolder"))
                                writer.uint32(/* id 7, wireType 2 =*/58).string(message.outputNotebookFolder);
                            if (message.paramsYamlFile != null && Object.hasOwnProperty.call(message, "paramsYamlFile"))
                                writer.uint32(/* id 8, wireType 2 =*/66).string(message.paramsYamlFile);
                            if (message.parameters != null && Object.hasOwnProperty.call(message, "parameters"))
                                writer.uint32(/* id 9, wireType 2 =*/74).string(message.parameters);
                            if (message.serviceAccount != null && Object.hasOwnProperty.call(message, "serviceAccount"))
                                writer.uint32(/* id 10, wireType 2 =*/82).string(message.serviceAccount);
                            if (message.jobType != null && Object.hasOwnProperty.call(message, "jobType"))
                                writer.uint32(/* id 11, wireType 0 =*/88).int32(message.jobType);
                            if (message.dataprocParameters != null && Object.hasOwnProperty.call(message, "dataprocParameters"))
                                $root.google.cloud.notebooks.v1.ExecutionTemplate.DataprocParameters.encode(message.dataprocParameters, writer.uint32(/* id 12, wireType 2 =*/98).fork()).ldelim();
                            if (message.vertexAiParameters != null && Object.hasOwnProperty.call(message, "vertexAiParameters"))
                                $root.google.cloud.notebooks.v1.ExecutionTemplate.VertexAIParameters.encode(message.vertexAiParameters, writer.uint32(/* id 13, wireType 2 =*/106).fork()).ldelim();
                            if (message.kernelSpec != null && Object.hasOwnProperty.call(message, "kernelSpec"))
                                writer.uint32(/* id 14, wireType 2 =*/114).string(message.kernelSpec);
                            if (message.tensorboard != null && Object.hasOwnProperty.call(message, "tensorboard"))
                                writer.uint32(/* id 15, wireType 2 =*/122).string(message.tensorboard);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified ExecutionTemplate message, length delimited. Does not implicitly {@link google.cloud.notebooks.v1.ExecutionTemplate.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.notebooks.v1.ExecutionTemplate
                         * @static
                         * @param {google.cloud.notebooks.v1.IExecutionTemplate} message ExecutionTemplate message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        ExecutionTemplate.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes an ExecutionTemplate message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.notebooks.v1.ExecutionTemplate
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.notebooks.v1.ExecutionTemplate} ExecutionTemplate
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        ExecutionTemplate.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.notebooks.v1.ExecutionTemplate(), key, value;
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.scaleTier = reader.int32();
                                        break;
                                    }
                                case 2: {
                                        message.masterType = reader.string();
                                        break;
                                    }
                                case 3: {
                                        message.acceleratorConfig = $root.google.cloud.notebooks.v1.ExecutionTemplate.SchedulerAcceleratorConfig.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 4: {
                                        if (message.labels === $util.emptyObject)
                                            message.labels = {};
                                        var end2 = reader.uint32() + reader.pos;
                                        key = "";
                                        value = "";
                                        while (reader.pos < end2) {
                                            var tag2 = reader.uint32();
                                            switch (tag2 >>> 3) {
                                            case 1:
                                                key = reader.string();
                                                break;
                                            case 2:
                                                value = reader.string();
                                                break;
                                            default:
                                                reader.skipType(tag2 & 7);
                                                break;
                                            }
                                        }
                                        message.labels[key] = value;
                                        break;
                                    }
                                case 5: {
                                        message.inputNotebookFile = reader.string();
                                        break;
                                    }
                                case 6: {
                                        message.containerImageUri = reader.string();
                                        break;
                                    }
                                case 7: {
                                        message.outputNotebookFolder = reader.string();
                                        break;
                                    }
                                case 8: {
                                        message.paramsYamlFile = reader.string();
                                        break;
                                    }
                                case 9: {
                                        message.parameters = reader.string();
                                        break;
                                    }
                                case 10: {
                                        message.serviceAccount = reader.string();
                                        break;
                                    }
                                case 11: {
                                        message.jobType = reader.int32();
                                        break;
                                    }
                                case 12: {
                                        message.dataprocParameters = $root.google.cloud.notebooks.v1.ExecutionTemplate.DataprocParameters.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 13: {
                                        message.vertexAiParameters = $root.google.cloud.notebooks.v1.ExecutionTemplate.VertexAIParameters.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 14: {
                                        message.kernelSpec = reader.string();
                                        break;
                                    }
                                case 15: {
                                        message.tensorboard = reader.string();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes an ExecutionTemplate message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.notebooks.v1.ExecutionTemplate
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.notebooks.v1.ExecutionTemplate} ExecutionTemplate
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        ExecutionTemplate.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies an ExecutionTemplate message.
                         * @function verify
                         * @memberof google.cloud.notebooks.v1.ExecutionTemplate
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        ExecutionTemplate.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            var properties = {};
                            if (message.scaleTier != null && message.hasOwnProperty("scaleTier"))
                                switch (message.scaleTier) {
                                default:
                                    return "scaleTier: enum value expected";
                                case 0:
                                case 1:
                                case 2:
                                case 3:
                                case 4:
                                case 5:
                                case 6:
                                    break;
                                }
                            if (message.masterType != null && message.hasOwnProperty("masterType"))
                                if (!$util.isString(message.masterType))
                                    return "masterType: string expected";
                            if (message.acceleratorConfig != null && message.hasOwnProperty("acceleratorConfig")) {
                                var error = $root.google.cloud.notebooks.v1.ExecutionTemplate.SchedulerAcceleratorConfig.verify(message.acceleratorConfig);
                                if (error)
                                    return "acceleratorConfig." + error;
                            }
                            if (message.labels != null && message.hasOwnProperty("labels")) {
                                if (!$util.isObject(message.labels))
                                    return "labels: object expected";
                                var key = Object.keys(message.labels);
                                for (var i = 0; i < key.length; ++i)
                                    if (!$util.isString(message.labels[key[i]]))
                                        return "labels: string{k:string} expected";
                            }
                            if (message.inputNotebookFile != null && message.hasOwnProperty("inputNotebookFile"))
                                if (!$util.isString(message.inputNotebookFile))
                                    return "inputNotebookFile: string expected";
                            if (message.containerImageUri != null && message.hasOwnProperty("containerImageUri"))
                                if (!$util.isString(message.containerImageUri))
                                    return "containerImageUri: string expected";
                            if (message.outputNotebookFolder != null && message.hasOwnProperty("outputNotebookFolder"))
                                if (!$util.isString(message.outputNotebookFolder))
                                    return "outputNotebookFolder: string expected";
                            if (message.paramsYamlFile != null && message.hasOwnProperty("paramsYamlFile"))
                                if (!$util.isString(message.paramsYamlFile))
                                    return "paramsYamlFile: string expected";
                            if (message.parameters != null && message.hasOwnProperty("parameters"))
                                if (!$util.isString(message.parameters))
                                    return "parameters: string expected";
                            if (message.serviceAccount != null && message.hasOwnProperty("serviceAccount"))
                                if (!$util.isString(message.serviceAccount))
                                    return "serviceAccount: string expected";
                            if (message.jobType != null && message.hasOwnProperty("jobType"))
                                switch (message.jobType) {
                                default:
                                    return "jobType: enum value expected";
                                case 0:
                                case 1:
                                case 2:
                                    break;
                                }
                            if (message.dataprocParameters != null && message.hasOwnProperty("dataprocParameters")) {
                                properties.jobParameters = 1;
                                {
                                    var error = $root.google.cloud.notebooks.v1.ExecutionTemplate.DataprocParameters.verify(message.dataprocParameters);
                                    if (error)
                                        return "dataprocParameters." + error;
                                }
                            }
                            if (message.vertexAiParameters != null && message.hasOwnProperty("vertexAiParameters")) {
                                if (properties.jobParameters === 1)
                                    return "jobParameters: multiple values";
                                properties.jobParameters = 1;
                                {
                                    var error = $root.google.cloud.notebooks.v1.ExecutionTemplate.VertexAIParameters.verify(message.vertexAiParameters);
                                    if (error)
                                        return "vertexAiParameters." + error;
                                }
                            }
                            if (message.kernelSpec != null && message.hasOwnProperty("kernelSpec"))
                                if (!$util.isString(message.kernelSpec))
                                    return "kernelSpec: string expected";
                            if (message.tensorboard != null && message.hasOwnProperty("tensorboard"))
                                if (!$util.isString(message.tensorboard))
                                    return "tensorboard: string expected";
                            return null;
                        };
    
                        /**
                         * Creates an ExecutionTemplate message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.notebooks.v1.ExecutionTemplate
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.notebooks.v1.ExecutionTemplate} ExecutionTemplate
                         */
                        ExecutionTemplate.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.notebooks.v1.ExecutionTemplate)
                                return object;
                            var message = new $root.google.cloud.notebooks.v1.ExecutionTemplate();
                            switch (object.scaleTier) {
                            default:
                                if (typeof object.scaleTier === "number") {
                                    message.scaleTier = object.scaleTier;
                                    break;
                                }
                                break;
                            case "SCALE_TIER_UNSPECIFIED":
                            case 0:
                                message.scaleTier = 0;
                                break;
                            case "BASIC":
                            case 1:
                                message.scaleTier = 1;
                                break;
                            case "STANDARD_1":
                            case 2:
                                message.scaleTier = 2;
                                break;
                            case "PREMIUM_1":
                            case 3:
                                message.scaleTier = 3;
                                break;
                            case "BASIC_GPU":
                            case 4:
                                message.scaleTier = 4;
                                break;
                            case "BASIC_TPU":
                            case 5:
                                message.scaleTier = 5;
                                break;
                            case "CUSTOM":
                            case 6:
                                message.scaleTier = 6;
                                break;
                            }
                            if (object.masterType != null)
                                message.masterType = String(object.masterType);
                            if (object.acceleratorConfig != null) {
                                if (typeof object.acceleratorConfig !== "object")
                                    throw TypeError(".google.cloud.notebooks.v1.ExecutionTemplate.acceleratorConfig: object expected");
                                message.acceleratorConfig = $root.google.cloud.notebooks.v1.ExecutionTemplate.SchedulerAcceleratorConfig.fromObject(object.acceleratorConfig);
                            }
                            if (object.labels) {
                                if (typeof object.labels !== "object")
                                    throw TypeError(".google.cloud.notebooks.v1.ExecutionTemplate.labels: object expected");
                                message.labels = {};
                                for (var keys = Object.keys(object.labels), i = 0; i < keys.length; ++i)
                                    message.labels[keys[i]] = String(object.labels[keys[i]]);
                            }
                            if (object.inputNotebookFile != null)
                                message.inputNotebookFile = String(object.inputNotebookFile);
                            if (object.containerImageUri != null)
                                message.containerImageUri = String(object.containerImageUri);
                            if (object.outputNotebookFolder != null)
                                message.outputNotebookFolder = String(object.outputNotebookFolder);
                            if (object.paramsYamlFile != null)
                                message.paramsYamlFile = String(object.paramsYamlFile);
                            if (object.parameters != null)
                                message.parameters = String(object.parameters);
                            if (object.serviceAccount != null)
                                message.serviceAccount = String(object.serviceAccount);
                            switch (object.jobType) {
                            default:
                                if (typeof object.jobType === "number") {
                                    message.jobType = object.jobType;
                                    break;
                                }
                                break;
                            case "JOB_TYPE_UNSPECIFIED":
                            case 0:
                                message.jobType = 0;
                                break;
                            case "VERTEX_AI":
                            case 1:
                                message.jobType = 1;
                                break;
                            case "DATAPROC":
                            case 2:
                                message.jobType = 2;
                                break;
                            }
                            if (object.dataprocParameters != null) {
                                if (typeof object.dataprocParameters !== "object")
                                    throw TypeError(".google.cloud.notebooks.v1.ExecutionTemplate.dataprocParameters: object expected");
                                message.dataprocParameters = $root.google.cloud.notebooks.v1.ExecutionTemplate.DataprocParameters.fromObject(object.dataprocParameters);
                            }
                            if (object.vertexAiParameters != null) {
                                if (typeof object.vertexAiParameters !== "object")
                                    throw TypeError(".google.cloud.notebooks.v1.ExecutionTemplate.vertexAiParameters: object expected");
                                message.vertexAiParameters = $root.google.cloud.notebooks.v1.ExecutionTemplate.VertexAIParameters.fromObject(object.vertexAiParameters);
                            }
                            if (object.kernelSpec != null)
                                message.kernelSpec = String(object.kernelSpec);
                            if (object.tensorboard != null)
                                message.tensorboard = String(object.tensorboard);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from an ExecutionTemplate message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.notebooks.v1.ExecutionTemplate
                         * @static
                         * @param {google.cloud.notebooks.v1.ExecutionTemplate} message ExecutionTemplate
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        ExecutionTemplate.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.objects || options.defaults)
                                object.labels = {};
                            if (options.defaults) {
                                object.scaleTier = options.enums === String ? "SCALE_TIER_UNSPECIFIED" : 0;
                                object.masterType = "";
                                object.acceleratorConfig = null;
                                object.inputNotebookFile = "";
                                object.containerImageUri = "";
                                object.outputNotebookFolder = "";
                                object.paramsYamlFile = "";
                                object.parameters = "";
                                object.serviceAccount = "";
                                object.jobType = options.enums === String ? "JOB_TYPE_UNSPECIFIED" : 0;
                                object.kernelSpec = "";
                                object.tensorboard = "";
                            }
                            if (message.scaleTier != null && message.hasOwnProperty("scaleTier"))
                                object.scaleTier = options.enums === String ? $root.google.cloud.notebooks.v1.ExecutionTemplate.ScaleTier[message.scaleTier] === undefined ? message.scaleTier : $root.google.cloud.notebooks.v1.ExecutionTemplate.ScaleTier[message.scaleTier] : message.scaleTier;
                            if (message.masterType != null && message.hasOwnProperty("masterType"))
                                object.masterType = message.masterType;
                            if (message.acceleratorConfig != null && message.hasOwnProperty("acceleratorConfig"))
                                object.acceleratorConfig = $root.google.cloud.notebooks.v1.ExecutionTemplate.SchedulerAcceleratorConfig.toObject(message.acceleratorConfig, options);
                            var keys2;
                            if (message.labels && (keys2 = Object.keys(message.labels)).length) {
                                object.labels = {};
                                for (var j = 0; j < keys2.length; ++j)
                                    object.labels[keys2[j]] = message.labels[keys2[j]];
                            }
                            if (message.inputNotebookFile != null && message.hasOwnProperty("inputNotebookFile"))
                                object.inputNotebookFile = message.inputNotebookFile;
                            if (message.containerImageUri != null && message.hasOwnProperty("containerImageUri"))
                                object.containerImageUri = message.containerImageUri;
                            if (message.outputNotebookFolder != null && message.hasOwnProperty("outputNotebookFolder"))
                                object.outputNotebookFolder = message.outputNotebookFolder;
                            if (message.paramsYamlFile != null && message.hasOwnProperty("paramsYamlFile"))
                                object.paramsYamlFile = message.paramsYamlFile;
                            if (message.parameters != null && message.hasOwnProperty("parameters"))
                                object.parameters = message.parameters;
                            if (message.serviceAccount != null && message.hasOwnProperty("serviceAccount"))
                                object.serviceAccount = message.serviceAccount;
                            if (message.jobType != null && message.hasOwnProperty("jobType"))
                                object.jobType = options.enums === String ? $root.google.cloud.notebooks.v1.ExecutionTemplate.JobType[message.jobType] === undefined ? message.jobType : $root.google.cloud.notebooks.v1.ExecutionTemplate.JobType[message.jobType] : message.jobType;
                            if (message.dataprocParameters != null && message.hasOwnProperty("dataprocParameters")) {
                                object.dataprocParameters = $root.google.cloud.notebooks.v1.ExecutionTemplate.DataprocParameters.toObject(message.dataprocParameters, options);
                                if (options.oneofs)
                                    object.jobParameters = "dataprocParameters";
                            }
                            if (message.vertexAiParameters != null && message.hasOwnProperty("vertexAiParameters")) {
                                object.vertexAiParameters = $root.google.cloud.notebooks.v1.ExecutionTemplate.VertexAIParameters.toObject(message.vertexAiParameters, options);
                                if (options.oneofs)
                                    object.jobParameters = "vertexAiParameters";
                            }
                            if (message.kernelSpec != null && message.hasOwnProperty("kernelSpec"))
                                object.kernelSpec = message.kernelSpec;
                            if (message.tensorboard != null && message.hasOwnProperty("tensorboard"))
                                object.tensorboard = message.tensorboard;
                            return object;
                        };
    
                        /**
                         * Converts this ExecutionTemplate to JSON.
                         * @function toJSON
                         * @memberof google.cloud.notebooks.v1.ExecutionTemplate
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        ExecutionTemplate.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for ExecutionTemplate
                         * @function getTypeUrl
                         * @memberof google.cloud.notebooks.v1.ExecutionTemplate
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        ExecutionTemplate.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.notebooks.v1.ExecutionTemplate";
                        };
    
                        /**
                         * ScaleTier enum.
                         * @name google.cloud.notebooks.v1.ExecutionTemplate.ScaleTier
                         * @enum {number}
                         * @property {number} SCALE_TIER_UNSPECIFIED=0 SCALE_TIER_UNSPECIFIED value
                         * @property {number} BASIC=1 BASIC value
                         * @property {number} STANDARD_1=2 STANDARD_1 value
                         * @property {number} PREMIUM_1=3 PREMIUM_1 value
                         * @property {number} BASIC_GPU=4 BASIC_GPU value
                         * @property {number} BASIC_TPU=5 BASIC_TPU value
                         * @property {number} CUSTOM=6 CUSTOM value
                         */
                        ExecutionTemplate.ScaleTier = (function() {
                            var valuesById = {}, values = Object.create(valuesById);
                            values[valuesById[0] = "SCALE_TIER_UNSPECIFIED"] = 0;
                            values[valuesById[1] = "BASIC"] = 1;
                            values[valuesById[2] = "STANDARD_1"] = 2;
                            values[valuesById[3] = "PREMIUM_1"] = 3;
                            values[valuesById[4] = "BASIC_GPU"] = 4;
                            values[valuesById[5] = "BASIC_TPU"] = 5;
                            values[valuesById[6] = "CUSTOM"] = 6;
                            return values;
                        })();
    
                        /**
                         * SchedulerAcceleratorType enum.
                         * @name google.cloud.notebooks.v1.ExecutionTemplate.SchedulerAcceleratorType
                         * @enum {number}
                         * @property {number} SCHEDULER_ACCELERATOR_TYPE_UNSPECIFIED=0 SCHEDULER_ACCELERATOR_TYPE_UNSPECIFIED value
                         * @property {number} NVIDIA_TESLA_K80=1 NVIDIA_TESLA_K80 value
                         * @property {number} NVIDIA_TESLA_P100=2 NVIDIA_TESLA_P100 value
                         * @property {number} NVIDIA_TESLA_V100=3 NVIDIA_TESLA_V100 value
                         * @property {number} NVIDIA_TESLA_P4=4 NVIDIA_TESLA_P4 value
                         * @property {number} NVIDIA_TESLA_T4=5 NVIDIA_TESLA_T4 value
                         * @property {number} NVIDIA_TESLA_A100=10 NVIDIA_TESLA_A100 value
                         * @property {number} TPU_V2=6 TPU_V2 value
                         * @property {number} TPU_V3=7 TPU_V3 value
                         */
                        ExecutionTemplate.SchedulerAcceleratorType = (function() {
                            var valuesById = {}, values = Object.create(valuesById);
                            values[valuesById[0] = "SCHEDULER_ACCELERATOR_TYPE_UNSPECIFIED"] = 0;
                            values[valuesById[1] = "NVIDIA_TESLA_K80"] = 1;
                            values[valuesById[2] = "NVIDIA_TESLA_P100"] = 2;
                            values[valuesById[3] = "NVIDIA_TESLA_V100"] = 3;
                            values[valuesById[4] = "NVIDIA_TESLA_P4"] = 4;
                            values[valuesById[5] = "NVIDIA_TESLA_T4"] = 5;
                            values[valuesById[10] = "NVIDIA_TESLA_A100"] = 10;
                            values[valuesById[6] = "TPU_V2"] = 6;
                            values[valuesById[7] = "TPU_V3"] = 7;
                            return values;
                        })();
    
                        ExecutionTemplate.SchedulerAcceleratorConfig = (function() {
    
                            /**
                             * Properties of a SchedulerAcceleratorConfig.
                             * @memberof google.cloud.notebooks.v1.ExecutionTemplate
                             * @interface ISchedulerAcceleratorConfig
                             * @property {google.cloud.notebooks.v1.ExecutionTemplate.SchedulerAcceleratorType|null} [type] SchedulerAcceleratorConfig type
                             * @property {number|Long|null} [coreCount] SchedulerAcceleratorConfig coreCount
                             */
    
                            /**
                             * Constructs a new SchedulerAcceleratorConfig.
                             * @memberof google.cloud.notebooks.v1.ExecutionTemplate
                             * @classdesc Represents a SchedulerAcceleratorConfig.
                             * @implements ISchedulerAcceleratorConfig
                             * @constructor
                             * @param {google.cloud.notebooks.v1.ExecutionTemplate.ISchedulerAcceleratorConfig=} [properties] Properties to set
                             */
                            function SchedulerAcceleratorConfig(properties) {
                                if (properties)
                                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                        if (properties[keys[i]] != null)
                                            this[keys[i]] = properties[keys[i]];
                            }
    
                            /**
                             * SchedulerAcceleratorConfig type.
                             * @member {google.cloud.notebooks.v1.ExecutionTemplate.SchedulerAcceleratorType} type
                             * @memberof google.cloud.notebooks.v1.ExecutionTemplate.SchedulerAcceleratorConfig
                             * @instance
                             */
                            SchedulerAcceleratorConfig.prototype.type = 0;
    
                            /**
                             * SchedulerAcceleratorConfig coreCount.
                             * @member {number|Long} coreCount
                             * @memberof google.cloud.notebooks.v1.ExecutionTemplate.SchedulerAcceleratorConfig
                             * @instance
                             */
                            SchedulerAcceleratorConfig.prototype.coreCount = $util.Long ? $util.Long.fromBits(0,0,false) : 0;
    
                            /**
                             * Creates a new SchedulerAcceleratorConfig instance using the specified properties.
                             * @function create
                             * @memberof google.cloud.notebooks.v1.ExecutionTemplate.SchedulerAcceleratorConfig
                             * @static
                             * @param {google.cloud.notebooks.v1.ExecutionTemplate.ISchedulerAcceleratorConfig=} [properties] Properties to set
                             * @returns {google.cloud.notebooks.v1.ExecutionTemplate.SchedulerAcceleratorConfig} SchedulerAcceleratorConfig instance
                             */
                            SchedulerAcceleratorConfig.create = function create(properties) {
                                return new SchedulerAcceleratorConfig(properties);
                            };
    
                            /**
                             * Encodes the specified SchedulerAcceleratorConfig message. Does not implicitly {@link google.cloud.notebooks.v1.ExecutionTemplate.SchedulerAcceleratorConfig.verify|verify} messages.
                             * @function encode
                             * @memberof google.cloud.notebooks.v1.ExecutionTemplate.SchedulerAcceleratorConfig
                             * @static
                             * @param {google.cloud.notebooks.v1.ExecutionTemplate.ISchedulerAcceleratorConfig} message SchedulerAcceleratorConfig message or plain object to encode
                             * @param {$protobuf.Writer} [writer] Writer to encode to
                             * @returns {$protobuf.Writer} Writer
                             */
                            SchedulerAcceleratorConfig.encode = function encode(message, writer) {
                                if (!writer)
                                    writer = $Writer.create();
                                if (message.type != null && Object.hasOwnProperty.call(message, "type"))
                                    writer.uint32(/* id 1, wireType 0 =*/8).int32(message.type);
                                if (message.coreCount != null && Object.hasOwnProperty.call(message, "coreCount"))
                                    writer.uint32(/* id 2, wireType 0 =*/16).int64(message.coreCount);
                                return writer;
                            };
    
                            /**
                             * Encodes the specified SchedulerAcceleratorConfig message, length delimited. Does not implicitly {@link google.cloud.notebooks.v1.ExecutionTemplate.SchedulerAcceleratorConfig.verify|verify} messages.
                             * @function encodeDelimited
                             * @memberof google.cloud.notebooks.v1.ExecutionTemplate.SchedulerAcceleratorConfig
                             * @static
                             * @param {google.cloud.notebooks.v1.ExecutionTemplate.ISchedulerAcceleratorConfig} message SchedulerAcceleratorConfig message or plain object to encode
                             * @param {$protobuf.Writer} [writer] Writer to encode to
                             * @returns {$protobuf.Writer} Writer
                             */
                            SchedulerAcceleratorConfig.encodeDelimited = function encodeDelimited(message, writer) {
                                return this.encode(message, writer).ldelim();
                            };
    
                            /**
                             * Decodes a SchedulerAcceleratorConfig message from the specified reader or buffer.
                             * @function decode
                             * @memberof google.cloud.notebooks.v1.ExecutionTemplate.SchedulerAcceleratorConfig
                             * @static
                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                             * @param {number} [length] Message length if known beforehand
                             * @returns {google.cloud.notebooks.v1.ExecutionTemplate.SchedulerAcceleratorConfig} SchedulerAcceleratorConfig
                             * @throws {Error} If the payload is not a reader or valid buffer
                             * @throws {$protobuf.util.ProtocolError} If required fields are missing
                             */
                            SchedulerAcceleratorConfig.decode = function decode(reader, length) {
                                if (!(reader instanceof $Reader))
                                    reader = $Reader.create(reader);
                                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.notebooks.v1.ExecutionTemplate.SchedulerAcceleratorConfig();
                                while (reader.pos < end) {
                                    var tag = reader.uint32();
                                    switch (tag >>> 3) {
                                    case 1: {
                                            message.type = reader.int32();
                                            break;
                                        }
                                    case 2: {
                                            message.coreCount = reader.int64();
                                            break;
                                        }
                                    default:
                                        reader.skipType(tag & 7);
                                        break;
                                    }
                                }
                                return message;
                            };
    
                            /**
                             * Decodes a SchedulerAcceleratorConfig message from the specified reader or buffer, length delimited.
                             * @function decodeDelimited
                             * @memberof google.cloud.notebooks.v1.ExecutionTemplate.SchedulerAcceleratorConfig
                             * @static
                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                             * @returns {google.cloud.notebooks.v1.ExecutionTemplate.SchedulerAcceleratorConfig} SchedulerAcceleratorConfig
                             * @throws {Error} If the payload is not a reader or valid buffer
                             * @throws {$protobuf.util.ProtocolError} If required fields are missing
                             */
                            SchedulerAcceleratorConfig.decodeDelimited = function decodeDelimited(reader) {
                                if (!(reader instanceof $Reader))
                                    reader = new $Reader(reader);
                                return this.decode(reader, reader.uint32());
                            };
    
                            /**
                             * Verifies a SchedulerAcceleratorConfig message.
                             * @function verify
                             * @memberof google.cloud.notebooks.v1.ExecutionTemplate.SchedulerAcceleratorConfig
                             * @static
                             * @param {Object.<string,*>} message Plain object to verify
                             * @returns {string|null} `null` if valid, otherwise the reason why it is not
                             */
                            SchedulerAcceleratorConfig.verify = function verify(message) {
                                if (typeof message !== "object" || message === null)
                                    return "object expected";
                                if (message.type != null && message.hasOwnProperty("type"))
                                    switch (message.type) {
                                    default:
                                        return "type: enum value expected";
                                    case 0:
                                    case 1:
                                    case 2:
                                    case 3:
                                    case 4:
                                    case 5:
                                    case 10:
                                    case 6:
                                    case 7:
                                        break;
                                    }
                                if (message.coreCount != null && message.hasOwnProperty("coreCount"))
                                    if (!$util.isInteger(message.coreCount) && !(message.coreCount && $util.isInteger(message.coreCount.low) && $util.isInteger(message.coreCount.high)))
                                        return "coreCount: integer|Long expected";
                                return null;
                            };
    
                            /**
                             * Creates a SchedulerAcceleratorConfig message from a plain object. Also converts values to their respective internal types.
                             * @function fromObject
                             * @memberof google.cloud.notebooks.v1.ExecutionTemplate.SchedulerAcceleratorConfig
                             * @static
                             * @param {Object.<string,*>} object Plain object
                             * @returns {google.cloud.notebooks.v1.ExecutionTemplate.SchedulerAcceleratorConfig} SchedulerAcceleratorConfig
                             */
                            SchedulerAcceleratorConfig.fromObject = function fromObject(object) {
                                if (object instanceof $root.google.cloud.notebooks.v1.ExecutionTemplate.SchedulerAcceleratorConfig)
                                    return object;
                                var message = new $root.google.cloud.notebooks.v1.ExecutionTemplate.SchedulerAcceleratorConfig();
                                switch (object.type) {
                                default:
                                    if (typeof object.type === "number") {
                                        message.type = object.type;
                                        break;
                                    }
                                    break;
                                case "SCHEDULER_ACCELERATOR_TYPE_UNSPECIFIED":
                                case 0:
                                    message.type = 0;
                                    break;
                                case "NVIDIA_TESLA_K80":
                                case 1:
                                    message.type = 1;
                                    break;
                                case "NVIDIA_TESLA_P100":
                                case 2:
                                    message.type = 2;
                                    break;
                                case "NVIDIA_TESLA_V100":
                                case 3:
                                    message.type = 3;
                                    break;
                                case "NVIDIA_TESLA_P4":
                                case 4:
                                    message.type = 4;
                                    break;
                                case "NVIDIA_TESLA_T4":
                                case 5:
                                    message.type = 5;
                                    break;
                                case "NVIDIA_TESLA_A100":
                                case 10:
                                    message.type = 10;
                                    break;
                                case "TPU_V2":
                                case 6:
                                    message.type = 6;
                                    break;
                                case "TPU_V3":
                                case 7:
                                    message.type = 7;
                                    break;
                                }
                                if (object.coreCount != null)
                                    if ($util.Long)
                                        (message.coreCount = $util.Long.fromValue(object.coreCount)).unsigned = false;
                                    else if (typeof object.coreCount === "string")
                                        message.coreCount = parseInt(object.coreCount, 10);
                                    else if (typeof object.coreCount === "number")
                                        message.coreCount = object.coreCount;
                                    else if (typeof object.coreCount === "object")
                                        message.coreCount = new $util.LongBits(object.coreCount.low >>> 0, object.coreCount.high >>> 0).toNumber();
                                return message;
                            };
    
                            /**
                             * Creates a plain object from a SchedulerAcceleratorConfig message. Also converts values to other types if specified.
                             * @function toObject
                             * @memberof google.cloud.notebooks.v1.ExecutionTemplate.SchedulerAcceleratorConfig
                             * @static
                             * @param {google.cloud.notebooks.v1.ExecutionTemplate.SchedulerAcceleratorConfig} message SchedulerAcceleratorConfig
                             * @param {$protobuf.IConversionOptions} [options] Conversion options
                             * @returns {Object.<string,*>} Plain object
                             */
                            SchedulerAcceleratorConfig.toObject = function toObject(message, options) {
                                if (!options)
                                    options = {};
                                var object = {};
                                if (options.defaults) {
                                    object.type = options.enums === String ? "SCHEDULER_ACCELERATOR_TYPE_UNSPECIFIED" : 0;
                                    if ($util.Long) {
                                        var long = new $util.Long(0, 0, false);
                                        object.coreCount = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                                    } else
                                        object.coreCount = options.longs === String ? "0" : 0;
                                }
                                if (message.type != null && message.hasOwnProperty("type"))
                                    object.type = options.enums === String ? $root.google.cloud.notebooks.v1.ExecutionTemplate.SchedulerAcceleratorType[message.type] === undefined ? message.type : $root.google.cloud.notebooks.v1.ExecutionTemplate.SchedulerAcceleratorType[message.type] : message.type;
                                if (message.coreCount != null && message.hasOwnProperty("coreCount"))
                                    if (typeof message.coreCount === "number")
                                        object.coreCount = options.longs === String ? String(message.coreCount) : message.coreCount;
                                    else
                                        object.coreCount = options.longs === String ? $util.Long.prototype.toString.call(message.coreCount) : options.longs === Number ? new $util.LongBits(message.coreCount.low >>> 0, message.coreCount.high >>> 0).toNumber() : message.coreCount;
                                return object;
                            };
    
                            /**
                             * Converts this SchedulerAcceleratorConfig to JSON.
                             * @function toJSON
                             * @memberof google.cloud.notebooks.v1.ExecutionTemplate.SchedulerAcceleratorConfig
                             * @instance
                             * @returns {Object.<string,*>} JSON object
                             */
                            SchedulerAcceleratorConfig.prototype.toJSON = function toJSON() {
                                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                            };
    
                            /**
                             * Gets the default type url for SchedulerAcceleratorConfig
                             * @function getTypeUrl
                             * @memberof google.cloud.notebooks.v1.ExecutionTemplate.SchedulerAcceleratorConfig
                             * @static
                             * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                             * @returns {string} The default type url
                             */
                            SchedulerAcceleratorConfig.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                                if (typeUrlPrefix === undefined) {
                                    typeUrlPrefix = "type.googleapis.com";
                                }
                                return typeUrlPrefix + "/google.cloud.notebooks.v1.ExecutionTemplate.SchedulerAcceleratorConfig";
                            };
    
                            return SchedulerAcceleratorConfig;
                        })();
    
                        /**
                         * JobType enum.
                         * @name google.cloud.notebooks.v1.ExecutionTemplate.JobType
                         * @enum {number}
                         * @property {number} JOB_TYPE_UNSPECIFIED=0 JOB_TYPE_UNSPECIFIED value
                         * @property {number} VERTEX_AI=1 VERTEX_AI value
                         * @property {number} DATAPROC=2 DATAPROC value
                         */
                        ExecutionTemplate.JobType = (function() {
                            var valuesById = {}, values = Object.create(valuesById);
                            values[valuesById[0] = "JOB_TYPE_UNSPECIFIED"] = 0;
                            values[valuesById[1] = "VERTEX_AI"] = 1;
                            values[valuesById[2] = "DATAPROC"] = 2;
                            return values;
                        })();
    
                        ExecutionTemplate.DataprocParameters = (function() {
    
                            /**
                             * Properties of a DataprocParameters.
                             * @memberof google.cloud.notebooks.v1.ExecutionTemplate
                             * @interface IDataprocParameters
                             * @property {string|null} [cluster] DataprocParameters cluster
                             */
    
                            /**
                             * Constructs a new DataprocParameters.
                             * @memberof google.cloud.notebooks.v1.ExecutionTemplate
                             * @classdesc Represents a DataprocParameters.
                             * @implements IDataprocParameters
                             * @constructor
                             * @param {google.cloud.notebooks.v1.ExecutionTemplate.IDataprocParameters=} [properties] Properties to set
                             */
                            function DataprocParameters(properties) {
                                if (properties)
                                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                        if (properties[keys[i]] != null)
                                            this[keys[i]] = properties[keys[i]];
                            }
    
                            /**
                             * DataprocParameters cluster.
                             * @member {string} cluster
                             * @memberof google.cloud.notebooks.v1.ExecutionTemplate.DataprocParameters
                             * @instance
                             */
                            DataprocParameters.prototype.cluster = "";
    
                            /**
                             * Creates a new DataprocParameters instance using the specified properties.
                             * @function create
                             * @memberof google.cloud.notebooks.v1.ExecutionTemplate.DataprocParameters
                             * @static
                             * @param {google.cloud.notebooks.v1.ExecutionTemplate.IDataprocParameters=} [properties] Properties to set
                             * @returns {google.cloud.notebooks.v1.ExecutionTemplate.DataprocParameters} DataprocParameters instance
                             */
                            DataprocParameters.create = function create(properties) {
                                return new DataprocParameters(properties);
                            };
    
                            /**
                             * Encodes the specified DataprocParameters message. Does not implicitly {@link google.cloud.notebooks.v1.ExecutionTemplate.DataprocParameters.verify|verify} messages.
                             * @function encode
                             * @memberof google.cloud.notebooks.v1.ExecutionTemplate.DataprocParameters
                             * @static
                             * @param {google.cloud.notebooks.v1.ExecutionTemplate.IDataprocParameters} message DataprocParameters message or plain object to encode
                             * @param {$protobuf.Writer} [writer] Writer to encode to
                             * @returns {$protobuf.Writer} Writer
                             */
                            DataprocParameters.encode = function encode(message, writer) {
                                if (!writer)
                                    writer = $Writer.create();
                                if (message.cluster != null && Object.hasOwnProperty.call(message, "cluster"))
                                    writer.uint32(/* id 1, wireType 2 =*/10).string(message.cluster);
                                return writer;
                            };
    
                            /**
                             * Encodes the specified DataprocParameters message, length delimited. Does not implicitly {@link google.cloud.notebooks.v1.ExecutionTemplate.DataprocParameters.verify|verify} messages.
                             * @function encodeDelimited
                             * @memberof google.cloud.notebooks.v1.ExecutionTemplate.DataprocParameters
                             * @static
                             * @param {google.cloud.notebooks.v1.ExecutionTemplate.IDataprocParameters} message DataprocParameters message or plain object to encode
                             * @param {$protobuf.Writer} [writer] Writer to encode to
                             * @returns {$protobuf.Writer} Writer
                             */
                            DataprocParameters.encodeDelimited = function encodeDelimited(message, writer) {
                                return this.encode(message, writer).ldelim();
                            };
    
                            /**
                             * Decodes a DataprocParameters message from the specified reader or buffer.
                             * @function decode
                             * @memberof google.cloud.notebooks.v1.ExecutionTemplate.DataprocParameters
                             * @static
                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                             * @param {number} [length] Message length if known beforehand
                             * @returns {google.cloud.notebooks.v1.ExecutionTemplate.DataprocParameters} DataprocParameters
                             * @throws {Error} If the payload is not a reader or valid buffer
                             * @throws {$protobuf.util.ProtocolError} If required fields are missing
                             */
                            DataprocParameters.decode = function decode(reader, length) {
                                if (!(reader instanceof $Reader))
                                    reader = $Reader.create(reader);
                                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.notebooks.v1.ExecutionTemplate.DataprocParameters();
                                while (reader.pos < end) {
                                    var tag = reader.uint32();
                                    switch (tag >>> 3) {
                                    case 1: {
                                            message.cluster = reader.string();
                                            break;
                                        }
                                    default:
                                        reader.skipType(tag & 7);
                                        break;
                                    }
                                }
                                return message;
                            };
    
                            /**
                             * Decodes a DataprocParameters message from the specified reader or buffer, length delimited.
                             * @function decodeDelimited
                             * @memberof google.cloud.notebooks.v1.ExecutionTemplate.DataprocParameters
                             * @static
                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                             * @returns {google.cloud.notebooks.v1.ExecutionTemplate.DataprocParameters} DataprocParameters
                             * @throws {Error} If the payload is not a reader or valid buffer
                             * @throws {$protobuf.util.ProtocolError} If required fields are missing
                             */
                            DataprocParameters.decodeDelimited = function decodeDelimited(reader) {
                                if (!(reader instanceof $Reader))
                                    reader = new $Reader(reader);
                                return this.decode(reader, reader.uint32());
                            };
    
                            /**
                             * Verifies a DataprocParameters message.
                             * @function verify
                             * @memberof google.cloud.notebooks.v1.ExecutionTemplate.DataprocParameters
                             * @static
                             * @param {Object.<string,*>} message Plain object to verify
                             * @returns {string|null} `null` if valid, otherwise the reason why it is not
                             */
                            DataprocParameters.verify = function verify(message) {
                                if (typeof message !== "object" || message === null)
                                    return "object expected";
                                if (message.cluster != null && message.hasOwnProperty("cluster"))
                                    if (!$util.isString(message.cluster))
                                        return "cluster: string expected";
                                return null;
                            };
    
                            /**
                             * Creates a DataprocParameters message from a plain object. Also converts values to their respective internal types.
                             * @function fromObject
                             * @memberof google.cloud.notebooks.v1.ExecutionTemplate.DataprocParameters
                             * @static
                             * @param {Object.<string,*>} object Plain object
                             * @returns {google.cloud.notebooks.v1.ExecutionTemplate.DataprocParameters} DataprocParameters
                             */
                            DataprocParameters.fromObject = function fromObject(object) {
                                if (object instanceof $root.google.cloud.notebooks.v1.ExecutionTemplate.DataprocParameters)
                                    return object;
                                var message = new $root.google.cloud.notebooks.v1.ExecutionTemplate.DataprocParameters();
                                if (object.cluster != null)
                                    message.cluster = String(object.cluster);
                                return message;
                            };
    
                            /**
                             * Creates a plain object from a DataprocParameters message. Also converts values to other types if specified.
                             * @function toObject
                             * @memberof google.cloud.notebooks.v1.ExecutionTemplate.DataprocParameters
                             * @static
                             * @param {google.cloud.notebooks.v1.ExecutionTemplate.DataprocParameters} message DataprocParameters
                             * @param {$protobuf.IConversionOptions} [options] Conversion options
                             * @returns {Object.<string,*>} Plain object
                             */
                            DataprocParameters.toObject = function toObject(message, options) {
                                if (!options)
                                    options = {};
                                var object = {};
                                if (options.defaults)
                                    object.cluster = "";
                                if (message.cluster != null && message.hasOwnProperty("cluster"))
                                    object.cluster = message.cluster;
                                return object;
                            };
    
                            /**
                             * Converts this DataprocParameters to JSON.
                             * @function toJSON
                             * @memberof google.cloud.notebooks.v1.ExecutionTemplate.DataprocParameters
                             * @instance
                             * @returns {Object.<string,*>} JSON object
                             */
                            DataprocParameters.prototype.toJSON = function toJSON() {
                                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                            };
    
                            /**
                             * Gets the default type url for DataprocParameters
                             * @function getTypeUrl
                             * @memberof google.cloud.notebooks.v1.ExecutionTemplate.DataprocParameters
                             * @static
                             * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                             * @returns {string} The default type url
                             */
                            DataprocParameters.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                                if (typeUrlPrefix === undefined) {
                                    typeUrlPrefix = "type.googleapis.com";
                                }
                                return typeUrlPrefix + "/google.cloud.notebooks.v1.ExecutionTemplate.DataprocParameters";
                            };
    
                            return DataprocParameters;
                        })();
    
                        ExecutionTemplate.VertexAIParameters = (function() {
    
                            /**
                             * Properties of a VertexAIParameters.
                             * @memberof google.cloud.notebooks.v1.ExecutionTemplate
                             * @interface IVertexAIParameters
                             * @property {string|null} [network] VertexAIParameters network
                             * @property {Object.<string,string>|null} [env] VertexAIParameters env
                             */
    
                            /**
                             * Constructs a new VertexAIParameters.
                             * @memberof google.cloud.notebooks.v1.ExecutionTemplate
                             * @classdesc Represents a VertexAIParameters.
                             * @implements IVertexAIParameters
                             * @constructor
                             * @param {google.cloud.notebooks.v1.ExecutionTemplate.IVertexAIParameters=} [properties] Properties to set
                             */
                            function VertexAIParameters(properties) {
                                this.env = {};
                                if (properties)
                                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                        if (properties[keys[i]] != null)
                                            this[keys[i]] = properties[keys[i]];
                            }
    
                            /**
                             * VertexAIParameters network.
                             * @member {string} network
                             * @memberof google.cloud.notebooks.v1.ExecutionTemplate.VertexAIParameters
                             * @instance
                             */
                            VertexAIParameters.prototype.network = "";
    
                            /**
                             * VertexAIParameters env.
                             * @member {Object.<string,string>} env
                             * @memberof google.cloud.notebooks.v1.ExecutionTemplate.VertexAIParameters
                             * @instance
                             */
                            VertexAIParameters.prototype.env = $util.emptyObject;
    
                            /**
                             * Creates a new VertexAIParameters instance using the specified properties.
                             * @function create
                             * @memberof google.cloud.notebooks.v1.ExecutionTemplate.VertexAIParameters
                             * @static
                             * @param {google.cloud.notebooks.v1.ExecutionTemplate.IVertexAIParameters=} [properties] Properties to set
                             * @returns {google.cloud.notebooks.v1.ExecutionTemplate.VertexAIParameters} VertexAIParameters instance
                             */
                            VertexAIParameters.create = function create(properties) {
                                return new VertexAIParameters(properties);
                            };
    
                            /**
                             * Encodes the specified VertexAIParameters message. Does not implicitly {@link google.cloud.notebooks.v1.ExecutionTemplate.VertexAIParameters.verify|verify} messages.
                             * @function encode
                             * @memberof google.cloud.notebooks.v1.ExecutionTemplate.VertexAIParameters
                             * @static
                             * @param {google.cloud.notebooks.v1.ExecutionTemplate.IVertexAIParameters} message VertexAIParameters message or plain object to encode
                             * @param {$protobuf.Writer} [writer] Writer to encode to
                             * @returns {$protobuf.Writer} Writer
                             */
                            VertexAIParameters.encode = function encode(message, writer) {
                                if (!writer)
                                    writer = $Writer.create();
                                if (message.network != null && Object.hasOwnProperty.call(message, "network"))
                                    writer.uint32(/* id 1, wireType 2 =*/10).string(message.network);
                                if (message.env != null && Object.hasOwnProperty.call(message, "env"))
                                    for (var keys = Object.keys(message.env), i = 0; i < keys.length; ++i)
                                        writer.uint32(/* id 2, wireType 2 =*/18).fork().uint32(/* id 1, wireType 2 =*/10).string(keys[i]).uint32(/* id 2, wireType 2 =*/18).string(message.env[keys[i]]).ldelim();
                                return writer;
                            };
    
                            /**
                             * Encodes the specified VertexAIParameters message, length delimited. Does not implicitly {@link google.cloud.notebooks.v1.ExecutionTemplate.VertexAIParameters.verify|verify} messages.
                             * @function encodeDelimited
                             * @memberof google.cloud.notebooks.v1.ExecutionTemplate.VertexAIParameters
                             * @static
                             * @param {google.cloud.notebooks.v1.ExecutionTemplate.IVertexAIParameters} message VertexAIParameters message or plain object to encode
                             * @param {$protobuf.Writer} [writer] Writer to encode to
                             * @returns {$protobuf.Writer} Writer
                             */
                            VertexAIParameters.encodeDelimited = function encodeDelimited(message, writer) {
                                return this.encode(message, writer).ldelim();
                            };
    
                            /**
                             * Decodes a VertexAIParameters message from the specified reader or buffer.
                             * @function decode
                             * @memberof google.cloud.notebooks.v1.ExecutionTemplate.VertexAIParameters
                             * @static
                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                             * @param {number} [length] Message length if known beforehand
                             * @returns {google.cloud.notebooks.v1.ExecutionTemplate.VertexAIParameters} VertexAIParameters
                             * @throws {Error} If the payload is not a reader or valid buffer
                             * @throws {$protobuf.util.ProtocolError} If required fields are missing
                             */
                            VertexAIParameters.decode = function decode(reader, length) {
                                if (!(reader instanceof $Reader))
                                    reader = $Reader.create(reader);
                                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.notebooks.v1.ExecutionTemplate.VertexAIParameters(), key, value;
                                while (reader.pos < end) {
                                    var tag = reader.uint32();
                                    switch (tag >>> 3) {
                                    case 1: {
                                            message.network = reader.string();
                                            break;
                                        }
                                    case 2: {
                                            if (message.env === $util.emptyObject)
                                                message.env = {};
                                            var end2 = reader.uint32() + reader.pos;
                                            key = "";
                                            value = "";
                                            while (reader.pos < end2) {
                                                var tag2 = reader.uint32();
                                                switch (tag2 >>> 3) {
                                                case 1:
                                                    key = reader.string();
                                                    break;
                                                case 2:
                                                    value = reader.string();
                                                    break;
                                                default:
                                                    reader.skipType(tag2 & 7);
                                                    break;
                                                }
                                            }
                                            message.env[key] = value;
                                            break;
                                        }
                                    default:
                                        reader.skipType(tag & 7);
                                        break;
                                    }
                                }
                                return message;
                            };
    
                            /**
                             * Decodes a VertexAIParameters message from the specified reader or buffer, length delimited.
                             * @function decodeDelimited
                             * @memberof google.cloud.notebooks.v1.ExecutionTemplate.VertexAIParameters
                             * @static
                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                             * @returns {google.cloud.notebooks.v1.ExecutionTemplate.VertexAIParameters} VertexAIParameters
                             * @throws {Error} If the payload is not a reader or valid buffer
                             * @throws {$protobuf.util.ProtocolError} If required fields are missing
                             */
                            VertexAIParameters.decodeDelimited = function decodeDelimited(reader) {
                                if (!(reader instanceof $Reader))
                                    reader = new $Reader(reader);
                                return this.decode(reader, reader.uint32());
                            };
    
                            /**
                             * Verifies a VertexAIParameters message.
                             * @function verify
                             * @memberof google.cloud.notebooks.v1.ExecutionTemplate.VertexAIParameters
                             * @static
                             * @param {Object.<string,*>} message Plain object to verify
                             * @returns {string|null} `null` if valid, otherwise the reason why it is not
                             */
                            VertexAIParameters.verify = function verify(message) {
                                if (typeof message !== "object" || message === null)
                                    return "object expected";
                                if (message.network != null && message.hasOwnProperty("network"))
                                    if (!$util.isString(message.network))
                                        return "network: string expected";
                                if (message.env != null && message.hasOwnProperty("env")) {
                                    if (!$util.isObject(message.env))
                                        return "env: object expected";
                                    var key = Object.keys(message.env);
                                    for (var i = 0; i < key.length; ++i)
                                        if (!$util.isString(message.env[key[i]]))
                                            return "env: string{k:string} expected";
                                }
                                return null;
                            };
    
                            /**
                             * Creates a VertexAIParameters message from a plain object. Also converts values to their respective internal types.
                             * @function fromObject
                             * @memberof google.cloud.notebooks.v1.ExecutionTemplate.VertexAIParameters
                             * @static
                             * @param {Object.<string,*>} object Plain object
                             * @returns {google.cloud.notebooks.v1.ExecutionTemplate.VertexAIParameters} VertexAIParameters
                             */
                            VertexAIParameters.fromObject = function fromObject(object) {
                                if (object instanceof $root.google.cloud.notebooks.v1.ExecutionTemplate.VertexAIParameters)
                                    return object;
                                var message = new $root.google.cloud.notebooks.v1.ExecutionTemplate.VertexAIParameters();
                                if (object.network != null)
                                    message.network = String(object.network);
                                if (object.env) {
                                    if (typeof object.env !== "object")
                                        throw TypeError(".google.cloud.notebooks.v1.ExecutionTemplate.VertexAIParameters.env: object expected");
                                    message.env = {};
                                    for (var keys = Object.keys(object.env), i = 0; i < keys.length; ++i)
                                        message.env[keys[i]] = String(object.env[keys[i]]);
                                }
                                return message;
                            };
    
                            /**
                             * Creates a plain object from a VertexAIParameters message. Also converts values to other types if specified.
                             * @function toObject
                             * @memberof google.cloud.notebooks.v1.ExecutionTemplate.VertexAIParameters
                             * @static
                             * @param {google.cloud.notebooks.v1.ExecutionTemplate.VertexAIParameters} message VertexAIParameters
                             * @param {$protobuf.IConversionOptions} [options] Conversion options
                             * @returns {Object.<string,*>} Plain object
                             */
                            VertexAIParameters.toObject = function toObject(message, options) {
                                if (!options)
                                    options = {};
                                var object = {};
                                if (options.objects || options.defaults)
                                    object.env = {};
                                if (options.defaults)
                                    object.network = "";
                                if (message.network != null && message.hasOwnProperty("network"))
                                    object.network = message.network;
                                var keys2;
                                if (message.env && (keys2 = Object.keys(message.env)).length) {
                                    object.env = {};
                                    for (var j = 0; j < keys2.length; ++j)
                                        object.env[keys2[j]] = message.env[keys2[j]];
                                }
                                return object;
                            };
    
                            /**
                             * Converts this VertexAIParameters to JSON.
                             * @function toJSON
                             * @memberof google.cloud.notebooks.v1.ExecutionTemplate.VertexAIParameters
                             * @instance
                             * @returns {Object.<string,*>} JSON object
                             */
                            VertexAIParameters.prototype.toJSON = function toJSON() {
                                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                            };
    
                            /**
                             * Gets the default type url for VertexAIParameters
                             * @function getTypeUrl
                             * @memberof google.cloud.notebooks.v1.ExecutionTemplate.VertexAIParameters
                             * @static
                             * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                             * @returns {string} The default type url
                             */
                            VertexAIParameters.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                                if (typeUrlPrefix === undefined) {
                                    typeUrlPrefix = "type.googleapis.com";
                                }
                                return typeUrlPrefix + "/google.cloud.notebooks.v1.ExecutionTemplate.VertexAIParameters";
                            };
    
                            return VertexAIParameters;
                        })();
    
                        return ExecutionTemplate;
                    })();
    
                    v1.Execution = (function() {
    
                        /**
                         * Properties of an Execution.
                         * @memberof google.cloud.notebooks.v1
                         * @interface IExecution
                         * @property {google.cloud.notebooks.v1.IExecutionTemplate|null} [executionTemplate] Execution executionTemplate
                         * @property {string|null} [name] Execution name
                         * @property {string|null} [displayName] Execution displayName
                         * @property {string|null} [description] Execution description
                         * @property {google.protobuf.ITimestamp|null} [createTime] Execution createTime
                         * @property {google.protobuf.ITimestamp|null} [updateTime] Execution updateTime
                         * @property {google.cloud.notebooks.v1.Execution.State|null} [state] Execution state
                         * @property {string|null} [outputNotebookFile] Execution outputNotebookFile
                         * @property {string|null} [jobUri] Execution jobUri
                         */
    
                        /**
                         * Constructs a new Execution.
                         * @memberof google.cloud.notebooks.v1
                         * @classdesc Represents an Execution.
                         * @implements IExecution
                         * @constructor
                         * @param {google.cloud.notebooks.v1.IExecution=} [properties] Properties to set
                         */
                        function Execution(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * Execution executionTemplate.
                         * @member {google.cloud.notebooks.v1.IExecutionTemplate|null|undefined} executionTemplate
                         * @memberof google.cloud.notebooks.v1.Execution
                         * @instance
                         */
                        Execution.prototype.executionTemplate = null;
    
                        /**
                         * Execution name.
                         * @member {string} name
                         * @memberof google.cloud.notebooks.v1.Execution
                         * @instance
                         */
                        Execution.prototype.name = "";
    
                        /**
                         * Execution displayName.
                         * @member {string} displayName
                         * @memberof google.cloud.notebooks.v1.Execution
                         * @instance
                         */
                        Execution.prototype.displayName = "";
    
                        /**
                         * Execution description.
                         * @member {string} description
                         * @memberof google.cloud.notebooks.v1.Execution
                         * @instance
                         */
                        Execution.prototype.description = "";
    
                        /**
                         * Execution createTime.
                         * @member {google.protobuf.ITimestamp|null|undefined} createTime
                         * @memberof google.cloud.notebooks.v1.Execution
                         * @instance
                         */
                        Execution.prototype.createTime = null;
    
                        /**
                         * Execution updateTime.
                         * @member {google.protobuf.ITimestamp|null|undefined} updateTime
                         * @memberof google.cloud.notebooks.v1.Execution
                         * @instance
                         */
                        Execution.prototype.updateTime = null;
    
                        /**
                         * Execution state.
                         * @member {google.cloud.notebooks.v1.Execution.State} state
                         * @memberof google.cloud.notebooks.v1.Execution
                         * @instance
                         */
                        Execution.prototype.state = 0;
    
                        /**
                         * Execution outputNotebookFile.
                         * @member {string} outputNotebookFile
                         * @memberof google.cloud.notebooks.v1.Execution
                         * @instance
                         */
                        Execution.prototype.outputNotebookFile = "";
    
                        /**
                         * Execution jobUri.
                         * @member {string} jobUri
                         * @memberof google.cloud.notebooks.v1.Execution
                         * @instance
                         */
                        Execution.prototype.jobUri = "";
    
                        /**
                         * Creates a new Execution instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.notebooks.v1.Execution
                         * @static
                         * @param {google.cloud.notebooks.v1.IExecution=} [properties] Properties to set
                         * @returns {google.cloud.notebooks.v1.Execution} Execution instance
                         */
                        Execution.create = function create(properties) {
                            return new Execution(properties);
                        };
    
                        /**
                         * Encodes the specified Execution message. Does not implicitly {@link google.cloud.notebooks.v1.Execution.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.notebooks.v1.Execution
                         * @static
                         * @param {google.cloud.notebooks.v1.IExecution} message Execution message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        Execution.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.executionTemplate != null && Object.hasOwnProperty.call(message, "executionTemplate"))
                                $root.google.cloud.notebooks.v1.ExecutionTemplate.encode(message.executionTemplate, writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                            if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                                writer.uint32(/* id 2, wireType 2 =*/18).string(message.name);
                            if (message.displayName != null && Object.hasOwnProperty.call(message, "displayName"))
                                writer.uint32(/* id 3, wireType 2 =*/26).string(message.displayName);
                            if (message.description != null && Object.hasOwnProperty.call(message, "description"))
                                writer.uint32(/* id 4, wireType 2 =*/34).string(message.description);
                            if (message.createTime != null && Object.hasOwnProperty.call(message, "createTime"))
                                $root.google.protobuf.Timestamp.encode(message.createTime, writer.uint32(/* id 5, wireType 2 =*/42).fork()).ldelim();
                            if (message.updateTime != null && Object.hasOwnProperty.call(message, "updateTime"))
                                $root.google.protobuf.Timestamp.encode(message.updateTime, writer.uint32(/* id 6, wireType 2 =*/50).fork()).ldelim();
                            if (message.state != null && Object.hasOwnProperty.call(message, "state"))
                                writer.uint32(/* id 7, wireType 0 =*/56).int32(message.state);
                            if (message.outputNotebookFile != null && Object.hasOwnProperty.call(message, "outputNotebookFile"))
                                writer.uint32(/* id 8, wireType 2 =*/66).string(message.outputNotebookFile);
                            if (message.jobUri != null && Object.hasOwnProperty.call(message, "jobUri"))
                                writer.uint32(/* id 9, wireType 2 =*/74).string(message.jobUri);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified Execution message, length delimited. Does not implicitly {@link google.cloud.notebooks.v1.Execution.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.notebooks.v1.Execution
                         * @static
                         * @param {google.cloud.notebooks.v1.IExecution} message Execution message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        Execution.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes an Execution message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.notebooks.v1.Execution
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.notebooks.v1.Execution} Execution
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        Execution.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.notebooks.v1.Execution();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.executionTemplate = $root.google.cloud.notebooks.v1.ExecutionTemplate.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 2: {
                                        message.name = reader.string();
                                        break;
                                    }
                                case 3: {
                                        message.displayName = reader.string();
                                        break;
                                    }
                                case 4: {
                                        message.description = reader.string();
                                        break;
                                    }
                                case 5: {
                                        message.createTime = $root.google.protobuf.Timestamp.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 6: {
                                        message.updateTime = $root.google.protobuf.Timestamp.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 7: {
                                        message.state = reader.int32();
                                        break;
                                    }
                                case 8: {
                                        message.outputNotebookFile = reader.string();
                                        break;
                                    }
                                case 9: {
                                        message.jobUri = reader.string();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes an Execution message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.notebooks.v1.Execution
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.notebooks.v1.Execution} Execution
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        Execution.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies an Execution message.
                         * @function verify
                         * @memberof google.cloud.notebooks.v1.Execution
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        Execution.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.executionTemplate != null && message.hasOwnProperty("executionTemplate")) {
                                var error = $root.google.cloud.notebooks.v1.ExecutionTemplate.verify(message.executionTemplate);
                                if (error)
                                    return "executionTemplate." + error;
                            }
                            if (message.name != null && message.hasOwnProperty("name"))
                                if (!$util.isString(message.name))
                                    return "name: string expected";
                            if (message.displayName != null && message.hasOwnProperty("displayName"))
                                if (!$util.isString(message.displayName))
                                    return "displayName: string expected";
                            if (message.description != null && message.hasOwnProperty("description"))
                                if (!$util.isString(message.description))
                                    return "description: string expected";
                            if (message.createTime != null && message.hasOwnProperty("createTime")) {
                                var error = $root.google.protobuf.Timestamp.verify(message.createTime);
                                if (error)
                                    return "createTime." + error;
                            }
                            if (message.updateTime != null && message.hasOwnProperty("updateTime")) {
                                var error = $root.google.protobuf.Timestamp.verify(message.updateTime);
                                if (error)
                                    return "updateTime." + error;
                            }
                            if (message.state != null && message.hasOwnProperty("state"))
                                switch (message.state) {
                                default:
                                    return "state: enum value expected";
                                case 0:
                                case 1:
                                case 2:
                                case 3:
                                case 4:
                                case 5:
                                case 6:
                                case 7:
                                case 9:
                                case 10:
                                    break;
                                }
                            if (message.outputNotebookFile != null && message.hasOwnProperty("outputNotebookFile"))
                                if (!$util.isString(message.outputNotebookFile))
                                    return "outputNotebookFile: string expected";
                            if (message.jobUri != null && message.hasOwnProperty("jobUri"))
                                if (!$util.isString(message.jobUri))
                                    return "jobUri: string expected";
                            return null;
                        };
    
                        /**
                         * Creates an Execution message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.notebooks.v1.Execution
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.notebooks.v1.Execution} Execution
                         */
                        Execution.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.notebooks.v1.Execution)
                                return object;
                            var message = new $root.google.cloud.notebooks.v1.Execution();
                            if (object.executionTemplate != null) {
                                if (typeof object.executionTemplate !== "object")
                                    throw TypeError(".google.cloud.notebooks.v1.Execution.executionTemplate: object expected");
                                message.executionTemplate = $root.google.cloud.notebooks.v1.ExecutionTemplate.fromObject(object.executionTemplate);
                            }
                            if (object.name != null)
                                message.name = String(object.name);
                            if (object.displayName != null)
                                message.displayName = String(object.displayName);
                            if (object.description != null)
                                message.description = String(object.description);
                            if (object.createTime != null) {
                                if (typeof object.createTime !== "object")
                                    throw TypeError(".google.cloud.notebooks.v1.Execution.createTime: object expected");
                                message.createTime = $root.google.protobuf.Timestamp.fromObject(object.createTime);
                            }
                            if (object.updateTime != null) {
                                if (typeof object.updateTime !== "object")
                                    throw TypeError(".google.cloud.notebooks.v1.Execution.updateTime: object expected");
                                message.updateTime = $root.google.protobuf.Timestamp.fromObject(object.updateTime);
                            }
                            switch (object.state) {
                            default:
                                if (typeof object.state === "number") {
                                    message.state = object.state;
                                    break;
                                }
                                break;
                            case "STATE_UNSPECIFIED":
                            case 0:
                                message.state = 0;
                                break;
                            case "QUEUED":
                            case 1:
                                message.state = 1;
                                break;
                            case "PREPARING":
                            case 2:
                                message.state = 2;
                                break;
                            case "RUNNING":
                            case 3:
                                message.state = 3;
                                break;
                            case "SUCCEEDED":
                            case 4:
                                message.state = 4;
                                break;
                            case "FAILED":
                            case 5:
                                message.state = 5;
                                break;
                            case "CANCELLING":
                            case 6:
                                message.state = 6;
                                break;
                            case "CANCELLED":
                            case 7:
                                message.state = 7;
                                break;
                            case "EXPIRED":
                            case 9:
                                message.state = 9;
                                break;
                            case "INITIALIZING":
                            case 10:
                                message.state = 10;
                                break;
                            }
                            if (object.outputNotebookFile != null)
                                message.outputNotebookFile = String(object.outputNotebookFile);
                            if (object.jobUri != null)
                                message.jobUri = String(object.jobUri);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from an Execution message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.notebooks.v1.Execution
                         * @static
                         * @param {google.cloud.notebooks.v1.Execution} message Execution
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        Execution.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.executionTemplate = null;
                                object.name = "";
                                object.displayName = "";
                                object.description = "";
                                object.createTime = null;
                                object.updateTime = null;
                                object.state = options.enums === String ? "STATE_UNSPECIFIED" : 0;
                                object.outputNotebookFile = "";
                                object.jobUri = "";
                            }
                            if (message.executionTemplate != null && message.hasOwnProperty("executionTemplate"))
                                object.executionTemplate = $root.google.cloud.notebooks.v1.ExecutionTemplate.toObject(message.executionTemplate, options);
                            if (message.name != null && message.hasOwnProperty("name"))
                                object.name = message.name;
                            if (message.displayName != null && message.hasOwnProperty("displayName"))
                                object.displayName = message.displayName;
                            if (message.description != null && message.hasOwnProperty("description"))
                                object.description = message.description;
                            if (message.createTime != null && message.hasOwnProperty("createTime"))
                                object.createTime = $root.google.protobuf.Timestamp.toObject(message.createTime, options);
                            if (message.updateTime != null && message.hasOwnProperty("updateTime"))
                                object.updateTime = $root.google.protobuf.Timestamp.toObject(message.updateTime, options);
                            if (message.state != null && message.hasOwnProperty("state"))
                                object.state = options.enums === String ? $root.google.cloud.notebooks.v1.Execution.State[message.state] === undefined ? message.state : $root.google.cloud.notebooks.v1.Execution.State[message.state] : message.state;
                            if (message.outputNotebookFile != null && message.hasOwnProperty("outputNotebookFile"))
                                object.outputNotebookFile = message.outputNotebookFile;
                            if (message.jobUri != null && message.hasOwnProperty("jobUri"))
                                object.jobUri = message.jobUri;
                            return object;
                        };
    
                        /**
                         * Converts this Execution to JSON.
                         * @function toJSON
                         * @memberof google.cloud.notebooks.v1.Execution
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        Execution.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for Execution
                         * @function getTypeUrl
                         * @memberof google.cloud.notebooks.v1.Execution
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        Execution.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.notebooks.v1.Execution";
                        };
    
                        /**
                         * State enum.
                         * @name google.cloud.notebooks.v1.Execution.State
                         * @enum {number}
                         * @property {number} STATE_UNSPECIFIED=0 STATE_UNSPECIFIED value
                         * @property {number} QUEUED=1 QUEUED value
                         * @property {number} PREPARING=2 PREPARING value
                         * @property {number} RUNNING=3 RUNNING value
                         * @property {number} SUCCEEDED=4 SUCCEEDED value
                         * @property {number} FAILED=5 FAILED value
                         * @property {number} CANCELLING=6 CANCELLING value
                         * @property {number} CANCELLED=7 CANCELLED value
                         * @property {number} EXPIRED=9 EXPIRED value
                         * @property {number} INITIALIZING=10 INITIALIZING value
                         */
                        Execution.State = (function() {
                            var valuesById = {}, values = Object.create(valuesById);
                            values[valuesById[0] = "STATE_UNSPECIFIED"] = 0;
                            values[valuesById[1] = "QUEUED"] = 1;
                            values[valuesById[2] = "PREPARING"] = 2;
                            values[valuesById[3] = "RUNNING"] = 3;
                            values[valuesById[4] = "SUCCEEDED"] = 4;
                            values[valuesById[5] = "FAILED"] = 5;
                            values[valuesById[6] = "CANCELLING"] = 6;
                            values[valuesById[7] = "CANCELLED"] = 7;
                            values[valuesById[9] = "EXPIRED"] = 9;
                            values[valuesById[10] = "INITIALIZING"] = 10;
                            return values;
                        })();
    
                        return Execution;
                    })();
    
                    v1.ReservationAffinity = (function() {
    
                        /**
                         * Properties of a ReservationAffinity.
                         * @memberof google.cloud.notebooks.v1
                         * @interface IReservationAffinity
                         * @property {google.cloud.notebooks.v1.ReservationAffinity.Type|null} [consumeReservationType] ReservationAffinity consumeReservationType
                         * @property {string|null} [key] ReservationAffinity key
                         * @property {Array.<string>|null} [values] ReservationAffinity values
                         */
    
                        /**
                         * Constructs a new ReservationAffinity.
                         * @memberof google.cloud.notebooks.v1
                         * @classdesc Represents a ReservationAffinity.
                         * @implements IReservationAffinity
                         * @constructor
                         * @param {google.cloud.notebooks.v1.IReservationAffinity=} [properties] Properties to set
                         */
                        function ReservationAffinity(properties) {
                            this.values = [];
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * ReservationAffinity consumeReservationType.
                         * @member {google.cloud.notebooks.v1.ReservationAffinity.Type} consumeReservationType
                         * @memberof google.cloud.notebooks.v1.ReservationAffinity
                         * @instance
                         */
                        ReservationAffinity.prototype.consumeReservationType = 0;
    
                        /**
                         * ReservationAffinity key.
                         * @member {string} key
                         * @memberof google.cloud.notebooks.v1.ReservationAffinity
                         * @instance
                         */
                        ReservationAffinity.prototype.key = "";
    
                        /**
                         * ReservationAffinity values.
                         * @member {Array.<string>} values
                         * @memberof google.cloud.notebooks.v1.ReservationAffinity
                         * @instance
                         */
                        ReservationAffinity.prototype.values = $util.emptyArray;
    
                        /**
                         * Creates a new ReservationAffinity instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.notebooks.v1.ReservationAffinity
                         * @static
                         * @param {google.cloud.notebooks.v1.IReservationAffinity=} [properties] Properties to set
                         * @returns {google.cloud.notebooks.v1.ReservationAffinity} ReservationAffinity instance
                         */
                        ReservationAffinity.create = function create(properties) {
                            return new ReservationAffinity(properties);
                        };
    
                        /**
                         * Encodes the specified ReservationAffinity message. Does not implicitly {@link google.cloud.notebooks.v1.ReservationAffinity.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.notebooks.v1.ReservationAffinity
                         * @static
                         * @param {google.cloud.notebooks.v1.IReservationAffinity} message ReservationAffinity message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        ReservationAffinity.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.consumeReservationType != null && Object.hasOwnProperty.call(message, "consumeReservationType"))
                                writer.uint32(/* id 1, wireType 0 =*/8).int32(message.consumeReservationType);
                            if (message.key != null && Object.hasOwnProperty.call(message, "key"))
                                writer.uint32(/* id 2, wireType 2 =*/18).string(message.key);
                            if (message.values != null && message.values.length)
                                for (var i = 0; i < message.values.length; ++i)
                                    writer.uint32(/* id 3, wireType 2 =*/26).string(message.values[i]);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified ReservationAffinity message, length delimited. Does not implicitly {@link google.cloud.notebooks.v1.ReservationAffinity.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.notebooks.v1.ReservationAffinity
                         * @static
                         * @param {google.cloud.notebooks.v1.IReservationAffinity} message ReservationAffinity message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        ReservationAffinity.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a ReservationAffinity message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.notebooks.v1.ReservationAffinity
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.notebooks.v1.ReservationAffinity} ReservationAffinity
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        ReservationAffinity.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.notebooks.v1.ReservationAffinity();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.consumeReservationType = reader.int32();
                                        break;
                                    }
                                case 2: {
                                        message.key = reader.string();
                                        break;
                                    }
                                case 3: {
                                        if (!(message.values && message.values.length))
                                            message.values = [];
                                        message.values.push(reader.string());
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a ReservationAffinity message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.notebooks.v1.ReservationAffinity
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.notebooks.v1.ReservationAffinity} ReservationAffinity
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        ReservationAffinity.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a ReservationAffinity message.
                         * @function verify
                         * @memberof google.cloud.notebooks.v1.ReservationAffinity
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        ReservationAffinity.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.consumeReservationType != null && message.hasOwnProperty("consumeReservationType"))
                                switch (message.consumeReservationType) {
                                default:
                                    return "consumeReservationType: enum value expected";
                                case 0:
                                case 1:
                                case 2:
                                case 3:
                                    break;
                                }
                            if (message.key != null && message.hasOwnProperty("key"))
                                if (!$util.isString(message.key))
                                    return "key: string expected";
                            if (message.values != null && message.hasOwnProperty("values")) {
                                if (!Array.isArray(message.values))
                                    return "values: array expected";
                                for (var i = 0; i < message.values.length; ++i)
                                    if (!$util.isString(message.values[i]))
                                        return "values: string[] expected";
                            }
                            return null;
                        };
    
                        /**
                         * Creates a ReservationAffinity message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.notebooks.v1.ReservationAffinity
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.notebooks.v1.ReservationAffinity} ReservationAffinity
                         */
                        ReservationAffinity.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.notebooks.v1.ReservationAffinity)
                                return object;
                            var message = new $root.google.cloud.notebooks.v1.ReservationAffinity();
                            switch (object.consumeReservationType) {
                            default:
                                if (typeof object.consumeReservationType === "number") {
                                    message.consumeReservationType = object.consumeReservationType;
                                    break;
                                }
                                break;
                            case "TYPE_UNSPECIFIED":
                            case 0:
                                message.consumeReservationType = 0;
                                break;
                            case "NO_RESERVATION":
                            case 1:
                                message.consumeReservationType = 1;
                                break;
                            case "ANY_RESERVATION":
                            case 2:
                                message.consumeReservationType = 2;
                                break;
                            case "SPECIFIC_RESERVATION":
                            case 3:
                                message.consumeReservationType = 3;
                                break;
                            }
                            if (object.key != null)
                                message.key = String(object.key);
                            if (object.values) {
                                if (!Array.isArray(object.values))
                                    throw TypeError(".google.cloud.notebooks.v1.ReservationAffinity.values: array expected");
                                message.values = [];
                                for (var i = 0; i < object.values.length; ++i)
                                    message.values[i] = String(object.values[i]);
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a ReservationAffinity message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.notebooks.v1.ReservationAffinity
                         * @static
                         * @param {google.cloud.notebooks.v1.ReservationAffinity} message ReservationAffinity
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        ReservationAffinity.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.arrays || options.defaults)
                                object.values = [];
                            if (options.defaults) {
                                object.consumeReservationType = options.enums === String ? "TYPE_UNSPECIFIED" : 0;
                                object.key = "";
                            }
                            if (message.consumeReservationType != null && message.hasOwnProperty("consumeReservationType"))
                                object.consumeReservationType = options.enums === String ? $root.google.cloud.notebooks.v1.ReservationAffinity.Type[message.consumeReservationType] === undefined ? message.consumeReservationType : $root.google.cloud.notebooks.v1.ReservationAffinity.Type[message.consumeReservationType] : message.consumeReservationType;
                            if (message.key != null && message.hasOwnProperty("key"))
                                object.key = message.key;
                            if (message.values && message.values.length) {
                                object.values = [];
                                for (var j = 0; j < message.values.length; ++j)
                                    object.values[j] = message.values[j];
                            }
                            return object;
                        };
    
                        /**
                         * Converts this ReservationAffinity to JSON.
                         * @function toJSON
                         * @memberof google.cloud.notebooks.v1.ReservationAffinity
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        ReservationAffinity.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for ReservationAffinity
                         * @function getTypeUrl
                         * @memberof google.cloud.notebooks.v1.ReservationAffinity
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        ReservationAffinity.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.notebooks.v1.ReservationAffinity";
                        };
    
                        /**
                         * Type enum.
                         * @name google.cloud.notebooks.v1.ReservationAffinity.Type
                         * @enum {number}
                         * @property {number} TYPE_UNSPECIFIED=0 TYPE_UNSPECIFIED value
                         * @property {number} NO_RESERVATION=1 NO_RESERVATION value
                         * @property {number} ANY_RESERVATION=2 ANY_RESERVATION value
                         * @property {number} SPECIFIC_RESERVATION=3 SPECIFIC_RESERVATION value
                         */
                        ReservationAffinity.Type = (function() {
                            var valuesById = {}, values = Object.create(valuesById);
                            values[valuesById[0] = "TYPE_UNSPECIFIED"] = 0;
                            values[valuesById[1] = "NO_RESERVATION"] = 1;
                            values[valuesById[2] = "ANY_RESERVATION"] = 2;
                            values[valuesById[3] = "SPECIFIC_RESERVATION"] = 3;
                            return values;
                        })();
    
                        return ReservationAffinity;
                    })();
    
                    v1.Instance = (function() {
    
                        /**
                         * Properties of an Instance.
                         * @memberof google.cloud.notebooks.v1
                         * @interface IInstance
                         * @property {string|null} [name] Instance name
                         * @property {google.cloud.notebooks.v1.IVmImage|null} [vmImage] Instance vmImage
                         * @property {google.cloud.notebooks.v1.IContainerImage|null} [containerImage] Instance containerImage
                         * @property {string|null} [postStartupScript] Instance postStartupScript
                         * @property {string|null} [proxyUri] Instance proxyUri
                         * @property {Array.<string>|null} [instanceOwners] Instance instanceOwners
                         * @property {string|null} [serviceAccount] Instance serviceAccount
                         * @property {Array.<string>|null} [serviceAccountScopes] Instance serviceAccountScopes
                         * @property {string|null} [machineType] Instance machineType
                         * @property {google.cloud.notebooks.v1.Instance.IAcceleratorConfig|null} [acceleratorConfig] Instance acceleratorConfig
                         * @property {google.cloud.notebooks.v1.Instance.State|null} [state] Instance state
                         * @property {boolean|null} [installGpuDriver] Instance installGpuDriver
                         * @property {string|null} [customGpuDriverPath] Instance customGpuDriverPath
                         * @property {google.cloud.notebooks.v1.Instance.DiskType|null} [bootDiskType] Instance bootDiskType
                         * @property {number|Long|null} [bootDiskSizeGb] Instance bootDiskSizeGb
                         * @property {google.cloud.notebooks.v1.Instance.DiskType|null} [dataDiskType] Instance dataDiskType
                         * @property {number|Long|null} [dataDiskSizeGb] Instance dataDiskSizeGb
                         * @property {boolean|null} [noRemoveDataDisk] Instance noRemoveDataDisk
                         * @property {google.cloud.notebooks.v1.Instance.DiskEncryption|null} [diskEncryption] Instance diskEncryption
                         * @property {string|null} [kmsKey] Instance kmsKey
                         * @property {Array.<google.cloud.notebooks.v1.Instance.IDisk>|null} [disks] Instance disks
                         * @property {google.cloud.notebooks.v1.Instance.IShieldedInstanceConfig|null} [shieldedInstanceConfig] Instance shieldedInstanceConfig
                         * @property {boolean|null} [noPublicIp] Instance noPublicIp
                         * @property {boolean|null} [noProxyAccess] Instance noProxyAccess
                         * @property {string|null} [network] Instance network
                         * @property {string|null} [subnet] Instance subnet
                         * @property {Object.<string,string>|null} [labels] Instance labels
                         * @property {Object.<string,string>|null} [metadata] Instance metadata
                         * @property {Array.<string>|null} [tags] Instance tags
                         * @property {Array.<google.cloud.notebooks.v1.Instance.IUpgradeHistoryEntry>|null} [upgradeHistory] Instance upgradeHistory
                         * @property {google.cloud.notebooks.v1.Instance.NicType|null} [nicType] Instance nicType
                         * @property {google.cloud.notebooks.v1.IReservationAffinity|null} [reservationAffinity] Instance reservationAffinity
                         * @property {string|null} [creator] Instance creator
                         * @property {boolean|null} [canIpForward] Instance canIpForward
                         * @property {google.protobuf.ITimestamp|null} [createTime] Instance createTime
                         * @property {google.protobuf.ITimestamp|null} [updateTime] Instance updateTime
                         */
    
                        /**
                         * Constructs a new Instance.
                         * @memberof google.cloud.notebooks.v1
                         * @classdesc Represents an Instance.
                         * @implements IInstance
                         * @constructor
                         * @param {google.cloud.notebooks.v1.IInstance=} [properties] Properties to set
                         */
                        function Instance(properties) {
                            this.instanceOwners = [];
                            this.serviceAccountScopes = [];
                            this.disks = [];
                            this.labels = {};
                            this.metadata = {};
                            this.tags = [];
                            this.upgradeHistory = [];
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * Instance name.
                         * @member {string} name
                         * @memberof google.cloud.notebooks.v1.Instance
                         * @instance
                         */
                        Instance.prototype.name = "";
    
                        /**
                         * Instance vmImage.
                         * @member {google.cloud.notebooks.v1.IVmImage|null|undefined} vmImage
                         * @memberof google.cloud.notebooks.v1.Instance
                         * @instance
                         */
                        Instance.prototype.vmImage = null;
    
                        /**
                         * Instance containerImage.
                         * @member {google.cloud.notebooks.v1.IContainerImage|null|undefined} containerImage
                         * @memberof google.cloud.notebooks.v1.Instance
                         * @instance
                         */
                        Instance.prototype.containerImage = null;
    
                        /**
                         * Instance postStartupScript.
                         * @member {string} postStartupScript
                         * @memberof google.cloud.notebooks.v1.Instance
                         * @instance
                         */
                        Instance.prototype.postStartupScript = "";
    
                        /**
                         * Instance proxyUri.
                         * @member {string} proxyUri
                         * @memberof google.cloud.notebooks.v1.Instance
                         * @instance
                         */
                        Instance.prototype.proxyUri = "";
    
                        /**
                         * Instance instanceOwners.
                         * @member {Array.<string>} instanceOwners
                         * @memberof google.cloud.notebooks.v1.Instance
                         * @instance
                         */
                        Instance.prototype.instanceOwners = $util.emptyArray;
    
                        /**
                         * Instance serviceAccount.
                         * @member {string} serviceAccount
                         * @memberof google.cloud.notebooks.v1.Instance
                         * @instance
                         */
                        Instance.prototype.serviceAccount = "";
    
                        /**
                         * Instance serviceAccountScopes.
                         * @member {Array.<string>} serviceAccountScopes
                         * @memberof google.cloud.notebooks.v1.Instance
                         * @instance
                         */
                        Instance.prototype.serviceAccountScopes = $util.emptyArray;
    
                        /**
                         * Instance machineType.
                         * @member {string} machineType
                         * @memberof google.cloud.notebooks.v1.Instance
                         * @instance
                         */
                        Instance.prototype.machineType = "";
    
                        /**
                         * Instance acceleratorConfig.
                         * @member {google.cloud.notebooks.v1.Instance.IAcceleratorConfig|null|undefined} acceleratorConfig
                         * @memberof google.cloud.notebooks.v1.Instance
                         * @instance
                         */
                        Instance.prototype.acceleratorConfig = null;
    
                        /**
                         * Instance state.
                         * @member {google.cloud.notebooks.v1.Instance.State} state
                         * @memberof google.cloud.notebooks.v1.Instance
                         * @instance
                         */
                        Instance.prototype.state = 0;
    
                        /**
                         * Instance installGpuDriver.
                         * @member {boolean} installGpuDriver
                         * @memberof google.cloud.notebooks.v1.Instance
                         * @instance
                         */
                        Instance.prototype.installGpuDriver = false;
    
                        /**
                         * Instance customGpuDriverPath.
                         * @member {string} customGpuDriverPath
                         * @memberof google.cloud.notebooks.v1.Instance
                         * @instance
                         */
                        Instance.prototype.customGpuDriverPath = "";
    
                        /**
                         * Instance bootDiskType.
                         * @member {google.cloud.notebooks.v1.Instance.DiskType} bootDiskType
                         * @memberof google.cloud.notebooks.v1.Instance
                         * @instance
                         */
                        Instance.prototype.bootDiskType = 0;
    
                        /**
                         * Instance bootDiskSizeGb.
                         * @member {number|Long} bootDiskSizeGb
                         * @memberof google.cloud.notebooks.v1.Instance
                         * @instance
                         */
                        Instance.prototype.bootDiskSizeGb = $util.Long ? $util.Long.fromBits(0,0,false) : 0;
    
                        /**
                         * Instance dataDiskType.
                         * @member {google.cloud.notebooks.v1.Instance.DiskType} dataDiskType
                         * @memberof google.cloud.notebooks.v1.Instance
                         * @instance
                         */
                        Instance.prototype.dataDiskType = 0;
    
                        /**
                         * Instance dataDiskSizeGb.
                         * @member {number|Long} dataDiskSizeGb
                         * @memberof google.cloud.notebooks.v1.Instance
                         * @instance
                         */
                        Instance.prototype.dataDiskSizeGb = $util.Long ? $util.Long.fromBits(0,0,false) : 0;
    
                        /**
                         * Instance noRemoveDataDisk.
                         * @member {boolean} noRemoveDataDisk
                         * @memberof google.cloud.notebooks.v1.Instance
                         * @instance
                         */
                        Instance.prototype.noRemoveDataDisk = false;
    
                        /**
                         * Instance diskEncryption.
                         * @member {google.cloud.notebooks.v1.Instance.DiskEncryption} diskEncryption
                         * @memberof google.cloud.notebooks.v1.Instance
                         * @instance
                         */
                        Instance.prototype.diskEncryption = 0;
    
                        /**
                         * Instance kmsKey.
                         * @member {string} kmsKey
                         * @memberof google.cloud.notebooks.v1.Instance
                         * @instance
                         */
                        Instance.prototype.kmsKey = "";
    
                        /**
                         * Instance disks.
                         * @member {Array.<google.cloud.notebooks.v1.Instance.IDisk>} disks
                         * @memberof google.cloud.notebooks.v1.Instance
                         * @instance
                         */
                        Instance.prototype.disks = $util.emptyArray;
    
                        /**
                         * Instance shieldedInstanceConfig.
                         * @member {google.cloud.notebooks.v1.Instance.IShieldedInstanceConfig|null|undefined} shieldedInstanceConfig
                         * @memberof google.cloud.notebooks.v1.Instance
                         * @instance
                         */
                        Instance.prototype.shieldedInstanceConfig = null;
    
                        /**
                         * Instance noPublicIp.
                         * @member {boolean} noPublicIp
                         * @memberof google.cloud.notebooks.v1.Instance
                         * @instance
                         */
                        Instance.prototype.noPublicIp = false;
    
                        /**
                         * Instance noProxyAccess.
                         * @member {boolean} noProxyAccess
                         * @memberof google.cloud.notebooks.v1.Instance
                         * @instance
                         */
                        Instance.prototype.noProxyAccess = false;
    
                        /**
                         * Instance network.
                         * @member {string} network
                         * @memberof google.cloud.notebooks.v1.Instance
                         * @instance
                         */
                        Instance.prototype.network = "";
    
                        /**
                         * Instance subnet.
                         * @member {string} subnet
                         * @memberof google.cloud.notebooks.v1.Instance
                         * @instance
                         */
                        Instance.prototype.subnet = "";
    
                        /**
                         * Instance labels.
                         * @member {Object.<string,string>} labels
                         * @memberof google.cloud.notebooks.v1.Instance
                         * @instance
                         */
                        Instance.prototype.labels = $util.emptyObject;
    
                        /**
                         * Instance metadata.
                         * @member {Object.<string,string>} metadata
                         * @memberof google.cloud.notebooks.v1.Instance
                         * @instance
                         */
                        Instance.prototype.metadata = $util.emptyObject;
    
                        /**
                         * Instance tags.
                         * @member {Array.<string>} tags
                         * @memberof google.cloud.notebooks.v1.Instance
                         * @instance
                         */
                        Instance.prototype.tags = $util.emptyArray;
    
                        /**
                         * Instance upgradeHistory.
                         * @member {Array.<google.cloud.notebooks.v1.Instance.IUpgradeHistoryEntry>} upgradeHistory
                         * @memberof google.cloud.notebooks.v1.Instance
                         * @instance
                         */
                        Instance.prototype.upgradeHistory = $util.emptyArray;
    
                        /**
                         * Instance nicType.
                         * @member {google.cloud.notebooks.v1.Instance.NicType} nicType
                         * @memberof google.cloud.notebooks.v1.Instance
                         * @instance
                         */
                        Instance.prototype.nicType = 0;
    
                        /**
                         * Instance reservationAffinity.
                         * @member {google.cloud.notebooks.v1.IReservationAffinity|null|undefined} reservationAffinity
                         * @memberof google.cloud.notebooks.v1.Instance
                         * @instance
                         */
                        Instance.prototype.reservationAffinity = null;
    
                        /**
                         * Instance creator.
                         * @member {string} creator
                         * @memberof google.cloud.notebooks.v1.Instance
                         * @instance
                         */
                        Instance.prototype.creator = "";
    
                        /**
                         * Instance canIpForward.
                         * @member {boolean} canIpForward
                         * @memberof google.cloud.notebooks.v1.Instance
                         * @instance
                         */
                        Instance.prototype.canIpForward = false;
    
                        /**
                         * Instance createTime.
                         * @member {google.protobuf.ITimestamp|null|undefined} createTime
                         * @memberof google.cloud.notebooks.v1.Instance
                         * @instance
                         */
                        Instance.prototype.createTime = null;
    
                        /**
                         * Instance updateTime.
                         * @member {google.protobuf.ITimestamp|null|undefined} updateTime
                         * @memberof google.cloud.notebooks.v1.Instance
                         * @instance
                         */
                        Instance.prototype.updateTime = null;
    
                        // OneOf field names bound to virtual getters and setters
                        var $oneOfFields;
    
                        /**
                         * Instance environment.
                         * @member {"vmImage"|"containerImage"|undefined} environment
                         * @memberof google.cloud.notebooks.v1.Instance
                         * @instance
                         */
                        Object.defineProperty(Instance.prototype, "environment", {
                            get: $util.oneOfGetter($oneOfFields = ["vmImage", "containerImage"]),
                            set: $util.oneOfSetter($oneOfFields)
                        });
    
                        /**
                         * Creates a new Instance instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.notebooks.v1.Instance
                         * @static
                         * @param {google.cloud.notebooks.v1.IInstance=} [properties] Properties to set
                         * @returns {google.cloud.notebooks.v1.Instance} Instance instance
                         */
                        Instance.create = function create(properties) {
                            return new Instance(properties);
                        };
    
                        /**
                         * Encodes the specified Instance message. Does not implicitly {@link google.cloud.notebooks.v1.Instance.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.notebooks.v1.Instance
                         * @static
                         * @param {google.cloud.notebooks.v1.IInstance} message Instance message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        Instance.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                            if (message.vmImage != null && Object.hasOwnProperty.call(message, "vmImage"))
                                $root.google.cloud.notebooks.v1.VmImage.encode(message.vmImage, writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                            if (message.containerImage != null && Object.hasOwnProperty.call(message, "containerImage"))
                                $root.google.cloud.notebooks.v1.ContainerImage.encode(message.containerImage, writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();
                            if (message.postStartupScript != null && Object.hasOwnProperty.call(message, "postStartupScript"))
                                writer.uint32(/* id 4, wireType 2 =*/34).string(message.postStartupScript);
                            if (message.proxyUri != null && Object.hasOwnProperty.call(message, "proxyUri"))
                                writer.uint32(/* id 5, wireType 2 =*/42).string(message.proxyUri);
                            if (message.instanceOwners != null && message.instanceOwners.length)
                                for (var i = 0; i < message.instanceOwners.length; ++i)
                                    writer.uint32(/* id 6, wireType 2 =*/50).string(message.instanceOwners[i]);
                            if (message.serviceAccount != null && Object.hasOwnProperty.call(message, "serviceAccount"))
                                writer.uint32(/* id 7, wireType 2 =*/58).string(message.serviceAccount);
                            if (message.machineType != null && Object.hasOwnProperty.call(message, "machineType"))
                                writer.uint32(/* id 8, wireType 2 =*/66).string(message.machineType);
                            if (message.acceleratorConfig != null && Object.hasOwnProperty.call(message, "acceleratorConfig"))
                                $root.google.cloud.notebooks.v1.Instance.AcceleratorConfig.encode(message.acceleratorConfig, writer.uint32(/* id 9, wireType 2 =*/74).fork()).ldelim();
                            if (message.state != null && Object.hasOwnProperty.call(message, "state"))
                                writer.uint32(/* id 10, wireType 0 =*/80).int32(message.state);
                            if (message.installGpuDriver != null && Object.hasOwnProperty.call(message, "installGpuDriver"))
                                writer.uint32(/* id 11, wireType 0 =*/88).bool(message.installGpuDriver);
                            if (message.customGpuDriverPath != null && Object.hasOwnProperty.call(message, "customGpuDriverPath"))
                                writer.uint32(/* id 12, wireType 2 =*/98).string(message.customGpuDriverPath);
                            if (message.bootDiskType != null && Object.hasOwnProperty.call(message, "bootDiskType"))
                                writer.uint32(/* id 13, wireType 0 =*/104).int32(message.bootDiskType);
                            if (message.bootDiskSizeGb != null && Object.hasOwnProperty.call(message, "bootDiskSizeGb"))
                                writer.uint32(/* id 14, wireType 0 =*/112).int64(message.bootDiskSizeGb);
                            if (message.diskEncryption != null && Object.hasOwnProperty.call(message, "diskEncryption"))
                                writer.uint32(/* id 15, wireType 0 =*/120).int32(message.diskEncryption);
                            if (message.kmsKey != null && Object.hasOwnProperty.call(message, "kmsKey"))
                                writer.uint32(/* id 16, wireType 2 =*/130).string(message.kmsKey);
                            if (message.noPublicIp != null && Object.hasOwnProperty.call(message, "noPublicIp"))
                                writer.uint32(/* id 17, wireType 0 =*/136).bool(message.noPublicIp);
                            if (message.noProxyAccess != null && Object.hasOwnProperty.call(message, "noProxyAccess"))
                                writer.uint32(/* id 18, wireType 0 =*/144).bool(message.noProxyAccess);
                            if (message.network != null && Object.hasOwnProperty.call(message, "network"))
                                writer.uint32(/* id 19, wireType 2 =*/154).string(message.network);
                            if (message.subnet != null && Object.hasOwnProperty.call(message, "subnet"))
                                writer.uint32(/* id 20, wireType 2 =*/162).string(message.subnet);
                            if (message.labels != null && Object.hasOwnProperty.call(message, "labels"))
                                for (var keys = Object.keys(message.labels), i = 0; i < keys.length; ++i)
                                    writer.uint32(/* id 21, wireType 2 =*/170).fork().uint32(/* id 1, wireType 2 =*/10).string(keys[i]).uint32(/* id 2, wireType 2 =*/18).string(message.labels[keys[i]]).ldelim();
                            if (message.metadata != null && Object.hasOwnProperty.call(message, "metadata"))
                                for (var keys = Object.keys(message.metadata), i = 0; i < keys.length; ++i)
                                    writer.uint32(/* id 22, wireType 2 =*/178).fork().uint32(/* id 1, wireType 2 =*/10).string(keys[i]).uint32(/* id 2, wireType 2 =*/18).string(message.metadata[keys[i]]).ldelim();
                            if (message.createTime != null && Object.hasOwnProperty.call(message, "createTime"))
                                $root.google.protobuf.Timestamp.encode(message.createTime, writer.uint32(/* id 23, wireType 2 =*/186).fork()).ldelim();
                            if (message.updateTime != null && Object.hasOwnProperty.call(message, "updateTime"))
                                $root.google.protobuf.Timestamp.encode(message.updateTime, writer.uint32(/* id 24, wireType 2 =*/194).fork()).ldelim();
                            if (message.dataDiskType != null && Object.hasOwnProperty.call(message, "dataDiskType"))
                                writer.uint32(/* id 25, wireType 0 =*/200).int32(message.dataDiskType);
                            if (message.dataDiskSizeGb != null && Object.hasOwnProperty.call(message, "dataDiskSizeGb"))
                                writer.uint32(/* id 26, wireType 0 =*/208).int64(message.dataDiskSizeGb);
                            if (message.noRemoveDataDisk != null && Object.hasOwnProperty.call(message, "noRemoveDataDisk"))
                                writer.uint32(/* id 27, wireType 0 =*/216).bool(message.noRemoveDataDisk);
                            if (message.disks != null && message.disks.length)
                                for (var i = 0; i < message.disks.length; ++i)
                                    $root.google.cloud.notebooks.v1.Instance.Disk.encode(message.disks[i], writer.uint32(/* id 28, wireType 2 =*/226).fork()).ldelim();
                            if (message.upgradeHistory != null && message.upgradeHistory.length)
                                for (var i = 0; i < message.upgradeHistory.length; ++i)
                                    $root.google.cloud.notebooks.v1.Instance.UpgradeHistoryEntry.encode(message.upgradeHistory[i], writer.uint32(/* id 29, wireType 2 =*/234).fork()).ldelim();
                            if (message.shieldedInstanceConfig != null && Object.hasOwnProperty.call(message, "shieldedInstanceConfig"))
                                $root.google.cloud.notebooks.v1.Instance.ShieldedInstanceConfig.encode(message.shieldedInstanceConfig, writer.uint32(/* id 30, wireType 2 =*/242).fork()).ldelim();
                            if (message.serviceAccountScopes != null && message.serviceAccountScopes.length)
                                for (var i = 0; i < message.serviceAccountScopes.length; ++i)
                                    writer.uint32(/* id 31, wireType 2 =*/250).string(message.serviceAccountScopes[i]);
                            if (message.tags != null && message.tags.length)
                                for (var i = 0; i < message.tags.length; ++i)
                                    writer.uint32(/* id 32, wireType 2 =*/258).string(message.tags[i]);
                            if (message.nicType != null && Object.hasOwnProperty.call(message, "nicType"))
                                writer.uint32(/* id 33, wireType 0 =*/264).int32(message.nicType);
                            if (message.reservationAffinity != null && Object.hasOwnProperty.call(message, "reservationAffinity"))
                                $root.google.cloud.notebooks.v1.ReservationAffinity.encode(message.reservationAffinity, writer.uint32(/* id 34, wireType 2 =*/274).fork()).ldelim();
                            if (message.creator != null && Object.hasOwnProperty.call(message, "creator"))
                                writer.uint32(/* id 36, wireType 2 =*/290).string(message.creator);
                            if (message.canIpForward != null && Object.hasOwnProperty.call(message, "canIpForward"))
                                writer.uint32(/* id 39, wireType 0 =*/312).bool(message.canIpForward);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified Instance message, length delimited. Does not implicitly {@link google.cloud.notebooks.v1.Instance.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.notebooks.v1.Instance
                         * @static
                         * @param {google.cloud.notebooks.v1.IInstance} message Instance message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        Instance.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes an Instance message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.notebooks.v1.Instance
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.notebooks.v1.Instance} Instance
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        Instance.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.notebooks.v1.Instance(), key, value;
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.name = reader.string();
                                        break;
                                    }
                                case 2: {
                                        message.vmImage = $root.google.cloud.notebooks.v1.VmImage.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 3: {
                                        message.containerImage = $root.google.cloud.notebooks.v1.ContainerImage.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 4: {
                                        message.postStartupScript = reader.string();
                                        break;
                                    }
                                case 5: {
                                        message.proxyUri = reader.string();
                                        break;
                                    }
                                case 6: {
                                        if (!(message.instanceOwners && message.instanceOwners.length))
                                            message.instanceOwners = [];
                                        message.instanceOwners.push(reader.string());
                                        break;
                                    }
                                case 7: {
                                        message.serviceAccount = reader.string();
                                        break;
                                    }
                                case 31: {
                                        if (!(message.serviceAccountScopes && message.serviceAccountScopes.length))
                                            message.serviceAccountScopes = [];
                                        message.serviceAccountScopes.push(reader.string());
                                        break;
                                    }
                                case 8: {
                                        message.machineType = reader.string();
                                        break;
                                    }
                                case 9: {
                                        message.acceleratorConfig = $root.google.cloud.notebooks.v1.Instance.AcceleratorConfig.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 10: {
                                        message.state = reader.int32();
                                        break;
                                    }
                                case 11: {
                                        message.installGpuDriver = reader.bool();
                                        break;
                                    }
                                case 12: {
                                        message.customGpuDriverPath = reader.string();
                                        break;
                                    }
                                case 13: {
                                        message.bootDiskType = reader.int32();
                                        break;
                                    }
                                case 14: {
                                        message.bootDiskSizeGb = reader.int64();
                                        break;
                                    }
                                case 25: {
                                        message.dataDiskType = reader.int32();
                                        break;
                                    }
                                case 26: {
                                        message.dataDiskSizeGb = reader.int64();
                                        break;
                                    }
                                case 27: {
                                        message.noRemoveDataDisk = reader.bool();
                                        break;
                                    }
                                case 15: {
                                        message.diskEncryption = reader.int32();
                                        break;
                                    }
                                case 16: {
                                        message.kmsKey = reader.string();
                                        break;
                                    }
                                case 28: {
                                        if (!(message.disks && message.disks.length))
                                            message.disks = [];
                                        message.disks.push($root.google.cloud.notebooks.v1.Instance.Disk.decode(reader, reader.uint32()));
                                        break;
                                    }
                                case 30: {
                                        message.shieldedInstanceConfig = $root.google.cloud.notebooks.v1.Instance.ShieldedInstanceConfig.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 17: {
                                        message.noPublicIp = reader.bool();
                                        break;
                                    }
                                case 18: {
                                        message.noProxyAccess = reader.bool();
                                        break;
                                    }
                                case 19: {
                                        message.network = reader.string();
                                        break;
                                    }
                                case 20: {
                                        message.subnet = reader.string();
                                        break;
                                    }
                                case 21: {
                                        if (message.labels === $util.emptyObject)
                                            message.labels = {};
                                        var end2 = reader.uint32() + reader.pos;
                                        key = "";
                                        value = "";
                                        while (reader.pos < end2) {
                                            var tag2 = reader.uint32();
                                            switch (tag2 >>> 3) {
                                            case 1:
                                                key = reader.string();
                                                break;
                                            case 2:
                                                value = reader.string();
                                                break;
                                            default:
                                                reader.skipType(tag2 & 7);
                                                break;
                                            }
                                        }
                                        message.labels[key] = value;
                                        break;
                                    }
                                case 22: {
                                        if (message.metadata === $util.emptyObject)
                                            message.metadata = {};
                                        var end2 = reader.uint32() + reader.pos;
                                        key = "";
                                        value = "";
                                        while (reader.pos < end2) {
                                            var tag2 = reader.uint32();
                                            switch (tag2 >>> 3) {
                                            case 1:
                                                key = reader.string();
                                                break;
                                            case 2:
                                                value = reader.string();
                                                break;
                                            default:
                                                reader.skipType(tag2 & 7);
                                                break;
                                            }
                                        }
                                        message.metadata[key] = value;
                                        break;
                                    }
                                case 32: {
                                        if (!(message.tags && message.tags.length))
                                            message.tags = [];
                                        message.tags.push(reader.string());
                                        break;
                                    }
                                case 29: {
                                        if (!(message.upgradeHistory && message.upgradeHistory.length))
                                            message.upgradeHistory = [];
                                        message.upgradeHistory.push($root.google.cloud.notebooks.v1.Instance.UpgradeHistoryEntry.decode(reader, reader.uint32()));
                                        break;
                                    }
                                case 33: {
                                        message.nicType = reader.int32();
                                        break;
                                    }
                                case 34: {
                                        message.reservationAffinity = $root.google.cloud.notebooks.v1.ReservationAffinity.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 36: {
                                        message.creator = reader.string();
                                        break;
                                    }
                                case 39: {
                                        message.canIpForward = reader.bool();
                                        break;
                                    }
                                case 23: {
                                        message.createTime = $root.google.protobuf.Timestamp.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 24: {
                                        message.updateTime = $root.google.protobuf.Timestamp.decode(reader, reader.uint32());
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes an Instance message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.notebooks.v1.Instance
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.notebooks.v1.Instance} Instance
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        Instance.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies an Instance message.
                         * @function verify
                         * @memberof google.cloud.notebooks.v1.Instance
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        Instance.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            var properties = {};
                            if (message.name != null && message.hasOwnProperty("name"))
                                if (!$util.isString(message.name))
                                    return "name: string expected";
                            if (message.vmImage != null && message.hasOwnProperty("vmImage")) {
                                properties.environment = 1;
                                {
                                    var error = $root.google.cloud.notebooks.v1.VmImage.verify(message.vmImage);
                                    if (error)
                                        return "vmImage." + error;
                                }
                            }
                            if (message.containerImage != null && message.hasOwnProperty("containerImage")) {
                                if (properties.environment === 1)
                                    return "environment: multiple values";
                                properties.environment = 1;
                                {
                                    var error = $root.google.cloud.notebooks.v1.ContainerImage.verify(message.containerImage);
                                    if (error)
                                        return "containerImage." + error;
                                }
                            }
                            if (message.postStartupScript != null && message.hasOwnProperty("postStartupScript"))
                                if (!$util.isString(message.postStartupScript))
                                    return "postStartupScript: string expected";
                            if (message.proxyUri != null && message.hasOwnProperty("proxyUri"))
                                if (!$util.isString(message.proxyUri))
                                    return "proxyUri: string expected";
                            if (message.instanceOwners != null && message.hasOwnProperty("instanceOwners")) {
                                if (!Array.isArray(message.instanceOwners))
                                    return "instanceOwners: array expected";
                                for (var i = 0; i < message.instanceOwners.length; ++i)
                                    if (!$util.isString(message.instanceOwners[i]))
                                        return "instanceOwners: string[] expected";
                            }
                            if (message.serviceAccount != null && message.hasOwnProperty("serviceAccount"))
                                if (!$util.isString(message.serviceAccount))
                                    return "serviceAccount: string expected";
                            if (message.serviceAccountScopes != null && message.hasOwnProperty("serviceAccountScopes")) {
                                if (!Array.isArray(message.serviceAccountScopes))
                                    return "serviceAccountScopes: array expected";
                                for (var i = 0; i < message.serviceAccountScopes.length; ++i)
                                    if (!$util.isString(message.serviceAccountScopes[i]))
                                        return "serviceAccountScopes: string[] expected";
                            }
                            if (message.machineType != null && message.hasOwnProperty("machineType"))
                                if (!$util.isString(message.machineType))
                                    return "machineType: string expected";
                            if (message.acceleratorConfig != null && message.hasOwnProperty("acceleratorConfig")) {
                                var error = $root.google.cloud.notebooks.v1.Instance.AcceleratorConfig.verify(message.acceleratorConfig);
                                if (error)
                                    return "acceleratorConfig." + error;
                            }
                            if (message.state != null && message.hasOwnProperty("state"))
                                switch (message.state) {
                                default:
                                    return "state: enum value expected";
                                case 0:
                                case 1:
                                case 2:
                                case 3:
                                case 4:
                                case 5:
                                case 6:
                                case 7:
                                case 8:
                                case 9:
                                case 10:
                                case 11:
                                    break;
                                }
                            if (message.installGpuDriver != null && message.hasOwnProperty("installGpuDriver"))
                                if (typeof message.installGpuDriver !== "boolean")
                                    return "installGpuDriver: boolean expected";
                            if (message.customGpuDriverPath != null && message.hasOwnProperty("customGpuDriverPath"))
                                if (!$util.isString(message.customGpuDriverPath))
                                    return "customGpuDriverPath: string expected";
                            if (message.bootDiskType != null && message.hasOwnProperty("bootDiskType"))
                                switch (message.bootDiskType) {
                                default:
                                    return "bootDiskType: enum value expected";
                                case 0:
                                case 1:
                                case 2:
                                case 3:
                                case 4:
                                    break;
                                }
                            if (message.bootDiskSizeGb != null && message.hasOwnProperty("bootDiskSizeGb"))
                                if (!$util.isInteger(message.bootDiskSizeGb) && !(message.bootDiskSizeGb && $util.isInteger(message.bootDiskSizeGb.low) && $util.isInteger(message.bootDiskSizeGb.high)))
                                    return "bootDiskSizeGb: integer|Long expected";
                            if (message.dataDiskType != null && message.hasOwnProperty("dataDiskType"))
                                switch (message.dataDiskType) {
                                default:
                                    return "dataDiskType: enum value expected";
                                case 0:
                                case 1:
                                case 2:
                                case 3:
                                case 4:
                                    break;
                                }
                            if (message.dataDiskSizeGb != null && message.hasOwnProperty("dataDiskSizeGb"))
                                if (!$util.isInteger(message.dataDiskSizeGb) && !(message.dataDiskSizeGb && $util.isInteger(message.dataDiskSizeGb.low) && $util.isInteger(message.dataDiskSizeGb.high)))
                                    return "dataDiskSizeGb: integer|Long expected";
                            if (message.noRemoveDataDisk != null && message.hasOwnProperty("noRemoveDataDisk"))
                                if (typeof message.noRemoveDataDisk !== "boolean")
                                    return "noRemoveDataDisk: boolean expected";
                            if (message.diskEncryption != null && message.hasOwnProperty("diskEncryption"))
                                switch (message.diskEncryption) {
                                default:
                                    return "diskEncryption: enum value expected";
                                case 0:
                                case 1:
                                case 2:
                                    break;
                                }
                            if (message.kmsKey != null && message.hasOwnProperty("kmsKey"))
                                if (!$util.isString(message.kmsKey))
                                    return "kmsKey: string expected";
                            if (message.disks != null && message.hasOwnProperty("disks")) {
                                if (!Array.isArray(message.disks))
                                    return "disks: array expected";
                                for (var i = 0; i < message.disks.length; ++i) {
                                    var error = $root.google.cloud.notebooks.v1.Instance.Disk.verify(message.disks[i]);
                                    if (error)
                                        return "disks." + error;
                                }
                            }
                            if (message.shieldedInstanceConfig != null && message.hasOwnProperty("shieldedInstanceConfig")) {
                                var error = $root.google.cloud.notebooks.v1.Instance.ShieldedInstanceConfig.verify(message.shieldedInstanceConfig);
                                if (error)
                                    return "shieldedInstanceConfig." + error;
                            }
                            if (message.noPublicIp != null && message.hasOwnProperty("noPublicIp"))
                                if (typeof message.noPublicIp !== "boolean")
                                    return "noPublicIp: boolean expected";
                            if (message.noProxyAccess != null && message.hasOwnProperty("noProxyAccess"))
                                if (typeof message.noProxyAccess !== "boolean")
                                    return "noProxyAccess: boolean expected";
                            if (message.network != null && message.hasOwnProperty("network"))
                                if (!$util.isString(message.network))
                                    return "network: string expected";
                            if (message.subnet != null && message.hasOwnProperty("subnet"))
                                if (!$util.isString(message.subnet))
                                    return "subnet: string expected";
                            if (message.labels != null && message.hasOwnProperty("labels")) {
                                if (!$util.isObject(message.labels))
                                    return "labels: object expected";
                                var key = Object.keys(message.labels);
                                for (var i = 0; i < key.length; ++i)
                                    if (!$util.isString(message.labels[key[i]]))
                                        return "labels: string{k:string} expected";
                            }
                            if (message.metadata != null && message.hasOwnProperty("metadata")) {
                                if (!$util.isObject(message.metadata))
                                    return "metadata: object expected";
                                var key = Object.keys(message.metadata);
                                for (var i = 0; i < key.length; ++i)
                                    if (!$util.isString(message.metadata[key[i]]))
                                        return "metadata: string{k:string} expected";
                            }
                            if (message.tags != null && message.hasOwnProperty("tags")) {
                                if (!Array.isArray(message.tags))
                                    return "tags: array expected";
                                for (var i = 0; i < message.tags.length; ++i)
                                    if (!$util.isString(message.tags[i]))
                                        return "tags: string[] expected";
                            }
                            if (message.upgradeHistory != null && message.hasOwnProperty("upgradeHistory")) {
                                if (!Array.isArray(message.upgradeHistory))
                                    return "upgradeHistory: array expected";
                                for (var i = 0; i < message.upgradeHistory.length; ++i) {
                                    var error = $root.google.cloud.notebooks.v1.Instance.UpgradeHistoryEntry.verify(message.upgradeHistory[i]);
                                    if (error)
                                        return "upgradeHistory." + error;
                                }
                            }
                            if (message.nicType != null && message.hasOwnProperty("nicType"))
                                switch (message.nicType) {
                                default:
                                    return "nicType: enum value expected";
                                case 0:
                                case 1:
                                case 2:
                                    break;
                                }
                            if (message.reservationAffinity != null && message.hasOwnProperty("reservationAffinity")) {
                                var error = $root.google.cloud.notebooks.v1.ReservationAffinity.verify(message.reservationAffinity);
                                if (error)
                                    return "reservationAffinity." + error;
                            }
                            if (message.creator != null && message.hasOwnProperty("creator"))
                                if (!$util.isString(message.creator))
                                    return "creator: string expected";
                            if (message.canIpForward != null && message.hasOwnProperty("canIpForward"))
                                if (typeof message.canIpForward !== "boolean")
                                    return "canIpForward: boolean expected";
                            if (message.createTime != null && message.hasOwnProperty("createTime")) {
                                var error = $root.google.protobuf.Timestamp.verify(message.createTime);
                                if (error)
                                    return "createTime." + error;
                            }
                            if (message.updateTime != null && message.hasOwnProperty("updateTime")) {
                                var error = $root.google.protobuf.Timestamp.verify(message.updateTime);
                                if (error)
                                    return "updateTime." + error;
                            }
                            return null;
                        };
    
                        /**
                         * Creates an Instance message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.notebooks.v1.Instance
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.notebooks.v1.Instance} Instance
                         */
                        Instance.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.notebooks.v1.Instance)
                                return object;
                            var message = new $root.google.cloud.notebooks.v1.Instance();
                            if (object.name != null)
                                message.name = String(object.name);
                            if (object.vmImage != null) {
                                if (typeof object.vmImage !== "object")
                                    throw TypeError(".google.cloud.notebooks.v1.Instance.vmImage: object expected");
                                message.vmImage = $root.google.cloud.notebooks.v1.VmImage.fromObject(object.vmImage);
                            }
                            if (object.containerImage != null) {
                                if (typeof object.containerImage !== "object")
                                    throw TypeError(".google.cloud.notebooks.v1.Instance.containerImage: object expected");
                                message.containerImage = $root.google.cloud.notebooks.v1.ContainerImage.fromObject(object.containerImage);
                            }
                            if (object.postStartupScript != null)
                                message.postStartupScript = String(object.postStartupScript);
                            if (object.proxyUri != null)
                                message.proxyUri = String(object.proxyUri);
                            if (object.instanceOwners) {
                                if (!Array.isArray(object.instanceOwners))
                                    throw TypeError(".google.cloud.notebooks.v1.Instance.instanceOwners: array expected");
                                message.instanceOwners = [];
                                for (var i = 0; i < object.instanceOwners.length; ++i)
                                    message.instanceOwners[i] = String(object.instanceOwners[i]);
                            }
                            if (object.serviceAccount != null)
                                message.serviceAccount = String(object.serviceAccount);
                            if (object.serviceAccountScopes) {
                                if (!Array.isArray(object.serviceAccountScopes))
                                    throw TypeError(".google.cloud.notebooks.v1.Instance.serviceAccountScopes: array expected");
                                message.serviceAccountScopes = [];
                                for (var i = 0; i < object.serviceAccountScopes.length; ++i)
                                    message.serviceAccountScopes[i] = String(object.serviceAccountScopes[i]);
                            }
                            if (object.machineType != null)
                                message.machineType = String(object.machineType);
                            if (object.acceleratorConfig != null) {
                                if (typeof object.acceleratorConfig !== "object")
                                    throw TypeError(".google.cloud.notebooks.v1.Instance.acceleratorConfig: object expected");
                                message.acceleratorConfig = $root.google.cloud.notebooks.v1.Instance.AcceleratorConfig.fromObject(object.acceleratorConfig);
                            }
                            switch (object.state) {
                            default:
                                if (typeof object.state === "number") {
                                    message.state = object.state;
                                    break;
                                }
                                break;
                            case "STATE_UNSPECIFIED":
                            case 0:
                                message.state = 0;
                                break;
                            case "STARTING":
                            case 1:
                                message.state = 1;
                                break;
                            case "PROVISIONING":
                            case 2:
                                message.state = 2;
                                break;
                            case "ACTIVE":
                            case 3:
                                message.state = 3;
                                break;
                            case "STOPPING":
                            case 4:
                                message.state = 4;
                                break;
                            case "STOPPED":
                            case 5:
                                message.state = 5;
                                break;
                            case "DELETED":
                            case 6:
                                message.state = 6;
                                break;
                            case "UPGRADING":
                            case 7:
                                message.state = 7;
                                break;
                            case "INITIALIZING":
                            case 8:
                                message.state = 8;
                                break;
                            case "REGISTERING":
                            case 9:
                                message.state = 9;
                                break;
                            case "SUSPENDING":
                            case 10:
                                message.state = 10;
                                break;
                            case "SUSPENDED":
                            case 11:
                                message.state = 11;
                                break;
                            }
                            if (object.installGpuDriver != null)
                                message.installGpuDriver = Boolean(object.installGpuDriver);
                            if (object.customGpuDriverPath != null)
                                message.customGpuDriverPath = String(object.customGpuDriverPath);
                            switch (object.bootDiskType) {
                            default:
                                if (typeof object.bootDiskType === "number") {
                                    message.bootDiskType = object.bootDiskType;
                                    break;
                                }
                                break;
                            case "DISK_TYPE_UNSPECIFIED":
                            case 0:
                                message.bootDiskType = 0;
                                break;
                            case "PD_STANDARD":
                            case 1:
                                message.bootDiskType = 1;
                                break;
                            case "PD_SSD":
                            case 2:
                                message.bootDiskType = 2;
                                break;
                            case "PD_BALANCED":
                            case 3:
                                message.bootDiskType = 3;
                                break;
                            case "PD_EXTREME":
                            case 4:
                                message.bootDiskType = 4;
                                break;
                            }
                            if (object.bootDiskSizeGb != null)
                                if ($util.Long)
                                    (message.bootDiskSizeGb = $util.Long.fromValue(object.bootDiskSizeGb)).unsigned = false;
                                else if (typeof object.bootDiskSizeGb === "string")
                                    message.bootDiskSizeGb = parseInt(object.bootDiskSizeGb, 10);
                                else if (typeof object.bootDiskSizeGb === "number")
                                    message.bootDiskSizeGb = object.bootDiskSizeGb;
                                else if (typeof object.bootDiskSizeGb === "object")
                                    message.bootDiskSizeGb = new $util.LongBits(object.bootDiskSizeGb.low >>> 0, object.bootDiskSizeGb.high >>> 0).toNumber();
                            switch (object.dataDiskType) {
                            default:
                                if (typeof object.dataDiskType === "number") {
                                    message.dataDiskType = object.dataDiskType;
                                    break;
                                }
                                break;
                            case "DISK_TYPE_UNSPECIFIED":
                            case 0:
                                message.dataDiskType = 0;
                                break;
                            case "PD_STANDARD":
                            case 1:
                                message.dataDiskType = 1;
                                break;
                            case "PD_SSD":
                            case 2:
                                message.dataDiskType = 2;
                                break;
                            case "PD_BALANCED":
                            case 3:
                                message.dataDiskType = 3;
                                break;
                            case "PD_EXTREME":
                            case 4:
                                message.dataDiskType = 4;
                                break;
                            }
                            if (object.dataDiskSizeGb != null)
                                if ($util.Long)
                                    (message.dataDiskSizeGb = $util.Long.fromValue(object.dataDiskSizeGb)).unsigned = false;
                                else if (typeof object.dataDiskSizeGb === "string")
                                    message.dataDiskSizeGb = parseInt(object.dataDiskSizeGb, 10);
                                else if (typeof object.dataDiskSizeGb === "number")
                                    message.dataDiskSizeGb = object.dataDiskSizeGb;
                                else if (typeof object.dataDiskSizeGb === "object")
                                    message.dataDiskSizeGb = new $util.LongBits(object.dataDiskSizeGb.low >>> 0, object.dataDiskSizeGb.high >>> 0).toNumber();
                            if (object.noRemoveDataDisk != null)
                                message.noRemoveDataDisk = Boolean(object.noRemoveDataDisk);
                            switch (object.diskEncryption) {
                            default:
                                if (typeof object.diskEncryption === "number") {
                                    message.diskEncryption = object.diskEncryption;
                                    break;
                                }
                                break;
                            case "DISK_ENCRYPTION_UNSPECIFIED":
                            case 0:
                                message.diskEncryption = 0;
                                break;
                            case "GMEK":
                            case 1:
                                message.diskEncryption = 1;
                                break;
                            case "CMEK":
                            case 2:
                                message.diskEncryption = 2;
                                break;
                            }
                            if (object.kmsKey != null)
                                message.kmsKey = String(object.kmsKey);
                            if (object.disks) {
                                if (!Array.isArray(object.disks))
                                    throw TypeError(".google.cloud.notebooks.v1.Instance.disks: array expected");
                                message.disks = [];
                                for (var i = 0; i < object.disks.length; ++i) {
                                    if (typeof object.disks[i] !== "object")
                                        throw TypeError(".google.cloud.notebooks.v1.Instance.disks: object expected");
                                    message.disks[i] = $root.google.cloud.notebooks.v1.Instance.Disk.fromObject(object.disks[i]);
                                }
                            }
                            if (object.shieldedInstanceConfig != null) {
                                if (typeof object.shieldedInstanceConfig !== "object")
                                    throw TypeError(".google.cloud.notebooks.v1.Instance.shieldedInstanceConfig: object expected");
                                message.shieldedInstanceConfig = $root.google.cloud.notebooks.v1.Instance.ShieldedInstanceConfig.fromObject(object.shieldedInstanceConfig);
                            }
                            if (object.noPublicIp != null)
                                message.noPublicIp = Boolean(object.noPublicIp);
                            if (object.noProxyAccess != null)
                                message.noProxyAccess = Boolean(object.noProxyAccess);
                            if (object.network != null)
                                message.network = String(object.network);
                            if (object.subnet != null)
                                message.subnet = String(object.subnet);
                            if (object.labels) {
                                if (typeof object.labels !== "object")
                                    throw TypeError(".google.cloud.notebooks.v1.Instance.labels: object expected");
                                message.labels = {};
                                for (var keys = Object.keys(object.labels), i = 0; i < keys.length; ++i)
                                    message.labels[keys[i]] = String(object.labels[keys[i]]);
                            }
                            if (object.metadata) {
                                if (typeof object.metadata !== "object")
                                    throw TypeError(".google.cloud.notebooks.v1.Instance.metadata: object expected");
                                message.metadata = {};
                                for (var keys = Object.keys(object.metadata), i = 0; i < keys.length; ++i)
                                    message.metadata[keys[i]] = String(object.metadata[keys[i]]);
                            }
                            if (object.tags) {
                                if (!Array.isArray(object.tags))
                                    throw TypeError(".google.cloud.notebooks.v1.Instance.tags: array expected");
                                message.tags = [];
                                for (var i = 0; i < object.tags.length; ++i)
                                    message.tags[i] = String(object.tags[i]);
                            }
                            if (object.upgradeHistory) {
                                if (!Array.isArray(object.upgradeHistory))
                                    throw TypeError(".google.cloud.notebooks.v1.Instance.upgradeHistory: array expected");
                                message.upgradeHistory = [];
                                for (var i = 0; i < object.upgradeHistory.length; ++i) {
                                    if (typeof object.upgradeHistory[i] !== "object")
                                        throw TypeError(".google.cloud.notebooks.v1.Instance.upgradeHistory: object expected");
                                    message.upgradeHistory[i] = $root.google.cloud.notebooks.v1.Instance.UpgradeHistoryEntry.fromObject(object.upgradeHistory[i]);
                                }
                            }
                            switch (object.nicType) {
                            default:
                                if (typeof object.nicType === "number") {
                                    message.nicType = object.nicType;
                                    break;
                                }
                                break;
                            case "UNSPECIFIED_NIC_TYPE":
                            case 0:
                                message.nicType = 0;
                                break;
                            case "VIRTIO_NET":
                            case 1:
                                message.nicType = 1;
                                break;
                            case "GVNIC":
                            case 2:
                                message.nicType = 2;
                                break;
                            }
                            if (object.reservationAffinity != null) {
                                if (typeof object.reservationAffinity !== "object")
                                    throw TypeError(".google.cloud.notebooks.v1.Instance.reservationAffinity: object expected");
                                message.reservationAffinity = $root.google.cloud.notebooks.v1.ReservationAffinity.fromObject(object.reservationAffinity);
                            }
                            if (object.creator != null)
                                message.creator = String(object.creator);
                            if (object.canIpForward != null)
                                message.canIpForward = Boolean(object.canIpForward);
                            if (object.createTime != null) {
                                if (typeof object.createTime !== "object")
                                    throw TypeError(".google.cloud.notebooks.v1.Instance.createTime: object expected");
                                message.createTime = $root.google.protobuf.Timestamp.fromObject(object.createTime);
                            }
                            if (object.updateTime != null) {
                                if (typeof object.updateTime !== "object")
                                    throw TypeError(".google.cloud.notebooks.v1.Instance.updateTime: object expected");
                                message.updateTime = $root.google.protobuf.Timestamp.fromObject(object.updateTime);
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from an Instance message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.notebooks.v1.Instance
                         * @static
                         * @param {google.cloud.notebooks.v1.Instance} message Instance
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        Instance.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.arrays || options.defaults) {
                                object.instanceOwners = [];
                                object.disks = [];
                                object.upgradeHistory = [];
                                object.serviceAccountScopes = [];
                                object.tags = [];
                            }
                            if (options.objects || options.defaults) {
                                object.labels = {};
                                object.metadata = {};
                            }
                            if (options.defaults) {
                                object.name = "";
                                object.postStartupScript = "";
                                object.proxyUri = "";
                                object.serviceAccount = "";
                                object.machineType = "";
                                object.acceleratorConfig = null;
                                object.state = options.enums === String ? "STATE_UNSPECIFIED" : 0;
                                object.installGpuDriver = false;
                                object.customGpuDriverPath = "";
                                object.bootDiskType = options.enums === String ? "DISK_TYPE_UNSPECIFIED" : 0;
                                if ($util.Long) {
                                    var long = new $util.Long(0, 0, false);
                                    object.bootDiskSizeGb = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                                } else
                                    object.bootDiskSizeGb = options.longs === String ? "0" : 0;
                                object.diskEncryption = options.enums === String ? "DISK_ENCRYPTION_UNSPECIFIED" : 0;
                                object.kmsKey = "";
                                object.noPublicIp = false;
                                object.noProxyAccess = false;
                                object.network = "";
                                object.subnet = "";
                                object.createTime = null;
                                object.updateTime = null;
                                object.dataDiskType = options.enums === String ? "DISK_TYPE_UNSPECIFIED" : 0;
                                if ($util.Long) {
                                    var long = new $util.Long(0, 0, false);
                                    object.dataDiskSizeGb = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                                } else
                                    object.dataDiskSizeGb = options.longs === String ? "0" : 0;
                                object.noRemoveDataDisk = false;
                                object.shieldedInstanceConfig = null;
                                object.nicType = options.enums === String ? "UNSPECIFIED_NIC_TYPE" : 0;
                                object.reservationAffinity = null;
                                object.creator = "";
                                object.canIpForward = false;
                            }
                            if (message.name != null && message.hasOwnProperty("name"))
                                object.name = message.name;
                            if (message.vmImage != null && message.hasOwnProperty("vmImage")) {
                                object.vmImage = $root.google.cloud.notebooks.v1.VmImage.toObject(message.vmImage, options);
                                if (options.oneofs)
                                    object.environment = "vmImage";
                            }
                            if (message.containerImage != null && message.hasOwnProperty("containerImage")) {
                                object.containerImage = $root.google.cloud.notebooks.v1.ContainerImage.toObject(message.containerImage, options);
                                if (options.oneofs)
                                    object.environment = "containerImage";
                            }
                            if (message.postStartupScript != null && message.hasOwnProperty("postStartupScript"))
                                object.postStartupScript = message.postStartupScript;
                            if (message.proxyUri != null && message.hasOwnProperty("proxyUri"))
                                object.proxyUri = message.proxyUri;
                            if (message.instanceOwners && message.instanceOwners.length) {
                                object.instanceOwners = [];
                                for (var j = 0; j < message.instanceOwners.length; ++j)
                                    object.instanceOwners[j] = message.instanceOwners[j];
                            }
                            if (message.serviceAccount != null && message.hasOwnProperty("serviceAccount"))
                                object.serviceAccount = message.serviceAccount;
                            if (message.machineType != null && message.hasOwnProperty("machineType"))
                                object.machineType = message.machineType;
                            if (message.acceleratorConfig != null && message.hasOwnProperty("acceleratorConfig"))
                                object.acceleratorConfig = $root.google.cloud.notebooks.v1.Instance.AcceleratorConfig.toObject(message.acceleratorConfig, options);
                            if (message.state != null && message.hasOwnProperty("state"))
                                object.state = options.enums === String ? $root.google.cloud.notebooks.v1.Instance.State[message.state] === undefined ? message.state : $root.google.cloud.notebooks.v1.Instance.State[message.state] : message.state;
                            if (message.installGpuDriver != null && message.hasOwnProperty("installGpuDriver"))
                                object.installGpuDriver = message.installGpuDriver;
                            if (message.customGpuDriverPath != null && message.hasOwnProperty("customGpuDriverPath"))
                                object.customGpuDriverPath = message.customGpuDriverPath;
                            if (message.bootDiskType != null && message.hasOwnProperty("bootDiskType"))
                                object.bootDiskType = options.enums === String ? $root.google.cloud.notebooks.v1.Instance.DiskType[message.bootDiskType] === undefined ? message.bootDiskType : $root.google.cloud.notebooks.v1.Instance.DiskType[message.bootDiskType] : message.bootDiskType;
                            if (message.bootDiskSizeGb != null && message.hasOwnProperty("bootDiskSizeGb"))
                                if (typeof message.bootDiskSizeGb === "number")
                                    object.bootDiskSizeGb = options.longs === String ? String(message.bootDiskSizeGb) : message.bootDiskSizeGb;
                                else
                                    object.bootDiskSizeGb = options.longs === String ? $util.Long.prototype.toString.call(message.bootDiskSizeGb) : options.longs === Number ? new $util.LongBits(message.bootDiskSizeGb.low >>> 0, message.bootDiskSizeGb.high >>> 0).toNumber() : message.bootDiskSizeGb;
                            if (message.diskEncryption != null && message.hasOwnProperty("diskEncryption"))
                                object.diskEncryption = options.enums === String ? $root.google.cloud.notebooks.v1.Instance.DiskEncryption[message.diskEncryption] === undefined ? message.diskEncryption : $root.google.cloud.notebooks.v1.Instance.DiskEncryption[message.diskEncryption] : message.diskEncryption;
                            if (message.kmsKey != null && message.hasOwnProperty("kmsKey"))
                                object.kmsKey = message.kmsKey;
                            if (message.noPublicIp != null && message.hasOwnProperty("noPublicIp"))
                                object.noPublicIp = message.noPublicIp;
                            if (message.noProxyAccess != null && message.hasOwnProperty("noProxyAccess"))
                                object.noProxyAccess = message.noProxyAccess;
                            if (message.network != null && message.hasOwnProperty("network"))
                                object.network = message.network;
                            if (message.subnet != null && message.hasOwnProperty("subnet"))
                                object.subnet = message.subnet;
                            var keys2;
                            if (message.labels && (keys2 = Object.keys(message.labels)).length) {
                                object.labels = {};
                                for (var j = 0; j < keys2.length; ++j)
                                    object.labels[keys2[j]] = message.labels[keys2[j]];
                            }
                            if (message.metadata && (keys2 = Object.keys(message.metadata)).length) {
                                object.metadata = {};
                                for (var j = 0; j < keys2.length; ++j)
                                    object.metadata[keys2[j]] = message.metadata[keys2[j]];
                            }
                            if (message.createTime != null && message.hasOwnProperty("createTime"))
                                object.createTime = $root.google.protobuf.Timestamp.toObject(message.createTime, options);
                            if (message.updateTime != null && message.hasOwnProperty("updateTime"))
                                object.updateTime = $root.google.protobuf.Timestamp.toObject(message.updateTime, options);
                            if (message.dataDiskType != null && message.hasOwnProperty("dataDiskType"))
                                object.dataDiskType = options.enums === String ? $root.google.cloud.notebooks.v1.Instance.DiskType[message.dataDiskType] === undefined ? message.dataDiskType : $root.google.cloud.notebooks.v1.Instance.DiskType[message.dataDiskType] : message.dataDiskType;
                            if (message.dataDiskSizeGb != null && message.hasOwnProperty("dataDiskSizeGb"))
                                if (typeof message.dataDiskSizeGb === "number")
                                    object.dataDiskSizeGb = options.longs === String ? String(message.dataDiskSizeGb) : message.dataDiskSizeGb;
                                else
                                    object.dataDiskSizeGb = options.longs === String ? $util.Long.prototype.toString.call(message.dataDiskSizeGb) : options.longs === Number ? new $util.LongBits(message.dataDiskSizeGb.low >>> 0, message.dataDiskSizeGb.high >>> 0).toNumber() : message.dataDiskSizeGb;
                            if (message.noRemoveDataDisk != null && message.hasOwnProperty("noRemoveDataDisk"))
                                object.noRemoveDataDisk = message.noRemoveDataDisk;
                            if (message.disks && message.disks.length) {
                                object.disks = [];
                                for (var j = 0; j < message.disks.length; ++j)
                                    object.disks[j] = $root.google.cloud.notebooks.v1.Instance.Disk.toObject(message.disks[j], options);
                            }
                            if (message.upgradeHistory && message.upgradeHistory.length) {
                                object.upgradeHistory = [];
                                for (var j = 0; j < message.upgradeHistory.length; ++j)
                                    object.upgradeHistory[j] = $root.google.cloud.notebooks.v1.Instance.UpgradeHistoryEntry.toObject(message.upgradeHistory[j], options);
                            }
                            if (message.shieldedInstanceConfig != null && message.hasOwnProperty("shieldedInstanceConfig"))
                                object.shieldedInstanceConfig = $root.google.cloud.notebooks.v1.Instance.ShieldedInstanceConfig.toObject(message.shieldedInstanceConfig, options);
                            if (message.serviceAccountScopes && message.serviceAccountScopes.length) {
                                object.serviceAccountScopes = [];
                                for (var j = 0; j < message.serviceAccountScopes.length; ++j)
                                    object.serviceAccountScopes[j] = message.serviceAccountScopes[j];
                            }
                            if (message.tags && message.tags.length) {
                                object.tags = [];
                                for (var j = 0; j < message.tags.length; ++j)
                                    object.tags[j] = message.tags[j];
                            }
                            if (message.nicType != null && message.hasOwnProperty("nicType"))
                                object.nicType = options.enums === String ? $root.google.cloud.notebooks.v1.Instance.NicType[message.nicType] === undefined ? message.nicType : $root.google.cloud.notebooks.v1.Instance.NicType[message.nicType] : message.nicType;
                            if (message.reservationAffinity != null && message.hasOwnProperty("reservationAffinity"))
                                object.reservationAffinity = $root.google.cloud.notebooks.v1.ReservationAffinity.toObject(message.reservationAffinity, options);
                            if (message.creator != null && message.hasOwnProperty("creator"))
                                object.creator = message.creator;
                            if (message.canIpForward != null && message.hasOwnProperty("canIpForward"))
                                object.canIpForward = message.canIpForward;
                            return object;
                        };
    
                        /**
                         * Converts this Instance to JSON.
                         * @function toJSON
                         * @memberof google.cloud.notebooks.v1.Instance
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        Instance.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for Instance
                         * @function getTypeUrl
                         * @memberof google.cloud.notebooks.v1.Instance
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        Instance.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.notebooks.v1.Instance";
                        };
    
                        /**
                         * AcceleratorType enum.
                         * @name google.cloud.notebooks.v1.Instance.AcceleratorType
                         * @enum {number}
                         * @property {number} ACCELERATOR_TYPE_UNSPECIFIED=0 ACCELERATOR_TYPE_UNSPECIFIED value
                         * @property {number} NVIDIA_TESLA_K80=1 NVIDIA_TESLA_K80 value
                         * @property {number} NVIDIA_TESLA_P100=2 NVIDIA_TESLA_P100 value
                         * @property {number} NVIDIA_TESLA_V100=3 NVIDIA_TESLA_V100 value
                         * @property {number} NVIDIA_TESLA_P4=4 NVIDIA_TESLA_P4 value
                         * @property {number} NVIDIA_TESLA_T4=5 NVIDIA_TESLA_T4 value
                         * @property {number} NVIDIA_TESLA_A100=11 NVIDIA_TESLA_A100 value
                         * @property {number} NVIDIA_TESLA_T4_VWS=8 NVIDIA_TESLA_T4_VWS value
                         * @property {number} NVIDIA_TESLA_P100_VWS=9 NVIDIA_TESLA_P100_VWS value
                         * @property {number} NVIDIA_TESLA_P4_VWS=10 NVIDIA_TESLA_P4_VWS value
                         * @property {number} TPU_V2=6 TPU_V2 value
                         * @property {number} TPU_V3=7 TPU_V3 value
                         */
                        Instance.AcceleratorType = (function() {
                            var valuesById = {}, values = Object.create(valuesById);
                            values[valuesById[0] = "ACCELERATOR_TYPE_UNSPECIFIED"] = 0;
                            values[valuesById[1] = "NVIDIA_TESLA_K80"] = 1;
                            values[valuesById[2] = "NVIDIA_TESLA_P100"] = 2;
                            values[valuesById[3] = "NVIDIA_TESLA_V100"] = 3;
                            values[valuesById[4] = "NVIDIA_TESLA_P4"] = 4;
                            values[valuesById[5] = "NVIDIA_TESLA_T4"] = 5;
                            values[valuesById[11] = "NVIDIA_TESLA_A100"] = 11;
                            values[valuesById[8] = "NVIDIA_TESLA_T4_VWS"] = 8;
                            values[valuesById[9] = "NVIDIA_TESLA_P100_VWS"] = 9;
                            values[valuesById[10] = "NVIDIA_TESLA_P4_VWS"] = 10;
                            values[valuesById[6] = "TPU_V2"] = 6;
                            values[valuesById[7] = "TPU_V3"] = 7;
                            return values;
                        })();
    
                        Instance.AcceleratorConfig = (function() {
    
                            /**
                             * Properties of an AcceleratorConfig.
                             * @memberof google.cloud.notebooks.v1.Instance
                             * @interface IAcceleratorConfig
                             * @property {google.cloud.notebooks.v1.Instance.AcceleratorType|null} [type] AcceleratorConfig type
                             * @property {number|Long|null} [coreCount] AcceleratorConfig coreCount
                             */
    
                            /**
                             * Constructs a new AcceleratorConfig.
                             * @memberof google.cloud.notebooks.v1.Instance
                             * @classdesc Represents an AcceleratorConfig.
                             * @implements IAcceleratorConfig
                             * @constructor
                             * @param {google.cloud.notebooks.v1.Instance.IAcceleratorConfig=} [properties] Properties to set
                             */
                            function AcceleratorConfig(properties) {
                                if (properties)
                                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                        if (properties[keys[i]] != null)
                                            this[keys[i]] = properties[keys[i]];
                            }
    
                            /**
                             * AcceleratorConfig type.
                             * @member {google.cloud.notebooks.v1.Instance.AcceleratorType} type
                             * @memberof google.cloud.notebooks.v1.Instance.AcceleratorConfig
                             * @instance
                             */
                            AcceleratorConfig.prototype.type = 0;
    
                            /**
                             * AcceleratorConfig coreCount.
                             * @member {number|Long} coreCount
                             * @memberof google.cloud.notebooks.v1.Instance.AcceleratorConfig
                             * @instance
                             */
                            AcceleratorConfig.prototype.coreCount = $util.Long ? $util.Long.fromBits(0,0,false) : 0;
    
                            /**
                             * Creates a new AcceleratorConfig instance using the specified properties.
                             * @function create
                             * @memberof google.cloud.notebooks.v1.Instance.AcceleratorConfig
                             * @static
                             * @param {google.cloud.notebooks.v1.Instance.IAcceleratorConfig=} [properties] Properties to set
                             * @returns {google.cloud.notebooks.v1.Instance.AcceleratorConfig} AcceleratorConfig instance
                             */
                            AcceleratorConfig.create = function create(properties) {
                                return new AcceleratorConfig(properties);
                            };
    
                            /**
                             * Encodes the specified AcceleratorConfig message. Does not implicitly {@link google.cloud.notebooks.v1.Instance.AcceleratorConfig.verify|verify} messages.
                             * @function encode
                             * @memberof google.cloud.notebooks.v1.Instance.AcceleratorConfig
                             * @static
                             * @param {google.cloud.notebooks.v1.Instance.IAcceleratorConfig} message AcceleratorConfig message or plain object to encode
                             * @param {$protobuf.Writer} [writer] Writer to encode to
                             * @returns {$protobuf.Writer} Writer
                             */
                            AcceleratorConfig.encode = function encode(message, writer) {
                                if (!writer)
                                    writer = $Writer.create();
                                if (message.type != null && Object.hasOwnProperty.call(message, "type"))
                                    writer.uint32(/* id 1, wireType 0 =*/8).int32(message.type);
                                if (message.coreCount != null && Object.hasOwnProperty.call(message, "coreCount"))
                                    writer.uint32(/* id 2, wireType 0 =*/16).int64(message.coreCount);
                                return writer;
                            };
    
                            /**
                             * Encodes the specified AcceleratorConfig message, length delimited. Does not implicitly {@link google.cloud.notebooks.v1.Instance.AcceleratorConfig.verify|verify} messages.
                             * @function encodeDelimited
                             * @memberof google.cloud.notebooks.v1.Instance.AcceleratorConfig
                             * @static
                             * @param {google.cloud.notebooks.v1.Instance.IAcceleratorConfig} message AcceleratorConfig message or plain object to encode
                             * @param {$protobuf.Writer} [writer] Writer to encode to
                             * @returns {$protobuf.Writer} Writer
                             */
                            AcceleratorConfig.encodeDelimited = function encodeDelimited(message, writer) {
                                return this.encode(message, writer).ldelim();
                            };
    
                            /**
                             * Decodes an AcceleratorConfig message from the specified reader or buffer.
                             * @function decode
                             * @memberof google.cloud.notebooks.v1.Instance.AcceleratorConfig
                             * @static
                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                             * @param {number} [length] Message length if known beforehand
                             * @returns {google.cloud.notebooks.v1.Instance.AcceleratorConfig} AcceleratorConfig
                             * @throws {Error} If the payload is not a reader or valid buffer
                             * @throws {$protobuf.util.ProtocolError} If required fields are missing
                             */
                            AcceleratorConfig.decode = function decode(reader, length) {
                                if (!(reader instanceof $Reader))
                                    reader = $Reader.create(reader);
                                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.notebooks.v1.Instance.AcceleratorConfig();
                                while (reader.pos < end) {
                                    var tag = reader.uint32();
                                    switch (tag >>> 3) {
                                    case 1: {
                                            message.type = reader.int32();
                                            break;
                                        }
                                    case 2: {
                                            message.coreCount = reader.int64();
                                            break;
                                        }
                                    default:
                                        reader.skipType(tag & 7);
                                        break;
                                    }
                                }
                                return message;
                            };
    
                            /**
                             * Decodes an AcceleratorConfig message from the specified reader or buffer, length delimited.
                             * @function decodeDelimited
                             * @memberof google.cloud.notebooks.v1.Instance.AcceleratorConfig
                             * @static
                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                             * @returns {google.cloud.notebooks.v1.Instance.AcceleratorConfig} AcceleratorConfig
                             * @throws {Error} If the payload is not a reader or valid buffer
                             * @throws {$protobuf.util.ProtocolError} If required fields are missing
                             */
                            AcceleratorConfig.decodeDelimited = function decodeDelimited(reader) {
                                if (!(reader instanceof $Reader))
                                    reader = new $Reader(reader);
                                return this.decode(reader, reader.uint32());
                            };
    
                            /**
                             * Verifies an AcceleratorConfig message.
                             * @function verify
                             * @memberof google.cloud.notebooks.v1.Instance.AcceleratorConfig
                             * @static
                             * @param {Object.<string,*>} message Plain object to verify
                             * @returns {string|null} `null` if valid, otherwise the reason why it is not
                             */
                            AcceleratorConfig.verify = function verify(message) {
                                if (typeof message !== "object" || message === null)
                                    return "object expected";
                                if (message.type != null && message.hasOwnProperty("type"))
                                    switch (message.type) {
                                    default:
                                        return "type: enum value expected";
                                    case 0:
                                    case 1:
                                    case 2:
                                    case 3:
                                    case 4:
                                    case 5:
                                    case 11:
                                    case 8:
                                    case 9:
                                    case 10:
                                    case 6:
                                    case 7:
                                        break;
                                    }
                                if (message.coreCount != null && message.hasOwnProperty("coreCount"))
                                    if (!$util.isInteger(message.coreCount) && !(message.coreCount && $util.isInteger(message.coreCount.low) && $util.isInteger(message.coreCount.high)))
                                        return "coreCount: integer|Long expected";
                                return null;
                            };
    
                            /**
                             * Creates an AcceleratorConfig message from a plain object. Also converts values to their respective internal types.
                             * @function fromObject
                             * @memberof google.cloud.notebooks.v1.Instance.AcceleratorConfig
                             * @static
                             * @param {Object.<string,*>} object Plain object
                             * @returns {google.cloud.notebooks.v1.Instance.AcceleratorConfig} AcceleratorConfig
                             */
                            AcceleratorConfig.fromObject = function fromObject(object) {
                                if (object instanceof $root.google.cloud.notebooks.v1.Instance.AcceleratorConfig)
                                    return object;
                                var message = new $root.google.cloud.notebooks.v1.Instance.AcceleratorConfig();
                                switch (object.type) {
                                default:
                                    if (typeof object.type === "number") {
                                        message.type = object.type;
                                        break;
                                    }
                                    break;
                                case "ACCELERATOR_TYPE_UNSPECIFIED":
                                case 0:
                                    message.type = 0;
                                    break;
                                case "NVIDIA_TESLA_K80":
                                case 1:
                                    message.type = 1;
                                    break;
                                case "NVIDIA_TESLA_P100":
                                case 2:
                                    message.type = 2;
                                    break;
                                case "NVIDIA_TESLA_V100":
                                case 3:
                                    message.type = 3;
                                    break;
                                case "NVIDIA_TESLA_P4":
                                case 4:
                                    message.type = 4;
                                    break;
                                case "NVIDIA_TESLA_T4":
                                case 5:
                                    message.type = 5;
                                    break;
                                case "NVIDIA_TESLA_A100":
                                case 11:
                                    message.type = 11;
                                    break;
                                case "NVIDIA_TESLA_T4_VWS":
                                case 8:
                                    message.type = 8;
                                    break;
                                case "NVIDIA_TESLA_P100_VWS":
                                case 9:
                                    message.type = 9;
                                    break;
                                case "NVIDIA_TESLA_P4_VWS":
                                case 10:
                                    message.type = 10;
                                    break;
                                case "TPU_V2":
                                case 6:
                                    message.type = 6;
                                    break;
                                case "TPU_V3":
                                case 7:
                                    message.type = 7;
                                    break;
                                }
                                if (object.coreCount != null)
                                    if ($util.Long)
                                        (message.coreCount = $util.Long.fromValue(object.coreCount)).unsigned = false;
                                    else if (typeof object.coreCount === "string")
                                        message.coreCount = parseInt(object.coreCount, 10);
                                    else if (typeof object.coreCount === "number")
                                        message.coreCount = object.coreCount;
                                    else if (typeof object.coreCount === "object")
                                        message.coreCount = new $util.LongBits(object.coreCount.low >>> 0, object.coreCount.high >>> 0).toNumber();
                                return message;
                            };
    
                            /**
                             * Creates a plain object from an AcceleratorConfig message. Also converts values to other types if specified.
                             * @function toObject
                             * @memberof google.cloud.notebooks.v1.Instance.AcceleratorConfig
                             * @static
                             * @param {google.cloud.notebooks.v1.Instance.AcceleratorConfig} message AcceleratorConfig
                             * @param {$protobuf.IConversionOptions} [options] Conversion options
                             * @returns {Object.<string,*>} Plain object
                             */
                            AcceleratorConfig.toObject = function toObject(message, options) {
                                if (!options)
                                    options = {};
                                var object = {};
                                if (options.defaults) {
                                    object.type = options.enums === String ? "ACCELERATOR_TYPE_UNSPECIFIED" : 0;
                                    if ($util.Long) {
                                        var long = new $util.Long(0, 0, false);
                                        object.coreCount = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                                    } else
                                        object.coreCount = options.longs === String ? "0" : 0;
                                }
                                if (message.type != null && message.hasOwnProperty("type"))
                                    object.type = options.enums === String ? $root.google.cloud.notebooks.v1.Instance.AcceleratorType[message.type] === undefined ? message.type : $root.google.cloud.notebooks.v1.Instance.AcceleratorType[message.type] : message.type;
                                if (message.coreCount != null && message.hasOwnProperty("coreCount"))
                                    if (typeof message.coreCount === "number")
                                        object.coreCount = options.longs === String ? String(message.coreCount) : message.coreCount;
                                    else
                                        object.coreCount = options.longs === String ? $util.Long.prototype.toString.call(message.coreCount) : options.longs === Number ? new $util.LongBits(message.coreCount.low >>> 0, message.coreCount.high >>> 0).toNumber() : message.coreCount;
                                return object;
                            };
    
                            /**
                             * Converts this AcceleratorConfig to JSON.
                             * @function toJSON
                             * @memberof google.cloud.notebooks.v1.Instance.AcceleratorConfig
                             * @instance
                             * @returns {Object.<string,*>} JSON object
                             */
                            AcceleratorConfig.prototype.toJSON = function toJSON() {
                                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                            };
    
                            /**
                             * Gets the default type url for AcceleratorConfig
                             * @function getTypeUrl
                             * @memberof google.cloud.notebooks.v1.Instance.AcceleratorConfig
                             * @static
                             * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                             * @returns {string} The default type url
                             */
                            AcceleratorConfig.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                                if (typeUrlPrefix === undefined) {
                                    typeUrlPrefix = "type.googleapis.com";
                                }
                                return typeUrlPrefix + "/google.cloud.notebooks.v1.Instance.AcceleratorConfig";
                            };
    
                            return AcceleratorConfig;
                        })();
    
                        /**
                         * State enum.
                         * @name google.cloud.notebooks.v1.Instance.State
                         * @enum {number}
                         * @property {number} STATE_UNSPECIFIED=0 STATE_UNSPECIFIED value
                         * @property {number} STARTING=1 STARTING value
                         * @property {number} PROVISIONING=2 PROVISIONING value
                         * @property {number} ACTIVE=3 ACTIVE value
                         * @property {number} STOPPING=4 STOPPING value
                         * @property {number} STOPPED=5 STOPPED value
                         * @property {number} DELETED=6 DELETED value
                         * @property {number} UPGRADING=7 UPGRADING value
                         * @property {number} INITIALIZING=8 INITIALIZING value
                         * @property {number} REGISTERING=9 REGISTERING value
                         * @property {number} SUSPENDING=10 SUSPENDING value
                         * @property {number} SUSPENDED=11 SUSPENDED value
                         */
                        Instance.State = (function() {
                            var valuesById = {}, values = Object.create(valuesById);
                            values[valuesById[0] = "STATE_UNSPECIFIED"] = 0;
                            values[valuesById[1] = "STARTING"] = 1;
                            values[valuesById[2] = "PROVISIONING"] = 2;
                            values[valuesById[3] = "ACTIVE"] = 3;
                            values[valuesById[4] = "STOPPING"] = 4;
                            values[valuesById[5] = "STOPPED"] = 5;
                            values[valuesById[6] = "DELETED"] = 6;
                            values[valuesById[7] = "UPGRADING"] = 7;
                            values[valuesById[8] = "INITIALIZING"] = 8;
                            values[valuesById[9] = "REGISTERING"] = 9;
                            values[valuesById[10] = "SUSPENDING"] = 10;
                            values[valuesById[11] = "SUSPENDED"] = 11;
                            return values;
                        })();
    
                        /**
                         * DiskType enum.
                         * @name google.cloud.notebooks.v1.Instance.DiskType
                         * @enum {number}
                         * @property {number} DISK_TYPE_UNSPECIFIED=0 DISK_TYPE_UNSPECIFIED value
                         * @property {number} PD_STANDARD=1 PD_STANDARD value
                         * @property {number} PD_SSD=2 PD_SSD value
                         * @property {number} PD_BALANCED=3 PD_BALANCED value
                         * @property {number} PD_EXTREME=4 PD_EXTREME value
                         */
                        Instance.DiskType = (function() {
                            var valuesById = {}, values = Object.create(valuesById);
                            values[valuesById[0] = "DISK_TYPE_UNSPECIFIED"] = 0;
                            values[valuesById[1] = "PD_STANDARD"] = 1;
                            values[valuesById[2] = "PD_SSD"] = 2;
                            values[valuesById[3] = "PD_BALANCED"] = 3;
                            values[valuesById[4] = "PD_EXTREME"] = 4;
                            return values;
                        })();
    
                        /**
                         * DiskEncryption enum.
                         * @name google.cloud.notebooks.v1.Instance.DiskEncryption
                         * @enum {number}
                         * @property {number} DISK_ENCRYPTION_UNSPECIFIED=0 DISK_ENCRYPTION_UNSPECIFIED value
                         * @property {number} GMEK=1 GMEK value
                         * @property {number} CMEK=2 CMEK value
                         */
                        Instance.DiskEncryption = (function() {
                            var valuesById = {}, values = Object.create(valuesById);
                            values[valuesById[0] = "DISK_ENCRYPTION_UNSPECIFIED"] = 0;
                            values[valuesById[1] = "GMEK"] = 1;
                            values[valuesById[2] = "CMEK"] = 2;
                            return values;
                        })();
    
                        Instance.Disk = (function() {
    
                            /**
                             * Properties of a Disk.
                             * @memberof google.cloud.notebooks.v1.Instance
                             * @interface IDisk
                             * @property {boolean|null} [autoDelete] Disk autoDelete
                             * @property {boolean|null} [boot] Disk boot
                             * @property {string|null} [deviceName] Disk deviceName
                             * @property {number|Long|null} [diskSizeGb] Disk diskSizeGb
                             * @property {Array.<google.cloud.notebooks.v1.Instance.Disk.IGuestOsFeature>|null} [guestOsFeatures] Disk guestOsFeatures
                             * @property {number|Long|null} [index] Disk index
                             * @property {string|null} ["interface"] Disk interface
                             * @property {string|null} [kind] Disk kind
                             * @property {Array.<string>|null} [licenses] Disk licenses
                             * @property {string|null} [mode] Disk mode
                             * @property {string|null} [source] Disk source
                             * @property {string|null} [type] Disk type
                             */
    
                            /**
                             * Constructs a new Disk.
                             * @memberof google.cloud.notebooks.v1.Instance
                             * @classdesc Represents a Disk.
                             * @implements IDisk
                             * @constructor
                             * @param {google.cloud.notebooks.v1.Instance.IDisk=} [properties] Properties to set
                             */
                            function Disk(properties) {
                                this.guestOsFeatures = [];
                                this.licenses = [];
                                if (properties)
                                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                        if (properties[keys[i]] != null)
                                            this[keys[i]] = properties[keys[i]];
                            }
    
                            /**
                             * Disk autoDelete.
                             * @member {boolean} autoDelete
                             * @memberof google.cloud.notebooks.v1.Instance.Disk
                             * @instance
                             */
                            Disk.prototype.autoDelete = false;
    
                            /**
                             * Disk boot.
                             * @member {boolean} boot
                             * @memberof google.cloud.notebooks.v1.Instance.Disk
                             * @instance
                             */
                            Disk.prototype.boot = false;
    
                            /**
                             * Disk deviceName.
                             * @member {string} deviceName
                             * @memberof google.cloud.notebooks.v1.Instance.Disk
                             * @instance
                             */
                            Disk.prototype.deviceName = "";
    
                            /**
                             * Disk diskSizeGb.
                             * @member {number|Long} diskSizeGb
                             * @memberof google.cloud.notebooks.v1.Instance.Disk
                             * @instance
                             */
                            Disk.prototype.diskSizeGb = $util.Long ? $util.Long.fromBits(0,0,false) : 0;
    
                            /**
                             * Disk guestOsFeatures.
                             * @member {Array.<google.cloud.notebooks.v1.Instance.Disk.IGuestOsFeature>} guestOsFeatures
                             * @memberof google.cloud.notebooks.v1.Instance.Disk
                             * @instance
                             */
                            Disk.prototype.guestOsFeatures = $util.emptyArray;
    
                            /**
                             * Disk index.
                             * @member {number|Long} index
                             * @memberof google.cloud.notebooks.v1.Instance.Disk
                             * @instance
                             */
                            Disk.prototype.index = $util.Long ? $util.Long.fromBits(0,0,false) : 0;
    
                            /**
                             * Disk interface.
                             * @member {string} interface
                             * @memberof google.cloud.notebooks.v1.Instance.Disk
                             * @instance
                             */
                            Disk.prototype["interface"] = "";
    
                            /**
                             * Disk kind.
                             * @member {string} kind
                             * @memberof google.cloud.notebooks.v1.Instance.Disk
                             * @instance
                             */
                            Disk.prototype.kind = "";
    
                            /**
                             * Disk licenses.
                             * @member {Array.<string>} licenses
                             * @memberof google.cloud.notebooks.v1.Instance.Disk
                             * @instance
                             */
                            Disk.prototype.licenses = $util.emptyArray;
    
                            /**
                             * Disk mode.
                             * @member {string} mode
                             * @memberof google.cloud.notebooks.v1.Instance.Disk
                             * @instance
                             */
                            Disk.prototype.mode = "";
    
                            /**
                             * Disk source.
                             * @member {string} source
                             * @memberof google.cloud.notebooks.v1.Instance.Disk
                             * @instance
                             */
                            Disk.prototype.source = "";
    
                            /**
                             * Disk type.
                             * @member {string} type
                             * @memberof google.cloud.notebooks.v1.Instance.Disk
                             * @instance
                             */
                            Disk.prototype.type = "";
    
                            /**
                             * Creates a new Disk instance using the specified properties.
                             * @function create
                             * @memberof google.cloud.notebooks.v1.Instance.Disk
                             * @static
                             * @param {google.cloud.notebooks.v1.Instance.IDisk=} [properties] Properties to set
                             * @returns {google.cloud.notebooks.v1.Instance.Disk} Disk instance
                             */
                            Disk.create = function create(properties) {
                                return new Disk(properties);
                            };
    
                            /**
                             * Encodes the specified Disk message. Does not implicitly {@link google.cloud.notebooks.v1.Instance.Disk.verify|verify} messages.
                             * @function encode
                             * @memberof google.cloud.notebooks.v1.Instance.Disk
                             * @static
                             * @param {google.cloud.notebooks.v1.Instance.IDisk} message Disk message or plain object to encode
                             * @param {$protobuf.Writer} [writer] Writer to encode to
                             * @returns {$protobuf.Writer} Writer
                             */
                            Disk.encode = function encode(message, writer) {
                                if (!writer)
                                    writer = $Writer.create();
                                if (message.autoDelete != null && Object.hasOwnProperty.call(message, "autoDelete"))
                                    writer.uint32(/* id 1, wireType 0 =*/8).bool(message.autoDelete);
                                if (message.boot != null && Object.hasOwnProperty.call(message, "boot"))
                                    writer.uint32(/* id 2, wireType 0 =*/16).bool(message.boot);
                                if (message.deviceName != null && Object.hasOwnProperty.call(message, "deviceName"))
                                    writer.uint32(/* id 3, wireType 2 =*/26).string(message.deviceName);
                                if (message.diskSizeGb != null && Object.hasOwnProperty.call(message, "diskSizeGb"))
                                    writer.uint32(/* id 4, wireType 0 =*/32).int64(message.diskSizeGb);
                                if (message.guestOsFeatures != null && message.guestOsFeatures.length)
                                    for (var i = 0; i < message.guestOsFeatures.length; ++i)
                                        $root.google.cloud.notebooks.v1.Instance.Disk.GuestOsFeature.encode(message.guestOsFeatures[i], writer.uint32(/* id 5, wireType 2 =*/42).fork()).ldelim();
                                if (message.index != null && Object.hasOwnProperty.call(message, "index"))
                                    writer.uint32(/* id 6, wireType 0 =*/48).int64(message.index);
                                if (message["interface"] != null && Object.hasOwnProperty.call(message, "interface"))
                                    writer.uint32(/* id 7, wireType 2 =*/58).string(message["interface"]);
                                if (message.kind != null && Object.hasOwnProperty.call(message, "kind"))
                                    writer.uint32(/* id 8, wireType 2 =*/66).string(message.kind);
                                if (message.licenses != null && message.licenses.length)
                                    for (var i = 0; i < message.licenses.length; ++i)
                                        writer.uint32(/* id 9, wireType 2 =*/74).string(message.licenses[i]);
                                if (message.mode != null && Object.hasOwnProperty.call(message, "mode"))
                                    writer.uint32(/* id 10, wireType 2 =*/82).string(message.mode);
                                if (message.source != null && Object.hasOwnProperty.call(message, "source"))
                                    writer.uint32(/* id 11, wireType 2 =*/90).string(message.source);
                                if (message.type != null && Object.hasOwnProperty.call(message, "type"))
                                    writer.uint32(/* id 12, wireType 2 =*/98).string(message.type);
                                return writer;
                            };
    
                            /**
                             * Encodes the specified Disk message, length delimited. Does not implicitly {@link google.cloud.notebooks.v1.Instance.Disk.verify|verify} messages.
                             * @function encodeDelimited
                             * @memberof google.cloud.notebooks.v1.Instance.Disk
                             * @static
                             * @param {google.cloud.notebooks.v1.Instance.IDisk} message Disk message or plain object to encode
                             * @param {$protobuf.Writer} [writer] Writer to encode to
                             * @returns {$protobuf.Writer} Writer
                             */
                            Disk.encodeDelimited = function encodeDelimited(message, writer) {
                                return this.encode(message, writer).ldelim();
                            };
    
                            /**
                             * Decodes a Disk message from the specified reader or buffer.
                             * @function decode
                             * @memberof google.cloud.notebooks.v1.Instance.Disk
                             * @static
                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                             * @param {number} [length] Message length if known beforehand
                             * @returns {google.cloud.notebooks.v1.Instance.Disk} Disk
                             * @throws {Error} If the payload is not a reader or valid buffer
                             * @throws {$protobuf.util.ProtocolError} If required fields are missing
                             */
                            Disk.decode = function decode(reader, length) {
                                if (!(reader instanceof $Reader))
                                    reader = $Reader.create(reader);
                                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.notebooks.v1.Instance.Disk();
                                while (reader.pos < end) {
                                    var tag = reader.uint32();
                                    switch (tag >>> 3) {
                                    case 1: {
                                            message.autoDelete = reader.bool();
                                            break;
                                        }
                                    case 2: {
                                            message.boot = reader.bool();
                                            break;
                                        }
                                    case 3: {
                                            message.deviceName = reader.string();
                                            break;
                                        }
                                    case 4: {
                                            message.diskSizeGb = reader.int64();
                                            break;
                                        }
                                    case 5: {
                                            if (!(message.guestOsFeatures && message.guestOsFeatures.length))
                                                message.guestOsFeatures = [];
                                            message.guestOsFeatures.push($root.google.cloud.notebooks.v1.Instance.Disk.GuestOsFeature.decode(reader, reader.uint32()));
                                            break;
                                        }
                                    case 6: {
                                            message.index = reader.int64();
                                            break;
                                        }
                                    case 7: {
                                            message["interface"] = reader.string();
                                            break;
                                        }
                                    case 8: {
                                            message.kind = reader.string();
                                            break;
                                        }
                                    case 9: {
                                            if (!(message.licenses && message.licenses.length))
                                                message.licenses = [];
                                            message.licenses.push(reader.string());
                                            break;
                                        }
                                    case 10: {
                                            message.mode = reader.string();
                                            break;
                                        }
                                    case 11: {
                                            message.source = reader.string();
                                            break;
                                        }
                                    case 12: {
                                            message.type = reader.string();
                                            break;
                                        }
                                    default:
                                        reader.skipType(tag & 7);
                                        break;
                                    }
                                }
                                return message;
                            };
    
                            /**
                             * Decodes a Disk message from the specified reader or buffer, length delimited.
                             * @function decodeDelimited
                             * @memberof google.cloud.notebooks.v1.Instance.Disk
                             * @static
                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                             * @returns {google.cloud.notebooks.v1.Instance.Disk} Disk
                             * @throws {Error} If the payload is not a reader or valid buffer
                             * @throws {$protobuf.util.ProtocolError} If required fields are missing
                             */
                            Disk.decodeDelimited = function decodeDelimited(reader) {
                                if (!(reader instanceof $Reader))
                                    reader = new $Reader(reader);
                                return this.decode(reader, reader.uint32());
                            };
    
                            /**
                             * Verifies a Disk message.
                             * @function verify
                             * @memberof google.cloud.notebooks.v1.Instance.Disk
                             * @static
                             * @param {Object.<string,*>} message Plain object to verify
                             * @returns {string|null} `null` if valid, otherwise the reason why it is not
                             */
                            Disk.verify = function verify(message) {
                                if (typeof message !== "object" || message === null)
                                    return "object expected";
                                if (message.autoDelete != null && message.hasOwnProperty("autoDelete"))
                                    if (typeof message.autoDelete !== "boolean")
                                        return "autoDelete: boolean expected";
                                if (message.boot != null && message.hasOwnProperty("boot"))
                                    if (typeof message.boot !== "boolean")
                                        return "boot: boolean expected";
                                if (message.deviceName != null && message.hasOwnProperty("deviceName"))
                                    if (!$util.isString(message.deviceName))
                                        return "deviceName: string expected";
                                if (message.diskSizeGb != null && message.hasOwnProperty("diskSizeGb"))
                                    if (!$util.isInteger(message.diskSizeGb) && !(message.diskSizeGb && $util.isInteger(message.diskSizeGb.low) && $util.isInteger(message.diskSizeGb.high)))
                                        return "diskSizeGb: integer|Long expected";
                                if (message.guestOsFeatures != null && message.hasOwnProperty("guestOsFeatures")) {
                                    if (!Array.isArray(message.guestOsFeatures))
                                        return "guestOsFeatures: array expected";
                                    for (var i = 0; i < message.guestOsFeatures.length; ++i) {
                                        var error = $root.google.cloud.notebooks.v1.Instance.Disk.GuestOsFeature.verify(message.guestOsFeatures[i]);
                                        if (error)
                                            return "guestOsFeatures." + error;
                                    }
                                }
                                if (message.index != null && message.hasOwnProperty("index"))
                                    if (!$util.isInteger(message.index) && !(message.index && $util.isInteger(message.index.low) && $util.isInteger(message.index.high)))
                                        return "index: integer|Long expected";
                                if (message["interface"] != null && message.hasOwnProperty("interface"))
                                    if (!$util.isString(message["interface"]))
                                        return "interface: string expected";
                                if (message.kind != null && message.hasOwnProperty("kind"))
                                    if (!$util.isString(message.kind))
                                        return "kind: string expected";
                                if (message.licenses != null && message.hasOwnProperty("licenses")) {
                                    if (!Array.isArray(message.licenses))
                                        return "licenses: array expected";
                                    for (var i = 0; i < message.licenses.length; ++i)
                                        if (!$util.isString(message.licenses[i]))
                                            return "licenses: string[] expected";
                                }
                                if (message.mode != null && message.hasOwnProperty("mode"))
                                    if (!$util.isString(message.mode))
                                        return "mode: string expected";
                                if (message.source != null && message.hasOwnProperty("source"))
                                    if (!$util.isString(message.source))
                                        return "source: string expected";
                                if (message.type != null && message.hasOwnProperty("type"))
                                    if (!$util.isString(message.type))
                                        return "type: string expected";
                                return null;
                            };
    
                            /**
                             * Creates a Disk message from a plain object. Also converts values to their respective internal types.
                             * @function fromObject
                             * @memberof google.cloud.notebooks.v1.Instance.Disk
                             * @static
                             * @param {Object.<string,*>} object Plain object
                             * @returns {google.cloud.notebooks.v1.Instance.Disk} Disk
                             */
                            Disk.fromObject = function fromObject(object) {
                                if (object instanceof $root.google.cloud.notebooks.v1.Instance.Disk)
                                    return object;
                                var message = new $root.google.cloud.notebooks.v1.Instance.Disk();
                                if (object.autoDelete != null)
                                    message.autoDelete = Boolean(object.autoDelete);
                                if (object.boot != null)
                                    message.boot = Boolean(object.boot);
                                if (object.deviceName != null)
                                    message.deviceName = String(object.deviceName);
                                if (object.diskSizeGb != null)
                                    if ($util.Long)
                                        (message.diskSizeGb = $util.Long.fromValue(object.diskSizeGb)).unsigned = false;
                                    else if (typeof object.diskSizeGb === "string")
                                        message.diskSizeGb = parseInt(object.diskSizeGb, 10);
                                    else if (typeof object.diskSizeGb === "number")
                                        message.diskSizeGb = object.diskSizeGb;
                                    else if (typeof object.diskSizeGb === "object")
                                        message.diskSizeGb = new $util.LongBits(object.diskSizeGb.low >>> 0, object.diskSizeGb.high >>> 0).toNumber();
                                if (object.guestOsFeatures) {
                                    if (!Array.isArray(object.guestOsFeatures))
                                        throw TypeError(".google.cloud.notebooks.v1.Instance.Disk.guestOsFeatures: array expected");
                                    message.guestOsFeatures = [];
                                    for (var i = 0; i < object.guestOsFeatures.length; ++i) {
                                        if (typeof object.guestOsFeatures[i] !== "object")
                                            throw TypeError(".google.cloud.notebooks.v1.Instance.Disk.guestOsFeatures: object expected");
                                        message.guestOsFeatures[i] = $root.google.cloud.notebooks.v1.Instance.Disk.GuestOsFeature.fromObject(object.guestOsFeatures[i]);
                                    }
                                }
                                if (object.index != null)
                                    if ($util.Long)
                                        (message.index = $util.Long.fromValue(object.index)).unsigned = false;
                                    else if (typeof object.index === "string")
                                        message.index = parseInt(object.index, 10);
                                    else if (typeof object.index === "number")
                                        message.index = object.index;
                                    else if (typeof object.index === "object")
                                        message.index = new $util.LongBits(object.index.low >>> 0, object.index.high >>> 0).toNumber();
                                if (object["interface"] != null)
                                    message["interface"] = String(object["interface"]);
                                if (object.kind != null)
                                    message.kind = String(object.kind);
                                if (object.licenses) {
                                    if (!Array.isArray(object.licenses))
                                        throw TypeError(".google.cloud.notebooks.v1.Instance.Disk.licenses: array expected");
                                    message.licenses = [];
                                    for (var i = 0; i < object.licenses.length; ++i)
                                        message.licenses[i] = String(object.licenses[i]);
                                }
                                if (object.mode != null)
                                    message.mode = String(object.mode);
                                if (object.source != null)
                                    message.source = String(object.source);
                                if (object.type != null)
                                    message.type = String(object.type);
                                return message;
                            };
    
                            /**
                             * Creates a plain object from a Disk message. Also converts values to other types if specified.
                             * @function toObject
                             * @memberof google.cloud.notebooks.v1.Instance.Disk
                             * @static
                             * @param {google.cloud.notebooks.v1.Instance.Disk} message Disk
                             * @param {$protobuf.IConversionOptions} [options] Conversion options
                             * @returns {Object.<string,*>} Plain object
                             */
                            Disk.toObject = function toObject(message, options) {
                                if (!options)
                                    options = {};
                                var object = {};
                                if (options.arrays || options.defaults) {
                                    object.guestOsFeatures = [];
                                    object.licenses = [];
                                }
                                if (options.defaults) {
                                    object.autoDelete = false;
                                    object.boot = false;
                                    object.deviceName = "";
                                    if ($util.Long) {
                                        var long = new $util.Long(0, 0, false);
                                        object.diskSizeGb = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                                    } else
                                        object.diskSizeGb = options.longs === String ? "0" : 0;
                                    if ($util.Long) {
                                        var long = new $util.Long(0, 0, false);
                                        object.index = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                                    } else
                                        object.index = options.longs === String ? "0" : 0;
                                    object["interface"] = "";
                                    object.kind = "";
                                    object.mode = "";
                                    object.source = "";
                                    object.type = "";
                                }
                                if (message.autoDelete != null && message.hasOwnProperty("autoDelete"))
                                    object.autoDelete = message.autoDelete;
                                if (message.boot != null && message.hasOwnProperty("boot"))
                                    object.boot = message.boot;
                                if (message.deviceName != null && message.hasOwnProperty("deviceName"))
                                    object.deviceName = message.deviceName;
                                if (message.diskSizeGb != null && message.hasOwnProperty("diskSizeGb"))
                                    if (typeof message.diskSizeGb === "number")
                                        object.diskSizeGb = options.longs === String ? String(message.diskSizeGb) : message.diskSizeGb;
                                    else
                                        object.diskSizeGb = options.longs === String ? $util.Long.prototype.toString.call(message.diskSizeGb) : options.longs === Number ? new $util.LongBits(message.diskSizeGb.low >>> 0, message.diskSizeGb.high >>> 0).toNumber() : message.diskSizeGb;
                                if (message.guestOsFeatures && message.guestOsFeatures.length) {
                                    object.guestOsFeatures = [];
                                    for (var j = 0; j < message.guestOsFeatures.length; ++j)
                                        object.guestOsFeatures[j] = $root.google.cloud.notebooks.v1.Instance.Disk.GuestOsFeature.toObject(message.guestOsFeatures[j], options);
                                }
                                if (message.index != null && message.hasOwnProperty("index"))
                                    if (typeof message.index === "number")
                                        object.index = options.longs === String ? String(message.index) : message.index;
                                    else
                                        object.index = options.longs === String ? $util.Long.prototype.toString.call(message.index) : options.longs === Number ? new $util.LongBits(message.index.low >>> 0, message.index.high >>> 0).toNumber() : message.index;
                                if (message["interface"] != null && message.hasOwnProperty("interface"))
                                    object["interface"] = message["interface"];
                                if (message.kind != null && message.hasOwnProperty("kind"))
                                    object.kind = message.kind;
                                if (message.licenses && message.licenses.length) {
                                    object.licenses = [];
                                    for (var j = 0; j < message.licenses.length; ++j)
                                        object.licenses[j] = message.licenses[j];
                                }
                                if (message.mode != null && message.hasOwnProperty("mode"))
                                    object.mode = message.mode;
                                if (message.source != null && message.hasOwnProperty("source"))
                                    object.source = message.source;
                                if (message.type != null && message.hasOwnProperty("type"))
                                    object.type = message.type;
                                return object;
                            };
    
                            /**
                             * Converts this Disk to JSON.
                             * @function toJSON
                             * @memberof google.cloud.notebooks.v1.Instance.Disk
                             * @instance
                             * @returns {Object.<string,*>} JSON object
                             */
                            Disk.prototype.toJSON = function toJSON() {
                                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                            };
    
                            /**
                             * Gets the default type url for Disk
                             * @function getTypeUrl
                             * @memberof google.cloud.notebooks.v1.Instance.Disk
                             * @static
                             * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                             * @returns {string} The default type url
                             */
                            Disk.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                                if (typeUrlPrefix === undefined) {
                                    typeUrlPrefix = "type.googleapis.com";
                                }
                                return typeUrlPrefix + "/google.cloud.notebooks.v1.Instance.Disk";
                            };
    
                            Disk.GuestOsFeature = (function() {
    
                                /**
                                 * Properties of a GuestOsFeature.
                                 * @memberof google.cloud.notebooks.v1.Instance.Disk
                                 * @interface IGuestOsFeature
                                 * @property {string|null} [type] GuestOsFeature type
                                 */
    
                                /**
                                 * Constructs a new GuestOsFeature.
                                 * @memberof google.cloud.notebooks.v1.Instance.Disk
                                 * @classdesc Represents a GuestOsFeature.
                                 * @implements IGuestOsFeature
                                 * @constructor
                                 * @param {google.cloud.notebooks.v1.Instance.Disk.IGuestOsFeature=} [properties] Properties to set
                                 */
                                function GuestOsFeature(properties) {
                                    if (properties)
                                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                            if (properties[keys[i]] != null)
                                                this[keys[i]] = properties[keys[i]];
                                }
    
                                /**
                                 * GuestOsFeature type.
                                 * @member {string} type
                                 * @memberof google.cloud.notebooks.v1.Instance.Disk.GuestOsFeature
                                 * @instance
                                 */
                                GuestOsFeature.prototype.type = "";
    
                                /**
                                 * Creates a new GuestOsFeature instance using the specified properties.
                                 * @function create
                                 * @memberof google.cloud.notebooks.v1.Instance.Disk.GuestOsFeature
                                 * @static
                                 * @param {google.cloud.notebooks.v1.Instance.Disk.IGuestOsFeature=} [properties] Properties to set
                                 * @returns {google.cloud.notebooks.v1.Instance.Disk.GuestOsFeature} GuestOsFeature instance
                                 */
                                GuestOsFeature.create = function create(properties) {
                                    return new GuestOsFeature(properties);
                                };
    
                                /**
                                 * Encodes the specified GuestOsFeature message. Does not implicitly {@link google.cloud.notebooks.v1.Instance.Disk.GuestOsFeature.verify|verify} messages.
                                 * @function encode
                                 * @memberof google.cloud.notebooks.v1.Instance.Disk.GuestOsFeature
                                 * @static
                                 * @param {google.cloud.notebooks.v1.Instance.Disk.IGuestOsFeature} message GuestOsFeature message or plain object to encode
                                 * @param {$protobuf.Writer} [writer] Writer to encode to
                                 * @returns {$protobuf.Writer} Writer
                                 */
                                GuestOsFeature.encode = function encode(message, writer) {
                                    if (!writer)
                                        writer = $Writer.create();
                                    if (message.type != null && Object.hasOwnProperty.call(message, "type"))
                                        writer.uint32(/* id 1, wireType 2 =*/10).string(message.type);
                                    return writer;
                                };
    
                                /**
                                 * Encodes the specified GuestOsFeature message, length delimited. Does not implicitly {@link google.cloud.notebooks.v1.Instance.Disk.GuestOsFeature.verify|verify} messages.
                                 * @function encodeDelimited
                                 * @memberof google.cloud.notebooks.v1.Instance.Disk.GuestOsFeature
                                 * @static
                                 * @param {google.cloud.notebooks.v1.Instance.Disk.IGuestOsFeature} message GuestOsFeature message or plain object to encode
                                 * @param {$protobuf.Writer} [writer] Writer to encode to
                                 * @returns {$protobuf.Writer} Writer
                                 */
                                GuestOsFeature.encodeDelimited = function encodeDelimited(message, writer) {
                                    return this.encode(message, writer).ldelim();
                                };
    
                                /**
                                 * Decodes a GuestOsFeature message from the specified reader or buffer.
                                 * @function decode
                                 * @memberof google.cloud.notebooks.v1.Instance.Disk.GuestOsFeature
                                 * @static
                                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                                 * @param {number} [length] Message length if known beforehand
                                 * @returns {google.cloud.notebooks.v1.Instance.Disk.GuestOsFeature} GuestOsFeature
                                 * @throws {Error} If the payload is not a reader or valid buffer
                                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                                 */
                                GuestOsFeature.decode = function decode(reader, length) {
                                    if (!(reader instanceof $Reader))
                                        reader = $Reader.create(reader);
                                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.notebooks.v1.Instance.Disk.GuestOsFeature();
                                    while (reader.pos < end) {
                                        var tag = reader.uint32();
                                        switch (tag >>> 3) {
                                        case 1: {
                                                message.type = reader.string();
                                                break;
                                            }
                                        default:
                                            reader.skipType(tag & 7);
                                            break;
                                        }
                                    }
                                    return message;
                                };
    
                                /**
                                 * Decodes a GuestOsFeature message from the specified reader or buffer, length delimited.
                                 * @function decodeDelimited
                                 * @memberof google.cloud.notebooks.v1.Instance.Disk.GuestOsFeature
                                 * @static
                                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                                 * @returns {google.cloud.notebooks.v1.Instance.Disk.GuestOsFeature} GuestOsFeature
                                 * @throws {Error} If the payload is not a reader or valid buffer
                                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                                 */
                                GuestOsFeature.decodeDelimited = function decodeDelimited(reader) {
                                    if (!(reader instanceof $Reader))
                                        reader = new $Reader(reader);
                                    return this.decode(reader, reader.uint32());
                                };
    
                                /**
                                 * Verifies a GuestOsFeature message.
                                 * @function verify
                                 * @memberof google.cloud.notebooks.v1.Instance.Disk.GuestOsFeature
                                 * @static
                                 * @param {Object.<string,*>} message Plain object to verify
                                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                                 */
                                GuestOsFeature.verify = function verify(message) {
                                    if (typeof message !== "object" || message === null)
                                        return "object expected";
                                    if (message.type != null && message.hasOwnProperty("type"))
                                        if (!$util.isString(message.type))
                                            return "type: string expected";
                                    return null;
                                };
    
                                /**
                                 * Creates a GuestOsFeature message from a plain object. Also converts values to their respective internal types.
                                 * @function fromObject
                                 * @memberof google.cloud.notebooks.v1.Instance.Disk.GuestOsFeature
                                 * @static
                                 * @param {Object.<string,*>} object Plain object
                                 * @returns {google.cloud.notebooks.v1.Instance.Disk.GuestOsFeature} GuestOsFeature
                                 */
                                GuestOsFeature.fromObject = function fromObject(object) {
                                    if (object instanceof $root.google.cloud.notebooks.v1.Instance.Disk.GuestOsFeature)
                                        return object;
                                    var message = new $root.google.cloud.notebooks.v1.Instance.Disk.GuestOsFeature();
                                    if (object.type != null)
                                        message.type = String(object.type);
                                    return message;
                                };
    
                                /**
                                 * Creates a plain object from a GuestOsFeature message. Also converts values to other types if specified.
                                 * @function toObject
                                 * @memberof google.cloud.notebooks.v1.Instance.Disk.GuestOsFeature
                                 * @static
                                 * @param {google.cloud.notebooks.v1.Instance.Disk.GuestOsFeature} message GuestOsFeature
                                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                                 * @returns {Object.<string,*>} Plain object
                                 */
                                GuestOsFeature.toObject = function toObject(message, options) {
                                    if (!options)
                                        options = {};
                                    var object = {};
                                    if (options.defaults)
                                        object.type = "";
                                    if (message.type != null && message.hasOwnProperty("type"))
                                        object.type = message.type;
                                    return object;
                                };
    
                                /**
                                 * Converts this GuestOsFeature to JSON.
                                 * @function toJSON
                                 * @memberof google.cloud.notebooks.v1.Instance.Disk.GuestOsFeature
                                 * @instance
                                 * @returns {Object.<string,*>} JSON object
                                 */
                                GuestOsFeature.prototype.toJSON = function toJSON() {
                                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                                };
    
                                /**
                                 * Gets the default type url for GuestOsFeature
                                 * @function getTypeUrl
                                 * @memberof google.cloud.notebooks.v1.Instance.Disk.GuestOsFeature
                                 * @static
                                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                                 * @returns {string} The default type url
                                 */
                                GuestOsFeature.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                                    if (typeUrlPrefix === undefined) {
                                        typeUrlPrefix = "type.googleapis.com";
                                    }
                                    return typeUrlPrefix + "/google.cloud.notebooks.v1.Instance.Disk.GuestOsFeature";
                                };
    
                                return GuestOsFeature;
                            })();
    
                            return Disk;
                        })();
    
                        Instance.ShieldedInstanceConfig = (function() {
    
                            /**
                             * Properties of a ShieldedInstanceConfig.
                             * @memberof google.cloud.notebooks.v1.Instance
                             * @interface IShieldedInstanceConfig
                             * @property {boolean|null} [enableSecureBoot] ShieldedInstanceConfig enableSecureBoot
                             * @property {boolean|null} [enableVtpm] ShieldedInstanceConfig enableVtpm
                             * @property {boolean|null} [enableIntegrityMonitoring] ShieldedInstanceConfig enableIntegrityMonitoring
                             */
    
                            /**
                             * Constructs a new ShieldedInstanceConfig.
                             * @memberof google.cloud.notebooks.v1.Instance
                             * @classdesc Represents a ShieldedInstanceConfig.
                             * @implements IShieldedInstanceConfig
                             * @constructor
                             * @param {google.cloud.notebooks.v1.Instance.IShieldedInstanceConfig=} [properties] Properties to set
                             */
                            function ShieldedInstanceConfig(properties) {
                                if (properties)
                                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                        if (properties[keys[i]] != null)
                                            this[keys[i]] = properties[keys[i]];
                            }
    
                            /**
                             * ShieldedInstanceConfig enableSecureBoot.
                             * @member {boolean} enableSecureBoot
                             * @memberof google.cloud.notebooks.v1.Instance.ShieldedInstanceConfig
                             * @instance
                             */
                            ShieldedInstanceConfig.prototype.enableSecureBoot = false;
    
                            /**
                             * ShieldedInstanceConfig enableVtpm.
                             * @member {boolean} enableVtpm
                             * @memberof google.cloud.notebooks.v1.Instance.ShieldedInstanceConfig
                             * @instance
                             */
                            ShieldedInstanceConfig.prototype.enableVtpm = false;
    
                            /**
                             * ShieldedInstanceConfig enableIntegrityMonitoring.
                             * @member {boolean} enableIntegrityMonitoring
                             * @memberof google.cloud.notebooks.v1.Instance.ShieldedInstanceConfig
                             * @instance
                             */
                            ShieldedInstanceConfig.prototype.enableIntegrityMonitoring = false;
    
                            /**
                             * Creates a new ShieldedInstanceConfig instance using the specified properties.
                             * @function create
                             * @memberof google.cloud.notebooks.v1.Instance.ShieldedInstanceConfig
                             * @static
                             * @param {google.cloud.notebooks.v1.Instance.IShieldedInstanceConfig=} [properties] Properties to set
                             * @returns {google.cloud.notebooks.v1.Instance.ShieldedInstanceConfig} ShieldedInstanceConfig instance
                             */
                            ShieldedInstanceConfig.create = function create(properties) {
                                return new ShieldedInstanceConfig(properties);
                            };
    
                            /**
                             * Encodes the specified ShieldedInstanceConfig message. Does not implicitly {@link google.cloud.notebooks.v1.Instance.ShieldedInstanceConfig.verify|verify} messages.
                             * @function encode
                             * @memberof google.cloud.notebooks.v1.Instance.ShieldedInstanceConfig
                             * @static
                             * @param {google.cloud.notebooks.v1.Instance.IShieldedInstanceConfig} message ShieldedInstanceConfig message or plain object to encode
                             * @param {$protobuf.Writer} [writer] Writer to encode to
                             * @returns {$protobuf.Writer} Writer
                             */
                            ShieldedInstanceConfig.encode = function encode(message, writer) {
                                if (!writer)
                                    writer = $Writer.create();
                                if (message.enableSecureBoot != null && Object.hasOwnProperty.call(message, "enableSecureBoot"))
                                    writer.uint32(/* id 1, wireType 0 =*/8).bool(message.enableSecureBoot);
                                if (message.enableVtpm != null && Object.hasOwnProperty.call(message, "enableVtpm"))
                                    writer.uint32(/* id 2, wireType 0 =*/16).bool(message.enableVtpm);
                                if (message.enableIntegrityMonitoring != null && Object.hasOwnProperty.call(message, "enableIntegrityMonitoring"))
                                    writer.uint32(/* id 3, wireType 0 =*/24).bool(message.enableIntegrityMonitoring);
                                return writer;
                            };
    
                            /**
                             * Encodes the specified ShieldedInstanceConfig message, length delimited. Does not implicitly {@link google.cloud.notebooks.v1.Instance.ShieldedInstanceConfig.verify|verify} messages.
                             * @function encodeDelimited
                             * @memberof google.cloud.notebooks.v1.Instance.ShieldedInstanceConfig
                             * @static
                             * @param {google.cloud.notebooks.v1.Instance.IShieldedInstanceConfig} message ShieldedInstanceConfig message or plain object to encode
                             * @param {$protobuf.Writer} [writer] Writer to encode to
                             * @returns {$protobuf.Writer} Writer
                             */
                            ShieldedInstanceConfig.encodeDelimited = function encodeDelimited(message, writer) {
                                return this.encode(message, writer).ldelim();
                            };
    
                            /**
                             * Decodes a ShieldedInstanceConfig message from the specified reader or buffer.
                             * @function decode
                             * @memberof google.cloud.notebooks.v1.Instance.ShieldedInstanceConfig
                             * @static
                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                             * @param {number} [length] Message length if known beforehand
                             * @returns {google.cloud.notebooks.v1.Instance.ShieldedInstanceConfig} ShieldedInstanceConfig
                             * @throws {Error} If the payload is not a reader or valid buffer
                             * @throws {$protobuf.util.ProtocolError} If required fields are missing
                             */
                            ShieldedInstanceConfig.decode = function decode(reader, length) {
                                if (!(reader instanceof $Reader))
                                    reader = $Reader.create(reader);
                                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.notebooks.v1.Instance.ShieldedInstanceConfig();
                                while (reader.pos < end) {
                                    var tag = reader.uint32();
                                    switch (tag >>> 3) {
                                    case 1: {
                                            message.enableSecureBoot = reader.bool();
                                            break;
                                        }
                                    case 2: {
                                            message.enableVtpm = reader.bool();
                                            break;
                                        }
                                    case 3: {
                                            message.enableIntegrityMonitoring = reader.bool();
                                            break;
                                        }
                                    default:
                                        reader.skipType(tag & 7);
                                        break;
                                    }
                                }
                                return message;
                            };
    
                            /**
                             * Decodes a ShieldedInstanceConfig message from the specified reader or buffer, length delimited.
                             * @function decodeDelimited
                             * @memberof google.cloud.notebooks.v1.Instance.ShieldedInstanceConfig
                             * @static
                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                             * @returns {google.cloud.notebooks.v1.Instance.ShieldedInstanceConfig} ShieldedInstanceConfig
                             * @throws {Error} If the payload is not a reader or valid buffer
                             * @throws {$protobuf.util.ProtocolError} If required fields are missing
                             */
                            ShieldedInstanceConfig.decodeDelimited = function decodeDelimited(reader) {
                                if (!(reader instanceof $Reader))
                                    reader = new $Reader(reader);
                                return this.decode(reader, reader.uint32());
                            };
    
                            /**
                             * Verifies a ShieldedInstanceConfig message.
                             * @function verify
                             * @memberof google.cloud.notebooks.v1.Instance.ShieldedInstanceConfig
                             * @static
                             * @param {Object.<string,*>} message Plain object to verify
                             * @returns {string|null} `null` if valid, otherwise the reason why it is not
                             */
                            ShieldedInstanceConfig.verify = function verify(message) {
                                if (typeof message !== "object" || message === null)
                                    return "object expected";
                                if (message.enableSecureBoot != null && message.hasOwnProperty("enableSecureBoot"))
                                    if (typeof message.enableSecureBoot !== "boolean")
                                        return "enableSecureBoot: boolean expected";
                                if (message.enableVtpm != null && message.hasOwnProperty("enableVtpm"))
                                    if (typeof message.enableVtpm !== "boolean")
                                        return "enableVtpm: boolean expected";
                                if (message.enableIntegrityMonitoring != null && message.hasOwnProperty("enableIntegrityMonitoring"))
                                    if (typeof message.enableIntegrityMonitoring !== "boolean")
                                        return "enableIntegrityMonitoring: boolean expected";
                                return null;
                            };
    
                            /**
                             * Creates a ShieldedInstanceConfig message from a plain object. Also converts values to their respective internal types.
                             * @function fromObject
                             * @memberof google.cloud.notebooks.v1.Instance.ShieldedInstanceConfig
                             * @static
                             * @param {Object.<string,*>} object Plain object
                             * @returns {google.cloud.notebooks.v1.Instance.ShieldedInstanceConfig} ShieldedInstanceConfig
                             */
                            ShieldedInstanceConfig.fromObject = function fromObject(object) {
                                if (object instanceof $root.google.cloud.notebooks.v1.Instance.ShieldedInstanceConfig)
                                    return object;
                                var message = new $root.google.cloud.notebooks.v1.Instance.ShieldedInstanceConfig();
                                if (object.enableSecureBoot != null)
                                    message.enableSecureBoot = Boolean(object.enableSecureBoot);
                                if (object.enableVtpm != null)
                                    message.enableVtpm = Boolean(object.enableVtpm);
                                if (object.enableIntegrityMonitoring != null)
                                    message.enableIntegrityMonitoring = Boolean(object.enableIntegrityMonitoring);
                                return message;
                            };
    
                            /**
                             * Creates a plain object from a ShieldedInstanceConfig message. Also converts values to other types if specified.
                             * @function toObject
                             * @memberof google.cloud.notebooks.v1.Instance.ShieldedInstanceConfig
                             * @static
                             * @param {google.cloud.notebooks.v1.Instance.ShieldedInstanceConfig} message ShieldedInstanceConfig
                             * @param {$protobuf.IConversionOptions} [options] Conversion options
                             * @returns {Object.<string,*>} Plain object
                             */
                            ShieldedInstanceConfig.toObject = function toObject(message, options) {
                                if (!options)
                                    options = {};
                                var object = {};
                                if (options.defaults) {
                                    object.enableSecureBoot = false;
                                    object.enableVtpm = false;
                                    object.enableIntegrityMonitoring = false;
                                }
                                if (message.enableSecureBoot != null && message.hasOwnProperty("enableSecureBoot"))
                                    object.enableSecureBoot = message.enableSecureBoot;
                                if (message.enableVtpm != null && message.hasOwnProperty("enableVtpm"))
                                    object.enableVtpm = message.enableVtpm;
                                if (message.enableIntegrityMonitoring != null && message.hasOwnProperty("enableIntegrityMonitoring"))
                                    object.enableIntegrityMonitoring = message.enableIntegrityMonitoring;
                                return object;
                            };
    
                            /**
                             * Converts this ShieldedInstanceConfig to JSON.
                             * @function toJSON
                             * @memberof google.cloud.notebooks.v1.Instance.ShieldedInstanceConfig
                             * @instance
                             * @returns {Object.<string,*>} JSON object
                             */
                            ShieldedInstanceConfig.prototype.toJSON = function toJSON() {
                                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                            };
    
                            /**
                             * Gets the default type url for ShieldedInstanceConfig
                             * @function getTypeUrl
                             * @memberof google.cloud.notebooks.v1.Instance.ShieldedInstanceConfig
                             * @static
                             * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                             * @returns {string} The default type url
                             */
                            ShieldedInstanceConfig.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                                if (typeUrlPrefix === undefined) {
                                    typeUrlPrefix = "type.googleapis.com";
                                }
                                return typeUrlPrefix + "/google.cloud.notebooks.v1.Instance.ShieldedInstanceConfig";
                            };
    
                            return ShieldedInstanceConfig;
                        })();
    
                        Instance.UpgradeHistoryEntry = (function() {
    
                            /**
                             * Properties of an UpgradeHistoryEntry.
                             * @memberof google.cloud.notebooks.v1.Instance
                             * @interface IUpgradeHistoryEntry
                             * @property {string|null} [snapshot] UpgradeHistoryEntry snapshot
                             * @property {string|null} [vmImage] UpgradeHistoryEntry vmImage
                             * @property {string|null} [containerImage] UpgradeHistoryEntry containerImage
                             * @property {string|null} [framework] UpgradeHistoryEntry framework
                             * @property {string|null} [version] UpgradeHistoryEntry version
                             * @property {google.cloud.notebooks.v1.Instance.UpgradeHistoryEntry.State|null} [state] UpgradeHistoryEntry state
                             * @property {google.protobuf.ITimestamp|null} [createTime] UpgradeHistoryEntry createTime
                             * @property {string|null} [targetImage] UpgradeHistoryEntry targetImage
                             * @property {google.cloud.notebooks.v1.Instance.UpgradeHistoryEntry.Action|null} [action] UpgradeHistoryEntry action
                             * @property {string|null} [targetVersion] UpgradeHistoryEntry targetVersion
                             */
    
                            /**
                             * Constructs a new UpgradeHistoryEntry.
                             * @memberof google.cloud.notebooks.v1.Instance
                             * @classdesc Represents an UpgradeHistoryEntry.
                             * @implements IUpgradeHistoryEntry
                             * @constructor
                             * @param {google.cloud.notebooks.v1.Instance.IUpgradeHistoryEntry=} [properties] Properties to set
                             */
                            function UpgradeHistoryEntry(properties) {
                                if (properties)
                                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                        if (properties[keys[i]] != null)
                                            this[keys[i]] = properties[keys[i]];
                            }
    
                            /**
                             * UpgradeHistoryEntry snapshot.
                             * @member {string} snapshot
                             * @memberof google.cloud.notebooks.v1.Instance.UpgradeHistoryEntry
                             * @instance
                             */
                            UpgradeHistoryEntry.prototype.snapshot = "";
    
                            /**
                             * UpgradeHistoryEntry vmImage.
                             * @member {string} vmImage
                             * @memberof google.cloud.notebooks.v1.Instance.UpgradeHistoryEntry
                             * @instance
                             */
                            UpgradeHistoryEntry.prototype.vmImage = "";
    
                            /**
                             * UpgradeHistoryEntry containerImage.
                             * @member {string} containerImage
                             * @memberof google.cloud.notebooks.v1.Instance.UpgradeHistoryEntry
                             * @instance
                             */
                            UpgradeHistoryEntry.prototype.containerImage = "";
    
                            /**
                             * UpgradeHistoryEntry framework.
                             * @member {string} framework
                             * @memberof google.cloud.notebooks.v1.Instance.UpgradeHistoryEntry
                             * @instance
                             */
                            UpgradeHistoryEntry.prototype.framework = "";
    
                            /**
                             * UpgradeHistoryEntry version.
                             * @member {string} version
                             * @memberof google.cloud.notebooks.v1.Instance.UpgradeHistoryEntry
                             * @instance
                             */
                            UpgradeHistoryEntry.prototype.version = "";
    
                            /**
                             * UpgradeHistoryEntry state.
                             * @member {google.cloud.notebooks.v1.Instance.UpgradeHistoryEntry.State} state
                             * @memberof google.cloud.notebooks.v1.Instance.UpgradeHistoryEntry
                             * @instance
                             */
                            UpgradeHistoryEntry.prototype.state = 0;
    
                            /**
                             * UpgradeHistoryEntry createTime.
                             * @member {google.protobuf.ITimestamp|null|undefined} createTime
                             * @memberof google.cloud.notebooks.v1.Instance.UpgradeHistoryEntry
                             * @instance
                             */
                            UpgradeHistoryEntry.prototype.createTime = null;
    
                            /**
                             * UpgradeHistoryEntry targetImage.
                             * @member {string} targetImage
                             * @memberof google.cloud.notebooks.v1.Instance.UpgradeHistoryEntry
                             * @instance
                             */
                            UpgradeHistoryEntry.prototype.targetImage = "";
    
                            /**
                             * UpgradeHistoryEntry action.
                             * @member {google.cloud.notebooks.v1.Instance.UpgradeHistoryEntry.Action} action
                             * @memberof google.cloud.notebooks.v1.Instance.UpgradeHistoryEntry
                             * @instance
                             */
                            UpgradeHistoryEntry.prototype.action = 0;
    
                            /**
                             * UpgradeHistoryEntry targetVersion.
                             * @member {string} targetVersion
                             * @memberof google.cloud.notebooks.v1.Instance.UpgradeHistoryEntry
                             * @instance
                             */
                            UpgradeHistoryEntry.prototype.targetVersion = "";
    
                            /**
                             * Creates a new UpgradeHistoryEntry instance using the specified properties.
                             * @function create
                             * @memberof google.cloud.notebooks.v1.Instance.UpgradeHistoryEntry
                             * @static
                             * @param {google.cloud.notebooks.v1.Instance.IUpgradeHistoryEntry=} [properties] Properties to set
                             * @returns {google.cloud.notebooks.v1.Instance.UpgradeHistoryEntry} UpgradeHistoryEntry instance
                             */
                            UpgradeHistoryEntry.create = function create(properties) {
                                return new UpgradeHistoryEntry(properties);
                            };
    
                            /**
                             * Encodes the specified UpgradeHistoryEntry message. Does not implicitly {@link google.cloud.notebooks.v1.Instance.UpgradeHistoryEntry.verify|verify} messages.
                             * @function encode
                             * @memberof google.cloud.notebooks.v1.Instance.UpgradeHistoryEntry
                             * @static
                             * @param {google.cloud.notebooks.v1.Instance.IUpgradeHistoryEntry} message UpgradeHistoryEntry message or plain object to encode
                             * @param {$protobuf.Writer} [writer] Writer to encode to
                             * @returns {$protobuf.Writer} Writer
                             */
                            UpgradeHistoryEntry.encode = function encode(message, writer) {
                                if (!writer)
                                    writer = $Writer.create();
                                if (message.snapshot != null && Object.hasOwnProperty.call(message, "snapshot"))
                                    writer.uint32(/* id 1, wireType 2 =*/10).string(message.snapshot);
                                if (message.vmImage != null && Object.hasOwnProperty.call(message, "vmImage"))
                                    writer.uint32(/* id 2, wireType 2 =*/18).string(message.vmImage);
                                if (message.containerImage != null && Object.hasOwnProperty.call(message, "containerImage"))
                                    writer.uint32(/* id 3, wireType 2 =*/26).string(message.containerImage);
                                if (message.framework != null && Object.hasOwnProperty.call(message, "framework"))
                                    writer.uint32(/* id 4, wireType 2 =*/34).string(message.framework);
                                if (message.version != null && Object.hasOwnProperty.call(message, "version"))
                                    writer.uint32(/* id 5, wireType 2 =*/42).string(message.version);
                                if (message.state != null && Object.hasOwnProperty.call(message, "state"))
                                    writer.uint32(/* id 6, wireType 0 =*/48).int32(message.state);
                                if (message.createTime != null && Object.hasOwnProperty.call(message, "createTime"))
                                    $root.google.protobuf.Timestamp.encode(message.createTime, writer.uint32(/* id 7, wireType 2 =*/58).fork()).ldelim();
                                if (message.targetImage != null && Object.hasOwnProperty.call(message, "targetImage"))
                                    writer.uint32(/* id 8, wireType 2 =*/66).string(message.targetImage);
                                if (message.action != null && Object.hasOwnProperty.call(message, "action"))
                                    writer.uint32(/* id 9, wireType 0 =*/72).int32(message.action);
                                if (message.targetVersion != null && Object.hasOwnProperty.call(message, "targetVersion"))
                                    writer.uint32(/* id 10, wireType 2 =*/82).string(message.targetVersion);
                                return writer;
                            };
    
                            /**
                             * Encodes the specified UpgradeHistoryEntry message, length delimited. Does not implicitly {@link google.cloud.notebooks.v1.Instance.UpgradeHistoryEntry.verify|verify} messages.
                             * @function encodeDelimited
                             * @memberof google.cloud.notebooks.v1.Instance.UpgradeHistoryEntry
                             * @static
                             * @param {google.cloud.notebooks.v1.Instance.IUpgradeHistoryEntry} message UpgradeHistoryEntry message or plain object to encode
                             * @param {$protobuf.Writer} [writer] Writer to encode to
                             * @returns {$protobuf.Writer} Writer
                             */
                            UpgradeHistoryEntry.encodeDelimited = function encodeDelimited(message, writer) {
                                return this.encode(message, writer).ldelim();
                            };
    
                            /**
                             * Decodes an UpgradeHistoryEntry message from the specified reader or buffer.
                             * @function decode
                             * @memberof google.cloud.notebooks.v1.Instance.UpgradeHistoryEntry
                             * @static
                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                             * @param {number} [length] Message length if known beforehand
                             * @returns {google.cloud.notebooks.v1.Instance.UpgradeHistoryEntry} UpgradeHistoryEntry
                             * @throws {Error} If the payload is not a reader or valid buffer
                             * @throws {$protobuf.util.ProtocolError} If required fields are missing
                             */
                            UpgradeHistoryEntry.decode = function decode(reader, length) {
                                if (!(reader instanceof $Reader))
                                    reader = $Reader.create(reader);
                                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.notebooks.v1.Instance.UpgradeHistoryEntry();
                                while (reader.pos < end) {
                                    var tag = reader.uint32();
                                    switch (tag >>> 3) {
                                    case 1: {
                                            message.snapshot = reader.string();
                                            break;
                                        }
                                    case 2: {
                                            message.vmImage = reader.string();
                                            break;
                                        }
                                    case 3: {
                                            message.containerImage = reader.string();
                                            break;
                                        }
                                    case 4: {
                                            message.framework = reader.string();
                                            break;
                                        }
                                    case 5: {
                                            message.version = reader.string();
                                            break;
                                        }
                                    case 6: {
                                            message.state = reader.int32();
                                            break;
                                        }
                                    case 7: {
                                            message.createTime = $root.google.protobuf.Timestamp.decode(reader, reader.uint32());
                                            break;
                                        }
                                    case 8: {
                                            message.targetImage = reader.string();
                                            break;
                                        }
                                    case 9: {
                                            message.action = reader.int32();
                                            break;
                                        }
                                    case 10: {
                                            message.targetVersion = reader.string();
                                            break;
                                        }
                                    default:
                                        reader.skipType(tag & 7);
                                        break;
                                    }
                                }
                                return message;
                            };
    
                            /**
                             * Decodes an UpgradeHistoryEntry message from the specified reader or buffer, length delimited.
                             * @function decodeDelimited
                             * @memberof google.cloud.notebooks.v1.Instance.UpgradeHistoryEntry
                             * @static
                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                             * @returns {google.cloud.notebooks.v1.Instance.UpgradeHistoryEntry} UpgradeHistoryEntry
                             * @throws {Error} If the payload is not a reader or valid buffer
                             * @throws {$protobuf.util.ProtocolError} If required fields are missing
                             */
                            UpgradeHistoryEntry.decodeDelimited = function decodeDelimited(reader) {
                                if (!(reader instanceof $Reader))
                                    reader = new $Reader(reader);
                                return this.decode(reader, reader.uint32());
                            };
    
                            /**
                             * Verifies an UpgradeHistoryEntry message.
                             * @function verify
                             * @memberof google.cloud.notebooks.v1.Instance.UpgradeHistoryEntry
                             * @static
                             * @param {Object.<string,*>} message Plain object to verify
                             * @returns {string|null} `null` if valid, otherwise the reason why it is not
                             */
                            UpgradeHistoryEntry.verify = function verify(message) {
                                if (typeof message !== "object" || message === null)
                                    return "object expected";
                                if (message.snapshot != null && message.hasOwnProperty("snapshot"))
                                    if (!$util.isString(message.snapshot))
                                        return "snapshot: string expected";
                                if (message.vmImage != null && message.hasOwnProperty("vmImage"))
                                    if (!$util.isString(message.vmImage))
                                        return "vmImage: string expected";
                                if (message.containerImage != null && message.hasOwnProperty("containerImage"))
                                    if (!$util.isString(message.containerImage))
                                        return "containerImage: string expected";
                                if (message.framework != null && message.hasOwnProperty("framework"))
                                    if (!$util.isString(message.framework))
                                        return "framework: string expected";
                                if (message.version != null && message.hasOwnProperty("version"))
                                    if (!$util.isString(message.version))
                                        return "version: string expected";
                                if (message.state != null && message.hasOwnProperty("state"))
                                    switch (message.state) {
                                    default:
                                        return "state: enum value expected";
                                    case 0:
                                    case 1:
                                    case 2:
                                    case 3:
                                        break;
                                    }
                                if (message.createTime != null && message.hasOwnProperty("createTime")) {
                                    var error = $root.google.protobuf.Timestamp.verify(message.createTime);
                                    if (error)
                                        return "createTime." + error;
                                }
                                if (message.targetImage != null && message.hasOwnProperty("targetImage"))
                                    if (!$util.isString(message.targetImage))
                                        return "targetImage: string expected";
                                if (message.action != null && message.hasOwnProperty("action"))
                                    switch (message.action) {
                                    default:
                                        return "action: enum value expected";
                                    case 0:
                                    case 1:
                                    case 2:
                                        break;
                                    }
                                if (message.targetVersion != null && message.hasOwnProperty("targetVersion"))
                                    if (!$util.isString(message.targetVersion))
                                        return "targetVersion: string expected";
                                return null;
                            };
    
                            /**
                             * Creates an UpgradeHistoryEntry message from a plain object. Also converts values to their respective internal types.
                             * @function fromObject
                             * @memberof google.cloud.notebooks.v1.Instance.UpgradeHistoryEntry
                             * @static
                             * @param {Object.<string,*>} object Plain object
                             * @returns {google.cloud.notebooks.v1.Instance.UpgradeHistoryEntry} UpgradeHistoryEntry
                             */
                            UpgradeHistoryEntry.fromObject = function fromObject(object) {
                                if (object instanceof $root.google.cloud.notebooks.v1.Instance.UpgradeHistoryEntry)
                                    return object;
                                var message = new $root.google.cloud.notebooks.v1.Instance.UpgradeHistoryEntry();
                                if (object.snapshot != null)
                                    message.snapshot = String(object.snapshot);
                                if (object.vmImage != null)
                                    message.vmImage = String(object.vmImage);
                                if (object.containerImage != null)
                                    message.containerImage = String(object.containerImage);
                                if (object.framework != null)
                                    message.framework = String(object.framework);
                                if (object.version != null)
                                    message.version = String(object.version);
                                switch (object.state) {
                                default:
                                    if (typeof object.state === "number") {
                                        message.state = object.state;
                                        break;
                                    }
                                    break;
                                case "STATE_UNSPECIFIED":
                                case 0:
                                    message.state = 0;
                                    break;
                                case "STARTED":
                                case 1:
                                    message.state = 1;
                                    break;
                                case "SUCCEEDED":
                                case 2:
                                    message.state = 2;
                                    break;
                                case "FAILED":
                                case 3:
                                    message.state = 3;
                                    break;
                                }
                                if (object.createTime != null) {
                                    if (typeof object.createTime !== "object")
                                        throw TypeError(".google.cloud.notebooks.v1.Instance.UpgradeHistoryEntry.createTime: object expected");
                                    message.createTime = $root.google.protobuf.Timestamp.fromObject(object.createTime);
                                }
                                if (object.targetImage != null)
                                    message.targetImage = String(object.targetImage);
                                switch (object.action) {
                                default:
                                    if (typeof object.action === "number") {
                                        message.action = object.action;
                                        break;
                                    }
                                    break;
                                case "ACTION_UNSPECIFIED":
                                case 0:
                                    message.action = 0;
                                    break;
                                case "UPGRADE":
                                case 1:
                                    message.action = 1;
                                    break;
                                case "ROLLBACK":
                                case 2:
                                    message.action = 2;
                                    break;
                                }
                                if (object.targetVersion != null)
                                    message.targetVersion = String(object.targetVersion);
                                return message;
                            };
    
                            /**
                             * Creates a plain object from an UpgradeHistoryEntry message. Also converts values to other types if specified.
                             * @function toObject
                             * @memberof google.cloud.notebooks.v1.Instance.UpgradeHistoryEntry
                             * @static
                             * @param {google.cloud.notebooks.v1.Instance.UpgradeHistoryEntry} message UpgradeHistoryEntry
                             * @param {$protobuf.IConversionOptions} [options] Conversion options
                             * @returns {Object.<string,*>} Plain object
                             */
                            UpgradeHistoryEntry.toObject = function toObject(message, options) {
                                if (!options)
                                    options = {};
                                var object = {};
                                if (options.defaults) {
                                    object.snapshot = "";
                                    object.vmImage = "";
                                    object.containerImage = "";
                                    object.framework = "";
                                    object.version = "";
                                    object.state = options.enums === String ? "STATE_UNSPECIFIED" : 0;
                                    object.createTime = null;
                                    object.targetImage = "";
                                    object.action = options.enums === String ? "ACTION_UNSPECIFIED" : 0;
                                    object.targetVersion = "";
                                }
                                if (message.snapshot != null && message.hasOwnProperty("snapshot"))
                                    object.snapshot = message.snapshot;
                                if (message.vmImage != null && message.hasOwnProperty("vmImage"))
                                    object.vmImage = message.vmImage;
                                if (message.containerImage != null && message.hasOwnProperty("containerImage"))
                                    object.containerImage = message.containerImage;
                                if (message.framework != null && message.hasOwnProperty("framework"))
                                    object.framework = message.framework;
                                if (message.version != null && message.hasOwnProperty("version"))
                                    object.version = message.version;
                                if (message.state != null && message.hasOwnProperty("state"))
                                    object.state = options.enums === String ? $root.google.cloud.notebooks.v1.Instance.UpgradeHistoryEntry.State[message.state] === undefined ? message.state : $root.google.cloud.notebooks.v1.Instance.UpgradeHistoryEntry.State[message.state] : message.state;
                                if (message.createTime != null && message.hasOwnProperty("createTime"))
                                    object.createTime = $root.google.protobuf.Timestamp.toObject(message.createTime, options);
                                if (message.targetImage != null && message.hasOwnProperty("targetImage"))
                                    object.targetImage = message.targetImage;
                                if (message.action != null && message.hasOwnProperty("action"))
                                    object.action = options.enums === String ? $root.google.cloud.notebooks.v1.Instance.UpgradeHistoryEntry.Action[message.action] === undefined ? message.action : $root.google.cloud.notebooks.v1.Instance.UpgradeHistoryEntry.Action[message.action] : message.action;
                                if (message.targetVersion != null && message.hasOwnProperty("targetVersion"))
                                    object.targetVersion = message.targetVersion;
                                return object;
                            };
    
                            /**
                             * Converts this UpgradeHistoryEntry to JSON.
                             * @function toJSON
                             * @memberof google.cloud.notebooks.v1.Instance.UpgradeHistoryEntry
                             * @instance
                             * @returns {Object.<string,*>} JSON object
                             */
                            UpgradeHistoryEntry.prototype.toJSON = function toJSON() {
                                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                            };
    
                            /**
                             * Gets the default type url for UpgradeHistoryEntry
                             * @function getTypeUrl
                             * @memberof google.cloud.notebooks.v1.Instance.UpgradeHistoryEntry
                             * @static
                             * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                             * @returns {string} The default type url
                             */
                            UpgradeHistoryEntry.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                                if (typeUrlPrefix === undefined) {
                                    typeUrlPrefix = "type.googleapis.com";
                                }
                                return typeUrlPrefix + "/google.cloud.notebooks.v1.Instance.UpgradeHistoryEntry";
                            };
    
                            /**
                             * State enum.
                             * @name google.cloud.notebooks.v1.Instance.UpgradeHistoryEntry.State
                             * @enum {number}
                             * @property {number} STATE_UNSPECIFIED=0 STATE_UNSPECIFIED value
                             * @property {number} STARTED=1 STARTED value
                             * @property {number} SUCCEEDED=2 SUCCEEDED value
                             * @property {number} FAILED=3 FAILED value
                             */
                            UpgradeHistoryEntry.State = (function() {
                                var valuesById = {}, values = Object.create(valuesById);
                                values[valuesById[0] = "STATE_UNSPECIFIED"] = 0;
                                values[valuesById[1] = "STARTED"] = 1;
                                values[valuesById[2] = "SUCCEEDED"] = 2;
                                values[valuesById[3] = "FAILED"] = 3;
                                return values;
                            })();
    
                            /**
                             * Action enum.
                             * @name google.cloud.notebooks.v1.Instance.UpgradeHistoryEntry.Action
                             * @enum {number}
                             * @property {number} ACTION_UNSPECIFIED=0 ACTION_UNSPECIFIED value
                             * @property {number} UPGRADE=1 UPGRADE value
                             * @property {number} ROLLBACK=2 ROLLBACK value
                             */
                            UpgradeHistoryEntry.Action = (function() {
                                var valuesById = {}, values = Object.create(valuesById);
                                values[valuesById[0] = "ACTION_UNSPECIFIED"] = 0;
                                values[valuesById[1] = "UPGRADE"] = 1;
                                values[valuesById[2] = "ROLLBACK"] = 2;
                                return values;
                            })();
    
                            return UpgradeHistoryEntry;
                        })();
    
                        /**
                         * NicType enum.
                         * @name google.cloud.notebooks.v1.Instance.NicType
                         * @enum {number}
                         * @property {number} UNSPECIFIED_NIC_TYPE=0 UNSPECIFIED_NIC_TYPE value
                         * @property {number} VIRTIO_NET=1 VIRTIO_NET value
                         * @property {number} GVNIC=2 GVNIC value
                         */
                        Instance.NicType = (function() {
                            var valuesById = {}, values = Object.create(valuesById);
                            values[valuesById[0] = "UNSPECIFIED_NIC_TYPE"] = 0;
                            values[valuesById[1] = "VIRTIO_NET"] = 1;
                            values[valuesById[2] = "GVNIC"] = 2;
                            return values;
                        })();
    
                        return Instance;
                    })();
    
                    v1.InstanceConfig = (function() {
    
                        /**
                         * Properties of an InstanceConfig.
                         * @memberof google.cloud.notebooks.v1
                         * @interface IInstanceConfig
                         * @property {string|null} [notebookUpgradeSchedule] InstanceConfig notebookUpgradeSchedule
                         * @property {boolean|null} [enableHealthMonitoring] InstanceConfig enableHealthMonitoring
                         */
    
                        /**
                         * Constructs a new InstanceConfig.
                         * @memberof google.cloud.notebooks.v1
                         * @classdesc Represents an InstanceConfig.
                         * @implements IInstanceConfig
                         * @constructor
                         * @param {google.cloud.notebooks.v1.IInstanceConfig=} [properties] Properties to set
                         */
                        function InstanceConfig(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * InstanceConfig notebookUpgradeSchedule.
                         * @member {string} notebookUpgradeSchedule
                         * @memberof google.cloud.notebooks.v1.InstanceConfig
                         * @instance
                         */
                        InstanceConfig.prototype.notebookUpgradeSchedule = "";
    
                        /**
                         * InstanceConfig enableHealthMonitoring.
                         * @member {boolean} enableHealthMonitoring
                         * @memberof google.cloud.notebooks.v1.InstanceConfig
                         * @instance
                         */
                        InstanceConfig.prototype.enableHealthMonitoring = false;
    
                        /**
                         * Creates a new InstanceConfig instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.notebooks.v1.InstanceConfig
                         * @static
                         * @param {google.cloud.notebooks.v1.IInstanceConfig=} [properties] Properties to set
                         * @returns {google.cloud.notebooks.v1.InstanceConfig} InstanceConfig instance
                         */
                        InstanceConfig.create = function create(properties) {
                            return new InstanceConfig(properties);
                        };
    
                        /**
                         * Encodes the specified InstanceConfig message. Does not implicitly {@link google.cloud.notebooks.v1.InstanceConfig.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.notebooks.v1.InstanceConfig
                         * @static
                         * @param {google.cloud.notebooks.v1.IInstanceConfig} message InstanceConfig message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        InstanceConfig.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.notebookUpgradeSchedule != null && Object.hasOwnProperty.call(message, "notebookUpgradeSchedule"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.notebookUpgradeSchedule);
                            if (message.enableHealthMonitoring != null && Object.hasOwnProperty.call(message, "enableHealthMonitoring"))
                                writer.uint32(/* id 2, wireType 0 =*/16).bool(message.enableHealthMonitoring);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified InstanceConfig message, length delimited. Does not implicitly {@link google.cloud.notebooks.v1.InstanceConfig.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.notebooks.v1.InstanceConfig
                         * @static
                         * @param {google.cloud.notebooks.v1.IInstanceConfig} message InstanceConfig message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        InstanceConfig.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes an InstanceConfig message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.notebooks.v1.InstanceConfig
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.notebooks.v1.InstanceConfig} InstanceConfig
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        InstanceConfig.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.notebooks.v1.InstanceConfig();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.notebookUpgradeSchedule = reader.string();
                                        break;
                                    }
                                case 2: {
                                        message.enableHealthMonitoring = reader.bool();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes an InstanceConfig message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.notebooks.v1.InstanceConfig
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.notebooks.v1.InstanceConfig} InstanceConfig
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        InstanceConfig.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies an InstanceConfig message.
                         * @function verify
                         * @memberof google.cloud.notebooks.v1.InstanceConfig
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        InstanceConfig.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.notebookUpgradeSchedule != null && message.hasOwnProperty("notebookUpgradeSchedule"))
                                if (!$util.isString(message.notebookUpgradeSchedule))
                                    return "notebookUpgradeSchedule: string expected";
                            if (message.enableHealthMonitoring != null && message.hasOwnProperty("enableHealthMonitoring"))
                                if (typeof message.enableHealthMonitoring !== "boolean")
                                    return "enableHealthMonitoring: boolean expected";
                            return null;
                        };
    
                        /**
                         * Creates an InstanceConfig message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.notebooks.v1.InstanceConfig
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.notebooks.v1.InstanceConfig} InstanceConfig
                         */
                        InstanceConfig.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.notebooks.v1.InstanceConfig)
                                return object;
                            var message = new $root.google.cloud.notebooks.v1.InstanceConfig();
                            if (object.notebookUpgradeSchedule != null)
                                message.notebookUpgradeSchedule = String(object.notebookUpgradeSchedule);
                            if (object.enableHealthMonitoring != null)
                                message.enableHealthMonitoring = Boolean(object.enableHealthMonitoring);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from an InstanceConfig message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.notebooks.v1.InstanceConfig
                         * @static
                         * @param {google.cloud.notebooks.v1.InstanceConfig} message InstanceConfig
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        InstanceConfig.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.notebookUpgradeSchedule = "";
                                object.enableHealthMonitoring = false;
                            }
                            if (message.notebookUpgradeSchedule != null && message.hasOwnProperty("notebookUpgradeSchedule"))
                                object.notebookUpgradeSchedule = message.notebookUpgradeSchedule;
                            if (message.enableHealthMonitoring != null && message.hasOwnProperty("enableHealthMonitoring"))
                                object.enableHealthMonitoring = message.enableHealthMonitoring;
                            return object;
                        };
    
                        /**
                         * Converts this InstanceConfig to JSON.
                         * @function toJSON
                         * @memberof google.cloud.notebooks.v1.InstanceConfig
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        InstanceConfig.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for InstanceConfig
                         * @function getTypeUrl
                         * @memberof google.cloud.notebooks.v1.InstanceConfig
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        InstanceConfig.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.notebooks.v1.InstanceConfig";
                        };
    
                        return InstanceConfig;
                    })();
    
                    v1.ManagedNotebookService = (function() {
    
                        /**
                         * Constructs a new ManagedNotebookService service.
                         * @memberof google.cloud.notebooks.v1
                         * @classdesc Represents a ManagedNotebookService
                         * @extends $protobuf.rpc.Service
                         * @constructor
                         * @param {$protobuf.RPCImpl} rpcImpl RPC implementation
                         * @param {boolean} [requestDelimited=false] Whether requests are length-delimited
                         * @param {boolean} [responseDelimited=false] Whether responses are length-delimited
                         */
                        function ManagedNotebookService(rpcImpl, requestDelimited, responseDelimited) {
                            $protobuf.rpc.Service.call(this, rpcImpl, requestDelimited, responseDelimited);
                        }
    
                        (ManagedNotebookService.prototype = Object.create($protobuf.rpc.Service.prototype)).constructor = ManagedNotebookService;
    
                        /**
                         * Creates new ManagedNotebookService service using the specified rpc implementation.
                         * @function create
                         * @memberof google.cloud.notebooks.v1.ManagedNotebookService
                         * @static
                         * @param {$protobuf.RPCImpl} rpcImpl RPC implementation
                         * @param {boolean} [requestDelimited=false] Whether requests are length-delimited
                         * @param {boolean} [responseDelimited=false] Whether responses are length-delimited
                         * @returns {ManagedNotebookService} RPC service. Useful where requests and/or responses are streamed.
                         */
                        ManagedNotebookService.create = function create(rpcImpl, requestDelimited, responseDelimited) {
                            return new this(rpcImpl, requestDelimited, responseDelimited);
                        };
    
                        /**
                         * Callback as used by {@link google.cloud.notebooks.v1.ManagedNotebookService|listRuntimes}.
                         * @memberof google.cloud.notebooks.v1.ManagedNotebookService
                         * @typedef ListRuntimesCallback
                         * @type {function}
                         * @param {Error|null} error Error, if any
                         * @param {google.cloud.notebooks.v1.ListRuntimesResponse} [response] ListRuntimesResponse
                         */
    
                        /**
                         * Calls ListRuntimes.
                         * @function listRuntimes
                         * @memberof google.cloud.notebooks.v1.ManagedNotebookService
                         * @instance
                         * @param {google.cloud.notebooks.v1.IListRuntimesRequest} request ListRuntimesRequest message or plain object
                         * @param {google.cloud.notebooks.v1.ManagedNotebookService.ListRuntimesCallback} callback Node-style callback called with the error, if any, and ListRuntimesResponse
                         * @returns {undefined}
                         * @variation 1
                         */
                        Object.defineProperty(ManagedNotebookService.prototype.listRuntimes = function listRuntimes(request, callback) {
                            return this.rpcCall(listRuntimes, $root.google.cloud.notebooks.v1.ListRuntimesRequest, $root.google.cloud.notebooks.v1.ListRuntimesResponse, request, callback);
                        }, "name", { value: "ListRuntimes" });
    
                        /**
                         * Calls ListRuntimes.
                         * @function listRuntimes
                         * @memberof google.cloud.notebooks.v1.ManagedNotebookService
                         * @instance
                         * @param {google.cloud.notebooks.v1.IListRuntimesRequest} request ListRuntimesRequest message or plain object
                         * @returns {Promise<google.cloud.notebooks.v1.ListRuntimesResponse>} Promise
                         * @variation 2
                         */
    
                        /**
                         * Callback as used by {@link google.cloud.notebooks.v1.ManagedNotebookService|getRuntime}.
                         * @memberof google.cloud.notebooks.v1.ManagedNotebookService
                         * @typedef GetRuntimeCallback
                         * @type {function}
                         * @param {Error|null} error Error, if any
                         * @param {google.cloud.notebooks.v1.Runtime} [response] Runtime
                         */
    
                        /**
                         * Calls GetRuntime.
                         * @function getRuntime
                         * @memberof google.cloud.notebooks.v1.ManagedNotebookService
                         * @instance
                         * @param {google.cloud.notebooks.v1.IGetRuntimeRequest} request GetRuntimeRequest message or plain object
                         * @param {google.cloud.notebooks.v1.ManagedNotebookService.GetRuntimeCallback} callback Node-style callback called with the error, if any, and Runtime
                         * @returns {undefined}
                         * @variation 1
                         */
                        Object.defineProperty(ManagedNotebookService.prototype.getRuntime = function getRuntime(request, callback) {
                            return this.rpcCall(getRuntime, $root.google.cloud.notebooks.v1.GetRuntimeRequest, $root.google.cloud.notebooks.v1.Runtime, request, callback);
                        }, "name", { value: "GetRuntime" });
    
                        /**
                         * Calls GetRuntime.
                         * @function getRuntime
                         * @memberof google.cloud.notebooks.v1.ManagedNotebookService
                         * @instance
                         * @param {google.cloud.notebooks.v1.IGetRuntimeRequest} request GetRuntimeRequest message or plain object
                         * @returns {Promise<google.cloud.notebooks.v1.Runtime>} Promise
                         * @variation 2
                         */
    
                        /**
                         * Callback as used by {@link google.cloud.notebooks.v1.ManagedNotebookService|createRuntime}.
                         * @memberof google.cloud.notebooks.v1.ManagedNotebookService
                         * @typedef CreateRuntimeCallback
                         * @type {function}
                         * @param {Error|null} error Error, if any
                         * @param {google.longrunning.Operation} [response] Operation
                         */
    
                        /**
                         * Calls CreateRuntime.
                         * @function createRuntime
                         * @memberof google.cloud.notebooks.v1.ManagedNotebookService
                         * @instance
                         * @param {google.cloud.notebooks.v1.ICreateRuntimeRequest} request CreateRuntimeRequest message or plain object
                         * @param {google.cloud.notebooks.v1.ManagedNotebookService.CreateRuntimeCallback} callback Node-style callback called with the error, if any, and Operation
                         * @returns {undefined}
                         * @variation 1
                         */
                        Object.defineProperty(ManagedNotebookService.prototype.createRuntime = function createRuntime(request, callback) {
                            return this.rpcCall(createRuntime, $root.google.cloud.notebooks.v1.CreateRuntimeRequest, $root.google.longrunning.Operation, request, callback);
                        }, "name", { value: "CreateRuntime" });
    
                        /**
                         * Calls CreateRuntime.
                         * @function createRuntime
                         * @memberof google.cloud.notebooks.v1.ManagedNotebookService
                         * @instance
                         * @param {google.cloud.notebooks.v1.ICreateRuntimeRequest} request CreateRuntimeRequest message or plain object
                         * @returns {Promise<google.longrunning.Operation>} Promise
                         * @variation 2
                         */
    
                        /**
                         * Callback as used by {@link google.cloud.notebooks.v1.ManagedNotebookService|updateRuntime}.
                         * @memberof google.cloud.notebooks.v1.ManagedNotebookService
                         * @typedef UpdateRuntimeCallback
                         * @type {function}
                         * @param {Error|null} error Error, if any
                         * @param {google.longrunning.Operation} [response] Operation
                         */
    
                        /**
                         * Calls UpdateRuntime.
                         * @function updateRuntime
                         * @memberof google.cloud.notebooks.v1.ManagedNotebookService
                         * @instance
                         * @param {google.cloud.notebooks.v1.IUpdateRuntimeRequest} request UpdateRuntimeRequest message or plain object
                         * @param {google.cloud.notebooks.v1.ManagedNotebookService.UpdateRuntimeCallback} callback Node-style callback called with the error, if any, and Operation
                         * @returns {undefined}
                         * @variation 1
                         */
                        Object.defineProperty(ManagedNotebookService.prototype.updateRuntime = function updateRuntime(request, callback) {
                            return this.rpcCall(updateRuntime, $root.google.cloud.notebooks.v1.UpdateRuntimeRequest, $root.google.longrunning.Operation, request, callback);
                        }, "name", { value: "UpdateRuntime" });
    
                        /**
                         * Calls UpdateRuntime.
                         * @function updateRuntime
                         * @memberof google.cloud.notebooks.v1.ManagedNotebookService
                         * @instance
                         * @param {google.cloud.notebooks.v1.IUpdateRuntimeRequest} request UpdateRuntimeRequest message or plain object
                         * @returns {Promise<google.longrunning.Operation>} Promise
                         * @variation 2
                         */
    
                        /**
                         * Callback as used by {@link google.cloud.notebooks.v1.ManagedNotebookService|deleteRuntime}.
                         * @memberof google.cloud.notebooks.v1.ManagedNotebookService
                         * @typedef DeleteRuntimeCallback
                         * @type {function}
                         * @param {Error|null} error Error, if any
                         * @param {google.longrunning.Operation} [response] Operation
                         */
    
                        /**
                         * Calls DeleteRuntime.
                         * @function deleteRuntime
                         * @memberof google.cloud.notebooks.v1.ManagedNotebookService
                         * @instance
                         * @param {google.cloud.notebooks.v1.IDeleteRuntimeRequest} request DeleteRuntimeRequest message or plain object
                         * @param {google.cloud.notebooks.v1.ManagedNotebookService.DeleteRuntimeCallback} callback Node-style callback called with the error, if any, and Operation
                         * @returns {undefined}
                         * @variation 1
                         */
                        Object.defineProperty(ManagedNotebookService.prototype.deleteRuntime = function deleteRuntime(request, callback) {
                            return this.rpcCall(deleteRuntime, $root.google.cloud.notebooks.v1.DeleteRuntimeRequest, $root.google.longrunning.Operation, request, callback);
                        }, "name", { value: "DeleteRuntime" });
    
                        /**
                         * Calls DeleteRuntime.
                         * @function deleteRuntime
                         * @memberof google.cloud.notebooks.v1.ManagedNotebookService
                         * @instance
                         * @param {google.cloud.notebooks.v1.IDeleteRuntimeRequest} request DeleteRuntimeRequest message or plain object
                         * @returns {Promise<google.longrunning.Operation>} Promise
                         * @variation 2
                         */
    
                        /**
                         * Callback as used by {@link google.cloud.notebooks.v1.ManagedNotebookService|startRuntime}.
                         * @memberof google.cloud.notebooks.v1.ManagedNotebookService
                         * @typedef StartRuntimeCallback
                         * @type {function}
                         * @param {Error|null} error Error, if any
                         * @param {google.longrunning.Operation} [response] Operation
                         */
    
                        /**
                         * Calls StartRuntime.
                         * @function startRuntime
                         * @memberof google.cloud.notebooks.v1.ManagedNotebookService
                         * @instance
                         * @param {google.cloud.notebooks.v1.IStartRuntimeRequest} request StartRuntimeRequest message or plain object
                         * @param {google.cloud.notebooks.v1.ManagedNotebookService.StartRuntimeCallback} callback Node-style callback called with the error, if any, and Operation
                         * @returns {undefined}
                         * @variation 1
                         */
                        Object.defineProperty(ManagedNotebookService.prototype.startRuntime = function startRuntime(request, callback) {
                            return this.rpcCall(startRuntime, $root.google.cloud.notebooks.v1.StartRuntimeRequest, $root.google.longrunning.Operation, request, callback);
                        }, "name", { value: "StartRuntime" });
    
                        /**
                         * Calls StartRuntime.
                         * @function startRuntime
                         * @memberof google.cloud.notebooks.v1.ManagedNotebookService
                         * @instance
                         * @param {google.cloud.notebooks.v1.IStartRuntimeRequest} request StartRuntimeRequest message or plain object
                         * @returns {Promise<google.longrunning.Operation>} Promise
                         * @variation 2
                         */
    
                        /**
                         * Callback as used by {@link google.cloud.notebooks.v1.ManagedNotebookService|stopRuntime}.
                         * @memberof google.cloud.notebooks.v1.ManagedNotebookService
                         * @typedef StopRuntimeCallback
                         * @type {function}
                         * @param {Error|null} error Error, if any
                         * @param {google.longrunning.Operation} [response] Operation
                         */
    
                        /**
                         * Calls StopRuntime.
                         * @function stopRuntime
                         * @memberof google.cloud.notebooks.v1.ManagedNotebookService
                         * @instance
                         * @param {google.cloud.notebooks.v1.IStopRuntimeRequest} request StopRuntimeRequest message or plain object
                         * @param {google.cloud.notebooks.v1.ManagedNotebookService.StopRuntimeCallback} callback Node-style callback called with the error, if any, and Operation
                         * @returns {undefined}
                         * @variation 1
                         */
                        Object.defineProperty(ManagedNotebookService.prototype.stopRuntime = function stopRuntime(request, callback) {
                            return this.rpcCall(stopRuntime, $root.google.cloud.notebooks.v1.StopRuntimeRequest, $root.google.longrunning.Operation, request, callback);
                        }, "name", { value: "StopRuntime" });
    
                        /**
                         * Calls StopRuntime.
                         * @function stopRuntime
                         * @memberof google.cloud.notebooks.v1.ManagedNotebookService
                         * @instance
                         * @param {google.cloud.notebooks.v1.IStopRuntimeRequest} request StopRuntimeRequest message or plain object
                         * @returns {Promise<google.longrunning.Operation>} Promise
                         * @variation 2
                         */
    
                        /**
                         * Callback as used by {@link google.cloud.notebooks.v1.ManagedNotebookService|switchRuntime}.
                         * @memberof google.cloud.notebooks.v1.ManagedNotebookService
                         * @typedef SwitchRuntimeCallback
                         * @type {function}
                         * @param {Error|null} error Error, if any
                         * @param {google.longrunning.Operation} [response] Operation
                         */
    
                        /**
                         * Calls SwitchRuntime.
                         * @function switchRuntime
                         * @memberof google.cloud.notebooks.v1.ManagedNotebookService
                         * @instance
                         * @param {google.cloud.notebooks.v1.ISwitchRuntimeRequest} request SwitchRuntimeRequest message or plain object
                         * @param {google.cloud.notebooks.v1.ManagedNotebookService.SwitchRuntimeCallback} callback Node-style callback called with the error, if any, and Operation
                         * @returns {undefined}
                         * @variation 1
                         */
                        Object.defineProperty(ManagedNotebookService.prototype.switchRuntime = function switchRuntime(request, callback) {
                            return this.rpcCall(switchRuntime, $root.google.cloud.notebooks.v1.SwitchRuntimeRequest, $root.google.longrunning.Operation, request, callback);
                        }, "name", { value: "SwitchRuntime" });
    
                        /**
                         * Calls SwitchRuntime.
                         * @function switchRuntime
                         * @memberof google.cloud.notebooks.v1.ManagedNotebookService
                         * @instance
                         * @param {google.cloud.notebooks.v1.ISwitchRuntimeRequest} request SwitchRuntimeRequest message or plain object
                         * @returns {Promise<google.longrunning.Operation>} Promise
                         * @variation 2
                         */
    
                        /**
                         * Callback as used by {@link google.cloud.notebooks.v1.ManagedNotebookService|resetRuntime}.
                         * @memberof google.cloud.notebooks.v1.ManagedNotebookService
                         * @typedef ResetRuntimeCallback
                         * @type {function}
                         * @param {Error|null} error Error, if any
                         * @param {google.longrunning.Operation} [response] Operation
                         */
    
                        /**
                         * Calls ResetRuntime.
                         * @function resetRuntime
                         * @memberof google.cloud.notebooks.v1.ManagedNotebookService
                         * @instance
                         * @param {google.cloud.notebooks.v1.IResetRuntimeRequest} request ResetRuntimeRequest message or plain object
                         * @param {google.cloud.notebooks.v1.ManagedNotebookService.ResetRuntimeCallback} callback Node-style callback called with the error, if any, and Operation
                         * @returns {undefined}
                         * @variation 1
                         */
                        Object.defineProperty(ManagedNotebookService.prototype.resetRuntime = function resetRuntime(request, callback) {
                            return this.rpcCall(resetRuntime, $root.google.cloud.notebooks.v1.ResetRuntimeRequest, $root.google.longrunning.Operation, request, callback);
                        }, "name", { value: "ResetRuntime" });
    
                        /**
                         * Calls ResetRuntime.
                         * @function resetRuntime
                         * @memberof google.cloud.notebooks.v1.ManagedNotebookService
                         * @instance
                         * @param {google.cloud.notebooks.v1.IResetRuntimeRequest} request ResetRuntimeRequest message or plain object
                         * @returns {Promise<google.longrunning.Operation>} Promise
                         * @variation 2
                         */
    
                        /**
                         * Callback as used by {@link google.cloud.notebooks.v1.ManagedNotebookService|upgradeRuntime}.
                         * @memberof google.cloud.notebooks.v1.ManagedNotebookService
                         * @typedef UpgradeRuntimeCallback
                         * @type {function}
                         * @param {Error|null} error Error, if any
                         * @param {google.longrunning.Operation} [response] Operation
                         */
    
                        /**
                         * Calls UpgradeRuntime.
                         * @function upgradeRuntime
                         * @memberof google.cloud.notebooks.v1.ManagedNotebookService
                         * @instance
                         * @param {google.cloud.notebooks.v1.IUpgradeRuntimeRequest} request UpgradeRuntimeRequest message or plain object
                         * @param {google.cloud.notebooks.v1.ManagedNotebookService.UpgradeRuntimeCallback} callback Node-style callback called with the error, if any, and Operation
                         * @returns {undefined}
                         * @variation 1
                         */
                        Object.defineProperty(ManagedNotebookService.prototype.upgradeRuntime = function upgradeRuntime(request, callback) {
                            return this.rpcCall(upgradeRuntime, $root.google.cloud.notebooks.v1.UpgradeRuntimeRequest, $root.google.longrunning.Operation, request, callback);
                        }, "name", { value: "UpgradeRuntime" });
    
                        /**
                         * Calls UpgradeRuntime.
                         * @function upgradeRuntime
                         * @memberof google.cloud.notebooks.v1.ManagedNotebookService
                         * @instance
                         * @param {google.cloud.notebooks.v1.IUpgradeRuntimeRequest} request UpgradeRuntimeRequest message or plain object
                         * @returns {Promise<google.longrunning.Operation>} Promise
                         * @variation 2
                         */
    
                        /**
                         * Callback as used by {@link google.cloud.notebooks.v1.ManagedNotebookService|reportRuntimeEvent}.
                         * @memberof google.cloud.notebooks.v1.ManagedNotebookService
                         * @typedef ReportRuntimeEventCallback
                         * @type {function}
                         * @param {Error|null} error Error, if any
                         * @param {google.longrunning.Operation} [response] Operation
                         */
    
                        /**
                         * Calls ReportRuntimeEvent.
                         * @function reportRuntimeEvent
                         * @memberof google.cloud.notebooks.v1.ManagedNotebookService
                         * @instance
                         * @param {google.cloud.notebooks.v1.IReportRuntimeEventRequest} request ReportRuntimeEventRequest message or plain object
                         * @param {google.cloud.notebooks.v1.ManagedNotebookService.ReportRuntimeEventCallback} callback Node-style callback called with the error, if any, and Operation
                         * @returns {undefined}
                         * @variation 1
                         */
                        Object.defineProperty(ManagedNotebookService.prototype.reportRuntimeEvent = function reportRuntimeEvent(request, callback) {
                            return this.rpcCall(reportRuntimeEvent, $root.google.cloud.notebooks.v1.ReportRuntimeEventRequest, $root.google.longrunning.Operation, request, callback);
                        }, "name", { value: "ReportRuntimeEvent" });
    
                        /**
                         * Calls ReportRuntimeEvent.
                         * @function reportRuntimeEvent
                         * @memberof google.cloud.notebooks.v1.ManagedNotebookService
                         * @instance
                         * @param {google.cloud.notebooks.v1.IReportRuntimeEventRequest} request ReportRuntimeEventRequest message or plain object
                         * @returns {Promise<google.longrunning.Operation>} Promise
                         * @variation 2
                         */
    
                        /**
                         * Callback as used by {@link google.cloud.notebooks.v1.ManagedNotebookService|refreshRuntimeTokenInternal}.
                         * @memberof google.cloud.notebooks.v1.ManagedNotebookService
                         * @typedef RefreshRuntimeTokenInternalCallback
                         * @type {function}
                         * @param {Error|null} error Error, if any
                         * @param {google.cloud.notebooks.v1.RefreshRuntimeTokenInternalResponse} [response] RefreshRuntimeTokenInternalResponse
                         */
    
                        /**
                         * Calls RefreshRuntimeTokenInternal.
                         * @function refreshRuntimeTokenInternal
                         * @memberof google.cloud.notebooks.v1.ManagedNotebookService
                         * @instance
                         * @param {google.cloud.notebooks.v1.IRefreshRuntimeTokenInternalRequest} request RefreshRuntimeTokenInternalRequest message or plain object
                         * @param {google.cloud.notebooks.v1.ManagedNotebookService.RefreshRuntimeTokenInternalCallback} callback Node-style callback called with the error, if any, and RefreshRuntimeTokenInternalResponse
                         * @returns {undefined}
                         * @variation 1
                         */
                        Object.defineProperty(ManagedNotebookService.prototype.refreshRuntimeTokenInternal = function refreshRuntimeTokenInternal(request, callback) {
                            return this.rpcCall(refreshRuntimeTokenInternal, $root.google.cloud.notebooks.v1.RefreshRuntimeTokenInternalRequest, $root.google.cloud.notebooks.v1.RefreshRuntimeTokenInternalResponse, request, callback);
                        }, "name", { value: "RefreshRuntimeTokenInternal" });
    
                        /**
                         * Calls RefreshRuntimeTokenInternal.
                         * @function refreshRuntimeTokenInternal
                         * @memberof google.cloud.notebooks.v1.ManagedNotebookService
                         * @instance
                         * @param {google.cloud.notebooks.v1.IRefreshRuntimeTokenInternalRequest} request RefreshRuntimeTokenInternalRequest message or plain object
                         * @returns {Promise<google.cloud.notebooks.v1.RefreshRuntimeTokenInternalResponse>} Promise
                         * @variation 2
                         */
    
                        /**
                         * Callback as used by {@link google.cloud.notebooks.v1.ManagedNotebookService|diagnoseRuntime}.
                         * @memberof google.cloud.notebooks.v1.ManagedNotebookService
                         * @typedef DiagnoseRuntimeCallback
                         * @type {function}
                         * @param {Error|null} error Error, if any
                         * @param {google.longrunning.Operation} [response] Operation
                         */
    
                        /**
                         * Calls DiagnoseRuntime.
                         * @function diagnoseRuntime
                         * @memberof google.cloud.notebooks.v1.ManagedNotebookService
                         * @instance
                         * @param {google.cloud.notebooks.v1.IDiagnoseRuntimeRequest} request DiagnoseRuntimeRequest message or plain object
                         * @param {google.cloud.notebooks.v1.ManagedNotebookService.DiagnoseRuntimeCallback} callback Node-style callback called with the error, if any, and Operation
                         * @returns {undefined}
                         * @variation 1
                         */
                        Object.defineProperty(ManagedNotebookService.prototype.diagnoseRuntime = function diagnoseRuntime(request, callback) {
                            return this.rpcCall(diagnoseRuntime, $root.google.cloud.notebooks.v1.DiagnoseRuntimeRequest, $root.google.longrunning.Operation, request, callback);
                        }, "name", { value: "DiagnoseRuntime" });
    
                        /**
                         * Calls DiagnoseRuntime.
                         * @function diagnoseRuntime
                         * @memberof google.cloud.notebooks.v1.ManagedNotebookService
                         * @instance
                         * @param {google.cloud.notebooks.v1.IDiagnoseRuntimeRequest} request DiagnoseRuntimeRequest message or plain object
                         * @returns {Promise<google.longrunning.Operation>} Promise
                         * @variation 2
                         */
    
                        return ManagedNotebookService;
                    })();
    
                    v1.ListRuntimesRequest = (function() {
    
                        /**
                         * Properties of a ListRuntimesRequest.
                         * @memberof google.cloud.notebooks.v1
                         * @interface IListRuntimesRequest
                         * @property {string|null} [parent] ListRuntimesRequest parent
                         * @property {number|null} [pageSize] ListRuntimesRequest pageSize
                         * @property {string|null} [pageToken] ListRuntimesRequest pageToken
                         */
    
                        /**
                         * Constructs a new ListRuntimesRequest.
                         * @memberof google.cloud.notebooks.v1
                         * @classdesc Represents a ListRuntimesRequest.
                         * @implements IListRuntimesRequest
                         * @constructor
                         * @param {google.cloud.notebooks.v1.IListRuntimesRequest=} [properties] Properties to set
                         */
                        function ListRuntimesRequest(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * ListRuntimesRequest parent.
                         * @member {string} parent
                         * @memberof google.cloud.notebooks.v1.ListRuntimesRequest
                         * @instance
                         */
                        ListRuntimesRequest.prototype.parent = "";
    
                        /**
                         * ListRuntimesRequest pageSize.
                         * @member {number} pageSize
                         * @memberof google.cloud.notebooks.v1.ListRuntimesRequest
                         * @instance
                         */
                        ListRuntimesRequest.prototype.pageSize = 0;
    
                        /**
                         * ListRuntimesRequest pageToken.
                         * @member {string} pageToken
                         * @memberof google.cloud.notebooks.v1.ListRuntimesRequest
                         * @instance
                         */
                        ListRuntimesRequest.prototype.pageToken = "";
    
                        /**
                         * Creates a new ListRuntimesRequest instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.notebooks.v1.ListRuntimesRequest
                         * @static
                         * @param {google.cloud.notebooks.v1.IListRuntimesRequest=} [properties] Properties to set
                         * @returns {google.cloud.notebooks.v1.ListRuntimesRequest} ListRuntimesRequest instance
                         */
                        ListRuntimesRequest.create = function create(properties) {
                            return new ListRuntimesRequest(properties);
                        };
    
                        /**
                         * Encodes the specified ListRuntimesRequest message. Does not implicitly {@link google.cloud.notebooks.v1.ListRuntimesRequest.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.notebooks.v1.ListRuntimesRequest
                         * @static
                         * @param {google.cloud.notebooks.v1.IListRuntimesRequest} message ListRuntimesRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        ListRuntimesRequest.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.parent != null && Object.hasOwnProperty.call(message, "parent"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.parent);
                            if (message.pageSize != null && Object.hasOwnProperty.call(message, "pageSize"))
                                writer.uint32(/* id 2, wireType 0 =*/16).int32(message.pageSize);
                            if (message.pageToken != null && Object.hasOwnProperty.call(message, "pageToken"))
                                writer.uint32(/* id 3, wireType 2 =*/26).string(message.pageToken);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified ListRuntimesRequest message, length delimited. Does not implicitly {@link google.cloud.notebooks.v1.ListRuntimesRequest.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.notebooks.v1.ListRuntimesRequest
                         * @static
                         * @param {google.cloud.notebooks.v1.IListRuntimesRequest} message ListRuntimesRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        ListRuntimesRequest.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a ListRuntimesRequest message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.notebooks.v1.ListRuntimesRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.notebooks.v1.ListRuntimesRequest} ListRuntimesRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        ListRuntimesRequest.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.notebooks.v1.ListRuntimesRequest();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.parent = reader.string();
                                        break;
                                    }
                                case 2: {
                                        message.pageSize = reader.int32();
                                        break;
                                    }
                                case 3: {
                                        message.pageToken = reader.string();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a ListRuntimesRequest message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.notebooks.v1.ListRuntimesRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.notebooks.v1.ListRuntimesRequest} ListRuntimesRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        ListRuntimesRequest.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a ListRuntimesRequest message.
                         * @function verify
                         * @memberof google.cloud.notebooks.v1.ListRuntimesRequest
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        ListRuntimesRequest.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.parent != null && message.hasOwnProperty("parent"))
                                if (!$util.isString(message.parent))
                                    return "parent: string expected";
                            if (message.pageSize != null && message.hasOwnProperty("pageSize"))
                                if (!$util.isInteger(message.pageSize))
                                    return "pageSize: integer expected";
                            if (message.pageToken != null && message.hasOwnProperty("pageToken"))
                                if (!$util.isString(message.pageToken))
                                    return "pageToken: string expected";
                            return null;
                        };
    
                        /**
                         * Creates a ListRuntimesRequest message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.notebooks.v1.ListRuntimesRequest
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.notebooks.v1.ListRuntimesRequest} ListRuntimesRequest
                         */
                        ListRuntimesRequest.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.notebooks.v1.ListRuntimesRequest)
                                return object;
                            var message = new $root.google.cloud.notebooks.v1.ListRuntimesRequest();
                            if (object.parent != null)
                                message.parent = String(object.parent);
                            if (object.pageSize != null)
                                message.pageSize = object.pageSize | 0;
                            if (object.pageToken != null)
                                message.pageToken = String(object.pageToken);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a ListRuntimesRequest message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.notebooks.v1.ListRuntimesRequest
                         * @static
                         * @param {google.cloud.notebooks.v1.ListRuntimesRequest} message ListRuntimesRequest
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        ListRuntimesRequest.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.parent = "";
                                object.pageSize = 0;
                                object.pageToken = "";
                            }
                            if (message.parent != null && message.hasOwnProperty("parent"))
                                object.parent = message.parent;
                            if (message.pageSize != null && message.hasOwnProperty("pageSize"))
                                object.pageSize = message.pageSize;
                            if (message.pageToken != null && message.hasOwnProperty("pageToken"))
                                object.pageToken = message.pageToken;
                            return object;
                        };
    
                        /**
                         * Converts this ListRuntimesRequest to JSON.
                         * @function toJSON
                         * @memberof google.cloud.notebooks.v1.ListRuntimesRequest
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        ListRuntimesRequest.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for ListRuntimesRequest
                         * @function getTypeUrl
                         * @memberof google.cloud.notebooks.v1.ListRuntimesRequest
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        ListRuntimesRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.notebooks.v1.ListRuntimesRequest";
                        };
    
                        return ListRuntimesRequest;
                    })();
    
                    v1.ListRuntimesResponse = (function() {
    
                        /**
                         * Properties of a ListRuntimesResponse.
                         * @memberof google.cloud.notebooks.v1
                         * @interface IListRuntimesResponse
                         * @property {Array.<google.cloud.notebooks.v1.IRuntime>|null} [runtimes] ListRuntimesResponse runtimes
                         * @property {string|null} [nextPageToken] ListRuntimesResponse nextPageToken
                         * @property {Array.<string>|null} [unreachable] ListRuntimesResponse unreachable
                         */
    
                        /**
                         * Constructs a new ListRuntimesResponse.
                         * @memberof google.cloud.notebooks.v1
                         * @classdesc Represents a ListRuntimesResponse.
                         * @implements IListRuntimesResponse
                         * @constructor
                         * @param {google.cloud.notebooks.v1.IListRuntimesResponse=} [properties] Properties to set
                         */
                        function ListRuntimesResponse(properties) {
                            this.runtimes = [];
                            this.unreachable = [];
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * ListRuntimesResponse runtimes.
                         * @member {Array.<google.cloud.notebooks.v1.IRuntime>} runtimes
                         * @memberof google.cloud.notebooks.v1.ListRuntimesResponse
                         * @instance
                         */
                        ListRuntimesResponse.prototype.runtimes = $util.emptyArray;
    
                        /**
                         * ListRuntimesResponse nextPageToken.
                         * @member {string} nextPageToken
                         * @memberof google.cloud.notebooks.v1.ListRuntimesResponse
                         * @instance
                         */
                        ListRuntimesResponse.prototype.nextPageToken = "";
    
                        /**
                         * ListRuntimesResponse unreachable.
                         * @member {Array.<string>} unreachable
                         * @memberof google.cloud.notebooks.v1.ListRuntimesResponse
                         * @instance
                         */
                        ListRuntimesResponse.prototype.unreachable = $util.emptyArray;
    
                        /**
                         * Creates a new ListRuntimesResponse instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.notebooks.v1.ListRuntimesResponse
                         * @static
                         * @param {google.cloud.notebooks.v1.IListRuntimesResponse=} [properties] Properties to set
                         * @returns {google.cloud.notebooks.v1.ListRuntimesResponse} ListRuntimesResponse instance
                         */
                        ListRuntimesResponse.create = function create(properties) {
                            return new ListRuntimesResponse(properties);
                        };
    
                        /**
                         * Encodes the specified ListRuntimesResponse message. Does not implicitly {@link google.cloud.notebooks.v1.ListRuntimesResponse.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.notebooks.v1.ListRuntimesResponse
                         * @static
                         * @param {google.cloud.notebooks.v1.IListRuntimesResponse} message ListRuntimesResponse message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        ListRuntimesResponse.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.runtimes != null && message.runtimes.length)
                                for (var i = 0; i < message.runtimes.length; ++i)
                                    $root.google.cloud.notebooks.v1.Runtime.encode(message.runtimes[i], writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                            if (message.nextPageToken != null && Object.hasOwnProperty.call(message, "nextPageToken"))
                                writer.uint32(/* id 2, wireType 2 =*/18).string(message.nextPageToken);
                            if (message.unreachable != null && message.unreachable.length)
                                for (var i = 0; i < message.unreachable.length; ++i)
                                    writer.uint32(/* id 3, wireType 2 =*/26).string(message.unreachable[i]);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified ListRuntimesResponse message, length delimited. Does not implicitly {@link google.cloud.notebooks.v1.ListRuntimesResponse.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.notebooks.v1.ListRuntimesResponse
                         * @static
                         * @param {google.cloud.notebooks.v1.IListRuntimesResponse} message ListRuntimesResponse message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        ListRuntimesResponse.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a ListRuntimesResponse message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.notebooks.v1.ListRuntimesResponse
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.notebooks.v1.ListRuntimesResponse} ListRuntimesResponse
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        ListRuntimesResponse.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.notebooks.v1.ListRuntimesResponse();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        if (!(message.runtimes && message.runtimes.length))
                                            message.runtimes = [];
                                        message.runtimes.push($root.google.cloud.notebooks.v1.Runtime.decode(reader, reader.uint32()));
                                        break;
                                    }
                                case 2: {
                                        message.nextPageToken = reader.string();
                                        break;
                                    }
                                case 3: {
                                        if (!(message.unreachable && message.unreachable.length))
                                            message.unreachable = [];
                                        message.unreachable.push(reader.string());
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a ListRuntimesResponse message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.notebooks.v1.ListRuntimesResponse
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.notebooks.v1.ListRuntimesResponse} ListRuntimesResponse
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        ListRuntimesResponse.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a ListRuntimesResponse message.
                         * @function verify
                         * @memberof google.cloud.notebooks.v1.ListRuntimesResponse
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        ListRuntimesResponse.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.runtimes != null && message.hasOwnProperty("runtimes")) {
                                if (!Array.isArray(message.runtimes))
                                    return "runtimes: array expected";
                                for (var i = 0; i < message.runtimes.length; ++i) {
                                    var error = $root.google.cloud.notebooks.v1.Runtime.verify(message.runtimes[i]);
                                    if (error)
                                        return "runtimes." + error;
                                }
                            }
                            if (message.nextPageToken != null && message.hasOwnProperty("nextPageToken"))
                                if (!$util.isString(message.nextPageToken))
                                    return "nextPageToken: string expected";
                            if (message.unreachable != null && message.hasOwnProperty("unreachable")) {
                                if (!Array.isArray(message.unreachable))
                                    return "unreachable: array expected";
                                for (var i = 0; i < message.unreachable.length; ++i)
                                    if (!$util.isString(message.unreachable[i]))
                                        return "unreachable: string[] expected";
                            }
                            return null;
                        };
    
                        /**
                         * Creates a ListRuntimesResponse message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.notebooks.v1.ListRuntimesResponse
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.notebooks.v1.ListRuntimesResponse} ListRuntimesResponse
                         */
                        ListRuntimesResponse.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.notebooks.v1.ListRuntimesResponse)
                                return object;
                            var message = new $root.google.cloud.notebooks.v1.ListRuntimesResponse();
                            if (object.runtimes) {
                                if (!Array.isArray(object.runtimes))
                                    throw TypeError(".google.cloud.notebooks.v1.ListRuntimesResponse.runtimes: array expected");
                                message.runtimes = [];
                                for (var i = 0; i < object.runtimes.length; ++i) {
                                    if (typeof object.runtimes[i] !== "object")
                                        throw TypeError(".google.cloud.notebooks.v1.ListRuntimesResponse.runtimes: object expected");
                                    message.runtimes[i] = $root.google.cloud.notebooks.v1.Runtime.fromObject(object.runtimes[i]);
                                }
                            }
                            if (object.nextPageToken != null)
                                message.nextPageToken = String(object.nextPageToken);
                            if (object.unreachable) {
                                if (!Array.isArray(object.unreachable))
                                    throw TypeError(".google.cloud.notebooks.v1.ListRuntimesResponse.unreachable: array expected");
                                message.unreachable = [];
                                for (var i = 0; i < object.unreachable.length; ++i)
                                    message.unreachable[i] = String(object.unreachable[i]);
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a ListRuntimesResponse message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.notebooks.v1.ListRuntimesResponse
                         * @static
                         * @param {google.cloud.notebooks.v1.ListRuntimesResponse} message ListRuntimesResponse
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        ListRuntimesResponse.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.arrays || options.defaults) {
                                object.runtimes = [];
                                object.unreachable = [];
                            }
                            if (options.defaults)
                                object.nextPageToken = "";
                            if (message.runtimes && message.runtimes.length) {
                                object.runtimes = [];
                                for (var j = 0; j < message.runtimes.length; ++j)
                                    object.runtimes[j] = $root.google.cloud.notebooks.v1.Runtime.toObject(message.runtimes[j], options);
                            }
                            if (message.nextPageToken != null && message.hasOwnProperty("nextPageToken"))
                                object.nextPageToken = message.nextPageToken;
                            if (message.unreachable && message.unreachable.length) {
                                object.unreachable = [];
                                for (var j = 0; j < message.unreachable.length; ++j)
                                    object.unreachable[j] = message.unreachable[j];
                            }
                            return object;
                        };
    
                        /**
                         * Converts this ListRuntimesResponse to JSON.
                         * @function toJSON
                         * @memberof google.cloud.notebooks.v1.ListRuntimesResponse
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        ListRuntimesResponse.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for ListRuntimesResponse
                         * @function getTypeUrl
                         * @memberof google.cloud.notebooks.v1.ListRuntimesResponse
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        ListRuntimesResponse.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.notebooks.v1.ListRuntimesResponse";
                        };
    
                        return ListRuntimesResponse;
                    })();
    
                    v1.GetRuntimeRequest = (function() {
    
                        /**
                         * Properties of a GetRuntimeRequest.
                         * @memberof google.cloud.notebooks.v1
                         * @interface IGetRuntimeRequest
                         * @property {string|null} [name] GetRuntimeRequest name
                         */
    
                        /**
                         * Constructs a new GetRuntimeRequest.
                         * @memberof google.cloud.notebooks.v1
                         * @classdesc Represents a GetRuntimeRequest.
                         * @implements IGetRuntimeRequest
                         * @constructor
                         * @param {google.cloud.notebooks.v1.IGetRuntimeRequest=} [properties] Properties to set
                         */
                        function GetRuntimeRequest(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * GetRuntimeRequest name.
                         * @member {string} name
                         * @memberof google.cloud.notebooks.v1.GetRuntimeRequest
                         * @instance
                         */
                        GetRuntimeRequest.prototype.name = "";
    
                        /**
                         * Creates a new GetRuntimeRequest instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.notebooks.v1.GetRuntimeRequest
                         * @static
                         * @param {google.cloud.notebooks.v1.IGetRuntimeRequest=} [properties] Properties to set
                         * @returns {google.cloud.notebooks.v1.GetRuntimeRequest} GetRuntimeRequest instance
                         */
                        GetRuntimeRequest.create = function create(properties) {
                            return new GetRuntimeRequest(properties);
                        };
    
                        /**
                         * Encodes the specified GetRuntimeRequest message. Does not implicitly {@link google.cloud.notebooks.v1.GetRuntimeRequest.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.notebooks.v1.GetRuntimeRequest
                         * @static
                         * @param {google.cloud.notebooks.v1.IGetRuntimeRequest} message GetRuntimeRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        GetRuntimeRequest.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified GetRuntimeRequest message, length delimited. Does not implicitly {@link google.cloud.notebooks.v1.GetRuntimeRequest.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.notebooks.v1.GetRuntimeRequest
                         * @static
                         * @param {google.cloud.notebooks.v1.IGetRuntimeRequest} message GetRuntimeRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        GetRuntimeRequest.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a GetRuntimeRequest message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.notebooks.v1.GetRuntimeRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.notebooks.v1.GetRuntimeRequest} GetRuntimeRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        GetRuntimeRequest.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.notebooks.v1.GetRuntimeRequest();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.name = reader.string();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a GetRuntimeRequest message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.notebooks.v1.GetRuntimeRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.notebooks.v1.GetRuntimeRequest} GetRuntimeRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        GetRuntimeRequest.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a GetRuntimeRequest message.
                         * @function verify
                         * @memberof google.cloud.notebooks.v1.GetRuntimeRequest
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        GetRuntimeRequest.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.name != null && message.hasOwnProperty("name"))
                                if (!$util.isString(message.name))
                                    return "name: string expected";
                            return null;
                        };
    
                        /**
                         * Creates a GetRuntimeRequest message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.notebooks.v1.GetRuntimeRequest
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.notebooks.v1.GetRuntimeRequest} GetRuntimeRequest
                         */
                        GetRuntimeRequest.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.notebooks.v1.GetRuntimeRequest)
                                return object;
                            var message = new $root.google.cloud.notebooks.v1.GetRuntimeRequest();
                            if (object.name != null)
                                message.name = String(object.name);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a GetRuntimeRequest message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.notebooks.v1.GetRuntimeRequest
                         * @static
                         * @param {google.cloud.notebooks.v1.GetRuntimeRequest} message GetRuntimeRequest
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        GetRuntimeRequest.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults)
                                object.name = "";
                            if (message.name != null && message.hasOwnProperty("name"))
                                object.name = message.name;
                            return object;
                        };
    
                        /**
                         * Converts this GetRuntimeRequest to JSON.
                         * @function toJSON
                         * @memberof google.cloud.notebooks.v1.GetRuntimeRequest
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        GetRuntimeRequest.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for GetRuntimeRequest
                         * @function getTypeUrl
                         * @memberof google.cloud.notebooks.v1.GetRuntimeRequest
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        GetRuntimeRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.notebooks.v1.GetRuntimeRequest";
                        };
    
                        return GetRuntimeRequest;
                    })();
    
                    v1.CreateRuntimeRequest = (function() {
    
                        /**
                         * Properties of a CreateRuntimeRequest.
                         * @memberof google.cloud.notebooks.v1
                         * @interface ICreateRuntimeRequest
                         * @property {string|null} [parent] CreateRuntimeRequest parent
                         * @property {string|null} [runtimeId] CreateRuntimeRequest runtimeId
                         * @property {google.cloud.notebooks.v1.IRuntime|null} [runtime] CreateRuntimeRequest runtime
                         * @property {string|null} [requestId] CreateRuntimeRequest requestId
                         */
    
                        /**
                         * Constructs a new CreateRuntimeRequest.
                         * @memberof google.cloud.notebooks.v1
                         * @classdesc Represents a CreateRuntimeRequest.
                         * @implements ICreateRuntimeRequest
                         * @constructor
                         * @param {google.cloud.notebooks.v1.ICreateRuntimeRequest=} [properties] Properties to set
                         */
                        function CreateRuntimeRequest(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * CreateRuntimeRequest parent.
                         * @member {string} parent
                         * @memberof google.cloud.notebooks.v1.CreateRuntimeRequest
                         * @instance
                         */
                        CreateRuntimeRequest.prototype.parent = "";
    
                        /**
                         * CreateRuntimeRequest runtimeId.
                         * @member {string} runtimeId
                         * @memberof google.cloud.notebooks.v1.CreateRuntimeRequest
                         * @instance
                         */
                        CreateRuntimeRequest.prototype.runtimeId = "";
    
                        /**
                         * CreateRuntimeRequest runtime.
                         * @member {google.cloud.notebooks.v1.IRuntime|null|undefined} runtime
                         * @memberof google.cloud.notebooks.v1.CreateRuntimeRequest
                         * @instance
                         */
                        CreateRuntimeRequest.prototype.runtime = null;
    
                        /**
                         * CreateRuntimeRequest requestId.
                         * @member {string} requestId
                         * @memberof google.cloud.notebooks.v1.CreateRuntimeRequest
                         * @instance
                         */
                        CreateRuntimeRequest.prototype.requestId = "";
    
                        /**
                         * Creates a new CreateRuntimeRequest instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.notebooks.v1.CreateRuntimeRequest
                         * @static
                         * @param {google.cloud.notebooks.v1.ICreateRuntimeRequest=} [properties] Properties to set
                         * @returns {google.cloud.notebooks.v1.CreateRuntimeRequest} CreateRuntimeRequest instance
                         */
                        CreateRuntimeRequest.create = function create(properties) {
                            return new CreateRuntimeRequest(properties);
                        };
    
                        /**
                         * Encodes the specified CreateRuntimeRequest message. Does not implicitly {@link google.cloud.notebooks.v1.CreateRuntimeRequest.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.notebooks.v1.CreateRuntimeRequest
                         * @static
                         * @param {google.cloud.notebooks.v1.ICreateRuntimeRequest} message CreateRuntimeRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        CreateRuntimeRequest.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.parent != null && Object.hasOwnProperty.call(message, "parent"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.parent);
                            if (message.runtimeId != null && Object.hasOwnProperty.call(message, "runtimeId"))
                                writer.uint32(/* id 2, wireType 2 =*/18).string(message.runtimeId);
                            if (message.runtime != null && Object.hasOwnProperty.call(message, "runtime"))
                                $root.google.cloud.notebooks.v1.Runtime.encode(message.runtime, writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();
                            if (message.requestId != null && Object.hasOwnProperty.call(message, "requestId"))
                                writer.uint32(/* id 4, wireType 2 =*/34).string(message.requestId);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified CreateRuntimeRequest message, length delimited. Does not implicitly {@link google.cloud.notebooks.v1.CreateRuntimeRequest.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.notebooks.v1.CreateRuntimeRequest
                         * @static
                         * @param {google.cloud.notebooks.v1.ICreateRuntimeRequest} message CreateRuntimeRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        CreateRuntimeRequest.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a CreateRuntimeRequest message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.notebooks.v1.CreateRuntimeRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.notebooks.v1.CreateRuntimeRequest} CreateRuntimeRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        CreateRuntimeRequest.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.notebooks.v1.CreateRuntimeRequest();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.parent = reader.string();
                                        break;
                                    }
                                case 2: {
                                        message.runtimeId = reader.string();
                                        break;
                                    }
                                case 3: {
                                        message.runtime = $root.google.cloud.notebooks.v1.Runtime.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 4: {
                                        message.requestId = reader.string();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a CreateRuntimeRequest message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.notebooks.v1.CreateRuntimeRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.notebooks.v1.CreateRuntimeRequest} CreateRuntimeRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        CreateRuntimeRequest.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a CreateRuntimeRequest message.
                         * @function verify
                         * @memberof google.cloud.notebooks.v1.CreateRuntimeRequest
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        CreateRuntimeRequest.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.parent != null && message.hasOwnProperty("parent"))
                                if (!$util.isString(message.parent))
                                    return "parent: string expected";
                            if (message.runtimeId != null && message.hasOwnProperty("runtimeId"))
                                if (!$util.isString(message.runtimeId))
                                    return "runtimeId: string expected";
                            if (message.runtime != null && message.hasOwnProperty("runtime")) {
                                var error = $root.google.cloud.notebooks.v1.Runtime.verify(message.runtime);
                                if (error)
                                    return "runtime." + error;
                            }
                            if (message.requestId != null && message.hasOwnProperty("requestId"))
                                if (!$util.isString(message.requestId))
                                    return "requestId: string expected";
                            return null;
                        };
    
                        /**
                         * Creates a CreateRuntimeRequest message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.notebooks.v1.CreateRuntimeRequest
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.notebooks.v1.CreateRuntimeRequest} CreateRuntimeRequest
                         */
                        CreateRuntimeRequest.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.notebooks.v1.CreateRuntimeRequest)
                                return object;
                            var message = new $root.google.cloud.notebooks.v1.CreateRuntimeRequest();
                            if (object.parent != null)
                                message.parent = String(object.parent);
                            if (object.runtimeId != null)
                                message.runtimeId = String(object.runtimeId);
                            if (object.runtime != null) {
                                if (typeof object.runtime !== "object")
                                    throw TypeError(".google.cloud.notebooks.v1.CreateRuntimeRequest.runtime: object expected");
                                message.runtime = $root.google.cloud.notebooks.v1.Runtime.fromObject(object.runtime);
                            }
                            if (object.requestId != null)
                                message.requestId = String(object.requestId);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a CreateRuntimeRequest message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.notebooks.v1.CreateRuntimeRequest
                         * @static
                         * @param {google.cloud.notebooks.v1.CreateRuntimeRequest} message CreateRuntimeRequest
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        CreateRuntimeRequest.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.parent = "";
                                object.runtimeId = "";
                                object.runtime = null;
                                object.requestId = "";
                            }
                            if (message.parent != null && message.hasOwnProperty("parent"))
                                object.parent = message.parent;
                            if (message.runtimeId != null && message.hasOwnProperty("runtimeId"))
                                object.runtimeId = message.runtimeId;
                            if (message.runtime != null && message.hasOwnProperty("runtime"))
                                object.runtime = $root.google.cloud.notebooks.v1.Runtime.toObject(message.runtime, options);
                            if (message.requestId != null && message.hasOwnProperty("requestId"))
                                object.requestId = message.requestId;
                            return object;
                        };
    
                        /**
                         * Converts this CreateRuntimeRequest to JSON.
                         * @function toJSON
                         * @memberof google.cloud.notebooks.v1.CreateRuntimeRequest
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        CreateRuntimeRequest.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for CreateRuntimeRequest
                         * @function getTypeUrl
                         * @memberof google.cloud.notebooks.v1.CreateRuntimeRequest
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        CreateRuntimeRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.notebooks.v1.CreateRuntimeRequest";
                        };
    
                        return CreateRuntimeRequest;
                    })();
    
                    v1.DeleteRuntimeRequest = (function() {
    
                        /**
                         * Properties of a DeleteRuntimeRequest.
                         * @memberof google.cloud.notebooks.v1
                         * @interface IDeleteRuntimeRequest
                         * @property {string|null} [name] DeleteRuntimeRequest name
                         * @property {string|null} [requestId] DeleteRuntimeRequest requestId
                         */
    
                        /**
                         * Constructs a new DeleteRuntimeRequest.
                         * @memberof google.cloud.notebooks.v1
                         * @classdesc Represents a DeleteRuntimeRequest.
                         * @implements IDeleteRuntimeRequest
                         * @constructor
                         * @param {google.cloud.notebooks.v1.IDeleteRuntimeRequest=} [properties] Properties to set
                         */
                        function DeleteRuntimeRequest(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * DeleteRuntimeRequest name.
                         * @member {string} name
                         * @memberof google.cloud.notebooks.v1.DeleteRuntimeRequest
                         * @instance
                         */
                        DeleteRuntimeRequest.prototype.name = "";
    
                        /**
                         * DeleteRuntimeRequest requestId.
                         * @member {string} requestId
                         * @memberof google.cloud.notebooks.v1.DeleteRuntimeRequest
                         * @instance
                         */
                        DeleteRuntimeRequest.prototype.requestId = "";
    
                        /**
                         * Creates a new DeleteRuntimeRequest instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.notebooks.v1.DeleteRuntimeRequest
                         * @static
                         * @param {google.cloud.notebooks.v1.IDeleteRuntimeRequest=} [properties] Properties to set
                         * @returns {google.cloud.notebooks.v1.DeleteRuntimeRequest} DeleteRuntimeRequest instance
                         */
                        DeleteRuntimeRequest.create = function create(properties) {
                            return new DeleteRuntimeRequest(properties);
                        };
    
                        /**
                         * Encodes the specified DeleteRuntimeRequest message. Does not implicitly {@link google.cloud.notebooks.v1.DeleteRuntimeRequest.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.notebooks.v1.DeleteRuntimeRequest
                         * @static
                         * @param {google.cloud.notebooks.v1.IDeleteRuntimeRequest} message DeleteRuntimeRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        DeleteRuntimeRequest.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                            if (message.requestId != null && Object.hasOwnProperty.call(message, "requestId"))
                                writer.uint32(/* id 2, wireType 2 =*/18).string(message.requestId);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified DeleteRuntimeRequest message, length delimited. Does not implicitly {@link google.cloud.notebooks.v1.DeleteRuntimeRequest.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.notebooks.v1.DeleteRuntimeRequest
                         * @static
                         * @param {google.cloud.notebooks.v1.IDeleteRuntimeRequest} message DeleteRuntimeRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        DeleteRuntimeRequest.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a DeleteRuntimeRequest message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.notebooks.v1.DeleteRuntimeRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.notebooks.v1.DeleteRuntimeRequest} DeleteRuntimeRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        DeleteRuntimeRequest.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.notebooks.v1.DeleteRuntimeRequest();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.name = reader.string();
                                        break;
                                    }
                                case 2: {
                                        message.requestId = reader.string();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a DeleteRuntimeRequest message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.notebooks.v1.DeleteRuntimeRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.notebooks.v1.DeleteRuntimeRequest} DeleteRuntimeRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        DeleteRuntimeRequest.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a DeleteRuntimeRequest message.
                         * @function verify
                         * @memberof google.cloud.notebooks.v1.DeleteRuntimeRequest
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        DeleteRuntimeRequest.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.name != null && message.hasOwnProperty("name"))
                                if (!$util.isString(message.name))
                                    return "name: string expected";
                            if (message.requestId != null && message.hasOwnProperty("requestId"))
                                if (!$util.isString(message.requestId))
                                    return "requestId: string expected";
                            return null;
                        };
    
                        /**
                         * Creates a DeleteRuntimeRequest message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.notebooks.v1.DeleteRuntimeRequest
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.notebooks.v1.DeleteRuntimeRequest} DeleteRuntimeRequest
                         */
                        DeleteRuntimeRequest.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.notebooks.v1.DeleteRuntimeRequest)
                                return object;
                            var message = new $root.google.cloud.notebooks.v1.DeleteRuntimeRequest();
                            if (object.name != null)
                                message.name = String(object.name);
                            if (object.requestId != null)
                                message.requestId = String(object.requestId);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a DeleteRuntimeRequest message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.notebooks.v1.DeleteRuntimeRequest
                         * @static
                         * @param {google.cloud.notebooks.v1.DeleteRuntimeRequest} message DeleteRuntimeRequest
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        DeleteRuntimeRequest.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.name = "";
                                object.requestId = "";
                            }
                            if (message.name != null && message.hasOwnProperty("name"))
                                object.name = message.name;
                            if (message.requestId != null && message.hasOwnProperty("requestId"))
                                object.requestId = message.requestId;
                            return object;
                        };
    
                        /**
                         * Converts this DeleteRuntimeRequest to JSON.
                         * @function toJSON
                         * @memberof google.cloud.notebooks.v1.DeleteRuntimeRequest
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        DeleteRuntimeRequest.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for DeleteRuntimeRequest
                         * @function getTypeUrl
                         * @memberof google.cloud.notebooks.v1.DeleteRuntimeRequest
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        DeleteRuntimeRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.notebooks.v1.DeleteRuntimeRequest";
                        };
    
                        return DeleteRuntimeRequest;
                    })();
    
                    v1.StartRuntimeRequest = (function() {
    
                        /**
                         * Properties of a StartRuntimeRequest.
                         * @memberof google.cloud.notebooks.v1
                         * @interface IStartRuntimeRequest
                         * @property {string|null} [name] StartRuntimeRequest name
                         * @property {string|null} [requestId] StartRuntimeRequest requestId
                         */
    
                        /**
                         * Constructs a new StartRuntimeRequest.
                         * @memberof google.cloud.notebooks.v1
                         * @classdesc Represents a StartRuntimeRequest.
                         * @implements IStartRuntimeRequest
                         * @constructor
                         * @param {google.cloud.notebooks.v1.IStartRuntimeRequest=} [properties] Properties to set
                         */
                        function StartRuntimeRequest(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * StartRuntimeRequest name.
                         * @member {string} name
                         * @memberof google.cloud.notebooks.v1.StartRuntimeRequest
                         * @instance
                         */
                        StartRuntimeRequest.prototype.name = "";
    
                        /**
                         * StartRuntimeRequest requestId.
                         * @member {string} requestId
                         * @memberof google.cloud.notebooks.v1.StartRuntimeRequest
                         * @instance
                         */
                        StartRuntimeRequest.prototype.requestId = "";
    
                        /**
                         * Creates a new StartRuntimeRequest instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.notebooks.v1.StartRuntimeRequest
                         * @static
                         * @param {google.cloud.notebooks.v1.IStartRuntimeRequest=} [properties] Properties to set
                         * @returns {google.cloud.notebooks.v1.StartRuntimeRequest} StartRuntimeRequest instance
                         */
                        StartRuntimeRequest.create = function create(properties) {
                            return new StartRuntimeRequest(properties);
                        };
    
                        /**
                         * Encodes the specified StartRuntimeRequest message. Does not implicitly {@link google.cloud.notebooks.v1.StartRuntimeRequest.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.notebooks.v1.StartRuntimeRequest
                         * @static
                         * @param {google.cloud.notebooks.v1.IStartRuntimeRequest} message StartRuntimeRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        StartRuntimeRequest.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                            if (message.requestId != null && Object.hasOwnProperty.call(message, "requestId"))
                                writer.uint32(/* id 2, wireType 2 =*/18).string(message.requestId);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified StartRuntimeRequest message, length delimited. Does not implicitly {@link google.cloud.notebooks.v1.StartRuntimeRequest.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.notebooks.v1.StartRuntimeRequest
                         * @static
                         * @param {google.cloud.notebooks.v1.IStartRuntimeRequest} message StartRuntimeRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        StartRuntimeRequest.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a StartRuntimeRequest message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.notebooks.v1.StartRuntimeRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.notebooks.v1.StartRuntimeRequest} StartRuntimeRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        StartRuntimeRequest.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.notebooks.v1.StartRuntimeRequest();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.name = reader.string();
                                        break;
                                    }
                                case 2: {
                                        message.requestId = reader.string();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a StartRuntimeRequest message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.notebooks.v1.StartRuntimeRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.notebooks.v1.StartRuntimeRequest} StartRuntimeRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        StartRuntimeRequest.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a StartRuntimeRequest message.
                         * @function verify
                         * @memberof google.cloud.notebooks.v1.StartRuntimeRequest
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        StartRuntimeRequest.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.name != null && message.hasOwnProperty("name"))
                                if (!$util.isString(message.name))
                                    return "name: string expected";
                            if (message.requestId != null && message.hasOwnProperty("requestId"))
                                if (!$util.isString(message.requestId))
                                    return "requestId: string expected";
                            return null;
                        };
    
                        /**
                         * Creates a StartRuntimeRequest message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.notebooks.v1.StartRuntimeRequest
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.notebooks.v1.StartRuntimeRequest} StartRuntimeRequest
                         */
                        StartRuntimeRequest.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.notebooks.v1.StartRuntimeRequest)
                                return object;
                            var message = new $root.google.cloud.notebooks.v1.StartRuntimeRequest();
                            if (object.name != null)
                                message.name = String(object.name);
                            if (object.requestId != null)
                                message.requestId = String(object.requestId);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a StartRuntimeRequest message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.notebooks.v1.StartRuntimeRequest
                         * @static
                         * @param {google.cloud.notebooks.v1.StartRuntimeRequest} message StartRuntimeRequest
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        StartRuntimeRequest.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.name = "";
                                object.requestId = "";
                            }
                            if (message.name != null && message.hasOwnProperty("name"))
                                object.name = message.name;
                            if (message.requestId != null && message.hasOwnProperty("requestId"))
                                object.requestId = message.requestId;
                            return object;
                        };
    
                        /**
                         * Converts this StartRuntimeRequest to JSON.
                         * @function toJSON
                         * @memberof google.cloud.notebooks.v1.StartRuntimeRequest
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        StartRuntimeRequest.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for StartRuntimeRequest
                         * @function getTypeUrl
                         * @memberof google.cloud.notebooks.v1.StartRuntimeRequest
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        StartRuntimeRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.notebooks.v1.StartRuntimeRequest";
                        };
    
                        return StartRuntimeRequest;
                    })();
    
                    v1.StopRuntimeRequest = (function() {
    
                        /**
                         * Properties of a StopRuntimeRequest.
                         * @memberof google.cloud.notebooks.v1
                         * @interface IStopRuntimeRequest
                         * @property {string|null} [name] StopRuntimeRequest name
                         * @property {string|null} [requestId] StopRuntimeRequest requestId
                         */
    
                        /**
                         * Constructs a new StopRuntimeRequest.
                         * @memberof google.cloud.notebooks.v1
                         * @classdesc Represents a StopRuntimeRequest.
                         * @implements IStopRuntimeRequest
                         * @constructor
                         * @param {google.cloud.notebooks.v1.IStopRuntimeRequest=} [properties] Properties to set
                         */
                        function StopRuntimeRequest(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * StopRuntimeRequest name.
                         * @member {string} name
                         * @memberof google.cloud.notebooks.v1.StopRuntimeRequest
                         * @instance
                         */
                        StopRuntimeRequest.prototype.name = "";
    
                        /**
                         * StopRuntimeRequest requestId.
                         * @member {string} requestId
                         * @memberof google.cloud.notebooks.v1.StopRuntimeRequest
                         * @instance
                         */
                        StopRuntimeRequest.prototype.requestId = "";
    
                        /**
                         * Creates a new StopRuntimeRequest instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.notebooks.v1.StopRuntimeRequest
                         * @static
                         * @param {google.cloud.notebooks.v1.IStopRuntimeRequest=} [properties] Properties to set
                         * @returns {google.cloud.notebooks.v1.StopRuntimeRequest} StopRuntimeRequest instance
                         */
                        StopRuntimeRequest.create = function create(properties) {
                            return new StopRuntimeRequest(properties);
                        };
    
                        /**
                         * Encodes the specified StopRuntimeRequest message. Does not implicitly {@link google.cloud.notebooks.v1.StopRuntimeRequest.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.notebooks.v1.StopRuntimeRequest
                         * @static
                         * @param {google.cloud.notebooks.v1.IStopRuntimeRequest} message StopRuntimeRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        StopRuntimeRequest.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                            if (message.requestId != null && Object.hasOwnProperty.call(message, "requestId"))
                                writer.uint32(/* id 2, wireType 2 =*/18).string(message.requestId);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified StopRuntimeRequest message, length delimited. Does not implicitly {@link google.cloud.notebooks.v1.StopRuntimeRequest.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.notebooks.v1.StopRuntimeRequest
                         * @static
                         * @param {google.cloud.notebooks.v1.IStopRuntimeRequest} message StopRuntimeRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        StopRuntimeRequest.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a StopRuntimeRequest message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.notebooks.v1.StopRuntimeRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.notebooks.v1.StopRuntimeRequest} StopRuntimeRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        StopRuntimeRequest.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.notebooks.v1.StopRuntimeRequest();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.name = reader.string();
                                        break;
                                    }
                                case 2: {
                                        message.requestId = reader.string();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a StopRuntimeRequest message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.notebooks.v1.StopRuntimeRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.notebooks.v1.StopRuntimeRequest} StopRuntimeRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        StopRuntimeRequest.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a StopRuntimeRequest message.
                         * @function verify
                         * @memberof google.cloud.notebooks.v1.StopRuntimeRequest
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        StopRuntimeRequest.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.name != null && message.hasOwnProperty("name"))
                                if (!$util.isString(message.name))
                                    return "name: string expected";
                            if (message.requestId != null && message.hasOwnProperty("requestId"))
                                if (!$util.isString(message.requestId))
                                    return "requestId: string expected";
                            return null;
                        };
    
                        /**
                         * Creates a StopRuntimeRequest message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.notebooks.v1.StopRuntimeRequest
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.notebooks.v1.StopRuntimeRequest} StopRuntimeRequest
                         */
                        StopRuntimeRequest.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.notebooks.v1.StopRuntimeRequest)
                                return object;
                            var message = new $root.google.cloud.notebooks.v1.StopRuntimeRequest();
                            if (object.name != null)
                                message.name = String(object.name);
                            if (object.requestId != null)
                                message.requestId = String(object.requestId);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a StopRuntimeRequest message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.notebooks.v1.StopRuntimeRequest
                         * @static
                         * @param {google.cloud.notebooks.v1.StopRuntimeRequest} message StopRuntimeRequest
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        StopRuntimeRequest.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.name = "";
                                object.requestId = "";
                            }
                            if (message.name != null && message.hasOwnProperty("name"))
                                object.name = message.name;
                            if (message.requestId != null && message.hasOwnProperty("requestId"))
                                object.requestId = message.requestId;
                            return object;
                        };
    
                        /**
                         * Converts this StopRuntimeRequest to JSON.
                         * @function toJSON
                         * @memberof google.cloud.notebooks.v1.StopRuntimeRequest
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        StopRuntimeRequest.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for StopRuntimeRequest
                         * @function getTypeUrl
                         * @memberof google.cloud.notebooks.v1.StopRuntimeRequest
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        StopRuntimeRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.notebooks.v1.StopRuntimeRequest";
                        };
    
                        return StopRuntimeRequest;
                    })();
    
                    v1.SwitchRuntimeRequest = (function() {
    
                        /**
                         * Properties of a SwitchRuntimeRequest.
                         * @memberof google.cloud.notebooks.v1
                         * @interface ISwitchRuntimeRequest
                         * @property {string|null} [name] SwitchRuntimeRequest name
                         * @property {string|null} [machineType] SwitchRuntimeRequest machineType
                         * @property {google.cloud.notebooks.v1.IRuntimeAcceleratorConfig|null} [acceleratorConfig] SwitchRuntimeRequest acceleratorConfig
                         * @property {string|null} [requestId] SwitchRuntimeRequest requestId
                         */
    
                        /**
                         * Constructs a new SwitchRuntimeRequest.
                         * @memberof google.cloud.notebooks.v1
                         * @classdesc Represents a SwitchRuntimeRequest.
                         * @implements ISwitchRuntimeRequest
                         * @constructor
                         * @param {google.cloud.notebooks.v1.ISwitchRuntimeRequest=} [properties] Properties to set
                         */
                        function SwitchRuntimeRequest(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * SwitchRuntimeRequest name.
                         * @member {string} name
                         * @memberof google.cloud.notebooks.v1.SwitchRuntimeRequest
                         * @instance
                         */
                        SwitchRuntimeRequest.prototype.name = "";
    
                        /**
                         * SwitchRuntimeRequest machineType.
                         * @member {string} machineType
                         * @memberof google.cloud.notebooks.v1.SwitchRuntimeRequest
                         * @instance
                         */
                        SwitchRuntimeRequest.prototype.machineType = "";
    
                        /**
                         * SwitchRuntimeRequest acceleratorConfig.
                         * @member {google.cloud.notebooks.v1.IRuntimeAcceleratorConfig|null|undefined} acceleratorConfig
                         * @memberof google.cloud.notebooks.v1.SwitchRuntimeRequest
                         * @instance
                         */
                        SwitchRuntimeRequest.prototype.acceleratorConfig = null;
    
                        /**
                         * SwitchRuntimeRequest requestId.
                         * @member {string} requestId
                         * @memberof google.cloud.notebooks.v1.SwitchRuntimeRequest
                         * @instance
                         */
                        SwitchRuntimeRequest.prototype.requestId = "";
    
                        /**
                         * Creates a new SwitchRuntimeRequest instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.notebooks.v1.SwitchRuntimeRequest
                         * @static
                         * @param {google.cloud.notebooks.v1.ISwitchRuntimeRequest=} [properties] Properties to set
                         * @returns {google.cloud.notebooks.v1.SwitchRuntimeRequest} SwitchRuntimeRequest instance
                         */
                        SwitchRuntimeRequest.create = function create(properties) {
                            return new SwitchRuntimeRequest(properties);
                        };
    
                        /**
                         * Encodes the specified SwitchRuntimeRequest message. Does not implicitly {@link google.cloud.notebooks.v1.SwitchRuntimeRequest.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.notebooks.v1.SwitchRuntimeRequest
                         * @static
                         * @param {google.cloud.notebooks.v1.ISwitchRuntimeRequest} message SwitchRuntimeRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        SwitchRuntimeRequest.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                            if (message.machineType != null && Object.hasOwnProperty.call(message, "machineType"))
                                writer.uint32(/* id 2, wireType 2 =*/18).string(message.machineType);
                            if (message.acceleratorConfig != null && Object.hasOwnProperty.call(message, "acceleratorConfig"))
                                $root.google.cloud.notebooks.v1.RuntimeAcceleratorConfig.encode(message.acceleratorConfig, writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();
                            if (message.requestId != null && Object.hasOwnProperty.call(message, "requestId"))
                                writer.uint32(/* id 4, wireType 2 =*/34).string(message.requestId);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified SwitchRuntimeRequest message, length delimited. Does not implicitly {@link google.cloud.notebooks.v1.SwitchRuntimeRequest.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.notebooks.v1.SwitchRuntimeRequest
                         * @static
                         * @param {google.cloud.notebooks.v1.ISwitchRuntimeRequest} message SwitchRuntimeRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        SwitchRuntimeRequest.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a SwitchRuntimeRequest message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.notebooks.v1.SwitchRuntimeRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.notebooks.v1.SwitchRuntimeRequest} SwitchRuntimeRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        SwitchRuntimeRequest.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.notebooks.v1.SwitchRuntimeRequest();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.name = reader.string();
                                        break;
                                    }
                                case 2: {
                                        message.machineType = reader.string();
                                        break;
                                    }
                                case 3: {
                                        message.acceleratorConfig = $root.google.cloud.notebooks.v1.RuntimeAcceleratorConfig.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 4: {
                                        message.requestId = reader.string();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a SwitchRuntimeRequest message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.notebooks.v1.SwitchRuntimeRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.notebooks.v1.SwitchRuntimeRequest} SwitchRuntimeRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        SwitchRuntimeRequest.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a SwitchRuntimeRequest message.
                         * @function verify
                         * @memberof google.cloud.notebooks.v1.SwitchRuntimeRequest
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        SwitchRuntimeRequest.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.name != null && message.hasOwnProperty("name"))
                                if (!$util.isString(message.name))
                                    return "name: string expected";
                            if (message.machineType != null && message.hasOwnProperty("machineType"))
                                if (!$util.isString(message.machineType))
                                    return "machineType: string expected";
                            if (message.acceleratorConfig != null && message.hasOwnProperty("acceleratorConfig")) {
                                var error = $root.google.cloud.notebooks.v1.RuntimeAcceleratorConfig.verify(message.acceleratorConfig);
                                if (error)
                                    return "acceleratorConfig." + error;
                            }
                            if (message.requestId != null && message.hasOwnProperty("requestId"))
                                if (!$util.isString(message.requestId))
                                    return "requestId: string expected";
                            return null;
                        };
    
                        /**
                         * Creates a SwitchRuntimeRequest message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.notebooks.v1.SwitchRuntimeRequest
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.notebooks.v1.SwitchRuntimeRequest} SwitchRuntimeRequest
                         */
                        SwitchRuntimeRequest.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.notebooks.v1.SwitchRuntimeRequest)
                                return object;
                            var message = new $root.google.cloud.notebooks.v1.SwitchRuntimeRequest();
                            if (object.name != null)
                                message.name = String(object.name);
                            if (object.machineType != null)
                                message.machineType = String(object.machineType);
                            if (object.acceleratorConfig != null) {
                                if (typeof object.acceleratorConfig !== "object")
                                    throw TypeError(".google.cloud.notebooks.v1.SwitchRuntimeRequest.acceleratorConfig: object expected");
                                message.acceleratorConfig = $root.google.cloud.notebooks.v1.RuntimeAcceleratorConfig.fromObject(object.acceleratorConfig);
                            }
                            if (object.requestId != null)
                                message.requestId = String(object.requestId);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a SwitchRuntimeRequest message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.notebooks.v1.SwitchRuntimeRequest
                         * @static
                         * @param {google.cloud.notebooks.v1.SwitchRuntimeRequest} message SwitchRuntimeRequest
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        SwitchRuntimeRequest.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.name = "";
                                object.machineType = "";
                                object.acceleratorConfig = null;
                                object.requestId = "";
                            }
                            if (message.name != null && message.hasOwnProperty("name"))
                                object.name = message.name;
                            if (message.machineType != null && message.hasOwnProperty("machineType"))
                                object.machineType = message.machineType;
                            if (message.acceleratorConfig != null && message.hasOwnProperty("acceleratorConfig"))
                                object.acceleratorConfig = $root.google.cloud.notebooks.v1.RuntimeAcceleratorConfig.toObject(message.acceleratorConfig, options);
                            if (message.requestId != null && message.hasOwnProperty("requestId"))
                                object.requestId = message.requestId;
                            return object;
                        };
    
                        /**
                         * Converts this SwitchRuntimeRequest to JSON.
                         * @function toJSON
                         * @memberof google.cloud.notebooks.v1.SwitchRuntimeRequest
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        SwitchRuntimeRequest.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for SwitchRuntimeRequest
                         * @function getTypeUrl
                         * @memberof google.cloud.notebooks.v1.SwitchRuntimeRequest
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        SwitchRuntimeRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.notebooks.v1.SwitchRuntimeRequest";
                        };
    
                        return SwitchRuntimeRequest;
                    })();
    
                    v1.ResetRuntimeRequest = (function() {
    
                        /**
                         * Properties of a ResetRuntimeRequest.
                         * @memberof google.cloud.notebooks.v1
                         * @interface IResetRuntimeRequest
                         * @property {string|null} [name] ResetRuntimeRequest name
                         * @property {string|null} [requestId] ResetRuntimeRequest requestId
                         */
    
                        /**
                         * Constructs a new ResetRuntimeRequest.
                         * @memberof google.cloud.notebooks.v1
                         * @classdesc Represents a ResetRuntimeRequest.
                         * @implements IResetRuntimeRequest
                         * @constructor
                         * @param {google.cloud.notebooks.v1.IResetRuntimeRequest=} [properties] Properties to set
                         */
                        function ResetRuntimeRequest(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * ResetRuntimeRequest name.
                         * @member {string} name
                         * @memberof google.cloud.notebooks.v1.ResetRuntimeRequest
                         * @instance
                         */
                        ResetRuntimeRequest.prototype.name = "";
    
                        /**
                         * ResetRuntimeRequest requestId.
                         * @member {string} requestId
                         * @memberof google.cloud.notebooks.v1.ResetRuntimeRequest
                         * @instance
                         */
                        ResetRuntimeRequest.prototype.requestId = "";
    
                        /**
                         * Creates a new ResetRuntimeRequest instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.notebooks.v1.ResetRuntimeRequest
                         * @static
                         * @param {google.cloud.notebooks.v1.IResetRuntimeRequest=} [properties] Properties to set
                         * @returns {google.cloud.notebooks.v1.ResetRuntimeRequest} ResetRuntimeRequest instance
                         */
                        ResetRuntimeRequest.create = function create(properties) {
                            return new ResetRuntimeRequest(properties);
                        };
    
                        /**
                         * Encodes the specified ResetRuntimeRequest message. Does not implicitly {@link google.cloud.notebooks.v1.ResetRuntimeRequest.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.notebooks.v1.ResetRuntimeRequest
                         * @static
                         * @param {google.cloud.notebooks.v1.IResetRuntimeRequest} message ResetRuntimeRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        ResetRuntimeRequest.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                            if (message.requestId != null && Object.hasOwnProperty.call(message, "requestId"))
                                writer.uint32(/* id 2, wireType 2 =*/18).string(message.requestId);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified ResetRuntimeRequest message, length delimited. Does not implicitly {@link google.cloud.notebooks.v1.ResetRuntimeRequest.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.notebooks.v1.ResetRuntimeRequest
                         * @static
                         * @param {google.cloud.notebooks.v1.IResetRuntimeRequest} message ResetRuntimeRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        ResetRuntimeRequest.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a ResetRuntimeRequest message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.notebooks.v1.ResetRuntimeRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.notebooks.v1.ResetRuntimeRequest} ResetRuntimeRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        ResetRuntimeRequest.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.notebooks.v1.ResetRuntimeRequest();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.name = reader.string();
                                        break;
                                    }
                                case 2: {
                                        message.requestId = reader.string();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a ResetRuntimeRequest message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.notebooks.v1.ResetRuntimeRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.notebooks.v1.ResetRuntimeRequest} ResetRuntimeRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        ResetRuntimeRequest.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a ResetRuntimeRequest message.
                         * @function verify
                         * @memberof google.cloud.notebooks.v1.ResetRuntimeRequest
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        ResetRuntimeRequest.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.name != null && message.hasOwnProperty("name"))
                                if (!$util.isString(message.name))
                                    return "name: string expected";
                            if (message.requestId != null && message.hasOwnProperty("requestId"))
                                if (!$util.isString(message.requestId))
                                    return "requestId: string expected";
                            return null;
                        };
    
                        /**
                         * Creates a ResetRuntimeRequest message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.notebooks.v1.ResetRuntimeRequest
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.notebooks.v1.ResetRuntimeRequest} ResetRuntimeRequest
                         */
                        ResetRuntimeRequest.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.notebooks.v1.ResetRuntimeRequest)
                                return object;
                            var message = new $root.google.cloud.notebooks.v1.ResetRuntimeRequest();
                            if (object.name != null)
                                message.name = String(object.name);
                            if (object.requestId != null)
                                message.requestId = String(object.requestId);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a ResetRuntimeRequest message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.notebooks.v1.ResetRuntimeRequest
                         * @static
                         * @param {google.cloud.notebooks.v1.ResetRuntimeRequest} message ResetRuntimeRequest
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        ResetRuntimeRequest.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.name = "";
                                object.requestId = "";
                            }
                            if (message.name != null && message.hasOwnProperty("name"))
                                object.name = message.name;
                            if (message.requestId != null && message.hasOwnProperty("requestId"))
                                object.requestId = message.requestId;
                            return object;
                        };
    
                        /**
                         * Converts this ResetRuntimeRequest to JSON.
                         * @function toJSON
                         * @memberof google.cloud.notebooks.v1.ResetRuntimeRequest
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        ResetRuntimeRequest.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for ResetRuntimeRequest
                         * @function getTypeUrl
                         * @memberof google.cloud.notebooks.v1.ResetRuntimeRequest
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        ResetRuntimeRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.notebooks.v1.ResetRuntimeRequest";
                        };
    
                        return ResetRuntimeRequest;
                    })();
    
                    v1.UpgradeRuntimeRequest = (function() {
    
                        /**
                         * Properties of an UpgradeRuntimeRequest.
                         * @memberof google.cloud.notebooks.v1
                         * @interface IUpgradeRuntimeRequest
                         * @property {string|null} [name] UpgradeRuntimeRequest name
                         * @property {string|null} [requestId] UpgradeRuntimeRequest requestId
                         */
    
                        /**
                         * Constructs a new UpgradeRuntimeRequest.
                         * @memberof google.cloud.notebooks.v1
                         * @classdesc Represents an UpgradeRuntimeRequest.
                         * @implements IUpgradeRuntimeRequest
                         * @constructor
                         * @param {google.cloud.notebooks.v1.IUpgradeRuntimeRequest=} [properties] Properties to set
                         */
                        function UpgradeRuntimeRequest(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * UpgradeRuntimeRequest name.
                         * @member {string} name
                         * @memberof google.cloud.notebooks.v1.UpgradeRuntimeRequest
                         * @instance
                         */
                        UpgradeRuntimeRequest.prototype.name = "";
    
                        /**
                         * UpgradeRuntimeRequest requestId.
                         * @member {string} requestId
                         * @memberof google.cloud.notebooks.v1.UpgradeRuntimeRequest
                         * @instance
                         */
                        UpgradeRuntimeRequest.prototype.requestId = "";
    
                        /**
                         * Creates a new UpgradeRuntimeRequest instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.notebooks.v1.UpgradeRuntimeRequest
                         * @static
                         * @param {google.cloud.notebooks.v1.IUpgradeRuntimeRequest=} [properties] Properties to set
                         * @returns {google.cloud.notebooks.v1.UpgradeRuntimeRequest} UpgradeRuntimeRequest instance
                         */
                        UpgradeRuntimeRequest.create = function create(properties) {
                            return new UpgradeRuntimeRequest(properties);
                        };
    
                        /**
                         * Encodes the specified UpgradeRuntimeRequest message. Does not implicitly {@link google.cloud.notebooks.v1.UpgradeRuntimeRequest.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.notebooks.v1.UpgradeRuntimeRequest
                         * @static
                         * @param {google.cloud.notebooks.v1.IUpgradeRuntimeRequest} message UpgradeRuntimeRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        UpgradeRuntimeRequest.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                            if (message.requestId != null && Object.hasOwnProperty.call(message, "requestId"))
                                writer.uint32(/* id 2, wireType 2 =*/18).string(message.requestId);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified UpgradeRuntimeRequest message, length delimited. Does not implicitly {@link google.cloud.notebooks.v1.UpgradeRuntimeRequest.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.notebooks.v1.UpgradeRuntimeRequest
                         * @static
                         * @param {google.cloud.notebooks.v1.IUpgradeRuntimeRequest} message UpgradeRuntimeRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        UpgradeRuntimeRequest.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes an UpgradeRuntimeRequest message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.notebooks.v1.UpgradeRuntimeRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.notebooks.v1.UpgradeRuntimeRequest} UpgradeRuntimeRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        UpgradeRuntimeRequest.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.notebooks.v1.UpgradeRuntimeRequest();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.name = reader.string();
                                        break;
                                    }
                                case 2: {
                                        message.requestId = reader.string();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes an UpgradeRuntimeRequest message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.notebooks.v1.UpgradeRuntimeRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.notebooks.v1.UpgradeRuntimeRequest} UpgradeRuntimeRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        UpgradeRuntimeRequest.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies an UpgradeRuntimeRequest message.
                         * @function verify
                         * @memberof google.cloud.notebooks.v1.UpgradeRuntimeRequest
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        UpgradeRuntimeRequest.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.name != null && message.hasOwnProperty("name"))
                                if (!$util.isString(message.name))
                                    return "name: string expected";
                            if (message.requestId != null && message.hasOwnProperty("requestId"))
                                if (!$util.isString(message.requestId))
                                    return "requestId: string expected";
                            return null;
                        };
    
                        /**
                         * Creates an UpgradeRuntimeRequest message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.notebooks.v1.UpgradeRuntimeRequest
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.notebooks.v1.UpgradeRuntimeRequest} UpgradeRuntimeRequest
                         */
                        UpgradeRuntimeRequest.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.notebooks.v1.UpgradeRuntimeRequest)
                                return object;
                            var message = new $root.google.cloud.notebooks.v1.UpgradeRuntimeRequest();
                            if (object.name != null)
                                message.name = String(object.name);
                            if (object.requestId != null)
                                message.requestId = String(object.requestId);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from an UpgradeRuntimeRequest message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.notebooks.v1.UpgradeRuntimeRequest
                         * @static
                         * @param {google.cloud.notebooks.v1.UpgradeRuntimeRequest} message UpgradeRuntimeRequest
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        UpgradeRuntimeRequest.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.name = "";
                                object.requestId = "";
                            }
                            if (message.name != null && message.hasOwnProperty("name"))
                                object.name = message.name;
                            if (message.requestId != null && message.hasOwnProperty("requestId"))
                                object.requestId = message.requestId;
                            return object;
                        };
    
                        /**
                         * Converts this UpgradeRuntimeRequest to JSON.
                         * @function toJSON
                         * @memberof google.cloud.notebooks.v1.UpgradeRuntimeRequest
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        UpgradeRuntimeRequest.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for UpgradeRuntimeRequest
                         * @function getTypeUrl
                         * @memberof google.cloud.notebooks.v1.UpgradeRuntimeRequest
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        UpgradeRuntimeRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.notebooks.v1.UpgradeRuntimeRequest";
                        };
    
                        return UpgradeRuntimeRequest;
                    })();
    
                    v1.ReportRuntimeEventRequest = (function() {
    
                        /**
                         * Properties of a ReportRuntimeEventRequest.
                         * @memberof google.cloud.notebooks.v1
                         * @interface IReportRuntimeEventRequest
                         * @property {string|null} [name] ReportRuntimeEventRequest name
                         * @property {string|null} [vmId] ReportRuntimeEventRequest vmId
                         * @property {google.cloud.notebooks.v1.IEvent|null} [event] ReportRuntimeEventRequest event
                         */
    
                        /**
                         * Constructs a new ReportRuntimeEventRequest.
                         * @memberof google.cloud.notebooks.v1
                         * @classdesc Represents a ReportRuntimeEventRequest.
                         * @implements IReportRuntimeEventRequest
                         * @constructor
                         * @param {google.cloud.notebooks.v1.IReportRuntimeEventRequest=} [properties] Properties to set
                         */
                        function ReportRuntimeEventRequest(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * ReportRuntimeEventRequest name.
                         * @member {string} name
                         * @memberof google.cloud.notebooks.v1.ReportRuntimeEventRequest
                         * @instance
                         */
                        ReportRuntimeEventRequest.prototype.name = "";
    
                        /**
                         * ReportRuntimeEventRequest vmId.
                         * @member {string} vmId
                         * @memberof google.cloud.notebooks.v1.ReportRuntimeEventRequest
                         * @instance
                         */
                        ReportRuntimeEventRequest.prototype.vmId = "";
    
                        /**
                         * ReportRuntimeEventRequest event.
                         * @member {google.cloud.notebooks.v1.IEvent|null|undefined} event
                         * @memberof google.cloud.notebooks.v1.ReportRuntimeEventRequest
                         * @instance
                         */
                        ReportRuntimeEventRequest.prototype.event = null;
    
                        /**
                         * Creates a new ReportRuntimeEventRequest instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.notebooks.v1.ReportRuntimeEventRequest
                         * @static
                         * @param {google.cloud.notebooks.v1.IReportRuntimeEventRequest=} [properties] Properties to set
                         * @returns {google.cloud.notebooks.v1.ReportRuntimeEventRequest} ReportRuntimeEventRequest instance
                         */
                        ReportRuntimeEventRequest.create = function create(properties) {
                            return new ReportRuntimeEventRequest(properties);
                        };
    
                        /**
                         * Encodes the specified ReportRuntimeEventRequest message. Does not implicitly {@link google.cloud.notebooks.v1.ReportRuntimeEventRequest.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.notebooks.v1.ReportRuntimeEventRequest
                         * @static
                         * @param {google.cloud.notebooks.v1.IReportRuntimeEventRequest} message ReportRuntimeEventRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        ReportRuntimeEventRequest.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                            if (message.vmId != null && Object.hasOwnProperty.call(message, "vmId"))
                                writer.uint32(/* id 2, wireType 2 =*/18).string(message.vmId);
                            if (message.event != null && Object.hasOwnProperty.call(message, "event"))
                                $root.google.cloud.notebooks.v1.Event.encode(message.event, writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();
                            return writer;
                        };
    
                        /**
                         * Encodes the specified ReportRuntimeEventRequest message, length delimited. Does not implicitly {@link google.cloud.notebooks.v1.ReportRuntimeEventRequest.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.notebooks.v1.ReportRuntimeEventRequest
                         * @static
                         * @param {google.cloud.notebooks.v1.IReportRuntimeEventRequest} message ReportRuntimeEventRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        ReportRuntimeEventRequest.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a ReportRuntimeEventRequest message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.notebooks.v1.ReportRuntimeEventRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.notebooks.v1.ReportRuntimeEventRequest} ReportRuntimeEventRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        ReportRuntimeEventRequest.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.notebooks.v1.ReportRuntimeEventRequest();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.name = reader.string();
                                        break;
                                    }
                                case 2: {
                                        message.vmId = reader.string();
                                        break;
                                    }
                                case 3: {
                                        message.event = $root.google.cloud.notebooks.v1.Event.decode(reader, reader.uint32());
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a ReportRuntimeEventRequest message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.notebooks.v1.ReportRuntimeEventRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.notebooks.v1.ReportRuntimeEventRequest} ReportRuntimeEventRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        ReportRuntimeEventRequest.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a ReportRuntimeEventRequest message.
                         * @function verify
                         * @memberof google.cloud.notebooks.v1.ReportRuntimeEventRequest
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        ReportRuntimeEventRequest.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.name != null && message.hasOwnProperty("name"))
                                if (!$util.isString(message.name))
                                    return "name: string expected";
                            if (message.vmId != null && message.hasOwnProperty("vmId"))
                                if (!$util.isString(message.vmId))
                                    return "vmId: string expected";
                            if (message.event != null && message.hasOwnProperty("event")) {
                                var error = $root.google.cloud.notebooks.v1.Event.verify(message.event);
                                if (error)
                                    return "event." + error;
                            }
                            return null;
                        };
    
                        /**
                         * Creates a ReportRuntimeEventRequest message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.notebooks.v1.ReportRuntimeEventRequest
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.notebooks.v1.ReportRuntimeEventRequest} ReportRuntimeEventRequest
                         */
                        ReportRuntimeEventRequest.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.notebooks.v1.ReportRuntimeEventRequest)
                                return object;
                            var message = new $root.google.cloud.notebooks.v1.ReportRuntimeEventRequest();
                            if (object.name != null)
                                message.name = String(object.name);
                            if (object.vmId != null)
                                message.vmId = String(object.vmId);
                            if (object.event != null) {
                                if (typeof object.event !== "object")
                                    throw TypeError(".google.cloud.notebooks.v1.ReportRuntimeEventRequest.event: object expected");
                                message.event = $root.google.cloud.notebooks.v1.Event.fromObject(object.event);
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a ReportRuntimeEventRequest message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.notebooks.v1.ReportRuntimeEventRequest
                         * @static
                         * @param {google.cloud.notebooks.v1.ReportRuntimeEventRequest} message ReportRuntimeEventRequest
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        ReportRuntimeEventRequest.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.name = "";
                                object.vmId = "";
                                object.event = null;
                            }
                            if (message.name != null && message.hasOwnProperty("name"))
                                object.name = message.name;
                            if (message.vmId != null && message.hasOwnProperty("vmId"))
                                object.vmId = message.vmId;
                            if (message.event != null && message.hasOwnProperty("event"))
                                object.event = $root.google.cloud.notebooks.v1.Event.toObject(message.event, options);
                            return object;
                        };
    
                        /**
                         * Converts this ReportRuntimeEventRequest to JSON.
                         * @function toJSON
                         * @memberof google.cloud.notebooks.v1.ReportRuntimeEventRequest
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        ReportRuntimeEventRequest.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for ReportRuntimeEventRequest
                         * @function getTypeUrl
                         * @memberof google.cloud.notebooks.v1.ReportRuntimeEventRequest
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        ReportRuntimeEventRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.notebooks.v1.ReportRuntimeEventRequest";
                        };
    
                        return ReportRuntimeEventRequest;
                    })();
    
                    v1.UpdateRuntimeRequest = (function() {
    
                        /**
                         * Properties of an UpdateRuntimeRequest.
                         * @memberof google.cloud.notebooks.v1
                         * @interface IUpdateRuntimeRequest
                         * @property {google.cloud.notebooks.v1.IRuntime|null} [runtime] UpdateRuntimeRequest runtime
                         * @property {google.protobuf.IFieldMask|null} [updateMask] UpdateRuntimeRequest updateMask
                         * @property {string|null} [requestId] UpdateRuntimeRequest requestId
                         */
    
                        /**
                         * Constructs a new UpdateRuntimeRequest.
                         * @memberof google.cloud.notebooks.v1
                         * @classdesc Represents an UpdateRuntimeRequest.
                         * @implements IUpdateRuntimeRequest
                         * @constructor
                         * @param {google.cloud.notebooks.v1.IUpdateRuntimeRequest=} [properties] Properties to set
                         */
                        function UpdateRuntimeRequest(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * UpdateRuntimeRequest runtime.
                         * @member {google.cloud.notebooks.v1.IRuntime|null|undefined} runtime
                         * @memberof google.cloud.notebooks.v1.UpdateRuntimeRequest
                         * @instance
                         */
                        UpdateRuntimeRequest.prototype.runtime = null;
    
                        /**
                         * UpdateRuntimeRequest updateMask.
                         * @member {google.protobuf.IFieldMask|null|undefined} updateMask
                         * @memberof google.cloud.notebooks.v1.UpdateRuntimeRequest
                         * @instance
                         */
                        UpdateRuntimeRequest.prototype.updateMask = null;
    
                        /**
                         * UpdateRuntimeRequest requestId.
                         * @member {string} requestId
                         * @memberof google.cloud.notebooks.v1.UpdateRuntimeRequest
                         * @instance
                         */
                        UpdateRuntimeRequest.prototype.requestId = "";
    
                        /**
                         * Creates a new UpdateRuntimeRequest instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.notebooks.v1.UpdateRuntimeRequest
                         * @static
                         * @param {google.cloud.notebooks.v1.IUpdateRuntimeRequest=} [properties] Properties to set
                         * @returns {google.cloud.notebooks.v1.UpdateRuntimeRequest} UpdateRuntimeRequest instance
                         */
                        UpdateRuntimeRequest.create = function create(properties) {
                            return new UpdateRuntimeRequest(properties);
                        };
    
                        /**
                         * Encodes the specified UpdateRuntimeRequest message. Does not implicitly {@link google.cloud.notebooks.v1.UpdateRuntimeRequest.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.notebooks.v1.UpdateRuntimeRequest
                         * @static
                         * @param {google.cloud.notebooks.v1.IUpdateRuntimeRequest} message UpdateRuntimeRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        UpdateRuntimeRequest.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.runtime != null && Object.hasOwnProperty.call(message, "runtime"))
                                $root.google.cloud.notebooks.v1.Runtime.encode(message.runtime, writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                            if (message.updateMask != null && Object.hasOwnProperty.call(message, "updateMask"))
                                $root.google.protobuf.FieldMask.encode(message.updateMask, writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                            if (message.requestId != null && Object.hasOwnProperty.call(message, "requestId"))
                                writer.uint32(/* id 3, wireType 2 =*/26).string(message.requestId);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified UpdateRuntimeRequest message, length delimited. Does not implicitly {@link google.cloud.notebooks.v1.UpdateRuntimeRequest.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.notebooks.v1.UpdateRuntimeRequest
                         * @static
                         * @param {google.cloud.notebooks.v1.IUpdateRuntimeRequest} message UpdateRuntimeRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        UpdateRuntimeRequest.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes an UpdateRuntimeRequest message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.notebooks.v1.UpdateRuntimeRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.notebooks.v1.UpdateRuntimeRequest} UpdateRuntimeRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        UpdateRuntimeRequest.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.notebooks.v1.UpdateRuntimeRequest();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.runtime = $root.google.cloud.notebooks.v1.Runtime.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 2: {
                                        message.updateMask = $root.google.protobuf.FieldMask.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 3: {
                                        message.requestId = reader.string();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes an UpdateRuntimeRequest message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.notebooks.v1.UpdateRuntimeRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.notebooks.v1.UpdateRuntimeRequest} UpdateRuntimeRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        UpdateRuntimeRequest.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies an UpdateRuntimeRequest message.
                         * @function verify
                         * @memberof google.cloud.notebooks.v1.UpdateRuntimeRequest
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        UpdateRuntimeRequest.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.runtime != null && message.hasOwnProperty("runtime")) {
                                var error = $root.google.cloud.notebooks.v1.Runtime.verify(message.runtime);
                                if (error)
                                    return "runtime." + error;
                            }
                            if (message.updateMask != null && message.hasOwnProperty("updateMask")) {
                                var error = $root.google.protobuf.FieldMask.verify(message.updateMask);
                                if (error)
                                    return "updateMask." + error;
                            }
                            if (message.requestId != null && message.hasOwnProperty("requestId"))
                                if (!$util.isString(message.requestId))
                                    return "requestId: string expected";
                            return null;
                        };
    
                        /**
                         * Creates an UpdateRuntimeRequest message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.notebooks.v1.UpdateRuntimeRequest
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.notebooks.v1.UpdateRuntimeRequest} UpdateRuntimeRequest
                         */
                        UpdateRuntimeRequest.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.notebooks.v1.UpdateRuntimeRequest)
                                return object;
                            var message = new $root.google.cloud.notebooks.v1.UpdateRuntimeRequest();
                            if (object.runtime != null) {
                                if (typeof object.runtime !== "object")
                                    throw TypeError(".google.cloud.notebooks.v1.UpdateRuntimeRequest.runtime: object expected");
                                message.runtime = $root.google.cloud.notebooks.v1.Runtime.fromObject(object.runtime);
                            }
                            if (object.updateMask != null) {
                                if (typeof object.updateMask !== "object")
                                    throw TypeError(".google.cloud.notebooks.v1.UpdateRuntimeRequest.updateMask: object expected");
                                message.updateMask = $root.google.protobuf.FieldMask.fromObject(object.updateMask);
                            }
                            if (object.requestId != null)
                                message.requestId = String(object.requestId);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from an UpdateRuntimeRequest message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.notebooks.v1.UpdateRuntimeRequest
                         * @static
                         * @param {google.cloud.notebooks.v1.UpdateRuntimeRequest} message UpdateRuntimeRequest
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        UpdateRuntimeRequest.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.runtime = null;
                                object.updateMask = null;
                                object.requestId = "";
                            }
                            if (message.runtime != null && message.hasOwnProperty("runtime"))
                                object.runtime = $root.google.cloud.notebooks.v1.Runtime.toObject(message.runtime, options);
                            if (message.updateMask != null && message.hasOwnProperty("updateMask"))
                                object.updateMask = $root.google.protobuf.FieldMask.toObject(message.updateMask, options);
                            if (message.requestId != null && message.hasOwnProperty("requestId"))
                                object.requestId = message.requestId;
                            return object;
                        };
    
                        /**
                         * Converts this UpdateRuntimeRequest to JSON.
                         * @function toJSON
                         * @memberof google.cloud.notebooks.v1.UpdateRuntimeRequest
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        UpdateRuntimeRequest.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for UpdateRuntimeRequest
                         * @function getTypeUrl
                         * @memberof google.cloud.notebooks.v1.UpdateRuntimeRequest
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        UpdateRuntimeRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.notebooks.v1.UpdateRuntimeRequest";
                        };
    
                        return UpdateRuntimeRequest;
                    })();
    
                    v1.RefreshRuntimeTokenInternalRequest = (function() {
    
                        /**
                         * Properties of a RefreshRuntimeTokenInternalRequest.
                         * @memberof google.cloud.notebooks.v1
                         * @interface IRefreshRuntimeTokenInternalRequest
                         * @property {string|null} [name] RefreshRuntimeTokenInternalRequest name
                         * @property {string|null} [vmId] RefreshRuntimeTokenInternalRequest vmId
                         */
    
                        /**
                         * Constructs a new RefreshRuntimeTokenInternalRequest.
                         * @memberof google.cloud.notebooks.v1
                         * @classdesc Represents a RefreshRuntimeTokenInternalRequest.
                         * @implements IRefreshRuntimeTokenInternalRequest
                         * @constructor
                         * @param {google.cloud.notebooks.v1.IRefreshRuntimeTokenInternalRequest=} [properties] Properties to set
                         */
                        function RefreshRuntimeTokenInternalRequest(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * RefreshRuntimeTokenInternalRequest name.
                         * @member {string} name
                         * @memberof google.cloud.notebooks.v1.RefreshRuntimeTokenInternalRequest
                         * @instance
                         */
                        RefreshRuntimeTokenInternalRequest.prototype.name = "";
    
                        /**
                         * RefreshRuntimeTokenInternalRequest vmId.
                         * @member {string} vmId
                         * @memberof google.cloud.notebooks.v1.RefreshRuntimeTokenInternalRequest
                         * @instance
                         */
                        RefreshRuntimeTokenInternalRequest.prototype.vmId = "";
    
                        /**
                         * Creates a new RefreshRuntimeTokenInternalRequest instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.notebooks.v1.RefreshRuntimeTokenInternalRequest
                         * @static
                         * @param {google.cloud.notebooks.v1.IRefreshRuntimeTokenInternalRequest=} [properties] Properties to set
                         * @returns {google.cloud.notebooks.v1.RefreshRuntimeTokenInternalRequest} RefreshRuntimeTokenInternalRequest instance
                         */
                        RefreshRuntimeTokenInternalRequest.create = function create(properties) {
                            return new RefreshRuntimeTokenInternalRequest(properties);
                        };
    
                        /**
                         * Encodes the specified RefreshRuntimeTokenInternalRequest message. Does not implicitly {@link google.cloud.notebooks.v1.RefreshRuntimeTokenInternalRequest.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.notebooks.v1.RefreshRuntimeTokenInternalRequest
                         * @static
                         * @param {google.cloud.notebooks.v1.IRefreshRuntimeTokenInternalRequest} message RefreshRuntimeTokenInternalRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        RefreshRuntimeTokenInternalRequest.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                            if (message.vmId != null && Object.hasOwnProperty.call(message, "vmId"))
                                writer.uint32(/* id 2, wireType 2 =*/18).string(message.vmId);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified RefreshRuntimeTokenInternalRequest message, length delimited. Does not implicitly {@link google.cloud.notebooks.v1.RefreshRuntimeTokenInternalRequest.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.notebooks.v1.RefreshRuntimeTokenInternalRequest
                         * @static
                         * @param {google.cloud.notebooks.v1.IRefreshRuntimeTokenInternalRequest} message RefreshRuntimeTokenInternalRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        RefreshRuntimeTokenInternalRequest.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a RefreshRuntimeTokenInternalRequest message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.notebooks.v1.RefreshRuntimeTokenInternalRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.notebooks.v1.RefreshRuntimeTokenInternalRequest} RefreshRuntimeTokenInternalRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        RefreshRuntimeTokenInternalRequest.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.notebooks.v1.RefreshRuntimeTokenInternalRequest();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.name = reader.string();
                                        break;
                                    }
                                case 2: {
                                        message.vmId = reader.string();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a RefreshRuntimeTokenInternalRequest message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.notebooks.v1.RefreshRuntimeTokenInternalRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.notebooks.v1.RefreshRuntimeTokenInternalRequest} RefreshRuntimeTokenInternalRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        RefreshRuntimeTokenInternalRequest.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a RefreshRuntimeTokenInternalRequest message.
                         * @function verify
                         * @memberof google.cloud.notebooks.v1.RefreshRuntimeTokenInternalRequest
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        RefreshRuntimeTokenInternalRequest.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.name != null && message.hasOwnProperty("name"))
                                if (!$util.isString(message.name))
                                    return "name: string expected";
                            if (message.vmId != null && message.hasOwnProperty("vmId"))
                                if (!$util.isString(message.vmId))
                                    return "vmId: string expected";
                            return null;
                        };
    
                        /**
                         * Creates a RefreshRuntimeTokenInternalRequest message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.notebooks.v1.RefreshRuntimeTokenInternalRequest
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.notebooks.v1.RefreshRuntimeTokenInternalRequest} RefreshRuntimeTokenInternalRequest
                         */
                        RefreshRuntimeTokenInternalRequest.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.notebooks.v1.RefreshRuntimeTokenInternalRequest)
                                return object;
                            var message = new $root.google.cloud.notebooks.v1.RefreshRuntimeTokenInternalRequest();
                            if (object.name != null)
                                message.name = String(object.name);
                            if (object.vmId != null)
                                message.vmId = String(object.vmId);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a RefreshRuntimeTokenInternalRequest message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.notebooks.v1.RefreshRuntimeTokenInternalRequest
                         * @static
                         * @param {google.cloud.notebooks.v1.RefreshRuntimeTokenInternalRequest} message RefreshRuntimeTokenInternalRequest
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        RefreshRuntimeTokenInternalRequest.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.name = "";
                                object.vmId = "";
                            }
                            if (message.name != null && message.hasOwnProperty("name"))
                                object.name = message.name;
                            if (message.vmId != null && message.hasOwnProperty("vmId"))
                                object.vmId = message.vmId;
                            return object;
                        };
    
                        /**
                         * Converts this RefreshRuntimeTokenInternalRequest to JSON.
                         * @function toJSON
                         * @memberof google.cloud.notebooks.v1.RefreshRuntimeTokenInternalRequest
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        RefreshRuntimeTokenInternalRequest.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for RefreshRuntimeTokenInternalRequest
                         * @function getTypeUrl
                         * @memberof google.cloud.notebooks.v1.RefreshRuntimeTokenInternalRequest
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        RefreshRuntimeTokenInternalRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.notebooks.v1.RefreshRuntimeTokenInternalRequest";
                        };
    
                        return RefreshRuntimeTokenInternalRequest;
                    })();
    
                    v1.RefreshRuntimeTokenInternalResponse = (function() {
    
                        /**
                         * Properties of a RefreshRuntimeTokenInternalResponse.
                         * @memberof google.cloud.notebooks.v1
                         * @interface IRefreshRuntimeTokenInternalResponse
                         * @property {string|null} [accessToken] RefreshRuntimeTokenInternalResponse accessToken
                         * @property {google.protobuf.ITimestamp|null} [expireTime] RefreshRuntimeTokenInternalResponse expireTime
                         */
    
                        /**
                         * Constructs a new RefreshRuntimeTokenInternalResponse.
                         * @memberof google.cloud.notebooks.v1
                         * @classdesc Represents a RefreshRuntimeTokenInternalResponse.
                         * @implements IRefreshRuntimeTokenInternalResponse
                         * @constructor
                         * @param {google.cloud.notebooks.v1.IRefreshRuntimeTokenInternalResponse=} [properties] Properties to set
                         */
                        function RefreshRuntimeTokenInternalResponse(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * RefreshRuntimeTokenInternalResponse accessToken.
                         * @member {string} accessToken
                         * @memberof google.cloud.notebooks.v1.RefreshRuntimeTokenInternalResponse
                         * @instance
                         */
                        RefreshRuntimeTokenInternalResponse.prototype.accessToken = "";
    
                        /**
                         * RefreshRuntimeTokenInternalResponse expireTime.
                         * @member {google.protobuf.ITimestamp|null|undefined} expireTime
                         * @memberof google.cloud.notebooks.v1.RefreshRuntimeTokenInternalResponse
                         * @instance
                         */
                        RefreshRuntimeTokenInternalResponse.prototype.expireTime = null;
    
                        /**
                         * Creates a new RefreshRuntimeTokenInternalResponse instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.notebooks.v1.RefreshRuntimeTokenInternalResponse
                         * @static
                         * @param {google.cloud.notebooks.v1.IRefreshRuntimeTokenInternalResponse=} [properties] Properties to set
                         * @returns {google.cloud.notebooks.v1.RefreshRuntimeTokenInternalResponse} RefreshRuntimeTokenInternalResponse instance
                         */
                        RefreshRuntimeTokenInternalResponse.create = function create(properties) {
                            return new RefreshRuntimeTokenInternalResponse(properties);
                        };
    
                        /**
                         * Encodes the specified RefreshRuntimeTokenInternalResponse message. Does not implicitly {@link google.cloud.notebooks.v1.RefreshRuntimeTokenInternalResponse.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.notebooks.v1.RefreshRuntimeTokenInternalResponse
                         * @static
                         * @param {google.cloud.notebooks.v1.IRefreshRuntimeTokenInternalResponse} message RefreshRuntimeTokenInternalResponse message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        RefreshRuntimeTokenInternalResponse.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.accessToken != null && Object.hasOwnProperty.call(message, "accessToken"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.accessToken);
                            if (message.expireTime != null && Object.hasOwnProperty.call(message, "expireTime"))
                                $root.google.protobuf.Timestamp.encode(message.expireTime, writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                            return writer;
                        };
    
                        /**
                         * Encodes the specified RefreshRuntimeTokenInternalResponse message, length delimited. Does not implicitly {@link google.cloud.notebooks.v1.RefreshRuntimeTokenInternalResponse.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.notebooks.v1.RefreshRuntimeTokenInternalResponse
                         * @static
                         * @param {google.cloud.notebooks.v1.IRefreshRuntimeTokenInternalResponse} message RefreshRuntimeTokenInternalResponse message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        RefreshRuntimeTokenInternalResponse.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a RefreshRuntimeTokenInternalResponse message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.notebooks.v1.RefreshRuntimeTokenInternalResponse
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.notebooks.v1.RefreshRuntimeTokenInternalResponse} RefreshRuntimeTokenInternalResponse
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        RefreshRuntimeTokenInternalResponse.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.notebooks.v1.RefreshRuntimeTokenInternalResponse();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.accessToken = reader.string();
                                        break;
                                    }
                                case 2: {
                                        message.expireTime = $root.google.protobuf.Timestamp.decode(reader, reader.uint32());
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a RefreshRuntimeTokenInternalResponse message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.notebooks.v1.RefreshRuntimeTokenInternalResponse
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.notebooks.v1.RefreshRuntimeTokenInternalResponse} RefreshRuntimeTokenInternalResponse
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        RefreshRuntimeTokenInternalResponse.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a RefreshRuntimeTokenInternalResponse message.
                         * @function verify
                         * @memberof google.cloud.notebooks.v1.RefreshRuntimeTokenInternalResponse
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        RefreshRuntimeTokenInternalResponse.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.accessToken != null && message.hasOwnProperty("accessToken"))
                                if (!$util.isString(message.accessToken))
                                    return "accessToken: string expected";
                            if (message.expireTime != null && message.hasOwnProperty("expireTime")) {
                                var error = $root.google.protobuf.Timestamp.verify(message.expireTime);
                                if (error)
                                    return "expireTime." + error;
                            }
                            return null;
                        };
    
                        /**
                         * Creates a RefreshRuntimeTokenInternalResponse message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.notebooks.v1.RefreshRuntimeTokenInternalResponse
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.notebooks.v1.RefreshRuntimeTokenInternalResponse} RefreshRuntimeTokenInternalResponse
                         */
                        RefreshRuntimeTokenInternalResponse.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.notebooks.v1.RefreshRuntimeTokenInternalResponse)
                                return object;
                            var message = new $root.google.cloud.notebooks.v1.RefreshRuntimeTokenInternalResponse();
                            if (object.accessToken != null)
                                message.accessToken = String(object.accessToken);
                            if (object.expireTime != null) {
                                if (typeof object.expireTime !== "object")
                                    throw TypeError(".google.cloud.notebooks.v1.RefreshRuntimeTokenInternalResponse.expireTime: object expected");
                                message.expireTime = $root.google.protobuf.Timestamp.fromObject(object.expireTime);
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a RefreshRuntimeTokenInternalResponse message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.notebooks.v1.RefreshRuntimeTokenInternalResponse
                         * @static
                         * @param {google.cloud.notebooks.v1.RefreshRuntimeTokenInternalResponse} message RefreshRuntimeTokenInternalResponse
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        RefreshRuntimeTokenInternalResponse.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.accessToken = "";
                                object.expireTime = null;
                            }
                            if (message.accessToken != null && message.hasOwnProperty("accessToken"))
                                object.accessToken = message.accessToken;
                            if (message.expireTime != null && message.hasOwnProperty("expireTime"))
                                object.expireTime = $root.google.protobuf.Timestamp.toObject(message.expireTime, options);
                            return object;
                        };
    
                        /**
                         * Converts this RefreshRuntimeTokenInternalResponse to JSON.
                         * @function toJSON
                         * @memberof google.cloud.notebooks.v1.RefreshRuntimeTokenInternalResponse
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        RefreshRuntimeTokenInternalResponse.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for RefreshRuntimeTokenInternalResponse
                         * @function getTypeUrl
                         * @memberof google.cloud.notebooks.v1.RefreshRuntimeTokenInternalResponse
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        RefreshRuntimeTokenInternalResponse.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.notebooks.v1.RefreshRuntimeTokenInternalResponse";
                        };
    
                        return RefreshRuntimeTokenInternalResponse;
                    })();
    
                    v1.DiagnoseRuntimeRequest = (function() {
    
                        /**
                         * Properties of a DiagnoseRuntimeRequest.
                         * @memberof google.cloud.notebooks.v1
                         * @interface IDiagnoseRuntimeRequest
                         * @property {string|null} [name] DiagnoseRuntimeRequest name
                         * @property {google.cloud.notebooks.v1.IDiagnosticConfig|null} [diagnosticConfig] DiagnoseRuntimeRequest diagnosticConfig
                         */
    
                        /**
                         * Constructs a new DiagnoseRuntimeRequest.
                         * @memberof google.cloud.notebooks.v1
                         * @classdesc Represents a DiagnoseRuntimeRequest.
                         * @implements IDiagnoseRuntimeRequest
                         * @constructor
                         * @param {google.cloud.notebooks.v1.IDiagnoseRuntimeRequest=} [properties] Properties to set
                         */
                        function DiagnoseRuntimeRequest(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * DiagnoseRuntimeRequest name.
                         * @member {string} name
                         * @memberof google.cloud.notebooks.v1.DiagnoseRuntimeRequest
                         * @instance
                         */
                        DiagnoseRuntimeRequest.prototype.name = "";
    
                        /**
                         * DiagnoseRuntimeRequest diagnosticConfig.
                         * @member {google.cloud.notebooks.v1.IDiagnosticConfig|null|undefined} diagnosticConfig
                         * @memberof google.cloud.notebooks.v1.DiagnoseRuntimeRequest
                         * @instance
                         */
                        DiagnoseRuntimeRequest.prototype.diagnosticConfig = null;
    
                        /**
                         * Creates a new DiagnoseRuntimeRequest instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.notebooks.v1.DiagnoseRuntimeRequest
                         * @static
                         * @param {google.cloud.notebooks.v1.IDiagnoseRuntimeRequest=} [properties] Properties to set
                         * @returns {google.cloud.notebooks.v1.DiagnoseRuntimeRequest} DiagnoseRuntimeRequest instance
                         */
                        DiagnoseRuntimeRequest.create = function create(properties) {
                            return new DiagnoseRuntimeRequest(properties);
                        };
    
                        /**
                         * Encodes the specified DiagnoseRuntimeRequest message. Does not implicitly {@link google.cloud.notebooks.v1.DiagnoseRuntimeRequest.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.notebooks.v1.DiagnoseRuntimeRequest
                         * @static
                         * @param {google.cloud.notebooks.v1.IDiagnoseRuntimeRequest} message DiagnoseRuntimeRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        DiagnoseRuntimeRequest.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                            if (message.diagnosticConfig != null && Object.hasOwnProperty.call(message, "diagnosticConfig"))
                                $root.google.cloud.notebooks.v1.DiagnosticConfig.encode(message.diagnosticConfig, writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                            return writer;
                        };
    
                        /**
                         * Encodes the specified DiagnoseRuntimeRequest message, length delimited. Does not implicitly {@link google.cloud.notebooks.v1.DiagnoseRuntimeRequest.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.notebooks.v1.DiagnoseRuntimeRequest
                         * @static
                         * @param {google.cloud.notebooks.v1.IDiagnoseRuntimeRequest} message DiagnoseRuntimeRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        DiagnoseRuntimeRequest.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a DiagnoseRuntimeRequest message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.notebooks.v1.DiagnoseRuntimeRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.notebooks.v1.DiagnoseRuntimeRequest} DiagnoseRuntimeRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        DiagnoseRuntimeRequest.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.notebooks.v1.DiagnoseRuntimeRequest();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.name = reader.string();
                                        break;
                                    }
                                case 2: {
                                        message.diagnosticConfig = $root.google.cloud.notebooks.v1.DiagnosticConfig.decode(reader, reader.uint32());
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a DiagnoseRuntimeRequest message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.notebooks.v1.DiagnoseRuntimeRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.notebooks.v1.DiagnoseRuntimeRequest} DiagnoseRuntimeRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        DiagnoseRuntimeRequest.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a DiagnoseRuntimeRequest message.
                         * @function verify
                         * @memberof google.cloud.notebooks.v1.DiagnoseRuntimeRequest
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        DiagnoseRuntimeRequest.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.name != null && message.hasOwnProperty("name"))
                                if (!$util.isString(message.name))
                                    return "name: string expected";
                            if (message.diagnosticConfig != null && message.hasOwnProperty("diagnosticConfig")) {
                                var error = $root.google.cloud.notebooks.v1.DiagnosticConfig.verify(message.diagnosticConfig);
                                if (error)
                                    return "diagnosticConfig." + error;
                            }
                            return null;
                        };
    
                        /**
                         * Creates a DiagnoseRuntimeRequest message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.notebooks.v1.DiagnoseRuntimeRequest
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.notebooks.v1.DiagnoseRuntimeRequest} DiagnoseRuntimeRequest
                         */
                        DiagnoseRuntimeRequest.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.notebooks.v1.DiagnoseRuntimeRequest)
                                return object;
                            var message = new $root.google.cloud.notebooks.v1.DiagnoseRuntimeRequest();
                            if (object.name != null)
                                message.name = String(object.name);
                            if (object.diagnosticConfig != null) {
                                if (typeof object.diagnosticConfig !== "object")
                                    throw TypeError(".google.cloud.notebooks.v1.DiagnoseRuntimeRequest.diagnosticConfig: object expected");
                                message.diagnosticConfig = $root.google.cloud.notebooks.v1.DiagnosticConfig.fromObject(object.diagnosticConfig);
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a DiagnoseRuntimeRequest message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.notebooks.v1.DiagnoseRuntimeRequest
                         * @static
                         * @param {google.cloud.notebooks.v1.DiagnoseRuntimeRequest} message DiagnoseRuntimeRequest
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        DiagnoseRuntimeRequest.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.name = "";
                                object.diagnosticConfig = null;
                            }
                            if (message.name != null && message.hasOwnProperty("name"))
                                object.name = message.name;
                            if (message.diagnosticConfig != null && message.hasOwnProperty("diagnosticConfig"))
                                object.diagnosticConfig = $root.google.cloud.notebooks.v1.DiagnosticConfig.toObject(message.diagnosticConfig, options);
                            return object;
                        };
    
                        /**
                         * Converts this DiagnoseRuntimeRequest to JSON.
                         * @function toJSON
                         * @memberof google.cloud.notebooks.v1.DiagnoseRuntimeRequest
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        DiagnoseRuntimeRequest.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for DiagnoseRuntimeRequest
                         * @function getTypeUrl
                         * @memberof google.cloud.notebooks.v1.DiagnoseRuntimeRequest
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        DiagnoseRuntimeRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.notebooks.v1.DiagnoseRuntimeRequest";
                        };
    
                        return DiagnoseRuntimeRequest;
                    })();
    
                    v1.Runtime = (function() {
    
                        /**
                         * Properties of a Runtime.
                         * @memberof google.cloud.notebooks.v1
                         * @interface IRuntime
                         * @property {string|null} [name] Runtime name
                         * @property {google.cloud.notebooks.v1.IVirtualMachine|null} [virtualMachine] Runtime virtualMachine
                         * @property {google.cloud.notebooks.v1.Runtime.State|null} [state] Runtime state
                         * @property {google.cloud.notebooks.v1.Runtime.HealthState|null} [healthState] Runtime healthState
                         * @property {google.cloud.notebooks.v1.IRuntimeAccessConfig|null} [accessConfig] Runtime accessConfig
                         * @property {google.cloud.notebooks.v1.IRuntimeSoftwareConfig|null} [softwareConfig] Runtime softwareConfig
                         * @property {google.cloud.notebooks.v1.IRuntimeMetrics|null} [metrics] Runtime metrics
                         * @property {google.protobuf.ITimestamp|null} [createTime] Runtime createTime
                         * @property {google.protobuf.ITimestamp|null} [updateTime] Runtime updateTime
                         */
    
                        /**
                         * Constructs a new Runtime.
                         * @memberof google.cloud.notebooks.v1
                         * @classdesc Represents a Runtime.
                         * @implements IRuntime
                         * @constructor
                         * @param {google.cloud.notebooks.v1.IRuntime=} [properties] Properties to set
                         */
                        function Runtime(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * Runtime name.
                         * @member {string} name
                         * @memberof google.cloud.notebooks.v1.Runtime
                         * @instance
                         */
                        Runtime.prototype.name = "";
    
                        /**
                         * Runtime virtualMachine.
                         * @member {google.cloud.notebooks.v1.IVirtualMachine|null|undefined} virtualMachine
                         * @memberof google.cloud.notebooks.v1.Runtime
                         * @instance
                         */
                        Runtime.prototype.virtualMachine = null;
    
                        /**
                         * Runtime state.
                         * @member {google.cloud.notebooks.v1.Runtime.State} state
                         * @memberof google.cloud.notebooks.v1.Runtime
                         * @instance
                         */
                        Runtime.prototype.state = 0;
    
                        /**
                         * Runtime healthState.
                         * @member {google.cloud.notebooks.v1.Runtime.HealthState} healthState
                         * @memberof google.cloud.notebooks.v1.Runtime
                         * @instance
                         */
                        Runtime.prototype.healthState = 0;
    
                        /**
                         * Runtime accessConfig.
                         * @member {google.cloud.notebooks.v1.IRuntimeAccessConfig|null|undefined} accessConfig
                         * @memberof google.cloud.notebooks.v1.Runtime
                         * @instance
                         */
                        Runtime.prototype.accessConfig = null;
    
                        /**
                         * Runtime softwareConfig.
                         * @member {google.cloud.notebooks.v1.IRuntimeSoftwareConfig|null|undefined} softwareConfig
                         * @memberof google.cloud.notebooks.v1.Runtime
                         * @instance
                         */
                        Runtime.prototype.softwareConfig = null;
    
                        /**
                         * Runtime metrics.
                         * @member {google.cloud.notebooks.v1.IRuntimeMetrics|null|undefined} metrics
                         * @memberof google.cloud.notebooks.v1.Runtime
                         * @instance
                         */
                        Runtime.prototype.metrics = null;
    
                        /**
                         * Runtime createTime.
                         * @member {google.protobuf.ITimestamp|null|undefined} createTime
                         * @memberof google.cloud.notebooks.v1.Runtime
                         * @instance
                         */
                        Runtime.prototype.createTime = null;
    
                        /**
                         * Runtime updateTime.
                         * @member {google.protobuf.ITimestamp|null|undefined} updateTime
                         * @memberof google.cloud.notebooks.v1.Runtime
                         * @instance
                         */
                        Runtime.prototype.updateTime = null;
    
                        // OneOf field names bound to virtual getters and setters
                        var $oneOfFields;
    
                        /**
                         * Runtime runtimeType.
                         * @member {"virtualMachine"|undefined} runtimeType
                         * @memberof google.cloud.notebooks.v1.Runtime
                         * @instance
                         */
                        Object.defineProperty(Runtime.prototype, "runtimeType", {
                            get: $util.oneOfGetter($oneOfFields = ["virtualMachine"]),
                            set: $util.oneOfSetter($oneOfFields)
                        });
    
                        /**
                         * Creates a new Runtime instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.notebooks.v1.Runtime
                         * @static
                         * @param {google.cloud.notebooks.v1.IRuntime=} [properties] Properties to set
                         * @returns {google.cloud.notebooks.v1.Runtime} Runtime instance
                         */
                        Runtime.create = function create(properties) {
                            return new Runtime(properties);
                        };
    
                        /**
                         * Encodes the specified Runtime message. Does not implicitly {@link google.cloud.notebooks.v1.Runtime.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.notebooks.v1.Runtime
                         * @static
                         * @param {google.cloud.notebooks.v1.IRuntime} message Runtime message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        Runtime.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                            if (message.virtualMachine != null && Object.hasOwnProperty.call(message, "virtualMachine"))
                                $root.google.cloud.notebooks.v1.VirtualMachine.encode(message.virtualMachine, writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                            if (message.state != null && Object.hasOwnProperty.call(message, "state"))
                                writer.uint32(/* id 3, wireType 0 =*/24).int32(message.state);
                            if (message.healthState != null && Object.hasOwnProperty.call(message, "healthState"))
                                writer.uint32(/* id 4, wireType 0 =*/32).int32(message.healthState);
                            if (message.accessConfig != null && Object.hasOwnProperty.call(message, "accessConfig"))
                                $root.google.cloud.notebooks.v1.RuntimeAccessConfig.encode(message.accessConfig, writer.uint32(/* id 5, wireType 2 =*/42).fork()).ldelim();
                            if (message.softwareConfig != null && Object.hasOwnProperty.call(message, "softwareConfig"))
                                $root.google.cloud.notebooks.v1.RuntimeSoftwareConfig.encode(message.softwareConfig, writer.uint32(/* id 6, wireType 2 =*/50).fork()).ldelim();
                            if (message.metrics != null && Object.hasOwnProperty.call(message, "metrics"))
                                $root.google.cloud.notebooks.v1.RuntimeMetrics.encode(message.metrics, writer.uint32(/* id 7, wireType 2 =*/58).fork()).ldelim();
                            if (message.createTime != null && Object.hasOwnProperty.call(message, "createTime"))
                                $root.google.protobuf.Timestamp.encode(message.createTime, writer.uint32(/* id 20, wireType 2 =*/162).fork()).ldelim();
                            if (message.updateTime != null && Object.hasOwnProperty.call(message, "updateTime"))
                                $root.google.protobuf.Timestamp.encode(message.updateTime, writer.uint32(/* id 21, wireType 2 =*/170).fork()).ldelim();
                            return writer;
                        };
    
                        /**
                         * Encodes the specified Runtime message, length delimited. Does not implicitly {@link google.cloud.notebooks.v1.Runtime.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.notebooks.v1.Runtime
                         * @static
                         * @param {google.cloud.notebooks.v1.IRuntime} message Runtime message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        Runtime.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a Runtime message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.notebooks.v1.Runtime
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.notebooks.v1.Runtime} Runtime
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        Runtime.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.notebooks.v1.Runtime();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.name = reader.string();
                                        break;
                                    }
                                case 2: {
                                        message.virtualMachine = $root.google.cloud.notebooks.v1.VirtualMachine.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 3: {
                                        message.state = reader.int32();
                                        break;
                                    }
                                case 4: {
                                        message.healthState = reader.int32();
                                        break;
                                    }
                                case 5: {
                                        message.accessConfig = $root.google.cloud.notebooks.v1.RuntimeAccessConfig.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 6: {
                                        message.softwareConfig = $root.google.cloud.notebooks.v1.RuntimeSoftwareConfig.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 7: {
                                        message.metrics = $root.google.cloud.notebooks.v1.RuntimeMetrics.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 20: {
                                        message.createTime = $root.google.protobuf.Timestamp.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 21: {
                                        message.updateTime = $root.google.protobuf.Timestamp.decode(reader, reader.uint32());
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a Runtime message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.notebooks.v1.Runtime
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.notebooks.v1.Runtime} Runtime
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        Runtime.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a Runtime message.
                         * @function verify
                         * @memberof google.cloud.notebooks.v1.Runtime
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        Runtime.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            var properties = {};
                            if (message.name != null && message.hasOwnProperty("name"))
                                if (!$util.isString(message.name))
                                    return "name: string expected";
                            if (message.virtualMachine != null && message.hasOwnProperty("virtualMachine")) {
                                properties.runtimeType = 1;
                                {
                                    var error = $root.google.cloud.notebooks.v1.VirtualMachine.verify(message.virtualMachine);
                                    if (error)
                                        return "virtualMachine." + error;
                                }
                            }
                            if (message.state != null && message.hasOwnProperty("state"))
                                switch (message.state) {
                                default:
                                    return "state: enum value expected";
                                case 0:
                                case 1:
                                case 2:
                                case 3:
                                case 4:
                                case 5:
                                case 6:
                                case 7:
                                case 8:
                                    break;
                                }
                            if (message.healthState != null && message.hasOwnProperty("healthState"))
                                switch (message.healthState) {
                                default:
                                    return "healthState: enum value expected";
                                case 0:
                                case 1:
                                case 2:
                                case 3:
                                case 4:
                                    break;
                                }
                            if (message.accessConfig != null && message.hasOwnProperty("accessConfig")) {
                                var error = $root.google.cloud.notebooks.v1.RuntimeAccessConfig.verify(message.accessConfig);
                                if (error)
                                    return "accessConfig." + error;
                            }
                            if (message.softwareConfig != null && message.hasOwnProperty("softwareConfig")) {
                                var error = $root.google.cloud.notebooks.v1.RuntimeSoftwareConfig.verify(message.softwareConfig);
                                if (error)
                                    return "softwareConfig." + error;
                            }
                            if (message.metrics != null && message.hasOwnProperty("metrics")) {
                                var error = $root.google.cloud.notebooks.v1.RuntimeMetrics.verify(message.metrics);
                                if (error)
                                    return "metrics." + error;
                            }
                            if (message.createTime != null && message.hasOwnProperty("createTime")) {
                                var error = $root.google.protobuf.Timestamp.verify(message.createTime);
                                if (error)
                                    return "createTime." + error;
                            }
                            if (message.updateTime != null && message.hasOwnProperty("updateTime")) {
                                var error = $root.google.protobuf.Timestamp.verify(message.updateTime);
                                if (error)
                                    return "updateTime." + error;
                            }
                            return null;
                        };
    
                        /**
                         * Creates a Runtime message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.notebooks.v1.Runtime
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.notebooks.v1.Runtime} Runtime
                         */
                        Runtime.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.notebooks.v1.Runtime)
                                return object;
                            var message = new $root.google.cloud.notebooks.v1.Runtime();
                            if (object.name != null)
                                message.name = String(object.name);
                            if (object.virtualMachine != null) {
                                if (typeof object.virtualMachine !== "object")
                                    throw TypeError(".google.cloud.notebooks.v1.Runtime.virtualMachine: object expected");
                                message.virtualMachine = $root.google.cloud.notebooks.v1.VirtualMachine.fromObject(object.virtualMachine);
                            }
                            switch (object.state) {
                            default:
                                if (typeof object.state === "number") {
                                    message.state = object.state;
                                    break;
                                }
                                break;
                            case "STATE_UNSPECIFIED":
                            case 0:
                                message.state = 0;
                                break;
                            case "STARTING":
                            case 1:
                                message.state = 1;
                                break;
                            case "PROVISIONING":
                            case 2:
                                message.state = 2;
                                break;
                            case "ACTIVE":
                            case 3:
                                message.state = 3;
                                break;
                            case "STOPPING":
                            case 4:
                                message.state = 4;
                                break;
                            case "STOPPED":
                            case 5:
                                message.state = 5;
                                break;
                            case "DELETING":
                            case 6:
                                message.state = 6;
                                break;
                            case "UPGRADING":
                            case 7:
                                message.state = 7;
                                break;
                            case "INITIALIZING":
                            case 8:
                                message.state = 8;
                                break;
                            }
                            switch (object.healthState) {
                            default:
                                if (typeof object.healthState === "number") {
                                    message.healthState = object.healthState;
                                    break;
                                }
                                break;
                            case "HEALTH_STATE_UNSPECIFIED":
                            case 0:
                                message.healthState = 0;
                                break;
                            case "HEALTHY":
                            case 1:
                                message.healthState = 1;
                                break;
                            case "UNHEALTHY":
                            case 2:
                                message.healthState = 2;
                                break;
                            case "AGENT_NOT_INSTALLED":
                            case 3:
                                message.healthState = 3;
                                break;
                            case "AGENT_NOT_RUNNING":
                            case 4:
                                message.healthState = 4;
                                break;
                            }
                            if (object.accessConfig != null) {
                                if (typeof object.accessConfig !== "object")
                                    throw TypeError(".google.cloud.notebooks.v1.Runtime.accessConfig: object expected");
                                message.accessConfig = $root.google.cloud.notebooks.v1.RuntimeAccessConfig.fromObject(object.accessConfig);
                            }
                            if (object.softwareConfig != null) {
                                if (typeof object.softwareConfig !== "object")
                                    throw TypeError(".google.cloud.notebooks.v1.Runtime.softwareConfig: object expected");
                                message.softwareConfig = $root.google.cloud.notebooks.v1.RuntimeSoftwareConfig.fromObject(object.softwareConfig);
                            }
                            if (object.metrics != null) {
                                if (typeof object.metrics !== "object")
                                    throw TypeError(".google.cloud.notebooks.v1.Runtime.metrics: object expected");
                                message.metrics = $root.google.cloud.notebooks.v1.RuntimeMetrics.fromObject(object.metrics);
                            }
                            if (object.createTime != null) {
                                if (typeof object.createTime !== "object")
                                    throw TypeError(".google.cloud.notebooks.v1.Runtime.createTime: object expected");
                                message.createTime = $root.google.protobuf.Timestamp.fromObject(object.createTime);
                            }
                            if (object.updateTime != null) {
                                if (typeof object.updateTime !== "object")
                                    throw TypeError(".google.cloud.notebooks.v1.Runtime.updateTime: object expected");
                                message.updateTime = $root.google.protobuf.Timestamp.fromObject(object.updateTime);
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a Runtime message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.notebooks.v1.Runtime
                         * @static
                         * @param {google.cloud.notebooks.v1.Runtime} message Runtime
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        Runtime.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.name = "";
                                object.state = options.enums === String ? "STATE_UNSPECIFIED" : 0;
                                object.healthState = options.enums === String ? "HEALTH_STATE_UNSPECIFIED" : 0;
                                object.accessConfig = null;
                                object.softwareConfig = null;
                                object.metrics = null;
                                object.createTime = null;
                                object.updateTime = null;
                            }
                            if (message.name != null && message.hasOwnProperty("name"))
                                object.name = message.name;
                            if (message.virtualMachine != null && message.hasOwnProperty("virtualMachine")) {
                                object.virtualMachine = $root.google.cloud.notebooks.v1.VirtualMachine.toObject(message.virtualMachine, options);
                                if (options.oneofs)
                                    object.runtimeType = "virtualMachine";
                            }
                            if (message.state != null && message.hasOwnProperty("state"))
                                object.state = options.enums === String ? $root.google.cloud.notebooks.v1.Runtime.State[message.state] === undefined ? message.state : $root.google.cloud.notebooks.v1.Runtime.State[message.state] : message.state;
                            if (message.healthState != null && message.hasOwnProperty("healthState"))
                                object.healthState = options.enums === String ? $root.google.cloud.notebooks.v1.Runtime.HealthState[message.healthState] === undefined ? message.healthState : $root.google.cloud.notebooks.v1.Runtime.HealthState[message.healthState] : message.healthState;
                            if (message.accessConfig != null && message.hasOwnProperty("accessConfig"))
                                object.accessConfig = $root.google.cloud.notebooks.v1.RuntimeAccessConfig.toObject(message.accessConfig, options);
                            if (message.softwareConfig != null && message.hasOwnProperty("softwareConfig"))
                                object.softwareConfig = $root.google.cloud.notebooks.v1.RuntimeSoftwareConfig.toObject(message.softwareConfig, options);
                            if (message.metrics != null && message.hasOwnProperty("metrics"))
                                object.metrics = $root.google.cloud.notebooks.v1.RuntimeMetrics.toObject(message.metrics, options);
                            if (message.createTime != null && message.hasOwnProperty("createTime"))
                                object.createTime = $root.google.protobuf.Timestamp.toObject(message.createTime, options);
                            if (message.updateTime != null && message.hasOwnProperty("updateTime"))
                                object.updateTime = $root.google.protobuf.Timestamp.toObject(message.updateTime, options);
                            return object;
                        };
    
                        /**
                         * Converts this Runtime to JSON.
                         * @function toJSON
                         * @memberof google.cloud.notebooks.v1.Runtime
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        Runtime.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for Runtime
                         * @function getTypeUrl
                         * @memberof google.cloud.notebooks.v1.Runtime
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        Runtime.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.notebooks.v1.Runtime";
                        };
    
                        /**
                         * State enum.
                         * @name google.cloud.notebooks.v1.Runtime.State
                         * @enum {number}
                         * @property {number} STATE_UNSPECIFIED=0 STATE_UNSPECIFIED value
                         * @property {number} STARTING=1 STARTING value
                         * @property {number} PROVISIONING=2 PROVISIONING value
                         * @property {number} ACTIVE=3 ACTIVE value
                         * @property {number} STOPPING=4 STOPPING value
                         * @property {number} STOPPED=5 STOPPED value
                         * @property {number} DELETING=6 DELETING value
                         * @property {number} UPGRADING=7 UPGRADING value
                         * @property {number} INITIALIZING=8 INITIALIZING value
                         */
                        Runtime.State = (function() {
                            var valuesById = {}, values = Object.create(valuesById);
                            values[valuesById[0] = "STATE_UNSPECIFIED"] = 0;
                            values[valuesById[1] = "STARTING"] = 1;
                            values[valuesById[2] = "PROVISIONING"] = 2;
                            values[valuesById[3] = "ACTIVE"] = 3;
                            values[valuesById[4] = "STOPPING"] = 4;
                            values[valuesById[5] = "STOPPED"] = 5;
                            values[valuesById[6] = "DELETING"] = 6;
                            values[valuesById[7] = "UPGRADING"] = 7;
                            values[valuesById[8] = "INITIALIZING"] = 8;
                            return values;
                        })();
    
                        /**
                         * HealthState enum.
                         * @name google.cloud.notebooks.v1.Runtime.HealthState
                         * @enum {number}
                         * @property {number} HEALTH_STATE_UNSPECIFIED=0 HEALTH_STATE_UNSPECIFIED value
                         * @property {number} HEALTHY=1 HEALTHY value
                         * @property {number} UNHEALTHY=2 UNHEALTHY value
                         * @property {number} AGENT_NOT_INSTALLED=3 AGENT_NOT_INSTALLED value
                         * @property {number} AGENT_NOT_RUNNING=4 AGENT_NOT_RUNNING value
                         */
                        Runtime.HealthState = (function() {
                            var valuesById = {}, values = Object.create(valuesById);
                            values[valuesById[0] = "HEALTH_STATE_UNSPECIFIED"] = 0;
                            values[valuesById[1] = "HEALTHY"] = 1;
                            values[valuesById[2] = "UNHEALTHY"] = 2;
                            values[valuesById[3] = "AGENT_NOT_INSTALLED"] = 3;
                            values[valuesById[4] = "AGENT_NOT_RUNNING"] = 4;
                            return values;
                        })();
    
                        return Runtime;
                    })();
    
                    v1.RuntimeAcceleratorConfig = (function() {
    
                        /**
                         * Properties of a RuntimeAcceleratorConfig.
                         * @memberof google.cloud.notebooks.v1
                         * @interface IRuntimeAcceleratorConfig
                         * @property {google.cloud.notebooks.v1.RuntimeAcceleratorConfig.AcceleratorType|null} [type] RuntimeAcceleratorConfig type
                         * @property {number|Long|null} [coreCount] RuntimeAcceleratorConfig coreCount
                         */
    
                        /**
                         * Constructs a new RuntimeAcceleratorConfig.
                         * @memberof google.cloud.notebooks.v1
                         * @classdesc Represents a RuntimeAcceleratorConfig.
                         * @implements IRuntimeAcceleratorConfig
                         * @constructor
                         * @param {google.cloud.notebooks.v1.IRuntimeAcceleratorConfig=} [properties] Properties to set
                         */
                        function RuntimeAcceleratorConfig(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * RuntimeAcceleratorConfig type.
                         * @member {google.cloud.notebooks.v1.RuntimeAcceleratorConfig.AcceleratorType} type
                         * @memberof google.cloud.notebooks.v1.RuntimeAcceleratorConfig
                         * @instance
                         */
                        RuntimeAcceleratorConfig.prototype.type = 0;
    
                        /**
                         * RuntimeAcceleratorConfig coreCount.
                         * @member {number|Long} coreCount
                         * @memberof google.cloud.notebooks.v1.RuntimeAcceleratorConfig
                         * @instance
                         */
                        RuntimeAcceleratorConfig.prototype.coreCount = $util.Long ? $util.Long.fromBits(0,0,false) : 0;
    
                        /**
                         * Creates a new RuntimeAcceleratorConfig instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.notebooks.v1.RuntimeAcceleratorConfig
                         * @static
                         * @param {google.cloud.notebooks.v1.IRuntimeAcceleratorConfig=} [properties] Properties to set
                         * @returns {google.cloud.notebooks.v1.RuntimeAcceleratorConfig} RuntimeAcceleratorConfig instance
                         */
                        RuntimeAcceleratorConfig.create = function create(properties) {
                            return new RuntimeAcceleratorConfig(properties);
                        };
    
                        /**
                         * Encodes the specified RuntimeAcceleratorConfig message. Does not implicitly {@link google.cloud.notebooks.v1.RuntimeAcceleratorConfig.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.notebooks.v1.RuntimeAcceleratorConfig
                         * @static
                         * @param {google.cloud.notebooks.v1.IRuntimeAcceleratorConfig} message RuntimeAcceleratorConfig message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        RuntimeAcceleratorConfig.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.type != null && Object.hasOwnProperty.call(message, "type"))
                                writer.uint32(/* id 1, wireType 0 =*/8).int32(message.type);
                            if (message.coreCount != null && Object.hasOwnProperty.call(message, "coreCount"))
                                writer.uint32(/* id 2, wireType 0 =*/16).int64(message.coreCount);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified RuntimeAcceleratorConfig message, length delimited. Does not implicitly {@link google.cloud.notebooks.v1.RuntimeAcceleratorConfig.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.notebooks.v1.RuntimeAcceleratorConfig
                         * @static
                         * @param {google.cloud.notebooks.v1.IRuntimeAcceleratorConfig} message RuntimeAcceleratorConfig message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        RuntimeAcceleratorConfig.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a RuntimeAcceleratorConfig message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.notebooks.v1.RuntimeAcceleratorConfig
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.notebooks.v1.RuntimeAcceleratorConfig} RuntimeAcceleratorConfig
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        RuntimeAcceleratorConfig.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.notebooks.v1.RuntimeAcceleratorConfig();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.type = reader.int32();
                                        break;
                                    }
                                case 2: {
                                        message.coreCount = reader.int64();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a RuntimeAcceleratorConfig message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.notebooks.v1.RuntimeAcceleratorConfig
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.notebooks.v1.RuntimeAcceleratorConfig} RuntimeAcceleratorConfig
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        RuntimeAcceleratorConfig.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a RuntimeAcceleratorConfig message.
                         * @function verify
                         * @memberof google.cloud.notebooks.v1.RuntimeAcceleratorConfig
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        RuntimeAcceleratorConfig.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.type != null && message.hasOwnProperty("type"))
                                switch (message.type) {
                                default:
                                    return "type: enum value expected";
                                case 0:
                                case 1:
                                case 2:
                                case 3:
                                case 4:
                                case 5:
                                case 6:
                                case 7:
                                case 8:
                                case 9:
                                case 10:
                                case 11:
                                    break;
                                }
                            if (message.coreCount != null && message.hasOwnProperty("coreCount"))
                                if (!$util.isInteger(message.coreCount) && !(message.coreCount && $util.isInteger(message.coreCount.low) && $util.isInteger(message.coreCount.high)))
                                    return "coreCount: integer|Long expected";
                            return null;
                        };
    
                        /**
                         * Creates a RuntimeAcceleratorConfig message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.notebooks.v1.RuntimeAcceleratorConfig
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.notebooks.v1.RuntimeAcceleratorConfig} RuntimeAcceleratorConfig
                         */
                        RuntimeAcceleratorConfig.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.notebooks.v1.RuntimeAcceleratorConfig)
                                return object;
                            var message = new $root.google.cloud.notebooks.v1.RuntimeAcceleratorConfig();
                            switch (object.type) {
                            default:
                                if (typeof object.type === "number") {
                                    message.type = object.type;
                                    break;
                                }
                                break;
                            case "ACCELERATOR_TYPE_UNSPECIFIED":
                            case 0:
                                message.type = 0;
                                break;
                            case "NVIDIA_TESLA_K80":
                            case 1:
                                message.type = 1;
                                break;
                            case "NVIDIA_TESLA_P100":
                            case 2:
                                message.type = 2;
                                break;
                            case "NVIDIA_TESLA_V100":
                            case 3:
                                message.type = 3;
                                break;
                            case "NVIDIA_TESLA_P4":
                            case 4:
                                message.type = 4;
                                break;
                            case "NVIDIA_TESLA_T4":
                            case 5:
                                message.type = 5;
                                break;
                            case "NVIDIA_TESLA_A100":
                            case 6:
                                message.type = 6;
                                break;
                            case "TPU_V2":
                            case 7:
                                message.type = 7;
                                break;
                            case "TPU_V3":
                            case 8:
                                message.type = 8;
                                break;
                            case "NVIDIA_TESLA_T4_VWS":
                            case 9:
                                message.type = 9;
                                break;
                            case "NVIDIA_TESLA_P100_VWS":
                            case 10:
                                message.type = 10;
                                break;
                            case "NVIDIA_TESLA_P4_VWS":
                            case 11:
                                message.type = 11;
                                break;
                            }
                            if (object.coreCount != null)
                                if ($util.Long)
                                    (message.coreCount = $util.Long.fromValue(object.coreCount)).unsigned = false;
                                else if (typeof object.coreCount === "string")
                                    message.coreCount = parseInt(object.coreCount, 10);
                                else if (typeof object.coreCount === "number")
                                    message.coreCount = object.coreCount;
                                else if (typeof object.coreCount === "object")
                                    message.coreCount = new $util.LongBits(object.coreCount.low >>> 0, object.coreCount.high >>> 0).toNumber();
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a RuntimeAcceleratorConfig message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.notebooks.v1.RuntimeAcceleratorConfig
                         * @static
                         * @param {google.cloud.notebooks.v1.RuntimeAcceleratorConfig} message RuntimeAcceleratorConfig
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        RuntimeAcceleratorConfig.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.type = options.enums === String ? "ACCELERATOR_TYPE_UNSPECIFIED" : 0;
                                if ($util.Long) {
                                    var long = new $util.Long(0, 0, false);
                                    object.coreCount = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                                } else
                                    object.coreCount = options.longs === String ? "0" : 0;
                            }
                            if (message.type != null && message.hasOwnProperty("type"))
                                object.type = options.enums === String ? $root.google.cloud.notebooks.v1.RuntimeAcceleratorConfig.AcceleratorType[message.type] === undefined ? message.type : $root.google.cloud.notebooks.v1.RuntimeAcceleratorConfig.AcceleratorType[message.type] : message.type;
                            if (message.coreCount != null && message.hasOwnProperty("coreCount"))
                                if (typeof message.coreCount === "number")
                                    object.coreCount = options.longs === String ? String(message.coreCount) : message.coreCount;
                                else
                                    object.coreCount = options.longs === String ? $util.Long.prototype.toString.call(message.coreCount) : options.longs === Number ? new $util.LongBits(message.coreCount.low >>> 0, message.coreCount.high >>> 0).toNumber() : message.coreCount;
                            return object;
                        };
    
                        /**
                         * Converts this RuntimeAcceleratorConfig to JSON.
                         * @function toJSON
                         * @memberof google.cloud.notebooks.v1.RuntimeAcceleratorConfig
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        RuntimeAcceleratorConfig.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for RuntimeAcceleratorConfig
                         * @function getTypeUrl
                         * @memberof google.cloud.notebooks.v1.RuntimeAcceleratorConfig
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        RuntimeAcceleratorConfig.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.notebooks.v1.RuntimeAcceleratorConfig";
                        };
    
                        /**
                         * AcceleratorType enum.
                         * @name google.cloud.notebooks.v1.RuntimeAcceleratorConfig.AcceleratorType
                         * @enum {number}
                         * @property {number} ACCELERATOR_TYPE_UNSPECIFIED=0 ACCELERATOR_TYPE_UNSPECIFIED value
                         * @property {number} NVIDIA_TESLA_K80=1 NVIDIA_TESLA_K80 value
                         * @property {number} NVIDIA_TESLA_P100=2 NVIDIA_TESLA_P100 value
                         * @property {number} NVIDIA_TESLA_V100=3 NVIDIA_TESLA_V100 value
                         * @property {number} NVIDIA_TESLA_P4=4 NVIDIA_TESLA_P4 value
                         * @property {number} NVIDIA_TESLA_T4=5 NVIDIA_TESLA_T4 value
                         * @property {number} NVIDIA_TESLA_A100=6 NVIDIA_TESLA_A100 value
                         * @property {number} TPU_V2=7 TPU_V2 value
                         * @property {number} TPU_V3=8 TPU_V3 value
                         * @property {number} NVIDIA_TESLA_T4_VWS=9 NVIDIA_TESLA_T4_VWS value
                         * @property {number} NVIDIA_TESLA_P100_VWS=10 NVIDIA_TESLA_P100_VWS value
                         * @property {number} NVIDIA_TESLA_P4_VWS=11 NVIDIA_TESLA_P4_VWS value
                         */
                        RuntimeAcceleratorConfig.AcceleratorType = (function() {
                            var valuesById = {}, values = Object.create(valuesById);
                            values[valuesById[0] = "ACCELERATOR_TYPE_UNSPECIFIED"] = 0;
                            values[valuesById[1] = "NVIDIA_TESLA_K80"] = 1;
                            values[valuesById[2] = "NVIDIA_TESLA_P100"] = 2;
                            values[valuesById[3] = "NVIDIA_TESLA_V100"] = 3;
                            values[valuesById[4] = "NVIDIA_TESLA_P4"] = 4;
                            values[valuesById[5] = "NVIDIA_TESLA_T4"] = 5;
                            values[valuesById[6] = "NVIDIA_TESLA_A100"] = 6;
                            values[valuesById[7] = "TPU_V2"] = 7;
                            values[valuesById[8] = "TPU_V3"] = 8;
                            values[valuesById[9] = "NVIDIA_TESLA_T4_VWS"] = 9;
                            values[valuesById[10] = "NVIDIA_TESLA_P100_VWS"] = 10;
                            values[valuesById[11] = "NVIDIA_TESLA_P4_VWS"] = 11;
                            return values;
                        })();
    
                        return RuntimeAcceleratorConfig;
                    })();
    
                    v1.EncryptionConfig = (function() {
    
                        /**
                         * Properties of an EncryptionConfig.
                         * @memberof google.cloud.notebooks.v1
                         * @interface IEncryptionConfig
                         * @property {string|null} [kmsKey] EncryptionConfig kmsKey
                         */
    
                        /**
                         * Constructs a new EncryptionConfig.
                         * @memberof google.cloud.notebooks.v1
                         * @classdesc Represents an EncryptionConfig.
                         * @implements IEncryptionConfig
                         * @constructor
                         * @param {google.cloud.notebooks.v1.IEncryptionConfig=} [properties] Properties to set
                         */
                        function EncryptionConfig(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * EncryptionConfig kmsKey.
                         * @member {string} kmsKey
                         * @memberof google.cloud.notebooks.v1.EncryptionConfig
                         * @instance
                         */
                        EncryptionConfig.prototype.kmsKey = "";
    
                        /**
                         * Creates a new EncryptionConfig instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.notebooks.v1.EncryptionConfig
                         * @static
                         * @param {google.cloud.notebooks.v1.IEncryptionConfig=} [properties] Properties to set
                         * @returns {google.cloud.notebooks.v1.EncryptionConfig} EncryptionConfig instance
                         */
                        EncryptionConfig.create = function create(properties) {
                            return new EncryptionConfig(properties);
                        };
    
                        /**
                         * Encodes the specified EncryptionConfig message. Does not implicitly {@link google.cloud.notebooks.v1.EncryptionConfig.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.notebooks.v1.EncryptionConfig
                         * @static
                         * @param {google.cloud.notebooks.v1.IEncryptionConfig} message EncryptionConfig message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        EncryptionConfig.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.kmsKey != null && Object.hasOwnProperty.call(message, "kmsKey"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.kmsKey);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified EncryptionConfig message, length delimited. Does not implicitly {@link google.cloud.notebooks.v1.EncryptionConfig.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.notebooks.v1.EncryptionConfig
                         * @static
                         * @param {google.cloud.notebooks.v1.IEncryptionConfig} message EncryptionConfig message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        EncryptionConfig.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes an EncryptionConfig message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.notebooks.v1.EncryptionConfig
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.notebooks.v1.EncryptionConfig} EncryptionConfig
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        EncryptionConfig.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.notebooks.v1.EncryptionConfig();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.kmsKey = reader.string();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes an EncryptionConfig message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.notebooks.v1.EncryptionConfig
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.notebooks.v1.EncryptionConfig} EncryptionConfig
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        EncryptionConfig.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies an EncryptionConfig message.
                         * @function verify
                         * @memberof google.cloud.notebooks.v1.EncryptionConfig
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        EncryptionConfig.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.kmsKey != null && message.hasOwnProperty("kmsKey"))
                                if (!$util.isString(message.kmsKey))
                                    return "kmsKey: string expected";
                            return null;
                        };
    
                        /**
                         * Creates an EncryptionConfig message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.notebooks.v1.EncryptionConfig
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.notebooks.v1.EncryptionConfig} EncryptionConfig
                         */
                        EncryptionConfig.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.notebooks.v1.EncryptionConfig)
                                return object;
                            var message = new $root.google.cloud.notebooks.v1.EncryptionConfig();
                            if (object.kmsKey != null)
                                message.kmsKey = String(object.kmsKey);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from an EncryptionConfig message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.notebooks.v1.EncryptionConfig
                         * @static
                         * @param {google.cloud.notebooks.v1.EncryptionConfig} message EncryptionConfig
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        EncryptionConfig.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults)
                                object.kmsKey = "";
                            if (message.kmsKey != null && message.hasOwnProperty("kmsKey"))
                                object.kmsKey = message.kmsKey;
                            return object;
                        };
    
                        /**
                         * Converts this EncryptionConfig to JSON.
                         * @function toJSON
                         * @memberof google.cloud.notebooks.v1.EncryptionConfig
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        EncryptionConfig.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for EncryptionConfig
                         * @function getTypeUrl
                         * @memberof google.cloud.notebooks.v1.EncryptionConfig
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        EncryptionConfig.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.notebooks.v1.EncryptionConfig";
                        };
    
                        return EncryptionConfig;
                    })();
    
                    v1.LocalDisk = (function() {
    
                        /**
                         * Properties of a LocalDisk.
                         * @memberof google.cloud.notebooks.v1
                         * @interface ILocalDisk
                         * @property {boolean|null} [autoDelete] LocalDisk autoDelete
                         * @property {boolean|null} [boot] LocalDisk boot
                         * @property {string|null} [deviceName] LocalDisk deviceName
                         * @property {Array.<google.cloud.notebooks.v1.LocalDisk.IRuntimeGuestOsFeature>|null} [guestOsFeatures] LocalDisk guestOsFeatures
                         * @property {number|null} [index] LocalDisk index
                         * @property {google.cloud.notebooks.v1.ILocalDiskInitializeParams|null} [initializeParams] LocalDisk initializeParams
                         * @property {string|null} ["interface"] LocalDisk interface
                         * @property {string|null} [kind] LocalDisk kind
                         * @property {Array.<string>|null} [licenses] LocalDisk licenses
                         * @property {string|null} [mode] LocalDisk mode
                         * @property {string|null} [source] LocalDisk source
                         * @property {string|null} [type] LocalDisk type
                         */
    
                        /**
                         * Constructs a new LocalDisk.
                         * @memberof google.cloud.notebooks.v1
                         * @classdesc Represents a LocalDisk.
                         * @implements ILocalDisk
                         * @constructor
                         * @param {google.cloud.notebooks.v1.ILocalDisk=} [properties] Properties to set
                         */
                        function LocalDisk(properties) {
                            this.guestOsFeatures = [];
                            this.licenses = [];
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * LocalDisk autoDelete.
                         * @member {boolean} autoDelete
                         * @memberof google.cloud.notebooks.v1.LocalDisk
                         * @instance
                         */
                        LocalDisk.prototype.autoDelete = false;
    
                        /**
                         * LocalDisk boot.
                         * @member {boolean} boot
                         * @memberof google.cloud.notebooks.v1.LocalDisk
                         * @instance
                         */
                        LocalDisk.prototype.boot = false;
    
                        /**
                         * LocalDisk deviceName.
                         * @member {string} deviceName
                         * @memberof google.cloud.notebooks.v1.LocalDisk
                         * @instance
                         */
                        LocalDisk.prototype.deviceName = "";
    
                        /**
                         * LocalDisk guestOsFeatures.
                         * @member {Array.<google.cloud.notebooks.v1.LocalDisk.IRuntimeGuestOsFeature>} guestOsFeatures
                         * @memberof google.cloud.notebooks.v1.LocalDisk
                         * @instance
                         */
                        LocalDisk.prototype.guestOsFeatures = $util.emptyArray;
    
                        /**
                         * LocalDisk index.
                         * @member {number} index
                         * @memberof google.cloud.notebooks.v1.LocalDisk
                         * @instance
                         */
                        LocalDisk.prototype.index = 0;
    
                        /**
                         * LocalDisk initializeParams.
                         * @member {google.cloud.notebooks.v1.ILocalDiskInitializeParams|null|undefined} initializeParams
                         * @memberof google.cloud.notebooks.v1.LocalDisk
                         * @instance
                         */
                        LocalDisk.prototype.initializeParams = null;
    
                        /**
                         * LocalDisk interface.
                         * @member {string} interface
                         * @memberof google.cloud.notebooks.v1.LocalDisk
                         * @instance
                         */
                        LocalDisk.prototype["interface"] = "";
    
                        /**
                         * LocalDisk kind.
                         * @member {string} kind
                         * @memberof google.cloud.notebooks.v1.LocalDisk
                         * @instance
                         */
                        LocalDisk.prototype.kind = "";
    
                        /**
                         * LocalDisk licenses.
                         * @member {Array.<string>} licenses
                         * @memberof google.cloud.notebooks.v1.LocalDisk
                         * @instance
                         */
                        LocalDisk.prototype.licenses = $util.emptyArray;
    
                        /**
                         * LocalDisk mode.
                         * @member {string} mode
                         * @memberof google.cloud.notebooks.v1.LocalDisk
                         * @instance
                         */
                        LocalDisk.prototype.mode = "";
    
                        /**
                         * LocalDisk source.
                         * @member {string} source
                         * @memberof google.cloud.notebooks.v1.LocalDisk
                         * @instance
                         */
                        LocalDisk.prototype.source = "";
    
                        /**
                         * LocalDisk type.
                         * @member {string} type
                         * @memberof google.cloud.notebooks.v1.LocalDisk
                         * @instance
                         */
                        LocalDisk.prototype.type = "";
    
                        /**
                         * Creates a new LocalDisk instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.notebooks.v1.LocalDisk
                         * @static
                         * @param {google.cloud.notebooks.v1.ILocalDisk=} [properties] Properties to set
                         * @returns {google.cloud.notebooks.v1.LocalDisk} LocalDisk instance
                         */
                        LocalDisk.create = function create(properties) {
                            return new LocalDisk(properties);
                        };
    
                        /**
                         * Encodes the specified LocalDisk message. Does not implicitly {@link google.cloud.notebooks.v1.LocalDisk.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.notebooks.v1.LocalDisk
                         * @static
                         * @param {google.cloud.notebooks.v1.ILocalDisk} message LocalDisk message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        LocalDisk.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.autoDelete != null && Object.hasOwnProperty.call(message, "autoDelete"))
                                writer.uint32(/* id 1, wireType 0 =*/8).bool(message.autoDelete);
                            if (message.boot != null && Object.hasOwnProperty.call(message, "boot"))
                                writer.uint32(/* id 2, wireType 0 =*/16).bool(message.boot);
                            if (message.deviceName != null && Object.hasOwnProperty.call(message, "deviceName"))
                                writer.uint32(/* id 3, wireType 2 =*/26).string(message.deviceName);
                            if (message.guestOsFeatures != null && message.guestOsFeatures.length)
                                for (var i = 0; i < message.guestOsFeatures.length; ++i)
                                    $root.google.cloud.notebooks.v1.LocalDisk.RuntimeGuestOsFeature.encode(message.guestOsFeatures[i], writer.uint32(/* id 4, wireType 2 =*/34).fork()).ldelim();
                            if (message.index != null && Object.hasOwnProperty.call(message, "index"))
                                writer.uint32(/* id 5, wireType 0 =*/40).int32(message.index);
                            if (message.initializeParams != null && Object.hasOwnProperty.call(message, "initializeParams"))
                                $root.google.cloud.notebooks.v1.LocalDiskInitializeParams.encode(message.initializeParams, writer.uint32(/* id 6, wireType 2 =*/50).fork()).ldelim();
                            if (message["interface"] != null && Object.hasOwnProperty.call(message, "interface"))
                                writer.uint32(/* id 7, wireType 2 =*/58).string(message["interface"]);
                            if (message.kind != null && Object.hasOwnProperty.call(message, "kind"))
                                writer.uint32(/* id 8, wireType 2 =*/66).string(message.kind);
                            if (message.licenses != null && message.licenses.length)
                                for (var i = 0; i < message.licenses.length; ++i)
                                    writer.uint32(/* id 9, wireType 2 =*/74).string(message.licenses[i]);
                            if (message.mode != null && Object.hasOwnProperty.call(message, "mode"))
                                writer.uint32(/* id 10, wireType 2 =*/82).string(message.mode);
                            if (message.source != null && Object.hasOwnProperty.call(message, "source"))
                                writer.uint32(/* id 11, wireType 2 =*/90).string(message.source);
                            if (message.type != null && Object.hasOwnProperty.call(message, "type"))
                                writer.uint32(/* id 12, wireType 2 =*/98).string(message.type);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified LocalDisk message, length delimited. Does not implicitly {@link google.cloud.notebooks.v1.LocalDisk.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.notebooks.v1.LocalDisk
                         * @static
                         * @param {google.cloud.notebooks.v1.ILocalDisk} message LocalDisk message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        LocalDisk.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a LocalDisk message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.notebooks.v1.LocalDisk
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.notebooks.v1.LocalDisk} LocalDisk
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        LocalDisk.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.notebooks.v1.LocalDisk();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.autoDelete = reader.bool();
                                        break;
                                    }
                                case 2: {
                                        message.boot = reader.bool();
                                        break;
                                    }
                                case 3: {
                                        message.deviceName = reader.string();
                                        break;
                                    }
                                case 4: {
                                        if (!(message.guestOsFeatures && message.guestOsFeatures.length))
                                            message.guestOsFeatures = [];
                                        message.guestOsFeatures.push($root.google.cloud.notebooks.v1.LocalDisk.RuntimeGuestOsFeature.decode(reader, reader.uint32()));
                                        break;
                                    }
                                case 5: {
                                        message.index = reader.int32();
                                        break;
                                    }
                                case 6: {
                                        message.initializeParams = $root.google.cloud.notebooks.v1.LocalDiskInitializeParams.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 7: {
                                        message["interface"] = reader.string();
                                        break;
                                    }
                                case 8: {
                                        message.kind = reader.string();
                                        break;
                                    }
                                case 9: {
                                        if (!(message.licenses && message.licenses.length))
                                            message.licenses = [];
                                        message.licenses.push(reader.string());
                                        break;
                                    }
                                case 10: {
                                        message.mode = reader.string();
                                        break;
                                    }
                                case 11: {
                                        message.source = reader.string();
                                        break;
                                    }
                                case 12: {
                                        message.type = reader.string();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a LocalDisk message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.notebooks.v1.LocalDisk
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.notebooks.v1.LocalDisk} LocalDisk
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        LocalDisk.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a LocalDisk message.
                         * @function verify
                         * @memberof google.cloud.notebooks.v1.LocalDisk
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        LocalDisk.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.autoDelete != null && message.hasOwnProperty("autoDelete"))
                                if (typeof message.autoDelete !== "boolean")
                                    return "autoDelete: boolean expected";
                            if (message.boot != null && message.hasOwnProperty("boot"))
                                if (typeof message.boot !== "boolean")
                                    return "boot: boolean expected";
                            if (message.deviceName != null && message.hasOwnProperty("deviceName"))
                                if (!$util.isString(message.deviceName))
                                    return "deviceName: string expected";
                            if (message.guestOsFeatures != null && message.hasOwnProperty("guestOsFeatures")) {
                                if (!Array.isArray(message.guestOsFeatures))
                                    return "guestOsFeatures: array expected";
                                for (var i = 0; i < message.guestOsFeatures.length; ++i) {
                                    var error = $root.google.cloud.notebooks.v1.LocalDisk.RuntimeGuestOsFeature.verify(message.guestOsFeatures[i]);
                                    if (error)
                                        return "guestOsFeatures." + error;
                                }
                            }
                            if (message.index != null && message.hasOwnProperty("index"))
                                if (!$util.isInteger(message.index))
                                    return "index: integer expected";
                            if (message.initializeParams != null && message.hasOwnProperty("initializeParams")) {
                                var error = $root.google.cloud.notebooks.v1.LocalDiskInitializeParams.verify(message.initializeParams);
                                if (error)
                                    return "initializeParams." + error;
                            }
                            if (message["interface"] != null && message.hasOwnProperty("interface"))
                                if (!$util.isString(message["interface"]))
                                    return "interface: string expected";
                            if (message.kind != null && message.hasOwnProperty("kind"))
                                if (!$util.isString(message.kind))
                                    return "kind: string expected";
                            if (message.licenses != null && message.hasOwnProperty("licenses")) {
                                if (!Array.isArray(message.licenses))
                                    return "licenses: array expected";
                                for (var i = 0; i < message.licenses.length; ++i)
                                    if (!$util.isString(message.licenses[i]))
                                        return "licenses: string[] expected";
                            }
                            if (message.mode != null && message.hasOwnProperty("mode"))
                                if (!$util.isString(message.mode))
                                    return "mode: string expected";
                            if (message.source != null && message.hasOwnProperty("source"))
                                if (!$util.isString(message.source))
                                    return "source: string expected";
                            if (message.type != null && message.hasOwnProperty("type"))
                                if (!$util.isString(message.type))
                                    return "type: string expected";
                            return null;
                        };
    
                        /**
                         * Creates a LocalDisk message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.notebooks.v1.LocalDisk
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.notebooks.v1.LocalDisk} LocalDisk
                         */
                        LocalDisk.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.notebooks.v1.LocalDisk)
                                return object;
                            var message = new $root.google.cloud.notebooks.v1.LocalDisk();
                            if (object.autoDelete != null)
                                message.autoDelete = Boolean(object.autoDelete);
                            if (object.boot != null)
                                message.boot = Boolean(object.boot);
                            if (object.deviceName != null)
                                message.deviceName = String(object.deviceName);
                            if (object.guestOsFeatures) {
                                if (!Array.isArray(object.guestOsFeatures))
                                    throw TypeError(".google.cloud.notebooks.v1.LocalDisk.guestOsFeatures: array expected");
                                message.guestOsFeatures = [];
                                for (var i = 0; i < object.guestOsFeatures.length; ++i) {
                                    if (typeof object.guestOsFeatures[i] !== "object")
                                        throw TypeError(".google.cloud.notebooks.v1.LocalDisk.guestOsFeatures: object expected");
                                    message.guestOsFeatures[i] = $root.google.cloud.notebooks.v1.LocalDisk.RuntimeGuestOsFeature.fromObject(object.guestOsFeatures[i]);
                                }
                            }
                            if (object.index != null)
                                message.index = object.index | 0;
                            if (object.initializeParams != null) {
                                if (typeof object.initializeParams !== "object")
                                    throw TypeError(".google.cloud.notebooks.v1.LocalDisk.initializeParams: object expected");
                                message.initializeParams = $root.google.cloud.notebooks.v1.LocalDiskInitializeParams.fromObject(object.initializeParams);
                            }
                            if (object["interface"] != null)
                                message["interface"] = String(object["interface"]);
                            if (object.kind != null)
                                message.kind = String(object.kind);
                            if (object.licenses) {
                                if (!Array.isArray(object.licenses))
                                    throw TypeError(".google.cloud.notebooks.v1.LocalDisk.licenses: array expected");
                                message.licenses = [];
                                for (var i = 0; i < object.licenses.length; ++i)
                                    message.licenses[i] = String(object.licenses[i]);
                            }
                            if (object.mode != null)
                                message.mode = String(object.mode);
                            if (object.source != null)
                                message.source = String(object.source);
                            if (object.type != null)
                                message.type = String(object.type);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a LocalDisk message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.notebooks.v1.LocalDisk
                         * @static
                         * @param {google.cloud.notebooks.v1.LocalDisk} message LocalDisk
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        LocalDisk.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.arrays || options.defaults) {
                                object.guestOsFeatures = [];
                                object.licenses = [];
                            }
                            if (options.defaults) {
                                object.autoDelete = false;
                                object.boot = false;
                                object.deviceName = "";
                                object.index = 0;
                                object.initializeParams = null;
                                object["interface"] = "";
                                object.kind = "";
                                object.mode = "";
                                object.source = "";
                                object.type = "";
                            }
                            if (message.autoDelete != null && message.hasOwnProperty("autoDelete"))
                                object.autoDelete = message.autoDelete;
                            if (message.boot != null && message.hasOwnProperty("boot"))
                                object.boot = message.boot;
                            if (message.deviceName != null && message.hasOwnProperty("deviceName"))
                                object.deviceName = message.deviceName;
                            if (message.guestOsFeatures && message.guestOsFeatures.length) {
                                object.guestOsFeatures = [];
                                for (var j = 0; j < message.guestOsFeatures.length; ++j)
                                    object.guestOsFeatures[j] = $root.google.cloud.notebooks.v1.LocalDisk.RuntimeGuestOsFeature.toObject(message.guestOsFeatures[j], options);
                            }
                            if (message.index != null && message.hasOwnProperty("index"))
                                object.index = message.index;
                            if (message.initializeParams != null && message.hasOwnProperty("initializeParams"))
                                object.initializeParams = $root.google.cloud.notebooks.v1.LocalDiskInitializeParams.toObject(message.initializeParams, options);
                            if (message["interface"] != null && message.hasOwnProperty("interface"))
                                object["interface"] = message["interface"];
                            if (message.kind != null && message.hasOwnProperty("kind"))
                                object.kind = message.kind;
                            if (message.licenses && message.licenses.length) {
                                object.licenses = [];
                                for (var j = 0; j < message.licenses.length; ++j)
                                    object.licenses[j] = message.licenses[j];
                            }
                            if (message.mode != null && message.hasOwnProperty("mode"))
                                object.mode = message.mode;
                            if (message.source != null && message.hasOwnProperty("source"))
                                object.source = message.source;
                            if (message.type != null && message.hasOwnProperty("type"))
                                object.type = message.type;
                            return object;
                        };
    
                        /**
                         * Converts this LocalDisk to JSON.
                         * @function toJSON
                         * @memberof google.cloud.notebooks.v1.LocalDisk
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        LocalDisk.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for LocalDisk
                         * @function getTypeUrl
                         * @memberof google.cloud.notebooks.v1.LocalDisk
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        LocalDisk.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.notebooks.v1.LocalDisk";
                        };
    
                        LocalDisk.RuntimeGuestOsFeature = (function() {
    
                            /**
                             * Properties of a RuntimeGuestOsFeature.
                             * @memberof google.cloud.notebooks.v1.LocalDisk
                             * @interface IRuntimeGuestOsFeature
                             * @property {string|null} [type] RuntimeGuestOsFeature type
                             */
    
                            /**
                             * Constructs a new RuntimeGuestOsFeature.
                             * @memberof google.cloud.notebooks.v1.LocalDisk
                             * @classdesc Represents a RuntimeGuestOsFeature.
                             * @implements IRuntimeGuestOsFeature
                             * @constructor
                             * @param {google.cloud.notebooks.v1.LocalDisk.IRuntimeGuestOsFeature=} [properties] Properties to set
                             */
                            function RuntimeGuestOsFeature(properties) {
                                if (properties)
                                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                        if (properties[keys[i]] != null)
                                            this[keys[i]] = properties[keys[i]];
                            }
    
                            /**
                             * RuntimeGuestOsFeature type.
                             * @member {string} type
                             * @memberof google.cloud.notebooks.v1.LocalDisk.RuntimeGuestOsFeature
                             * @instance
                             */
                            RuntimeGuestOsFeature.prototype.type = "";
    
                            /**
                             * Creates a new RuntimeGuestOsFeature instance using the specified properties.
                             * @function create
                             * @memberof google.cloud.notebooks.v1.LocalDisk.RuntimeGuestOsFeature
                             * @static
                             * @param {google.cloud.notebooks.v1.LocalDisk.IRuntimeGuestOsFeature=} [properties] Properties to set
                             * @returns {google.cloud.notebooks.v1.LocalDisk.RuntimeGuestOsFeature} RuntimeGuestOsFeature instance
                             */
                            RuntimeGuestOsFeature.create = function create(properties) {
                                return new RuntimeGuestOsFeature(properties);
                            };
    
                            /**
                             * Encodes the specified RuntimeGuestOsFeature message. Does not implicitly {@link google.cloud.notebooks.v1.LocalDisk.RuntimeGuestOsFeature.verify|verify} messages.
                             * @function encode
                             * @memberof google.cloud.notebooks.v1.LocalDisk.RuntimeGuestOsFeature
                             * @static
                             * @param {google.cloud.notebooks.v1.LocalDisk.IRuntimeGuestOsFeature} message RuntimeGuestOsFeature message or plain object to encode
                             * @param {$protobuf.Writer} [writer] Writer to encode to
                             * @returns {$protobuf.Writer} Writer
                             */
                            RuntimeGuestOsFeature.encode = function encode(message, writer) {
                                if (!writer)
                                    writer = $Writer.create();
                                if (message.type != null && Object.hasOwnProperty.call(message, "type"))
                                    writer.uint32(/* id 1, wireType 2 =*/10).string(message.type);
                                return writer;
                            };
    
                            /**
                             * Encodes the specified RuntimeGuestOsFeature message, length delimited. Does not implicitly {@link google.cloud.notebooks.v1.LocalDisk.RuntimeGuestOsFeature.verify|verify} messages.
                             * @function encodeDelimited
                             * @memberof google.cloud.notebooks.v1.LocalDisk.RuntimeGuestOsFeature
                             * @static
                             * @param {google.cloud.notebooks.v1.LocalDisk.IRuntimeGuestOsFeature} message RuntimeGuestOsFeature message or plain object to encode
                             * @param {$protobuf.Writer} [writer] Writer to encode to
                             * @returns {$protobuf.Writer} Writer
                             */
                            RuntimeGuestOsFeature.encodeDelimited = function encodeDelimited(message, writer) {
                                return this.encode(message, writer).ldelim();
                            };
    
                            /**
                             * Decodes a RuntimeGuestOsFeature message from the specified reader or buffer.
                             * @function decode
                             * @memberof google.cloud.notebooks.v1.LocalDisk.RuntimeGuestOsFeature
                             * @static
                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                             * @param {number} [length] Message length if known beforehand
                             * @returns {google.cloud.notebooks.v1.LocalDisk.RuntimeGuestOsFeature} RuntimeGuestOsFeature
                             * @throws {Error} If the payload is not a reader or valid buffer
                             * @throws {$protobuf.util.ProtocolError} If required fields are missing
                             */
                            RuntimeGuestOsFeature.decode = function decode(reader, length) {
                                if (!(reader instanceof $Reader))
                                    reader = $Reader.create(reader);
                                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.notebooks.v1.LocalDisk.RuntimeGuestOsFeature();
                                while (reader.pos < end) {
                                    var tag = reader.uint32();
                                    switch (tag >>> 3) {
                                    case 1: {
                                            message.type = reader.string();
                                            break;
                                        }
                                    default:
                                        reader.skipType(tag & 7);
                                        break;
                                    }
                                }
                                return message;
                            };
    
                            /**
                             * Decodes a RuntimeGuestOsFeature message from the specified reader or buffer, length delimited.
                             * @function decodeDelimited
                             * @memberof google.cloud.notebooks.v1.LocalDisk.RuntimeGuestOsFeature
                             * @static
                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                             * @returns {google.cloud.notebooks.v1.LocalDisk.RuntimeGuestOsFeature} RuntimeGuestOsFeature
                             * @throws {Error} If the payload is not a reader or valid buffer
                             * @throws {$protobuf.util.ProtocolError} If required fields are missing
                             */
                            RuntimeGuestOsFeature.decodeDelimited = function decodeDelimited(reader) {
                                if (!(reader instanceof $Reader))
                                    reader = new $Reader(reader);
                                return this.decode(reader, reader.uint32());
                            };
    
                            /**
                             * Verifies a RuntimeGuestOsFeature message.
                             * @function verify
                             * @memberof google.cloud.notebooks.v1.LocalDisk.RuntimeGuestOsFeature
                             * @static
                             * @param {Object.<string,*>} message Plain object to verify
                             * @returns {string|null} `null` if valid, otherwise the reason why it is not
                             */
                            RuntimeGuestOsFeature.verify = function verify(message) {
                                if (typeof message !== "object" || message === null)
                                    return "object expected";
                                if (message.type != null && message.hasOwnProperty("type"))
                                    if (!$util.isString(message.type))
                                        return "type: string expected";
                                return null;
                            };
    
                            /**
                             * Creates a RuntimeGuestOsFeature message from a plain object. Also converts values to their respective internal types.
                             * @function fromObject
                             * @memberof google.cloud.notebooks.v1.LocalDisk.RuntimeGuestOsFeature
                             * @static
                             * @param {Object.<string,*>} object Plain object
                             * @returns {google.cloud.notebooks.v1.LocalDisk.RuntimeGuestOsFeature} RuntimeGuestOsFeature
                             */
                            RuntimeGuestOsFeature.fromObject = function fromObject(object) {
                                if (object instanceof $root.google.cloud.notebooks.v1.LocalDisk.RuntimeGuestOsFeature)
                                    return object;
                                var message = new $root.google.cloud.notebooks.v1.LocalDisk.RuntimeGuestOsFeature();
                                if (object.type != null)
                                    message.type = String(object.type);
                                return message;
                            };
    
                            /**
                             * Creates a plain object from a RuntimeGuestOsFeature message. Also converts values to other types if specified.
                             * @function toObject
                             * @memberof google.cloud.notebooks.v1.LocalDisk.RuntimeGuestOsFeature
                             * @static
                             * @param {google.cloud.notebooks.v1.LocalDisk.RuntimeGuestOsFeature} message RuntimeGuestOsFeature
                             * @param {$protobuf.IConversionOptions} [options] Conversion options
                             * @returns {Object.<string,*>} Plain object
                             */
                            RuntimeGuestOsFeature.toObject = function toObject(message, options) {
                                if (!options)
                                    options = {};
                                var object = {};
                                if (options.defaults)
                                    object.type = "";
                                if (message.type != null && message.hasOwnProperty("type"))
                                    object.type = message.type;
                                return object;
                            };
    
                            /**
                             * Converts this RuntimeGuestOsFeature to JSON.
                             * @function toJSON
                             * @memberof google.cloud.notebooks.v1.LocalDisk.RuntimeGuestOsFeature
                             * @instance
                             * @returns {Object.<string,*>} JSON object
                             */
                            RuntimeGuestOsFeature.prototype.toJSON = function toJSON() {
                                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                            };
    
                            /**
                             * Gets the default type url for RuntimeGuestOsFeature
                             * @function getTypeUrl
                             * @memberof google.cloud.notebooks.v1.LocalDisk.RuntimeGuestOsFeature
                             * @static
                             * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                             * @returns {string} The default type url
                             */
                            RuntimeGuestOsFeature.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                                if (typeUrlPrefix === undefined) {
                                    typeUrlPrefix = "type.googleapis.com";
                                }
                                return typeUrlPrefix + "/google.cloud.notebooks.v1.LocalDisk.RuntimeGuestOsFeature";
                            };
    
                            return RuntimeGuestOsFeature;
                        })();
    
                        return LocalDisk;
                    })();
    
                    v1.LocalDiskInitializeParams = (function() {
    
                        /**
                         * Properties of a LocalDiskInitializeParams.
                         * @memberof google.cloud.notebooks.v1
                         * @interface ILocalDiskInitializeParams
                         * @property {string|null} [description] LocalDiskInitializeParams description
                         * @property {string|null} [diskName] LocalDiskInitializeParams diskName
                         * @property {number|Long|null} [diskSizeGb] LocalDiskInitializeParams diskSizeGb
                         * @property {google.cloud.notebooks.v1.LocalDiskInitializeParams.DiskType|null} [diskType] LocalDiskInitializeParams diskType
                         * @property {Object.<string,string>|null} [labels] LocalDiskInitializeParams labels
                         */
    
                        /**
                         * Constructs a new LocalDiskInitializeParams.
                         * @memberof google.cloud.notebooks.v1
                         * @classdesc Represents a LocalDiskInitializeParams.
                         * @implements ILocalDiskInitializeParams
                         * @constructor
                         * @param {google.cloud.notebooks.v1.ILocalDiskInitializeParams=} [properties] Properties to set
                         */
                        function LocalDiskInitializeParams(properties) {
                            this.labels = {};
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * LocalDiskInitializeParams description.
                         * @member {string} description
                         * @memberof google.cloud.notebooks.v1.LocalDiskInitializeParams
                         * @instance
                         */
                        LocalDiskInitializeParams.prototype.description = "";
    
                        /**
                         * LocalDiskInitializeParams diskName.
                         * @member {string} diskName
                         * @memberof google.cloud.notebooks.v1.LocalDiskInitializeParams
                         * @instance
                         */
                        LocalDiskInitializeParams.prototype.diskName = "";
    
                        /**
                         * LocalDiskInitializeParams diskSizeGb.
                         * @member {number|Long} diskSizeGb
                         * @memberof google.cloud.notebooks.v1.LocalDiskInitializeParams
                         * @instance
                         */
                        LocalDiskInitializeParams.prototype.diskSizeGb = $util.Long ? $util.Long.fromBits(0,0,false) : 0;
    
                        /**
                         * LocalDiskInitializeParams diskType.
                         * @member {google.cloud.notebooks.v1.LocalDiskInitializeParams.DiskType} diskType
                         * @memberof google.cloud.notebooks.v1.LocalDiskInitializeParams
                         * @instance
                         */
                        LocalDiskInitializeParams.prototype.diskType = 0;
    
                        /**
                         * LocalDiskInitializeParams labels.
                         * @member {Object.<string,string>} labels
                         * @memberof google.cloud.notebooks.v1.LocalDiskInitializeParams
                         * @instance
                         */
                        LocalDiskInitializeParams.prototype.labels = $util.emptyObject;
    
                        /**
                         * Creates a new LocalDiskInitializeParams instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.notebooks.v1.LocalDiskInitializeParams
                         * @static
                         * @param {google.cloud.notebooks.v1.ILocalDiskInitializeParams=} [properties] Properties to set
                         * @returns {google.cloud.notebooks.v1.LocalDiskInitializeParams} LocalDiskInitializeParams instance
                         */
                        LocalDiskInitializeParams.create = function create(properties) {
                            return new LocalDiskInitializeParams(properties);
                        };
    
                        /**
                         * Encodes the specified LocalDiskInitializeParams message. Does not implicitly {@link google.cloud.notebooks.v1.LocalDiskInitializeParams.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.notebooks.v1.LocalDiskInitializeParams
                         * @static
                         * @param {google.cloud.notebooks.v1.ILocalDiskInitializeParams} message LocalDiskInitializeParams message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        LocalDiskInitializeParams.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.description != null && Object.hasOwnProperty.call(message, "description"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.description);
                            if (message.diskName != null && Object.hasOwnProperty.call(message, "diskName"))
                                writer.uint32(/* id 2, wireType 2 =*/18).string(message.diskName);
                            if (message.diskSizeGb != null && Object.hasOwnProperty.call(message, "diskSizeGb"))
                                writer.uint32(/* id 3, wireType 0 =*/24).int64(message.diskSizeGb);
                            if (message.diskType != null && Object.hasOwnProperty.call(message, "diskType"))
                                writer.uint32(/* id 4, wireType 0 =*/32).int32(message.diskType);
                            if (message.labels != null && Object.hasOwnProperty.call(message, "labels"))
                                for (var keys = Object.keys(message.labels), i = 0; i < keys.length; ++i)
                                    writer.uint32(/* id 5, wireType 2 =*/42).fork().uint32(/* id 1, wireType 2 =*/10).string(keys[i]).uint32(/* id 2, wireType 2 =*/18).string(message.labels[keys[i]]).ldelim();
                            return writer;
                        };
    
                        /**
                         * Encodes the specified LocalDiskInitializeParams message, length delimited. Does not implicitly {@link google.cloud.notebooks.v1.LocalDiskInitializeParams.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.notebooks.v1.LocalDiskInitializeParams
                         * @static
                         * @param {google.cloud.notebooks.v1.ILocalDiskInitializeParams} message LocalDiskInitializeParams message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        LocalDiskInitializeParams.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a LocalDiskInitializeParams message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.notebooks.v1.LocalDiskInitializeParams
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.notebooks.v1.LocalDiskInitializeParams} LocalDiskInitializeParams
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        LocalDiskInitializeParams.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.notebooks.v1.LocalDiskInitializeParams(), key, value;
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.description = reader.string();
                                        break;
                                    }
                                case 2: {
                                        message.diskName = reader.string();
                                        break;
                                    }
                                case 3: {
                                        message.diskSizeGb = reader.int64();
                                        break;
                                    }
                                case 4: {
                                        message.diskType = reader.int32();
                                        break;
                                    }
                                case 5: {
                                        if (message.labels === $util.emptyObject)
                                            message.labels = {};
                                        var end2 = reader.uint32() + reader.pos;
                                        key = "";
                                        value = "";
                                        while (reader.pos < end2) {
                                            var tag2 = reader.uint32();
                                            switch (tag2 >>> 3) {
                                            case 1:
                                                key = reader.string();
                                                break;
                                            case 2:
                                                value = reader.string();
                                                break;
                                            default:
                                                reader.skipType(tag2 & 7);
                                                break;
                                            }
                                        }
                                        message.labels[key] = value;
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a LocalDiskInitializeParams message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.notebooks.v1.LocalDiskInitializeParams
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.notebooks.v1.LocalDiskInitializeParams} LocalDiskInitializeParams
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        LocalDiskInitializeParams.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a LocalDiskInitializeParams message.
                         * @function verify
                         * @memberof google.cloud.notebooks.v1.LocalDiskInitializeParams
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        LocalDiskInitializeParams.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.description != null && message.hasOwnProperty("description"))
                                if (!$util.isString(message.description))
                                    return "description: string expected";
                            if (message.diskName != null && message.hasOwnProperty("diskName"))
                                if (!$util.isString(message.diskName))
                                    return "diskName: string expected";
                            if (message.diskSizeGb != null && message.hasOwnProperty("diskSizeGb"))
                                if (!$util.isInteger(message.diskSizeGb) && !(message.diskSizeGb && $util.isInteger(message.diskSizeGb.low) && $util.isInteger(message.diskSizeGb.high)))
                                    return "diskSizeGb: integer|Long expected";
                            if (message.diskType != null && message.hasOwnProperty("diskType"))
                                switch (message.diskType) {
                                default:
                                    return "diskType: enum value expected";
                                case 0:
                                case 1:
                                case 2:
                                case 3:
                                case 4:
                                    break;
                                }
                            if (message.labels != null && message.hasOwnProperty("labels")) {
                                if (!$util.isObject(message.labels))
                                    return "labels: object expected";
                                var key = Object.keys(message.labels);
                                for (var i = 0; i < key.length; ++i)
                                    if (!$util.isString(message.labels[key[i]]))
                                        return "labels: string{k:string} expected";
                            }
                            return null;
                        };
    
                        /**
                         * Creates a LocalDiskInitializeParams message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.notebooks.v1.LocalDiskInitializeParams
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.notebooks.v1.LocalDiskInitializeParams} LocalDiskInitializeParams
                         */
                        LocalDiskInitializeParams.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.notebooks.v1.LocalDiskInitializeParams)
                                return object;
                            var message = new $root.google.cloud.notebooks.v1.LocalDiskInitializeParams();
                            if (object.description != null)
                                message.description = String(object.description);
                            if (object.diskName != null)
                                message.diskName = String(object.diskName);
                            if (object.diskSizeGb != null)
                                if ($util.Long)
                                    (message.diskSizeGb = $util.Long.fromValue(object.diskSizeGb)).unsigned = false;
                                else if (typeof object.diskSizeGb === "string")
                                    message.diskSizeGb = parseInt(object.diskSizeGb, 10);
                                else if (typeof object.diskSizeGb === "number")
                                    message.diskSizeGb = object.diskSizeGb;
                                else if (typeof object.diskSizeGb === "object")
                                    message.diskSizeGb = new $util.LongBits(object.diskSizeGb.low >>> 0, object.diskSizeGb.high >>> 0).toNumber();
                            switch (object.diskType) {
                            default:
                                if (typeof object.diskType === "number") {
                                    message.diskType = object.diskType;
                                    break;
                                }
                                break;
                            case "DISK_TYPE_UNSPECIFIED":
                            case 0:
                                message.diskType = 0;
                                break;
                            case "PD_STANDARD":
                            case 1:
                                message.diskType = 1;
                                break;
                            case "PD_SSD":
                            case 2:
                                message.diskType = 2;
                                break;
                            case "PD_BALANCED":
                            case 3:
                                message.diskType = 3;
                                break;
                            case "PD_EXTREME":
                            case 4:
                                message.diskType = 4;
                                break;
                            }
                            if (object.labels) {
                                if (typeof object.labels !== "object")
                                    throw TypeError(".google.cloud.notebooks.v1.LocalDiskInitializeParams.labels: object expected");
                                message.labels = {};
                                for (var keys = Object.keys(object.labels), i = 0; i < keys.length; ++i)
                                    message.labels[keys[i]] = String(object.labels[keys[i]]);
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a LocalDiskInitializeParams message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.notebooks.v1.LocalDiskInitializeParams
                         * @static
                         * @param {google.cloud.notebooks.v1.LocalDiskInitializeParams} message LocalDiskInitializeParams
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        LocalDiskInitializeParams.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.objects || options.defaults)
                                object.labels = {};
                            if (options.defaults) {
                                object.description = "";
                                object.diskName = "";
                                if ($util.Long) {
                                    var long = new $util.Long(0, 0, false);
                                    object.diskSizeGb = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                                } else
                                    object.diskSizeGb = options.longs === String ? "0" : 0;
                                object.diskType = options.enums === String ? "DISK_TYPE_UNSPECIFIED" : 0;
                            }
                            if (message.description != null && message.hasOwnProperty("description"))
                                object.description = message.description;
                            if (message.diskName != null && message.hasOwnProperty("diskName"))
                                object.diskName = message.diskName;
                            if (message.diskSizeGb != null && message.hasOwnProperty("diskSizeGb"))
                                if (typeof message.diskSizeGb === "number")
                                    object.diskSizeGb = options.longs === String ? String(message.diskSizeGb) : message.diskSizeGb;
                                else
                                    object.diskSizeGb = options.longs === String ? $util.Long.prototype.toString.call(message.diskSizeGb) : options.longs === Number ? new $util.LongBits(message.diskSizeGb.low >>> 0, message.diskSizeGb.high >>> 0).toNumber() : message.diskSizeGb;
                            if (message.diskType != null && message.hasOwnProperty("diskType"))
                                object.diskType = options.enums === String ? $root.google.cloud.notebooks.v1.LocalDiskInitializeParams.DiskType[message.diskType] === undefined ? message.diskType : $root.google.cloud.notebooks.v1.LocalDiskInitializeParams.DiskType[message.diskType] : message.diskType;
                            var keys2;
                            if (message.labels && (keys2 = Object.keys(message.labels)).length) {
                                object.labels = {};
                                for (var j = 0; j < keys2.length; ++j)
                                    object.labels[keys2[j]] = message.labels[keys2[j]];
                            }
                            return object;
                        };
    
                        /**
                         * Converts this LocalDiskInitializeParams to JSON.
                         * @function toJSON
                         * @memberof google.cloud.notebooks.v1.LocalDiskInitializeParams
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        LocalDiskInitializeParams.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for LocalDiskInitializeParams
                         * @function getTypeUrl
                         * @memberof google.cloud.notebooks.v1.LocalDiskInitializeParams
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        LocalDiskInitializeParams.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.notebooks.v1.LocalDiskInitializeParams";
                        };
    
                        /**
                         * DiskType enum.
                         * @name google.cloud.notebooks.v1.LocalDiskInitializeParams.DiskType
                         * @enum {number}
                         * @property {number} DISK_TYPE_UNSPECIFIED=0 DISK_TYPE_UNSPECIFIED value
                         * @property {number} PD_STANDARD=1 PD_STANDARD value
                         * @property {number} PD_SSD=2 PD_SSD value
                         * @property {number} PD_BALANCED=3 PD_BALANCED value
                         * @property {number} PD_EXTREME=4 PD_EXTREME value
                         */
                        LocalDiskInitializeParams.DiskType = (function() {
                            var valuesById = {}, values = Object.create(valuesById);
                            values[valuesById[0] = "DISK_TYPE_UNSPECIFIED"] = 0;
                            values[valuesById[1] = "PD_STANDARD"] = 1;
                            values[valuesById[2] = "PD_SSD"] = 2;
                            values[valuesById[3] = "PD_BALANCED"] = 3;
                            values[valuesById[4] = "PD_EXTREME"] = 4;
                            return values;
                        })();
    
                        return LocalDiskInitializeParams;
                    })();
    
                    v1.RuntimeAccessConfig = (function() {
    
                        /**
                         * Properties of a RuntimeAccessConfig.
                         * @memberof google.cloud.notebooks.v1
                         * @interface IRuntimeAccessConfig
                         * @property {google.cloud.notebooks.v1.RuntimeAccessConfig.RuntimeAccessType|null} [accessType] RuntimeAccessConfig accessType
                         * @property {string|null} [runtimeOwner] RuntimeAccessConfig runtimeOwner
                         * @property {string|null} [proxyUri] RuntimeAccessConfig proxyUri
                         */
    
                        /**
                         * Constructs a new RuntimeAccessConfig.
                         * @memberof google.cloud.notebooks.v1
                         * @classdesc Represents a RuntimeAccessConfig.
                         * @implements IRuntimeAccessConfig
                         * @constructor
                         * @param {google.cloud.notebooks.v1.IRuntimeAccessConfig=} [properties] Properties to set
                         */
                        function RuntimeAccessConfig(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * RuntimeAccessConfig accessType.
                         * @member {google.cloud.notebooks.v1.RuntimeAccessConfig.RuntimeAccessType} accessType
                         * @memberof google.cloud.notebooks.v1.RuntimeAccessConfig
                         * @instance
                         */
                        RuntimeAccessConfig.prototype.accessType = 0;
    
                        /**
                         * RuntimeAccessConfig runtimeOwner.
                         * @member {string} runtimeOwner
                         * @memberof google.cloud.notebooks.v1.RuntimeAccessConfig
                         * @instance
                         */
                        RuntimeAccessConfig.prototype.runtimeOwner = "";
    
                        /**
                         * RuntimeAccessConfig proxyUri.
                         * @member {string} proxyUri
                         * @memberof google.cloud.notebooks.v1.RuntimeAccessConfig
                         * @instance
                         */
                        RuntimeAccessConfig.prototype.proxyUri = "";
    
                        /**
                         * Creates a new RuntimeAccessConfig instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.notebooks.v1.RuntimeAccessConfig
                         * @static
                         * @param {google.cloud.notebooks.v1.IRuntimeAccessConfig=} [properties] Properties to set
                         * @returns {google.cloud.notebooks.v1.RuntimeAccessConfig} RuntimeAccessConfig instance
                         */
                        RuntimeAccessConfig.create = function create(properties) {
                            return new RuntimeAccessConfig(properties);
                        };
    
                        /**
                         * Encodes the specified RuntimeAccessConfig message. Does not implicitly {@link google.cloud.notebooks.v1.RuntimeAccessConfig.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.notebooks.v1.RuntimeAccessConfig
                         * @static
                         * @param {google.cloud.notebooks.v1.IRuntimeAccessConfig} message RuntimeAccessConfig message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        RuntimeAccessConfig.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.accessType != null && Object.hasOwnProperty.call(message, "accessType"))
                                writer.uint32(/* id 1, wireType 0 =*/8).int32(message.accessType);
                            if (message.runtimeOwner != null && Object.hasOwnProperty.call(message, "runtimeOwner"))
                                writer.uint32(/* id 2, wireType 2 =*/18).string(message.runtimeOwner);
                            if (message.proxyUri != null && Object.hasOwnProperty.call(message, "proxyUri"))
                                writer.uint32(/* id 3, wireType 2 =*/26).string(message.proxyUri);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified RuntimeAccessConfig message, length delimited. Does not implicitly {@link google.cloud.notebooks.v1.RuntimeAccessConfig.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.notebooks.v1.RuntimeAccessConfig
                         * @static
                         * @param {google.cloud.notebooks.v1.IRuntimeAccessConfig} message RuntimeAccessConfig message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        RuntimeAccessConfig.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a RuntimeAccessConfig message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.notebooks.v1.RuntimeAccessConfig
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.notebooks.v1.RuntimeAccessConfig} RuntimeAccessConfig
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        RuntimeAccessConfig.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.notebooks.v1.RuntimeAccessConfig();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.accessType = reader.int32();
                                        break;
                                    }
                                case 2: {
                                        message.runtimeOwner = reader.string();
                                        break;
                                    }
                                case 3: {
                                        message.proxyUri = reader.string();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a RuntimeAccessConfig message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.notebooks.v1.RuntimeAccessConfig
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.notebooks.v1.RuntimeAccessConfig} RuntimeAccessConfig
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        RuntimeAccessConfig.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a RuntimeAccessConfig message.
                         * @function verify
                         * @memberof google.cloud.notebooks.v1.RuntimeAccessConfig
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        RuntimeAccessConfig.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.accessType != null && message.hasOwnProperty("accessType"))
                                switch (message.accessType) {
                                default:
                                    return "accessType: enum value expected";
                                case 0:
                                case 1:
                                case 2:
                                    break;
                                }
                            if (message.runtimeOwner != null && message.hasOwnProperty("runtimeOwner"))
                                if (!$util.isString(message.runtimeOwner))
                                    return "runtimeOwner: string expected";
                            if (message.proxyUri != null && message.hasOwnProperty("proxyUri"))
                                if (!$util.isString(message.proxyUri))
                                    return "proxyUri: string expected";
                            return null;
                        };
    
                        /**
                         * Creates a RuntimeAccessConfig message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.notebooks.v1.RuntimeAccessConfig
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.notebooks.v1.RuntimeAccessConfig} RuntimeAccessConfig
                         */
                        RuntimeAccessConfig.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.notebooks.v1.RuntimeAccessConfig)
                                return object;
                            var message = new $root.google.cloud.notebooks.v1.RuntimeAccessConfig();
                            switch (object.accessType) {
                            default:
                                if (typeof object.accessType === "number") {
                                    message.accessType = object.accessType;
                                    break;
                                }
                                break;
                            case "RUNTIME_ACCESS_TYPE_UNSPECIFIED":
                            case 0:
                                message.accessType = 0;
                                break;
                            case "SINGLE_USER":
                            case 1:
                                message.accessType = 1;
                                break;
                            case "SERVICE_ACCOUNT":
                            case 2:
                                message.accessType = 2;
                                break;
                            }
                            if (object.runtimeOwner != null)
                                message.runtimeOwner = String(object.runtimeOwner);
                            if (object.proxyUri != null)
                                message.proxyUri = String(object.proxyUri);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a RuntimeAccessConfig message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.notebooks.v1.RuntimeAccessConfig
                         * @static
                         * @param {google.cloud.notebooks.v1.RuntimeAccessConfig} message RuntimeAccessConfig
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        RuntimeAccessConfig.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.accessType = options.enums === String ? "RUNTIME_ACCESS_TYPE_UNSPECIFIED" : 0;
                                object.runtimeOwner = "";
                                object.proxyUri = "";
                            }
                            if (message.accessType != null && message.hasOwnProperty("accessType"))
                                object.accessType = options.enums === String ? $root.google.cloud.notebooks.v1.RuntimeAccessConfig.RuntimeAccessType[message.accessType] === undefined ? message.accessType : $root.google.cloud.notebooks.v1.RuntimeAccessConfig.RuntimeAccessType[message.accessType] : message.accessType;
                            if (message.runtimeOwner != null && message.hasOwnProperty("runtimeOwner"))
                                object.runtimeOwner = message.runtimeOwner;
                            if (message.proxyUri != null && message.hasOwnProperty("proxyUri"))
                                object.proxyUri = message.proxyUri;
                            return object;
                        };
    
                        /**
                         * Converts this RuntimeAccessConfig to JSON.
                         * @function toJSON
                         * @memberof google.cloud.notebooks.v1.RuntimeAccessConfig
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        RuntimeAccessConfig.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for RuntimeAccessConfig
                         * @function getTypeUrl
                         * @memberof google.cloud.notebooks.v1.RuntimeAccessConfig
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        RuntimeAccessConfig.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.notebooks.v1.RuntimeAccessConfig";
                        };
    
                        /**
                         * RuntimeAccessType enum.
                         * @name google.cloud.notebooks.v1.RuntimeAccessConfig.RuntimeAccessType
                         * @enum {number}
                         * @property {number} RUNTIME_ACCESS_TYPE_UNSPECIFIED=0 RUNTIME_ACCESS_TYPE_UNSPECIFIED value
                         * @property {number} SINGLE_USER=1 SINGLE_USER value
                         * @property {number} SERVICE_ACCOUNT=2 SERVICE_ACCOUNT value
                         */
                        RuntimeAccessConfig.RuntimeAccessType = (function() {
                            var valuesById = {}, values = Object.create(valuesById);
                            values[valuesById[0] = "RUNTIME_ACCESS_TYPE_UNSPECIFIED"] = 0;
                            values[valuesById[1] = "SINGLE_USER"] = 1;
                            values[valuesById[2] = "SERVICE_ACCOUNT"] = 2;
                            return values;
                        })();
    
                        return RuntimeAccessConfig;
                    })();
    
                    v1.RuntimeSoftwareConfig = (function() {
    
                        /**
                         * Properties of a RuntimeSoftwareConfig.
                         * @memberof google.cloud.notebooks.v1
                         * @interface IRuntimeSoftwareConfig
                         * @property {string|null} [notebookUpgradeSchedule] RuntimeSoftwareConfig notebookUpgradeSchedule
                         * @property {boolean|null} [enableHealthMonitoring] RuntimeSoftwareConfig enableHealthMonitoring
                         * @property {boolean|null} [idleShutdown] RuntimeSoftwareConfig idleShutdown
                         * @property {number|null} [idleShutdownTimeout] RuntimeSoftwareConfig idleShutdownTimeout
                         * @property {boolean|null} [installGpuDriver] RuntimeSoftwareConfig installGpuDriver
                         * @property {string|null} [customGpuDriverPath] RuntimeSoftwareConfig customGpuDriverPath
                         * @property {string|null} [postStartupScript] RuntimeSoftwareConfig postStartupScript
                         * @property {Array.<google.cloud.notebooks.v1.IContainerImage>|null} [kernels] RuntimeSoftwareConfig kernels
                         * @property {boolean|null} [upgradeable] RuntimeSoftwareConfig upgradeable
                         * @property {google.cloud.notebooks.v1.RuntimeSoftwareConfig.PostStartupScriptBehavior|null} [postStartupScriptBehavior] RuntimeSoftwareConfig postStartupScriptBehavior
                         * @property {boolean|null} [disableTerminal] RuntimeSoftwareConfig disableTerminal
                         * @property {string|null} [version] RuntimeSoftwareConfig version
                         */
    
                        /**
                         * Constructs a new RuntimeSoftwareConfig.
                         * @memberof google.cloud.notebooks.v1
                         * @classdesc Represents a RuntimeSoftwareConfig.
                         * @implements IRuntimeSoftwareConfig
                         * @constructor
                         * @param {google.cloud.notebooks.v1.IRuntimeSoftwareConfig=} [properties] Properties to set
                         */
                        function RuntimeSoftwareConfig(properties) {
                            this.kernels = [];
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * RuntimeSoftwareConfig notebookUpgradeSchedule.
                         * @member {string} notebookUpgradeSchedule
                         * @memberof google.cloud.notebooks.v1.RuntimeSoftwareConfig
                         * @instance
                         */
                        RuntimeSoftwareConfig.prototype.notebookUpgradeSchedule = "";
    
                        /**
                         * RuntimeSoftwareConfig enableHealthMonitoring.
                         * @member {boolean|null|undefined} enableHealthMonitoring
                         * @memberof google.cloud.notebooks.v1.RuntimeSoftwareConfig
                         * @instance
                         */
                        RuntimeSoftwareConfig.prototype.enableHealthMonitoring = null;
    
                        /**
                         * RuntimeSoftwareConfig idleShutdown.
                         * @member {boolean|null|undefined} idleShutdown
                         * @memberof google.cloud.notebooks.v1.RuntimeSoftwareConfig
                         * @instance
                         */
                        RuntimeSoftwareConfig.prototype.idleShutdown = null;
    
                        /**
                         * RuntimeSoftwareConfig idleShutdownTimeout.
                         * @member {number} idleShutdownTimeout
                         * @memberof google.cloud.notebooks.v1.RuntimeSoftwareConfig
                         * @instance
                         */
                        RuntimeSoftwareConfig.prototype.idleShutdownTimeout = 0;
    
                        /**
                         * RuntimeSoftwareConfig installGpuDriver.
                         * @member {boolean} installGpuDriver
                         * @memberof google.cloud.notebooks.v1.RuntimeSoftwareConfig
                         * @instance
                         */
                        RuntimeSoftwareConfig.prototype.installGpuDriver = false;
    
                        /**
                         * RuntimeSoftwareConfig customGpuDriverPath.
                         * @member {string} customGpuDriverPath
                         * @memberof google.cloud.notebooks.v1.RuntimeSoftwareConfig
                         * @instance
                         */
                        RuntimeSoftwareConfig.prototype.customGpuDriverPath = "";
    
                        /**
                         * RuntimeSoftwareConfig postStartupScript.
                         * @member {string} postStartupScript
                         * @memberof google.cloud.notebooks.v1.RuntimeSoftwareConfig
                         * @instance
                         */
                        RuntimeSoftwareConfig.prototype.postStartupScript = "";
    
                        /**
                         * RuntimeSoftwareConfig kernels.
                         * @member {Array.<google.cloud.notebooks.v1.IContainerImage>} kernels
                         * @memberof google.cloud.notebooks.v1.RuntimeSoftwareConfig
                         * @instance
                         */
                        RuntimeSoftwareConfig.prototype.kernels = $util.emptyArray;
    
                        /**
                         * RuntimeSoftwareConfig upgradeable.
                         * @member {boolean|null|undefined} upgradeable
                         * @memberof google.cloud.notebooks.v1.RuntimeSoftwareConfig
                         * @instance
                         */
                        RuntimeSoftwareConfig.prototype.upgradeable = null;
    
                        /**
                         * RuntimeSoftwareConfig postStartupScriptBehavior.
                         * @member {google.cloud.notebooks.v1.RuntimeSoftwareConfig.PostStartupScriptBehavior} postStartupScriptBehavior
                         * @memberof google.cloud.notebooks.v1.RuntimeSoftwareConfig
                         * @instance
                         */
                        RuntimeSoftwareConfig.prototype.postStartupScriptBehavior = 0;
    
                        /**
                         * RuntimeSoftwareConfig disableTerminal.
                         * @member {boolean|null|undefined} disableTerminal
                         * @memberof google.cloud.notebooks.v1.RuntimeSoftwareConfig
                         * @instance
                         */
                        RuntimeSoftwareConfig.prototype.disableTerminal = null;
    
                        /**
                         * RuntimeSoftwareConfig version.
                         * @member {string|null|undefined} version
                         * @memberof google.cloud.notebooks.v1.RuntimeSoftwareConfig
                         * @instance
                         */
                        RuntimeSoftwareConfig.prototype.version = null;
    
                        // OneOf field names bound to virtual getters and setters
                        var $oneOfFields;
    
                        /**
                         * RuntimeSoftwareConfig _enableHealthMonitoring.
                         * @member {"enableHealthMonitoring"|undefined} _enableHealthMonitoring
                         * @memberof google.cloud.notebooks.v1.RuntimeSoftwareConfig
                         * @instance
                         */
                        Object.defineProperty(RuntimeSoftwareConfig.prototype, "_enableHealthMonitoring", {
                            get: $util.oneOfGetter($oneOfFields = ["enableHealthMonitoring"]),
                            set: $util.oneOfSetter($oneOfFields)
                        });
    
                        /**
                         * RuntimeSoftwareConfig _idleShutdown.
                         * @member {"idleShutdown"|undefined} _idleShutdown
                         * @memberof google.cloud.notebooks.v1.RuntimeSoftwareConfig
                         * @instance
                         */
                        Object.defineProperty(RuntimeSoftwareConfig.prototype, "_idleShutdown", {
                            get: $util.oneOfGetter($oneOfFields = ["idleShutdown"]),
                            set: $util.oneOfSetter($oneOfFields)
                        });
    
                        /**
                         * RuntimeSoftwareConfig _upgradeable.
                         * @member {"upgradeable"|undefined} _upgradeable
                         * @memberof google.cloud.notebooks.v1.RuntimeSoftwareConfig
                         * @instance
                         */
                        Object.defineProperty(RuntimeSoftwareConfig.prototype, "_upgradeable", {
                            get: $util.oneOfGetter($oneOfFields = ["upgradeable"]),
                            set: $util.oneOfSetter($oneOfFields)
                        });
    
                        /**
                         * RuntimeSoftwareConfig _disableTerminal.
                         * @member {"disableTerminal"|undefined} _disableTerminal
                         * @memberof google.cloud.notebooks.v1.RuntimeSoftwareConfig
                         * @instance
                         */
                        Object.defineProperty(RuntimeSoftwareConfig.prototype, "_disableTerminal", {
                            get: $util.oneOfGetter($oneOfFields = ["disableTerminal"]),
                            set: $util.oneOfSetter($oneOfFields)
                        });
    
                        /**
                         * RuntimeSoftwareConfig _version.
                         * @member {"version"|undefined} _version
                         * @memberof google.cloud.notebooks.v1.RuntimeSoftwareConfig
                         * @instance
                         */
                        Object.defineProperty(RuntimeSoftwareConfig.prototype, "_version", {
                            get: $util.oneOfGetter($oneOfFields = ["version"]),
                            set: $util.oneOfSetter($oneOfFields)
                        });
    
                        /**
                         * Creates a new RuntimeSoftwareConfig instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.notebooks.v1.RuntimeSoftwareConfig
                         * @static
                         * @param {google.cloud.notebooks.v1.IRuntimeSoftwareConfig=} [properties] Properties to set
                         * @returns {google.cloud.notebooks.v1.RuntimeSoftwareConfig} RuntimeSoftwareConfig instance
                         */
                        RuntimeSoftwareConfig.create = function create(properties) {
                            return new RuntimeSoftwareConfig(properties);
                        };
    
                        /**
                         * Encodes the specified RuntimeSoftwareConfig message. Does not implicitly {@link google.cloud.notebooks.v1.RuntimeSoftwareConfig.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.notebooks.v1.RuntimeSoftwareConfig
                         * @static
                         * @param {google.cloud.notebooks.v1.IRuntimeSoftwareConfig} message RuntimeSoftwareConfig message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        RuntimeSoftwareConfig.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.notebookUpgradeSchedule != null && Object.hasOwnProperty.call(message, "notebookUpgradeSchedule"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.notebookUpgradeSchedule);
                            if (message.enableHealthMonitoring != null && Object.hasOwnProperty.call(message, "enableHealthMonitoring"))
                                writer.uint32(/* id 2, wireType 0 =*/16).bool(message.enableHealthMonitoring);
                            if (message.idleShutdown != null && Object.hasOwnProperty.call(message, "idleShutdown"))
                                writer.uint32(/* id 3, wireType 0 =*/24).bool(message.idleShutdown);
                            if (message.idleShutdownTimeout != null && Object.hasOwnProperty.call(message, "idleShutdownTimeout"))
                                writer.uint32(/* id 4, wireType 0 =*/32).int32(message.idleShutdownTimeout);
                            if (message.installGpuDriver != null && Object.hasOwnProperty.call(message, "installGpuDriver"))
                                writer.uint32(/* id 5, wireType 0 =*/40).bool(message.installGpuDriver);
                            if (message.customGpuDriverPath != null && Object.hasOwnProperty.call(message, "customGpuDriverPath"))
                                writer.uint32(/* id 6, wireType 2 =*/50).string(message.customGpuDriverPath);
                            if (message.postStartupScript != null && Object.hasOwnProperty.call(message, "postStartupScript"))
                                writer.uint32(/* id 7, wireType 2 =*/58).string(message.postStartupScript);
                            if (message.kernels != null && message.kernels.length)
                                for (var i = 0; i < message.kernels.length; ++i)
                                    $root.google.cloud.notebooks.v1.ContainerImage.encode(message.kernels[i], writer.uint32(/* id 8, wireType 2 =*/66).fork()).ldelim();
                            if (message.upgradeable != null && Object.hasOwnProperty.call(message, "upgradeable"))
                                writer.uint32(/* id 9, wireType 0 =*/72).bool(message.upgradeable);
                            if (message.postStartupScriptBehavior != null && Object.hasOwnProperty.call(message, "postStartupScriptBehavior"))
                                writer.uint32(/* id 10, wireType 0 =*/80).int32(message.postStartupScriptBehavior);
                            if (message.disableTerminal != null && Object.hasOwnProperty.call(message, "disableTerminal"))
                                writer.uint32(/* id 11, wireType 0 =*/88).bool(message.disableTerminal);
                            if (message.version != null && Object.hasOwnProperty.call(message, "version"))
                                writer.uint32(/* id 12, wireType 2 =*/98).string(message.version);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified RuntimeSoftwareConfig message, length delimited. Does not implicitly {@link google.cloud.notebooks.v1.RuntimeSoftwareConfig.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.notebooks.v1.RuntimeSoftwareConfig
                         * @static
                         * @param {google.cloud.notebooks.v1.IRuntimeSoftwareConfig} message RuntimeSoftwareConfig message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        RuntimeSoftwareConfig.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a RuntimeSoftwareConfig message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.notebooks.v1.RuntimeSoftwareConfig
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.notebooks.v1.RuntimeSoftwareConfig} RuntimeSoftwareConfig
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        RuntimeSoftwareConfig.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.notebooks.v1.RuntimeSoftwareConfig();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.notebookUpgradeSchedule = reader.string();
                                        break;
                                    }
                                case 2: {
                                        message.enableHealthMonitoring = reader.bool();
                                        break;
                                    }
                                case 3: {
                                        message.idleShutdown = reader.bool();
                                        break;
                                    }
                                case 4: {
                                        message.idleShutdownTimeout = reader.int32();
                                        break;
                                    }
                                case 5: {
                                        message.installGpuDriver = reader.bool();
                                        break;
                                    }
                                case 6: {
                                        message.customGpuDriverPath = reader.string();
                                        break;
                                    }
                                case 7: {
                                        message.postStartupScript = reader.string();
                                        break;
                                    }
                                case 8: {
                                        if (!(message.kernels && message.kernels.length))
                                            message.kernels = [];
                                        message.kernels.push($root.google.cloud.notebooks.v1.ContainerImage.decode(reader, reader.uint32()));
                                        break;
                                    }
                                case 9: {
                                        message.upgradeable = reader.bool();
                                        break;
                                    }
                                case 10: {
                                        message.postStartupScriptBehavior = reader.int32();
                                        break;
                                    }
                                case 11: {
                                        message.disableTerminal = reader.bool();
                                        break;
                                    }
                                case 12: {
                                        message.version = reader.string();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a RuntimeSoftwareConfig message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.notebooks.v1.RuntimeSoftwareConfig
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.notebooks.v1.RuntimeSoftwareConfig} RuntimeSoftwareConfig
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        RuntimeSoftwareConfig.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a RuntimeSoftwareConfig message.
                         * @function verify
                         * @memberof google.cloud.notebooks.v1.RuntimeSoftwareConfig
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        RuntimeSoftwareConfig.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            var properties = {};
                            if (message.notebookUpgradeSchedule != null && message.hasOwnProperty("notebookUpgradeSchedule"))
                                if (!$util.isString(message.notebookUpgradeSchedule))
                                    return "notebookUpgradeSchedule: string expected";
                            if (message.enableHealthMonitoring != null && message.hasOwnProperty("enableHealthMonitoring")) {
                                properties._enableHealthMonitoring = 1;
                                if (typeof message.enableHealthMonitoring !== "boolean")
                                    return "enableHealthMonitoring: boolean expected";
                            }
                            if (message.idleShutdown != null && message.hasOwnProperty("idleShutdown")) {
                                properties._idleShutdown = 1;
                                if (typeof message.idleShutdown !== "boolean")
                                    return "idleShutdown: boolean expected";
                            }
                            if (message.idleShutdownTimeout != null && message.hasOwnProperty("idleShutdownTimeout"))
                                if (!$util.isInteger(message.idleShutdownTimeout))
                                    return "idleShutdownTimeout: integer expected";
                            if (message.installGpuDriver != null && message.hasOwnProperty("installGpuDriver"))
                                if (typeof message.installGpuDriver !== "boolean")
                                    return "installGpuDriver: boolean expected";
                            if (message.customGpuDriverPath != null && message.hasOwnProperty("customGpuDriverPath"))
                                if (!$util.isString(message.customGpuDriverPath))
                                    return "customGpuDriverPath: string expected";
                            if (message.postStartupScript != null && message.hasOwnProperty("postStartupScript"))
                                if (!$util.isString(message.postStartupScript))
                                    return "postStartupScript: string expected";
                            if (message.kernels != null && message.hasOwnProperty("kernels")) {
                                if (!Array.isArray(message.kernels))
                                    return "kernels: array expected";
                                for (var i = 0; i < message.kernels.length; ++i) {
                                    var error = $root.google.cloud.notebooks.v1.ContainerImage.verify(message.kernels[i]);
                                    if (error)
                                        return "kernels." + error;
                                }
                            }
                            if (message.upgradeable != null && message.hasOwnProperty("upgradeable")) {
                                properties._upgradeable = 1;
                                if (typeof message.upgradeable !== "boolean")
                                    return "upgradeable: boolean expected";
                            }
                            if (message.postStartupScriptBehavior != null && message.hasOwnProperty("postStartupScriptBehavior"))
                                switch (message.postStartupScriptBehavior) {
                                default:
                                    return "postStartupScriptBehavior: enum value expected";
                                case 0:
                                case 1:
                                case 2:
                                    break;
                                }
                            if (message.disableTerminal != null && message.hasOwnProperty("disableTerminal")) {
                                properties._disableTerminal = 1;
                                if (typeof message.disableTerminal !== "boolean")
                                    return "disableTerminal: boolean expected";
                            }
                            if (message.version != null && message.hasOwnProperty("version")) {
                                properties._version = 1;
                                if (!$util.isString(message.version))
                                    return "version: string expected";
                            }
                            return null;
                        };
    
                        /**
                         * Creates a RuntimeSoftwareConfig message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.notebooks.v1.RuntimeSoftwareConfig
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.notebooks.v1.RuntimeSoftwareConfig} RuntimeSoftwareConfig
                         */
                        RuntimeSoftwareConfig.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.notebooks.v1.RuntimeSoftwareConfig)
                                return object;
                            var message = new $root.google.cloud.notebooks.v1.RuntimeSoftwareConfig();
                            if (object.notebookUpgradeSchedule != null)
                                message.notebookUpgradeSchedule = String(object.notebookUpgradeSchedule);
                            if (object.enableHealthMonitoring != null)
                                message.enableHealthMonitoring = Boolean(object.enableHealthMonitoring);
                            if (object.idleShutdown != null)
                                message.idleShutdown = Boolean(object.idleShutdown);
                            if (object.idleShutdownTimeout != null)
                                message.idleShutdownTimeout = object.idleShutdownTimeout | 0;
                            if (object.installGpuDriver != null)
                                message.installGpuDriver = Boolean(object.installGpuDriver);
                            if (object.customGpuDriverPath != null)
                                message.customGpuDriverPath = String(object.customGpuDriverPath);
                            if (object.postStartupScript != null)
                                message.postStartupScript = String(object.postStartupScript);
                            if (object.kernels) {
                                if (!Array.isArray(object.kernels))
                                    throw TypeError(".google.cloud.notebooks.v1.RuntimeSoftwareConfig.kernels: array expected");
                                message.kernels = [];
                                for (var i = 0; i < object.kernels.length; ++i) {
                                    if (typeof object.kernels[i] !== "object")
                                        throw TypeError(".google.cloud.notebooks.v1.RuntimeSoftwareConfig.kernels: object expected");
                                    message.kernels[i] = $root.google.cloud.notebooks.v1.ContainerImage.fromObject(object.kernels[i]);
                                }
                            }
                            if (object.upgradeable != null)
                                message.upgradeable = Boolean(object.upgradeable);
                            switch (object.postStartupScriptBehavior) {
                            default:
                                if (typeof object.postStartupScriptBehavior === "number") {
                                    message.postStartupScriptBehavior = object.postStartupScriptBehavior;
                                    break;
                                }
                                break;
                            case "POST_STARTUP_SCRIPT_BEHAVIOR_UNSPECIFIED":
                            case 0:
                                message.postStartupScriptBehavior = 0;
                                break;
                            case "RUN_EVERY_START":
                            case 1:
                                message.postStartupScriptBehavior = 1;
                                break;
                            case "DOWNLOAD_AND_RUN_EVERY_START":
                            case 2:
                                message.postStartupScriptBehavior = 2;
                                break;
                            }
                            if (object.disableTerminal != null)
                                message.disableTerminal = Boolean(object.disableTerminal);
                            if (object.version != null)
                                message.version = String(object.version);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a RuntimeSoftwareConfig message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.notebooks.v1.RuntimeSoftwareConfig
                         * @static
                         * @param {google.cloud.notebooks.v1.RuntimeSoftwareConfig} message RuntimeSoftwareConfig
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        RuntimeSoftwareConfig.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.arrays || options.defaults)
                                object.kernels = [];
                            if (options.defaults) {
                                object.notebookUpgradeSchedule = "";
                                object.idleShutdownTimeout = 0;
                                object.installGpuDriver = false;
                                object.customGpuDriverPath = "";
                                object.postStartupScript = "";
                                object.postStartupScriptBehavior = options.enums === String ? "POST_STARTUP_SCRIPT_BEHAVIOR_UNSPECIFIED" : 0;
                            }
                            if (message.notebookUpgradeSchedule != null && message.hasOwnProperty("notebookUpgradeSchedule"))
                                object.notebookUpgradeSchedule = message.notebookUpgradeSchedule;
                            if (message.enableHealthMonitoring != null && message.hasOwnProperty("enableHealthMonitoring")) {
                                object.enableHealthMonitoring = message.enableHealthMonitoring;
                                if (options.oneofs)
                                    object._enableHealthMonitoring = "enableHealthMonitoring";
                            }
                            if (message.idleShutdown != null && message.hasOwnProperty("idleShutdown")) {
                                object.idleShutdown = message.idleShutdown;
                                if (options.oneofs)
                                    object._idleShutdown = "idleShutdown";
                            }
                            if (message.idleShutdownTimeout != null && message.hasOwnProperty("idleShutdownTimeout"))
                                object.idleShutdownTimeout = message.idleShutdownTimeout;
                            if (message.installGpuDriver != null && message.hasOwnProperty("installGpuDriver"))
                                object.installGpuDriver = message.installGpuDriver;
                            if (message.customGpuDriverPath != null && message.hasOwnProperty("customGpuDriverPath"))
                                object.customGpuDriverPath = message.customGpuDriverPath;
                            if (message.postStartupScript != null && message.hasOwnProperty("postStartupScript"))
                                object.postStartupScript = message.postStartupScript;
                            if (message.kernels && message.kernels.length) {
                                object.kernels = [];
                                for (var j = 0; j < message.kernels.length; ++j)
                                    object.kernels[j] = $root.google.cloud.notebooks.v1.ContainerImage.toObject(message.kernels[j], options);
                            }
                            if (message.upgradeable != null && message.hasOwnProperty("upgradeable")) {
                                object.upgradeable = message.upgradeable;
                                if (options.oneofs)
                                    object._upgradeable = "upgradeable";
                            }
                            if (message.postStartupScriptBehavior != null && message.hasOwnProperty("postStartupScriptBehavior"))
                                object.postStartupScriptBehavior = options.enums === String ? $root.google.cloud.notebooks.v1.RuntimeSoftwareConfig.PostStartupScriptBehavior[message.postStartupScriptBehavior] === undefined ? message.postStartupScriptBehavior : $root.google.cloud.notebooks.v1.RuntimeSoftwareConfig.PostStartupScriptBehavior[message.postStartupScriptBehavior] : message.postStartupScriptBehavior;
                            if (message.disableTerminal != null && message.hasOwnProperty("disableTerminal")) {
                                object.disableTerminal = message.disableTerminal;
                                if (options.oneofs)
                                    object._disableTerminal = "disableTerminal";
                            }
                            if (message.version != null && message.hasOwnProperty("version")) {
                                object.version = message.version;
                                if (options.oneofs)
                                    object._version = "version";
                            }
                            return object;
                        };
    
                        /**
                         * Converts this RuntimeSoftwareConfig to JSON.
                         * @function toJSON
                         * @memberof google.cloud.notebooks.v1.RuntimeSoftwareConfig
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        RuntimeSoftwareConfig.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for RuntimeSoftwareConfig
                         * @function getTypeUrl
                         * @memberof google.cloud.notebooks.v1.RuntimeSoftwareConfig
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        RuntimeSoftwareConfig.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.notebooks.v1.RuntimeSoftwareConfig";
                        };
    
                        /**
                         * PostStartupScriptBehavior enum.
                         * @name google.cloud.notebooks.v1.RuntimeSoftwareConfig.PostStartupScriptBehavior
                         * @enum {number}
                         * @property {number} POST_STARTUP_SCRIPT_BEHAVIOR_UNSPECIFIED=0 POST_STARTUP_SCRIPT_BEHAVIOR_UNSPECIFIED value
                         * @property {number} RUN_EVERY_START=1 RUN_EVERY_START value
                         * @property {number} DOWNLOAD_AND_RUN_EVERY_START=2 DOWNLOAD_AND_RUN_EVERY_START value
                         */
                        RuntimeSoftwareConfig.PostStartupScriptBehavior = (function() {
                            var valuesById = {}, values = Object.create(valuesById);
                            values[valuesById[0] = "POST_STARTUP_SCRIPT_BEHAVIOR_UNSPECIFIED"] = 0;
                            values[valuesById[1] = "RUN_EVERY_START"] = 1;
                            values[valuesById[2] = "DOWNLOAD_AND_RUN_EVERY_START"] = 2;
                            return values;
                        })();
    
                        return RuntimeSoftwareConfig;
                    })();
    
                    v1.RuntimeMetrics = (function() {
    
                        /**
                         * Properties of a RuntimeMetrics.
                         * @memberof google.cloud.notebooks.v1
                         * @interface IRuntimeMetrics
                         * @property {Object.<string,string>|null} [systemMetrics] RuntimeMetrics systemMetrics
                         */
    
                        /**
                         * Constructs a new RuntimeMetrics.
                         * @memberof google.cloud.notebooks.v1
                         * @classdesc Represents a RuntimeMetrics.
                         * @implements IRuntimeMetrics
                         * @constructor
                         * @param {google.cloud.notebooks.v1.IRuntimeMetrics=} [properties] Properties to set
                         */
                        function RuntimeMetrics(properties) {
                            this.systemMetrics = {};
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * RuntimeMetrics systemMetrics.
                         * @member {Object.<string,string>} systemMetrics
                         * @memberof google.cloud.notebooks.v1.RuntimeMetrics
                         * @instance
                         */
                        RuntimeMetrics.prototype.systemMetrics = $util.emptyObject;
    
                        /**
                         * Creates a new RuntimeMetrics instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.notebooks.v1.RuntimeMetrics
                         * @static
                         * @param {google.cloud.notebooks.v1.IRuntimeMetrics=} [properties] Properties to set
                         * @returns {google.cloud.notebooks.v1.RuntimeMetrics} RuntimeMetrics instance
                         */
                        RuntimeMetrics.create = function create(properties) {
                            return new RuntimeMetrics(properties);
                        };
    
                        /**
                         * Encodes the specified RuntimeMetrics message. Does not implicitly {@link google.cloud.notebooks.v1.RuntimeMetrics.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.notebooks.v1.RuntimeMetrics
                         * @static
                         * @param {google.cloud.notebooks.v1.IRuntimeMetrics} message RuntimeMetrics message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        RuntimeMetrics.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.systemMetrics != null && Object.hasOwnProperty.call(message, "systemMetrics"))
                                for (var keys = Object.keys(message.systemMetrics), i = 0; i < keys.length; ++i)
                                    writer.uint32(/* id 1, wireType 2 =*/10).fork().uint32(/* id 1, wireType 2 =*/10).string(keys[i]).uint32(/* id 2, wireType 2 =*/18).string(message.systemMetrics[keys[i]]).ldelim();
                            return writer;
                        };
    
                        /**
                         * Encodes the specified RuntimeMetrics message, length delimited. Does not implicitly {@link google.cloud.notebooks.v1.RuntimeMetrics.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.notebooks.v1.RuntimeMetrics
                         * @static
                         * @param {google.cloud.notebooks.v1.IRuntimeMetrics} message RuntimeMetrics message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        RuntimeMetrics.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a RuntimeMetrics message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.notebooks.v1.RuntimeMetrics
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.notebooks.v1.RuntimeMetrics} RuntimeMetrics
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        RuntimeMetrics.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.notebooks.v1.RuntimeMetrics(), key, value;
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        if (message.systemMetrics === $util.emptyObject)
                                            message.systemMetrics = {};
                                        var end2 = reader.uint32() + reader.pos;
                                        key = "";
                                        value = "";
                                        while (reader.pos < end2) {
                                            var tag2 = reader.uint32();
                                            switch (tag2 >>> 3) {
                                            case 1:
                                                key = reader.string();
                                                break;
                                            case 2:
                                                value = reader.string();
                                                break;
                                            default:
                                                reader.skipType(tag2 & 7);
                                                break;
                                            }
                                        }
                                        message.systemMetrics[key] = value;
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a RuntimeMetrics message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.notebooks.v1.RuntimeMetrics
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.notebooks.v1.RuntimeMetrics} RuntimeMetrics
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        RuntimeMetrics.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a RuntimeMetrics message.
                         * @function verify
                         * @memberof google.cloud.notebooks.v1.RuntimeMetrics
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        RuntimeMetrics.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.systemMetrics != null && message.hasOwnProperty("systemMetrics")) {
                                if (!$util.isObject(message.systemMetrics))
                                    return "systemMetrics: object expected";
                                var key = Object.keys(message.systemMetrics);
                                for (var i = 0; i < key.length; ++i)
                                    if (!$util.isString(message.systemMetrics[key[i]]))
                                        return "systemMetrics: string{k:string} expected";
                            }
                            return null;
                        };
    
                        /**
                         * Creates a RuntimeMetrics message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.notebooks.v1.RuntimeMetrics
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.notebooks.v1.RuntimeMetrics} RuntimeMetrics
                         */
                        RuntimeMetrics.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.notebooks.v1.RuntimeMetrics)
                                return object;
                            var message = new $root.google.cloud.notebooks.v1.RuntimeMetrics();
                            if (object.systemMetrics) {
                                if (typeof object.systemMetrics !== "object")
                                    throw TypeError(".google.cloud.notebooks.v1.RuntimeMetrics.systemMetrics: object expected");
                                message.systemMetrics = {};
                                for (var keys = Object.keys(object.systemMetrics), i = 0; i < keys.length; ++i)
                                    message.systemMetrics[keys[i]] = String(object.systemMetrics[keys[i]]);
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a RuntimeMetrics message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.notebooks.v1.RuntimeMetrics
                         * @static
                         * @param {google.cloud.notebooks.v1.RuntimeMetrics} message RuntimeMetrics
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        RuntimeMetrics.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.objects || options.defaults)
                                object.systemMetrics = {};
                            var keys2;
                            if (message.systemMetrics && (keys2 = Object.keys(message.systemMetrics)).length) {
                                object.systemMetrics = {};
                                for (var j = 0; j < keys2.length; ++j)
                                    object.systemMetrics[keys2[j]] = message.systemMetrics[keys2[j]];
                            }
                            return object;
                        };
    
                        /**
                         * Converts this RuntimeMetrics to JSON.
                         * @function toJSON
                         * @memberof google.cloud.notebooks.v1.RuntimeMetrics
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        RuntimeMetrics.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for RuntimeMetrics
                         * @function getTypeUrl
                         * @memberof google.cloud.notebooks.v1.RuntimeMetrics
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        RuntimeMetrics.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.notebooks.v1.RuntimeMetrics";
                        };
    
                        return RuntimeMetrics;
                    })();
    
                    v1.RuntimeShieldedInstanceConfig = (function() {
    
                        /**
                         * Properties of a RuntimeShieldedInstanceConfig.
                         * @memberof google.cloud.notebooks.v1
                         * @interface IRuntimeShieldedInstanceConfig
                         * @property {boolean|null} [enableSecureBoot] RuntimeShieldedInstanceConfig enableSecureBoot
                         * @property {boolean|null} [enableVtpm] RuntimeShieldedInstanceConfig enableVtpm
                         * @property {boolean|null} [enableIntegrityMonitoring] RuntimeShieldedInstanceConfig enableIntegrityMonitoring
                         */
    
                        /**
                         * Constructs a new RuntimeShieldedInstanceConfig.
                         * @memberof google.cloud.notebooks.v1
                         * @classdesc Represents a RuntimeShieldedInstanceConfig.
                         * @implements IRuntimeShieldedInstanceConfig
                         * @constructor
                         * @param {google.cloud.notebooks.v1.IRuntimeShieldedInstanceConfig=} [properties] Properties to set
                         */
                        function RuntimeShieldedInstanceConfig(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * RuntimeShieldedInstanceConfig enableSecureBoot.
                         * @member {boolean} enableSecureBoot
                         * @memberof google.cloud.notebooks.v1.RuntimeShieldedInstanceConfig
                         * @instance
                         */
                        RuntimeShieldedInstanceConfig.prototype.enableSecureBoot = false;
    
                        /**
                         * RuntimeShieldedInstanceConfig enableVtpm.
                         * @member {boolean} enableVtpm
                         * @memberof google.cloud.notebooks.v1.RuntimeShieldedInstanceConfig
                         * @instance
                         */
                        RuntimeShieldedInstanceConfig.prototype.enableVtpm = false;
    
                        /**
                         * RuntimeShieldedInstanceConfig enableIntegrityMonitoring.
                         * @member {boolean} enableIntegrityMonitoring
                         * @memberof google.cloud.notebooks.v1.RuntimeShieldedInstanceConfig
                         * @instance
                         */
                        RuntimeShieldedInstanceConfig.prototype.enableIntegrityMonitoring = false;
    
                        /**
                         * Creates a new RuntimeShieldedInstanceConfig instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.notebooks.v1.RuntimeShieldedInstanceConfig
                         * @static
                         * @param {google.cloud.notebooks.v1.IRuntimeShieldedInstanceConfig=} [properties] Properties to set
                         * @returns {google.cloud.notebooks.v1.RuntimeShieldedInstanceConfig} RuntimeShieldedInstanceConfig instance
                         */
                        RuntimeShieldedInstanceConfig.create = function create(properties) {
                            return new RuntimeShieldedInstanceConfig(properties);
                        };
    
                        /**
                         * Encodes the specified RuntimeShieldedInstanceConfig message. Does not implicitly {@link google.cloud.notebooks.v1.RuntimeShieldedInstanceConfig.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.notebooks.v1.RuntimeShieldedInstanceConfig
                         * @static
                         * @param {google.cloud.notebooks.v1.IRuntimeShieldedInstanceConfig} message RuntimeShieldedInstanceConfig message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        RuntimeShieldedInstanceConfig.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.enableSecureBoot != null && Object.hasOwnProperty.call(message, "enableSecureBoot"))
                                writer.uint32(/* id 1, wireType 0 =*/8).bool(message.enableSecureBoot);
                            if (message.enableVtpm != null && Object.hasOwnProperty.call(message, "enableVtpm"))
                                writer.uint32(/* id 2, wireType 0 =*/16).bool(message.enableVtpm);
                            if (message.enableIntegrityMonitoring != null && Object.hasOwnProperty.call(message, "enableIntegrityMonitoring"))
                                writer.uint32(/* id 3, wireType 0 =*/24).bool(message.enableIntegrityMonitoring);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified RuntimeShieldedInstanceConfig message, length delimited. Does not implicitly {@link google.cloud.notebooks.v1.RuntimeShieldedInstanceConfig.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.notebooks.v1.RuntimeShieldedInstanceConfig
                         * @static
                         * @param {google.cloud.notebooks.v1.IRuntimeShieldedInstanceConfig} message RuntimeShieldedInstanceConfig message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        RuntimeShieldedInstanceConfig.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a RuntimeShieldedInstanceConfig message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.notebooks.v1.RuntimeShieldedInstanceConfig
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.notebooks.v1.RuntimeShieldedInstanceConfig} RuntimeShieldedInstanceConfig
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        RuntimeShieldedInstanceConfig.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.notebooks.v1.RuntimeShieldedInstanceConfig();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.enableSecureBoot = reader.bool();
                                        break;
                                    }
                                case 2: {
                                        message.enableVtpm = reader.bool();
                                        break;
                                    }
                                case 3: {
                                        message.enableIntegrityMonitoring = reader.bool();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a RuntimeShieldedInstanceConfig message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.notebooks.v1.RuntimeShieldedInstanceConfig
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.notebooks.v1.RuntimeShieldedInstanceConfig} RuntimeShieldedInstanceConfig
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        RuntimeShieldedInstanceConfig.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a RuntimeShieldedInstanceConfig message.
                         * @function verify
                         * @memberof google.cloud.notebooks.v1.RuntimeShieldedInstanceConfig
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        RuntimeShieldedInstanceConfig.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.enableSecureBoot != null && message.hasOwnProperty("enableSecureBoot"))
                                if (typeof message.enableSecureBoot !== "boolean")
                                    return "enableSecureBoot: boolean expected";
                            if (message.enableVtpm != null && message.hasOwnProperty("enableVtpm"))
                                if (typeof message.enableVtpm !== "boolean")
                                    return "enableVtpm: boolean expected";
                            if (message.enableIntegrityMonitoring != null && message.hasOwnProperty("enableIntegrityMonitoring"))
                                if (typeof message.enableIntegrityMonitoring !== "boolean")
                                    return "enableIntegrityMonitoring: boolean expected";
                            return null;
                        };
    
                        /**
                         * Creates a RuntimeShieldedInstanceConfig message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.notebooks.v1.RuntimeShieldedInstanceConfig
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.notebooks.v1.RuntimeShieldedInstanceConfig} RuntimeShieldedInstanceConfig
                         */
                        RuntimeShieldedInstanceConfig.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.notebooks.v1.RuntimeShieldedInstanceConfig)
                                return object;
                            var message = new $root.google.cloud.notebooks.v1.RuntimeShieldedInstanceConfig();
                            if (object.enableSecureBoot != null)
                                message.enableSecureBoot = Boolean(object.enableSecureBoot);
                            if (object.enableVtpm != null)
                                message.enableVtpm = Boolean(object.enableVtpm);
                            if (object.enableIntegrityMonitoring != null)
                                message.enableIntegrityMonitoring = Boolean(object.enableIntegrityMonitoring);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a RuntimeShieldedInstanceConfig message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.notebooks.v1.RuntimeShieldedInstanceConfig
                         * @static
                         * @param {google.cloud.notebooks.v1.RuntimeShieldedInstanceConfig} message RuntimeShieldedInstanceConfig
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        RuntimeShieldedInstanceConfig.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.enableSecureBoot = false;
                                object.enableVtpm = false;
                                object.enableIntegrityMonitoring = false;
                            }
                            if (message.enableSecureBoot != null && message.hasOwnProperty("enableSecureBoot"))
                                object.enableSecureBoot = message.enableSecureBoot;
                            if (message.enableVtpm != null && message.hasOwnProperty("enableVtpm"))
                                object.enableVtpm = message.enableVtpm;
                            if (message.enableIntegrityMonitoring != null && message.hasOwnProperty("enableIntegrityMonitoring"))
                                object.enableIntegrityMonitoring = message.enableIntegrityMonitoring;
                            return object;
                        };
    
                        /**
                         * Converts this RuntimeShieldedInstanceConfig to JSON.
                         * @function toJSON
                         * @memberof google.cloud.notebooks.v1.RuntimeShieldedInstanceConfig
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        RuntimeShieldedInstanceConfig.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for RuntimeShieldedInstanceConfig
                         * @function getTypeUrl
                         * @memberof google.cloud.notebooks.v1.RuntimeShieldedInstanceConfig
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        RuntimeShieldedInstanceConfig.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.notebooks.v1.RuntimeShieldedInstanceConfig";
                        };
    
                        return RuntimeShieldedInstanceConfig;
                    })();
    
                    v1.VirtualMachine = (function() {
    
                        /**
                         * Properties of a VirtualMachine.
                         * @memberof google.cloud.notebooks.v1
                         * @interface IVirtualMachine
                         * @property {string|null} [instanceName] VirtualMachine instanceName
                         * @property {string|null} [instanceId] VirtualMachine instanceId
                         * @property {google.cloud.notebooks.v1.IVirtualMachineConfig|null} [virtualMachineConfig] VirtualMachine virtualMachineConfig
                         */
    
                        /**
                         * Constructs a new VirtualMachine.
                         * @memberof google.cloud.notebooks.v1
                         * @classdesc Represents a VirtualMachine.
                         * @implements IVirtualMachine
                         * @constructor
                         * @param {google.cloud.notebooks.v1.IVirtualMachine=} [properties] Properties to set
                         */
                        function VirtualMachine(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * VirtualMachine instanceName.
                         * @member {string} instanceName
                         * @memberof google.cloud.notebooks.v1.VirtualMachine
                         * @instance
                         */
                        VirtualMachine.prototype.instanceName = "";
    
                        /**
                         * VirtualMachine instanceId.
                         * @member {string} instanceId
                         * @memberof google.cloud.notebooks.v1.VirtualMachine
                         * @instance
                         */
                        VirtualMachine.prototype.instanceId = "";
    
                        /**
                         * VirtualMachine virtualMachineConfig.
                         * @member {google.cloud.notebooks.v1.IVirtualMachineConfig|null|undefined} virtualMachineConfig
                         * @memberof google.cloud.notebooks.v1.VirtualMachine
                         * @instance
                         */
                        VirtualMachine.prototype.virtualMachineConfig = null;
    
                        /**
                         * Creates a new VirtualMachine instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.notebooks.v1.VirtualMachine
                         * @static
                         * @param {google.cloud.notebooks.v1.IVirtualMachine=} [properties] Properties to set
                         * @returns {google.cloud.notebooks.v1.VirtualMachine} VirtualMachine instance
                         */
                        VirtualMachine.create = function create(properties) {
                            return new VirtualMachine(properties);
                        };
    
                        /**
                         * Encodes the specified VirtualMachine message. Does not implicitly {@link google.cloud.notebooks.v1.VirtualMachine.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.notebooks.v1.VirtualMachine
                         * @static
                         * @param {google.cloud.notebooks.v1.IVirtualMachine} message VirtualMachine message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        VirtualMachine.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.instanceName != null && Object.hasOwnProperty.call(message, "instanceName"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.instanceName);
                            if (message.instanceId != null && Object.hasOwnProperty.call(message, "instanceId"))
                                writer.uint32(/* id 2, wireType 2 =*/18).string(message.instanceId);
                            if (message.virtualMachineConfig != null && Object.hasOwnProperty.call(message, "virtualMachineConfig"))
                                $root.google.cloud.notebooks.v1.VirtualMachineConfig.encode(message.virtualMachineConfig, writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();
                            return writer;
                        };
    
                        /**
                         * Encodes the specified VirtualMachine message, length delimited. Does not implicitly {@link google.cloud.notebooks.v1.VirtualMachine.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.notebooks.v1.VirtualMachine
                         * @static
                         * @param {google.cloud.notebooks.v1.IVirtualMachine} message VirtualMachine message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        VirtualMachine.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a VirtualMachine message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.notebooks.v1.VirtualMachine
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.notebooks.v1.VirtualMachine} VirtualMachine
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        VirtualMachine.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.notebooks.v1.VirtualMachine();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.instanceName = reader.string();
                                        break;
                                    }
                                case 2: {
                                        message.instanceId = reader.string();
                                        break;
                                    }
                                case 3: {
                                        message.virtualMachineConfig = $root.google.cloud.notebooks.v1.VirtualMachineConfig.decode(reader, reader.uint32());
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a VirtualMachine message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.notebooks.v1.VirtualMachine
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.notebooks.v1.VirtualMachine} VirtualMachine
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        VirtualMachine.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a VirtualMachine message.
                         * @function verify
                         * @memberof google.cloud.notebooks.v1.VirtualMachine
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        VirtualMachine.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.instanceName != null && message.hasOwnProperty("instanceName"))
                                if (!$util.isString(message.instanceName))
                                    return "instanceName: string expected";
                            if (message.instanceId != null && message.hasOwnProperty("instanceId"))
                                if (!$util.isString(message.instanceId))
                                    return "instanceId: string expected";
                            if (message.virtualMachineConfig != null && message.hasOwnProperty("virtualMachineConfig")) {
                                var error = $root.google.cloud.notebooks.v1.VirtualMachineConfig.verify(message.virtualMachineConfig);
                                if (error)
                                    return "virtualMachineConfig." + error;
                            }
                            return null;
                        };
    
                        /**
                         * Creates a VirtualMachine message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.notebooks.v1.VirtualMachine
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.notebooks.v1.VirtualMachine} VirtualMachine
                         */
                        VirtualMachine.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.notebooks.v1.VirtualMachine)
                                return object;
                            var message = new $root.google.cloud.notebooks.v1.VirtualMachine();
                            if (object.instanceName != null)
                                message.instanceName = String(object.instanceName);
                            if (object.instanceId != null)
                                message.instanceId = String(object.instanceId);
                            if (object.virtualMachineConfig != null) {
                                if (typeof object.virtualMachineConfig !== "object")
                                    throw TypeError(".google.cloud.notebooks.v1.VirtualMachine.virtualMachineConfig: object expected");
                                message.virtualMachineConfig = $root.google.cloud.notebooks.v1.VirtualMachineConfig.fromObject(object.virtualMachineConfig);
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a VirtualMachine message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.notebooks.v1.VirtualMachine
                         * @static
                         * @param {google.cloud.notebooks.v1.VirtualMachine} message VirtualMachine
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        VirtualMachine.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.instanceName = "";
                                object.instanceId = "";
                                object.virtualMachineConfig = null;
                            }
                            if (message.instanceName != null && message.hasOwnProperty("instanceName"))
                                object.instanceName = message.instanceName;
                            if (message.instanceId != null && message.hasOwnProperty("instanceId"))
                                object.instanceId = message.instanceId;
                            if (message.virtualMachineConfig != null && message.hasOwnProperty("virtualMachineConfig"))
                                object.virtualMachineConfig = $root.google.cloud.notebooks.v1.VirtualMachineConfig.toObject(message.virtualMachineConfig, options);
                            return object;
                        };
    
                        /**
                         * Converts this VirtualMachine to JSON.
                         * @function toJSON
                         * @memberof google.cloud.notebooks.v1.VirtualMachine
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        VirtualMachine.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for VirtualMachine
                         * @function getTypeUrl
                         * @memberof google.cloud.notebooks.v1.VirtualMachine
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        VirtualMachine.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.notebooks.v1.VirtualMachine";
                        };
    
                        return VirtualMachine;
                    })();
    
                    v1.VirtualMachineConfig = (function() {
    
                        /**
                         * Properties of a VirtualMachineConfig.
                         * @memberof google.cloud.notebooks.v1
                         * @interface IVirtualMachineConfig
                         * @property {string|null} [zone] VirtualMachineConfig zone
                         * @property {string|null} [machineType] VirtualMachineConfig machineType
                         * @property {Array.<google.cloud.notebooks.v1.IContainerImage>|null} [containerImages] VirtualMachineConfig containerImages
                         * @property {google.cloud.notebooks.v1.ILocalDisk|null} [dataDisk] VirtualMachineConfig dataDisk
                         * @property {google.cloud.notebooks.v1.IEncryptionConfig|null} [encryptionConfig] VirtualMachineConfig encryptionConfig
                         * @property {google.cloud.notebooks.v1.IRuntimeShieldedInstanceConfig|null} [shieldedInstanceConfig] VirtualMachineConfig shieldedInstanceConfig
                         * @property {google.cloud.notebooks.v1.IRuntimeAcceleratorConfig|null} [acceleratorConfig] VirtualMachineConfig acceleratorConfig
                         * @property {string|null} [network] VirtualMachineConfig network
                         * @property {string|null} [subnet] VirtualMachineConfig subnet
                         * @property {boolean|null} [internalIpOnly] VirtualMachineConfig internalIpOnly
                         * @property {Array.<string>|null} [tags] VirtualMachineConfig tags
                         * @property {Object.<string,string>|null} [guestAttributes] VirtualMachineConfig guestAttributes
                         * @property {Object.<string,string>|null} [metadata] VirtualMachineConfig metadata
                         * @property {Object.<string,string>|null} [labels] VirtualMachineConfig labels
                         * @property {google.cloud.notebooks.v1.VirtualMachineConfig.NicType|null} [nicType] VirtualMachineConfig nicType
                         * @property {string|null} [reservedIpRange] VirtualMachineConfig reservedIpRange
                         * @property {google.cloud.notebooks.v1.VirtualMachineConfig.IBootImage|null} [bootImage] VirtualMachineConfig bootImage
                         */
    
                        /**
                         * Constructs a new VirtualMachineConfig.
                         * @memberof google.cloud.notebooks.v1
                         * @classdesc Represents a VirtualMachineConfig.
                         * @implements IVirtualMachineConfig
                         * @constructor
                         * @param {google.cloud.notebooks.v1.IVirtualMachineConfig=} [properties] Properties to set
                         */
                        function VirtualMachineConfig(properties) {
                            this.containerImages = [];
                            this.tags = [];
                            this.guestAttributes = {};
                            this.metadata = {};
                            this.labels = {};
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * VirtualMachineConfig zone.
                         * @member {string} zone
                         * @memberof google.cloud.notebooks.v1.VirtualMachineConfig
                         * @instance
                         */
                        VirtualMachineConfig.prototype.zone = "";
    
                        /**
                         * VirtualMachineConfig machineType.
                         * @member {string} machineType
                         * @memberof google.cloud.notebooks.v1.VirtualMachineConfig
                         * @instance
                         */
                        VirtualMachineConfig.prototype.machineType = "";
    
                        /**
                         * VirtualMachineConfig containerImages.
                         * @member {Array.<google.cloud.notebooks.v1.IContainerImage>} containerImages
                         * @memberof google.cloud.notebooks.v1.VirtualMachineConfig
                         * @instance
                         */
                        VirtualMachineConfig.prototype.containerImages = $util.emptyArray;
    
                        /**
                         * VirtualMachineConfig dataDisk.
                         * @member {google.cloud.notebooks.v1.ILocalDisk|null|undefined} dataDisk
                         * @memberof google.cloud.notebooks.v1.VirtualMachineConfig
                         * @instance
                         */
                        VirtualMachineConfig.prototype.dataDisk = null;
    
                        /**
                         * VirtualMachineConfig encryptionConfig.
                         * @member {google.cloud.notebooks.v1.IEncryptionConfig|null|undefined} encryptionConfig
                         * @memberof google.cloud.notebooks.v1.VirtualMachineConfig
                         * @instance
                         */
                        VirtualMachineConfig.prototype.encryptionConfig = null;
    
                        /**
                         * VirtualMachineConfig shieldedInstanceConfig.
                         * @member {google.cloud.notebooks.v1.IRuntimeShieldedInstanceConfig|null|undefined} shieldedInstanceConfig
                         * @memberof google.cloud.notebooks.v1.VirtualMachineConfig
                         * @instance
                         */
                        VirtualMachineConfig.prototype.shieldedInstanceConfig = null;
    
                        /**
                         * VirtualMachineConfig acceleratorConfig.
                         * @member {google.cloud.notebooks.v1.IRuntimeAcceleratorConfig|null|undefined} acceleratorConfig
                         * @memberof google.cloud.notebooks.v1.VirtualMachineConfig
                         * @instance
                         */
                        VirtualMachineConfig.prototype.acceleratorConfig = null;
    
                        /**
                         * VirtualMachineConfig network.
                         * @member {string} network
                         * @memberof google.cloud.notebooks.v1.VirtualMachineConfig
                         * @instance
                         */
                        VirtualMachineConfig.prototype.network = "";
    
                        /**
                         * VirtualMachineConfig subnet.
                         * @member {string} subnet
                         * @memberof google.cloud.notebooks.v1.VirtualMachineConfig
                         * @instance
                         */
                        VirtualMachineConfig.prototype.subnet = "";
    
                        /**
                         * VirtualMachineConfig internalIpOnly.
                         * @member {boolean} internalIpOnly
                         * @memberof google.cloud.notebooks.v1.VirtualMachineConfig
                         * @instance
                         */
                        VirtualMachineConfig.prototype.internalIpOnly = false;
    
                        /**
                         * VirtualMachineConfig tags.
                         * @member {Array.<string>} tags
                         * @memberof google.cloud.notebooks.v1.VirtualMachineConfig
                         * @instance
                         */
                        VirtualMachineConfig.prototype.tags = $util.emptyArray;
    
                        /**
                         * VirtualMachineConfig guestAttributes.
                         * @member {Object.<string,string>} guestAttributes
                         * @memberof google.cloud.notebooks.v1.VirtualMachineConfig
                         * @instance
                         */
                        VirtualMachineConfig.prototype.guestAttributes = $util.emptyObject;
    
                        /**
                         * VirtualMachineConfig metadata.
                         * @member {Object.<string,string>} metadata
                         * @memberof google.cloud.notebooks.v1.VirtualMachineConfig
                         * @instance
                         */
                        VirtualMachineConfig.prototype.metadata = $util.emptyObject;
    
                        /**
                         * VirtualMachineConfig labels.
                         * @member {Object.<string,string>} labels
                         * @memberof google.cloud.notebooks.v1.VirtualMachineConfig
                         * @instance
                         */
                        VirtualMachineConfig.prototype.labels = $util.emptyObject;
    
                        /**
                         * VirtualMachineConfig nicType.
                         * @member {google.cloud.notebooks.v1.VirtualMachineConfig.NicType} nicType
                         * @memberof google.cloud.notebooks.v1.VirtualMachineConfig
                         * @instance
                         */
                        VirtualMachineConfig.prototype.nicType = 0;
    
                        /**
                         * VirtualMachineConfig reservedIpRange.
                         * @member {string} reservedIpRange
                         * @memberof google.cloud.notebooks.v1.VirtualMachineConfig
                         * @instance
                         */
                        VirtualMachineConfig.prototype.reservedIpRange = "";
    
                        /**
                         * VirtualMachineConfig bootImage.
                         * @member {google.cloud.notebooks.v1.VirtualMachineConfig.IBootImage|null|undefined} bootImage
                         * @memberof google.cloud.notebooks.v1.VirtualMachineConfig
                         * @instance
                         */
                        VirtualMachineConfig.prototype.bootImage = null;
    
                        /**
                         * Creates a new VirtualMachineConfig instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.notebooks.v1.VirtualMachineConfig
                         * @static
                         * @param {google.cloud.notebooks.v1.IVirtualMachineConfig=} [properties] Properties to set
                         * @returns {google.cloud.notebooks.v1.VirtualMachineConfig} VirtualMachineConfig instance
                         */
                        VirtualMachineConfig.create = function create(properties) {
                            return new VirtualMachineConfig(properties);
                        };
    
                        /**
                         * Encodes the specified VirtualMachineConfig message. Does not implicitly {@link google.cloud.notebooks.v1.VirtualMachineConfig.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.notebooks.v1.VirtualMachineConfig
                         * @static
                         * @param {google.cloud.notebooks.v1.IVirtualMachineConfig} message VirtualMachineConfig message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        VirtualMachineConfig.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.zone != null && Object.hasOwnProperty.call(message, "zone"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.zone);
                            if (message.machineType != null && Object.hasOwnProperty.call(message, "machineType"))
                                writer.uint32(/* id 2, wireType 2 =*/18).string(message.machineType);
                            if (message.containerImages != null && message.containerImages.length)
                                for (var i = 0; i < message.containerImages.length; ++i)
                                    $root.google.cloud.notebooks.v1.ContainerImage.encode(message.containerImages[i], writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();
                            if (message.dataDisk != null && Object.hasOwnProperty.call(message, "dataDisk"))
                                $root.google.cloud.notebooks.v1.LocalDisk.encode(message.dataDisk, writer.uint32(/* id 4, wireType 2 =*/34).fork()).ldelim();
                            if (message.encryptionConfig != null && Object.hasOwnProperty.call(message, "encryptionConfig"))
                                $root.google.cloud.notebooks.v1.EncryptionConfig.encode(message.encryptionConfig, writer.uint32(/* id 5, wireType 2 =*/42).fork()).ldelim();
                            if (message.shieldedInstanceConfig != null && Object.hasOwnProperty.call(message, "shieldedInstanceConfig"))
                                $root.google.cloud.notebooks.v1.RuntimeShieldedInstanceConfig.encode(message.shieldedInstanceConfig, writer.uint32(/* id 6, wireType 2 =*/50).fork()).ldelim();
                            if (message.acceleratorConfig != null && Object.hasOwnProperty.call(message, "acceleratorConfig"))
                                $root.google.cloud.notebooks.v1.RuntimeAcceleratorConfig.encode(message.acceleratorConfig, writer.uint32(/* id 7, wireType 2 =*/58).fork()).ldelim();
                            if (message.network != null && Object.hasOwnProperty.call(message, "network"))
                                writer.uint32(/* id 8, wireType 2 =*/66).string(message.network);
                            if (message.subnet != null && Object.hasOwnProperty.call(message, "subnet"))
                                writer.uint32(/* id 9, wireType 2 =*/74).string(message.subnet);
                            if (message.internalIpOnly != null && Object.hasOwnProperty.call(message, "internalIpOnly"))
                                writer.uint32(/* id 10, wireType 0 =*/80).bool(message.internalIpOnly);
                            if (message.tags != null && message.tags.length)
                                for (var i = 0; i < message.tags.length; ++i)
                                    writer.uint32(/* id 13, wireType 2 =*/106).string(message.tags[i]);
                            if (message.guestAttributes != null && Object.hasOwnProperty.call(message, "guestAttributes"))
                                for (var keys = Object.keys(message.guestAttributes), i = 0; i < keys.length; ++i)
                                    writer.uint32(/* id 14, wireType 2 =*/114).fork().uint32(/* id 1, wireType 2 =*/10).string(keys[i]).uint32(/* id 2, wireType 2 =*/18).string(message.guestAttributes[keys[i]]).ldelim();
                            if (message.metadata != null && Object.hasOwnProperty.call(message, "metadata"))
                                for (var keys = Object.keys(message.metadata), i = 0; i < keys.length; ++i)
                                    writer.uint32(/* id 15, wireType 2 =*/122).fork().uint32(/* id 1, wireType 2 =*/10).string(keys[i]).uint32(/* id 2, wireType 2 =*/18).string(message.metadata[keys[i]]).ldelim();
                            if (message.labels != null && Object.hasOwnProperty.call(message, "labels"))
                                for (var keys = Object.keys(message.labels), i = 0; i < keys.length; ++i)
                                    writer.uint32(/* id 16, wireType 2 =*/130).fork().uint32(/* id 1, wireType 2 =*/10).string(keys[i]).uint32(/* id 2, wireType 2 =*/18).string(message.labels[keys[i]]).ldelim();
                            if (message.nicType != null && Object.hasOwnProperty.call(message, "nicType"))
                                writer.uint32(/* id 17, wireType 0 =*/136).int32(message.nicType);
                            if (message.reservedIpRange != null && Object.hasOwnProperty.call(message, "reservedIpRange"))
                                writer.uint32(/* id 18, wireType 2 =*/146).string(message.reservedIpRange);
                            if (message.bootImage != null && Object.hasOwnProperty.call(message, "bootImage"))
                                $root.google.cloud.notebooks.v1.VirtualMachineConfig.BootImage.encode(message.bootImage, writer.uint32(/* id 19, wireType 2 =*/154).fork()).ldelim();
                            return writer;
                        };
    
                        /**
                         * Encodes the specified VirtualMachineConfig message, length delimited. Does not implicitly {@link google.cloud.notebooks.v1.VirtualMachineConfig.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.notebooks.v1.VirtualMachineConfig
                         * @static
                         * @param {google.cloud.notebooks.v1.IVirtualMachineConfig} message VirtualMachineConfig message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        VirtualMachineConfig.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a VirtualMachineConfig message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.notebooks.v1.VirtualMachineConfig
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.notebooks.v1.VirtualMachineConfig} VirtualMachineConfig
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        VirtualMachineConfig.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.notebooks.v1.VirtualMachineConfig(), key, value;
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.zone = reader.string();
                                        break;
                                    }
                                case 2: {
                                        message.machineType = reader.string();
                                        break;
                                    }
                                case 3: {
                                        if (!(message.containerImages && message.containerImages.length))
                                            message.containerImages = [];
                                        message.containerImages.push($root.google.cloud.notebooks.v1.ContainerImage.decode(reader, reader.uint32()));
                                        break;
                                    }
                                case 4: {
                                        message.dataDisk = $root.google.cloud.notebooks.v1.LocalDisk.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 5: {
                                        message.encryptionConfig = $root.google.cloud.notebooks.v1.EncryptionConfig.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 6: {
                                        message.shieldedInstanceConfig = $root.google.cloud.notebooks.v1.RuntimeShieldedInstanceConfig.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 7: {
                                        message.acceleratorConfig = $root.google.cloud.notebooks.v1.RuntimeAcceleratorConfig.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 8: {
                                        message.network = reader.string();
                                        break;
                                    }
                                case 9: {
                                        message.subnet = reader.string();
                                        break;
                                    }
                                case 10: {
                                        message.internalIpOnly = reader.bool();
                                        break;
                                    }
                                case 13: {
                                        if (!(message.tags && message.tags.length))
                                            message.tags = [];
                                        message.tags.push(reader.string());
                                        break;
                                    }
                                case 14: {
                                        if (message.guestAttributes === $util.emptyObject)
                                            message.guestAttributes = {};
                                        var end2 = reader.uint32() + reader.pos;
                                        key = "";
                                        value = "";
                                        while (reader.pos < end2) {
                                            var tag2 = reader.uint32();
                                            switch (tag2 >>> 3) {
                                            case 1:
                                                key = reader.string();
                                                break;
                                            case 2:
                                                value = reader.string();
                                                break;
                                            default:
                                                reader.skipType(tag2 & 7);
                                                break;
                                            }
                                        }
                                        message.guestAttributes[key] = value;
                                        break;
                                    }
                                case 15: {
                                        if (message.metadata === $util.emptyObject)
                                            message.metadata = {};
                                        var end2 = reader.uint32() + reader.pos;
                                        key = "";
                                        value = "";
                                        while (reader.pos < end2) {
                                            var tag2 = reader.uint32();
                                            switch (tag2 >>> 3) {
                                            case 1:
                                                key = reader.string();
                                                break;
                                            case 2:
                                                value = reader.string();
                                                break;
                                            default:
                                                reader.skipType(tag2 & 7);
                                                break;
                                            }
                                        }
                                        message.metadata[key] = value;
                                        break;
                                    }
                                case 16: {
                                        if (message.labels === $util.emptyObject)
                                            message.labels = {};
                                        var end2 = reader.uint32() + reader.pos;
                                        key = "";
                                        value = "";
                                        while (reader.pos < end2) {
                                            var tag2 = reader.uint32();
                                            switch (tag2 >>> 3) {
                                            case 1:
                                                key = reader.string();
                                                break;
                                            case 2:
                                                value = reader.string();
                                                break;
                                            default:
                                                reader.skipType(tag2 & 7);
                                                break;
                                            }
                                        }
                                        message.labels[key] = value;
                                        break;
                                    }
                                case 17: {
                                        message.nicType = reader.int32();
                                        break;
                                    }
                                case 18: {
                                        message.reservedIpRange = reader.string();
                                        break;
                                    }
                                case 19: {
                                        message.bootImage = $root.google.cloud.notebooks.v1.VirtualMachineConfig.BootImage.decode(reader, reader.uint32());
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a VirtualMachineConfig message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.notebooks.v1.VirtualMachineConfig
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.notebooks.v1.VirtualMachineConfig} VirtualMachineConfig
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        VirtualMachineConfig.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a VirtualMachineConfig message.
                         * @function verify
                         * @memberof google.cloud.notebooks.v1.VirtualMachineConfig
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        VirtualMachineConfig.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.zone != null && message.hasOwnProperty("zone"))
                                if (!$util.isString(message.zone))
                                    return "zone: string expected";
                            if (message.machineType != null && message.hasOwnProperty("machineType"))
                                if (!$util.isString(message.machineType))
                                    return "machineType: string expected";
                            if (message.containerImages != null && message.hasOwnProperty("containerImages")) {
                                if (!Array.isArray(message.containerImages))
                                    return "containerImages: array expected";
                                for (var i = 0; i < message.containerImages.length; ++i) {
                                    var error = $root.google.cloud.notebooks.v1.ContainerImage.verify(message.containerImages[i]);
                                    if (error)
                                        return "containerImages." + error;
                                }
                            }
                            if (message.dataDisk != null && message.hasOwnProperty("dataDisk")) {
                                var error = $root.google.cloud.notebooks.v1.LocalDisk.verify(message.dataDisk);
                                if (error)
                                    return "dataDisk." + error;
                            }
                            if (message.encryptionConfig != null && message.hasOwnProperty("encryptionConfig")) {
                                var error = $root.google.cloud.notebooks.v1.EncryptionConfig.verify(message.encryptionConfig);
                                if (error)
                                    return "encryptionConfig." + error;
                            }
                            if (message.shieldedInstanceConfig != null && message.hasOwnProperty("shieldedInstanceConfig")) {
                                var error = $root.google.cloud.notebooks.v1.RuntimeShieldedInstanceConfig.verify(message.shieldedInstanceConfig);
                                if (error)
                                    return "shieldedInstanceConfig." + error;
                            }
                            if (message.acceleratorConfig != null && message.hasOwnProperty("acceleratorConfig")) {
                                var error = $root.google.cloud.notebooks.v1.RuntimeAcceleratorConfig.verify(message.acceleratorConfig);
                                if (error)
                                    return "acceleratorConfig." + error;
                            }
                            if (message.network != null && message.hasOwnProperty("network"))
                                if (!$util.isString(message.network))
                                    return "network: string expected";
                            if (message.subnet != null && message.hasOwnProperty("subnet"))
                                if (!$util.isString(message.subnet))
                                    return "subnet: string expected";
                            if (message.internalIpOnly != null && message.hasOwnProperty("internalIpOnly"))
                                if (typeof message.internalIpOnly !== "boolean")
                                    return "internalIpOnly: boolean expected";
                            if (message.tags != null && message.hasOwnProperty("tags")) {
                                if (!Array.isArray(message.tags))
                                    return "tags: array expected";
                                for (var i = 0; i < message.tags.length; ++i)
                                    if (!$util.isString(message.tags[i]))
                                        return "tags: string[] expected";
                            }
                            if (message.guestAttributes != null && message.hasOwnProperty("guestAttributes")) {
                                if (!$util.isObject(message.guestAttributes))
                                    return "guestAttributes: object expected";
                                var key = Object.keys(message.guestAttributes);
                                for (var i = 0; i < key.length; ++i)
                                    if (!$util.isString(message.guestAttributes[key[i]]))
                                        return "guestAttributes: string{k:string} expected";
                            }
                            if (message.metadata != null && message.hasOwnProperty("metadata")) {
                                if (!$util.isObject(message.metadata))
                                    return "metadata: object expected";
                                var key = Object.keys(message.metadata);
                                for (var i = 0; i < key.length; ++i)
                                    if (!$util.isString(message.metadata[key[i]]))
                                        return "metadata: string{k:string} expected";
                            }
                            if (message.labels != null && message.hasOwnProperty("labels")) {
                                if (!$util.isObject(message.labels))
                                    return "labels: object expected";
                                var key = Object.keys(message.labels);
                                for (var i = 0; i < key.length; ++i)
                                    if (!$util.isString(message.labels[key[i]]))
                                        return "labels: string{k:string} expected";
                            }
                            if (message.nicType != null && message.hasOwnProperty("nicType"))
                                switch (message.nicType) {
                                default:
                                    return "nicType: enum value expected";
                                case 0:
                                case 1:
                                case 2:
                                    break;
                                }
                            if (message.reservedIpRange != null && message.hasOwnProperty("reservedIpRange"))
                                if (!$util.isString(message.reservedIpRange))
                                    return "reservedIpRange: string expected";
                            if (message.bootImage != null && message.hasOwnProperty("bootImage")) {
                                var error = $root.google.cloud.notebooks.v1.VirtualMachineConfig.BootImage.verify(message.bootImage);
                                if (error)
                                    return "bootImage." + error;
                            }
                            return null;
                        };
    
                        /**
                         * Creates a VirtualMachineConfig message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.notebooks.v1.VirtualMachineConfig
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.notebooks.v1.VirtualMachineConfig} VirtualMachineConfig
                         */
                        VirtualMachineConfig.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.notebooks.v1.VirtualMachineConfig)
                                return object;
                            var message = new $root.google.cloud.notebooks.v1.VirtualMachineConfig();
                            if (object.zone != null)
                                message.zone = String(object.zone);
                            if (object.machineType != null)
                                message.machineType = String(object.machineType);
                            if (object.containerImages) {
                                if (!Array.isArray(object.containerImages))
                                    throw TypeError(".google.cloud.notebooks.v1.VirtualMachineConfig.containerImages: array expected");
                                message.containerImages = [];
                                for (var i = 0; i < object.containerImages.length; ++i) {
                                    if (typeof object.containerImages[i] !== "object")
                                        throw TypeError(".google.cloud.notebooks.v1.VirtualMachineConfig.containerImages: object expected");
                                    message.containerImages[i] = $root.google.cloud.notebooks.v1.ContainerImage.fromObject(object.containerImages[i]);
                                }
                            }
                            if (object.dataDisk != null) {
                                if (typeof object.dataDisk !== "object")
                                    throw TypeError(".google.cloud.notebooks.v1.VirtualMachineConfig.dataDisk: object expected");
                                message.dataDisk = $root.google.cloud.notebooks.v1.LocalDisk.fromObject(object.dataDisk);
                            }
                            if (object.encryptionConfig != null) {
                                if (typeof object.encryptionConfig !== "object")
                                    throw TypeError(".google.cloud.notebooks.v1.VirtualMachineConfig.encryptionConfig: object expected");
                                message.encryptionConfig = $root.google.cloud.notebooks.v1.EncryptionConfig.fromObject(object.encryptionConfig);
                            }
                            if (object.shieldedInstanceConfig != null) {
                                if (typeof object.shieldedInstanceConfig !== "object")
                                    throw TypeError(".google.cloud.notebooks.v1.VirtualMachineConfig.shieldedInstanceConfig: object expected");
                                message.shieldedInstanceConfig = $root.google.cloud.notebooks.v1.RuntimeShieldedInstanceConfig.fromObject(object.shieldedInstanceConfig);
                            }
                            if (object.acceleratorConfig != null) {
                                if (typeof object.acceleratorConfig !== "object")
                                    throw TypeError(".google.cloud.notebooks.v1.VirtualMachineConfig.acceleratorConfig: object expected");
                                message.acceleratorConfig = $root.google.cloud.notebooks.v1.RuntimeAcceleratorConfig.fromObject(object.acceleratorConfig);
                            }
                            if (object.network != null)
                                message.network = String(object.network);
                            if (object.subnet != null)
                                message.subnet = String(object.subnet);
                            if (object.internalIpOnly != null)
                                message.internalIpOnly = Boolean(object.internalIpOnly);
                            if (object.tags) {
                                if (!Array.isArray(object.tags))
                                    throw TypeError(".google.cloud.notebooks.v1.VirtualMachineConfig.tags: array expected");
                                message.tags = [];
                                for (var i = 0; i < object.tags.length; ++i)
                                    message.tags[i] = String(object.tags[i]);
                            }
                            if (object.guestAttributes) {
                                if (typeof object.guestAttributes !== "object")
                                    throw TypeError(".google.cloud.notebooks.v1.VirtualMachineConfig.guestAttributes: object expected");
                                message.guestAttributes = {};
                                for (var keys = Object.keys(object.guestAttributes), i = 0; i < keys.length; ++i)
                                    message.guestAttributes[keys[i]] = String(object.guestAttributes[keys[i]]);
                            }
                            if (object.metadata) {
                                if (typeof object.metadata !== "object")
                                    throw TypeError(".google.cloud.notebooks.v1.VirtualMachineConfig.metadata: object expected");
                                message.metadata = {};
                                for (var keys = Object.keys(object.metadata), i = 0; i < keys.length; ++i)
                                    message.metadata[keys[i]] = String(object.metadata[keys[i]]);
                            }
                            if (object.labels) {
                                if (typeof object.labels !== "object")
                                    throw TypeError(".google.cloud.notebooks.v1.VirtualMachineConfig.labels: object expected");
                                message.labels = {};
                                for (var keys = Object.keys(object.labels), i = 0; i < keys.length; ++i)
                                    message.labels[keys[i]] = String(object.labels[keys[i]]);
                            }
                            switch (object.nicType) {
                            default:
                                if (typeof object.nicType === "number") {
                                    message.nicType = object.nicType;
                                    break;
                                }
                                break;
                            case "UNSPECIFIED_NIC_TYPE":
                            case 0:
                                message.nicType = 0;
                                break;
                            case "VIRTIO_NET":
                            case 1:
                                message.nicType = 1;
                                break;
                            case "GVNIC":
                            case 2:
                                message.nicType = 2;
                                break;
                            }
                            if (object.reservedIpRange != null)
                                message.reservedIpRange = String(object.reservedIpRange);
                            if (object.bootImage != null) {
                                if (typeof object.bootImage !== "object")
                                    throw TypeError(".google.cloud.notebooks.v1.VirtualMachineConfig.bootImage: object expected");
                                message.bootImage = $root.google.cloud.notebooks.v1.VirtualMachineConfig.BootImage.fromObject(object.bootImage);
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a VirtualMachineConfig message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.notebooks.v1.VirtualMachineConfig
                         * @static
                         * @param {google.cloud.notebooks.v1.VirtualMachineConfig} message VirtualMachineConfig
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        VirtualMachineConfig.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.arrays || options.defaults) {
                                object.containerImages = [];
                                object.tags = [];
                            }
                            if (options.objects || options.defaults) {
                                object.guestAttributes = {};
                                object.metadata = {};
                                object.labels = {};
                            }
                            if (options.defaults) {
                                object.zone = "";
                                object.machineType = "";
                                object.dataDisk = null;
                                object.encryptionConfig = null;
                                object.shieldedInstanceConfig = null;
                                object.acceleratorConfig = null;
                                object.network = "";
                                object.subnet = "";
                                object.internalIpOnly = false;
                                object.nicType = options.enums === String ? "UNSPECIFIED_NIC_TYPE" : 0;
                                object.reservedIpRange = "";
                                object.bootImage = null;
                            }
                            if (message.zone != null && message.hasOwnProperty("zone"))
                                object.zone = message.zone;
                            if (message.machineType != null && message.hasOwnProperty("machineType"))
                                object.machineType = message.machineType;
                            if (message.containerImages && message.containerImages.length) {
                                object.containerImages = [];
                                for (var j = 0; j < message.containerImages.length; ++j)
                                    object.containerImages[j] = $root.google.cloud.notebooks.v1.ContainerImage.toObject(message.containerImages[j], options);
                            }
                            if (message.dataDisk != null && message.hasOwnProperty("dataDisk"))
                                object.dataDisk = $root.google.cloud.notebooks.v1.LocalDisk.toObject(message.dataDisk, options);
                            if (message.encryptionConfig != null && message.hasOwnProperty("encryptionConfig"))
                                object.encryptionConfig = $root.google.cloud.notebooks.v1.EncryptionConfig.toObject(message.encryptionConfig, options);
                            if (message.shieldedInstanceConfig != null && message.hasOwnProperty("shieldedInstanceConfig"))
                                object.shieldedInstanceConfig = $root.google.cloud.notebooks.v1.RuntimeShieldedInstanceConfig.toObject(message.shieldedInstanceConfig, options);
                            if (message.acceleratorConfig != null && message.hasOwnProperty("acceleratorConfig"))
                                object.acceleratorConfig = $root.google.cloud.notebooks.v1.RuntimeAcceleratorConfig.toObject(message.acceleratorConfig, options);
                            if (message.network != null && message.hasOwnProperty("network"))
                                object.network = message.network;
                            if (message.subnet != null && message.hasOwnProperty("subnet"))
                                object.subnet = message.subnet;
                            if (message.internalIpOnly != null && message.hasOwnProperty("internalIpOnly"))
                                object.internalIpOnly = message.internalIpOnly;
                            if (message.tags && message.tags.length) {
                                object.tags = [];
                                for (var j = 0; j < message.tags.length; ++j)
                                    object.tags[j] = message.tags[j];
                            }
                            var keys2;
                            if (message.guestAttributes && (keys2 = Object.keys(message.guestAttributes)).length) {
                                object.guestAttributes = {};
                                for (var j = 0; j < keys2.length; ++j)
                                    object.guestAttributes[keys2[j]] = message.guestAttributes[keys2[j]];
                            }
                            if (message.metadata && (keys2 = Object.keys(message.metadata)).length) {
                                object.metadata = {};
                                for (var j = 0; j < keys2.length; ++j)
                                    object.metadata[keys2[j]] = message.metadata[keys2[j]];
                            }
                            if (message.labels && (keys2 = Object.keys(message.labels)).length) {
                                object.labels = {};
                                for (var j = 0; j < keys2.length; ++j)
                                    object.labels[keys2[j]] = message.labels[keys2[j]];
                            }
                            if (message.nicType != null && message.hasOwnProperty("nicType"))
                                object.nicType = options.enums === String ? $root.google.cloud.notebooks.v1.VirtualMachineConfig.NicType[message.nicType] === undefined ? message.nicType : $root.google.cloud.notebooks.v1.VirtualMachineConfig.NicType[message.nicType] : message.nicType;
                            if (message.reservedIpRange != null && message.hasOwnProperty("reservedIpRange"))
                                object.reservedIpRange = message.reservedIpRange;
                            if (message.bootImage != null && message.hasOwnProperty("bootImage"))
                                object.bootImage = $root.google.cloud.notebooks.v1.VirtualMachineConfig.BootImage.toObject(message.bootImage, options);
                            return object;
                        };
    
                        /**
                         * Converts this VirtualMachineConfig to JSON.
                         * @function toJSON
                         * @memberof google.cloud.notebooks.v1.VirtualMachineConfig
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        VirtualMachineConfig.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for VirtualMachineConfig
                         * @function getTypeUrl
                         * @memberof google.cloud.notebooks.v1.VirtualMachineConfig
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        VirtualMachineConfig.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.notebooks.v1.VirtualMachineConfig";
                        };
    
                        /**
                         * NicType enum.
                         * @name google.cloud.notebooks.v1.VirtualMachineConfig.NicType
                         * @enum {number}
                         * @property {number} UNSPECIFIED_NIC_TYPE=0 UNSPECIFIED_NIC_TYPE value
                         * @property {number} VIRTIO_NET=1 VIRTIO_NET value
                         * @property {number} GVNIC=2 GVNIC value
                         */
                        VirtualMachineConfig.NicType = (function() {
                            var valuesById = {}, values = Object.create(valuesById);
                            values[valuesById[0] = "UNSPECIFIED_NIC_TYPE"] = 0;
                            values[valuesById[1] = "VIRTIO_NET"] = 1;
                            values[valuesById[2] = "GVNIC"] = 2;
                            return values;
                        })();
    
                        VirtualMachineConfig.BootImage = (function() {
    
                            /**
                             * Properties of a BootImage.
                             * @memberof google.cloud.notebooks.v1.VirtualMachineConfig
                             * @interface IBootImage
                             */
    
                            /**
                             * Constructs a new BootImage.
                             * @memberof google.cloud.notebooks.v1.VirtualMachineConfig
                             * @classdesc Represents a BootImage.
                             * @implements IBootImage
                             * @constructor
                             * @param {google.cloud.notebooks.v1.VirtualMachineConfig.IBootImage=} [properties] Properties to set
                             */
                            function BootImage(properties) {
                                if (properties)
                                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                        if (properties[keys[i]] != null)
                                            this[keys[i]] = properties[keys[i]];
                            }
    
                            /**
                             * Creates a new BootImage instance using the specified properties.
                             * @function create
                             * @memberof google.cloud.notebooks.v1.VirtualMachineConfig.BootImage
                             * @static
                             * @param {google.cloud.notebooks.v1.VirtualMachineConfig.IBootImage=} [properties] Properties to set
                             * @returns {google.cloud.notebooks.v1.VirtualMachineConfig.BootImage} BootImage instance
                             */
                            BootImage.create = function create(properties) {
                                return new BootImage(properties);
                            };
    
                            /**
                             * Encodes the specified BootImage message. Does not implicitly {@link google.cloud.notebooks.v1.VirtualMachineConfig.BootImage.verify|verify} messages.
                             * @function encode
                             * @memberof google.cloud.notebooks.v1.VirtualMachineConfig.BootImage
                             * @static
                             * @param {google.cloud.notebooks.v1.VirtualMachineConfig.IBootImage} message BootImage message or plain object to encode
                             * @param {$protobuf.Writer} [writer] Writer to encode to
                             * @returns {$protobuf.Writer} Writer
                             */
                            BootImage.encode = function encode(message, writer) {
                                if (!writer)
                                    writer = $Writer.create();
                                return writer;
                            };
    
                            /**
                             * Encodes the specified BootImage message, length delimited. Does not implicitly {@link google.cloud.notebooks.v1.VirtualMachineConfig.BootImage.verify|verify} messages.
                             * @function encodeDelimited
                             * @memberof google.cloud.notebooks.v1.VirtualMachineConfig.BootImage
                             * @static
                             * @param {google.cloud.notebooks.v1.VirtualMachineConfig.IBootImage} message BootImage message or plain object to encode
                             * @param {$protobuf.Writer} [writer] Writer to encode to
                             * @returns {$protobuf.Writer} Writer
                             */
                            BootImage.encodeDelimited = function encodeDelimited(message, writer) {
                                return this.encode(message, writer).ldelim();
                            };
    
                            /**
                             * Decodes a BootImage message from the specified reader or buffer.
                             * @function decode
                             * @memberof google.cloud.notebooks.v1.VirtualMachineConfig.BootImage
                             * @static
                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                             * @param {number} [length] Message length if known beforehand
                             * @returns {google.cloud.notebooks.v1.VirtualMachineConfig.BootImage} BootImage
                             * @throws {Error} If the payload is not a reader or valid buffer
                             * @throws {$protobuf.util.ProtocolError} If required fields are missing
                             */
                            BootImage.decode = function decode(reader, length) {
                                if (!(reader instanceof $Reader))
                                    reader = $Reader.create(reader);
                                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.notebooks.v1.VirtualMachineConfig.BootImage();
                                while (reader.pos < end) {
                                    var tag = reader.uint32();
                                    switch (tag >>> 3) {
                                    default:
                                        reader.skipType(tag & 7);
                                        break;
                                    }
                                }
                                return message;
                            };
    
                            /**
                             * Decodes a BootImage message from the specified reader or buffer, length delimited.
                             * @function decodeDelimited
                             * @memberof google.cloud.notebooks.v1.VirtualMachineConfig.BootImage
                             * @static
                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                             * @returns {google.cloud.notebooks.v1.VirtualMachineConfig.BootImage} BootImage
                             * @throws {Error} If the payload is not a reader or valid buffer
                             * @throws {$protobuf.util.ProtocolError} If required fields are missing
                             */
                            BootImage.decodeDelimited = function decodeDelimited(reader) {
                                if (!(reader instanceof $Reader))
                                    reader = new $Reader(reader);
                                return this.decode(reader, reader.uint32());
                            };
    
                            /**
                             * Verifies a BootImage message.
                             * @function verify
                             * @memberof google.cloud.notebooks.v1.VirtualMachineConfig.BootImage
                             * @static
                             * @param {Object.<string,*>} message Plain object to verify
                             * @returns {string|null} `null` if valid, otherwise the reason why it is not
                             */
                            BootImage.verify = function verify(message) {
                                if (typeof message !== "object" || message === null)
                                    return "object expected";
                                return null;
                            };
    
                            /**
                             * Creates a BootImage message from a plain object. Also converts values to their respective internal types.
                             * @function fromObject
                             * @memberof google.cloud.notebooks.v1.VirtualMachineConfig.BootImage
                             * @static
                             * @param {Object.<string,*>} object Plain object
                             * @returns {google.cloud.notebooks.v1.VirtualMachineConfig.BootImage} BootImage
                             */
                            BootImage.fromObject = function fromObject(object) {
                                if (object instanceof $root.google.cloud.notebooks.v1.VirtualMachineConfig.BootImage)
                                    return object;
                                return new $root.google.cloud.notebooks.v1.VirtualMachineConfig.BootImage();
                            };
    
                            /**
                             * Creates a plain object from a BootImage message. Also converts values to other types if specified.
                             * @function toObject
                             * @memberof google.cloud.notebooks.v1.VirtualMachineConfig.BootImage
                             * @static
                             * @param {google.cloud.notebooks.v1.VirtualMachineConfig.BootImage} message BootImage
                             * @param {$protobuf.IConversionOptions} [options] Conversion options
                             * @returns {Object.<string,*>} Plain object
                             */
                            BootImage.toObject = function toObject() {
                                return {};
                            };
    
                            /**
                             * Converts this BootImage to JSON.
                             * @function toJSON
                             * @memberof google.cloud.notebooks.v1.VirtualMachineConfig.BootImage
                             * @instance
                             * @returns {Object.<string,*>} JSON object
                             */
                            BootImage.prototype.toJSON = function toJSON() {
                                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                            };
    
                            /**
                             * Gets the default type url for BootImage
                             * @function getTypeUrl
                             * @memberof google.cloud.notebooks.v1.VirtualMachineConfig.BootImage
                             * @static
                             * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                             * @returns {string} The default type url
                             */
                            BootImage.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                                if (typeUrlPrefix === undefined) {
                                    typeUrlPrefix = "type.googleapis.com";
                                }
                                return typeUrlPrefix + "/google.cloud.notebooks.v1.VirtualMachineConfig.BootImage";
                            };
    
                            return BootImage;
                        })();
    
                        return VirtualMachineConfig;
                    })();
    
                    v1.Schedule = (function() {
    
                        /**
                         * Properties of a Schedule.
                         * @memberof google.cloud.notebooks.v1
                         * @interface ISchedule
                         * @property {string|null} [name] Schedule name
                         * @property {string|null} [displayName] Schedule displayName
                         * @property {string|null} [description] Schedule description
                         * @property {google.cloud.notebooks.v1.Schedule.State|null} [state] Schedule state
                         * @property {string|null} [cronSchedule] Schedule cronSchedule
                         * @property {string|null} [timeZone] Schedule timeZone
                         * @property {google.protobuf.ITimestamp|null} [createTime] Schedule createTime
                         * @property {google.protobuf.ITimestamp|null} [updateTime] Schedule updateTime
                         * @property {google.cloud.notebooks.v1.IExecutionTemplate|null} [executionTemplate] Schedule executionTemplate
                         * @property {Array.<google.cloud.notebooks.v1.IExecution>|null} [recentExecutions] Schedule recentExecutions
                         */
    
                        /**
                         * Constructs a new Schedule.
                         * @memberof google.cloud.notebooks.v1
                         * @classdesc Represents a Schedule.
                         * @implements ISchedule
                         * @constructor
                         * @param {google.cloud.notebooks.v1.ISchedule=} [properties] Properties to set
                         */
                        function Schedule(properties) {
                            this.recentExecutions = [];
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * Schedule name.
                         * @member {string} name
                         * @memberof google.cloud.notebooks.v1.Schedule
                         * @instance
                         */
                        Schedule.prototype.name = "";
    
                        /**
                         * Schedule displayName.
                         * @member {string} displayName
                         * @memberof google.cloud.notebooks.v1.Schedule
                         * @instance
                         */
                        Schedule.prototype.displayName = "";
    
                        /**
                         * Schedule description.
                         * @member {string} description
                         * @memberof google.cloud.notebooks.v1.Schedule
                         * @instance
                         */
                        Schedule.prototype.description = "";
    
                        /**
                         * Schedule state.
                         * @member {google.cloud.notebooks.v1.Schedule.State} state
                         * @memberof google.cloud.notebooks.v1.Schedule
                         * @instance
                         */
                        Schedule.prototype.state = 0;
    
                        /**
                         * Schedule cronSchedule.
                         * @member {string} cronSchedule
                         * @memberof google.cloud.notebooks.v1.Schedule
                         * @instance
                         */
                        Schedule.prototype.cronSchedule = "";
    
                        /**
                         * Schedule timeZone.
                         * @member {string} timeZone
                         * @memberof google.cloud.notebooks.v1.Schedule
                         * @instance
                         */
                        Schedule.prototype.timeZone = "";
    
                        /**
                         * Schedule createTime.
                         * @member {google.protobuf.ITimestamp|null|undefined} createTime
                         * @memberof google.cloud.notebooks.v1.Schedule
                         * @instance
                         */
                        Schedule.prototype.createTime = null;
    
                        /**
                         * Schedule updateTime.
                         * @member {google.protobuf.ITimestamp|null|undefined} updateTime
                         * @memberof google.cloud.notebooks.v1.Schedule
                         * @instance
                         */
                        Schedule.prototype.updateTime = null;
    
                        /**
                         * Schedule executionTemplate.
                         * @member {google.cloud.notebooks.v1.IExecutionTemplate|null|undefined} executionTemplate
                         * @memberof google.cloud.notebooks.v1.Schedule
                         * @instance
                         */
                        Schedule.prototype.executionTemplate = null;
    
                        /**
                         * Schedule recentExecutions.
                         * @member {Array.<google.cloud.notebooks.v1.IExecution>} recentExecutions
                         * @memberof google.cloud.notebooks.v1.Schedule
                         * @instance
                         */
                        Schedule.prototype.recentExecutions = $util.emptyArray;
    
                        /**
                         * Creates a new Schedule instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.notebooks.v1.Schedule
                         * @static
                         * @param {google.cloud.notebooks.v1.ISchedule=} [properties] Properties to set
                         * @returns {google.cloud.notebooks.v1.Schedule} Schedule instance
                         */
                        Schedule.create = function create(properties) {
                            return new Schedule(properties);
                        };
    
                        /**
                         * Encodes the specified Schedule message. Does not implicitly {@link google.cloud.notebooks.v1.Schedule.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.notebooks.v1.Schedule
                         * @static
                         * @param {google.cloud.notebooks.v1.ISchedule} message Schedule message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        Schedule.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                            if (message.displayName != null && Object.hasOwnProperty.call(message, "displayName"))
                                writer.uint32(/* id 2, wireType 2 =*/18).string(message.displayName);
                            if (message.description != null && Object.hasOwnProperty.call(message, "description"))
                                writer.uint32(/* id 3, wireType 2 =*/26).string(message.description);
                            if (message.state != null && Object.hasOwnProperty.call(message, "state"))
                                writer.uint32(/* id 4, wireType 0 =*/32).int32(message.state);
                            if (message.cronSchedule != null && Object.hasOwnProperty.call(message, "cronSchedule"))
                                writer.uint32(/* id 5, wireType 2 =*/42).string(message.cronSchedule);
                            if (message.timeZone != null && Object.hasOwnProperty.call(message, "timeZone"))
                                writer.uint32(/* id 6, wireType 2 =*/50).string(message.timeZone);
                            if (message.createTime != null && Object.hasOwnProperty.call(message, "createTime"))
                                $root.google.protobuf.Timestamp.encode(message.createTime, writer.uint32(/* id 7, wireType 2 =*/58).fork()).ldelim();
                            if (message.updateTime != null && Object.hasOwnProperty.call(message, "updateTime"))
                                $root.google.protobuf.Timestamp.encode(message.updateTime, writer.uint32(/* id 8, wireType 2 =*/66).fork()).ldelim();
                            if (message.executionTemplate != null && Object.hasOwnProperty.call(message, "executionTemplate"))
                                $root.google.cloud.notebooks.v1.ExecutionTemplate.encode(message.executionTemplate, writer.uint32(/* id 9, wireType 2 =*/74).fork()).ldelim();
                            if (message.recentExecutions != null && message.recentExecutions.length)
                                for (var i = 0; i < message.recentExecutions.length; ++i)
                                    $root.google.cloud.notebooks.v1.Execution.encode(message.recentExecutions[i], writer.uint32(/* id 10, wireType 2 =*/82).fork()).ldelim();
                            return writer;
                        };
    
                        /**
                         * Encodes the specified Schedule message, length delimited. Does not implicitly {@link google.cloud.notebooks.v1.Schedule.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.notebooks.v1.Schedule
                         * @static
                         * @param {google.cloud.notebooks.v1.ISchedule} message Schedule message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        Schedule.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a Schedule message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.notebooks.v1.Schedule
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.notebooks.v1.Schedule} Schedule
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        Schedule.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.notebooks.v1.Schedule();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.name = reader.string();
                                        break;
                                    }
                                case 2: {
                                        message.displayName = reader.string();
                                        break;
                                    }
                                case 3: {
                                        message.description = reader.string();
                                        break;
                                    }
                                case 4: {
                                        message.state = reader.int32();
                                        break;
                                    }
                                case 5: {
                                        message.cronSchedule = reader.string();
                                        break;
                                    }
                                case 6: {
                                        message.timeZone = reader.string();
                                        break;
                                    }
                                case 7: {
                                        message.createTime = $root.google.protobuf.Timestamp.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 8: {
                                        message.updateTime = $root.google.protobuf.Timestamp.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 9: {
                                        message.executionTemplate = $root.google.cloud.notebooks.v1.ExecutionTemplate.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 10: {
                                        if (!(message.recentExecutions && message.recentExecutions.length))
                                            message.recentExecutions = [];
                                        message.recentExecutions.push($root.google.cloud.notebooks.v1.Execution.decode(reader, reader.uint32()));
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a Schedule message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.notebooks.v1.Schedule
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.notebooks.v1.Schedule} Schedule
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        Schedule.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a Schedule message.
                         * @function verify
                         * @memberof google.cloud.notebooks.v1.Schedule
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        Schedule.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.name != null && message.hasOwnProperty("name"))
                                if (!$util.isString(message.name))
                                    return "name: string expected";
                            if (message.displayName != null && message.hasOwnProperty("displayName"))
                                if (!$util.isString(message.displayName))
                                    return "displayName: string expected";
                            if (message.description != null && message.hasOwnProperty("description"))
                                if (!$util.isString(message.description))
                                    return "description: string expected";
                            if (message.state != null && message.hasOwnProperty("state"))
                                switch (message.state) {
                                default:
                                    return "state: enum value expected";
                                case 0:
                                case 1:
                                case 2:
                                case 3:
                                case 4:
                                case 5:
                                case 6:
                                    break;
                                }
                            if (message.cronSchedule != null && message.hasOwnProperty("cronSchedule"))
                                if (!$util.isString(message.cronSchedule))
                                    return "cronSchedule: string expected";
                            if (message.timeZone != null && message.hasOwnProperty("timeZone"))
                                if (!$util.isString(message.timeZone))
                                    return "timeZone: string expected";
                            if (message.createTime != null && message.hasOwnProperty("createTime")) {
                                var error = $root.google.protobuf.Timestamp.verify(message.createTime);
                                if (error)
                                    return "createTime." + error;
                            }
                            if (message.updateTime != null && message.hasOwnProperty("updateTime")) {
                                var error = $root.google.protobuf.Timestamp.verify(message.updateTime);
                                if (error)
                                    return "updateTime." + error;
                            }
                            if (message.executionTemplate != null && message.hasOwnProperty("executionTemplate")) {
                                var error = $root.google.cloud.notebooks.v1.ExecutionTemplate.verify(message.executionTemplate);
                                if (error)
                                    return "executionTemplate." + error;
                            }
                            if (message.recentExecutions != null && message.hasOwnProperty("recentExecutions")) {
                                if (!Array.isArray(message.recentExecutions))
                                    return "recentExecutions: array expected";
                                for (var i = 0; i < message.recentExecutions.length; ++i) {
                                    var error = $root.google.cloud.notebooks.v1.Execution.verify(message.recentExecutions[i]);
                                    if (error)
                                        return "recentExecutions." + error;
                                }
                            }
                            return null;
                        };
    
                        /**
                         * Creates a Schedule message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.notebooks.v1.Schedule
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.notebooks.v1.Schedule} Schedule
                         */
                        Schedule.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.notebooks.v1.Schedule)
                                return object;
                            var message = new $root.google.cloud.notebooks.v1.Schedule();
                            if (object.name != null)
                                message.name = String(object.name);
                            if (object.displayName != null)
                                message.displayName = String(object.displayName);
                            if (object.description != null)
                                message.description = String(object.description);
                            switch (object.state) {
                            default:
                                if (typeof object.state === "number") {
                                    message.state = object.state;
                                    break;
                                }
                                break;
                            case "STATE_UNSPECIFIED":
                            case 0:
                                message.state = 0;
                                break;
                            case "ENABLED":
                            case 1:
                                message.state = 1;
                                break;
                            case "PAUSED":
                            case 2:
                                message.state = 2;
                                break;
                            case "DISABLED":
                            case 3:
                                message.state = 3;
                                break;
                            case "UPDATE_FAILED":
                            case 4:
                                message.state = 4;
                                break;
                            case "INITIALIZING":
                            case 5:
                                message.state = 5;
                                break;
                            case "DELETING":
                            case 6:
                                message.state = 6;
                                break;
                            }
                            if (object.cronSchedule != null)
                                message.cronSchedule = String(object.cronSchedule);
                            if (object.timeZone != null)
                                message.timeZone = String(object.timeZone);
                            if (object.createTime != null) {
                                if (typeof object.createTime !== "object")
                                    throw TypeError(".google.cloud.notebooks.v1.Schedule.createTime: object expected");
                                message.createTime = $root.google.protobuf.Timestamp.fromObject(object.createTime);
                            }
                            if (object.updateTime != null) {
                                if (typeof object.updateTime !== "object")
                                    throw TypeError(".google.cloud.notebooks.v1.Schedule.updateTime: object expected");
                                message.updateTime = $root.google.protobuf.Timestamp.fromObject(object.updateTime);
                            }
                            if (object.executionTemplate != null) {
                                if (typeof object.executionTemplate !== "object")
                                    throw TypeError(".google.cloud.notebooks.v1.Schedule.executionTemplate: object expected");
                                message.executionTemplate = $root.google.cloud.notebooks.v1.ExecutionTemplate.fromObject(object.executionTemplate);
                            }
                            if (object.recentExecutions) {
                                if (!Array.isArray(object.recentExecutions))
                                    throw TypeError(".google.cloud.notebooks.v1.Schedule.recentExecutions: array expected");
                                message.recentExecutions = [];
                                for (var i = 0; i < object.recentExecutions.length; ++i) {
                                    if (typeof object.recentExecutions[i] !== "object")
                                        throw TypeError(".google.cloud.notebooks.v1.Schedule.recentExecutions: object expected");
                                    message.recentExecutions[i] = $root.google.cloud.notebooks.v1.Execution.fromObject(object.recentExecutions[i]);
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a Schedule message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.notebooks.v1.Schedule
                         * @static
                         * @param {google.cloud.notebooks.v1.Schedule} message Schedule
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        Schedule.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.arrays || options.defaults)
                                object.recentExecutions = [];
                            if (options.defaults) {
                                object.name = "";
                                object.displayName = "";
                                object.description = "";
                                object.state = options.enums === String ? "STATE_UNSPECIFIED" : 0;
                                object.cronSchedule = "";
                                object.timeZone = "";
                                object.createTime = null;
                                object.updateTime = null;
                                object.executionTemplate = null;
                            }
                            if (message.name != null && message.hasOwnProperty("name"))
                                object.name = message.name;
                            if (message.displayName != null && message.hasOwnProperty("displayName"))
                                object.displayName = message.displayName;
                            if (message.description != null && message.hasOwnProperty("description"))
                                object.description = message.description;
                            if (message.state != null && message.hasOwnProperty("state"))
                                object.state = options.enums === String ? $root.google.cloud.notebooks.v1.Schedule.State[message.state] === undefined ? message.state : $root.google.cloud.notebooks.v1.Schedule.State[message.state] : message.state;
                            if (message.cronSchedule != null && message.hasOwnProperty("cronSchedule"))
                                object.cronSchedule = message.cronSchedule;
                            if (message.timeZone != null && message.hasOwnProperty("timeZone"))
                                object.timeZone = message.timeZone;
                            if (message.createTime != null && message.hasOwnProperty("createTime"))
                                object.createTime = $root.google.protobuf.Timestamp.toObject(message.createTime, options);
                            if (message.updateTime != null && message.hasOwnProperty("updateTime"))
                                object.updateTime = $root.google.protobuf.Timestamp.toObject(message.updateTime, options);
                            if (message.executionTemplate != null && message.hasOwnProperty("executionTemplate"))
                                object.executionTemplate = $root.google.cloud.notebooks.v1.ExecutionTemplate.toObject(message.executionTemplate, options);
                            if (message.recentExecutions && message.recentExecutions.length) {
                                object.recentExecutions = [];
                                for (var j = 0; j < message.recentExecutions.length; ++j)
                                    object.recentExecutions[j] = $root.google.cloud.notebooks.v1.Execution.toObject(message.recentExecutions[j], options);
                            }
                            return object;
                        };
    
                        /**
                         * Converts this Schedule to JSON.
                         * @function toJSON
                         * @memberof google.cloud.notebooks.v1.Schedule
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        Schedule.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for Schedule
                         * @function getTypeUrl
                         * @memberof google.cloud.notebooks.v1.Schedule
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        Schedule.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.notebooks.v1.Schedule";
                        };
    
                        /**
                         * State enum.
                         * @name google.cloud.notebooks.v1.Schedule.State
                         * @enum {number}
                         * @property {number} STATE_UNSPECIFIED=0 STATE_UNSPECIFIED value
                         * @property {number} ENABLED=1 ENABLED value
                         * @property {number} PAUSED=2 PAUSED value
                         * @property {number} DISABLED=3 DISABLED value
                         * @property {number} UPDATE_FAILED=4 UPDATE_FAILED value
                         * @property {number} INITIALIZING=5 INITIALIZING value
                         * @property {number} DELETING=6 DELETING value
                         */
                        Schedule.State = (function() {
                            var valuesById = {}, values = Object.create(valuesById);
                            values[valuesById[0] = "STATE_UNSPECIFIED"] = 0;
                            values[valuesById[1] = "ENABLED"] = 1;
                            values[valuesById[2] = "PAUSED"] = 2;
                            values[valuesById[3] = "DISABLED"] = 3;
                            values[valuesById[4] = "UPDATE_FAILED"] = 4;
                            values[valuesById[5] = "INITIALIZING"] = 5;
                            values[valuesById[6] = "DELETING"] = 6;
                            return values;
                        })();
    
                        return Schedule;
                    })();
    
                    v1.NotebookService = (function() {
    
                        /**
                         * Constructs a new NotebookService service.
                         * @memberof google.cloud.notebooks.v1
                         * @classdesc Represents a NotebookService
                         * @extends $protobuf.rpc.Service
                         * @constructor
                         * @param {$protobuf.RPCImpl} rpcImpl RPC implementation
                         * @param {boolean} [requestDelimited=false] Whether requests are length-delimited
                         * @param {boolean} [responseDelimited=false] Whether responses are length-delimited
                         */
                        function NotebookService(rpcImpl, requestDelimited, responseDelimited) {
                            $protobuf.rpc.Service.call(this, rpcImpl, requestDelimited, responseDelimited);
                        }
    
                        (NotebookService.prototype = Object.create($protobuf.rpc.Service.prototype)).constructor = NotebookService;
    
                        /**
                         * Creates new NotebookService service using the specified rpc implementation.
                         * @function create
                         * @memberof google.cloud.notebooks.v1.NotebookService
                         * @static
                         * @param {$protobuf.RPCImpl} rpcImpl RPC implementation
                         * @param {boolean} [requestDelimited=false] Whether requests are length-delimited
                         * @param {boolean} [responseDelimited=false] Whether responses are length-delimited
                         * @returns {NotebookService} RPC service. Useful where requests and/or responses are streamed.
                         */
                        NotebookService.create = function create(rpcImpl, requestDelimited, responseDelimited) {
                            return new this(rpcImpl, requestDelimited, responseDelimited);
                        };
    
                        /**
                         * Callback as used by {@link google.cloud.notebooks.v1.NotebookService|listInstances}.
                         * @memberof google.cloud.notebooks.v1.NotebookService
                         * @typedef ListInstancesCallback
                         * @type {function}
                         * @param {Error|null} error Error, if any
                         * @param {google.cloud.notebooks.v1.ListInstancesResponse} [response] ListInstancesResponse
                         */
    
                        /**
                         * Calls ListInstances.
                         * @function listInstances
                         * @memberof google.cloud.notebooks.v1.NotebookService
                         * @instance
                         * @param {google.cloud.notebooks.v1.IListInstancesRequest} request ListInstancesRequest message or plain object
                         * @param {google.cloud.notebooks.v1.NotebookService.ListInstancesCallback} callback Node-style callback called with the error, if any, and ListInstancesResponse
                         * @returns {undefined}
                         * @variation 1
                         */
                        Object.defineProperty(NotebookService.prototype.listInstances = function listInstances(request, callback) {
                            return this.rpcCall(listInstances, $root.google.cloud.notebooks.v1.ListInstancesRequest, $root.google.cloud.notebooks.v1.ListInstancesResponse, request, callback);
                        }, "name", { value: "ListInstances" });
    
                        /**
                         * Calls ListInstances.
                         * @function listInstances
                         * @memberof google.cloud.notebooks.v1.NotebookService
                         * @instance
                         * @param {google.cloud.notebooks.v1.IListInstancesRequest} request ListInstancesRequest message or plain object
                         * @returns {Promise<google.cloud.notebooks.v1.ListInstancesResponse>} Promise
                         * @variation 2
                         */
    
                        /**
                         * Callback as used by {@link google.cloud.notebooks.v1.NotebookService|getInstance}.
                         * @memberof google.cloud.notebooks.v1.NotebookService
                         * @typedef GetInstanceCallback
                         * @type {function}
                         * @param {Error|null} error Error, if any
                         * @param {google.cloud.notebooks.v1.Instance} [response] Instance
                         */
    
                        /**
                         * Calls GetInstance.
                         * @function getInstance
                         * @memberof google.cloud.notebooks.v1.NotebookService
                         * @instance
                         * @param {google.cloud.notebooks.v1.IGetInstanceRequest} request GetInstanceRequest message or plain object
                         * @param {google.cloud.notebooks.v1.NotebookService.GetInstanceCallback} callback Node-style callback called with the error, if any, and Instance
                         * @returns {undefined}
                         * @variation 1
                         */
                        Object.defineProperty(NotebookService.prototype.getInstance = function getInstance(request, callback) {
                            return this.rpcCall(getInstance, $root.google.cloud.notebooks.v1.GetInstanceRequest, $root.google.cloud.notebooks.v1.Instance, request, callback);
                        }, "name", { value: "GetInstance" });
    
                        /**
                         * Calls GetInstance.
                         * @function getInstance
                         * @memberof google.cloud.notebooks.v1.NotebookService
                         * @instance
                         * @param {google.cloud.notebooks.v1.IGetInstanceRequest} request GetInstanceRequest message or plain object
                         * @returns {Promise<google.cloud.notebooks.v1.Instance>} Promise
                         * @variation 2
                         */
    
                        /**
                         * Callback as used by {@link google.cloud.notebooks.v1.NotebookService|createInstance}.
                         * @memberof google.cloud.notebooks.v1.NotebookService
                         * @typedef CreateInstanceCallback
                         * @type {function}
                         * @param {Error|null} error Error, if any
                         * @param {google.longrunning.Operation} [response] Operation
                         */
    
                        /**
                         * Calls CreateInstance.
                         * @function createInstance
                         * @memberof google.cloud.notebooks.v1.NotebookService
                         * @instance
                         * @param {google.cloud.notebooks.v1.ICreateInstanceRequest} request CreateInstanceRequest message or plain object
                         * @param {google.cloud.notebooks.v1.NotebookService.CreateInstanceCallback} callback Node-style callback called with the error, if any, and Operation
                         * @returns {undefined}
                         * @variation 1
                         */
                        Object.defineProperty(NotebookService.prototype.createInstance = function createInstance(request, callback) {
                            return this.rpcCall(createInstance, $root.google.cloud.notebooks.v1.CreateInstanceRequest, $root.google.longrunning.Operation, request, callback);
                        }, "name", { value: "CreateInstance" });
    
                        /**
                         * Calls CreateInstance.
                         * @function createInstance
                         * @memberof google.cloud.notebooks.v1.NotebookService
                         * @instance
                         * @param {google.cloud.notebooks.v1.ICreateInstanceRequest} request CreateInstanceRequest message or plain object
                         * @returns {Promise<google.longrunning.Operation>} Promise
                         * @variation 2
                         */
    
                        /**
                         * Callback as used by {@link google.cloud.notebooks.v1.NotebookService|registerInstance}.
                         * @memberof google.cloud.notebooks.v1.NotebookService
                         * @typedef RegisterInstanceCallback
                         * @type {function}
                         * @param {Error|null} error Error, if any
                         * @param {google.longrunning.Operation} [response] Operation
                         */
    
                        /**
                         * Calls RegisterInstance.
                         * @function registerInstance
                         * @memberof google.cloud.notebooks.v1.NotebookService
                         * @instance
                         * @param {google.cloud.notebooks.v1.IRegisterInstanceRequest} request RegisterInstanceRequest message or plain object
                         * @param {google.cloud.notebooks.v1.NotebookService.RegisterInstanceCallback} callback Node-style callback called with the error, if any, and Operation
                         * @returns {undefined}
                         * @variation 1
                         */
                        Object.defineProperty(NotebookService.prototype.registerInstance = function registerInstance(request, callback) {
                            return this.rpcCall(registerInstance, $root.google.cloud.notebooks.v1.RegisterInstanceRequest, $root.google.longrunning.Operation, request, callback);
                        }, "name", { value: "RegisterInstance" });
    
                        /**
                         * Calls RegisterInstance.
                         * @function registerInstance
                         * @memberof google.cloud.notebooks.v1.NotebookService
                         * @instance
                         * @param {google.cloud.notebooks.v1.IRegisterInstanceRequest} request RegisterInstanceRequest message or plain object
                         * @returns {Promise<google.longrunning.Operation>} Promise
                         * @variation 2
                         */
    
                        /**
                         * Callback as used by {@link google.cloud.notebooks.v1.NotebookService|setInstanceAccelerator}.
                         * @memberof google.cloud.notebooks.v1.NotebookService
                         * @typedef SetInstanceAcceleratorCallback
                         * @type {function}
                         * @param {Error|null} error Error, if any
                         * @param {google.longrunning.Operation} [response] Operation
                         */
    
                        /**
                         * Calls SetInstanceAccelerator.
                         * @function setInstanceAccelerator
                         * @memberof google.cloud.notebooks.v1.NotebookService
                         * @instance
                         * @param {google.cloud.notebooks.v1.ISetInstanceAcceleratorRequest} request SetInstanceAcceleratorRequest message or plain object
                         * @param {google.cloud.notebooks.v1.NotebookService.SetInstanceAcceleratorCallback} callback Node-style callback called with the error, if any, and Operation
                         * @returns {undefined}
                         * @variation 1
                         */
                        Object.defineProperty(NotebookService.prototype.setInstanceAccelerator = function setInstanceAccelerator(request, callback) {
                            return this.rpcCall(setInstanceAccelerator, $root.google.cloud.notebooks.v1.SetInstanceAcceleratorRequest, $root.google.longrunning.Operation, request, callback);
                        }, "name", { value: "SetInstanceAccelerator" });
    
                        /**
                         * Calls SetInstanceAccelerator.
                         * @function setInstanceAccelerator
                         * @memberof google.cloud.notebooks.v1.NotebookService
                         * @instance
                         * @param {google.cloud.notebooks.v1.ISetInstanceAcceleratorRequest} request SetInstanceAcceleratorRequest message or plain object
                         * @returns {Promise<google.longrunning.Operation>} Promise
                         * @variation 2
                         */
    
                        /**
                         * Callback as used by {@link google.cloud.notebooks.v1.NotebookService|setInstanceMachineType}.
                         * @memberof google.cloud.notebooks.v1.NotebookService
                         * @typedef SetInstanceMachineTypeCallback
                         * @type {function}
                         * @param {Error|null} error Error, if any
                         * @param {google.longrunning.Operation} [response] Operation
                         */
    
                        /**
                         * Calls SetInstanceMachineType.
                         * @function setInstanceMachineType
                         * @memberof google.cloud.notebooks.v1.NotebookService
                         * @instance
                         * @param {google.cloud.notebooks.v1.ISetInstanceMachineTypeRequest} request SetInstanceMachineTypeRequest message or plain object
                         * @param {google.cloud.notebooks.v1.NotebookService.SetInstanceMachineTypeCallback} callback Node-style callback called with the error, if any, and Operation
                         * @returns {undefined}
                         * @variation 1
                         */
                        Object.defineProperty(NotebookService.prototype.setInstanceMachineType = function setInstanceMachineType(request, callback) {
                            return this.rpcCall(setInstanceMachineType, $root.google.cloud.notebooks.v1.SetInstanceMachineTypeRequest, $root.google.longrunning.Operation, request, callback);
                        }, "name", { value: "SetInstanceMachineType" });
    
                        /**
                         * Calls SetInstanceMachineType.
                         * @function setInstanceMachineType
                         * @memberof google.cloud.notebooks.v1.NotebookService
                         * @instance
                         * @param {google.cloud.notebooks.v1.ISetInstanceMachineTypeRequest} request SetInstanceMachineTypeRequest message or plain object
                         * @returns {Promise<google.longrunning.Operation>} Promise
                         * @variation 2
                         */
    
                        /**
                         * Callback as used by {@link google.cloud.notebooks.v1.NotebookService|updateInstanceConfig}.
                         * @memberof google.cloud.notebooks.v1.NotebookService
                         * @typedef UpdateInstanceConfigCallback
                         * @type {function}
                         * @param {Error|null} error Error, if any
                         * @param {google.longrunning.Operation} [response] Operation
                         */
    
                        /**
                         * Calls UpdateInstanceConfig.
                         * @function updateInstanceConfig
                         * @memberof google.cloud.notebooks.v1.NotebookService
                         * @instance
                         * @param {google.cloud.notebooks.v1.IUpdateInstanceConfigRequest} request UpdateInstanceConfigRequest message or plain object
                         * @param {google.cloud.notebooks.v1.NotebookService.UpdateInstanceConfigCallback} callback Node-style callback called with the error, if any, and Operation
                         * @returns {undefined}
                         * @variation 1
                         */
                        Object.defineProperty(NotebookService.prototype.updateInstanceConfig = function updateInstanceConfig(request, callback) {
                            return this.rpcCall(updateInstanceConfig, $root.google.cloud.notebooks.v1.UpdateInstanceConfigRequest, $root.google.longrunning.Operation, request, callback);
                        }, "name", { value: "UpdateInstanceConfig" });
    
                        /**
                         * Calls UpdateInstanceConfig.
                         * @function updateInstanceConfig
                         * @memberof google.cloud.notebooks.v1.NotebookService
                         * @instance
                         * @param {google.cloud.notebooks.v1.IUpdateInstanceConfigRequest} request UpdateInstanceConfigRequest message or plain object
                         * @returns {Promise<google.longrunning.Operation>} Promise
                         * @variation 2
                         */
    
                        /**
                         * Callback as used by {@link google.cloud.notebooks.v1.NotebookService|updateShieldedInstanceConfig}.
                         * @memberof google.cloud.notebooks.v1.NotebookService
                         * @typedef UpdateShieldedInstanceConfigCallback
                         * @type {function}
                         * @param {Error|null} error Error, if any
                         * @param {google.longrunning.Operation} [response] Operation
                         */
    
                        /**
                         * Calls UpdateShieldedInstanceConfig.
                         * @function updateShieldedInstanceConfig
                         * @memberof google.cloud.notebooks.v1.NotebookService
                         * @instance
                         * @param {google.cloud.notebooks.v1.IUpdateShieldedInstanceConfigRequest} request UpdateShieldedInstanceConfigRequest message or plain object
                         * @param {google.cloud.notebooks.v1.NotebookService.UpdateShieldedInstanceConfigCallback} callback Node-style callback called with the error, if any, and Operation
                         * @returns {undefined}
                         * @variation 1
                         */
                        Object.defineProperty(NotebookService.prototype.updateShieldedInstanceConfig = function updateShieldedInstanceConfig(request, callback) {
                            return this.rpcCall(updateShieldedInstanceConfig, $root.google.cloud.notebooks.v1.UpdateShieldedInstanceConfigRequest, $root.google.longrunning.Operation, request, callback);
                        }, "name", { value: "UpdateShieldedInstanceConfig" });
    
                        /**
                         * Calls UpdateShieldedInstanceConfig.
                         * @function updateShieldedInstanceConfig
                         * @memberof google.cloud.notebooks.v1.NotebookService
                         * @instance
                         * @param {google.cloud.notebooks.v1.IUpdateShieldedInstanceConfigRequest} request UpdateShieldedInstanceConfigRequest message or plain object
                         * @returns {Promise<google.longrunning.Operation>} Promise
                         * @variation 2
                         */
    
                        /**
                         * Callback as used by {@link google.cloud.notebooks.v1.NotebookService|setInstanceLabels}.
                         * @memberof google.cloud.notebooks.v1.NotebookService
                         * @typedef SetInstanceLabelsCallback
                         * @type {function}
                         * @param {Error|null} error Error, if any
                         * @param {google.longrunning.Operation} [response] Operation
                         */
    
                        /**
                         * Calls SetInstanceLabels.
                         * @function setInstanceLabels
                         * @memberof google.cloud.notebooks.v1.NotebookService
                         * @instance
                         * @param {google.cloud.notebooks.v1.ISetInstanceLabelsRequest} request SetInstanceLabelsRequest message or plain object
                         * @param {google.cloud.notebooks.v1.NotebookService.SetInstanceLabelsCallback} callback Node-style callback called with the error, if any, and Operation
                         * @returns {undefined}
                         * @variation 1
                         */
                        Object.defineProperty(NotebookService.prototype.setInstanceLabels = function setInstanceLabels(request, callback) {
                            return this.rpcCall(setInstanceLabels, $root.google.cloud.notebooks.v1.SetInstanceLabelsRequest, $root.google.longrunning.Operation, request, callback);
                        }, "name", { value: "SetInstanceLabels" });
    
                        /**
                         * Calls SetInstanceLabels.
                         * @function setInstanceLabels
                         * @memberof google.cloud.notebooks.v1.NotebookService
                         * @instance
                         * @param {google.cloud.notebooks.v1.ISetInstanceLabelsRequest} request SetInstanceLabelsRequest message or plain object
                         * @returns {Promise<google.longrunning.Operation>} Promise
                         * @variation 2
                         */
    
                        /**
                         * Callback as used by {@link google.cloud.notebooks.v1.NotebookService|updateInstanceMetadataItems}.
                         * @memberof google.cloud.notebooks.v1.NotebookService
                         * @typedef UpdateInstanceMetadataItemsCallback
                         * @type {function}
                         * @param {Error|null} error Error, if any
                         * @param {google.cloud.notebooks.v1.UpdateInstanceMetadataItemsResponse} [response] UpdateInstanceMetadataItemsResponse
                         */
    
                        /**
                         * Calls UpdateInstanceMetadataItems.
                         * @function updateInstanceMetadataItems
                         * @memberof google.cloud.notebooks.v1.NotebookService
                         * @instance
                         * @param {google.cloud.notebooks.v1.IUpdateInstanceMetadataItemsRequest} request UpdateInstanceMetadataItemsRequest message or plain object
                         * @param {google.cloud.notebooks.v1.NotebookService.UpdateInstanceMetadataItemsCallback} callback Node-style callback called with the error, if any, and UpdateInstanceMetadataItemsResponse
                         * @returns {undefined}
                         * @variation 1
                         */
                        Object.defineProperty(NotebookService.prototype.updateInstanceMetadataItems = function updateInstanceMetadataItems(request, callback) {
                            return this.rpcCall(updateInstanceMetadataItems, $root.google.cloud.notebooks.v1.UpdateInstanceMetadataItemsRequest, $root.google.cloud.notebooks.v1.UpdateInstanceMetadataItemsResponse, request, callback);
                        }, "name", { value: "UpdateInstanceMetadataItems" });
    
                        /**
                         * Calls UpdateInstanceMetadataItems.
                         * @function updateInstanceMetadataItems
                         * @memberof google.cloud.notebooks.v1.NotebookService
                         * @instance
                         * @param {google.cloud.notebooks.v1.IUpdateInstanceMetadataItemsRequest} request UpdateInstanceMetadataItemsRequest message or plain object
                         * @returns {Promise<google.cloud.notebooks.v1.UpdateInstanceMetadataItemsResponse>} Promise
                         * @variation 2
                         */
    
                        /**
                         * Callback as used by {@link google.cloud.notebooks.v1.NotebookService|deleteInstance}.
                         * @memberof google.cloud.notebooks.v1.NotebookService
                         * @typedef DeleteInstanceCallback
                         * @type {function}
                         * @param {Error|null} error Error, if any
                         * @param {google.longrunning.Operation} [response] Operation
                         */
    
                        /**
                         * Calls DeleteInstance.
                         * @function deleteInstance
                         * @memberof google.cloud.notebooks.v1.NotebookService
                         * @instance
                         * @param {google.cloud.notebooks.v1.IDeleteInstanceRequest} request DeleteInstanceRequest message or plain object
                         * @param {google.cloud.notebooks.v1.NotebookService.DeleteInstanceCallback} callback Node-style callback called with the error, if any, and Operation
                         * @returns {undefined}
                         * @variation 1
                         */
                        Object.defineProperty(NotebookService.prototype.deleteInstance = function deleteInstance(request, callback) {
                            return this.rpcCall(deleteInstance, $root.google.cloud.notebooks.v1.DeleteInstanceRequest, $root.google.longrunning.Operation, request, callback);
                        }, "name", { value: "DeleteInstance" });
    
                        /**
                         * Calls DeleteInstance.
                         * @function deleteInstance
                         * @memberof google.cloud.notebooks.v1.NotebookService
                         * @instance
                         * @param {google.cloud.notebooks.v1.IDeleteInstanceRequest} request DeleteInstanceRequest message or plain object
                         * @returns {Promise<google.longrunning.Operation>} Promise
                         * @variation 2
                         */
    
                        /**
                         * Callback as used by {@link google.cloud.notebooks.v1.NotebookService|startInstance}.
                         * @memberof google.cloud.notebooks.v1.NotebookService
                         * @typedef StartInstanceCallback
                         * @type {function}
                         * @param {Error|null} error Error, if any
                         * @param {google.longrunning.Operation} [response] Operation
                         */
    
                        /**
                         * Calls StartInstance.
                         * @function startInstance
                         * @memberof google.cloud.notebooks.v1.NotebookService
                         * @instance
                         * @param {google.cloud.notebooks.v1.IStartInstanceRequest} request StartInstanceRequest message or plain object
                         * @param {google.cloud.notebooks.v1.NotebookService.StartInstanceCallback} callback Node-style callback called with the error, if any, and Operation
                         * @returns {undefined}
                         * @variation 1
                         */
                        Object.defineProperty(NotebookService.prototype.startInstance = function startInstance(request, callback) {
                            return this.rpcCall(startInstance, $root.google.cloud.notebooks.v1.StartInstanceRequest, $root.google.longrunning.Operation, request, callback);
                        }, "name", { value: "StartInstance" });
    
                        /**
                         * Calls StartInstance.
                         * @function startInstance
                         * @memberof google.cloud.notebooks.v1.NotebookService
                         * @instance
                         * @param {google.cloud.notebooks.v1.IStartInstanceRequest} request StartInstanceRequest message or plain object
                         * @returns {Promise<google.longrunning.Operation>} Promise
                         * @variation 2
                         */
    
                        /**
                         * Callback as used by {@link google.cloud.notebooks.v1.NotebookService|stopInstance}.
                         * @memberof google.cloud.notebooks.v1.NotebookService
                         * @typedef StopInstanceCallback
                         * @type {function}
                         * @param {Error|null} error Error, if any
                         * @param {google.longrunning.Operation} [response] Operation
                         */
    
                        /**
                         * Calls StopInstance.
                         * @function stopInstance
                         * @memberof google.cloud.notebooks.v1.NotebookService
                         * @instance
                         * @param {google.cloud.notebooks.v1.IStopInstanceRequest} request StopInstanceRequest message or plain object
                         * @param {google.cloud.notebooks.v1.NotebookService.StopInstanceCallback} callback Node-style callback called with the error, if any, and Operation
                         * @returns {undefined}
                         * @variation 1
                         */
                        Object.defineProperty(NotebookService.prototype.stopInstance = function stopInstance(request, callback) {
                            return this.rpcCall(stopInstance, $root.google.cloud.notebooks.v1.StopInstanceRequest, $root.google.longrunning.Operation, request, callback);
                        }, "name", { value: "StopInstance" });
    
                        /**
                         * Calls StopInstance.
                         * @function stopInstance
                         * @memberof google.cloud.notebooks.v1.NotebookService
                         * @instance
                         * @param {google.cloud.notebooks.v1.IStopInstanceRequest} request StopInstanceRequest message or plain object
                         * @returns {Promise<google.longrunning.Operation>} Promise
                         * @variation 2
                         */
    
                        /**
                         * Callback as used by {@link google.cloud.notebooks.v1.NotebookService|resetInstance}.
                         * @memberof google.cloud.notebooks.v1.NotebookService
                         * @typedef ResetInstanceCallback
                         * @type {function}
                         * @param {Error|null} error Error, if any
                         * @param {google.longrunning.Operation} [response] Operation
                         */
    
                        /**
                         * Calls ResetInstance.
                         * @function resetInstance
                         * @memberof google.cloud.notebooks.v1.NotebookService
                         * @instance
                         * @param {google.cloud.notebooks.v1.IResetInstanceRequest} request ResetInstanceRequest message or plain object
                         * @param {google.cloud.notebooks.v1.NotebookService.ResetInstanceCallback} callback Node-style callback called with the error, if any, and Operation
                         * @returns {undefined}
                         * @variation 1
                         */
                        Object.defineProperty(NotebookService.prototype.resetInstance = function resetInstance(request, callback) {
                            return this.rpcCall(resetInstance, $root.google.cloud.notebooks.v1.ResetInstanceRequest, $root.google.longrunning.Operation, request, callback);
                        }, "name", { value: "ResetInstance" });
    
                        /**
                         * Calls ResetInstance.
                         * @function resetInstance
                         * @memberof google.cloud.notebooks.v1.NotebookService
                         * @instance
                         * @param {google.cloud.notebooks.v1.IResetInstanceRequest} request ResetInstanceRequest message or plain object
                         * @returns {Promise<google.longrunning.Operation>} Promise
                         * @variation 2
                         */
    
                        /**
                         * Callback as used by {@link google.cloud.notebooks.v1.NotebookService|reportInstanceInfo}.
                         * @memberof google.cloud.notebooks.v1.NotebookService
                         * @typedef ReportInstanceInfoCallback
                         * @type {function}
                         * @param {Error|null} error Error, if any
                         * @param {google.longrunning.Operation} [response] Operation
                         */
    
                        /**
                         * Calls ReportInstanceInfo.
                         * @function reportInstanceInfo
                         * @memberof google.cloud.notebooks.v1.NotebookService
                         * @instance
                         * @param {google.cloud.notebooks.v1.IReportInstanceInfoRequest} request ReportInstanceInfoRequest message or plain object
                         * @param {google.cloud.notebooks.v1.NotebookService.ReportInstanceInfoCallback} callback Node-style callback called with the error, if any, and Operation
                         * @returns {undefined}
                         * @variation 1
                         */
                        Object.defineProperty(NotebookService.prototype.reportInstanceInfo = function reportInstanceInfo(request, callback) {
                            return this.rpcCall(reportInstanceInfo, $root.google.cloud.notebooks.v1.ReportInstanceInfoRequest, $root.google.longrunning.Operation, request, callback);
                        }, "name", { value: "ReportInstanceInfo" });
    
                        /**
                         * Calls ReportInstanceInfo.
                         * @function reportInstanceInfo
                         * @memberof google.cloud.notebooks.v1.NotebookService
                         * @instance
                         * @param {google.cloud.notebooks.v1.IReportInstanceInfoRequest} request ReportInstanceInfoRequest message or plain object
                         * @returns {Promise<google.longrunning.Operation>} Promise
                         * @variation 2
                         */
    
                        /**
                         * Callback as used by {@link google.cloud.notebooks.v1.NotebookService|isInstanceUpgradeable}.
                         * @memberof google.cloud.notebooks.v1.NotebookService
                         * @typedef IsInstanceUpgradeableCallback
                         * @type {function}
                         * @param {Error|null} error Error, if any
                         * @param {google.cloud.notebooks.v1.IsInstanceUpgradeableResponse} [response] IsInstanceUpgradeableResponse
                         */
    
                        /**
                         * Calls IsInstanceUpgradeable.
                         * @function isInstanceUpgradeable
                         * @memberof google.cloud.notebooks.v1.NotebookService
                         * @instance
                         * @param {google.cloud.notebooks.v1.IIsInstanceUpgradeableRequest} request IsInstanceUpgradeableRequest message or plain object
                         * @param {google.cloud.notebooks.v1.NotebookService.IsInstanceUpgradeableCallback} callback Node-style callback called with the error, if any, and IsInstanceUpgradeableResponse
                         * @returns {undefined}
                         * @variation 1
                         */
                        Object.defineProperty(NotebookService.prototype.isInstanceUpgradeable = function isInstanceUpgradeable(request, callback) {
                            return this.rpcCall(isInstanceUpgradeable, $root.google.cloud.notebooks.v1.IsInstanceUpgradeableRequest, $root.google.cloud.notebooks.v1.IsInstanceUpgradeableResponse, request, callback);
                        }, "name", { value: "IsInstanceUpgradeable" });
    
                        /**
                         * Calls IsInstanceUpgradeable.
                         * @function isInstanceUpgradeable
                         * @memberof google.cloud.notebooks.v1.NotebookService
                         * @instance
                         * @param {google.cloud.notebooks.v1.IIsInstanceUpgradeableRequest} request IsInstanceUpgradeableRequest message or plain object
                         * @returns {Promise<google.cloud.notebooks.v1.IsInstanceUpgradeableResponse>} Promise
                         * @variation 2
                         */
    
                        /**
                         * Callback as used by {@link google.cloud.notebooks.v1.NotebookService|getInstanceHealth}.
                         * @memberof google.cloud.notebooks.v1.NotebookService
                         * @typedef GetInstanceHealthCallback
                         * @type {function}
                         * @param {Error|null} error Error, if any
                         * @param {google.cloud.notebooks.v1.GetInstanceHealthResponse} [response] GetInstanceHealthResponse
                         */
    
                        /**
                         * Calls GetInstanceHealth.
                         * @function getInstanceHealth
                         * @memberof google.cloud.notebooks.v1.NotebookService
                         * @instance
                         * @param {google.cloud.notebooks.v1.IGetInstanceHealthRequest} request GetInstanceHealthRequest message or plain object
                         * @param {google.cloud.notebooks.v1.NotebookService.GetInstanceHealthCallback} callback Node-style callback called with the error, if any, and GetInstanceHealthResponse
                         * @returns {undefined}
                         * @variation 1
                         */
                        Object.defineProperty(NotebookService.prototype.getInstanceHealth = function getInstanceHealth(request, callback) {
                            return this.rpcCall(getInstanceHealth, $root.google.cloud.notebooks.v1.GetInstanceHealthRequest, $root.google.cloud.notebooks.v1.GetInstanceHealthResponse, request, callback);
                        }, "name", { value: "GetInstanceHealth" });
    
                        /**
                         * Calls GetInstanceHealth.
                         * @function getInstanceHealth
                         * @memberof google.cloud.notebooks.v1.NotebookService
                         * @instance
                         * @param {google.cloud.notebooks.v1.IGetInstanceHealthRequest} request GetInstanceHealthRequest message or plain object
                         * @returns {Promise<google.cloud.notebooks.v1.GetInstanceHealthResponse>} Promise
                         * @variation 2
                         */
    
                        /**
                         * Callback as used by {@link google.cloud.notebooks.v1.NotebookService|upgradeInstance}.
                         * @memberof google.cloud.notebooks.v1.NotebookService
                         * @typedef UpgradeInstanceCallback
                         * @type {function}
                         * @param {Error|null} error Error, if any
                         * @param {google.longrunning.Operation} [response] Operation
                         */
    
                        /**
                         * Calls UpgradeInstance.
                         * @function upgradeInstance
                         * @memberof google.cloud.notebooks.v1.NotebookService
                         * @instance
                         * @param {google.cloud.notebooks.v1.IUpgradeInstanceRequest} request UpgradeInstanceRequest message or plain object
                         * @param {google.cloud.notebooks.v1.NotebookService.UpgradeInstanceCallback} callback Node-style callback called with the error, if any, and Operation
                         * @returns {undefined}
                         * @variation 1
                         */
                        Object.defineProperty(NotebookService.prototype.upgradeInstance = function upgradeInstance(request, callback) {
                            return this.rpcCall(upgradeInstance, $root.google.cloud.notebooks.v1.UpgradeInstanceRequest, $root.google.longrunning.Operation, request, callback);
                        }, "name", { value: "UpgradeInstance" });
    
                        /**
                         * Calls UpgradeInstance.
                         * @function upgradeInstance
                         * @memberof google.cloud.notebooks.v1.NotebookService
                         * @instance
                         * @param {google.cloud.notebooks.v1.IUpgradeInstanceRequest} request UpgradeInstanceRequest message or plain object
                         * @returns {Promise<google.longrunning.Operation>} Promise
                         * @variation 2
                         */
    
                        /**
                         * Callback as used by {@link google.cloud.notebooks.v1.NotebookService|rollbackInstance}.
                         * @memberof google.cloud.notebooks.v1.NotebookService
                         * @typedef RollbackInstanceCallback
                         * @type {function}
                         * @param {Error|null} error Error, if any
                         * @param {google.longrunning.Operation} [response] Operation
                         */
    
                        /**
                         * Calls RollbackInstance.
                         * @function rollbackInstance
                         * @memberof google.cloud.notebooks.v1.NotebookService
                         * @instance
                         * @param {google.cloud.notebooks.v1.IRollbackInstanceRequest} request RollbackInstanceRequest message or plain object
                         * @param {google.cloud.notebooks.v1.NotebookService.RollbackInstanceCallback} callback Node-style callback called with the error, if any, and Operation
                         * @returns {undefined}
                         * @variation 1
                         */
                        Object.defineProperty(NotebookService.prototype.rollbackInstance = function rollbackInstance(request, callback) {
                            return this.rpcCall(rollbackInstance, $root.google.cloud.notebooks.v1.RollbackInstanceRequest, $root.google.longrunning.Operation, request, callback);
                        }, "name", { value: "RollbackInstance" });
    
                        /**
                         * Calls RollbackInstance.
                         * @function rollbackInstance
                         * @memberof google.cloud.notebooks.v1.NotebookService
                         * @instance
                         * @param {google.cloud.notebooks.v1.IRollbackInstanceRequest} request RollbackInstanceRequest message or plain object
                         * @returns {Promise<google.longrunning.Operation>} Promise
                         * @variation 2
                         */
    
                        /**
                         * Callback as used by {@link google.cloud.notebooks.v1.NotebookService|diagnoseInstance}.
                         * @memberof google.cloud.notebooks.v1.NotebookService
                         * @typedef DiagnoseInstanceCallback
                         * @type {function}
                         * @param {Error|null} error Error, if any
                         * @param {google.longrunning.Operation} [response] Operation
                         */
    
                        /**
                         * Calls DiagnoseInstance.
                         * @function diagnoseInstance
                         * @memberof google.cloud.notebooks.v1.NotebookService
                         * @instance
                         * @param {google.cloud.notebooks.v1.IDiagnoseInstanceRequest} request DiagnoseInstanceRequest message or plain object
                         * @param {google.cloud.notebooks.v1.NotebookService.DiagnoseInstanceCallback} callback Node-style callback called with the error, if any, and Operation
                         * @returns {undefined}
                         * @variation 1
                         */
                        Object.defineProperty(NotebookService.prototype.diagnoseInstance = function diagnoseInstance(request, callback) {
                            return this.rpcCall(diagnoseInstance, $root.google.cloud.notebooks.v1.DiagnoseInstanceRequest, $root.google.longrunning.Operation, request, callback);
                        }, "name", { value: "DiagnoseInstance" });
    
                        /**
                         * Calls DiagnoseInstance.
                         * @function diagnoseInstance
                         * @memberof google.cloud.notebooks.v1.NotebookService
                         * @instance
                         * @param {google.cloud.notebooks.v1.IDiagnoseInstanceRequest} request DiagnoseInstanceRequest message or plain object
                         * @returns {Promise<google.longrunning.Operation>} Promise
                         * @variation 2
                         */
    
                        /**
                         * Callback as used by {@link google.cloud.notebooks.v1.NotebookService|upgradeInstanceInternal}.
                         * @memberof google.cloud.notebooks.v1.NotebookService
                         * @typedef UpgradeInstanceInternalCallback
                         * @type {function}
                         * @param {Error|null} error Error, if any
                         * @param {google.longrunning.Operation} [response] Operation
                         */
    
                        /**
                         * Calls UpgradeInstanceInternal.
                         * @function upgradeInstanceInternal
                         * @memberof google.cloud.notebooks.v1.NotebookService
                         * @instance
                         * @param {google.cloud.notebooks.v1.IUpgradeInstanceInternalRequest} request UpgradeInstanceInternalRequest message or plain object
                         * @param {google.cloud.notebooks.v1.NotebookService.UpgradeInstanceInternalCallback} callback Node-style callback called with the error, if any, and Operation
                         * @returns {undefined}
                         * @variation 1
                         */
                        Object.defineProperty(NotebookService.prototype.upgradeInstanceInternal = function upgradeInstanceInternal(request, callback) {
                            return this.rpcCall(upgradeInstanceInternal, $root.google.cloud.notebooks.v1.UpgradeInstanceInternalRequest, $root.google.longrunning.Operation, request, callback);
                        }, "name", { value: "UpgradeInstanceInternal" });
    
                        /**
                         * Calls UpgradeInstanceInternal.
                         * @function upgradeInstanceInternal
                         * @memberof google.cloud.notebooks.v1.NotebookService
                         * @instance
                         * @param {google.cloud.notebooks.v1.IUpgradeInstanceInternalRequest} request UpgradeInstanceInternalRequest message or plain object
                         * @returns {Promise<google.longrunning.Operation>} Promise
                         * @variation 2
                         */
    
                        /**
                         * Callback as used by {@link google.cloud.notebooks.v1.NotebookService|listEnvironments}.
                         * @memberof google.cloud.notebooks.v1.NotebookService
                         * @typedef ListEnvironmentsCallback
                         * @type {function}
                         * @param {Error|null} error Error, if any
                         * @param {google.cloud.notebooks.v1.ListEnvironmentsResponse} [response] ListEnvironmentsResponse
                         */
    
                        /**
                         * Calls ListEnvironments.
                         * @function listEnvironments
                         * @memberof google.cloud.notebooks.v1.NotebookService
                         * @instance
                         * @param {google.cloud.notebooks.v1.IListEnvironmentsRequest} request ListEnvironmentsRequest message or plain object
                         * @param {google.cloud.notebooks.v1.NotebookService.ListEnvironmentsCallback} callback Node-style callback called with the error, if any, and ListEnvironmentsResponse
                         * @returns {undefined}
                         * @variation 1
                         */
                        Object.defineProperty(NotebookService.prototype.listEnvironments = function listEnvironments(request, callback) {
                            return this.rpcCall(listEnvironments, $root.google.cloud.notebooks.v1.ListEnvironmentsRequest, $root.google.cloud.notebooks.v1.ListEnvironmentsResponse, request, callback);
                        }, "name", { value: "ListEnvironments" });
    
                        /**
                         * Calls ListEnvironments.
                         * @function listEnvironments
                         * @memberof google.cloud.notebooks.v1.NotebookService
                         * @instance
                         * @param {google.cloud.notebooks.v1.IListEnvironmentsRequest} request ListEnvironmentsRequest message or plain object
                         * @returns {Promise<google.cloud.notebooks.v1.ListEnvironmentsResponse>} Promise
                         * @variation 2
                         */
    
                        /**
                         * Callback as used by {@link google.cloud.notebooks.v1.NotebookService|getEnvironment}.
                         * @memberof google.cloud.notebooks.v1.NotebookService
                         * @typedef GetEnvironmentCallback
                         * @type {function}
                         * @param {Error|null} error Error, if any
                         * @param {google.cloud.notebooks.v1.Environment} [response] Environment
                         */
    
                        /**
                         * Calls GetEnvironment.
                         * @function getEnvironment
                         * @memberof google.cloud.notebooks.v1.NotebookService
                         * @instance
                         * @param {google.cloud.notebooks.v1.IGetEnvironmentRequest} request GetEnvironmentRequest message or plain object
                         * @param {google.cloud.notebooks.v1.NotebookService.GetEnvironmentCallback} callback Node-style callback called with the error, if any, and Environment
                         * @returns {undefined}
                         * @variation 1
                         */
                        Object.defineProperty(NotebookService.prototype.getEnvironment = function getEnvironment(request, callback) {
                            return this.rpcCall(getEnvironment, $root.google.cloud.notebooks.v1.GetEnvironmentRequest, $root.google.cloud.notebooks.v1.Environment, request, callback);
                        }, "name", { value: "GetEnvironment" });
    
                        /**
                         * Calls GetEnvironment.
                         * @function getEnvironment
                         * @memberof google.cloud.notebooks.v1.NotebookService
                         * @instance
                         * @param {google.cloud.notebooks.v1.IGetEnvironmentRequest} request GetEnvironmentRequest message or plain object
                         * @returns {Promise<google.cloud.notebooks.v1.Environment>} Promise
                         * @variation 2
                         */
    
                        /**
                         * Callback as used by {@link google.cloud.notebooks.v1.NotebookService|createEnvironment}.
                         * @memberof google.cloud.notebooks.v1.NotebookService
                         * @typedef CreateEnvironmentCallback
                         * @type {function}
                         * @param {Error|null} error Error, if any
                         * @param {google.longrunning.Operation} [response] Operation
                         */
    
                        /**
                         * Calls CreateEnvironment.
                         * @function createEnvironment
                         * @memberof google.cloud.notebooks.v1.NotebookService
                         * @instance
                         * @param {google.cloud.notebooks.v1.ICreateEnvironmentRequest} request CreateEnvironmentRequest message or plain object
                         * @param {google.cloud.notebooks.v1.NotebookService.CreateEnvironmentCallback} callback Node-style callback called with the error, if any, and Operation
                         * @returns {undefined}
                         * @variation 1
                         */
                        Object.defineProperty(NotebookService.prototype.createEnvironment = function createEnvironment(request, callback) {
                            return this.rpcCall(createEnvironment, $root.google.cloud.notebooks.v1.CreateEnvironmentRequest, $root.google.longrunning.Operation, request, callback);
                        }, "name", { value: "CreateEnvironment" });
    
                        /**
                         * Calls CreateEnvironment.
                         * @function createEnvironment
                         * @memberof google.cloud.notebooks.v1.NotebookService
                         * @instance
                         * @param {google.cloud.notebooks.v1.ICreateEnvironmentRequest} request CreateEnvironmentRequest message or plain object
                         * @returns {Promise<google.longrunning.Operation>} Promise
                         * @variation 2
                         */
    
                        /**
                         * Callback as used by {@link google.cloud.notebooks.v1.NotebookService|deleteEnvironment}.
                         * @memberof google.cloud.notebooks.v1.NotebookService
                         * @typedef DeleteEnvironmentCallback
                         * @type {function}
                         * @param {Error|null} error Error, if any
                         * @param {google.longrunning.Operation} [response] Operation
                         */
    
                        /**
                         * Calls DeleteEnvironment.
                         * @function deleteEnvironment
                         * @memberof google.cloud.notebooks.v1.NotebookService
                         * @instance
                         * @param {google.cloud.notebooks.v1.IDeleteEnvironmentRequest} request DeleteEnvironmentRequest message or plain object
                         * @param {google.cloud.notebooks.v1.NotebookService.DeleteEnvironmentCallback} callback Node-style callback called with the error, if any, and Operation
                         * @returns {undefined}
                         * @variation 1
                         */
                        Object.defineProperty(NotebookService.prototype.deleteEnvironment = function deleteEnvironment(request, callback) {
                            return this.rpcCall(deleteEnvironment, $root.google.cloud.notebooks.v1.DeleteEnvironmentRequest, $root.google.longrunning.Operation, request, callback);
                        }, "name", { value: "DeleteEnvironment" });
    
                        /**
                         * Calls DeleteEnvironment.
                         * @function deleteEnvironment
                         * @memberof google.cloud.notebooks.v1.NotebookService
                         * @instance
                         * @param {google.cloud.notebooks.v1.IDeleteEnvironmentRequest} request DeleteEnvironmentRequest message or plain object
                         * @returns {Promise<google.longrunning.Operation>} Promise
                         * @variation 2
                         */
    
                        /**
                         * Callback as used by {@link google.cloud.notebooks.v1.NotebookService|listSchedules}.
                         * @memberof google.cloud.notebooks.v1.NotebookService
                         * @typedef ListSchedulesCallback
                         * @type {function}
                         * @param {Error|null} error Error, if any
                         * @param {google.cloud.notebooks.v1.ListSchedulesResponse} [response] ListSchedulesResponse
                         */
    
                        /**
                         * Calls ListSchedules.
                         * @function listSchedules
                         * @memberof google.cloud.notebooks.v1.NotebookService
                         * @instance
                         * @param {google.cloud.notebooks.v1.IListSchedulesRequest} request ListSchedulesRequest message or plain object
                         * @param {google.cloud.notebooks.v1.NotebookService.ListSchedulesCallback} callback Node-style callback called with the error, if any, and ListSchedulesResponse
                         * @returns {undefined}
                         * @variation 1
                         */
                        Object.defineProperty(NotebookService.prototype.listSchedules = function listSchedules(request, callback) {
                            return this.rpcCall(listSchedules, $root.google.cloud.notebooks.v1.ListSchedulesRequest, $root.google.cloud.notebooks.v1.ListSchedulesResponse, request, callback);
                        }, "name", { value: "ListSchedules" });
    
                        /**
                         * Calls ListSchedules.
                         * @function listSchedules
                         * @memberof google.cloud.notebooks.v1.NotebookService
                         * @instance
                         * @param {google.cloud.notebooks.v1.IListSchedulesRequest} request ListSchedulesRequest message or plain object
                         * @returns {Promise<google.cloud.notebooks.v1.ListSchedulesResponse>} Promise
                         * @variation 2
                         */
    
                        /**
                         * Callback as used by {@link google.cloud.notebooks.v1.NotebookService|getSchedule}.
                         * @memberof google.cloud.notebooks.v1.NotebookService
                         * @typedef GetScheduleCallback
                         * @type {function}
                         * @param {Error|null} error Error, if any
                         * @param {google.cloud.notebooks.v1.Schedule} [response] Schedule
                         */
    
                        /**
                         * Calls GetSchedule.
                         * @function getSchedule
                         * @memberof google.cloud.notebooks.v1.NotebookService
                         * @instance
                         * @param {google.cloud.notebooks.v1.IGetScheduleRequest} request GetScheduleRequest message or plain object
                         * @param {google.cloud.notebooks.v1.NotebookService.GetScheduleCallback} callback Node-style callback called with the error, if any, and Schedule
                         * @returns {undefined}
                         * @variation 1
                         */
                        Object.defineProperty(NotebookService.prototype.getSchedule = function getSchedule(request, callback) {
                            return this.rpcCall(getSchedule, $root.google.cloud.notebooks.v1.GetScheduleRequest, $root.google.cloud.notebooks.v1.Schedule, request, callback);
                        }, "name", { value: "GetSchedule" });
    
                        /**
                         * Calls GetSchedule.
                         * @function getSchedule
                         * @memberof google.cloud.notebooks.v1.NotebookService
                         * @instance
                         * @param {google.cloud.notebooks.v1.IGetScheduleRequest} request GetScheduleRequest message or plain object
                         * @returns {Promise<google.cloud.notebooks.v1.Schedule>} Promise
                         * @variation 2
                         */
    
                        /**
                         * Callback as used by {@link google.cloud.notebooks.v1.NotebookService|deleteSchedule}.
                         * @memberof google.cloud.notebooks.v1.NotebookService
                         * @typedef DeleteScheduleCallback
                         * @type {function}
                         * @param {Error|null} error Error, if any
                         * @param {google.longrunning.Operation} [response] Operation
                         */
    
                        /**
                         * Calls DeleteSchedule.
                         * @function deleteSchedule
                         * @memberof google.cloud.notebooks.v1.NotebookService
                         * @instance
                         * @param {google.cloud.notebooks.v1.IDeleteScheduleRequest} request DeleteScheduleRequest message or plain object
                         * @param {google.cloud.notebooks.v1.NotebookService.DeleteScheduleCallback} callback Node-style callback called with the error, if any, and Operation
                         * @returns {undefined}
                         * @variation 1
                         */
                        Object.defineProperty(NotebookService.prototype.deleteSchedule = function deleteSchedule(request, callback) {
                            return this.rpcCall(deleteSchedule, $root.google.cloud.notebooks.v1.DeleteScheduleRequest, $root.google.longrunning.Operation, request, callback);
                        }, "name", { value: "DeleteSchedule" });
    
                        /**
                         * Calls DeleteSchedule.
                         * @function deleteSchedule
                         * @memberof google.cloud.notebooks.v1.NotebookService
                         * @instance
                         * @param {google.cloud.notebooks.v1.IDeleteScheduleRequest} request DeleteScheduleRequest message or plain object
                         * @returns {Promise<google.longrunning.Operation>} Promise
                         * @variation 2
                         */
    
                        /**
                         * Callback as used by {@link google.cloud.notebooks.v1.NotebookService|createSchedule}.
                         * @memberof google.cloud.notebooks.v1.NotebookService
                         * @typedef CreateScheduleCallback
                         * @type {function}
                         * @param {Error|null} error Error, if any
                         * @param {google.longrunning.Operation} [response] Operation
                         */
    
                        /**
                         * Calls CreateSchedule.
                         * @function createSchedule
                         * @memberof google.cloud.notebooks.v1.NotebookService
                         * @instance
                         * @param {google.cloud.notebooks.v1.ICreateScheduleRequest} request CreateScheduleRequest message or plain object
                         * @param {google.cloud.notebooks.v1.NotebookService.CreateScheduleCallback} callback Node-style callback called with the error, if any, and Operation
                         * @returns {undefined}
                         * @variation 1
                         */
                        Object.defineProperty(NotebookService.prototype.createSchedule = function createSchedule(request, callback) {
                            return this.rpcCall(createSchedule, $root.google.cloud.notebooks.v1.CreateScheduleRequest, $root.google.longrunning.Operation, request, callback);
                        }, "name", { value: "CreateSchedule" });
    
                        /**
                         * Calls CreateSchedule.
                         * @function createSchedule
                         * @memberof google.cloud.notebooks.v1.NotebookService
                         * @instance
                         * @param {google.cloud.notebooks.v1.ICreateScheduleRequest} request CreateScheduleRequest message or plain object
                         * @returns {Promise<google.longrunning.Operation>} Promise
                         * @variation 2
                         */
    
                        /**
                         * Callback as used by {@link google.cloud.notebooks.v1.NotebookService|triggerSchedule}.
                         * @memberof google.cloud.notebooks.v1.NotebookService
                         * @typedef TriggerScheduleCallback
                         * @type {function}
                         * @param {Error|null} error Error, if any
                         * @param {google.longrunning.Operation} [response] Operation
                         */
    
                        /**
                         * Calls TriggerSchedule.
                         * @function triggerSchedule
                         * @memberof google.cloud.notebooks.v1.NotebookService
                         * @instance
                         * @param {google.cloud.notebooks.v1.ITriggerScheduleRequest} request TriggerScheduleRequest message or plain object
                         * @param {google.cloud.notebooks.v1.NotebookService.TriggerScheduleCallback} callback Node-style callback called with the error, if any, and Operation
                         * @returns {undefined}
                         * @variation 1
                         */
                        Object.defineProperty(NotebookService.prototype.triggerSchedule = function triggerSchedule(request, callback) {
                            return this.rpcCall(triggerSchedule, $root.google.cloud.notebooks.v1.TriggerScheduleRequest, $root.google.longrunning.Operation, request, callback);
                        }, "name", { value: "TriggerSchedule" });
    
                        /**
                         * Calls TriggerSchedule.
                         * @function triggerSchedule
                         * @memberof google.cloud.notebooks.v1.NotebookService
                         * @instance
                         * @param {google.cloud.notebooks.v1.ITriggerScheduleRequest} request TriggerScheduleRequest message or plain object
                         * @returns {Promise<google.longrunning.Operation>} Promise
                         * @variation 2
                         */
    
                        /**
                         * Callback as used by {@link google.cloud.notebooks.v1.NotebookService|listExecutions}.
                         * @memberof google.cloud.notebooks.v1.NotebookService
                         * @typedef ListExecutionsCallback
                         * @type {function}
                         * @param {Error|null} error Error, if any
                         * @param {google.cloud.notebooks.v1.ListExecutionsResponse} [response] ListExecutionsResponse
                         */
    
                        /**
                         * Calls ListExecutions.
                         * @function listExecutions
                         * @memberof google.cloud.notebooks.v1.NotebookService
                         * @instance
                         * @param {google.cloud.notebooks.v1.IListExecutionsRequest} request ListExecutionsRequest message or plain object
                         * @param {google.cloud.notebooks.v1.NotebookService.ListExecutionsCallback} callback Node-style callback called with the error, if any, and ListExecutionsResponse
                         * @returns {undefined}
                         * @variation 1
                         */
                        Object.defineProperty(NotebookService.prototype.listExecutions = function listExecutions(request, callback) {
                            return this.rpcCall(listExecutions, $root.google.cloud.notebooks.v1.ListExecutionsRequest, $root.google.cloud.notebooks.v1.ListExecutionsResponse, request, callback);
                        }, "name", { value: "ListExecutions" });
    
                        /**
                         * Calls ListExecutions.
                         * @function listExecutions
                         * @memberof google.cloud.notebooks.v1.NotebookService
                         * @instance
                         * @param {google.cloud.notebooks.v1.IListExecutionsRequest} request ListExecutionsRequest message or plain object
                         * @returns {Promise<google.cloud.notebooks.v1.ListExecutionsResponse>} Promise
                         * @variation 2
                         */
    
                        /**
                         * Callback as used by {@link google.cloud.notebooks.v1.NotebookService|getExecution}.
                         * @memberof google.cloud.notebooks.v1.NotebookService
                         * @typedef GetExecutionCallback
                         * @type {function}
                         * @param {Error|null} error Error, if any
                         * @param {google.cloud.notebooks.v1.Execution} [response] Execution
                         */
    
                        /**
                         * Calls GetExecution.
                         * @function getExecution
                         * @memberof google.cloud.notebooks.v1.NotebookService
                         * @instance
                         * @param {google.cloud.notebooks.v1.IGetExecutionRequest} request GetExecutionRequest message or plain object
                         * @param {google.cloud.notebooks.v1.NotebookService.GetExecutionCallback} callback Node-style callback called with the error, if any, and Execution
                         * @returns {undefined}
                         * @variation 1
                         */
                        Object.defineProperty(NotebookService.prototype.getExecution = function getExecution(request, callback) {
                            return this.rpcCall(getExecution, $root.google.cloud.notebooks.v1.GetExecutionRequest, $root.google.cloud.notebooks.v1.Execution, request, callback);
                        }, "name", { value: "GetExecution" });
    
                        /**
                         * Calls GetExecution.
                         * @function getExecution
                         * @memberof google.cloud.notebooks.v1.NotebookService
                         * @instance
                         * @param {google.cloud.notebooks.v1.IGetExecutionRequest} request GetExecutionRequest message or plain object
                         * @returns {Promise<google.cloud.notebooks.v1.Execution>} Promise
                         * @variation 2
                         */
    
                        /**
                         * Callback as used by {@link google.cloud.notebooks.v1.NotebookService|deleteExecution}.
                         * @memberof google.cloud.notebooks.v1.NotebookService
                         * @typedef DeleteExecutionCallback
                         * @type {function}
                         * @param {Error|null} error Error, if any
                         * @param {google.longrunning.Operation} [response] Operation
                         */
    
                        /**
                         * Calls DeleteExecution.
                         * @function deleteExecution
                         * @memberof google.cloud.notebooks.v1.NotebookService
                         * @instance
                         * @param {google.cloud.notebooks.v1.IDeleteExecutionRequest} request DeleteExecutionRequest message or plain object
                         * @param {google.cloud.notebooks.v1.NotebookService.DeleteExecutionCallback} callback Node-style callback called with the error, if any, and Operation
                         * @returns {undefined}
                         * @variation 1
                         */
                        Object.defineProperty(NotebookService.prototype.deleteExecution = function deleteExecution(request, callback) {
                            return this.rpcCall(deleteExecution, $root.google.cloud.notebooks.v1.DeleteExecutionRequest, $root.google.longrunning.Operation, request, callback);
                        }, "name", { value: "DeleteExecution" });
    
                        /**
                         * Calls DeleteExecution.
                         * @function deleteExecution
                         * @memberof google.cloud.notebooks.v1.NotebookService
                         * @instance
                         * @param {google.cloud.notebooks.v1.IDeleteExecutionRequest} request DeleteExecutionRequest message or plain object
                         * @returns {Promise<google.longrunning.Operation>} Promise
                         * @variation 2
                         */
    
                        /**
                         * Callback as used by {@link google.cloud.notebooks.v1.NotebookService|createExecution}.
                         * @memberof google.cloud.notebooks.v1.NotebookService
                         * @typedef CreateExecutionCallback
                         * @type {function}
                         * @param {Error|null} error Error, if any
                         * @param {google.longrunning.Operation} [response] Operation
                         */
    
                        /**
                         * Calls CreateExecution.
                         * @function createExecution
                         * @memberof google.cloud.notebooks.v1.NotebookService
                         * @instance
                         * @param {google.cloud.notebooks.v1.ICreateExecutionRequest} request CreateExecutionRequest message or plain object
                         * @param {google.cloud.notebooks.v1.NotebookService.CreateExecutionCallback} callback Node-style callback called with the error, if any, and Operation
                         * @returns {undefined}
                         * @variation 1
                         */
                        Object.defineProperty(NotebookService.prototype.createExecution = function createExecution(request, callback) {
                            return this.rpcCall(createExecution, $root.google.cloud.notebooks.v1.CreateExecutionRequest, $root.google.longrunning.Operation, request, callback);
                        }, "name", { value: "CreateExecution" });
    
                        /**
                         * Calls CreateExecution.
                         * @function createExecution
                         * @memberof google.cloud.notebooks.v1.NotebookService
                         * @instance
                         * @param {google.cloud.notebooks.v1.ICreateExecutionRequest} request CreateExecutionRequest message or plain object
                         * @returns {Promise<google.longrunning.Operation>} Promise
                         * @variation 2
                         */
    
                        return NotebookService;
                    })();
    
                    v1.OperationMetadata = (function() {
    
                        /**
                         * Properties of an OperationMetadata.
                         * @memberof google.cloud.notebooks.v1
                         * @interface IOperationMetadata
                         * @property {google.protobuf.ITimestamp|null} [createTime] OperationMetadata createTime
                         * @property {google.protobuf.ITimestamp|null} [endTime] OperationMetadata endTime
                         * @property {string|null} [target] OperationMetadata target
                         * @property {string|null} [verb] OperationMetadata verb
                         * @property {string|null} [statusMessage] OperationMetadata statusMessage
                         * @property {boolean|null} [requestedCancellation] OperationMetadata requestedCancellation
                         * @property {string|null} [apiVersion] OperationMetadata apiVersion
                         * @property {string|null} [endpoint] OperationMetadata endpoint
                         */
    
                        /**
                         * Constructs a new OperationMetadata.
                         * @memberof google.cloud.notebooks.v1
                         * @classdesc Represents an OperationMetadata.
                         * @implements IOperationMetadata
                         * @constructor
                         * @param {google.cloud.notebooks.v1.IOperationMetadata=} [properties] Properties to set
                         */
                        function OperationMetadata(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * OperationMetadata createTime.
                         * @member {google.protobuf.ITimestamp|null|undefined} createTime
                         * @memberof google.cloud.notebooks.v1.OperationMetadata
                         * @instance
                         */
                        OperationMetadata.prototype.createTime = null;
    
                        /**
                         * OperationMetadata endTime.
                         * @member {google.protobuf.ITimestamp|null|undefined} endTime
                         * @memberof google.cloud.notebooks.v1.OperationMetadata
                         * @instance
                         */
                        OperationMetadata.prototype.endTime = null;
    
                        /**
                         * OperationMetadata target.
                         * @member {string} target
                         * @memberof google.cloud.notebooks.v1.OperationMetadata
                         * @instance
                         */
                        OperationMetadata.prototype.target = "";
    
                        /**
                         * OperationMetadata verb.
                         * @member {string} verb
                         * @memberof google.cloud.notebooks.v1.OperationMetadata
                         * @instance
                         */
                        OperationMetadata.prototype.verb = "";
    
                        /**
                         * OperationMetadata statusMessage.
                         * @member {string} statusMessage
                         * @memberof google.cloud.notebooks.v1.OperationMetadata
                         * @instance
                         */
                        OperationMetadata.prototype.statusMessage = "";
    
                        /**
                         * OperationMetadata requestedCancellation.
                         * @member {boolean} requestedCancellation
                         * @memberof google.cloud.notebooks.v1.OperationMetadata
                         * @instance
                         */
                        OperationMetadata.prototype.requestedCancellation = false;
    
                        /**
                         * OperationMetadata apiVersion.
                         * @member {string} apiVersion
                         * @memberof google.cloud.notebooks.v1.OperationMetadata
                         * @instance
                         */
                        OperationMetadata.prototype.apiVersion = "";
    
                        /**
                         * OperationMetadata endpoint.
                         * @member {string} endpoint
                         * @memberof google.cloud.notebooks.v1.OperationMetadata
                         * @instance
                         */
                        OperationMetadata.prototype.endpoint = "";
    
                        /**
                         * Creates a new OperationMetadata instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.notebooks.v1.OperationMetadata
                         * @static
                         * @param {google.cloud.notebooks.v1.IOperationMetadata=} [properties] Properties to set
                         * @returns {google.cloud.notebooks.v1.OperationMetadata} OperationMetadata instance
                         */
                        OperationMetadata.create = function create(properties) {
                            return new OperationMetadata(properties);
                        };
    
                        /**
                         * Encodes the specified OperationMetadata message. Does not implicitly {@link google.cloud.notebooks.v1.OperationMetadata.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.notebooks.v1.OperationMetadata
                         * @static
                         * @param {google.cloud.notebooks.v1.IOperationMetadata} message OperationMetadata message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        OperationMetadata.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.createTime != null && Object.hasOwnProperty.call(message, "createTime"))
                                $root.google.protobuf.Timestamp.encode(message.createTime, writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                            if (message.endTime != null && Object.hasOwnProperty.call(message, "endTime"))
                                $root.google.protobuf.Timestamp.encode(message.endTime, writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                            if (message.target != null && Object.hasOwnProperty.call(message, "target"))
                                writer.uint32(/* id 3, wireType 2 =*/26).string(message.target);
                            if (message.verb != null && Object.hasOwnProperty.call(message, "verb"))
                                writer.uint32(/* id 4, wireType 2 =*/34).string(message.verb);
                            if (message.statusMessage != null && Object.hasOwnProperty.call(message, "statusMessage"))
                                writer.uint32(/* id 5, wireType 2 =*/42).string(message.statusMessage);
                            if (message.requestedCancellation != null && Object.hasOwnProperty.call(message, "requestedCancellation"))
                                writer.uint32(/* id 6, wireType 0 =*/48).bool(message.requestedCancellation);
                            if (message.apiVersion != null && Object.hasOwnProperty.call(message, "apiVersion"))
                                writer.uint32(/* id 7, wireType 2 =*/58).string(message.apiVersion);
                            if (message.endpoint != null && Object.hasOwnProperty.call(message, "endpoint"))
                                writer.uint32(/* id 8, wireType 2 =*/66).string(message.endpoint);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified OperationMetadata message, length delimited. Does not implicitly {@link google.cloud.notebooks.v1.OperationMetadata.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.notebooks.v1.OperationMetadata
                         * @static
                         * @param {google.cloud.notebooks.v1.IOperationMetadata} message OperationMetadata message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        OperationMetadata.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes an OperationMetadata message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.notebooks.v1.OperationMetadata
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.notebooks.v1.OperationMetadata} OperationMetadata
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        OperationMetadata.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.notebooks.v1.OperationMetadata();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.createTime = $root.google.protobuf.Timestamp.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 2: {
                                        message.endTime = $root.google.protobuf.Timestamp.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 3: {
                                        message.target = reader.string();
                                        break;
                                    }
                                case 4: {
                                        message.verb = reader.string();
                                        break;
                                    }
                                case 5: {
                                        message.statusMessage = reader.string();
                                        break;
                                    }
                                case 6: {
                                        message.requestedCancellation = reader.bool();
                                        break;
                                    }
                                case 7: {
                                        message.apiVersion = reader.string();
                                        break;
                                    }
                                case 8: {
                                        message.endpoint = reader.string();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes an OperationMetadata message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.notebooks.v1.OperationMetadata
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.notebooks.v1.OperationMetadata} OperationMetadata
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        OperationMetadata.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies an OperationMetadata message.
                         * @function verify
                         * @memberof google.cloud.notebooks.v1.OperationMetadata
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        OperationMetadata.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.createTime != null && message.hasOwnProperty("createTime")) {
                                var error = $root.google.protobuf.Timestamp.verify(message.createTime);
                                if (error)
                                    return "createTime." + error;
                            }
                            if (message.endTime != null && message.hasOwnProperty("endTime")) {
                                var error = $root.google.protobuf.Timestamp.verify(message.endTime);
                                if (error)
                                    return "endTime." + error;
                            }
                            if (message.target != null && message.hasOwnProperty("target"))
                                if (!$util.isString(message.target))
                                    return "target: string expected";
                            if (message.verb != null && message.hasOwnProperty("verb"))
                                if (!$util.isString(message.verb))
                                    return "verb: string expected";
                            if (message.statusMessage != null && message.hasOwnProperty("statusMessage"))
                                if (!$util.isString(message.statusMessage))
                                    return "statusMessage: string expected";
                            if (message.requestedCancellation != null && message.hasOwnProperty("requestedCancellation"))
                                if (typeof message.requestedCancellation !== "boolean")
                                    return "requestedCancellation: boolean expected";
                            if (message.apiVersion != null && message.hasOwnProperty("apiVersion"))
                                if (!$util.isString(message.apiVersion))
                                    return "apiVersion: string expected";
                            if (message.endpoint != null && message.hasOwnProperty("endpoint"))
                                if (!$util.isString(message.endpoint))
                                    return "endpoint: string expected";
                            return null;
                        };
    
                        /**
                         * Creates an OperationMetadata message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.notebooks.v1.OperationMetadata
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.notebooks.v1.OperationMetadata} OperationMetadata
                         */
                        OperationMetadata.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.notebooks.v1.OperationMetadata)
                                return object;
                            var message = new $root.google.cloud.notebooks.v1.OperationMetadata();
                            if (object.createTime != null) {
                                if (typeof object.createTime !== "object")
                                    throw TypeError(".google.cloud.notebooks.v1.OperationMetadata.createTime: object expected");
                                message.createTime = $root.google.protobuf.Timestamp.fromObject(object.createTime);
                            }
                            if (object.endTime != null) {
                                if (typeof object.endTime !== "object")
                                    throw TypeError(".google.cloud.notebooks.v1.OperationMetadata.endTime: object expected");
                                message.endTime = $root.google.protobuf.Timestamp.fromObject(object.endTime);
                            }
                            if (object.target != null)
                                message.target = String(object.target);
                            if (object.verb != null)
                                message.verb = String(object.verb);
                            if (object.statusMessage != null)
                                message.statusMessage = String(object.statusMessage);
                            if (object.requestedCancellation != null)
                                message.requestedCancellation = Boolean(object.requestedCancellation);
                            if (object.apiVersion != null)
                                message.apiVersion = String(object.apiVersion);
                            if (object.endpoint != null)
                                message.endpoint = String(object.endpoint);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from an OperationMetadata message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.notebooks.v1.OperationMetadata
                         * @static
                         * @param {google.cloud.notebooks.v1.OperationMetadata} message OperationMetadata
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        OperationMetadata.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.createTime = null;
                                object.endTime = null;
                                object.target = "";
                                object.verb = "";
                                object.statusMessage = "";
                                object.requestedCancellation = false;
                                object.apiVersion = "";
                                object.endpoint = "";
                            }
                            if (message.createTime != null && message.hasOwnProperty("createTime"))
                                object.createTime = $root.google.protobuf.Timestamp.toObject(message.createTime, options);
                            if (message.endTime != null && message.hasOwnProperty("endTime"))
                                object.endTime = $root.google.protobuf.Timestamp.toObject(message.endTime, options);
                            if (message.target != null && message.hasOwnProperty("target"))
                                object.target = message.target;
                            if (message.verb != null && message.hasOwnProperty("verb"))
                                object.verb = message.verb;
                            if (message.statusMessage != null && message.hasOwnProperty("statusMessage"))
                                object.statusMessage = message.statusMessage;
                            if (message.requestedCancellation != null && message.hasOwnProperty("requestedCancellation"))
                                object.requestedCancellation = message.requestedCancellation;
                            if (message.apiVersion != null && message.hasOwnProperty("apiVersion"))
                                object.apiVersion = message.apiVersion;
                            if (message.endpoint != null && message.hasOwnProperty("endpoint"))
                                object.endpoint = message.endpoint;
                            return object;
                        };
    
                        /**
                         * Converts this OperationMetadata to JSON.
                         * @function toJSON
                         * @memberof google.cloud.notebooks.v1.OperationMetadata
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        OperationMetadata.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for OperationMetadata
                         * @function getTypeUrl
                         * @memberof google.cloud.notebooks.v1.OperationMetadata
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        OperationMetadata.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.notebooks.v1.OperationMetadata";
                        };
    
                        return OperationMetadata;
                    })();
    
                    v1.ListInstancesRequest = (function() {
    
                        /**
                         * Properties of a ListInstancesRequest.
                         * @memberof google.cloud.notebooks.v1
                         * @interface IListInstancesRequest
                         * @property {string|null} [parent] ListInstancesRequest parent
                         * @property {number|null} [pageSize] ListInstancesRequest pageSize
                         * @property {string|null} [pageToken] ListInstancesRequest pageToken
                         */
    
                        /**
                         * Constructs a new ListInstancesRequest.
                         * @memberof google.cloud.notebooks.v1
                         * @classdesc Represents a ListInstancesRequest.
                         * @implements IListInstancesRequest
                         * @constructor
                         * @param {google.cloud.notebooks.v1.IListInstancesRequest=} [properties] Properties to set
                         */
                        function ListInstancesRequest(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * ListInstancesRequest parent.
                         * @member {string} parent
                         * @memberof google.cloud.notebooks.v1.ListInstancesRequest
                         * @instance
                         */
                        ListInstancesRequest.prototype.parent = "";
    
                        /**
                         * ListInstancesRequest pageSize.
                         * @member {number} pageSize
                         * @memberof google.cloud.notebooks.v1.ListInstancesRequest
                         * @instance
                         */
                        ListInstancesRequest.prototype.pageSize = 0;
    
                        /**
                         * ListInstancesRequest pageToken.
                         * @member {string} pageToken
                         * @memberof google.cloud.notebooks.v1.ListInstancesRequest
                         * @instance
                         */
                        ListInstancesRequest.prototype.pageToken = "";
    
                        /**
                         * Creates a new ListInstancesRequest instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.notebooks.v1.ListInstancesRequest
                         * @static
                         * @param {google.cloud.notebooks.v1.IListInstancesRequest=} [properties] Properties to set
                         * @returns {google.cloud.notebooks.v1.ListInstancesRequest} ListInstancesRequest instance
                         */
                        ListInstancesRequest.create = function create(properties) {
                            return new ListInstancesRequest(properties);
                        };
    
                        /**
                         * Encodes the specified ListInstancesRequest message. Does not implicitly {@link google.cloud.notebooks.v1.ListInstancesRequest.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.notebooks.v1.ListInstancesRequest
                         * @static
                         * @param {google.cloud.notebooks.v1.IListInstancesRequest} message ListInstancesRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        ListInstancesRequest.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.parent != null && Object.hasOwnProperty.call(message, "parent"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.parent);
                            if (message.pageSize != null && Object.hasOwnProperty.call(message, "pageSize"))
                                writer.uint32(/* id 2, wireType 0 =*/16).int32(message.pageSize);
                            if (message.pageToken != null && Object.hasOwnProperty.call(message, "pageToken"))
                                writer.uint32(/* id 3, wireType 2 =*/26).string(message.pageToken);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified ListInstancesRequest message, length delimited. Does not implicitly {@link google.cloud.notebooks.v1.ListInstancesRequest.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.notebooks.v1.ListInstancesRequest
                         * @static
                         * @param {google.cloud.notebooks.v1.IListInstancesRequest} message ListInstancesRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        ListInstancesRequest.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a ListInstancesRequest message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.notebooks.v1.ListInstancesRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.notebooks.v1.ListInstancesRequest} ListInstancesRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        ListInstancesRequest.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.notebooks.v1.ListInstancesRequest();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.parent = reader.string();
                                        break;
                                    }
                                case 2: {
                                        message.pageSize = reader.int32();
                                        break;
                                    }
                                case 3: {
                                        message.pageToken = reader.string();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a ListInstancesRequest message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.notebooks.v1.ListInstancesRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.notebooks.v1.ListInstancesRequest} ListInstancesRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        ListInstancesRequest.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a ListInstancesRequest message.
                         * @function verify
                         * @memberof google.cloud.notebooks.v1.ListInstancesRequest
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        ListInstancesRequest.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.parent != null && message.hasOwnProperty("parent"))
                                if (!$util.isString(message.parent))
                                    return "parent: string expected";
                            if (message.pageSize != null && message.hasOwnProperty("pageSize"))
                                if (!$util.isInteger(message.pageSize))
                                    return "pageSize: integer expected";
                            if (message.pageToken != null && message.hasOwnProperty("pageToken"))
                                if (!$util.isString(message.pageToken))
                                    return "pageToken: string expected";
                            return null;
                        };
    
                        /**
                         * Creates a ListInstancesRequest message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.notebooks.v1.ListInstancesRequest
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.notebooks.v1.ListInstancesRequest} ListInstancesRequest
                         */
                        ListInstancesRequest.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.notebooks.v1.ListInstancesRequest)
                                return object;
                            var message = new $root.google.cloud.notebooks.v1.ListInstancesRequest();
                            if (object.parent != null)
                                message.parent = String(object.parent);
                            if (object.pageSize != null)
                                message.pageSize = object.pageSize | 0;
                            if (object.pageToken != null)
                                message.pageToken = String(object.pageToken);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a ListInstancesRequest message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.notebooks.v1.ListInstancesRequest
                         * @static
                         * @param {google.cloud.notebooks.v1.ListInstancesRequest} message ListInstancesRequest
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        ListInstancesRequest.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.parent = "";
                                object.pageSize = 0;
                                object.pageToken = "";
                            }
                            if (message.parent != null && message.hasOwnProperty("parent"))
                                object.parent = message.parent;
                            if (message.pageSize != null && message.hasOwnProperty("pageSize"))
                                object.pageSize = message.pageSize;
                            if (message.pageToken != null && message.hasOwnProperty("pageToken"))
                                object.pageToken = message.pageToken;
                            return object;
                        };
    
                        /**
                         * Converts this ListInstancesRequest to JSON.
                         * @function toJSON
                         * @memberof google.cloud.notebooks.v1.ListInstancesRequest
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        ListInstancesRequest.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for ListInstancesRequest
                         * @function getTypeUrl
                         * @memberof google.cloud.notebooks.v1.ListInstancesRequest
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        ListInstancesRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.notebooks.v1.ListInstancesRequest";
                        };
    
                        return ListInstancesRequest;
                    })();
    
                    v1.ListInstancesResponse = (function() {
    
                        /**
                         * Properties of a ListInstancesResponse.
                         * @memberof google.cloud.notebooks.v1
                         * @interface IListInstancesResponse
                         * @property {Array.<google.cloud.notebooks.v1.IInstance>|null} [instances] ListInstancesResponse instances
                         * @property {string|null} [nextPageToken] ListInstancesResponse nextPageToken
                         * @property {Array.<string>|null} [unreachable] ListInstancesResponse unreachable
                         */
    
                        /**
                         * Constructs a new ListInstancesResponse.
                         * @memberof google.cloud.notebooks.v1
                         * @classdesc Represents a ListInstancesResponse.
                         * @implements IListInstancesResponse
                         * @constructor
                         * @param {google.cloud.notebooks.v1.IListInstancesResponse=} [properties] Properties to set
                         */
                        function ListInstancesResponse(properties) {
                            this.instances = [];
                            this.unreachable = [];
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * ListInstancesResponse instances.
                         * @member {Array.<google.cloud.notebooks.v1.IInstance>} instances
                         * @memberof google.cloud.notebooks.v1.ListInstancesResponse
                         * @instance
                         */
                        ListInstancesResponse.prototype.instances = $util.emptyArray;
    
                        /**
                         * ListInstancesResponse nextPageToken.
                         * @member {string} nextPageToken
                         * @memberof google.cloud.notebooks.v1.ListInstancesResponse
                         * @instance
                         */
                        ListInstancesResponse.prototype.nextPageToken = "";
    
                        /**
                         * ListInstancesResponse unreachable.
                         * @member {Array.<string>} unreachable
                         * @memberof google.cloud.notebooks.v1.ListInstancesResponse
                         * @instance
                         */
                        ListInstancesResponse.prototype.unreachable = $util.emptyArray;
    
                        /**
                         * Creates a new ListInstancesResponse instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.notebooks.v1.ListInstancesResponse
                         * @static
                         * @param {google.cloud.notebooks.v1.IListInstancesResponse=} [properties] Properties to set
                         * @returns {google.cloud.notebooks.v1.ListInstancesResponse} ListInstancesResponse instance
                         */
                        ListInstancesResponse.create = function create(properties) {
                            return new ListInstancesResponse(properties);
                        };
    
                        /**
                         * Encodes the specified ListInstancesResponse message. Does not implicitly {@link google.cloud.notebooks.v1.ListInstancesResponse.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.notebooks.v1.ListInstancesResponse
                         * @static
                         * @param {google.cloud.notebooks.v1.IListInstancesResponse} message ListInstancesResponse message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        ListInstancesResponse.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.instances != null && message.instances.length)
                                for (var i = 0; i < message.instances.length; ++i)
                                    $root.google.cloud.notebooks.v1.Instance.encode(message.instances[i], writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                            if (message.nextPageToken != null && Object.hasOwnProperty.call(message, "nextPageToken"))
                                writer.uint32(/* id 2, wireType 2 =*/18).string(message.nextPageToken);
                            if (message.unreachable != null && message.unreachable.length)
                                for (var i = 0; i < message.unreachable.length; ++i)
                                    writer.uint32(/* id 3, wireType 2 =*/26).string(message.unreachable[i]);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified ListInstancesResponse message, length delimited. Does not implicitly {@link google.cloud.notebooks.v1.ListInstancesResponse.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.notebooks.v1.ListInstancesResponse
                         * @static
                         * @param {google.cloud.notebooks.v1.IListInstancesResponse} message ListInstancesResponse message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        ListInstancesResponse.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a ListInstancesResponse message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.notebooks.v1.ListInstancesResponse
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.notebooks.v1.ListInstancesResponse} ListInstancesResponse
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        ListInstancesResponse.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.notebooks.v1.ListInstancesResponse();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        if (!(message.instances && message.instances.length))
                                            message.instances = [];
                                        message.instances.push($root.google.cloud.notebooks.v1.Instance.decode(reader, reader.uint32()));
                                        break;
                                    }
                                case 2: {
                                        message.nextPageToken = reader.string();
                                        break;
                                    }
                                case 3: {
                                        if (!(message.unreachable && message.unreachable.length))
                                            message.unreachable = [];
                                        message.unreachable.push(reader.string());
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a ListInstancesResponse message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.notebooks.v1.ListInstancesResponse
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.notebooks.v1.ListInstancesResponse} ListInstancesResponse
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        ListInstancesResponse.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a ListInstancesResponse message.
                         * @function verify
                         * @memberof google.cloud.notebooks.v1.ListInstancesResponse
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        ListInstancesResponse.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.instances != null && message.hasOwnProperty("instances")) {
                                if (!Array.isArray(message.instances))
                                    return "instances: array expected";
                                for (var i = 0; i < message.instances.length; ++i) {
                                    var error = $root.google.cloud.notebooks.v1.Instance.verify(message.instances[i]);
                                    if (error)
                                        return "instances." + error;
                                }
                            }
                            if (message.nextPageToken != null && message.hasOwnProperty("nextPageToken"))
                                if (!$util.isString(message.nextPageToken))
                                    return "nextPageToken: string expected";
                            if (message.unreachable != null && message.hasOwnProperty("unreachable")) {
                                if (!Array.isArray(message.unreachable))
                                    return "unreachable: array expected";
                                for (var i = 0; i < message.unreachable.length; ++i)
                                    if (!$util.isString(message.unreachable[i]))
                                        return "unreachable: string[] expected";
                            }
                            return null;
                        };
    
                        /**
                         * Creates a ListInstancesResponse message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.notebooks.v1.ListInstancesResponse
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.notebooks.v1.ListInstancesResponse} ListInstancesResponse
                         */
                        ListInstancesResponse.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.notebooks.v1.ListInstancesResponse)
                                return object;
                            var message = new $root.google.cloud.notebooks.v1.ListInstancesResponse();
                            if (object.instances) {
                                if (!Array.isArray(object.instances))
                                    throw TypeError(".google.cloud.notebooks.v1.ListInstancesResponse.instances: array expected");
                                message.instances = [];
                                for (var i = 0; i < object.instances.length; ++i) {
                                    if (typeof object.instances[i] !== "object")
                                        throw TypeError(".google.cloud.notebooks.v1.ListInstancesResponse.instances: object expected");
                                    message.instances[i] = $root.google.cloud.notebooks.v1.Instance.fromObject(object.instances[i]);
                                }
                            }
                            if (object.nextPageToken != null)
                                message.nextPageToken = String(object.nextPageToken);
                            if (object.unreachable) {
                                if (!Array.isArray(object.unreachable))
                                    throw TypeError(".google.cloud.notebooks.v1.ListInstancesResponse.unreachable: array expected");
                                message.unreachable = [];
                                for (var i = 0; i < object.unreachable.length; ++i)
                                    message.unreachable[i] = String(object.unreachable[i]);
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a ListInstancesResponse message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.notebooks.v1.ListInstancesResponse
                         * @static
                         * @param {google.cloud.notebooks.v1.ListInstancesResponse} message ListInstancesResponse
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        ListInstancesResponse.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.arrays || options.defaults) {
                                object.instances = [];
                                object.unreachable = [];
                            }
                            if (options.defaults)
                                object.nextPageToken = "";
                            if (message.instances && message.instances.length) {
                                object.instances = [];
                                for (var j = 0; j < message.instances.length; ++j)
                                    object.instances[j] = $root.google.cloud.notebooks.v1.Instance.toObject(message.instances[j], options);
                            }
                            if (message.nextPageToken != null && message.hasOwnProperty("nextPageToken"))
                                object.nextPageToken = message.nextPageToken;
                            if (message.unreachable && message.unreachable.length) {
                                object.unreachable = [];
                                for (var j = 0; j < message.unreachable.length; ++j)
                                    object.unreachable[j] = message.unreachable[j];
                            }
                            return object;
                        };
    
                        /**
                         * Converts this ListInstancesResponse to JSON.
                         * @function toJSON
                         * @memberof google.cloud.notebooks.v1.ListInstancesResponse
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        ListInstancesResponse.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for ListInstancesResponse
                         * @function getTypeUrl
                         * @memberof google.cloud.notebooks.v1.ListInstancesResponse
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        ListInstancesResponse.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.notebooks.v1.ListInstancesResponse";
                        };
    
                        return ListInstancesResponse;
                    })();
    
                    v1.GetInstanceRequest = (function() {
    
                        /**
                         * Properties of a GetInstanceRequest.
                         * @memberof google.cloud.notebooks.v1
                         * @interface IGetInstanceRequest
                         * @property {string|null} [name] GetInstanceRequest name
                         */
    
                        /**
                         * Constructs a new GetInstanceRequest.
                         * @memberof google.cloud.notebooks.v1
                         * @classdesc Represents a GetInstanceRequest.
                         * @implements IGetInstanceRequest
                         * @constructor
                         * @param {google.cloud.notebooks.v1.IGetInstanceRequest=} [properties] Properties to set
                         */
                        function GetInstanceRequest(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * GetInstanceRequest name.
                         * @member {string} name
                         * @memberof google.cloud.notebooks.v1.GetInstanceRequest
                         * @instance
                         */
                        GetInstanceRequest.prototype.name = "";
    
                        /**
                         * Creates a new GetInstanceRequest instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.notebooks.v1.GetInstanceRequest
                         * @static
                         * @param {google.cloud.notebooks.v1.IGetInstanceRequest=} [properties] Properties to set
                         * @returns {google.cloud.notebooks.v1.GetInstanceRequest} GetInstanceRequest instance
                         */
                        GetInstanceRequest.create = function create(properties) {
                            return new GetInstanceRequest(properties);
                        };
    
                        /**
                         * Encodes the specified GetInstanceRequest message. Does not implicitly {@link google.cloud.notebooks.v1.GetInstanceRequest.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.notebooks.v1.GetInstanceRequest
                         * @static
                         * @param {google.cloud.notebooks.v1.IGetInstanceRequest} message GetInstanceRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        GetInstanceRequest.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified GetInstanceRequest message, length delimited. Does not implicitly {@link google.cloud.notebooks.v1.GetInstanceRequest.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.notebooks.v1.GetInstanceRequest
                         * @static
                         * @param {google.cloud.notebooks.v1.IGetInstanceRequest} message GetInstanceRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        GetInstanceRequest.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a GetInstanceRequest message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.notebooks.v1.GetInstanceRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.notebooks.v1.GetInstanceRequest} GetInstanceRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        GetInstanceRequest.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.notebooks.v1.GetInstanceRequest();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.name = reader.string();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a GetInstanceRequest message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.notebooks.v1.GetInstanceRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.notebooks.v1.GetInstanceRequest} GetInstanceRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        GetInstanceRequest.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a GetInstanceRequest message.
                         * @function verify
                         * @memberof google.cloud.notebooks.v1.GetInstanceRequest
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        GetInstanceRequest.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.name != null && message.hasOwnProperty("name"))
                                if (!$util.isString(message.name))
                                    return "name: string expected";
                            return null;
                        };
    
                        /**
                         * Creates a GetInstanceRequest message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.notebooks.v1.GetInstanceRequest
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.notebooks.v1.GetInstanceRequest} GetInstanceRequest
                         */
                        GetInstanceRequest.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.notebooks.v1.GetInstanceRequest)
                                return object;
                            var message = new $root.google.cloud.notebooks.v1.GetInstanceRequest();
                            if (object.name != null)
                                message.name = String(object.name);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a GetInstanceRequest message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.notebooks.v1.GetInstanceRequest
                         * @static
                         * @param {google.cloud.notebooks.v1.GetInstanceRequest} message GetInstanceRequest
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        GetInstanceRequest.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults)
                                object.name = "";
                            if (message.name != null && message.hasOwnProperty("name"))
                                object.name = message.name;
                            return object;
                        };
    
                        /**
                         * Converts this GetInstanceRequest to JSON.
                         * @function toJSON
                         * @memberof google.cloud.notebooks.v1.GetInstanceRequest
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        GetInstanceRequest.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for GetInstanceRequest
                         * @function getTypeUrl
                         * @memberof google.cloud.notebooks.v1.GetInstanceRequest
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        GetInstanceRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.notebooks.v1.GetInstanceRequest";
                        };
    
                        return GetInstanceRequest;
                    })();
    
                    v1.CreateInstanceRequest = (function() {
    
                        /**
                         * Properties of a CreateInstanceRequest.
                         * @memberof google.cloud.notebooks.v1
                         * @interface ICreateInstanceRequest
                         * @property {string|null} [parent] CreateInstanceRequest parent
                         * @property {string|null} [instanceId] CreateInstanceRequest instanceId
                         * @property {google.cloud.notebooks.v1.IInstance|null} [instance] CreateInstanceRequest instance
                         */
    
                        /**
                         * Constructs a new CreateInstanceRequest.
                         * @memberof google.cloud.notebooks.v1
                         * @classdesc Represents a CreateInstanceRequest.
                         * @implements ICreateInstanceRequest
                         * @constructor
                         * @param {google.cloud.notebooks.v1.ICreateInstanceRequest=} [properties] Properties to set
                         */
                        function CreateInstanceRequest(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * CreateInstanceRequest parent.
                         * @member {string} parent
                         * @memberof google.cloud.notebooks.v1.CreateInstanceRequest
                         * @instance
                         */
                        CreateInstanceRequest.prototype.parent = "";
    
                        /**
                         * CreateInstanceRequest instanceId.
                         * @member {string} instanceId
                         * @memberof google.cloud.notebooks.v1.CreateInstanceRequest
                         * @instance
                         */
                        CreateInstanceRequest.prototype.instanceId = "";
    
                        /**
                         * CreateInstanceRequest instance.
                         * @member {google.cloud.notebooks.v1.IInstance|null|undefined} instance
                         * @memberof google.cloud.notebooks.v1.CreateInstanceRequest
                         * @instance
                         */
                        CreateInstanceRequest.prototype.instance = null;
    
                        /**
                         * Creates a new CreateInstanceRequest instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.notebooks.v1.CreateInstanceRequest
                         * @static
                         * @param {google.cloud.notebooks.v1.ICreateInstanceRequest=} [properties] Properties to set
                         * @returns {google.cloud.notebooks.v1.CreateInstanceRequest} CreateInstanceRequest instance
                         */
                        CreateInstanceRequest.create = function create(properties) {
                            return new CreateInstanceRequest(properties);
                        };
    
                        /**
                         * Encodes the specified CreateInstanceRequest message. Does not implicitly {@link google.cloud.notebooks.v1.CreateInstanceRequest.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.notebooks.v1.CreateInstanceRequest
                         * @static
                         * @param {google.cloud.notebooks.v1.ICreateInstanceRequest} message CreateInstanceRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        CreateInstanceRequest.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.parent != null && Object.hasOwnProperty.call(message, "parent"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.parent);
                            if (message.instanceId != null && Object.hasOwnProperty.call(message, "instanceId"))
                                writer.uint32(/* id 2, wireType 2 =*/18).string(message.instanceId);
                            if (message.instance != null && Object.hasOwnProperty.call(message, "instance"))
                                $root.google.cloud.notebooks.v1.Instance.encode(message.instance, writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();
                            return writer;
                        };
    
                        /**
                         * Encodes the specified CreateInstanceRequest message, length delimited. Does not implicitly {@link google.cloud.notebooks.v1.CreateInstanceRequest.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.notebooks.v1.CreateInstanceRequest
                         * @static
                         * @param {google.cloud.notebooks.v1.ICreateInstanceRequest} message CreateInstanceRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        CreateInstanceRequest.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a CreateInstanceRequest message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.notebooks.v1.CreateInstanceRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.notebooks.v1.CreateInstanceRequest} CreateInstanceRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        CreateInstanceRequest.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.notebooks.v1.CreateInstanceRequest();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.parent = reader.string();
                                        break;
                                    }
                                case 2: {
                                        message.instanceId = reader.string();
                                        break;
                                    }
                                case 3: {
                                        message.instance = $root.google.cloud.notebooks.v1.Instance.decode(reader, reader.uint32());
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a CreateInstanceRequest message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.notebooks.v1.CreateInstanceRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.notebooks.v1.CreateInstanceRequest} CreateInstanceRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        CreateInstanceRequest.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a CreateInstanceRequest message.
                         * @function verify
                         * @memberof google.cloud.notebooks.v1.CreateInstanceRequest
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        CreateInstanceRequest.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.parent != null && message.hasOwnProperty("parent"))
                                if (!$util.isString(message.parent))
                                    return "parent: string expected";
                            if (message.instanceId != null && message.hasOwnProperty("instanceId"))
                                if (!$util.isString(message.instanceId))
                                    return "instanceId: string expected";
                            if (message.instance != null && message.hasOwnProperty("instance")) {
                                var error = $root.google.cloud.notebooks.v1.Instance.verify(message.instance);
                                if (error)
                                    return "instance." + error;
                            }
                            return null;
                        };
    
                        /**
                         * Creates a CreateInstanceRequest message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.notebooks.v1.CreateInstanceRequest
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.notebooks.v1.CreateInstanceRequest} CreateInstanceRequest
                         */
                        CreateInstanceRequest.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.notebooks.v1.CreateInstanceRequest)
                                return object;
                            var message = new $root.google.cloud.notebooks.v1.CreateInstanceRequest();
                            if (object.parent != null)
                                message.parent = String(object.parent);
                            if (object.instanceId != null)
                                message.instanceId = String(object.instanceId);
                            if (object.instance != null) {
                                if (typeof object.instance !== "object")
                                    throw TypeError(".google.cloud.notebooks.v1.CreateInstanceRequest.instance: object expected");
                                message.instance = $root.google.cloud.notebooks.v1.Instance.fromObject(object.instance);
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a CreateInstanceRequest message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.notebooks.v1.CreateInstanceRequest
                         * @static
                         * @param {google.cloud.notebooks.v1.CreateInstanceRequest} message CreateInstanceRequest
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        CreateInstanceRequest.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.parent = "";
                                object.instanceId = "";
                                object.instance = null;
                            }
                            if (message.parent != null && message.hasOwnProperty("parent"))
                                object.parent = message.parent;
                            if (message.instanceId != null && message.hasOwnProperty("instanceId"))
                                object.instanceId = message.instanceId;
                            if (message.instance != null && message.hasOwnProperty("instance"))
                                object.instance = $root.google.cloud.notebooks.v1.Instance.toObject(message.instance, options);
                            return object;
                        };
    
                        /**
                         * Converts this CreateInstanceRequest to JSON.
                         * @function toJSON
                         * @memberof google.cloud.notebooks.v1.CreateInstanceRequest
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        CreateInstanceRequest.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for CreateInstanceRequest
                         * @function getTypeUrl
                         * @memberof google.cloud.notebooks.v1.CreateInstanceRequest
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        CreateInstanceRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.notebooks.v1.CreateInstanceRequest";
                        };
    
                        return CreateInstanceRequest;
                    })();
    
                    v1.RegisterInstanceRequest = (function() {
    
                        /**
                         * Properties of a RegisterInstanceRequest.
                         * @memberof google.cloud.notebooks.v1
                         * @interface IRegisterInstanceRequest
                         * @property {string|null} [parent] RegisterInstanceRequest parent
                         * @property {string|null} [instanceId] RegisterInstanceRequest instanceId
                         */
    
                        /**
                         * Constructs a new RegisterInstanceRequest.
                         * @memberof google.cloud.notebooks.v1
                         * @classdesc Represents a RegisterInstanceRequest.
                         * @implements IRegisterInstanceRequest
                         * @constructor
                         * @param {google.cloud.notebooks.v1.IRegisterInstanceRequest=} [properties] Properties to set
                         */
                        function RegisterInstanceRequest(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * RegisterInstanceRequest parent.
                         * @member {string} parent
                         * @memberof google.cloud.notebooks.v1.RegisterInstanceRequest
                         * @instance
                         */
                        RegisterInstanceRequest.prototype.parent = "";
    
                        /**
                         * RegisterInstanceRequest instanceId.
                         * @member {string} instanceId
                         * @memberof google.cloud.notebooks.v1.RegisterInstanceRequest
                         * @instance
                         */
                        RegisterInstanceRequest.prototype.instanceId = "";
    
                        /**
                         * Creates a new RegisterInstanceRequest instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.notebooks.v1.RegisterInstanceRequest
                         * @static
                         * @param {google.cloud.notebooks.v1.IRegisterInstanceRequest=} [properties] Properties to set
                         * @returns {google.cloud.notebooks.v1.RegisterInstanceRequest} RegisterInstanceRequest instance
                         */
                        RegisterInstanceRequest.create = function create(properties) {
                            return new RegisterInstanceRequest(properties);
                        };
    
                        /**
                         * Encodes the specified RegisterInstanceRequest message. Does not implicitly {@link google.cloud.notebooks.v1.RegisterInstanceRequest.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.notebooks.v1.RegisterInstanceRequest
                         * @static
                         * @param {google.cloud.notebooks.v1.IRegisterInstanceRequest} message RegisterInstanceRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        RegisterInstanceRequest.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.parent != null && Object.hasOwnProperty.call(message, "parent"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.parent);
                            if (message.instanceId != null && Object.hasOwnProperty.call(message, "instanceId"))
                                writer.uint32(/* id 2, wireType 2 =*/18).string(message.instanceId);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified RegisterInstanceRequest message, length delimited. Does not implicitly {@link google.cloud.notebooks.v1.RegisterInstanceRequest.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.notebooks.v1.RegisterInstanceRequest
                         * @static
                         * @param {google.cloud.notebooks.v1.IRegisterInstanceRequest} message RegisterInstanceRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        RegisterInstanceRequest.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a RegisterInstanceRequest message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.notebooks.v1.RegisterInstanceRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.notebooks.v1.RegisterInstanceRequest} RegisterInstanceRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        RegisterInstanceRequest.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.notebooks.v1.RegisterInstanceRequest();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.parent = reader.string();
                                        break;
                                    }
                                case 2: {
                                        message.instanceId = reader.string();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a RegisterInstanceRequest message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.notebooks.v1.RegisterInstanceRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.notebooks.v1.RegisterInstanceRequest} RegisterInstanceRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        RegisterInstanceRequest.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a RegisterInstanceRequest message.
                         * @function verify
                         * @memberof google.cloud.notebooks.v1.RegisterInstanceRequest
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        RegisterInstanceRequest.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.parent != null && message.hasOwnProperty("parent"))
                                if (!$util.isString(message.parent))
                                    return "parent: string expected";
                            if (message.instanceId != null && message.hasOwnProperty("instanceId"))
                                if (!$util.isString(message.instanceId))
                                    return "instanceId: string expected";
                            return null;
                        };
    
                        /**
                         * Creates a RegisterInstanceRequest message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.notebooks.v1.RegisterInstanceRequest
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.notebooks.v1.RegisterInstanceRequest} RegisterInstanceRequest
                         */
                        RegisterInstanceRequest.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.notebooks.v1.RegisterInstanceRequest)
                                return object;
                            var message = new $root.google.cloud.notebooks.v1.RegisterInstanceRequest();
                            if (object.parent != null)
                                message.parent = String(object.parent);
                            if (object.instanceId != null)
                                message.instanceId = String(object.instanceId);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a RegisterInstanceRequest message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.notebooks.v1.RegisterInstanceRequest
                         * @static
                         * @param {google.cloud.notebooks.v1.RegisterInstanceRequest} message RegisterInstanceRequest
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        RegisterInstanceRequest.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.parent = "";
                                object.instanceId = "";
                            }
                            if (message.parent != null && message.hasOwnProperty("parent"))
                                object.parent = message.parent;
                            if (message.instanceId != null && message.hasOwnProperty("instanceId"))
                                object.instanceId = message.instanceId;
                            return object;
                        };
    
                        /**
                         * Converts this RegisterInstanceRequest to JSON.
                         * @function toJSON
                         * @memberof google.cloud.notebooks.v1.RegisterInstanceRequest
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        RegisterInstanceRequest.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for RegisterInstanceRequest
                         * @function getTypeUrl
                         * @memberof google.cloud.notebooks.v1.RegisterInstanceRequest
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        RegisterInstanceRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.notebooks.v1.RegisterInstanceRequest";
                        };
    
                        return RegisterInstanceRequest;
                    })();
    
                    v1.SetInstanceAcceleratorRequest = (function() {
    
                        /**
                         * Properties of a SetInstanceAcceleratorRequest.
                         * @memberof google.cloud.notebooks.v1
                         * @interface ISetInstanceAcceleratorRequest
                         * @property {string|null} [name] SetInstanceAcceleratorRequest name
                         * @property {google.cloud.notebooks.v1.Instance.AcceleratorType|null} [type] SetInstanceAcceleratorRequest type
                         * @property {number|Long|null} [coreCount] SetInstanceAcceleratorRequest coreCount
                         */
    
                        /**
                         * Constructs a new SetInstanceAcceleratorRequest.
                         * @memberof google.cloud.notebooks.v1
                         * @classdesc Represents a SetInstanceAcceleratorRequest.
                         * @implements ISetInstanceAcceleratorRequest
                         * @constructor
                         * @param {google.cloud.notebooks.v1.ISetInstanceAcceleratorRequest=} [properties] Properties to set
                         */
                        function SetInstanceAcceleratorRequest(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * SetInstanceAcceleratorRequest name.
                         * @member {string} name
                         * @memberof google.cloud.notebooks.v1.SetInstanceAcceleratorRequest
                         * @instance
                         */
                        SetInstanceAcceleratorRequest.prototype.name = "";
    
                        /**
                         * SetInstanceAcceleratorRequest type.
                         * @member {google.cloud.notebooks.v1.Instance.AcceleratorType} type
                         * @memberof google.cloud.notebooks.v1.SetInstanceAcceleratorRequest
                         * @instance
                         */
                        SetInstanceAcceleratorRequest.prototype.type = 0;
    
                        /**
                         * SetInstanceAcceleratorRequest coreCount.
                         * @member {number|Long} coreCount
                         * @memberof google.cloud.notebooks.v1.SetInstanceAcceleratorRequest
                         * @instance
                         */
                        SetInstanceAcceleratorRequest.prototype.coreCount = $util.Long ? $util.Long.fromBits(0,0,false) : 0;
    
                        /**
                         * Creates a new SetInstanceAcceleratorRequest instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.notebooks.v1.SetInstanceAcceleratorRequest
                         * @static
                         * @param {google.cloud.notebooks.v1.ISetInstanceAcceleratorRequest=} [properties] Properties to set
                         * @returns {google.cloud.notebooks.v1.SetInstanceAcceleratorRequest} SetInstanceAcceleratorRequest instance
                         */
                        SetInstanceAcceleratorRequest.create = function create(properties) {
                            return new SetInstanceAcceleratorRequest(properties);
                        };
    
                        /**
                         * Encodes the specified SetInstanceAcceleratorRequest message. Does not implicitly {@link google.cloud.notebooks.v1.SetInstanceAcceleratorRequest.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.notebooks.v1.SetInstanceAcceleratorRequest
                         * @static
                         * @param {google.cloud.notebooks.v1.ISetInstanceAcceleratorRequest} message SetInstanceAcceleratorRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        SetInstanceAcceleratorRequest.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                            if (message.type != null && Object.hasOwnProperty.call(message, "type"))
                                writer.uint32(/* id 2, wireType 0 =*/16).int32(message.type);
                            if (message.coreCount != null && Object.hasOwnProperty.call(message, "coreCount"))
                                writer.uint32(/* id 3, wireType 0 =*/24).int64(message.coreCount);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified SetInstanceAcceleratorRequest message, length delimited. Does not implicitly {@link google.cloud.notebooks.v1.SetInstanceAcceleratorRequest.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.notebooks.v1.SetInstanceAcceleratorRequest
                         * @static
                         * @param {google.cloud.notebooks.v1.ISetInstanceAcceleratorRequest} message SetInstanceAcceleratorRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        SetInstanceAcceleratorRequest.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a SetInstanceAcceleratorRequest message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.notebooks.v1.SetInstanceAcceleratorRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.notebooks.v1.SetInstanceAcceleratorRequest} SetInstanceAcceleratorRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        SetInstanceAcceleratorRequest.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.notebooks.v1.SetInstanceAcceleratorRequest();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.name = reader.string();
                                        break;
                                    }
                                case 2: {
                                        message.type = reader.int32();
                                        break;
                                    }
                                case 3: {
                                        message.coreCount = reader.int64();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a SetInstanceAcceleratorRequest message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.notebooks.v1.SetInstanceAcceleratorRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.notebooks.v1.SetInstanceAcceleratorRequest} SetInstanceAcceleratorRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        SetInstanceAcceleratorRequest.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a SetInstanceAcceleratorRequest message.
                         * @function verify
                         * @memberof google.cloud.notebooks.v1.SetInstanceAcceleratorRequest
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        SetInstanceAcceleratorRequest.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.name != null && message.hasOwnProperty("name"))
                                if (!$util.isString(message.name))
                                    return "name: string expected";
                            if (message.type != null && message.hasOwnProperty("type"))
                                switch (message.type) {
                                default:
                                    return "type: enum value expected";
                                case 0:
                                case 1:
                                case 2:
                                case 3:
                                case 4:
                                case 5:
                                case 11:
                                case 8:
                                case 9:
                                case 10:
                                case 6:
                                case 7:
                                    break;
                                }
                            if (message.coreCount != null && message.hasOwnProperty("coreCount"))
                                if (!$util.isInteger(message.coreCount) && !(message.coreCount && $util.isInteger(message.coreCount.low) && $util.isInteger(message.coreCount.high)))
                                    return "coreCount: integer|Long expected";
                            return null;
                        };
    
                        /**
                         * Creates a SetInstanceAcceleratorRequest message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.notebooks.v1.SetInstanceAcceleratorRequest
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.notebooks.v1.SetInstanceAcceleratorRequest} SetInstanceAcceleratorRequest
                         */
                        SetInstanceAcceleratorRequest.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.notebooks.v1.SetInstanceAcceleratorRequest)
                                return object;
                            var message = new $root.google.cloud.notebooks.v1.SetInstanceAcceleratorRequest();
                            if (object.name != null)
                                message.name = String(object.name);
                            switch (object.type) {
                            default:
                                if (typeof object.type === "number") {
                                    message.type = object.type;
                                    break;
                                }
                                break;
                            case "ACCELERATOR_TYPE_UNSPECIFIED":
                            case 0:
                                message.type = 0;
                                break;
                            case "NVIDIA_TESLA_K80":
                            case 1:
                                message.type = 1;
                                break;
                            case "NVIDIA_TESLA_P100":
                            case 2:
                                message.type = 2;
                                break;
                            case "NVIDIA_TESLA_V100":
                            case 3:
                                message.type = 3;
                                break;
                            case "NVIDIA_TESLA_P4":
                            case 4:
                                message.type = 4;
                                break;
                            case "NVIDIA_TESLA_T4":
                            case 5:
                                message.type = 5;
                                break;
                            case "NVIDIA_TESLA_A100":
                            case 11:
                                message.type = 11;
                                break;
                            case "NVIDIA_TESLA_T4_VWS":
                            case 8:
                                message.type = 8;
                                break;
                            case "NVIDIA_TESLA_P100_VWS":
                            case 9:
                                message.type = 9;
                                break;
                            case "NVIDIA_TESLA_P4_VWS":
                            case 10:
                                message.type = 10;
                                break;
                            case "TPU_V2":
                            case 6:
                                message.type = 6;
                                break;
                            case "TPU_V3":
                            case 7:
                                message.type = 7;
                                break;
                            }
                            if (object.coreCount != null)
                                if ($util.Long)
                                    (message.coreCount = $util.Long.fromValue(object.coreCount)).unsigned = false;
                                else if (typeof object.coreCount === "string")
                                    message.coreCount = parseInt(object.coreCount, 10);
                                else if (typeof object.coreCount === "number")
                                    message.coreCount = object.coreCount;
                                else if (typeof object.coreCount === "object")
                                    message.coreCount = new $util.LongBits(object.coreCount.low >>> 0, object.coreCount.high >>> 0).toNumber();
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a SetInstanceAcceleratorRequest message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.notebooks.v1.SetInstanceAcceleratorRequest
                         * @static
                         * @param {google.cloud.notebooks.v1.SetInstanceAcceleratorRequest} message SetInstanceAcceleratorRequest
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        SetInstanceAcceleratorRequest.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.name = "";
                                object.type = options.enums === String ? "ACCELERATOR_TYPE_UNSPECIFIED" : 0;
                                if ($util.Long) {
                                    var long = new $util.Long(0, 0, false);
                                    object.coreCount = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                                } else
                                    object.coreCount = options.longs === String ? "0" : 0;
                            }
                            if (message.name != null && message.hasOwnProperty("name"))
                                object.name = message.name;
                            if (message.type != null && message.hasOwnProperty("type"))
                                object.type = options.enums === String ? $root.google.cloud.notebooks.v1.Instance.AcceleratorType[message.type] === undefined ? message.type : $root.google.cloud.notebooks.v1.Instance.AcceleratorType[message.type] : message.type;
                            if (message.coreCount != null && message.hasOwnProperty("coreCount"))
                                if (typeof message.coreCount === "number")
                                    object.coreCount = options.longs === String ? String(message.coreCount) : message.coreCount;
                                else
                                    object.coreCount = options.longs === String ? $util.Long.prototype.toString.call(message.coreCount) : options.longs === Number ? new $util.LongBits(message.coreCount.low >>> 0, message.coreCount.high >>> 0).toNumber() : message.coreCount;
                            return object;
                        };
    
                        /**
                         * Converts this SetInstanceAcceleratorRequest to JSON.
                         * @function toJSON
                         * @memberof google.cloud.notebooks.v1.SetInstanceAcceleratorRequest
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        SetInstanceAcceleratorRequest.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for SetInstanceAcceleratorRequest
                         * @function getTypeUrl
                         * @memberof google.cloud.notebooks.v1.SetInstanceAcceleratorRequest
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        SetInstanceAcceleratorRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.notebooks.v1.SetInstanceAcceleratorRequest";
                        };
    
                        return SetInstanceAcceleratorRequest;
                    })();
    
                    v1.SetInstanceMachineTypeRequest = (function() {
    
                        /**
                         * Properties of a SetInstanceMachineTypeRequest.
                         * @memberof google.cloud.notebooks.v1
                         * @interface ISetInstanceMachineTypeRequest
                         * @property {string|null} [name] SetInstanceMachineTypeRequest name
                         * @property {string|null} [machineType] SetInstanceMachineTypeRequest machineType
                         */
    
                        /**
                         * Constructs a new SetInstanceMachineTypeRequest.
                         * @memberof google.cloud.notebooks.v1
                         * @classdesc Represents a SetInstanceMachineTypeRequest.
                         * @implements ISetInstanceMachineTypeRequest
                         * @constructor
                         * @param {google.cloud.notebooks.v1.ISetInstanceMachineTypeRequest=} [properties] Properties to set
                         */
                        function SetInstanceMachineTypeRequest(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * SetInstanceMachineTypeRequest name.
                         * @member {string} name
                         * @memberof google.cloud.notebooks.v1.SetInstanceMachineTypeRequest
                         * @instance
                         */
                        SetInstanceMachineTypeRequest.prototype.name = "";
    
                        /**
                         * SetInstanceMachineTypeRequest machineType.
                         * @member {string} machineType
                         * @memberof google.cloud.notebooks.v1.SetInstanceMachineTypeRequest
                         * @instance
                         */
                        SetInstanceMachineTypeRequest.prototype.machineType = "";
    
                        /**
                         * Creates a new SetInstanceMachineTypeRequest instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.notebooks.v1.SetInstanceMachineTypeRequest
                         * @static
                         * @param {google.cloud.notebooks.v1.ISetInstanceMachineTypeRequest=} [properties] Properties to set
                         * @returns {google.cloud.notebooks.v1.SetInstanceMachineTypeRequest} SetInstanceMachineTypeRequest instance
                         */
                        SetInstanceMachineTypeRequest.create = function create(properties) {
                            return new SetInstanceMachineTypeRequest(properties);
                        };
    
                        /**
                         * Encodes the specified SetInstanceMachineTypeRequest message. Does not implicitly {@link google.cloud.notebooks.v1.SetInstanceMachineTypeRequest.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.notebooks.v1.SetInstanceMachineTypeRequest
                         * @static
                         * @param {google.cloud.notebooks.v1.ISetInstanceMachineTypeRequest} message SetInstanceMachineTypeRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        SetInstanceMachineTypeRequest.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                            if (message.machineType != null && Object.hasOwnProperty.call(message, "machineType"))
                                writer.uint32(/* id 2, wireType 2 =*/18).string(message.machineType);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified SetInstanceMachineTypeRequest message, length delimited. Does not implicitly {@link google.cloud.notebooks.v1.SetInstanceMachineTypeRequest.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.notebooks.v1.SetInstanceMachineTypeRequest
                         * @static
                         * @param {google.cloud.notebooks.v1.ISetInstanceMachineTypeRequest} message SetInstanceMachineTypeRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        SetInstanceMachineTypeRequest.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a SetInstanceMachineTypeRequest message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.notebooks.v1.SetInstanceMachineTypeRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.notebooks.v1.SetInstanceMachineTypeRequest} SetInstanceMachineTypeRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        SetInstanceMachineTypeRequest.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.notebooks.v1.SetInstanceMachineTypeRequest();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.name = reader.string();
                                        break;
                                    }
                                case 2: {
                                        message.machineType = reader.string();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a SetInstanceMachineTypeRequest message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.notebooks.v1.SetInstanceMachineTypeRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.notebooks.v1.SetInstanceMachineTypeRequest} SetInstanceMachineTypeRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        SetInstanceMachineTypeRequest.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a SetInstanceMachineTypeRequest message.
                         * @function verify
                         * @memberof google.cloud.notebooks.v1.SetInstanceMachineTypeRequest
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        SetInstanceMachineTypeRequest.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.name != null && message.hasOwnProperty("name"))
                                if (!$util.isString(message.name))
                                    return "name: string expected";
                            if (message.machineType != null && message.hasOwnProperty("machineType"))
                                if (!$util.isString(message.machineType))
                                    return "machineType: string expected";
                            return null;
                        };
    
                        /**
                         * Creates a SetInstanceMachineTypeRequest message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.notebooks.v1.SetInstanceMachineTypeRequest
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.notebooks.v1.SetInstanceMachineTypeRequest} SetInstanceMachineTypeRequest
                         */
                        SetInstanceMachineTypeRequest.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.notebooks.v1.SetInstanceMachineTypeRequest)
                                return object;
                            var message = new $root.google.cloud.notebooks.v1.SetInstanceMachineTypeRequest();
                            if (object.name != null)
                                message.name = String(object.name);
                            if (object.machineType != null)
                                message.machineType = String(object.machineType);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a SetInstanceMachineTypeRequest message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.notebooks.v1.SetInstanceMachineTypeRequest
                         * @static
                         * @param {google.cloud.notebooks.v1.SetInstanceMachineTypeRequest} message SetInstanceMachineTypeRequest
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        SetInstanceMachineTypeRequest.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.name = "";
                                object.machineType = "";
                            }
                            if (message.name != null && message.hasOwnProperty("name"))
                                object.name = message.name;
                            if (message.machineType != null && message.hasOwnProperty("machineType"))
                                object.machineType = message.machineType;
                            return object;
                        };
    
                        /**
                         * Converts this SetInstanceMachineTypeRequest to JSON.
                         * @function toJSON
                         * @memberof google.cloud.notebooks.v1.SetInstanceMachineTypeRequest
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        SetInstanceMachineTypeRequest.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for SetInstanceMachineTypeRequest
                         * @function getTypeUrl
                         * @memberof google.cloud.notebooks.v1.SetInstanceMachineTypeRequest
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        SetInstanceMachineTypeRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.notebooks.v1.SetInstanceMachineTypeRequest";
                        };
    
                        return SetInstanceMachineTypeRequest;
                    })();
    
                    v1.UpdateInstanceConfigRequest = (function() {
    
                        /**
                         * Properties of an UpdateInstanceConfigRequest.
                         * @memberof google.cloud.notebooks.v1
                         * @interface IUpdateInstanceConfigRequest
                         * @property {string|null} [name] UpdateInstanceConfigRequest name
                         * @property {google.cloud.notebooks.v1.IInstanceConfig|null} [config] UpdateInstanceConfigRequest config
                         */
    
                        /**
                         * Constructs a new UpdateInstanceConfigRequest.
                         * @memberof google.cloud.notebooks.v1
                         * @classdesc Represents an UpdateInstanceConfigRequest.
                         * @implements IUpdateInstanceConfigRequest
                         * @constructor
                         * @param {google.cloud.notebooks.v1.IUpdateInstanceConfigRequest=} [properties] Properties to set
                         */
                        function UpdateInstanceConfigRequest(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * UpdateInstanceConfigRequest name.
                         * @member {string} name
                         * @memberof google.cloud.notebooks.v1.UpdateInstanceConfigRequest
                         * @instance
                         */
                        UpdateInstanceConfigRequest.prototype.name = "";
    
                        /**
                         * UpdateInstanceConfigRequest config.
                         * @member {google.cloud.notebooks.v1.IInstanceConfig|null|undefined} config
                         * @memberof google.cloud.notebooks.v1.UpdateInstanceConfigRequest
                         * @instance
                         */
                        UpdateInstanceConfigRequest.prototype.config = null;
    
                        /**
                         * Creates a new UpdateInstanceConfigRequest instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.notebooks.v1.UpdateInstanceConfigRequest
                         * @static
                         * @param {google.cloud.notebooks.v1.IUpdateInstanceConfigRequest=} [properties] Properties to set
                         * @returns {google.cloud.notebooks.v1.UpdateInstanceConfigRequest} UpdateInstanceConfigRequest instance
                         */
                        UpdateInstanceConfigRequest.create = function create(properties) {
                            return new UpdateInstanceConfigRequest(properties);
                        };
    
                        /**
                         * Encodes the specified UpdateInstanceConfigRequest message. Does not implicitly {@link google.cloud.notebooks.v1.UpdateInstanceConfigRequest.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.notebooks.v1.UpdateInstanceConfigRequest
                         * @static
                         * @param {google.cloud.notebooks.v1.IUpdateInstanceConfigRequest} message UpdateInstanceConfigRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        UpdateInstanceConfigRequest.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                            if (message.config != null && Object.hasOwnProperty.call(message, "config"))
                                $root.google.cloud.notebooks.v1.InstanceConfig.encode(message.config, writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                            return writer;
                        };
    
                        /**
                         * Encodes the specified UpdateInstanceConfigRequest message, length delimited. Does not implicitly {@link google.cloud.notebooks.v1.UpdateInstanceConfigRequest.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.notebooks.v1.UpdateInstanceConfigRequest
                         * @static
                         * @param {google.cloud.notebooks.v1.IUpdateInstanceConfigRequest} message UpdateInstanceConfigRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        UpdateInstanceConfigRequest.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes an UpdateInstanceConfigRequest message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.notebooks.v1.UpdateInstanceConfigRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.notebooks.v1.UpdateInstanceConfigRequest} UpdateInstanceConfigRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        UpdateInstanceConfigRequest.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.notebooks.v1.UpdateInstanceConfigRequest();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.name = reader.string();
                                        break;
                                    }
                                case 2: {
                                        message.config = $root.google.cloud.notebooks.v1.InstanceConfig.decode(reader, reader.uint32());
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes an UpdateInstanceConfigRequest message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.notebooks.v1.UpdateInstanceConfigRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.notebooks.v1.UpdateInstanceConfigRequest} UpdateInstanceConfigRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        UpdateInstanceConfigRequest.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies an UpdateInstanceConfigRequest message.
                         * @function verify
                         * @memberof google.cloud.notebooks.v1.UpdateInstanceConfigRequest
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        UpdateInstanceConfigRequest.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.name != null && message.hasOwnProperty("name"))
                                if (!$util.isString(message.name))
                                    return "name: string expected";
                            if (message.config != null && message.hasOwnProperty("config")) {
                                var error = $root.google.cloud.notebooks.v1.InstanceConfig.verify(message.config);
                                if (error)
                                    return "config." + error;
                            }
                            return null;
                        };
    
                        /**
                         * Creates an UpdateInstanceConfigRequest message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.notebooks.v1.UpdateInstanceConfigRequest
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.notebooks.v1.UpdateInstanceConfigRequest} UpdateInstanceConfigRequest
                         */
                        UpdateInstanceConfigRequest.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.notebooks.v1.UpdateInstanceConfigRequest)
                                return object;
                            var message = new $root.google.cloud.notebooks.v1.UpdateInstanceConfigRequest();
                            if (object.name != null)
                                message.name = String(object.name);
                            if (object.config != null) {
                                if (typeof object.config !== "object")
                                    throw TypeError(".google.cloud.notebooks.v1.UpdateInstanceConfigRequest.config: object expected");
                                message.config = $root.google.cloud.notebooks.v1.InstanceConfig.fromObject(object.config);
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from an UpdateInstanceConfigRequest message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.notebooks.v1.UpdateInstanceConfigRequest
                         * @static
                         * @param {google.cloud.notebooks.v1.UpdateInstanceConfigRequest} message UpdateInstanceConfigRequest
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        UpdateInstanceConfigRequest.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.name = "";
                                object.config = null;
                            }
                            if (message.name != null && message.hasOwnProperty("name"))
                                object.name = message.name;
                            if (message.config != null && message.hasOwnProperty("config"))
                                object.config = $root.google.cloud.notebooks.v1.InstanceConfig.toObject(message.config, options);
                            return object;
                        };
    
                        /**
                         * Converts this UpdateInstanceConfigRequest to JSON.
                         * @function toJSON
                         * @memberof google.cloud.notebooks.v1.UpdateInstanceConfigRequest
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        UpdateInstanceConfigRequest.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for UpdateInstanceConfigRequest
                         * @function getTypeUrl
                         * @memberof google.cloud.notebooks.v1.UpdateInstanceConfigRequest
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        UpdateInstanceConfigRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.notebooks.v1.UpdateInstanceConfigRequest";
                        };
    
                        return UpdateInstanceConfigRequest;
                    })();
    
                    v1.SetInstanceLabelsRequest = (function() {
    
                        /**
                         * Properties of a SetInstanceLabelsRequest.
                         * @memberof google.cloud.notebooks.v1
                         * @interface ISetInstanceLabelsRequest
                         * @property {string|null} [name] SetInstanceLabelsRequest name
                         * @property {Object.<string,string>|null} [labels] SetInstanceLabelsRequest labels
                         */
    
                        /**
                         * Constructs a new SetInstanceLabelsRequest.
                         * @memberof google.cloud.notebooks.v1
                         * @classdesc Represents a SetInstanceLabelsRequest.
                         * @implements ISetInstanceLabelsRequest
                         * @constructor
                         * @param {google.cloud.notebooks.v1.ISetInstanceLabelsRequest=} [properties] Properties to set
                         */
                        function SetInstanceLabelsRequest(properties) {
                            this.labels = {};
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * SetInstanceLabelsRequest name.
                         * @member {string} name
                         * @memberof google.cloud.notebooks.v1.SetInstanceLabelsRequest
                         * @instance
                         */
                        SetInstanceLabelsRequest.prototype.name = "";
    
                        /**
                         * SetInstanceLabelsRequest labels.
                         * @member {Object.<string,string>} labels
                         * @memberof google.cloud.notebooks.v1.SetInstanceLabelsRequest
                         * @instance
                         */
                        SetInstanceLabelsRequest.prototype.labels = $util.emptyObject;
    
                        /**
                         * Creates a new SetInstanceLabelsRequest instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.notebooks.v1.SetInstanceLabelsRequest
                         * @static
                         * @param {google.cloud.notebooks.v1.ISetInstanceLabelsRequest=} [properties] Properties to set
                         * @returns {google.cloud.notebooks.v1.SetInstanceLabelsRequest} SetInstanceLabelsRequest instance
                         */
                        SetInstanceLabelsRequest.create = function create(properties) {
                            return new SetInstanceLabelsRequest(properties);
                        };
    
                        /**
                         * Encodes the specified SetInstanceLabelsRequest message. Does not implicitly {@link google.cloud.notebooks.v1.SetInstanceLabelsRequest.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.notebooks.v1.SetInstanceLabelsRequest
                         * @static
                         * @param {google.cloud.notebooks.v1.ISetInstanceLabelsRequest} message SetInstanceLabelsRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        SetInstanceLabelsRequest.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                            if (message.labels != null && Object.hasOwnProperty.call(message, "labels"))
                                for (var keys = Object.keys(message.labels), i = 0; i < keys.length; ++i)
                                    writer.uint32(/* id 2, wireType 2 =*/18).fork().uint32(/* id 1, wireType 2 =*/10).string(keys[i]).uint32(/* id 2, wireType 2 =*/18).string(message.labels[keys[i]]).ldelim();
                            return writer;
                        };
    
                        /**
                         * Encodes the specified SetInstanceLabelsRequest message, length delimited. Does not implicitly {@link google.cloud.notebooks.v1.SetInstanceLabelsRequest.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.notebooks.v1.SetInstanceLabelsRequest
                         * @static
                         * @param {google.cloud.notebooks.v1.ISetInstanceLabelsRequest} message SetInstanceLabelsRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        SetInstanceLabelsRequest.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a SetInstanceLabelsRequest message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.notebooks.v1.SetInstanceLabelsRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.notebooks.v1.SetInstanceLabelsRequest} SetInstanceLabelsRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        SetInstanceLabelsRequest.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.notebooks.v1.SetInstanceLabelsRequest(), key, value;
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.name = reader.string();
                                        break;
                                    }
                                case 2: {
                                        if (message.labels === $util.emptyObject)
                                            message.labels = {};
                                        var end2 = reader.uint32() + reader.pos;
                                        key = "";
                                        value = "";
                                        while (reader.pos < end2) {
                                            var tag2 = reader.uint32();
                                            switch (tag2 >>> 3) {
                                            case 1:
                                                key = reader.string();
                                                break;
                                            case 2:
                                                value = reader.string();
                                                break;
                                            default:
                                                reader.skipType(tag2 & 7);
                                                break;
                                            }
                                        }
                                        message.labels[key] = value;
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a SetInstanceLabelsRequest message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.notebooks.v1.SetInstanceLabelsRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.notebooks.v1.SetInstanceLabelsRequest} SetInstanceLabelsRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        SetInstanceLabelsRequest.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a SetInstanceLabelsRequest message.
                         * @function verify
                         * @memberof google.cloud.notebooks.v1.SetInstanceLabelsRequest
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        SetInstanceLabelsRequest.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.name != null && message.hasOwnProperty("name"))
                                if (!$util.isString(message.name))
                                    return "name: string expected";
                            if (message.labels != null && message.hasOwnProperty("labels")) {
                                if (!$util.isObject(message.labels))
                                    return "labels: object expected";
                                var key = Object.keys(message.labels);
                                for (var i = 0; i < key.length; ++i)
                                    if (!$util.isString(message.labels[key[i]]))
                                        return "labels: string{k:string} expected";
                            }
                            return null;
                        };
    
                        /**
                         * Creates a SetInstanceLabelsRequest message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.notebooks.v1.SetInstanceLabelsRequest
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.notebooks.v1.SetInstanceLabelsRequest} SetInstanceLabelsRequest
                         */
                        SetInstanceLabelsRequest.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.notebooks.v1.SetInstanceLabelsRequest)
                                return object;
                            var message = new $root.google.cloud.notebooks.v1.SetInstanceLabelsRequest();
                            if (object.name != null)
                                message.name = String(object.name);
                            if (object.labels) {
                                if (typeof object.labels !== "object")
                                    throw TypeError(".google.cloud.notebooks.v1.SetInstanceLabelsRequest.labels: object expected");
                                message.labels = {};
                                for (var keys = Object.keys(object.labels), i = 0; i < keys.length; ++i)
                                    message.labels[keys[i]] = String(object.labels[keys[i]]);
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a SetInstanceLabelsRequest message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.notebooks.v1.SetInstanceLabelsRequest
                         * @static
                         * @param {google.cloud.notebooks.v1.SetInstanceLabelsRequest} message SetInstanceLabelsRequest
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        SetInstanceLabelsRequest.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.objects || options.defaults)
                                object.labels = {};
                            if (options.defaults)
                                object.name = "";
                            if (message.name != null && message.hasOwnProperty("name"))
                                object.name = message.name;
                            var keys2;
                            if (message.labels && (keys2 = Object.keys(message.labels)).length) {
                                object.labels = {};
                                for (var j = 0; j < keys2.length; ++j)
                                    object.labels[keys2[j]] = message.labels[keys2[j]];
                            }
                            return object;
                        };
    
                        /**
                         * Converts this SetInstanceLabelsRequest to JSON.
                         * @function toJSON
                         * @memberof google.cloud.notebooks.v1.SetInstanceLabelsRequest
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        SetInstanceLabelsRequest.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for SetInstanceLabelsRequest
                         * @function getTypeUrl
                         * @memberof google.cloud.notebooks.v1.SetInstanceLabelsRequest
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        SetInstanceLabelsRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.notebooks.v1.SetInstanceLabelsRequest";
                        };
    
                        return SetInstanceLabelsRequest;
                    })();
    
                    v1.UpdateInstanceMetadataItemsRequest = (function() {
    
                        /**
                         * Properties of an UpdateInstanceMetadataItemsRequest.
                         * @memberof google.cloud.notebooks.v1
                         * @interface IUpdateInstanceMetadataItemsRequest
                         * @property {string|null} [name] UpdateInstanceMetadataItemsRequest name
                         * @property {Object.<string,string>|null} [items] UpdateInstanceMetadataItemsRequest items
                         */
    
                        /**
                         * Constructs a new UpdateInstanceMetadataItemsRequest.
                         * @memberof google.cloud.notebooks.v1
                         * @classdesc Represents an UpdateInstanceMetadataItemsRequest.
                         * @implements IUpdateInstanceMetadataItemsRequest
                         * @constructor
                         * @param {google.cloud.notebooks.v1.IUpdateInstanceMetadataItemsRequest=} [properties] Properties to set
                         */
                        function UpdateInstanceMetadataItemsRequest(properties) {
                            this.items = {};
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * UpdateInstanceMetadataItemsRequest name.
                         * @member {string} name
                         * @memberof google.cloud.notebooks.v1.UpdateInstanceMetadataItemsRequest
                         * @instance
                         */
                        UpdateInstanceMetadataItemsRequest.prototype.name = "";
    
                        /**
                         * UpdateInstanceMetadataItemsRequest items.
                         * @member {Object.<string,string>} items
                         * @memberof google.cloud.notebooks.v1.UpdateInstanceMetadataItemsRequest
                         * @instance
                         */
                        UpdateInstanceMetadataItemsRequest.prototype.items = $util.emptyObject;
    
                        /**
                         * Creates a new UpdateInstanceMetadataItemsRequest instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.notebooks.v1.UpdateInstanceMetadataItemsRequest
                         * @static
                         * @param {google.cloud.notebooks.v1.IUpdateInstanceMetadataItemsRequest=} [properties] Properties to set
                         * @returns {google.cloud.notebooks.v1.UpdateInstanceMetadataItemsRequest} UpdateInstanceMetadataItemsRequest instance
                         */
                        UpdateInstanceMetadataItemsRequest.create = function create(properties) {
                            return new UpdateInstanceMetadataItemsRequest(properties);
                        };
    
                        /**
                         * Encodes the specified UpdateInstanceMetadataItemsRequest message. Does not implicitly {@link google.cloud.notebooks.v1.UpdateInstanceMetadataItemsRequest.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.notebooks.v1.UpdateInstanceMetadataItemsRequest
                         * @static
                         * @param {google.cloud.notebooks.v1.IUpdateInstanceMetadataItemsRequest} message UpdateInstanceMetadataItemsRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        UpdateInstanceMetadataItemsRequest.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                            if (message.items != null && Object.hasOwnProperty.call(message, "items"))
                                for (var keys = Object.keys(message.items), i = 0; i < keys.length; ++i)
                                    writer.uint32(/* id 2, wireType 2 =*/18).fork().uint32(/* id 1, wireType 2 =*/10).string(keys[i]).uint32(/* id 2, wireType 2 =*/18).string(message.items[keys[i]]).ldelim();
                            return writer;
                        };
    
                        /**
                         * Encodes the specified UpdateInstanceMetadataItemsRequest message, length delimited. Does not implicitly {@link google.cloud.notebooks.v1.UpdateInstanceMetadataItemsRequest.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.notebooks.v1.UpdateInstanceMetadataItemsRequest
                         * @static
                         * @param {google.cloud.notebooks.v1.IUpdateInstanceMetadataItemsRequest} message UpdateInstanceMetadataItemsRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        UpdateInstanceMetadataItemsRequest.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes an UpdateInstanceMetadataItemsRequest message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.notebooks.v1.UpdateInstanceMetadataItemsRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.notebooks.v1.UpdateInstanceMetadataItemsRequest} UpdateInstanceMetadataItemsRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        UpdateInstanceMetadataItemsRequest.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.notebooks.v1.UpdateInstanceMetadataItemsRequest(), key, value;
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.name = reader.string();
                                        break;
                                    }
                                case 2: {
                                        if (message.items === $util.emptyObject)
                                            message.items = {};
                                        var end2 = reader.uint32() + reader.pos;
                                        key = "";
                                        value = "";
                                        while (reader.pos < end2) {
                                            var tag2 = reader.uint32();
                                            switch (tag2 >>> 3) {
                                            case 1:
                                                key = reader.string();
                                                break;
                                            case 2:
                                                value = reader.string();
                                                break;
                                            default:
                                                reader.skipType(tag2 & 7);
                                                break;
                                            }
                                        }
                                        message.items[key] = value;
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes an UpdateInstanceMetadataItemsRequest message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.notebooks.v1.UpdateInstanceMetadataItemsRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.notebooks.v1.UpdateInstanceMetadataItemsRequest} UpdateInstanceMetadataItemsRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        UpdateInstanceMetadataItemsRequest.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies an UpdateInstanceMetadataItemsRequest message.
                         * @function verify
                         * @memberof google.cloud.notebooks.v1.UpdateInstanceMetadataItemsRequest
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        UpdateInstanceMetadataItemsRequest.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.name != null && message.hasOwnProperty("name"))
                                if (!$util.isString(message.name))
                                    return "name: string expected";
                            if (message.items != null && message.hasOwnProperty("items")) {
                                if (!$util.isObject(message.items))
                                    return "items: object expected";
                                var key = Object.keys(message.items);
                                for (var i = 0; i < key.length; ++i)
                                    if (!$util.isString(message.items[key[i]]))
                                        return "items: string{k:string} expected";
                            }
                            return null;
                        };
    
                        /**
                         * Creates an UpdateInstanceMetadataItemsRequest message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.notebooks.v1.UpdateInstanceMetadataItemsRequest
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.notebooks.v1.UpdateInstanceMetadataItemsRequest} UpdateInstanceMetadataItemsRequest
                         */
                        UpdateInstanceMetadataItemsRequest.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.notebooks.v1.UpdateInstanceMetadataItemsRequest)
                                return object;
                            var message = new $root.google.cloud.notebooks.v1.UpdateInstanceMetadataItemsRequest();
                            if (object.name != null)
                                message.name = String(object.name);
                            if (object.items) {
                                if (typeof object.items !== "object")
                                    throw TypeError(".google.cloud.notebooks.v1.UpdateInstanceMetadataItemsRequest.items: object expected");
                                message.items = {};
                                for (var keys = Object.keys(object.items), i = 0; i < keys.length; ++i)
                                    message.items[keys[i]] = String(object.items[keys[i]]);
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from an UpdateInstanceMetadataItemsRequest message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.notebooks.v1.UpdateInstanceMetadataItemsRequest
                         * @static
                         * @param {google.cloud.notebooks.v1.UpdateInstanceMetadataItemsRequest} message UpdateInstanceMetadataItemsRequest
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        UpdateInstanceMetadataItemsRequest.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.objects || options.defaults)
                                object.items = {};
                            if (options.defaults)
                                object.name = "";
                            if (message.name != null && message.hasOwnProperty("name"))
                                object.name = message.name;
                            var keys2;
                            if (message.items && (keys2 = Object.keys(message.items)).length) {
                                object.items = {};
                                for (var j = 0; j < keys2.length; ++j)
                                    object.items[keys2[j]] = message.items[keys2[j]];
                            }
                            return object;
                        };
    
                        /**
                         * Converts this UpdateInstanceMetadataItemsRequest to JSON.
                         * @function toJSON
                         * @memberof google.cloud.notebooks.v1.UpdateInstanceMetadataItemsRequest
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        UpdateInstanceMetadataItemsRequest.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for UpdateInstanceMetadataItemsRequest
                         * @function getTypeUrl
                         * @memberof google.cloud.notebooks.v1.UpdateInstanceMetadataItemsRequest
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        UpdateInstanceMetadataItemsRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.notebooks.v1.UpdateInstanceMetadataItemsRequest";
                        };
    
                        return UpdateInstanceMetadataItemsRequest;
                    })();
    
                    v1.UpdateInstanceMetadataItemsResponse = (function() {
    
                        /**
                         * Properties of an UpdateInstanceMetadataItemsResponse.
                         * @memberof google.cloud.notebooks.v1
                         * @interface IUpdateInstanceMetadataItemsResponse
                         * @property {Object.<string,string>|null} [items] UpdateInstanceMetadataItemsResponse items
                         */
    
                        /**
                         * Constructs a new UpdateInstanceMetadataItemsResponse.
                         * @memberof google.cloud.notebooks.v1
                         * @classdesc Represents an UpdateInstanceMetadataItemsResponse.
                         * @implements IUpdateInstanceMetadataItemsResponse
                         * @constructor
                         * @param {google.cloud.notebooks.v1.IUpdateInstanceMetadataItemsResponse=} [properties] Properties to set
                         */
                        function UpdateInstanceMetadataItemsResponse(properties) {
                            this.items = {};
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * UpdateInstanceMetadataItemsResponse items.
                         * @member {Object.<string,string>} items
                         * @memberof google.cloud.notebooks.v1.UpdateInstanceMetadataItemsResponse
                         * @instance
                         */
                        UpdateInstanceMetadataItemsResponse.prototype.items = $util.emptyObject;
    
                        /**
                         * Creates a new UpdateInstanceMetadataItemsResponse instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.notebooks.v1.UpdateInstanceMetadataItemsResponse
                         * @static
                         * @param {google.cloud.notebooks.v1.IUpdateInstanceMetadataItemsResponse=} [properties] Properties to set
                         * @returns {google.cloud.notebooks.v1.UpdateInstanceMetadataItemsResponse} UpdateInstanceMetadataItemsResponse instance
                         */
                        UpdateInstanceMetadataItemsResponse.create = function create(properties) {
                            return new UpdateInstanceMetadataItemsResponse(properties);
                        };
    
                        /**
                         * Encodes the specified UpdateInstanceMetadataItemsResponse message. Does not implicitly {@link google.cloud.notebooks.v1.UpdateInstanceMetadataItemsResponse.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.notebooks.v1.UpdateInstanceMetadataItemsResponse
                         * @static
                         * @param {google.cloud.notebooks.v1.IUpdateInstanceMetadataItemsResponse} message UpdateInstanceMetadataItemsResponse message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        UpdateInstanceMetadataItemsResponse.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.items != null && Object.hasOwnProperty.call(message, "items"))
                                for (var keys = Object.keys(message.items), i = 0; i < keys.length; ++i)
                                    writer.uint32(/* id 1, wireType 2 =*/10).fork().uint32(/* id 1, wireType 2 =*/10).string(keys[i]).uint32(/* id 2, wireType 2 =*/18).string(message.items[keys[i]]).ldelim();
                            return writer;
                        };
    
                        /**
                         * Encodes the specified UpdateInstanceMetadataItemsResponse message, length delimited. Does not implicitly {@link google.cloud.notebooks.v1.UpdateInstanceMetadataItemsResponse.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.notebooks.v1.UpdateInstanceMetadataItemsResponse
                         * @static
                         * @param {google.cloud.notebooks.v1.IUpdateInstanceMetadataItemsResponse} message UpdateInstanceMetadataItemsResponse message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        UpdateInstanceMetadataItemsResponse.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes an UpdateInstanceMetadataItemsResponse message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.notebooks.v1.UpdateInstanceMetadataItemsResponse
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.notebooks.v1.UpdateInstanceMetadataItemsResponse} UpdateInstanceMetadataItemsResponse
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        UpdateInstanceMetadataItemsResponse.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.notebooks.v1.UpdateInstanceMetadataItemsResponse(), key, value;
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        if (message.items === $util.emptyObject)
                                            message.items = {};
                                        var end2 = reader.uint32() + reader.pos;
                                        key = "";
                                        value = "";
                                        while (reader.pos < end2) {
                                            var tag2 = reader.uint32();
                                            switch (tag2 >>> 3) {
                                            case 1:
                                                key = reader.string();
                                                break;
                                            case 2:
                                                value = reader.string();
                                                break;
                                            default:
                                                reader.skipType(tag2 & 7);
                                                break;
                                            }
                                        }
                                        message.items[key] = value;
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes an UpdateInstanceMetadataItemsResponse message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.notebooks.v1.UpdateInstanceMetadataItemsResponse
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.notebooks.v1.UpdateInstanceMetadataItemsResponse} UpdateInstanceMetadataItemsResponse
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        UpdateInstanceMetadataItemsResponse.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies an UpdateInstanceMetadataItemsResponse message.
                         * @function verify
                         * @memberof google.cloud.notebooks.v1.UpdateInstanceMetadataItemsResponse
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        UpdateInstanceMetadataItemsResponse.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.items != null && message.hasOwnProperty("items")) {
                                if (!$util.isObject(message.items))
                                    return "items: object expected";
                                var key = Object.keys(message.items);
                                for (var i = 0; i < key.length; ++i)
                                    if (!$util.isString(message.items[key[i]]))
                                        return "items: string{k:string} expected";
                            }
                            return null;
                        };
    
                        /**
                         * Creates an UpdateInstanceMetadataItemsResponse message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.notebooks.v1.UpdateInstanceMetadataItemsResponse
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.notebooks.v1.UpdateInstanceMetadataItemsResponse} UpdateInstanceMetadataItemsResponse
                         */
                        UpdateInstanceMetadataItemsResponse.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.notebooks.v1.UpdateInstanceMetadataItemsResponse)
                                return object;
                            var message = new $root.google.cloud.notebooks.v1.UpdateInstanceMetadataItemsResponse();
                            if (object.items) {
                                if (typeof object.items !== "object")
                                    throw TypeError(".google.cloud.notebooks.v1.UpdateInstanceMetadataItemsResponse.items: object expected");
                                message.items = {};
                                for (var keys = Object.keys(object.items), i = 0; i < keys.length; ++i)
                                    message.items[keys[i]] = String(object.items[keys[i]]);
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from an UpdateInstanceMetadataItemsResponse message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.notebooks.v1.UpdateInstanceMetadataItemsResponse
                         * @static
                         * @param {google.cloud.notebooks.v1.UpdateInstanceMetadataItemsResponse} message UpdateInstanceMetadataItemsResponse
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        UpdateInstanceMetadataItemsResponse.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.objects || options.defaults)
                                object.items = {};
                            var keys2;
                            if (message.items && (keys2 = Object.keys(message.items)).length) {
                                object.items = {};
                                for (var j = 0; j < keys2.length; ++j)
                                    object.items[keys2[j]] = message.items[keys2[j]];
                            }
                            return object;
                        };
    
                        /**
                         * Converts this UpdateInstanceMetadataItemsResponse to JSON.
                         * @function toJSON
                         * @memberof google.cloud.notebooks.v1.UpdateInstanceMetadataItemsResponse
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        UpdateInstanceMetadataItemsResponse.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for UpdateInstanceMetadataItemsResponse
                         * @function getTypeUrl
                         * @memberof google.cloud.notebooks.v1.UpdateInstanceMetadataItemsResponse
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        UpdateInstanceMetadataItemsResponse.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.notebooks.v1.UpdateInstanceMetadataItemsResponse";
                        };
    
                        return UpdateInstanceMetadataItemsResponse;
                    })();
    
                    v1.UpdateShieldedInstanceConfigRequest = (function() {
    
                        /**
                         * Properties of an UpdateShieldedInstanceConfigRequest.
                         * @memberof google.cloud.notebooks.v1
                         * @interface IUpdateShieldedInstanceConfigRequest
                         * @property {string|null} [name] UpdateShieldedInstanceConfigRequest name
                         * @property {google.cloud.notebooks.v1.Instance.IShieldedInstanceConfig|null} [shieldedInstanceConfig] UpdateShieldedInstanceConfigRequest shieldedInstanceConfig
                         */
    
                        /**
                         * Constructs a new UpdateShieldedInstanceConfigRequest.
                         * @memberof google.cloud.notebooks.v1
                         * @classdesc Represents an UpdateShieldedInstanceConfigRequest.
                         * @implements IUpdateShieldedInstanceConfigRequest
                         * @constructor
                         * @param {google.cloud.notebooks.v1.IUpdateShieldedInstanceConfigRequest=} [properties] Properties to set
                         */
                        function UpdateShieldedInstanceConfigRequest(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * UpdateShieldedInstanceConfigRequest name.
                         * @member {string} name
                         * @memberof google.cloud.notebooks.v1.UpdateShieldedInstanceConfigRequest
                         * @instance
                         */
                        UpdateShieldedInstanceConfigRequest.prototype.name = "";
    
                        /**
                         * UpdateShieldedInstanceConfigRequest shieldedInstanceConfig.
                         * @member {google.cloud.notebooks.v1.Instance.IShieldedInstanceConfig|null|undefined} shieldedInstanceConfig
                         * @memberof google.cloud.notebooks.v1.UpdateShieldedInstanceConfigRequest
                         * @instance
                         */
                        UpdateShieldedInstanceConfigRequest.prototype.shieldedInstanceConfig = null;
    
                        /**
                         * Creates a new UpdateShieldedInstanceConfigRequest instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.notebooks.v1.UpdateShieldedInstanceConfigRequest
                         * @static
                         * @param {google.cloud.notebooks.v1.IUpdateShieldedInstanceConfigRequest=} [properties] Properties to set
                         * @returns {google.cloud.notebooks.v1.UpdateShieldedInstanceConfigRequest} UpdateShieldedInstanceConfigRequest instance
                         */
                        UpdateShieldedInstanceConfigRequest.create = function create(properties) {
                            return new UpdateShieldedInstanceConfigRequest(properties);
                        };
    
                        /**
                         * Encodes the specified UpdateShieldedInstanceConfigRequest message. Does not implicitly {@link google.cloud.notebooks.v1.UpdateShieldedInstanceConfigRequest.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.notebooks.v1.UpdateShieldedInstanceConfigRequest
                         * @static
                         * @param {google.cloud.notebooks.v1.IUpdateShieldedInstanceConfigRequest} message UpdateShieldedInstanceConfigRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        UpdateShieldedInstanceConfigRequest.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                            if (message.shieldedInstanceConfig != null && Object.hasOwnProperty.call(message, "shieldedInstanceConfig"))
                                $root.google.cloud.notebooks.v1.Instance.ShieldedInstanceConfig.encode(message.shieldedInstanceConfig, writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                            return writer;
                        };
    
                        /**
                         * Encodes the specified UpdateShieldedInstanceConfigRequest message, length delimited. Does not implicitly {@link google.cloud.notebooks.v1.UpdateShieldedInstanceConfigRequest.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.notebooks.v1.UpdateShieldedInstanceConfigRequest
                         * @static
                         * @param {google.cloud.notebooks.v1.IUpdateShieldedInstanceConfigRequest} message UpdateShieldedInstanceConfigRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        UpdateShieldedInstanceConfigRequest.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes an UpdateShieldedInstanceConfigRequest message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.notebooks.v1.UpdateShieldedInstanceConfigRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.notebooks.v1.UpdateShieldedInstanceConfigRequest} UpdateShieldedInstanceConfigRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        UpdateShieldedInstanceConfigRequest.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.notebooks.v1.UpdateShieldedInstanceConfigRequest();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.name = reader.string();
                                        break;
                                    }
                                case 2: {
                                        message.shieldedInstanceConfig = $root.google.cloud.notebooks.v1.Instance.ShieldedInstanceConfig.decode(reader, reader.uint32());
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes an UpdateShieldedInstanceConfigRequest message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.notebooks.v1.UpdateShieldedInstanceConfigRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.notebooks.v1.UpdateShieldedInstanceConfigRequest} UpdateShieldedInstanceConfigRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        UpdateShieldedInstanceConfigRequest.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies an UpdateShieldedInstanceConfigRequest message.
                         * @function verify
                         * @memberof google.cloud.notebooks.v1.UpdateShieldedInstanceConfigRequest
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        UpdateShieldedInstanceConfigRequest.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.name != null && message.hasOwnProperty("name"))
                                if (!$util.isString(message.name))
                                    return "name: string expected";
                            if (message.shieldedInstanceConfig != null && message.hasOwnProperty("shieldedInstanceConfig")) {
                                var error = $root.google.cloud.notebooks.v1.Instance.ShieldedInstanceConfig.verify(message.shieldedInstanceConfig);
                                if (error)
                                    return "shieldedInstanceConfig." + error;
                            }
                            return null;
                        };
    
                        /**
                         * Creates an UpdateShieldedInstanceConfigRequest message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.notebooks.v1.UpdateShieldedInstanceConfigRequest
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.notebooks.v1.UpdateShieldedInstanceConfigRequest} UpdateShieldedInstanceConfigRequest
                         */
                        UpdateShieldedInstanceConfigRequest.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.notebooks.v1.UpdateShieldedInstanceConfigRequest)
                                return object;
                            var message = new $root.google.cloud.notebooks.v1.UpdateShieldedInstanceConfigRequest();
                            if (object.name != null)
                                message.name = String(object.name);
                            if (object.shieldedInstanceConfig != null) {
                                if (typeof object.shieldedInstanceConfig !== "object")
                                    throw TypeError(".google.cloud.notebooks.v1.UpdateShieldedInstanceConfigRequest.shieldedInstanceConfig: object expected");
                                message.shieldedInstanceConfig = $root.google.cloud.notebooks.v1.Instance.ShieldedInstanceConfig.fromObject(object.shieldedInstanceConfig);
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from an UpdateShieldedInstanceConfigRequest message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.notebooks.v1.UpdateShieldedInstanceConfigRequest
                         * @static
                         * @param {google.cloud.notebooks.v1.UpdateShieldedInstanceConfigRequest} message UpdateShieldedInstanceConfigRequest
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        UpdateShieldedInstanceConfigRequest.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.name = "";
                                object.shieldedInstanceConfig = null;
                            }
                            if (message.name != null && message.hasOwnProperty("name"))
                                object.name = message.name;
                            if (message.shieldedInstanceConfig != null && message.hasOwnProperty("shieldedInstanceConfig"))
                                object.shieldedInstanceConfig = $root.google.cloud.notebooks.v1.Instance.ShieldedInstanceConfig.toObject(message.shieldedInstanceConfig, options);
                            return object;
                        };
    
                        /**
                         * Converts this UpdateShieldedInstanceConfigRequest to JSON.
                         * @function toJSON
                         * @memberof google.cloud.notebooks.v1.UpdateShieldedInstanceConfigRequest
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        UpdateShieldedInstanceConfigRequest.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for UpdateShieldedInstanceConfigRequest
                         * @function getTypeUrl
                         * @memberof google.cloud.notebooks.v1.UpdateShieldedInstanceConfigRequest
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        UpdateShieldedInstanceConfigRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.notebooks.v1.UpdateShieldedInstanceConfigRequest";
                        };
    
                        return UpdateShieldedInstanceConfigRequest;
                    })();
    
                    v1.DeleteInstanceRequest = (function() {
    
                        /**
                         * Properties of a DeleteInstanceRequest.
                         * @memberof google.cloud.notebooks.v1
                         * @interface IDeleteInstanceRequest
                         * @property {string|null} [name] DeleteInstanceRequest name
                         */
    
                        /**
                         * Constructs a new DeleteInstanceRequest.
                         * @memberof google.cloud.notebooks.v1
                         * @classdesc Represents a DeleteInstanceRequest.
                         * @implements IDeleteInstanceRequest
                         * @constructor
                         * @param {google.cloud.notebooks.v1.IDeleteInstanceRequest=} [properties] Properties to set
                         */
                        function DeleteInstanceRequest(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * DeleteInstanceRequest name.
                         * @member {string} name
                         * @memberof google.cloud.notebooks.v1.DeleteInstanceRequest
                         * @instance
                         */
                        DeleteInstanceRequest.prototype.name = "";
    
                        /**
                         * Creates a new DeleteInstanceRequest instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.notebooks.v1.DeleteInstanceRequest
                         * @static
                         * @param {google.cloud.notebooks.v1.IDeleteInstanceRequest=} [properties] Properties to set
                         * @returns {google.cloud.notebooks.v1.DeleteInstanceRequest} DeleteInstanceRequest instance
                         */
                        DeleteInstanceRequest.create = function create(properties) {
                            return new DeleteInstanceRequest(properties);
                        };
    
                        /**
                         * Encodes the specified DeleteInstanceRequest message. Does not implicitly {@link google.cloud.notebooks.v1.DeleteInstanceRequest.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.notebooks.v1.DeleteInstanceRequest
                         * @static
                         * @param {google.cloud.notebooks.v1.IDeleteInstanceRequest} message DeleteInstanceRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        DeleteInstanceRequest.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified DeleteInstanceRequest message, length delimited. Does not implicitly {@link google.cloud.notebooks.v1.DeleteInstanceRequest.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.notebooks.v1.DeleteInstanceRequest
                         * @static
                         * @param {google.cloud.notebooks.v1.IDeleteInstanceRequest} message DeleteInstanceRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        DeleteInstanceRequest.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a DeleteInstanceRequest message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.notebooks.v1.DeleteInstanceRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.notebooks.v1.DeleteInstanceRequest} DeleteInstanceRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        DeleteInstanceRequest.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.notebooks.v1.DeleteInstanceRequest();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.name = reader.string();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a DeleteInstanceRequest message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.notebooks.v1.DeleteInstanceRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.notebooks.v1.DeleteInstanceRequest} DeleteInstanceRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        DeleteInstanceRequest.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a DeleteInstanceRequest message.
                         * @function verify
                         * @memberof google.cloud.notebooks.v1.DeleteInstanceRequest
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        DeleteInstanceRequest.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.name != null && message.hasOwnProperty("name"))
                                if (!$util.isString(message.name))
                                    return "name: string expected";
                            return null;
                        };
    
                        /**
                         * Creates a DeleteInstanceRequest message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.notebooks.v1.DeleteInstanceRequest
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.notebooks.v1.DeleteInstanceRequest} DeleteInstanceRequest
                         */
                        DeleteInstanceRequest.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.notebooks.v1.DeleteInstanceRequest)
                                return object;
                            var message = new $root.google.cloud.notebooks.v1.DeleteInstanceRequest();
                            if (object.name != null)
                                message.name = String(object.name);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a DeleteInstanceRequest message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.notebooks.v1.DeleteInstanceRequest
                         * @static
                         * @param {google.cloud.notebooks.v1.DeleteInstanceRequest} message DeleteInstanceRequest
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        DeleteInstanceRequest.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults)
                                object.name = "";
                            if (message.name != null && message.hasOwnProperty("name"))
                                object.name = message.name;
                            return object;
                        };
    
                        /**
                         * Converts this DeleteInstanceRequest to JSON.
                         * @function toJSON
                         * @memberof google.cloud.notebooks.v1.DeleteInstanceRequest
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        DeleteInstanceRequest.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for DeleteInstanceRequest
                         * @function getTypeUrl
                         * @memberof google.cloud.notebooks.v1.DeleteInstanceRequest
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        DeleteInstanceRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.notebooks.v1.DeleteInstanceRequest";
                        };
    
                        return DeleteInstanceRequest;
                    })();
    
                    v1.StartInstanceRequest = (function() {
    
                        /**
                         * Properties of a StartInstanceRequest.
                         * @memberof google.cloud.notebooks.v1
                         * @interface IStartInstanceRequest
                         * @property {string|null} [name] StartInstanceRequest name
                         */
    
                        /**
                         * Constructs a new StartInstanceRequest.
                         * @memberof google.cloud.notebooks.v1
                         * @classdesc Represents a StartInstanceRequest.
                         * @implements IStartInstanceRequest
                         * @constructor
                         * @param {google.cloud.notebooks.v1.IStartInstanceRequest=} [properties] Properties to set
                         */
                        function StartInstanceRequest(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * StartInstanceRequest name.
                         * @member {string} name
                         * @memberof google.cloud.notebooks.v1.StartInstanceRequest
                         * @instance
                         */
                        StartInstanceRequest.prototype.name = "";
    
                        /**
                         * Creates a new StartInstanceRequest instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.notebooks.v1.StartInstanceRequest
                         * @static
                         * @param {google.cloud.notebooks.v1.IStartInstanceRequest=} [properties] Properties to set
                         * @returns {google.cloud.notebooks.v1.StartInstanceRequest} StartInstanceRequest instance
                         */
                        StartInstanceRequest.create = function create(properties) {
                            return new StartInstanceRequest(properties);
                        };
    
                        /**
                         * Encodes the specified StartInstanceRequest message. Does not implicitly {@link google.cloud.notebooks.v1.StartInstanceRequest.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.notebooks.v1.StartInstanceRequest
                         * @static
                         * @param {google.cloud.notebooks.v1.IStartInstanceRequest} message StartInstanceRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        StartInstanceRequest.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified StartInstanceRequest message, length delimited. Does not implicitly {@link google.cloud.notebooks.v1.StartInstanceRequest.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.notebooks.v1.StartInstanceRequest
                         * @static
                         * @param {google.cloud.notebooks.v1.IStartInstanceRequest} message StartInstanceRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        StartInstanceRequest.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a StartInstanceRequest message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.notebooks.v1.StartInstanceRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.notebooks.v1.StartInstanceRequest} StartInstanceRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        StartInstanceRequest.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.notebooks.v1.StartInstanceRequest();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.name = reader.string();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a StartInstanceRequest message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.notebooks.v1.StartInstanceRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.notebooks.v1.StartInstanceRequest} StartInstanceRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        StartInstanceRequest.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a StartInstanceRequest message.
                         * @function verify
                         * @memberof google.cloud.notebooks.v1.StartInstanceRequest
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        StartInstanceRequest.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.name != null && message.hasOwnProperty("name"))
                                if (!$util.isString(message.name))
                                    return "name: string expected";
                            return null;
                        };
    
                        /**
                         * Creates a StartInstanceRequest message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.notebooks.v1.StartInstanceRequest
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.notebooks.v1.StartInstanceRequest} StartInstanceRequest
                         */
                        StartInstanceRequest.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.notebooks.v1.StartInstanceRequest)
                                return object;
                            var message = new $root.google.cloud.notebooks.v1.StartInstanceRequest();
                            if (object.name != null)
                                message.name = String(object.name);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a StartInstanceRequest message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.notebooks.v1.StartInstanceRequest
                         * @static
                         * @param {google.cloud.notebooks.v1.StartInstanceRequest} message StartInstanceRequest
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        StartInstanceRequest.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults)
                                object.name = "";
                            if (message.name != null && message.hasOwnProperty("name"))
                                object.name = message.name;
                            return object;
                        };
    
                        /**
                         * Converts this StartInstanceRequest to JSON.
                         * @function toJSON
                         * @memberof google.cloud.notebooks.v1.StartInstanceRequest
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        StartInstanceRequest.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for StartInstanceRequest
                         * @function getTypeUrl
                         * @memberof google.cloud.notebooks.v1.StartInstanceRequest
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        StartInstanceRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.notebooks.v1.StartInstanceRequest";
                        };
    
                        return StartInstanceRequest;
                    })();
    
                    v1.StopInstanceRequest = (function() {
    
                        /**
                         * Properties of a StopInstanceRequest.
                         * @memberof google.cloud.notebooks.v1
                         * @interface IStopInstanceRequest
                         * @property {string|null} [name] StopInstanceRequest name
                         */
    
                        /**
                         * Constructs a new StopInstanceRequest.
                         * @memberof google.cloud.notebooks.v1
                         * @classdesc Represents a StopInstanceRequest.
                         * @implements IStopInstanceRequest
                         * @constructor
                         * @param {google.cloud.notebooks.v1.IStopInstanceRequest=} [properties] Properties to set
                         */
                        function StopInstanceRequest(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * StopInstanceRequest name.
                         * @member {string} name
                         * @memberof google.cloud.notebooks.v1.StopInstanceRequest
                         * @instance
                         */
                        StopInstanceRequest.prototype.name = "";
    
                        /**
                         * Creates a new StopInstanceRequest instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.notebooks.v1.StopInstanceRequest
                         * @static
                         * @param {google.cloud.notebooks.v1.IStopInstanceRequest=} [properties] Properties to set
                         * @returns {google.cloud.notebooks.v1.StopInstanceRequest} StopInstanceRequest instance
                         */
                        StopInstanceRequest.create = function create(properties) {
                            return new StopInstanceRequest(properties);
                        };
    
                        /**
                         * Encodes the specified StopInstanceRequest message. Does not implicitly {@link google.cloud.notebooks.v1.StopInstanceRequest.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.notebooks.v1.StopInstanceRequest
                         * @static
                         * @param {google.cloud.notebooks.v1.IStopInstanceRequest} message StopInstanceRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        StopInstanceRequest.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified StopInstanceRequest message, length delimited. Does not implicitly {@link google.cloud.notebooks.v1.StopInstanceRequest.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.notebooks.v1.StopInstanceRequest
                         * @static
                         * @param {google.cloud.notebooks.v1.IStopInstanceRequest} message StopInstanceRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        StopInstanceRequest.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a StopInstanceRequest message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.notebooks.v1.StopInstanceRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.notebooks.v1.StopInstanceRequest} StopInstanceRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        StopInstanceRequest.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.notebooks.v1.StopInstanceRequest();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.name = reader.string();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a StopInstanceRequest message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.notebooks.v1.StopInstanceRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.notebooks.v1.StopInstanceRequest} StopInstanceRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        StopInstanceRequest.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a StopInstanceRequest message.
                         * @function verify
                         * @memberof google.cloud.notebooks.v1.StopInstanceRequest
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        StopInstanceRequest.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.name != null && message.hasOwnProperty("name"))
                                if (!$util.isString(message.name))
                                    return "name: string expected";
                            return null;
                        };
    
                        /**
                         * Creates a StopInstanceRequest message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.notebooks.v1.StopInstanceRequest
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.notebooks.v1.StopInstanceRequest} StopInstanceRequest
                         */
                        StopInstanceRequest.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.notebooks.v1.StopInstanceRequest)
                                return object;
                            var message = new $root.google.cloud.notebooks.v1.StopInstanceRequest();
                            if (object.name != null)
                                message.name = String(object.name);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a StopInstanceRequest message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.notebooks.v1.StopInstanceRequest
                         * @static
                         * @param {google.cloud.notebooks.v1.StopInstanceRequest} message StopInstanceRequest
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        StopInstanceRequest.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults)
                                object.name = "";
                            if (message.name != null && message.hasOwnProperty("name"))
                                object.name = message.name;
                            return object;
                        };
    
                        /**
                         * Converts this StopInstanceRequest to JSON.
                         * @function toJSON
                         * @memberof google.cloud.notebooks.v1.StopInstanceRequest
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        StopInstanceRequest.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for StopInstanceRequest
                         * @function getTypeUrl
                         * @memberof google.cloud.notebooks.v1.StopInstanceRequest
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        StopInstanceRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.notebooks.v1.StopInstanceRequest";
                        };
    
                        return StopInstanceRequest;
                    })();
    
                    v1.ResetInstanceRequest = (function() {
    
                        /**
                         * Properties of a ResetInstanceRequest.
                         * @memberof google.cloud.notebooks.v1
                         * @interface IResetInstanceRequest
                         * @property {string|null} [name] ResetInstanceRequest name
                         */
    
                        /**
                         * Constructs a new ResetInstanceRequest.
                         * @memberof google.cloud.notebooks.v1
                         * @classdesc Represents a ResetInstanceRequest.
                         * @implements IResetInstanceRequest
                         * @constructor
                         * @param {google.cloud.notebooks.v1.IResetInstanceRequest=} [properties] Properties to set
                         */
                        function ResetInstanceRequest(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * ResetInstanceRequest name.
                         * @member {string} name
                         * @memberof google.cloud.notebooks.v1.ResetInstanceRequest
                         * @instance
                         */
                        ResetInstanceRequest.prototype.name = "";
    
                        /**
                         * Creates a new ResetInstanceRequest instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.notebooks.v1.ResetInstanceRequest
                         * @static
                         * @param {google.cloud.notebooks.v1.IResetInstanceRequest=} [properties] Properties to set
                         * @returns {google.cloud.notebooks.v1.ResetInstanceRequest} ResetInstanceRequest instance
                         */
                        ResetInstanceRequest.create = function create(properties) {
                            return new ResetInstanceRequest(properties);
                        };
    
                        /**
                         * Encodes the specified ResetInstanceRequest message. Does not implicitly {@link google.cloud.notebooks.v1.ResetInstanceRequest.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.notebooks.v1.ResetInstanceRequest
                         * @static
                         * @param {google.cloud.notebooks.v1.IResetInstanceRequest} message ResetInstanceRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        ResetInstanceRequest.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified ResetInstanceRequest message, length delimited. Does not implicitly {@link google.cloud.notebooks.v1.ResetInstanceRequest.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.notebooks.v1.ResetInstanceRequest
                         * @static
                         * @param {google.cloud.notebooks.v1.IResetInstanceRequest} message ResetInstanceRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        ResetInstanceRequest.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a ResetInstanceRequest message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.notebooks.v1.ResetInstanceRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.notebooks.v1.ResetInstanceRequest} ResetInstanceRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        ResetInstanceRequest.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.notebooks.v1.ResetInstanceRequest();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.name = reader.string();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a ResetInstanceRequest message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.notebooks.v1.ResetInstanceRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.notebooks.v1.ResetInstanceRequest} ResetInstanceRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        ResetInstanceRequest.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a ResetInstanceRequest message.
                         * @function verify
                         * @memberof google.cloud.notebooks.v1.ResetInstanceRequest
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        ResetInstanceRequest.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.name != null && message.hasOwnProperty("name"))
                                if (!$util.isString(message.name))
                                    return "name: string expected";
                            return null;
                        };
    
                        /**
                         * Creates a ResetInstanceRequest message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.notebooks.v1.ResetInstanceRequest
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.notebooks.v1.ResetInstanceRequest} ResetInstanceRequest
                         */
                        ResetInstanceRequest.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.notebooks.v1.ResetInstanceRequest)
                                return object;
                            var message = new $root.google.cloud.notebooks.v1.ResetInstanceRequest();
                            if (object.name != null)
                                message.name = String(object.name);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a ResetInstanceRequest message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.notebooks.v1.ResetInstanceRequest
                         * @static
                         * @param {google.cloud.notebooks.v1.ResetInstanceRequest} message ResetInstanceRequest
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        ResetInstanceRequest.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults)
                                object.name = "";
                            if (message.name != null && message.hasOwnProperty("name"))
                                object.name = message.name;
                            return object;
                        };
    
                        /**
                         * Converts this ResetInstanceRequest to JSON.
                         * @function toJSON
                         * @memberof google.cloud.notebooks.v1.ResetInstanceRequest
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        ResetInstanceRequest.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for ResetInstanceRequest
                         * @function getTypeUrl
                         * @memberof google.cloud.notebooks.v1.ResetInstanceRequest
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        ResetInstanceRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.notebooks.v1.ResetInstanceRequest";
                        };
    
                        return ResetInstanceRequest;
                    })();
    
                    v1.ReportInstanceInfoRequest = (function() {
    
                        /**
                         * Properties of a ReportInstanceInfoRequest.
                         * @memberof google.cloud.notebooks.v1
                         * @interface IReportInstanceInfoRequest
                         * @property {string|null} [name] ReportInstanceInfoRequest name
                         * @property {string|null} [vmId] ReportInstanceInfoRequest vmId
                         * @property {Object.<string,string>|null} [metadata] ReportInstanceInfoRequest metadata
                         */
    
                        /**
                         * Constructs a new ReportInstanceInfoRequest.
                         * @memberof google.cloud.notebooks.v1
                         * @classdesc Represents a ReportInstanceInfoRequest.
                         * @implements IReportInstanceInfoRequest
                         * @constructor
                         * @param {google.cloud.notebooks.v1.IReportInstanceInfoRequest=} [properties] Properties to set
                         */
                        function ReportInstanceInfoRequest(properties) {
                            this.metadata = {};
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * ReportInstanceInfoRequest name.
                         * @member {string} name
                         * @memberof google.cloud.notebooks.v1.ReportInstanceInfoRequest
                         * @instance
                         */
                        ReportInstanceInfoRequest.prototype.name = "";
    
                        /**
                         * ReportInstanceInfoRequest vmId.
                         * @member {string} vmId
                         * @memberof google.cloud.notebooks.v1.ReportInstanceInfoRequest
                         * @instance
                         */
                        ReportInstanceInfoRequest.prototype.vmId = "";
    
                        /**
                         * ReportInstanceInfoRequest metadata.
                         * @member {Object.<string,string>} metadata
                         * @memberof google.cloud.notebooks.v1.ReportInstanceInfoRequest
                         * @instance
                         */
                        ReportInstanceInfoRequest.prototype.metadata = $util.emptyObject;
    
                        /**
                         * Creates a new ReportInstanceInfoRequest instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.notebooks.v1.ReportInstanceInfoRequest
                         * @static
                         * @param {google.cloud.notebooks.v1.IReportInstanceInfoRequest=} [properties] Properties to set
                         * @returns {google.cloud.notebooks.v1.ReportInstanceInfoRequest} ReportInstanceInfoRequest instance
                         */
                        ReportInstanceInfoRequest.create = function create(properties) {
                            return new ReportInstanceInfoRequest(properties);
                        };
    
                        /**
                         * Encodes the specified ReportInstanceInfoRequest message. Does not implicitly {@link google.cloud.notebooks.v1.ReportInstanceInfoRequest.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.notebooks.v1.ReportInstanceInfoRequest
                         * @static
                         * @param {google.cloud.notebooks.v1.IReportInstanceInfoRequest} message ReportInstanceInfoRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        ReportInstanceInfoRequest.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                            if (message.vmId != null && Object.hasOwnProperty.call(message, "vmId"))
                                writer.uint32(/* id 2, wireType 2 =*/18).string(message.vmId);
                            if (message.metadata != null && Object.hasOwnProperty.call(message, "metadata"))
                                for (var keys = Object.keys(message.metadata), i = 0; i < keys.length; ++i)
                                    writer.uint32(/* id 3, wireType 2 =*/26).fork().uint32(/* id 1, wireType 2 =*/10).string(keys[i]).uint32(/* id 2, wireType 2 =*/18).string(message.metadata[keys[i]]).ldelim();
                            return writer;
                        };
    
                        /**
                         * Encodes the specified ReportInstanceInfoRequest message, length delimited. Does not implicitly {@link google.cloud.notebooks.v1.ReportInstanceInfoRequest.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.notebooks.v1.ReportInstanceInfoRequest
                         * @static
                         * @param {google.cloud.notebooks.v1.IReportInstanceInfoRequest} message ReportInstanceInfoRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        ReportInstanceInfoRequest.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a ReportInstanceInfoRequest message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.notebooks.v1.ReportInstanceInfoRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.notebooks.v1.ReportInstanceInfoRequest} ReportInstanceInfoRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        ReportInstanceInfoRequest.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.notebooks.v1.ReportInstanceInfoRequest(), key, value;
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.name = reader.string();
                                        break;
                                    }
                                case 2: {
                                        message.vmId = reader.string();
                                        break;
                                    }
                                case 3: {
                                        if (message.metadata === $util.emptyObject)
                                            message.metadata = {};
                                        var end2 = reader.uint32() + reader.pos;
                                        key = "";
                                        value = "";
                                        while (reader.pos < end2) {
                                            var tag2 = reader.uint32();
                                            switch (tag2 >>> 3) {
                                            case 1:
                                                key = reader.string();
                                                break;
                                            case 2:
                                                value = reader.string();
                                                break;
                                            default:
                                                reader.skipType(tag2 & 7);
                                                break;
                                            }
                                        }
                                        message.metadata[key] = value;
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a ReportInstanceInfoRequest message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.notebooks.v1.ReportInstanceInfoRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.notebooks.v1.ReportInstanceInfoRequest} ReportInstanceInfoRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        ReportInstanceInfoRequest.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a ReportInstanceInfoRequest message.
                         * @function verify
                         * @memberof google.cloud.notebooks.v1.ReportInstanceInfoRequest
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        ReportInstanceInfoRequest.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.name != null && message.hasOwnProperty("name"))
                                if (!$util.isString(message.name))
                                    return "name: string expected";
                            if (message.vmId != null && message.hasOwnProperty("vmId"))
                                if (!$util.isString(message.vmId))
                                    return "vmId: string expected";
                            if (message.metadata != null && message.hasOwnProperty("metadata")) {
                                if (!$util.isObject(message.metadata))
                                    return "metadata: object expected";
                                var key = Object.keys(message.metadata);
                                for (var i = 0; i < key.length; ++i)
                                    if (!$util.isString(message.metadata[key[i]]))
                                        return "metadata: string{k:string} expected";
                            }
                            return null;
                        };
    
                        /**
                         * Creates a ReportInstanceInfoRequest message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.notebooks.v1.ReportInstanceInfoRequest
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.notebooks.v1.ReportInstanceInfoRequest} ReportInstanceInfoRequest
                         */
                        ReportInstanceInfoRequest.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.notebooks.v1.ReportInstanceInfoRequest)
                                return object;
                            var message = new $root.google.cloud.notebooks.v1.ReportInstanceInfoRequest();
                            if (object.name != null)
                                message.name = String(object.name);
                            if (object.vmId != null)
                                message.vmId = String(object.vmId);
                            if (object.metadata) {
                                if (typeof object.metadata !== "object")
                                    throw TypeError(".google.cloud.notebooks.v1.ReportInstanceInfoRequest.metadata: object expected");
                                message.metadata = {};
                                for (var keys = Object.keys(object.metadata), i = 0; i < keys.length; ++i)
                                    message.metadata[keys[i]] = String(object.metadata[keys[i]]);
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a ReportInstanceInfoRequest message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.notebooks.v1.ReportInstanceInfoRequest
                         * @static
                         * @param {google.cloud.notebooks.v1.ReportInstanceInfoRequest} message ReportInstanceInfoRequest
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        ReportInstanceInfoRequest.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.objects || options.defaults)
                                object.metadata = {};
                            if (options.defaults) {
                                object.name = "";
                                object.vmId = "";
                            }
                            if (message.name != null && message.hasOwnProperty("name"))
                                object.name = message.name;
                            if (message.vmId != null && message.hasOwnProperty("vmId"))
                                object.vmId = message.vmId;
                            var keys2;
                            if (message.metadata && (keys2 = Object.keys(message.metadata)).length) {
                                object.metadata = {};
                                for (var j = 0; j < keys2.length; ++j)
                                    object.metadata[keys2[j]] = message.metadata[keys2[j]];
                            }
                            return object;
                        };
    
                        /**
                         * Converts this ReportInstanceInfoRequest to JSON.
                         * @function toJSON
                         * @memberof google.cloud.notebooks.v1.ReportInstanceInfoRequest
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        ReportInstanceInfoRequest.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for ReportInstanceInfoRequest
                         * @function getTypeUrl
                         * @memberof google.cloud.notebooks.v1.ReportInstanceInfoRequest
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        ReportInstanceInfoRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.notebooks.v1.ReportInstanceInfoRequest";
                        };
    
                        return ReportInstanceInfoRequest;
                    })();
    
                    v1.IsInstanceUpgradeableRequest = (function() {
    
                        /**
                         * Properties of an IsInstanceUpgradeableRequest.
                         * @memberof google.cloud.notebooks.v1
                         * @interface IIsInstanceUpgradeableRequest
                         * @property {string|null} [notebookInstance] IsInstanceUpgradeableRequest notebookInstance
                         * @property {google.cloud.notebooks.v1.UpgradeType|null} [type] IsInstanceUpgradeableRequest type
                         */
    
                        /**
                         * Constructs a new IsInstanceUpgradeableRequest.
                         * @memberof google.cloud.notebooks.v1
                         * @classdesc Represents an IsInstanceUpgradeableRequest.
                         * @implements IIsInstanceUpgradeableRequest
                         * @constructor
                         * @param {google.cloud.notebooks.v1.IIsInstanceUpgradeableRequest=} [properties] Properties to set
                         */
                        function IsInstanceUpgradeableRequest(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * IsInstanceUpgradeableRequest notebookInstance.
                         * @member {string} notebookInstance
                         * @memberof google.cloud.notebooks.v1.IsInstanceUpgradeableRequest
                         * @instance
                         */
                        IsInstanceUpgradeableRequest.prototype.notebookInstance = "";
    
                        /**
                         * IsInstanceUpgradeableRequest type.
                         * @member {google.cloud.notebooks.v1.UpgradeType} type
                         * @memberof google.cloud.notebooks.v1.IsInstanceUpgradeableRequest
                         * @instance
                         */
                        IsInstanceUpgradeableRequest.prototype.type = 0;
    
                        /**
                         * Creates a new IsInstanceUpgradeableRequest instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.notebooks.v1.IsInstanceUpgradeableRequest
                         * @static
                         * @param {google.cloud.notebooks.v1.IIsInstanceUpgradeableRequest=} [properties] Properties to set
                         * @returns {google.cloud.notebooks.v1.IsInstanceUpgradeableRequest} IsInstanceUpgradeableRequest instance
                         */
                        IsInstanceUpgradeableRequest.create = function create(properties) {
                            return new IsInstanceUpgradeableRequest(properties);
                        };
    
                        /**
                         * Encodes the specified IsInstanceUpgradeableRequest message. Does not implicitly {@link google.cloud.notebooks.v1.IsInstanceUpgradeableRequest.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.notebooks.v1.IsInstanceUpgradeableRequest
                         * @static
                         * @param {google.cloud.notebooks.v1.IIsInstanceUpgradeableRequest} message IsInstanceUpgradeableRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        IsInstanceUpgradeableRequest.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.notebookInstance != null && Object.hasOwnProperty.call(message, "notebookInstance"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.notebookInstance);
                            if (message.type != null && Object.hasOwnProperty.call(message, "type"))
                                writer.uint32(/* id 2, wireType 0 =*/16).int32(message.type);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified IsInstanceUpgradeableRequest message, length delimited. Does not implicitly {@link google.cloud.notebooks.v1.IsInstanceUpgradeableRequest.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.notebooks.v1.IsInstanceUpgradeableRequest
                         * @static
                         * @param {google.cloud.notebooks.v1.IIsInstanceUpgradeableRequest} message IsInstanceUpgradeableRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        IsInstanceUpgradeableRequest.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes an IsInstanceUpgradeableRequest message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.notebooks.v1.IsInstanceUpgradeableRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.notebooks.v1.IsInstanceUpgradeableRequest} IsInstanceUpgradeableRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        IsInstanceUpgradeableRequest.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.notebooks.v1.IsInstanceUpgradeableRequest();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.notebookInstance = reader.string();
                                        break;
                                    }
                                case 2: {
                                        message.type = reader.int32();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes an IsInstanceUpgradeableRequest message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.notebooks.v1.IsInstanceUpgradeableRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.notebooks.v1.IsInstanceUpgradeableRequest} IsInstanceUpgradeableRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        IsInstanceUpgradeableRequest.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies an IsInstanceUpgradeableRequest message.
                         * @function verify
                         * @memberof google.cloud.notebooks.v1.IsInstanceUpgradeableRequest
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        IsInstanceUpgradeableRequest.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.notebookInstance != null && message.hasOwnProperty("notebookInstance"))
                                if (!$util.isString(message.notebookInstance))
                                    return "notebookInstance: string expected";
                            if (message.type != null && message.hasOwnProperty("type"))
                                switch (message.type) {
                                default:
                                    return "type: enum value expected";
                                case 0:
                                case 1:
                                case 2:
                                case 3:
                                case 4:
                                    break;
                                }
                            return null;
                        };
    
                        /**
                         * Creates an IsInstanceUpgradeableRequest message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.notebooks.v1.IsInstanceUpgradeableRequest
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.notebooks.v1.IsInstanceUpgradeableRequest} IsInstanceUpgradeableRequest
                         */
                        IsInstanceUpgradeableRequest.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.notebooks.v1.IsInstanceUpgradeableRequest)
                                return object;
                            var message = new $root.google.cloud.notebooks.v1.IsInstanceUpgradeableRequest();
                            if (object.notebookInstance != null)
                                message.notebookInstance = String(object.notebookInstance);
                            switch (object.type) {
                            default:
                                if (typeof object.type === "number") {
                                    message.type = object.type;
                                    break;
                                }
                                break;
                            case "UPGRADE_TYPE_UNSPECIFIED":
                            case 0:
                                message.type = 0;
                                break;
                            case "UPGRADE_FRAMEWORK":
                            case 1:
                                message.type = 1;
                                break;
                            case "UPGRADE_OS":
                            case 2:
                                message.type = 2;
                                break;
                            case "UPGRADE_CUDA":
                            case 3:
                                message.type = 3;
                                break;
                            case "UPGRADE_ALL":
                            case 4:
                                message.type = 4;
                                break;
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from an IsInstanceUpgradeableRequest message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.notebooks.v1.IsInstanceUpgradeableRequest
                         * @static
                         * @param {google.cloud.notebooks.v1.IsInstanceUpgradeableRequest} message IsInstanceUpgradeableRequest
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        IsInstanceUpgradeableRequest.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.notebookInstance = "";
                                object.type = options.enums === String ? "UPGRADE_TYPE_UNSPECIFIED" : 0;
                            }
                            if (message.notebookInstance != null && message.hasOwnProperty("notebookInstance"))
                                object.notebookInstance = message.notebookInstance;
                            if (message.type != null && message.hasOwnProperty("type"))
                                object.type = options.enums === String ? $root.google.cloud.notebooks.v1.UpgradeType[message.type] === undefined ? message.type : $root.google.cloud.notebooks.v1.UpgradeType[message.type] : message.type;
                            return object;
                        };
    
                        /**
                         * Converts this IsInstanceUpgradeableRequest to JSON.
                         * @function toJSON
                         * @memberof google.cloud.notebooks.v1.IsInstanceUpgradeableRequest
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        IsInstanceUpgradeableRequest.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for IsInstanceUpgradeableRequest
                         * @function getTypeUrl
                         * @memberof google.cloud.notebooks.v1.IsInstanceUpgradeableRequest
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        IsInstanceUpgradeableRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.notebooks.v1.IsInstanceUpgradeableRequest";
                        };
    
                        return IsInstanceUpgradeableRequest;
                    })();
    
                    v1.IsInstanceUpgradeableResponse = (function() {
    
                        /**
                         * Properties of an IsInstanceUpgradeableResponse.
                         * @memberof google.cloud.notebooks.v1
                         * @interface IIsInstanceUpgradeableResponse
                         * @property {boolean|null} [upgradeable] IsInstanceUpgradeableResponse upgradeable
                         * @property {string|null} [upgradeVersion] IsInstanceUpgradeableResponse upgradeVersion
                         * @property {string|null} [upgradeInfo] IsInstanceUpgradeableResponse upgradeInfo
                         * @property {string|null} [upgradeImage] IsInstanceUpgradeableResponse upgradeImage
                         */
    
                        /**
                         * Constructs a new IsInstanceUpgradeableResponse.
                         * @memberof google.cloud.notebooks.v1
                         * @classdesc Represents an IsInstanceUpgradeableResponse.
                         * @implements IIsInstanceUpgradeableResponse
                         * @constructor
                         * @param {google.cloud.notebooks.v1.IIsInstanceUpgradeableResponse=} [properties] Properties to set
                         */
                        function IsInstanceUpgradeableResponse(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * IsInstanceUpgradeableResponse upgradeable.
                         * @member {boolean} upgradeable
                         * @memberof google.cloud.notebooks.v1.IsInstanceUpgradeableResponse
                         * @instance
                         */
                        IsInstanceUpgradeableResponse.prototype.upgradeable = false;
    
                        /**
                         * IsInstanceUpgradeableResponse upgradeVersion.
                         * @member {string} upgradeVersion
                         * @memberof google.cloud.notebooks.v1.IsInstanceUpgradeableResponse
                         * @instance
                         */
                        IsInstanceUpgradeableResponse.prototype.upgradeVersion = "";
    
                        /**
                         * IsInstanceUpgradeableResponse upgradeInfo.
                         * @member {string} upgradeInfo
                         * @memberof google.cloud.notebooks.v1.IsInstanceUpgradeableResponse
                         * @instance
                         */
                        IsInstanceUpgradeableResponse.prototype.upgradeInfo = "";
    
                        /**
                         * IsInstanceUpgradeableResponse upgradeImage.
                         * @member {string} upgradeImage
                         * @memberof google.cloud.notebooks.v1.IsInstanceUpgradeableResponse
                         * @instance
                         */
                        IsInstanceUpgradeableResponse.prototype.upgradeImage = "";
    
                        /**
                         * Creates a new IsInstanceUpgradeableResponse instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.notebooks.v1.IsInstanceUpgradeableResponse
                         * @static
                         * @param {google.cloud.notebooks.v1.IIsInstanceUpgradeableResponse=} [properties] Properties to set
                         * @returns {google.cloud.notebooks.v1.IsInstanceUpgradeableResponse} IsInstanceUpgradeableResponse instance
                         */
                        IsInstanceUpgradeableResponse.create = function create(properties) {
                            return new IsInstanceUpgradeableResponse(properties);
                        };
    
                        /**
                         * Encodes the specified IsInstanceUpgradeableResponse message. Does not implicitly {@link google.cloud.notebooks.v1.IsInstanceUpgradeableResponse.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.notebooks.v1.IsInstanceUpgradeableResponse
                         * @static
                         * @param {google.cloud.notebooks.v1.IIsInstanceUpgradeableResponse} message IsInstanceUpgradeableResponse message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        IsInstanceUpgradeableResponse.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.upgradeable != null && Object.hasOwnProperty.call(message, "upgradeable"))
                                writer.uint32(/* id 1, wireType 0 =*/8).bool(message.upgradeable);
                            if (message.upgradeVersion != null && Object.hasOwnProperty.call(message, "upgradeVersion"))
                                writer.uint32(/* id 2, wireType 2 =*/18).string(message.upgradeVersion);
                            if (message.upgradeInfo != null && Object.hasOwnProperty.call(message, "upgradeInfo"))
                                writer.uint32(/* id 3, wireType 2 =*/26).string(message.upgradeInfo);
                            if (message.upgradeImage != null && Object.hasOwnProperty.call(message, "upgradeImage"))
                                writer.uint32(/* id 4, wireType 2 =*/34).string(message.upgradeImage);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified IsInstanceUpgradeableResponse message, length delimited. Does not implicitly {@link google.cloud.notebooks.v1.IsInstanceUpgradeableResponse.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.notebooks.v1.IsInstanceUpgradeableResponse
                         * @static
                         * @param {google.cloud.notebooks.v1.IIsInstanceUpgradeableResponse} message IsInstanceUpgradeableResponse message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        IsInstanceUpgradeableResponse.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes an IsInstanceUpgradeableResponse message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.notebooks.v1.IsInstanceUpgradeableResponse
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.notebooks.v1.IsInstanceUpgradeableResponse} IsInstanceUpgradeableResponse
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        IsInstanceUpgradeableResponse.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.notebooks.v1.IsInstanceUpgradeableResponse();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.upgradeable = reader.bool();
                                        break;
                                    }
                                case 2: {
                                        message.upgradeVersion = reader.string();
                                        break;
                                    }
                                case 3: {
                                        message.upgradeInfo = reader.string();
                                        break;
                                    }
                                case 4: {
                                        message.upgradeImage = reader.string();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes an IsInstanceUpgradeableResponse message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.notebooks.v1.IsInstanceUpgradeableResponse
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.notebooks.v1.IsInstanceUpgradeableResponse} IsInstanceUpgradeableResponse
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        IsInstanceUpgradeableResponse.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies an IsInstanceUpgradeableResponse message.
                         * @function verify
                         * @memberof google.cloud.notebooks.v1.IsInstanceUpgradeableResponse
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        IsInstanceUpgradeableResponse.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.upgradeable != null && message.hasOwnProperty("upgradeable"))
                                if (typeof message.upgradeable !== "boolean")
                                    return "upgradeable: boolean expected";
                            if (message.upgradeVersion != null && message.hasOwnProperty("upgradeVersion"))
                                if (!$util.isString(message.upgradeVersion))
                                    return "upgradeVersion: string expected";
                            if (message.upgradeInfo != null && message.hasOwnProperty("upgradeInfo"))
                                if (!$util.isString(message.upgradeInfo))
                                    return "upgradeInfo: string expected";
                            if (message.upgradeImage != null && message.hasOwnProperty("upgradeImage"))
                                if (!$util.isString(message.upgradeImage))
                                    return "upgradeImage: string expected";
                            return null;
                        };
    
                        /**
                         * Creates an IsInstanceUpgradeableResponse message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.notebooks.v1.IsInstanceUpgradeableResponse
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.notebooks.v1.IsInstanceUpgradeableResponse} IsInstanceUpgradeableResponse
                         */
                        IsInstanceUpgradeableResponse.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.notebooks.v1.IsInstanceUpgradeableResponse)
                                return object;
                            var message = new $root.google.cloud.notebooks.v1.IsInstanceUpgradeableResponse();
                            if (object.upgradeable != null)
                                message.upgradeable = Boolean(object.upgradeable);
                            if (object.upgradeVersion != null)
                                message.upgradeVersion = String(object.upgradeVersion);
                            if (object.upgradeInfo != null)
                                message.upgradeInfo = String(object.upgradeInfo);
                            if (object.upgradeImage != null)
                                message.upgradeImage = String(object.upgradeImage);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from an IsInstanceUpgradeableResponse message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.notebooks.v1.IsInstanceUpgradeableResponse
                         * @static
                         * @param {google.cloud.notebooks.v1.IsInstanceUpgradeableResponse} message IsInstanceUpgradeableResponse
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        IsInstanceUpgradeableResponse.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.upgradeable = false;
                                object.upgradeVersion = "";
                                object.upgradeInfo = "";
                                object.upgradeImage = "";
                            }
                            if (message.upgradeable != null && message.hasOwnProperty("upgradeable"))
                                object.upgradeable = message.upgradeable;
                            if (message.upgradeVersion != null && message.hasOwnProperty("upgradeVersion"))
                                object.upgradeVersion = message.upgradeVersion;
                            if (message.upgradeInfo != null && message.hasOwnProperty("upgradeInfo"))
                                object.upgradeInfo = message.upgradeInfo;
                            if (message.upgradeImage != null && message.hasOwnProperty("upgradeImage"))
                                object.upgradeImage = message.upgradeImage;
                            return object;
                        };
    
                        /**
                         * Converts this IsInstanceUpgradeableResponse to JSON.
                         * @function toJSON
                         * @memberof google.cloud.notebooks.v1.IsInstanceUpgradeableResponse
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        IsInstanceUpgradeableResponse.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for IsInstanceUpgradeableResponse
                         * @function getTypeUrl
                         * @memberof google.cloud.notebooks.v1.IsInstanceUpgradeableResponse
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        IsInstanceUpgradeableResponse.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.notebooks.v1.IsInstanceUpgradeableResponse";
                        };
    
                        return IsInstanceUpgradeableResponse;
                    })();
    
                    v1.GetInstanceHealthRequest = (function() {
    
                        /**
                         * Properties of a GetInstanceHealthRequest.
                         * @memberof google.cloud.notebooks.v1
                         * @interface IGetInstanceHealthRequest
                         * @property {string|null} [name] GetInstanceHealthRequest name
                         */
    
                        /**
                         * Constructs a new GetInstanceHealthRequest.
                         * @memberof google.cloud.notebooks.v1
                         * @classdesc Represents a GetInstanceHealthRequest.
                         * @implements IGetInstanceHealthRequest
                         * @constructor
                         * @param {google.cloud.notebooks.v1.IGetInstanceHealthRequest=} [properties] Properties to set
                         */
                        function GetInstanceHealthRequest(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * GetInstanceHealthRequest name.
                         * @member {string} name
                         * @memberof google.cloud.notebooks.v1.GetInstanceHealthRequest
                         * @instance
                         */
                        GetInstanceHealthRequest.prototype.name = "";
    
                        /**
                         * Creates a new GetInstanceHealthRequest instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.notebooks.v1.GetInstanceHealthRequest
                         * @static
                         * @param {google.cloud.notebooks.v1.IGetInstanceHealthRequest=} [properties] Properties to set
                         * @returns {google.cloud.notebooks.v1.GetInstanceHealthRequest} GetInstanceHealthRequest instance
                         */
                        GetInstanceHealthRequest.create = function create(properties) {
                            return new GetInstanceHealthRequest(properties);
                        };
    
                        /**
                         * Encodes the specified GetInstanceHealthRequest message. Does not implicitly {@link google.cloud.notebooks.v1.GetInstanceHealthRequest.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.notebooks.v1.GetInstanceHealthRequest
                         * @static
                         * @param {google.cloud.notebooks.v1.IGetInstanceHealthRequest} message GetInstanceHealthRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        GetInstanceHealthRequest.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified GetInstanceHealthRequest message, length delimited. Does not implicitly {@link google.cloud.notebooks.v1.GetInstanceHealthRequest.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.notebooks.v1.GetInstanceHealthRequest
                         * @static
                         * @param {google.cloud.notebooks.v1.IGetInstanceHealthRequest} message GetInstanceHealthRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        GetInstanceHealthRequest.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a GetInstanceHealthRequest message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.notebooks.v1.GetInstanceHealthRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.notebooks.v1.GetInstanceHealthRequest} GetInstanceHealthRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        GetInstanceHealthRequest.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.notebooks.v1.GetInstanceHealthRequest();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.name = reader.string();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a GetInstanceHealthRequest message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.notebooks.v1.GetInstanceHealthRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.notebooks.v1.GetInstanceHealthRequest} GetInstanceHealthRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        GetInstanceHealthRequest.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a GetInstanceHealthRequest message.
                         * @function verify
                         * @memberof google.cloud.notebooks.v1.GetInstanceHealthRequest
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        GetInstanceHealthRequest.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.name != null && message.hasOwnProperty("name"))
                                if (!$util.isString(message.name))
                                    return "name: string expected";
                            return null;
                        };
    
                        /**
                         * Creates a GetInstanceHealthRequest message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.notebooks.v1.GetInstanceHealthRequest
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.notebooks.v1.GetInstanceHealthRequest} GetInstanceHealthRequest
                         */
                        GetInstanceHealthRequest.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.notebooks.v1.GetInstanceHealthRequest)
                                return object;
                            var message = new $root.google.cloud.notebooks.v1.GetInstanceHealthRequest();
                            if (object.name != null)
                                message.name = String(object.name);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a GetInstanceHealthRequest message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.notebooks.v1.GetInstanceHealthRequest
                         * @static
                         * @param {google.cloud.notebooks.v1.GetInstanceHealthRequest} message GetInstanceHealthRequest
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        GetInstanceHealthRequest.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults)
                                object.name = "";
                            if (message.name != null && message.hasOwnProperty("name"))
                                object.name = message.name;
                            return object;
                        };
    
                        /**
                         * Converts this GetInstanceHealthRequest to JSON.
                         * @function toJSON
                         * @memberof google.cloud.notebooks.v1.GetInstanceHealthRequest
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        GetInstanceHealthRequest.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for GetInstanceHealthRequest
                         * @function getTypeUrl
                         * @memberof google.cloud.notebooks.v1.GetInstanceHealthRequest
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        GetInstanceHealthRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.notebooks.v1.GetInstanceHealthRequest";
                        };
    
                        return GetInstanceHealthRequest;
                    })();
    
                    v1.GetInstanceHealthResponse = (function() {
    
                        /**
                         * Properties of a GetInstanceHealthResponse.
                         * @memberof google.cloud.notebooks.v1
                         * @interface IGetInstanceHealthResponse
                         * @property {google.cloud.notebooks.v1.GetInstanceHealthResponse.HealthState|null} [healthState] GetInstanceHealthResponse healthState
                         * @property {Object.<string,string>|null} [healthInfo] GetInstanceHealthResponse healthInfo
                         */
    
                        /**
                         * Constructs a new GetInstanceHealthResponse.
                         * @memberof google.cloud.notebooks.v1
                         * @classdesc Represents a GetInstanceHealthResponse.
                         * @implements IGetInstanceHealthResponse
                         * @constructor
                         * @param {google.cloud.notebooks.v1.IGetInstanceHealthResponse=} [properties] Properties to set
                         */
                        function GetInstanceHealthResponse(properties) {
                            this.healthInfo = {};
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * GetInstanceHealthResponse healthState.
                         * @member {google.cloud.notebooks.v1.GetInstanceHealthResponse.HealthState} healthState
                         * @memberof google.cloud.notebooks.v1.GetInstanceHealthResponse
                         * @instance
                         */
                        GetInstanceHealthResponse.prototype.healthState = 0;
    
                        /**
                         * GetInstanceHealthResponse healthInfo.
                         * @member {Object.<string,string>} healthInfo
                         * @memberof google.cloud.notebooks.v1.GetInstanceHealthResponse
                         * @instance
                         */
                        GetInstanceHealthResponse.prototype.healthInfo = $util.emptyObject;
    
                        /**
                         * Creates a new GetInstanceHealthResponse instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.notebooks.v1.GetInstanceHealthResponse
                         * @static
                         * @param {google.cloud.notebooks.v1.IGetInstanceHealthResponse=} [properties] Properties to set
                         * @returns {google.cloud.notebooks.v1.GetInstanceHealthResponse} GetInstanceHealthResponse instance
                         */
                        GetInstanceHealthResponse.create = function create(properties) {
                            return new GetInstanceHealthResponse(properties);
                        };
    
                        /**
                         * Encodes the specified GetInstanceHealthResponse message. Does not implicitly {@link google.cloud.notebooks.v1.GetInstanceHealthResponse.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.notebooks.v1.GetInstanceHealthResponse
                         * @static
                         * @param {google.cloud.notebooks.v1.IGetInstanceHealthResponse} message GetInstanceHealthResponse message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        GetInstanceHealthResponse.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.healthState != null && Object.hasOwnProperty.call(message, "healthState"))
                                writer.uint32(/* id 1, wireType 0 =*/8).int32(message.healthState);
                            if (message.healthInfo != null && Object.hasOwnProperty.call(message, "healthInfo"))
                                for (var keys = Object.keys(message.healthInfo), i = 0; i < keys.length; ++i)
                                    writer.uint32(/* id 2, wireType 2 =*/18).fork().uint32(/* id 1, wireType 2 =*/10).string(keys[i]).uint32(/* id 2, wireType 2 =*/18).string(message.healthInfo[keys[i]]).ldelim();
                            return writer;
                        };
    
                        /**
                         * Encodes the specified GetInstanceHealthResponse message, length delimited. Does not implicitly {@link google.cloud.notebooks.v1.GetInstanceHealthResponse.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.notebooks.v1.GetInstanceHealthResponse
                         * @static
                         * @param {google.cloud.notebooks.v1.IGetInstanceHealthResponse} message GetInstanceHealthResponse message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        GetInstanceHealthResponse.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a GetInstanceHealthResponse message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.notebooks.v1.GetInstanceHealthResponse
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.notebooks.v1.GetInstanceHealthResponse} GetInstanceHealthResponse
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        GetInstanceHealthResponse.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.notebooks.v1.GetInstanceHealthResponse(), key, value;
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.healthState = reader.int32();
                                        break;
                                    }
                                case 2: {
                                        if (message.healthInfo === $util.emptyObject)
                                            message.healthInfo = {};
                                        var end2 = reader.uint32() + reader.pos;
                                        key = "";
                                        value = "";
                                        while (reader.pos < end2) {
                                            var tag2 = reader.uint32();
                                            switch (tag2 >>> 3) {
                                            case 1:
                                                key = reader.string();
                                                break;
                                            case 2:
                                                value = reader.string();
                                                break;
                                            default:
                                                reader.skipType(tag2 & 7);
                                                break;
                                            }
                                        }
                                        message.healthInfo[key] = value;
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a GetInstanceHealthResponse message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.notebooks.v1.GetInstanceHealthResponse
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.notebooks.v1.GetInstanceHealthResponse} GetInstanceHealthResponse
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        GetInstanceHealthResponse.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a GetInstanceHealthResponse message.
                         * @function verify
                         * @memberof google.cloud.notebooks.v1.GetInstanceHealthResponse
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        GetInstanceHealthResponse.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.healthState != null && message.hasOwnProperty("healthState"))
                                switch (message.healthState) {
                                default:
                                    return "healthState: enum value expected";
                                case 0:
                                case 1:
                                case 2:
                                case 3:
                                case 4:
                                    break;
                                }
                            if (message.healthInfo != null && message.hasOwnProperty("healthInfo")) {
                                if (!$util.isObject(message.healthInfo))
                                    return "healthInfo: object expected";
                                var key = Object.keys(message.healthInfo);
                                for (var i = 0; i < key.length; ++i)
                                    if (!$util.isString(message.healthInfo[key[i]]))
                                        return "healthInfo: string{k:string} expected";
                            }
                            return null;
                        };
    
                        /**
                         * Creates a GetInstanceHealthResponse message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.notebooks.v1.GetInstanceHealthResponse
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.notebooks.v1.GetInstanceHealthResponse} GetInstanceHealthResponse
                         */
                        GetInstanceHealthResponse.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.notebooks.v1.GetInstanceHealthResponse)
                                return object;
                            var message = new $root.google.cloud.notebooks.v1.GetInstanceHealthResponse();
                            switch (object.healthState) {
                            default:
                                if (typeof object.healthState === "number") {
                                    message.healthState = object.healthState;
                                    break;
                                }
                                break;
                            case "HEALTH_STATE_UNSPECIFIED":
                            case 0:
                                message.healthState = 0;
                                break;
                            case "HEALTHY":
                            case 1:
                                message.healthState = 1;
                                break;
                            case "UNHEALTHY":
                            case 2:
                                message.healthState = 2;
                                break;
                            case "AGENT_NOT_INSTALLED":
                            case 3:
                                message.healthState = 3;
                                break;
                            case "AGENT_NOT_RUNNING":
                            case 4:
                                message.healthState = 4;
                                break;
                            }
                            if (object.healthInfo) {
                                if (typeof object.healthInfo !== "object")
                                    throw TypeError(".google.cloud.notebooks.v1.GetInstanceHealthResponse.healthInfo: object expected");
                                message.healthInfo = {};
                                for (var keys = Object.keys(object.healthInfo), i = 0; i < keys.length; ++i)
                                    message.healthInfo[keys[i]] = String(object.healthInfo[keys[i]]);
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a GetInstanceHealthResponse message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.notebooks.v1.GetInstanceHealthResponse
                         * @static
                         * @param {google.cloud.notebooks.v1.GetInstanceHealthResponse} message GetInstanceHealthResponse
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        GetInstanceHealthResponse.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.objects || options.defaults)
                                object.healthInfo = {};
                            if (options.defaults)
                                object.healthState = options.enums === String ? "HEALTH_STATE_UNSPECIFIED" : 0;
                            if (message.healthState != null && message.hasOwnProperty("healthState"))
                                object.healthState = options.enums === String ? $root.google.cloud.notebooks.v1.GetInstanceHealthResponse.HealthState[message.healthState] === undefined ? message.healthState : $root.google.cloud.notebooks.v1.GetInstanceHealthResponse.HealthState[message.healthState] : message.healthState;
                            var keys2;
                            if (message.healthInfo && (keys2 = Object.keys(message.healthInfo)).length) {
                                object.healthInfo = {};
                                for (var j = 0; j < keys2.length; ++j)
                                    object.healthInfo[keys2[j]] = message.healthInfo[keys2[j]];
                            }
                            return object;
                        };
    
                        /**
                         * Converts this GetInstanceHealthResponse to JSON.
                         * @function toJSON
                         * @memberof google.cloud.notebooks.v1.GetInstanceHealthResponse
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        GetInstanceHealthResponse.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for GetInstanceHealthResponse
                         * @function getTypeUrl
                         * @memberof google.cloud.notebooks.v1.GetInstanceHealthResponse
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        GetInstanceHealthResponse.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.notebooks.v1.GetInstanceHealthResponse";
                        };
    
                        /**
                         * HealthState enum.
                         * @name google.cloud.notebooks.v1.GetInstanceHealthResponse.HealthState
                         * @enum {number}
                         * @property {number} HEALTH_STATE_UNSPECIFIED=0 HEALTH_STATE_UNSPECIFIED value
                         * @property {number} HEALTHY=1 HEALTHY value
                         * @property {number} UNHEALTHY=2 UNHEALTHY value
                         * @property {number} AGENT_NOT_INSTALLED=3 AGENT_NOT_INSTALLED value
                         * @property {number} AGENT_NOT_RUNNING=4 AGENT_NOT_RUNNING value
                         */
                        GetInstanceHealthResponse.HealthState = (function() {
                            var valuesById = {}, values = Object.create(valuesById);
                            values[valuesById[0] = "HEALTH_STATE_UNSPECIFIED"] = 0;
                            values[valuesById[1] = "HEALTHY"] = 1;
                            values[valuesById[2] = "UNHEALTHY"] = 2;
                            values[valuesById[3] = "AGENT_NOT_INSTALLED"] = 3;
                            values[valuesById[4] = "AGENT_NOT_RUNNING"] = 4;
                            return values;
                        })();
    
                        return GetInstanceHealthResponse;
                    })();
    
                    v1.UpgradeInstanceRequest = (function() {
    
                        /**
                         * Properties of an UpgradeInstanceRequest.
                         * @memberof google.cloud.notebooks.v1
                         * @interface IUpgradeInstanceRequest
                         * @property {string|null} [name] UpgradeInstanceRequest name
                         * @property {google.cloud.notebooks.v1.UpgradeType|null} [type] UpgradeInstanceRequest type
                         */
    
                        /**
                         * Constructs a new UpgradeInstanceRequest.
                         * @memberof google.cloud.notebooks.v1
                         * @classdesc Represents an UpgradeInstanceRequest.
                         * @implements IUpgradeInstanceRequest
                         * @constructor
                         * @param {google.cloud.notebooks.v1.IUpgradeInstanceRequest=} [properties] Properties to set
                         */
                        function UpgradeInstanceRequest(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * UpgradeInstanceRequest name.
                         * @member {string} name
                         * @memberof google.cloud.notebooks.v1.UpgradeInstanceRequest
                         * @instance
                         */
                        UpgradeInstanceRequest.prototype.name = "";
    
                        /**
                         * UpgradeInstanceRequest type.
                         * @member {google.cloud.notebooks.v1.UpgradeType} type
                         * @memberof google.cloud.notebooks.v1.UpgradeInstanceRequest
                         * @instance
                         */
                        UpgradeInstanceRequest.prototype.type = 0;
    
                        /**
                         * Creates a new UpgradeInstanceRequest instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.notebooks.v1.UpgradeInstanceRequest
                         * @static
                         * @param {google.cloud.notebooks.v1.IUpgradeInstanceRequest=} [properties] Properties to set
                         * @returns {google.cloud.notebooks.v1.UpgradeInstanceRequest} UpgradeInstanceRequest instance
                         */
                        UpgradeInstanceRequest.create = function create(properties) {
                            return new UpgradeInstanceRequest(properties);
                        };
    
                        /**
                         * Encodes the specified UpgradeInstanceRequest message. Does not implicitly {@link google.cloud.notebooks.v1.UpgradeInstanceRequest.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.notebooks.v1.UpgradeInstanceRequest
                         * @static
                         * @param {google.cloud.notebooks.v1.IUpgradeInstanceRequest} message UpgradeInstanceRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        UpgradeInstanceRequest.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                            if (message.type != null && Object.hasOwnProperty.call(message, "type"))
                                writer.uint32(/* id 2, wireType 0 =*/16).int32(message.type);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified UpgradeInstanceRequest message, length delimited. Does not implicitly {@link google.cloud.notebooks.v1.UpgradeInstanceRequest.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.notebooks.v1.UpgradeInstanceRequest
                         * @static
                         * @param {google.cloud.notebooks.v1.IUpgradeInstanceRequest} message UpgradeInstanceRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        UpgradeInstanceRequest.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes an UpgradeInstanceRequest message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.notebooks.v1.UpgradeInstanceRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.notebooks.v1.UpgradeInstanceRequest} UpgradeInstanceRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        UpgradeInstanceRequest.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.notebooks.v1.UpgradeInstanceRequest();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.name = reader.string();
                                        break;
                                    }
                                case 2: {
                                        message.type = reader.int32();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes an UpgradeInstanceRequest message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.notebooks.v1.UpgradeInstanceRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.notebooks.v1.UpgradeInstanceRequest} UpgradeInstanceRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        UpgradeInstanceRequest.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies an UpgradeInstanceRequest message.
                         * @function verify
                         * @memberof google.cloud.notebooks.v1.UpgradeInstanceRequest
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        UpgradeInstanceRequest.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.name != null && message.hasOwnProperty("name"))
                                if (!$util.isString(message.name))
                                    return "name: string expected";
                            if (message.type != null && message.hasOwnProperty("type"))
                                switch (message.type) {
                                default:
                                    return "type: enum value expected";
                                case 0:
                                case 1:
                                case 2:
                                case 3:
                                case 4:
                                    break;
                                }
                            return null;
                        };
    
                        /**
                         * Creates an UpgradeInstanceRequest message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.notebooks.v1.UpgradeInstanceRequest
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.notebooks.v1.UpgradeInstanceRequest} UpgradeInstanceRequest
                         */
                        UpgradeInstanceRequest.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.notebooks.v1.UpgradeInstanceRequest)
                                return object;
                            var message = new $root.google.cloud.notebooks.v1.UpgradeInstanceRequest();
                            if (object.name != null)
                                message.name = String(object.name);
                            switch (object.type) {
                            default:
                                if (typeof object.type === "number") {
                                    message.type = object.type;
                                    break;
                                }
                                break;
                            case "UPGRADE_TYPE_UNSPECIFIED":
                            case 0:
                                message.type = 0;
                                break;
                            case "UPGRADE_FRAMEWORK":
                            case 1:
                                message.type = 1;
                                break;
                            case "UPGRADE_OS":
                            case 2:
                                message.type = 2;
                                break;
                            case "UPGRADE_CUDA":
                            case 3:
                                message.type = 3;
                                break;
                            case "UPGRADE_ALL":
                            case 4:
                                message.type = 4;
                                break;
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from an UpgradeInstanceRequest message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.notebooks.v1.UpgradeInstanceRequest
                         * @static
                         * @param {google.cloud.notebooks.v1.UpgradeInstanceRequest} message UpgradeInstanceRequest
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        UpgradeInstanceRequest.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.name = "";
                                object.type = options.enums === String ? "UPGRADE_TYPE_UNSPECIFIED" : 0;
                            }
                            if (message.name != null && message.hasOwnProperty("name"))
                                object.name = message.name;
                            if (message.type != null && message.hasOwnProperty("type"))
                                object.type = options.enums === String ? $root.google.cloud.notebooks.v1.UpgradeType[message.type] === undefined ? message.type : $root.google.cloud.notebooks.v1.UpgradeType[message.type] : message.type;
                            return object;
                        };
    
                        /**
                         * Converts this UpgradeInstanceRequest to JSON.
                         * @function toJSON
                         * @memberof google.cloud.notebooks.v1.UpgradeInstanceRequest
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        UpgradeInstanceRequest.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for UpgradeInstanceRequest
                         * @function getTypeUrl
                         * @memberof google.cloud.notebooks.v1.UpgradeInstanceRequest
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        UpgradeInstanceRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.notebooks.v1.UpgradeInstanceRequest";
                        };
    
                        return UpgradeInstanceRequest;
                    })();
    
                    v1.RollbackInstanceRequest = (function() {
    
                        /**
                         * Properties of a RollbackInstanceRequest.
                         * @memberof google.cloud.notebooks.v1
                         * @interface IRollbackInstanceRequest
                         * @property {string|null} [name] RollbackInstanceRequest name
                         * @property {string|null} [targetSnapshot] RollbackInstanceRequest targetSnapshot
                         */
    
                        /**
                         * Constructs a new RollbackInstanceRequest.
                         * @memberof google.cloud.notebooks.v1
                         * @classdesc Represents a RollbackInstanceRequest.
                         * @implements IRollbackInstanceRequest
                         * @constructor
                         * @param {google.cloud.notebooks.v1.IRollbackInstanceRequest=} [properties] Properties to set
                         */
                        function RollbackInstanceRequest(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * RollbackInstanceRequest name.
                         * @member {string} name
                         * @memberof google.cloud.notebooks.v1.RollbackInstanceRequest
                         * @instance
                         */
                        RollbackInstanceRequest.prototype.name = "";
    
                        /**
                         * RollbackInstanceRequest targetSnapshot.
                         * @member {string} targetSnapshot
                         * @memberof google.cloud.notebooks.v1.RollbackInstanceRequest
                         * @instance
                         */
                        RollbackInstanceRequest.prototype.targetSnapshot = "";
    
                        /**
                         * Creates a new RollbackInstanceRequest instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.notebooks.v1.RollbackInstanceRequest
                         * @static
                         * @param {google.cloud.notebooks.v1.IRollbackInstanceRequest=} [properties] Properties to set
                         * @returns {google.cloud.notebooks.v1.RollbackInstanceRequest} RollbackInstanceRequest instance
                         */
                        RollbackInstanceRequest.create = function create(properties) {
                            return new RollbackInstanceRequest(properties);
                        };
    
                        /**
                         * Encodes the specified RollbackInstanceRequest message. Does not implicitly {@link google.cloud.notebooks.v1.RollbackInstanceRequest.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.notebooks.v1.RollbackInstanceRequest
                         * @static
                         * @param {google.cloud.notebooks.v1.IRollbackInstanceRequest} message RollbackInstanceRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        RollbackInstanceRequest.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                            if (message.targetSnapshot != null && Object.hasOwnProperty.call(message, "targetSnapshot"))
                                writer.uint32(/* id 2, wireType 2 =*/18).string(message.targetSnapshot);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified RollbackInstanceRequest message, length delimited. Does not implicitly {@link google.cloud.notebooks.v1.RollbackInstanceRequest.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.notebooks.v1.RollbackInstanceRequest
                         * @static
                         * @param {google.cloud.notebooks.v1.IRollbackInstanceRequest} message RollbackInstanceRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        RollbackInstanceRequest.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a RollbackInstanceRequest message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.notebooks.v1.RollbackInstanceRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.notebooks.v1.RollbackInstanceRequest} RollbackInstanceRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        RollbackInstanceRequest.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.notebooks.v1.RollbackInstanceRequest();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.name = reader.string();
                                        break;
                                    }
                                case 2: {
                                        message.targetSnapshot = reader.string();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a RollbackInstanceRequest message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.notebooks.v1.RollbackInstanceRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.notebooks.v1.RollbackInstanceRequest} RollbackInstanceRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        RollbackInstanceRequest.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a RollbackInstanceRequest message.
                         * @function verify
                         * @memberof google.cloud.notebooks.v1.RollbackInstanceRequest
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        RollbackInstanceRequest.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.name != null && message.hasOwnProperty("name"))
                                if (!$util.isString(message.name))
                                    return "name: string expected";
                            if (message.targetSnapshot != null && message.hasOwnProperty("targetSnapshot"))
                                if (!$util.isString(message.targetSnapshot))
                                    return "targetSnapshot: string expected";
                            return null;
                        };
    
                        /**
                         * Creates a RollbackInstanceRequest message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.notebooks.v1.RollbackInstanceRequest
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.notebooks.v1.RollbackInstanceRequest} RollbackInstanceRequest
                         */
                        RollbackInstanceRequest.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.notebooks.v1.RollbackInstanceRequest)
                                return object;
                            var message = new $root.google.cloud.notebooks.v1.RollbackInstanceRequest();
                            if (object.name != null)
                                message.name = String(object.name);
                            if (object.targetSnapshot != null)
                                message.targetSnapshot = String(object.targetSnapshot);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a RollbackInstanceRequest message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.notebooks.v1.RollbackInstanceRequest
                         * @static
                         * @param {google.cloud.notebooks.v1.RollbackInstanceRequest} message RollbackInstanceRequest
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        RollbackInstanceRequest.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.name = "";
                                object.targetSnapshot = "";
                            }
                            if (message.name != null && message.hasOwnProperty("name"))
                                object.name = message.name;
                            if (message.targetSnapshot != null && message.hasOwnProperty("targetSnapshot"))
                                object.targetSnapshot = message.targetSnapshot;
                            return object;
                        };
    
                        /**
                         * Converts this RollbackInstanceRequest to JSON.
                         * @function toJSON
                         * @memberof google.cloud.notebooks.v1.RollbackInstanceRequest
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        RollbackInstanceRequest.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for RollbackInstanceRequest
                         * @function getTypeUrl
                         * @memberof google.cloud.notebooks.v1.RollbackInstanceRequest
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        RollbackInstanceRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.notebooks.v1.RollbackInstanceRequest";
                        };
    
                        return RollbackInstanceRequest;
                    })();
    
                    v1.UpgradeInstanceInternalRequest = (function() {
    
                        /**
                         * Properties of an UpgradeInstanceInternalRequest.
                         * @memberof google.cloud.notebooks.v1
                         * @interface IUpgradeInstanceInternalRequest
                         * @property {string|null} [name] UpgradeInstanceInternalRequest name
                         * @property {string|null} [vmId] UpgradeInstanceInternalRequest vmId
                         * @property {google.cloud.notebooks.v1.UpgradeType|null} [type] UpgradeInstanceInternalRequest type
                         */
    
                        /**
                         * Constructs a new UpgradeInstanceInternalRequest.
                         * @memberof google.cloud.notebooks.v1
                         * @classdesc Represents an UpgradeInstanceInternalRequest.
                         * @implements IUpgradeInstanceInternalRequest
                         * @constructor
                         * @param {google.cloud.notebooks.v1.IUpgradeInstanceInternalRequest=} [properties] Properties to set
                         */
                        function UpgradeInstanceInternalRequest(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * UpgradeInstanceInternalRequest name.
                         * @member {string} name
                         * @memberof google.cloud.notebooks.v1.UpgradeInstanceInternalRequest
                         * @instance
                         */
                        UpgradeInstanceInternalRequest.prototype.name = "";
    
                        /**
                         * UpgradeInstanceInternalRequest vmId.
                         * @member {string} vmId
                         * @memberof google.cloud.notebooks.v1.UpgradeInstanceInternalRequest
                         * @instance
                         */
                        UpgradeInstanceInternalRequest.prototype.vmId = "";
    
                        /**
                         * UpgradeInstanceInternalRequest type.
                         * @member {google.cloud.notebooks.v1.UpgradeType} type
                         * @memberof google.cloud.notebooks.v1.UpgradeInstanceInternalRequest
                         * @instance
                         */
                        UpgradeInstanceInternalRequest.prototype.type = 0;
    
                        /**
                         * Creates a new UpgradeInstanceInternalRequest instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.notebooks.v1.UpgradeInstanceInternalRequest
                         * @static
                         * @param {google.cloud.notebooks.v1.IUpgradeInstanceInternalRequest=} [properties] Properties to set
                         * @returns {google.cloud.notebooks.v1.UpgradeInstanceInternalRequest} UpgradeInstanceInternalRequest instance
                         */
                        UpgradeInstanceInternalRequest.create = function create(properties) {
                            return new UpgradeInstanceInternalRequest(properties);
                        };
    
                        /**
                         * Encodes the specified UpgradeInstanceInternalRequest message. Does not implicitly {@link google.cloud.notebooks.v1.UpgradeInstanceInternalRequest.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.notebooks.v1.UpgradeInstanceInternalRequest
                         * @static
                         * @param {google.cloud.notebooks.v1.IUpgradeInstanceInternalRequest} message UpgradeInstanceInternalRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        UpgradeInstanceInternalRequest.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                            if (message.vmId != null && Object.hasOwnProperty.call(message, "vmId"))
                                writer.uint32(/* id 2, wireType 2 =*/18).string(message.vmId);
                            if (message.type != null && Object.hasOwnProperty.call(message, "type"))
                                writer.uint32(/* id 3, wireType 0 =*/24).int32(message.type);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified UpgradeInstanceInternalRequest message, length delimited. Does not implicitly {@link google.cloud.notebooks.v1.UpgradeInstanceInternalRequest.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.notebooks.v1.UpgradeInstanceInternalRequest
                         * @static
                         * @param {google.cloud.notebooks.v1.IUpgradeInstanceInternalRequest} message UpgradeInstanceInternalRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        UpgradeInstanceInternalRequest.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes an UpgradeInstanceInternalRequest message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.notebooks.v1.UpgradeInstanceInternalRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.notebooks.v1.UpgradeInstanceInternalRequest} UpgradeInstanceInternalRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        UpgradeInstanceInternalRequest.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.notebooks.v1.UpgradeInstanceInternalRequest();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.name = reader.string();
                                        break;
                                    }
                                case 2: {
                                        message.vmId = reader.string();
                                        break;
                                    }
                                case 3: {
                                        message.type = reader.int32();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes an UpgradeInstanceInternalRequest message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.notebooks.v1.UpgradeInstanceInternalRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.notebooks.v1.UpgradeInstanceInternalRequest} UpgradeInstanceInternalRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        UpgradeInstanceInternalRequest.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies an UpgradeInstanceInternalRequest message.
                         * @function verify
                         * @memberof google.cloud.notebooks.v1.UpgradeInstanceInternalRequest
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        UpgradeInstanceInternalRequest.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.name != null && message.hasOwnProperty("name"))
                                if (!$util.isString(message.name))
                                    return "name: string expected";
                            if (message.vmId != null && message.hasOwnProperty("vmId"))
                                if (!$util.isString(message.vmId))
                                    return "vmId: string expected";
                            if (message.type != null && message.hasOwnProperty("type"))
                                switch (message.type) {
                                default:
                                    return "type: enum value expected";
                                case 0:
                                case 1:
                                case 2:
                                case 3:
                                case 4:
                                    break;
                                }
                            return null;
                        };
    
                        /**
                         * Creates an UpgradeInstanceInternalRequest message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.notebooks.v1.UpgradeInstanceInternalRequest
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.notebooks.v1.UpgradeInstanceInternalRequest} UpgradeInstanceInternalRequest
                         */
                        UpgradeInstanceInternalRequest.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.notebooks.v1.UpgradeInstanceInternalRequest)
                                return object;
                            var message = new $root.google.cloud.notebooks.v1.UpgradeInstanceInternalRequest();
                            if (object.name != null)
                                message.name = String(object.name);
                            if (object.vmId != null)
                                message.vmId = String(object.vmId);
                            switch (object.type) {
                            default:
                                if (typeof object.type === "number") {
                                    message.type = object.type;
                                    break;
                                }
                                break;
                            case "UPGRADE_TYPE_UNSPECIFIED":
                            case 0:
                                message.type = 0;
                                break;
                            case "UPGRADE_FRAMEWORK":
                            case 1:
                                message.type = 1;
                                break;
                            case "UPGRADE_OS":
                            case 2:
                                message.type = 2;
                                break;
                            case "UPGRADE_CUDA":
                            case 3:
                                message.type = 3;
                                break;
                            case "UPGRADE_ALL":
                            case 4:
                                message.type = 4;
                                break;
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from an UpgradeInstanceInternalRequest message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.notebooks.v1.UpgradeInstanceInternalRequest
                         * @static
                         * @param {google.cloud.notebooks.v1.UpgradeInstanceInternalRequest} message UpgradeInstanceInternalRequest
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        UpgradeInstanceInternalRequest.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.name = "";
                                object.vmId = "";
                                object.type = options.enums === String ? "UPGRADE_TYPE_UNSPECIFIED" : 0;
                            }
                            if (message.name != null && message.hasOwnProperty("name"))
                                object.name = message.name;
                            if (message.vmId != null && message.hasOwnProperty("vmId"))
                                object.vmId = message.vmId;
                            if (message.type != null && message.hasOwnProperty("type"))
                                object.type = options.enums === String ? $root.google.cloud.notebooks.v1.UpgradeType[message.type] === undefined ? message.type : $root.google.cloud.notebooks.v1.UpgradeType[message.type] : message.type;
                            return object;
                        };
    
                        /**
                         * Converts this UpgradeInstanceInternalRequest to JSON.
                         * @function toJSON
                         * @memberof google.cloud.notebooks.v1.UpgradeInstanceInternalRequest
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        UpgradeInstanceInternalRequest.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for UpgradeInstanceInternalRequest
                         * @function getTypeUrl
                         * @memberof google.cloud.notebooks.v1.UpgradeInstanceInternalRequest
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        UpgradeInstanceInternalRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.notebooks.v1.UpgradeInstanceInternalRequest";
                        };
    
                        return UpgradeInstanceInternalRequest;
                    })();
    
                    v1.ListEnvironmentsRequest = (function() {
    
                        /**
                         * Properties of a ListEnvironmentsRequest.
                         * @memberof google.cloud.notebooks.v1
                         * @interface IListEnvironmentsRequest
                         * @property {string|null} [parent] ListEnvironmentsRequest parent
                         * @property {number|null} [pageSize] ListEnvironmentsRequest pageSize
                         * @property {string|null} [pageToken] ListEnvironmentsRequest pageToken
                         */
    
                        /**
                         * Constructs a new ListEnvironmentsRequest.
                         * @memberof google.cloud.notebooks.v1
                         * @classdesc Represents a ListEnvironmentsRequest.
                         * @implements IListEnvironmentsRequest
                         * @constructor
                         * @param {google.cloud.notebooks.v1.IListEnvironmentsRequest=} [properties] Properties to set
                         */
                        function ListEnvironmentsRequest(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * ListEnvironmentsRequest parent.
                         * @member {string} parent
                         * @memberof google.cloud.notebooks.v1.ListEnvironmentsRequest
                         * @instance
                         */
                        ListEnvironmentsRequest.prototype.parent = "";
    
                        /**
                         * ListEnvironmentsRequest pageSize.
                         * @member {number} pageSize
                         * @memberof google.cloud.notebooks.v1.ListEnvironmentsRequest
                         * @instance
                         */
                        ListEnvironmentsRequest.prototype.pageSize = 0;
    
                        /**
                         * ListEnvironmentsRequest pageToken.
                         * @member {string} pageToken
                         * @memberof google.cloud.notebooks.v1.ListEnvironmentsRequest
                         * @instance
                         */
                        ListEnvironmentsRequest.prototype.pageToken = "";
    
                        /**
                         * Creates a new ListEnvironmentsRequest instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.notebooks.v1.ListEnvironmentsRequest
                         * @static
                         * @param {google.cloud.notebooks.v1.IListEnvironmentsRequest=} [properties] Properties to set
                         * @returns {google.cloud.notebooks.v1.ListEnvironmentsRequest} ListEnvironmentsRequest instance
                         */
                        ListEnvironmentsRequest.create = function create(properties) {
                            return new ListEnvironmentsRequest(properties);
                        };
    
                        /**
                         * Encodes the specified ListEnvironmentsRequest message. Does not implicitly {@link google.cloud.notebooks.v1.ListEnvironmentsRequest.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.notebooks.v1.ListEnvironmentsRequest
                         * @static
                         * @param {google.cloud.notebooks.v1.IListEnvironmentsRequest} message ListEnvironmentsRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        ListEnvironmentsRequest.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.parent != null && Object.hasOwnProperty.call(message, "parent"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.parent);
                            if (message.pageSize != null && Object.hasOwnProperty.call(message, "pageSize"))
                                writer.uint32(/* id 2, wireType 0 =*/16).int32(message.pageSize);
                            if (message.pageToken != null && Object.hasOwnProperty.call(message, "pageToken"))
                                writer.uint32(/* id 3, wireType 2 =*/26).string(message.pageToken);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified ListEnvironmentsRequest message, length delimited. Does not implicitly {@link google.cloud.notebooks.v1.ListEnvironmentsRequest.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.notebooks.v1.ListEnvironmentsRequest
                         * @static
                         * @param {google.cloud.notebooks.v1.IListEnvironmentsRequest} message ListEnvironmentsRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        ListEnvironmentsRequest.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a ListEnvironmentsRequest message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.notebooks.v1.ListEnvironmentsRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.notebooks.v1.ListEnvironmentsRequest} ListEnvironmentsRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        ListEnvironmentsRequest.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.notebooks.v1.ListEnvironmentsRequest();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.parent = reader.string();
                                        break;
                                    }
                                case 2: {
                                        message.pageSize = reader.int32();
                                        break;
                                    }
                                case 3: {
                                        message.pageToken = reader.string();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a ListEnvironmentsRequest message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.notebooks.v1.ListEnvironmentsRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.notebooks.v1.ListEnvironmentsRequest} ListEnvironmentsRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        ListEnvironmentsRequest.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a ListEnvironmentsRequest message.
                         * @function verify
                         * @memberof google.cloud.notebooks.v1.ListEnvironmentsRequest
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        ListEnvironmentsRequest.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.parent != null && message.hasOwnProperty("parent"))
                                if (!$util.isString(message.parent))
                                    return "parent: string expected";
                            if (message.pageSize != null && message.hasOwnProperty("pageSize"))
                                if (!$util.isInteger(message.pageSize))
                                    return "pageSize: integer expected";
                            if (message.pageToken != null && message.hasOwnProperty("pageToken"))
                                if (!$util.isString(message.pageToken))
                                    return "pageToken: string expected";
                            return null;
                        };
    
                        /**
                         * Creates a ListEnvironmentsRequest message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.notebooks.v1.ListEnvironmentsRequest
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.notebooks.v1.ListEnvironmentsRequest} ListEnvironmentsRequest
                         */
                        ListEnvironmentsRequest.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.notebooks.v1.ListEnvironmentsRequest)
                                return object;
                            var message = new $root.google.cloud.notebooks.v1.ListEnvironmentsRequest();
                            if (object.parent != null)
                                message.parent = String(object.parent);
                            if (object.pageSize != null)
                                message.pageSize = object.pageSize | 0;
                            if (object.pageToken != null)
                                message.pageToken = String(object.pageToken);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a ListEnvironmentsRequest message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.notebooks.v1.ListEnvironmentsRequest
                         * @static
                         * @param {google.cloud.notebooks.v1.ListEnvironmentsRequest} message ListEnvironmentsRequest
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        ListEnvironmentsRequest.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.parent = "";
                                object.pageSize = 0;
                                object.pageToken = "";
                            }
                            if (message.parent != null && message.hasOwnProperty("parent"))
                                object.parent = message.parent;
                            if (message.pageSize != null && message.hasOwnProperty("pageSize"))
                                object.pageSize = message.pageSize;
                            if (message.pageToken != null && message.hasOwnProperty("pageToken"))
                                object.pageToken = message.pageToken;
                            return object;
                        };
    
                        /**
                         * Converts this ListEnvironmentsRequest to JSON.
                         * @function toJSON
                         * @memberof google.cloud.notebooks.v1.ListEnvironmentsRequest
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        ListEnvironmentsRequest.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for ListEnvironmentsRequest
                         * @function getTypeUrl
                         * @memberof google.cloud.notebooks.v1.ListEnvironmentsRequest
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        ListEnvironmentsRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.notebooks.v1.ListEnvironmentsRequest";
                        };
    
                        return ListEnvironmentsRequest;
                    })();
    
                    v1.DiagnoseInstanceRequest = (function() {
    
                        /**
                         * Properties of a DiagnoseInstanceRequest.
                         * @memberof google.cloud.notebooks.v1
                         * @interface IDiagnoseInstanceRequest
                         * @property {string|null} [name] DiagnoseInstanceRequest name
                         * @property {google.cloud.notebooks.v1.IDiagnosticConfig|null} [diagnosticConfig] DiagnoseInstanceRequest diagnosticConfig
                         */
    
                        /**
                         * Constructs a new DiagnoseInstanceRequest.
                         * @memberof google.cloud.notebooks.v1
                         * @classdesc Represents a DiagnoseInstanceRequest.
                         * @implements IDiagnoseInstanceRequest
                         * @constructor
                         * @param {google.cloud.notebooks.v1.IDiagnoseInstanceRequest=} [properties] Properties to set
                         */
                        function DiagnoseInstanceRequest(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * DiagnoseInstanceRequest name.
                         * @member {string} name
                         * @memberof google.cloud.notebooks.v1.DiagnoseInstanceRequest
                         * @instance
                         */
                        DiagnoseInstanceRequest.prototype.name = "";
    
                        /**
                         * DiagnoseInstanceRequest diagnosticConfig.
                         * @member {google.cloud.notebooks.v1.IDiagnosticConfig|null|undefined} diagnosticConfig
                         * @memberof google.cloud.notebooks.v1.DiagnoseInstanceRequest
                         * @instance
                         */
                        DiagnoseInstanceRequest.prototype.diagnosticConfig = null;
    
                        /**
                         * Creates a new DiagnoseInstanceRequest instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.notebooks.v1.DiagnoseInstanceRequest
                         * @static
                         * @param {google.cloud.notebooks.v1.IDiagnoseInstanceRequest=} [properties] Properties to set
                         * @returns {google.cloud.notebooks.v1.DiagnoseInstanceRequest} DiagnoseInstanceRequest instance
                         */
                        DiagnoseInstanceRequest.create = function create(properties) {
                            return new DiagnoseInstanceRequest(properties);
                        };
    
                        /**
                         * Encodes the specified DiagnoseInstanceRequest message. Does not implicitly {@link google.cloud.notebooks.v1.DiagnoseInstanceRequest.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.notebooks.v1.DiagnoseInstanceRequest
                         * @static
                         * @param {google.cloud.notebooks.v1.IDiagnoseInstanceRequest} message DiagnoseInstanceRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        DiagnoseInstanceRequest.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                            if (message.diagnosticConfig != null && Object.hasOwnProperty.call(message, "diagnosticConfig"))
                                $root.google.cloud.notebooks.v1.DiagnosticConfig.encode(message.diagnosticConfig, writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                            return writer;
                        };
    
                        /**
                         * Encodes the specified DiagnoseInstanceRequest message, length delimited. Does not implicitly {@link google.cloud.notebooks.v1.DiagnoseInstanceRequest.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.notebooks.v1.DiagnoseInstanceRequest
                         * @static
                         * @param {google.cloud.notebooks.v1.IDiagnoseInstanceRequest} message DiagnoseInstanceRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        DiagnoseInstanceRequest.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a DiagnoseInstanceRequest message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.notebooks.v1.DiagnoseInstanceRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.notebooks.v1.DiagnoseInstanceRequest} DiagnoseInstanceRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        DiagnoseInstanceRequest.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.notebooks.v1.DiagnoseInstanceRequest();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.name = reader.string();
                                        break;
                                    }
                                case 2: {
                                        message.diagnosticConfig = $root.google.cloud.notebooks.v1.DiagnosticConfig.decode(reader, reader.uint32());
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a DiagnoseInstanceRequest message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.notebooks.v1.DiagnoseInstanceRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.notebooks.v1.DiagnoseInstanceRequest} DiagnoseInstanceRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        DiagnoseInstanceRequest.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a DiagnoseInstanceRequest message.
                         * @function verify
                         * @memberof google.cloud.notebooks.v1.DiagnoseInstanceRequest
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        DiagnoseInstanceRequest.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.name != null && message.hasOwnProperty("name"))
                                if (!$util.isString(message.name))
                                    return "name: string expected";
                            if (message.diagnosticConfig != null && message.hasOwnProperty("diagnosticConfig")) {
                                var error = $root.google.cloud.notebooks.v1.DiagnosticConfig.verify(message.diagnosticConfig);
                                if (error)
                                    return "diagnosticConfig." + error;
                            }
                            return null;
                        };
    
                        /**
                         * Creates a DiagnoseInstanceRequest message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.notebooks.v1.DiagnoseInstanceRequest
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.notebooks.v1.DiagnoseInstanceRequest} DiagnoseInstanceRequest
                         */
                        DiagnoseInstanceRequest.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.notebooks.v1.DiagnoseInstanceRequest)
                                return object;
                            var message = new $root.google.cloud.notebooks.v1.DiagnoseInstanceRequest();
                            if (object.name != null)
                                message.name = String(object.name);
                            if (object.diagnosticConfig != null) {
                                if (typeof object.diagnosticConfig !== "object")
                                    throw TypeError(".google.cloud.notebooks.v1.DiagnoseInstanceRequest.diagnosticConfig: object expected");
                                message.diagnosticConfig = $root.google.cloud.notebooks.v1.DiagnosticConfig.fromObject(object.diagnosticConfig);
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a DiagnoseInstanceRequest message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.notebooks.v1.DiagnoseInstanceRequest
                         * @static
                         * @param {google.cloud.notebooks.v1.DiagnoseInstanceRequest} message DiagnoseInstanceRequest
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        DiagnoseInstanceRequest.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.name = "";
                                object.diagnosticConfig = null;
                            }
                            if (message.name != null && message.hasOwnProperty("name"))
                                object.name = message.name;
                            if (message.diagnosticConfig != null && message.hasOwnProperty("diagnosticConfig"))
                                object.diagnosticConfig = $root.google.cloud.notebooks.v1.DiagnosticConfig.toObject(message.diagnosticConfig, options);
                            return object;
                        };
    
                        /**
                         * Converts this DiagnoseInstanceRequest to JSON.
                         * @function toJSON
                         * @memberof google.cloud.notebooks.v1.DiagnoseInstanceRequest
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        DiagnoseInstanceRequest.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for DiagnoseInstanceRequest
                         * @function getTypeUrl
                         * @memberof google.cloud.notebooks.v1.DiagnoseInstanceRequest
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        DiagnoseInstanceRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.notebooks.v1.DiagnoseInstanceRequest";
                        };
    
                        return DiagnoseInstanceRequest;
                    })();
    
                    v1.ListEnvironmentsResponse = (function() {
    
                        /**
                         * Properties of a ListEnvironmentsResponse.
                         * @memberof google.cloud.notebooks.v1
                         * @interface IListEnvironmentsResponse
                         * @property {Array.<google.cloud.notebooks.v1.IEnvironment>|null} [environments] ListEnvironmentsResponse environments
                         * @property {string|null} [nextPageToken] ListEnvironmentsResponse nextPageToken
                         * @property {Array.<string>|null} [unreachable] ListEnvironmentsResponse unreachable
                         */
    
                        /**
                         * Constructs a new ListEnvironmentsResponse.
                         * @memberof google.cloud.notebooks.v1
                         * @classdesc Represents a ListEnvironmentsResponse.
                         * @implements IListEnvironmentsResponse
                         * @constructor
                         * @param {google.cloud.notebooks.v1.IListEnvironmentsResponse=} [properties] Properties to set
                         */
                        function ListEnvironmentsResponse(properties) {
                            this.environments = [];
                            this.unreachable = [];
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * ListEnvironmentsResponse environments.
                         * @member {Array.<google.cloud.notebooks.v1.IEnvironment>} environments
                         * @memberof google.cloud.notebooks.v1.ListEnvironmentsResponse
                         * @instance
                         */
                        ListEnvironmentsResponse.prototype.environments = $util.emptyArray;
    
                        /**
                         * ListEnvironmentsResponse nextPageToken.
                         * @member {string} nextPageToken
                         * @memberof google.cloud.notebooks.v1.ListEnvironmentsResponse
                         * @instance
                         */
                        ListEnvironmentsResponse.prototype.nextPageToken = "";
    
                        /**
                         * ListEnvironmentsResponse unreachable.
                         * @member {Array.<string>} unreachable
                         * @memberof google.cloud.notebooks.v1.ListEnvironmentsResponse
                         * @instance
                         */
                        ListEnvironmentsResponse.prototype.unreachable = $util.emptyArray;
    
                        /**
                         * Creates a new ListEnvironmentsResponse instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.notebooks.v1.ListEnvironmentsResponse
                         * @static
                         * @param {google.cloud.notebooks.v1.IListEnvironmentsResponse=} [properties] Properties to set
                         * @returns {google.cloud.notebooks.v1.ListEnvironmentsResponse} ListEnvironmentsResponse instance
                         */
                        ListEnvironmentsResponse.create = function create(properties) {
                            return new ListEnvironmentsResponse(properties);
                        };
    
                        /**
                         * Encodes the specified ListEnvironmentsResponse message. Does not implicitly {@link google.cloud.notebooks.v1.ListEnvironmentsResponse.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.notebooks.v1.ListEnvironmentsResponse
                         * @static
                         * @param {google.cloud.notebooks.v1.IListEnvironmentsResponse} message ListEnvironmentsResponse message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        ListEnvironmentsResponse.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.environments != null && message.environments.length)
                                for (var i = 0; i < message.environments.length; ++i)
                                    $root.google.cloud.notebooks.v1.Environment.encode(message.environments[i], writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                            if (message.nextPageToken != null && Object.hasOwnProperty.call(message, "nextPageToken"))
                                writer.uint32(/* id 2, wireType 2 =*/18).string(message.nextPageToken);
                            if (message.unreachable != null && message.unreachable.length)
                                for (var i = 0; i < message.unreachable.length; ++i)
                                    writer.uint32(/* id 3, wireType 2 =*/26).string(message.unreachable[i]);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified ListEnvironmentsResponse message, length delimited. Does not implicitly {@link google.cloud.notebooks.v1.ListEnvironmentsResponse.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.notebooks.v1.ListEnvironmentsResponse
                         * @static
                         * @param {google.cloud.notebooks.v1.IListEnvironmentsResponse} message ListEnvironmentsResponse message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        ListEnvironmentsResponse.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a ListEnvironmentsResponse message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.notebooks.v1.ListEnvironmentsResponse
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.notebooks.v1.ListEnvironmentsResponse} ListEnvironmentsResponse
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        ListEnvironmentsResponse.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.notebooks.v1.ListEnvironmentsResponse();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        if (!(message.environments && message.environments.length))
                                            message.environments = [];
                                        message.environments.push($root.google.cloud.notebooks.v1.Environment.decode(reader, reader.uint32()));
                                        break;
                                    }
                                case 2: {
                                        message.nextPageToken = reader.string();
                                        break;
                                    }
                                case 3: {
                                        if (!(message.unreachable && message.unreachable.length))
                                            message.unreachable = [];
                                        message.unreachable.push(reader.string());
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a ListEnvironmentsResponse message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.notebooks.v1.ListEnvironmentsResponse
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.notebooks.v1.ListEnvironmentsResponse} ListEnvironmentsResponse
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        ListEnvironmentsResponse.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a ListEnvironmentsResponse message.
                         * @function verify
                         * @memberof google.cloud.notebooks.v1.ListEnvironmentsResponse
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        ListEnvironmentsResponse.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.environments != null && message.hasOwnProperty("environments")) {
                                if (!Array.isArray(message.environments))
                                    return "environments: array expected";
                                for (var i = 0; i < message.environments.length; ++i) {
                                    var error = $root.google.cloud.notebooks.v1.Environment.verify(message.environments[i]);
                                    if (error)
                                        return "environments." + error;
                                }
                            }
                            if (message.nextPageToken != null && message.hasOwnProperty("nextPageToken"))
                                if (!$util.isString(message.nextPageToken))
                                    return "nextPageToken: string expected";
                            if (message.unreachable != null && message.hasOwnProperty("unreachable")) {
                                if (!Array.isArray(message.unreachable))
                                    return "unreachable: array expected";
                                for (var i = 0; i < message.unreachable.length; ++i)
                                    if (!$util.isString(message.unreachable[i]))
                                        return "unreachable: string[] expected";
                            }
                            return null;
                        };
    
                        /**
                         * Creates a ListEnvironmentsResponse message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.notebooks.v1.ListEnvironmentsResponse
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.notebooks.v1.ListEnvironmentsResponse} ListEnvironmentsResponse
                         */
                        ListEnvironmentsResponse.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.notebooks.v1.ListEnvironmentsResponse)
                                return object;
                            var message = new $root.google.cloud.notebooks.v1.ListEnvironmentsResponse();
                            if (object.environments) {
                                if (!Array.isArray(object.environments))
                                    throw TypeError(".google.cloud.notebooks.v1.ListEnvironmentsResponse.environments: array expected");
                                message.environments = [];
                                for (var i = 0; i < object.environments.length; ++i) {
                                    if (typeof object.environments[i] !== "object")
                                        throw TypeError(".google.cloud.notebooks.v1.ListEnvironmentsResponse.environments: object expected");
                                    message.environments[i] = $root.google.cloud.notebooks.v1.Environment.fromObject(object.environments[i]);
                                }
                            }
                            if (object.nextPageToken != null)
                                message.nextPageToken = String(object.nextPageToken);
                            if (object.unreachable) {
                                if (!Array.isArray(object.unreachable))
                                    throw TypeError(".google.cloud.notebooks.v1.ListEnvironmentsResponse.unreachable: array expected");
                                message.unreachable = [];
                                for (var i = 0; i < object.unreachable.length; ++i)
                                    message.unreachable[i] = String(object.unreachable[i]);
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a ListEnvironmentsResponse message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.notebooks.v1.ListEnvironmentsResponse
                         * @static
                         * @param {google.cloud.notebooks.v1.ListEnvironmentsResponse} message ListEnvironmentsResponse
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        ListEnvironmentsResponse.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.arrays || options.defaults) {
                                object.environments = [];
                                object.unreachable = [];
                            }
                            if (options.defaults)
                                object.nextPageToken = "";
                            if (message.environments && message.environments.length) {
                                object.environments = [];
                                for (var j = 0; j < message.environments.length; ++j)
                                    object.environments[j] = $root.google.cloud.notebooks.v1.Environment.toObject(message.environments[j], options);
                            }
                            if (message.nextPageToken != null && message.hasOwnProperty("nextPageToken"))
                                object.nextPageToken = message.nextPageToken;
                            if (message.unreachable && message.unreachable.length) {
                                object.unreachable = [];
                                for (var j = 0; j < message.unreachable.length; ++j)
                                    object.unreachable[j] = message.unreachable[j];
                            }
                            return object;
                        };
    
                        /**
                         * Converts this ListEnvironmentsResponse to JSON.
                         * @function toJSON
                         * @memberof google.cloud.notebooks.v1.ListEnvironmentsResponse
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        ListEnvironmentsResponse.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for ListEnvironmentsResponse
                         * @function getTypeUrl
                         * @memberof google.cloud.notebooks.v1.ListEnvironmentsResponse
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        ListEnvironmentsResponse.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.notebooks.v1.ListEnvironmentsResponse";
                        };
    
                        return ListEnvironmentsResponse;
                    })();
    
                    v1.GetEnvironmentRequest = (function() {
    
                        /**
                         * Properties of a GetEnvironmentRequest.
                         * @memberof google.cloud.notebooks.v1
                         * @interface IGetEnvironmentRequest
                         * @property {string|null} [name] GetEnvironmentRequest name
                         */
    
                        /**
                         * Constructs a new GetEnvironmentRequest.
                         * @memberof google.cloud.notebooks.v1
                         * @classdesc Represents a GetEnvironmentRequest.
                         * @implements IGetEnvironmentRequest
                         * @constructor
                         * @param {google.cloud.notebooks.v1.IGetEnvironmentRequest=} [properties] Properties to set
                         */
                        function GetEnvironmentRequest(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * GetEnvironmentRequest name.
                         * @member {string} name
                         * @memberof google.cloud.notebooks.v1.GetEnvironmentRequest
                         * @instance
                         */
                        GetEnvironmentRequest.prototype.name = "";
    
                        /**
                         * Creates a new GetEnvironmentRequest instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.notebooks.v1.GetEnvironmentRequest
                         * @static
                         * @param {google.cloud.notebooks.v1.IGetEnvironmentRequest=} [properties] Properties to set
                         * @returns {google.cloud.notebooks.v1.GetEnvironmentRequest} GetEnvironmentRequest instance
                         */
                        GetEnvironmentRequest.create = function create(properties) {
                            return new GetEnvironmentRequest(properties);
                        };
    
                        /**
                         * Encodes the specified GetEnvironmentRequest message. Does not implicitly {@link google.cloud.notebooks.v1.GetEnvironmentRequest.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.notebooks.v1.GetEnvironmentRequest
                         * @static
                         * @param {google.cloud.notebooks.v1.IGetEnvironmentRequest} message GetEnvironmentRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        GetEnvironmentRequest.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified GetEnvironmentRequest message, length delimited. Does not implicitly {@link google.cloud.notebooks.v1.GetEnvironmentRequest.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.notebooks.v1.GetEnvironmentRequest
                         * @static
                         * @param {google.cloud.notebooks.v1.IGetEnvironmentRequest} message GetEnvironmentRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        GetEnvironmentRequest.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a GetEnvironmentRequest message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.notebooks.v1.GetEnvironmentRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.notebooks.v1.GetEnvironmentRequest} GetEnvironmentRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        GetEnvironmentRequest.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.notebooks.v1.GetEnvironmentRequest();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.name = reader.string();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a GetEnvironmentRequest message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.notebooks.v1.GetEnvironmentRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.notebooks.v1.GetEnvironmentRequest} GetEnvironmentRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        GetEnvironmentRequest.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a GetEnvironmentRequest message.
                         * @function verify
                         * @memberof google.cloud.notebooks.v1.GetEnvironmentRequest
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        GetEnvironmentRequest.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.name != null && message.hasOwnProperty("name"))
                                if (!$util.isString(message.name))
                                    return "name: string expected";
                            return null;
                        };
    
                        /**
                         * Creates a GetEnvironmentRequest message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.notebooks.v1.GetEnvironmentRequest
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.notebooks.v1.GetEnvironmentRequest} GetEnvironmentRequest
                         */
                        GetEnvironmentRequest.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.notebooks.v1.GetEnvironmentRequest)
                                return object;
                            var message = new $root.google.cloud.notebooks.v1.GetEnvironmentRequest();
                            if (object.name != null)
                                message.name = String(object.name);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a GetEnvironmentRequest message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.notebooks.v1.GetEnvironmentRequest
                         * @static
                         * @param {google.cloud.notebooks.v1.GetEnvironmentRequest} message GetEnvironmentRequest
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        GetEnvironmentRequest.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults)
                                object.name = "";
                            if (message.name != null && message.hasOwnProperty("name"))
                                object.name = message.name;
                            return object;
                        };
    
                        /**
                         * Converts this GetEnvironmentRequest to JSON.
                         * @function toJSON
                         * @memberof google.cloud.notebooks.v1.GetEnvironmentRequest
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        GetEnvironmentRequest.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for GetEnvironmentRequest
                         * @function getTypeUrl
                         * @memberof google.cloud.notebooks.v1.GetEnvironmentRequest
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        GetEnvironmentRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.notebooks.v1.GetEnvironmentRequest";
                        };
    
                        return GetEnvironmentRequest;
                    })();
    
                    v1.CreateEnvironmentRequest = (function() {
    
                        /**
                         * Properties of a CreateEnvironmentRequest.
                         * @memberof google.cloud.notebooks.v1
                         * @interface ICreateEnvironmentRequest
                         * @property {string|null} [parent] CreateEnvironmentRequest parent
                         * @property {string|null} [environmentId] CreateEnvironmentRequest environmentId
                         * @property {google.cloud.notebooks.v1.IEnvironment|null} [environment] CreateEnvironmentRequest environment
                         */
    
                        /**
                         * Constructs a new CreateEnvironmentRequest.
                         * @memberof google.cloud.notebooks.v1
                         * @classdesc Represents a CreateEnvironmentRequest.
                         * @implements ICreateEnvironmentRequest
                         * @constructor
                         * @param {google.cloud.notebooks.v1.ICreateEnvironmentRequest=} [properties] Properties to set
                         */
                        function CreateEnvironmentRequest(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * CreateEnvironmentRequest parent.
                         * @member {string} parent
                         * @memberof google.cloud.notebooks.v1.CreateEnvironmentRequest
                         * @instance
                         */
                        CreateEnvironmentRequest.prototype.parent = "";
    
                        /**
                         * CreateEnvironmentRequest environmentId.
                         * @member {string} environmentId
                         * @memberof google.cloud.notebooks.v1.CreateEnvironmentRequest
                         * @instance
                         */
                        CreateEnvironmentRequest.prototype.environmentId = "";
    
                        /**
                         * CreateEnvironmentRequest environment.
                         * @member {google.cloud.notebooks.v1.IEnvironment|null|undefined} environment
                         * @memberof google.cloud.notebooks.v1.CreateEnvironmentRequest
                         * @instance
                         */
                        CreateEnvironmentRequest.prototype.environment = null;
    
                        /**
                         * Creates a new CreateEnvironmentRequest instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.notebooks.v1.CreateEnvironmentRequest
                         * @static
                         * @param {google.cloud.notebooks.v1.ICreateEnvironmentRequest=} [properties] Properties to set
                         * @returns {google.cloud.notebooks.v1.CreateEnvironmentRequest} CreateEnvironmentRequest instance
                         */
                        CreateEnvironmentRequest.create = function create(properties) {
                            return new CreateEnvironmentRequest(properties);
                        };
    
                        /**
                         * Encodes the specified CreateEnvironmentRequest message. Does not implicitly {@link google.cloud.notebooks.v1.CreateEnvironmentRequest.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.notebooks.v1.CreateEnvironmentRequest
                         * @static
                         * @param {google.cloud.notebooks.v1.ICreateEnvironmentRequest} message CreateEnvironmentRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        CreateEnvironmentRequest.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.parent != null && Object.hasOwnProperty.call(message, "parent"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.parent);
                            if (message.environmentId != null && Object.hasOwnProperty.call(message, "environmentId"))
                                writer.uint32(/* id 2, wireType 2 =*/18).string(message.environmentId);
                            if (message.environment != null && Object.hasOwnProperty.call(message, "environment"))
                                $root.google.cloud.notebooks.v1.Environment.encode(message.environment, writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();
                            return writer;
                        };
    
                        /**
                         * Encodes the specified CreateEnvironmentRequest message, length delimited. Does not implicitly {@link google.cloud.notebooks.v1.CreateEnvironmentRequest.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.notebooks.v1.CreateEnvironmentRequest
                         * @static
                         * @param {google.cloud.notebooks.v1.ICreateEnvironmentRequest} message CreateEnvironmentRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        CreateEnvironmentRequest.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a CreateEnvironmentRequest message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.notebooks.v1.CreateEnvironmentRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.notebooks.v1.CreateEnvironmentRequest} CreateEnvironmentRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        CreateEnvironmentRequest.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.notebooks.v1.CreateEnvironmentRequest();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.parent = reader.string();
                                        break;
                                    }
                                case 2: {
                                        message.environmentId = reader.string();
                                        break;
                                    }
                                case 3: {
                                        message.environment = $root.google.cloud.notebooks.v1.Environment.decode(reader, reader.uint32());
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a CreateEnvironmentRequest message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.notebooks.v1.CreateEnvironmentRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.notebooks.v1.CreateEnvironmentRequest} CreateEnvironmentRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        CreateEnvironmentRequest.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a CreateEnvironmentRequest message.
                         * @function verify
                         * @memberof google.cloud.notebooks.v1.CreateEnvironmentRequest
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        CreateEnvironmentRequest.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.parent != null && message.hasOwnProperty("parent"))
                                if (!$util.isString(message.parent))
                                    return "parent: string expected";
                            if (message.environmentId != null && message.hasOwnProperty("environmentId"))
                                if (!$util.isString(message.environmentId))
                                    return "environmentId: string expected";
                            if (message.environment != null && message.hasOwnProperty("environment")) {
                                var error = $root.google.cloud.notebooks.v1.Environment.verify(message.environment);
                                if (error)
                                    return "environment." + error;
                            }
                            return null;
                        };
    
                        /**
                         * Creates a CreateEnvironmentRequest message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.notebooks.v1.CreateEnvironmentRequest
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.notebooks.v1.CreateEnvironmentRequest} CreateEnvironmentRequest
                         */
                        CreateEnvironmentRequest.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.notebooks.v1.CreateEnvironmentRequest)
                                return object;
                            var message = new $root.google.cloud.notebooks.v1.CreateEnvironmentRequest();
                            if (object.parent != null)
                                message.parent = String(object.parent);
                            if (object.environmentId != null)
                                message.environmentId = String(object.environmentId);
                            if (object.environment != null) {
                                if (typeof object.environment !== "object")
                                    throw TypeError(".google.cloud.notebooks.v1.CreateEnvironmentRequest.environment: object expected");
                                message.environment = $root.google.cloud.notebooks.v1.Environment.fromObject(object.environment);
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a CreateEnvironmentRequest message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.notebooks.v1.CreateEnvironmentRequest
                         * @static
                         * @param {google.cloud.notebooks.v1.CreateEnvironmentRequest} message CreateEnvironmentRequest
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        CreateEnvironmentRequest.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.parent = "";
                                object.environmentId = "";
                                object.environment = null;
                            }
                            if (message.parent != null && message.hasOwnProperty("parent"))
                                object.parent = message.parent;
                            if (message.environmentId != null && message.hasOwnProperty("environmentId"))
                                object.environmentId = message.environmentId;
                            if (message.environment != null && message.hasOwnProperty("environment"))
                                object.environment = $root.google.cloud.notebooks.v1.Environment.toObject(message.environment, options);
                            return object;
                        };
    
                        /**
                         * Converts this CreateEnvironmentRequest to JSON.
                         * @function toJSON
                         * @memberof google.cloud.notebooks.v1.CreateEnvironmentRequest
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        CreateEnvironmentRequest.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for CreateEnvironmentRequest
                         * @function getTypeUrl
                         * @memberof google.cloud.notebooks.v1.CreateEnvironmentRequest
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        CreateEnvironmentRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.notebooks.v1.CreateEnvironmentRequest";
                        };
    
                        return CreateEnvironmentRequest;
                    })();
    
                    v1.DeleteEnvironmentRequest = (function() {
    
                        /**
                         * Properties of a DeleteEnvironmentRequest.
                         * @memberof google.cloud.notebooks.v1
                         * @interface IDeleteEnvironmentRequest
                         * @property {string|null} [name] DeleteEnvironmentRequest name
                         */
    
                        /**
                         * Constructs a new DeleteEnvironmentRequest.
                         * @memberof google.cloud.notebooks.v1
                         * @classdesc Represents a DeleteEnvironmentRequest.
                         * @implements IDeleteEnvironmentRequest
                         * @constructor
                         * @param {google.cloud.notebooks.v1.IDeleteEnvironmentRequest=} [properties] Properties to set
                         */
                        function DeleteEnvironmentRequest(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * DeleteEnvironmentRequest name.
                         * @member {string} name
                         * @memberof google.cloud.notebooks.v1.DeleteEnvironmentRequest
                         * @instance
                         */
                        DeleteEnvironmentRequest.prototype.name = "";
    
                        /**
                         * Creates a new DeleteEnvironmentRequest instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.notebooks.v1.DeleteEnvironmentRequest
                         * @static
                         * @param {google.cloud.notebooks.v1.IDeleteEnvironmentRequest=} [properties] Properties to set
                         * @returns {google.cloud.notebooks.v1.DeleteEnvironmentRequest} DeleteEnvironmentRequest instance
                         */
                        DeleteEnvironmentRequest.create = function create(properties) {
                            return new DeleteEnvironmentRequest(properties);
                        };
    
                        /**
                         * Encodes the specified DeleteEnvironmentRequest message. Does not implicitly {@link google.cloud.notebooks.v1.DeleteEnvironmentRequest.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.notebooks.v1.DeleteEnvironmentRequest
                         * @static
                         * @param {google.cloud.notebooks.v1.IDeleteEnvironmentRequest} message DeleteEnvironmentRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        DeleteEnvironmentRequest.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified DeleteEnvironmentRequest message, length delimited. Does not implicitly {@link google.cloud.notebooks.v1.DeleteEnvironmentRequest.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.notebooks.v1.DeleteEnvironmentRequest
                         * @static
                         * @param {google.cloud.notebooks.v1.IDeleteEnvironmentRequest} message DeleteEnvironmentRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        DeleteEnvironmentRequest.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a DeleteEnvironmentRequest message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.notebooks.v1.DeleteEnvironmentRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.notebooks.v1.DeleteEnvironmentRequest} DeleteEnvironmentRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        DeleteEnvironmentRequest.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.notebooks.v1.DeleteEnvironmentRequest();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.name = reader.string();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a DeleteEnvironmentRequest message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.notebooks.v1.DeleteEnvironmentRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.notebooks.v1.DeleteEnvironmentRequest} DeleteEnvironmentRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        DeleteEnvironmentRequest.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a DeleteEnvironmentRequest message.
                         * @function verify
                         * @memberof google.cloud.notebooks.v1.DeleteEnvironmentRequest
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        DeleteEnvironmentRequest.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.name != null && message.hasOwnProperty("name"))
                                if (!$util.isString(message.name))
                                    return "name: string expected";
                            return null;
                        };
    
                        /**
                         * Creates a DeleteEnvironmentRequest message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.notebooks.v1.DeleteEnvironmentRequest
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.notebooks.v1.DeleteEnvironmentRequest} DeleteEnvironmentRequest
                         */
                        DeleteEnvironmentRequest.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.notebooks.v1.DeleteEnvironmentRequest)
                                return object;
                            var message = new $root.google.cloud.notebooks.v1.DeleteEnvironmentRequest();
                            if (object.name != null)
                                message.name = String(object.name);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a DeleteEnvironmentRequest message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.notebooks.v1.DeleteEnvironmentRequest
                         * @static
                         * @param {google.cloud.notebooks.v1.DeleteEnvironmentRequest} message DeleteEnvironmentRequest
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        DeleteEnvironmentRequest.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults)
                                object.name = "";
                            if (message.name != null && message.hasOwnProperty("name"))
                                object.name = message.name;
                            return object;
                        };
    
                        /**
                         * Converts this DeleteEnvironmentRequest to JSON.
                         * @function toJSON
                         * @memberof google.cloud.notebooks.v1.DeleteEnvironmentRequest
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        DeleteEnvironmentRequest.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for DeleteEnvironmentRequest
                         * @function getTypeUrl
                         * @memberof google.cloud.notebooks.v1.DeleteEnvironmentRequest
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        DeleteEnvironmentRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.notebooks.v1.DeleteEnvironmentRequest";
                        };
    
                        return DeleteEnvironmentRequest;
                    })();
    
                    v1.ListSchedulesRequest = (function() {
    
                        /**
                         * Properties of a ListSchedulesRequest.
                         * @memberof google.cloud.notebooks.v1
                         * @interface IListSchedulesRequest
                         * @property {string|null} [parent] ListSchedulesRequest parent
                         * @property {number|null} [pageSize] ListSchedulesRequest pageSize
                         * @property {string|null} [pageToken] ListSchedulesRequest pageToken
                         * @property {string|null} [filter] ListSchedulesRequest filter
                         * @property {string|null} [orderBy] ListSchedulesRequest orderBy
                         */
    
                        /**
                         * Constructs a new ListSchedulesRequest.
                         * @memberof google.cloud.notebooks.v1
                         * @classdesc Represents a ListSchedulesRequest.
                         * @implements IListSchedulesRequest
                         * @constructor
                         * @param {google.cloud.notebooks.v1.IListSchedulesRequest=} [properties] Properties to set
                         */
                        function ListSchedulesRequest(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * ListSchedulesRequest parent.
                         * @member {string} parent
                         * @memberof google.cloud.notebooks.v1.ListSchedulesRequest
                         * @instance
                         */
                        ListSchedulesRequest.prototype.parent = "";
    
                        /**
                         * ListSchedulesRequest pageSize.
                         * @member {number} pageSize
                         * @memberof google.cloud.notebooks.v1.ListSchedulesRequest
                         * @instance
                         */
                        ListSchedulesRequest.prototype.pageSize = 0;
    
                        /**
                         * ListSchedulesRequest pageToken.
                         * @member {string} pageToken
                         * @memberof google.cloud.notebooks.v1.ListSchedulesRequest
                         * @instance
                         */
                        ListSchedulesRequest.prototype.pageToken = "";
    
                        /**
                         * ListSchedulesRequest filter.
                         * @member {string} filter
                         * @memberof google.cloud.notebooks.v1.ListSchedulesRequest
                         * @instance
                         */
                        ListSchedulesRequest.prototype.filter = "";
    
                        /**
                         * ListSchedulesRequest orderBy.
                         * @member {string} orderBy
                         * @memberof google.cloud.notebooks.v1.ListSchedulesRequest
                         * @instance
                         */
                        ListSchedulesRequest.prototype.orderBy = "";
    
                        /**
                         * Creates a new ListSchedulesRequest instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.notebooks.v1.ListSchedulesRequest
                         * @static
                         * @param {google.cloud.notebooks.v1.IListSchedulesRequest=} [properties] Properties to set
                         * @returns {google.cloud.notebooks.v1.ListSchedulesRequest} ListSchedulesRequest instance
                         */
                        ListSchedulesRequest.create = function create(properties) {
                            return new ListSchedulesRequest(properties);
                        };
    
                        /**
                         * Encodes the specified ListSchedulesRequest message. Does not implicitly {@link google.cloud.notebooks.v1.ListSchedulesRequest.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.notebooks.v1.ListSchedulesRequest
                         * @static
                         * @param {google.cloud.notebooks.v1.IListSchedulesRequest} message ListSchedulesRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        ListSchedulesRequest.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.parent != null && Object.hasOwnProperty.call(message, "parent"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.parent);
                            if (message.pageSize != null && Object.hasOwnProperty.call(message, "pageSize"))
                                writer.uint32(/* id 2, wireType 0 =*/16).int32(message.pageSize);
                            if (message.pageToken != null && Object.hasOwnProperty.call(message, "pageToken"))
                                writer.uint32(/* id 3, wireType 2 =*/26).string(message.pageToken);
                            if (message.filter != null && Object.hasOwnProperty.call(message, "filter"))
                                writer.uint32(/* id 4, wireType 2 =*/34).string(message.filter);
                            if (message.orderBy != null && Object.hasOwnProperty.call(message, "orderBy"))
                                writer.uint32(/* id 5, wireType 2 =*/42).string(message.orderBy);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified ListSchedulesRequest message, length delimited. Does not implicitly {@link google.cloud.notebooks.v1.ListSchedulesRequest.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.notebooks.v1.ListSchedulesRequest
                         * @static
                         * @param {google.cloud.notebooks.v1.IListSchedulesRequest} message ListSchedulesRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        ListSchedulesRequest.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a ListSchedulesRequest message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.notebooks.v1.ListSchedulesRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.notebooks.v1.ListSchedulesRequest} ListSchedulesRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        ListSchedulesRequest.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.notebooks.v1.ListSchedulesRequest();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.parent = reader.string();
                                        break;
                                    }
                                case 2: {
                                        message.pageSize = reader.int32();
                                        break;
                                    }
                                case 3: {
                                        message.pageToken = reader.string();
                                        break;
                                    }
                                case 4: {
                                        message.filter = reader.string();
                                        break;
                                    }
                                case 5: {
                                        message.orderBy = reader.string();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a ListSchedulesRequest message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.notebooks.v1.ListSchedulesRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.notebooks.v1.ListSchedulesRequest} ListSchedulesRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        ListSchedulesRequest.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a ListSchedulesRequest message.
                         * @function verify
                         * @memberof google.cloud.notebooks.v1.ListSchedulesRequest
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        ListSchedulesRequest.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.parent != null && message.hasOwnProperty("parent"))
                                if (!$util.isString(message.parent))
                                    return "parent: string expected";
                            if (message.pageSize != null && message.hasOwnProperty("pageSize"))
                                if (!$util.isInteger(message.pageSize))
                                    return "pageSize: integer expected";
                            if (message.pageToken != null && message.hasOwnProperty("pageToken"))
                                if (!$util.isString(message.pageToken))
                                    return "pageToken: string expected";
                            if (message.filter != null && message.hasOwnProperty("filter"))
                                if (!$util.isString(message.filter))
                                    return "filter: string expected";
                            if (message.orderBy != null && message.hasOwnProperty("orderBy"))
                                if (!$util.isString(message.orderBy))
                                    return "orderBy: string expected";
                            return null;
                        };
    
                        /**
                         * Creates a ListSchedulesRequest message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.notebooks.v1.ListSchedulesRequest
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.notebooks.v1.ListSchedulesRequest} ListSchedulesRequest
                         */
                        ListSchedulesRequest.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.notebooks.v1.ListSchedulesRequest)
                                return object;
                            var message = new $root.google.cloud.notebooks.v1.ListSchedulesRequest();
                            if (object.parent != null)
                                message.parent = String(object.parent);
                            if (object.pageSize != null)
                                message.pageSize = object.pageSize | 0;
                            if (object.pageToken != null)
                                message.pageToken = String(object.pageToken);
                            if (object.filter != null)
                                message.filter = String(object.filter);
                            if (object.orderBy != null)
                                message.orderBy = String(object.orderBy);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a ListSchedulesRequest message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.notebooks.v1.ListSchedulesRequest
                         * @static
                         * @param {google.cloud.notebooks.v1.ListSchedulesRequest} message ListSchedulesRequest
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        ListSchedulesRequest.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.parent = "";
                                object.pageSize = 0;
                                object.pageToken = "";
                                object.filter = "";
                                object.orderBy = "";
                            }
                            if (message.parent != null && message.hasOwnProperty("parent"))
                                object.parent = message.parent;
                            if (message.pageSize != null && message.hasOwnProperty("pageSize"))
                                object.pageSize = message.pageSize;
                            if (message.pageToken != null && message.hasOwnProperty("pageToken"))
                                object.pageToken = message.pageToken;
                            if (message.filter != null && message.hasOwnProperty("filter"))
                                object.filter = message.filter;
                            if (message.orderBy != null && message.hasOwnProperty("orderBy"))
                                object.orderBy = message.orderBy;
                            return object;
                        };
    
                        /**
                         * Converts this ListSchedulesRequest to JSON.
                         * @function toJSON
                         * @memberof google.cloud.notebooks.v1.ListSchedulesRequest
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        ListSchedulesRequest.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for ListSchedulesRequest
                         * @function getTypeUrl
                         * @memberof google.cloud.notebooks.v1.ListSchedulesRequest
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        ListSchedulesRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.notebooks.v1.ListSchedulesRequest";
                        };
    
                        return ListSchedulesRequest;
                    })();
    
                    v1.ListSchedulesResponse = (function() {
    
                        /**
                         * Properties of a ListSchedulesResponse.
                         * @memberof google.cloud.notebooks.v1
                         * @interface IListSchedulesResponse
                         * @property {Array.<google.cloud.notebooks.v1.ISchedule>|null} [schedules] ListSchedulesResponse schedules
                         * @property {string|null} [nextPageToken] ListSchedulesResponse nextPageToken
                         * @property {Array.<string>|null} [unreachable] ListSchedulesResponse unreachable
                         */
    
                        /**
                         * Constructs a new ListSchedulesResponse.
                         * @memberof google.cloud.notebooks.v1
                         * @classdesc Represents a ListSchedulesResponse.
                         * @implements IListSchedulesResponse
                         * @constructor
                         * @param {google.cloud.notebooks.v1.IListSchedulesResponse=} [properties] Properties to set
                         */
                        function ListSchedulesResponse(properties) {
                            this.schedules = [];
                            this.unreachable = [];
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * ListSchedulesResponse schedules.
                         * @member {Array.<google.cloud.notebooks.v1.ISchedule>} schedules
                         * @memberof google.cloud.notebooks.v1.ListSchedulesResponse
                         * @instance
                         */
                        ListSchedulesResponse.prototype.schedules = $util.emptyArray;
    
                        /**
                         * ListSchedulesResponse nextPageToken.
                         * @member {string} nextPageToken
                         * @memberof google.cloud.notebooks.v1.ListSchedulesResponse
                         * @instance
                         */
                        ListSchedulesResponse.prototype.nextPageToken = "";
    
                        /**
                         * ListSchedulesResponse unreachable.
                         * @member {Array.<string>} unreachable
                         * @memberof google.cloud.notebooks.v1.ListSchedulesResponse
                         * @instance
                         */
                        ListSchedulesResponse.prototype.unreachable = $util.emptyArray;
    
                        /**
                         * Creates a new ListSchedulesResponse instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.notebooks.v1.ListSchedulesResponse
                         * @static
                         * @param {google.cloud.notebooks.v1.IListSchedulesResponse=} [properties] Properties to set
                         * @returns {google.cloud.notebooks.v1.ListSchedulesResponse} ListSchedulesResponse instance
                         */
                        ListSchedulesResponse.create = function create(properties) {
                            return new ListSchedulesResponse(properties);
                        };
    
                        /**
                         * Encodes the specified ListSchedulesResponse message. Does not implicitly {@link google.cloud.notebooks.v1.ListSchedulesResponse.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.notebooks.v1.ListSchedulesResponse
                         * @static
                         * @param {google.cloud.notebooks.v1.IListSchedulesResponse} message ListSchedulesResponse message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        ListSchedulesResponse.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.schedules != null && message.schedules.length)
                                for (var i = 0; i < message.schedules.length; ++i)
                                    $root.google.cloud.notebooks.v1.Schedule.encode(message.schedules[i], writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                            if (message.nextPageToken != null && Object.hasOwnProperty.call(message, "nextPageToken"))
                                writer.uint32(/* id 2, wireType 2 =*/18).string(message.nextPageToken);
                            if (message.unreachable != null && message.unreachable.length)
                                for (var i = 0; i < message.unreachable.length; ++i)
                                    writer.uint32(/* id 3, wireType 2 =*/26).string(message.unreachable[i]);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified ListSchedulesResponse message, length delimited. Does not implicitly {@link google.cloud.notebooks.v1.ListSchedulesResponse.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.notebooks.v1.ListSchedulesResponse
                         * @static
                         * @param {google.cloud.notebooks.v1.IListSchedulesResponse} message ListSchedulesResponse message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        ListSchedulesResponse.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a ListSchedulesResponse message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.notebooks.v1.ListSchedulesResponse
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.notebooks.v1.ListSchedulesResponse} ListSchedulesResponse
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        ListSchedulesResponse.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.notebooks.v1.ListSchedulesResponse();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        if (!(message.schedules && message.schedules.length))
                                            message.schedules = [];
                                        message.schedules.push($root.google.cloud.notebooks.v1.Schedule.decode(reader, reader.uint32()));
                                        break;
                                    }
                                case 2: {
                                        message.nextPageToken = reader.string();
                                        break;
                                    }
                                case 3: {
                                        if (!(message.unreachable && message.unreachable.length))
                                            message.unreachable = [];
                                        message.unreachable.push(reader.string());
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a ListSchedulesResponse message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.notebooks.v1.ListSchedulesResponse
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.notebooks.v1.ListSchedulesResponse} ListSchedulesResponse
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        ListSchedulesResponse.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a ListSchedulesResponse message.
                         * @function verify
                         * @memberof google.cloud.notebooks.v1.ListSchedulesResponse
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        ListSchedulesResponse.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.schedules != null && message.hasOwnProperty("schedules")) {
                                if (!Array.isArray(message.schedules))
                                    return "schedules: array expected";
                                for (var i = 0; i < message.schedules.length; ++i) {
                                    var error = $root.google.cloud.notebooks.v1.Schedule.verify(message.schedules[i]);
                                    if (error)
                                        return "schedules." + error;
                                }
                            }
                            if (message.nextPageToken != null && message.hasOwnProperty("nextPageToken"))
                                if (!$util.isString(message.nextPageToken))
                                    return "nextPageToken: string expected";
                            if (message.unreachable != null && message.hasOwnProperty("unreachable")) {
                                if (!Array.isArray(message.unreachable))
                                    return "unreachable: array expected";
                                for (var i = 0; i < message.unreachable.length; ++i)
                                    if (!$util.isString(message.unreachable[i]))
                                        return "unreachable: string[] expected";
                            }
                            return null;
                        };
    
                        /**
                         * Creates a ListSchedulesResponse message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.notebooks.v1.ListSchedulesResponse
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.notebooks.v1.ListSchedulesResponse} ListSchedulesResponse
                         */
                        ListSchedulesResponse.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.notebooks.v1.ListSchedulesResponse)
                                return object;
                            var message = new $root.google.cloud.notebooks.v1.ListSchedulesResponse();
                            if (object.schedules) {
                                if (!Array.isArray(object.schedules))
                                    throw TypeError(".google.cloud.notebooks.v1.ListSchedulesResponse.schedules: array expected");
                                message.schedules = [];
                                for (var i = 0; i < object.schedules.length; ++i) {
                                    if (typeof object.schedules[i] !== "object")
                                        throw TypeError(".google.cloud.notebooks.v1.ListSchedulesResponse.schedules: object expected");
                                    message.schedules[i] = $root.google.cloud.notebooks.v1.Schedule.fromObject(object.schedules[i]);
                                }
                            }
                            if (object.nextPageToken != null)
                                message.nextPageToken = String(object.nextPageToken);
                            if (object.unreachable) {
                                if (!Array.isArray(object.unreachable))
                                    throw TypeError(".google.cloud.notebooks.v1.ListSchedulesResponse.unreachable: array expected");
                                message.unreachable = [];
                                for (var i = 0; i < object.unreachable.length; ++i)
                                    message.unreachable[i] = String(object.unreachable[i]);
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a ListSchedulesResponse message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.notebooks.v1.ListSchedulesResponse
                         * @static
                         * @param {google.cloud.notebooks.v1.ListSchedulesResponse} message ListSchedulesResponse
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        ListSchedulesResponse.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.arrays || options.defaults) {
                                object.schedules = [];
                                object.unreachable = [];
                            }
                            if (options.defaults)
                                object.nextPageToken = "";
                            if (message.schedules && message.schedules.length) {
                                object.schedules = [];
                                for (var j = 0; j < message.schedules.length; ++j)
                                    object.schedules[j] = $root.google.cloud.notebooks.v1.Schedule.toObject(message.schedules[j], options);
                            }
                            if (message.nextPageToken != null && message.hasOwnProperty("nextPageToken"))
                                object.nextPageToken = message.nextPageToken;
                            if (message.unreachable && message.unreachable.length) {
                                object.unreachable = [];
                                for (var j = 0; j < message.unreachable.length; ++j)
                                    object.unreachable[j] = message.unreachable[j];
                            }
                            return object;
                        };
    
                        /**
                         * Converts this ListSchedulesResponse to JSON.
                         * @function toJSON
                         * @memberof google.cloud.notebooks.v1.ListSchedulesResponse
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        ListSchedulesResponse.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for ListSchedulesResponse
                         * @function getTypeUrl
                         * @memberof google.cloud.notebooks.v1.ListSchedulesResponse
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        ListSchedulesResponse.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.notebooks.v1.ListSchedulesResponse";
                        };
    
                        return ListSchedulesResponse;
                    })();
    
                    v1.GetScheduleRequest = (function() {
    
                        /**
                         * Properties of a GetScheduleRequest.
                         * @memberof google.cloud.notebooks.v1
                         * @interface IGetScheduleRequest
                         * @property {string|null} [name] GetScheduleRequest name
                         */
    
                        /**
                         * Constructs a new GetScheduleRequest.
                         * @memberof google.cloud.notebooks.v1
                         * @classdesc Represents a GetScheduleRequest.
                         * @implements IGetScheduleRequest
                         * @constructor
                         * @param {google.cloud.notebooks.v1.IGetScheduleRequest=} [properties] Properties to set
                         */
                        function GetScheduleRequest(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * GetScheduleRequest name.
                         * @member {string} name
                         * @memberof google.cloud.notebooks.v1.GetScheduleRequest
                         * @instance
                         */
                        GetScheduleRequest.prototype.name = "";
    
                        /**
                         * Creates a new GetScheduleRequest instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.notebooks.v1.GetScheduleRequest
                         * @static
                         * @param {google.cloud.notebooks.v1.IGetScheduleRequest=} [properties] Properties to set
                         * @returns {google.cloud.notebooks.v1.GetScheduleRequest} GetScheduleRequest instance
                         */
                        GetScheduleRequest.create = function create(properties) {
                            return new GetScheduleRequest(properties);
                        };
    
                        /**
                         * Encodes the specified GetScheduleRequest message. Does not implicitly {@link google.cloud.notebooks.v1.GetScheduleRequest.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.notebooks.v1.GetScheduleRequest
                         * @static
                         * @param {google.cloud.notebooks.v1.IGetScheduleRequest} message GetScheduleRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        GetScheduleRequest.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified GetScheduleRequest message, length delimited. Does not implicitly {@link google.cloud.notebooks.v1.GetScheduleRequest.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.notebooks.v1.GetScheduleRequest
                         * @static
                         * @param {google.cloud.notebooks.v1.IGetScheduleRequest} message GetScheduleRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        GetScheduleRequest.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a GetScheduleRequest message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.notebooks.v1.GetScheduleRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.notebooks.v1.GetScheduleRequest} GetScheduleRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        GetScheduleRequest.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.notebooks.v1.GetScheduleRequest();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.name = reader.string();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a GetScheduleRequest message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.notebooks.v1.GetScheduleRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.notebooks.v1.GetScheduleRequest} GetScheduleRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        GetScheduleRequest.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a GetScheduleRequest message.
                         * @function verify
                         * @memberof google.cloud.notebooks.v1.GetScheduleRequest
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        GetScheduleRequest.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.name != null && message.hasOwnProperty("name"))
                                if (!$util.isString(message.name))
                                    return "name: string expected";
                            return null;
                        };
    
                        /**
                         * Creates a GetScheduleRequest message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.notebooks.v1.GetScheduleRequest
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.notebooks.v1.GetScheduleRequest} GetScheduleRequest
                         */
                        GetScheduleRequest.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.notebooks.v1.GetScheduleRequest)
                                return object;
                            var message = new $root.google.cloud.notebooks.v1.GetScheduleRequest();
                            if (object.name != null)
                                message.name = String(object.name);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a GetScheduleRequest message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.notebooks.v1.GetScheduleRequest
                         * @static
                         * @param {google.cloud.notebooks.v1.GetScheduleRequest} message GetScheduleRequest
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        GetScheduleRequest.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults)
                                object.name = "";
                            if (message.name != null && message.hasOwnProperty("name"))
                                object.name = message.name;
                            return object;
                        };
    
                        /**
                         * Converts this GetScheduleRequest to JSON.
                         * @function toJSON
                         * @memberof google.cloud.notebooks.v1.GetScheduleRequest
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        GetScheduleRequest.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for GetScheduleRequest
                         * @function getTypeUrl
                         * @memberof google.cloud.notebooks.v1.GetScheduleRequest
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        GetScheduleRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.notebooks.v1.GetScheduleRequest";
                        };
    
                        return GetScheduleRequest;
                    })();
    
                    v1.DeleteScheduleRequest = (function() {
    
                        /**
                         * Properties of a DeleteScheduleRequest.
                         * @memberof google.cloud.notebooks.v1
                         * @interface IDeleteScheduleRequest
                         * @property {string|null} [name] DeleteScheduleRequest name
                         */
    
                        /**
                         * Constructs a new DeleteScheduleRequest.
                         * @memberof google.cloud.notebooks.v1
                         * @classdesc Represents a DeleteScheduleRequest.
                         * @implements IDeleteScheduleRequest
                         * @constructor
                         * @param {google.cloud.notebooks.v1.IDeleteScheduleRequest=} [properties] Properties to set
                         */
                        function DeleteScheduleRequest(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * DeleteScheduleRequest name.
                         * @member {string} name
                         * @memberof google.cloud.notebooks.v1.DeleteScheduleRequest
                         * @instance
                         */
                        DeleteScheduleRequest.prototype.name = "";
    
                        /**
                         * Creates a new DeleteScheduleRequest instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.notebooks.v1.DeleteScheduleRequest
                         * @static
                         * @param {google.cloud.notebooks.v1.IDeleteScheduleRequest=} [properties] Properties to set
                         * @returns {google.cloud.notebooks.v1.DeleteScheduleRequest} DeleteScheduleRequest instance
                         */
                        DeleteScheduleRequest.create = function create(properties) {
                            return new DeleteScheduleRequest(properties);
                        };
    
                        /**
                         * Encodes the specified DeleteScheduleRequest message. Does not implicitly {@link google.cloud.notebooks.v1.DeleteScheduleRequest.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.notebooks.v1.DeleteScheduleRequest
                         * @static
                         * @param {google.cloud.notebooks.v1.IDeleteScheduleRequest} message DeleteScheduleRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        DeleteScheduleRequest.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified DeleteScheduleRequest message, length delimited. Does not implicitly {@link google.cloud.notebooks.v1.DeleteScheduleRequest.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.notebooks.v1.DeleteScheduleRequest
                         * @static
                         * @param {google.cloud.notebooks.v1.IDeleteScheduleRequest} message DeleteScheduleRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        DeleteScheduleRequest.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a DeleteScheduleRequest message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.notebooks.v1.DeleteScheduleRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.notebooks.v1.DeleteScheduleRequest} DeleteScheduleRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        DeleteScheduleRequest.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.notebooks.v1.DeleteScheduleRequest();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.name = reader.string();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a DeleteScheduleRequest message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.notebooks.v1.DeleteScheduleRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.notebooks.v1.DeleteScheduleRequest} DeleteScheduleRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        DeleteScheduleRequest.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a DeleteScheduleRequest message.
                         * @function verify
                         * @memberof google.cloud.notebooks.v1.DeleteScheduleRequest
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        DeleteScheduleRequest.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.name != null && message.hasOwnProperty("name"))
                                if (!$util.isString(message.name))
                                    return "name: string expected";
                            return null;
                        };
    
                        /**
                         * Creates a DeleteScheduleRequest message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.notebooks.v1.DeleteScheduleRequest
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.notebooks.v1.DeleteScheduleRequest} DeleteScheduleRequest
                         */
                        DeleteScheduleRequest.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.notebooks.v1.DeleteScheduleRequest)
                                return object;
                            var message = new $root.google.cloud.notebooks.v1.DeleteScheduleRequest();
                            if (object.name != null)
                                message.name = String(object.name);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a DeleteScheduleRequest message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.notebooks.v1.DeleteScheduleRequest
                         * @static
                         * @param {google.cloud.notebooks.v1.DeleteScheduleRequest} message DeleteScheduleRequest
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        DeleteScheduleRequest.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults)
                                object.name = "";
                            if (message.name != null && message.hasOwnProperty("name"))
                                object.name = message.name;
                            return object;
                        };
    
                        /**
                         * Converts this DeleteScheduleRequest to JSON.
                         * @function toJSON
                         * @memberof google.cloud.notebooks.v1.DeleteScheduleRequest
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        DeleteScheduleRequest.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for DeleteScheduleRequest
                         * @function getTypeUrl
                         * @memberof google.cloud.notebooks.v1.DeleteScheduleRequest
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        DeleteScheduleRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.notebooks.v1.DeleteScheduleRequest";
                        };
    
                        return DeleteScheduleRequest;
                    })();
    
                    v1.CreateScheduleRequest = (function() {
    
                        /**
                         * Properties of a CreateScheduleRequest.
                         * @memberof google.cloud.notebooks.v1
                         * @interface ICreateScheduleRequest
                         * @property {string|null} [parent] CreateScheduleRequest parent
                         * @property {string|null} [scheduleId] CreateScheduleRequest scheduleId
                         * @property {google.cloud.notebooks.v1.ISchedule|null} [schedule] CreateScheduleRequest schedule
                         */
    
                        /**
                         * Constructs a new CreateScheduleRequest.
                         * @memberof google.cloud.notebooks.v1
                         * @classdesc Represents a CreateScheduleRequest.
                         * @implements ICreateScheduleRequest
                         * @constructor
                         * @param {google.cloud.notebooks.v1.ICreateScheduleRequest=} [properties] Properties to set
                         */
                        function CreateScheduleRequest(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * CreateScheduleRequest parent.
                         * @member {string} parent
                         * @memberof google.cloud.notebooks.v1.CreateScheduleRequest
                         * @instance
                         */
                        CreateScheduleRequest.prototype.parent = "";
    
                        /**
                         * CreateScheduleRequest scheduleId.
                         * @member {string} scheduleId
                         * @memberof google.cloud.notebooks.v1.CreateScheduleRequest
                         * @instance
                         */
                        CreateScheduleRequest.prototype.scheduleId = "";
    
                        /**
                         * CreateScheduleRequest schedule.
                         * @member {google.cloud.notebooks.v1.ISchedule|null|undefined} schedule
                         * @memberof google.cloud.notebooks.v1.CreateScheduleRequest
                         * @instance
                         */
                        CreateScheduleRequest.prototype.schedule = null;
    
                        /**
                         * Creates a new CreateScheduleRequest instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.notebooks.v1.CreateScheduleRequest
                         * @static
                         * @param {google.cloud.notebooks.v1.ICreateScheduleRequest=} [properties] Properties to set
                         * @returns {google.cloud.notebooks.v1.CreateScheduleRequest} CreateScheduleRequest instance
                         */
                        CreateScheduleRequest.create = function create(properties) {
                            return new CreateScheduleRequest(properties);
                        };
    
                        /**
                         * Encodes the specified CreateScheduleRequest message. Does not implicitly {@link google.cloud.notebooks.v1.CreateScheduleRequest.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.notebooks.v1.CreateScheduleRequest
                         * @static
                         * @param {google.cloud.notebooks.v1.ICreateScheduleRequest} message CreateScheduleRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        CreateScheduleRequest.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.parent != null && Object.hasOwnProperty.call(message, "parent"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.parent);
                            if (message.scheduleId != null && Object.hasOwnProperty.call(message, "scheduleId"))
                                writer.uint32(/* id 2, wireType 2 =*/18).string(message.scheduleId);
                            if (message.schedule != null && Object.hasOwnProperty.call(message, "schedule"))
                                $root.google.cloud.notebooks.v1.Schedule.encode(message.schedule, writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();
                            return writer;
                        };
    
                        /**
                         * Encodes the specified CreateScheduleRequest message, length delimited. Does not implicitly {@link google.cloud.notebooks.v1.CreateScheduleRequest.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.notebooks.v1.CreateScheduleRequest
                         * @static
                         * @param {google.cloud.notebooks.v1.ICreateScheduleRequest} message CreateScheduleRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        CreateScheduleRequest.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a CreateScheduleRequest message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.notebooks.v1.CreateScheduleRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.notebooks.v1.CreateScheduleRequest} CreateScheduleRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        CreateScheduleRequest.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.notebooks.v1.CreateScheduleRequest();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.parent = reader.string();
                                        break;
                                    }
                                case 2: {
                                        message.scheduleId = reader.string();
                                        break;
                                    }
                                case 3: {
                                        message.schedule = $root.google.cloud.notebooks.v1.Schedule.decode(reader, reader.uint32());
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a CreateScheduleRequest message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.notebooks.v1.CreateScheduleRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.notebooks.v1.CreateScheduleRequest} CreateScheduleRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        CreateScheduleRequest.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a CreateScheduleRequest message.
                         * @function verify
                         * @memberof google.cloud.notebooks.v1.CreateScheduleRequest
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        CreateScheduleRequest.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.parent != null && message.hasOwnProperty("parent"))
                                if (!$util.isString(message.parent))
                                    return "parent: string expected";
                            if (message.scheduleId != null && message.hasOwnProperty("scheduleId"))
                                if (!$util.isString(message.scheduleId))
                                    return "scheduleId: string expected";
                            if (message.schedule != null && message.hasOwnProperty("schedule")) {
                                var error = $root.google.cloud.notebooks.v1.Schedule.verify(message.schedule);
                                if (error)
                                    return "schedule." + error;
                            }
                            return null;
                        };
    
                        /**
                         * Creates a CreateScheduleRequest message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.notebooks.v1.CreateScheduleRequest
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.notebooks.v1.CreateScheduleRequest} CreateScheduleRequest
                         */
                        CreateScheduleRequest.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.notebooks.v1.CreateScheduleRequest)
                                return object;
                            var message = new $root.google.cloud.notebooks.v1.CreateScheduleRequest();
                            if (object.parent != null)
                                message.parent = String(object.parent);
                            if (object.scheduleId != null)
                                message.scheduleId = String(object.scheduleId);
                            if (object.schedule != null) {
                                if (typeof object.schedule !== "object")
                                    throw TypeError(".google.cloud.notebooks.v1.CreateScheduleRequest.schedule: object expected");
                                message.schedule = $root.google.cloud.notebooks.v1.Schedule.fromObject(object.schedule);
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a CreateScheduleRequest message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.notebooks.v1.CreateScheduleRequest
                         * @static
                         * @param {google.cloud.notebooks.v1.CreateScheduleRequest} message CreateScheduleRequest
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        CreateScheduleRequest.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.parent = "";
                                object.scheduleId = "";
                                object.schedule = null;
                            }
                            if (message.parent != null && message.hasOwnProperty("parent"))
                                object.parent = message.parent;
                            if (message.scheduleId != null && message.hasOwnProperty("scheduleId"))
                                object.scheduleId = message.scheduleId;
                            if (message.schedule != null && message.hasOwnProperty("schedule"))
                                object.schedule = $root.google.cloud.notebooks.v1.Schedule.toObject(message.schedule, options);
                            return object;
                        };
    
                        /**
                         * Converts this CreateScheduleRequest to JSON.
                         * @function toJSON
                         * @memberof google.cloud.notebooks.v1.CreateScheduleRequest
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        CreateScheduleRequest.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for CreateScheduleRequest
                         * @function getTypeUrl
                         * @memberof google.cloud.notebooks.v1.CreateScheduleRequest
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        CreateScheduleRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.notebooks.v1.CreateScheduleRequest";
                        };
    
                        return CreateScheduleRequest;
                    })();
    
                    v1.TriggerScheduleRequest = (function() {
    
                        /**
                         * Properties of a TriggerScheduleRequest.
                         * @memberof google.cloud.notebooks.v1
                         * @interface ITriggerScheduleRequest
                         * @property {string|null} [name] TriggerScheduleRequest name
                         */
    
                        /**
                         * Constructs a new TriggerScheduleRequest.
                         * @memberof google.cloud.notebooks.v1
                         * @classdesc Represents a TriggerScheduleRequest.
                         * @implements ITriggerScheduleRequest
                         * @constructor
                         * @param {google.cloud.notebooks.v1.ITriggerScheduleRequest=} [properties] Properties to set
                         */
                        function TriggerScheduleRequest(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * TriggerScheduleRequest name.
                         * @member {string} name
                         * @memberof google.cloud.notebooks.v1.TriggerScheduleRequest
                         * @instance
                         */
                        TriggerScheduleRequest.prototype.name = "";
    
                        /**
                         * Creates a new TriggerScheduleRequest instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.notebooks.v1.TriggerScheduleRequest
                         * @static
                         * @param {google.cloud.notebooks.v1.ITriggerScheduleRequest=} [properties] Properties to set
                         * @returns {google.cloud.notebooks.v1.TriggerScheduleRequest} TriggerScheduleRequest instance
                         */
                        TriggerScheduleRequest.create = function create(properties) {
                            return new TriggerScheduleRequest(properties);
                        };
    
                        /**
                         * Encodes the specified TriggerScheduleRequest message. Does not implicitly {@link google.cloud.notebooks.v1.TriggerScheduleRequest.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.notebooks.v1.TriggerScheduleRequest
                         * @static
                         * @param {google.cloud.notebooks.v1.ITriggerScheduleRequest} message TriggerScheduleRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        TriggerScheduleRequest.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified TriggerScheduleRequest message, length delimited. Does not implicitly {@link google.cloud.notebooks.v1.TriggerScheduleRequest.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.notebooks.v1.TriggerScheduleRequest
                         * @static
                         * @param {google.cloud.notebooks.v1.ITriggerScheduleRequest} message TriggerScheduleRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        TriggerScheduleRequest.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a TriggerScheduleRequest message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.notebooks.v1.TriggerScheduleRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.notebooks.v1.TriggerScheduleRequest} TriggerScheduleRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        TriggerScheduleRequest.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.notebooks.v1.TriggerScheduleRequest();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.name = reader.string();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a TriggerScheduleRequest message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.notebooks.v1.TriggerScheduleRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.notebooks.v1.TriggerScheduleRequest} TriggerScheduleRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        TriggerScheduleRequest.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a TriggerScheduleRequest message.
                         * @function verify
                         * @memberof google.cloud.notebooks.v1.TriggerScheduleRequest
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        TriggerScheduleRequest.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.name != null && message.hasOwnProperty("name"))
                                if (!$util.isString(message.name))
                                    return "name: string expected";
                            return null;
                        };
    
                        /**
                         * Creates a TriggerScheduleRequest message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.notebooks.v1.TriggerScheduleRequest
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.notebooks.v1.TriggerScheduleRequest} TriggerScheduleRequest
                         */
                        TriggerScheduleRequest.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.notebooks.v1.TriggerScheduleRequest)
                                return object;
                            var message = new $root.google.cloud.notebooks.v1.TriggerScheduleRequest();
                            if (object.name != null)
                                message.name = String(object.name);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a TriggerScheduleRequest message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.notebooks.v1.TriggerScheduleRequest
                         * @static
                         * @param {google.cloud.notebooks.v1.TriggerScheduleRequest} message TriggerScheduleRequest
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        TriggerScheduleRequest.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults)
                                object.name = "";
                            if (message.name != null && message.hasOwnProperty("name"))
                                object.name = message.name;
                            return object;
                        };
    
                        /**
                         * Converts this TriggerScheduleRequest to JSON.
                         * @function toJSON
                         * @memberof google.cloud.notebooks.v1.TriggerScheduleRequest
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        TriggerScheduleRequest.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for TriggerScheduleRequest
                         * @function getTypeUrl
                         * @memberof google.cloud.notebooks.v1.TriggerScheduleRequest
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        TriggerScheduleRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.notebooks.v1.TriggerScheduleRequest";
                        };
    
                        return TriggerScheduleRequest;
                    })();
    
                    v1.ListExecutionsRequest = (function() {
    
                        /**
                         * Properties of a ListExecutionsRequest.
                         * @memberof google.cloud.notebooks.v1
                         * @interface IListExecutionsRequest
                         * @property {string|null} [parent] ListExecutionsRequest parent
                         * @property {number|null} [pageSize] ListExecutionsRequest pageSize
                         * @property {string|null} [pageToken] ListExecutionsRequest pageToken
                         * @property {string|null} [filter] ListExecutionsRequest filter
                         * @property {string|null} [orderBy] ListExecutionsRequest orderBy
                         */
    
                        /**
                         * Constructs a new ListExecutionsRequest.
                         * @memberof google.cloud.notebooks.v1
                         * @classdesc Represents a ListExecutionsRequest.
                         * @implements IListExecutionsRequest
                         * @constructor
                         * @param {google.cloud.notebooks.v1.IListExecutionsRequest=} [properties] Properties to set
                         */
                        function ListExecutionsRequest(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * ListExecutionsRequest parent.
                         * @member {string} parent
                         * @memberof google.cloud.notebooks.v1.ListExecutionsRequest
                         * @instance
                         */
                        ListExecutionsRequest.prototype.parent = "";
    
                        /**
                         * ListExecutionsRequest pageSize.
                         * @member {number} pageSize
                         * @memberof google.cloud.notebooks.v1.ListExecutionsRequest
                         * @instance
                         */
                        ListExecutionsRequest.prototype.pageSize = 0;
    
                        /**
                         * ListExecutionsRequest pageToken.
                         * @member {string} pageToken
                         * @memberof google.cloud.notebooks.v1.ListExecutionsRequest
                         * @instance
                         */
                        ListExecutionsRequest.prototype.pageToken = "";
    
                        /**
                         * ListExecutionsRequest filter.
                         * @member {string} filter
                         * @memberof google.cloud.notebooks.v1.ListExecutionsRequest
                         * @instance
                         */
                        ListExecutionsRequest.prototype.filter = "";
    
                        /**
                         * ListExecutionsRequest orderBy.
                         * @member {string} orderBy
                         * @memberof google.cloud.notebooks.v1.ListExecutionsRequest
                         * @instance
                         */
                        ListExecutionsRequest.prototype.orderBy = "";
    
                        /**
                         * Creates a new ListExecutionsRequest instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.notebooks.v1.ListExecutionsRequest
                         * @static
                         * @param {google.cloud.notebooks.v1.IListExecutionsRequest=} [properties] Properties to set
                         * @returns {google.cloud.notebooks.v1.ListExecutionsRequest} ListExecutionsRequest instance
                         */
                        ListExecutionsRequest.create = function create(properties) {
                            return new ListExecutionsRequest(properties);
                        };
    
                        /**
                         * Encodes the specified ListExecutionsRequest message. Does not implicitly {@link google.cloud.notebooks.v1.ListExecutionsRequest.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.notebooks.v1.ListExecutionsRequest
                         * @static
                         * @param {google.cloud.notebooks.v1.IListExecutionsRequest} message ListExecutionsRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        ListExecutionsRequest.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.parent != null && Object.hasOwnProperty.call(message, "parent"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.parent);
                            if (message.pageSize != null && Object.hasOwnProperty.call(message, "pageSize"))
                                writer.uint32(/* id 2, wireType 0 =*/16).int32(message.pageSize);
                            if (message.pageToken != null && Object.hasOwnProperty.call(message, "pageToken"))
                                writer.uint32(/* id 3, wireType 2 =*/26).string(message.pageToken);
                            if (message.filter != null && Object.hasOwnProperty.call(message, "filter"))
                                writer.uint32(/* id 4, wireType 2 =*/34).string(message.filter);
                            if (message.orderBy != null && Object.hasOwnProperty.call(message, "orderBy"))
                                writer.uint32(/* id 5, wireType 2 =*/42).string(message.orderBy);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified ListExecutionsRequest message, length delimited. Does not implicitly {@link google.cloud.notebooks.v1.ListExecutionsRequest.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.notebooks.v1.ListExecutionsRequest
                         * @static
                         * @param {google.cloud.notebooks.v1.IListExecutionsRequest} message ListExecutionsRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        ListExecutionsRequest.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a ListExecutionsRequest message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.notebooks.v1.ListExecutionsRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.notebooks.v1.ListExecutionsRequest} ListExecutionsRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        ListExecutionsRequest.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.notebooks.v1.ListExecutionsRequest();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.parent = reader.string();
                                        break;
                                    }
                                case 2: {
                                        message.pageSize = reader.int32();
                                        break;
                                    }
                                case 3: {
                                        message.pageToken = reader.string();
                                        break;
                                    }
                                case 4: {
                                        message.filter = reader.string();
                                        break;
                                    }
                                case 5: {
                                        message.orderBy = reader.string();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a ListExecutionsRequest message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.notebooks.v1.ListExecutionsRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.notebooks.v1.ListExecutionsRequest} ListExecutionsRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        ListExecutionsRequest.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a ListExecutionsRequest message.
                         * @function verify
                         * @memberof google.cloud.notebooks.v1.ListExecutionsRequest
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        ListExecutionsRequest.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.parent != null && message.hasOwnProperty("parent"))
                                if (!$util.isString(message.parent))
                                    return "parent: string expected";
                            if (message.pageSize != null && message.hasOwnProperty("pageSize"))
                                if (!$util.isInteger(message.pageSize))
                                    return "pageSize: integer expected";
                            if (message.pageToken != null && message.hasOwnProperty("pageToken"))
                                if (!$util.isString(message.pageToken))
                                    return "pageToken: string expected";
                            if (message.filter != null && message.hasOwnProperty("filter"))
                                if (!$util.isString(message.filter))
                                    return "filter: string expected";
                            if (message.orderBy != null && message.hasOwnProperty("orderBy"))
                                if (!$util.isString(message.orderBy))
                                    return "orderBy: string expected";
                            return null;
                        };
    
                        /**
                         * Creates a ListExecutionsRequest message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.notebooks.v1.ListExecutionsRequest
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.notebooks.v1.ListExecutionsRequest} ListExecutionsRequest
                         */
                        ListExecutionsRequest.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.notebooks.v1.ListExecutionsRequest)
                                return object;
                            var message = new $root.google.cloud.notebooks.v1.ListExecutionsRequest();
                            if (object.parent != null)
                                message.parent = String(object.parent);
                            if (object.pageSize != null)
                                message.pageSize = object.pageSize | 0;
                            if (object.pageToken != null)
                                message.pageToken = String(object.pageToken);
                            if (object.filter != null)
                                message.filter = String(object.filter);
                            if (object.orderBy != null)
                                message.orderBy = String(object.orderBy);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a ListExecutionsRequest message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.notebooks.v1.ListExecutionsRequest
                         * @static
                         * @param {google.cloud.notebooks.v1.ListExecutionsRequest} message ListExecutionsRequest
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        ListExecutionsRequest.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.parent = "";
                                object.pageSize = 0;
                                object.pageToken = "";
                                object.filter = "";
                                object.orderBy = "";
                            }
                            if (message.parent != null && message.hasOwnProperty("parent"))
                                object.parent = message.parent;
                            if (message.pageSize != null && message.hasOwnProperty("pageSize"))
                                object.pageSize = message.pageSize;
                            if (message.pageToken != null && message.hasOwnProperty("pageToken"))
                                object.pageToken = message.pageToken;
                            if (message.filter != null && message.hasOwnProperty("filter"))
                                object.filter = message.filter;
                            if (message.orderBy != null && message.hasOwnProperty("orderBy"))
                                object.orderBy = message.orderBy;
                            return object;
                        };
    
                        /**
                         * Converts this ListExecutionsRequest to JSON.
                         * @function toJSON
                         * @memberof google.cloud.notebooks.v1.ListExecutionsRequest
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        ListExecutionsRequest.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for ListExecutionsRequest
                         * @function getTypeUrl
                         * @memberof google.cloud.notebooks.v1.ListExecutionsRequest
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        ListExecutionsRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.notebooks.v1.ListExecutionsRequest";
                        };
    
                        return ListExecutionsRequest;
                    })();
    
                    v1.ListExecutionsResponse = (function() {
    
                        /**
                         * Properties of a ListExecutionsResponse.
                         * @memberof google.cloud.notebooks.v1
                         * @interface IListExecutionsResponse
                         * @property {Array.<google.cloud.notebooks.v1.IExecution>|null} [executions] ListExecutionsResponse executions
                         * @property {string|null} [nextPageToken] ListExecutionsResponse nextPageToken
                         * @property {Array.<string>|null} [unreachable] ListExecutionsResponse unreachable
                         */
    
                        /**
                         * Constructs a new ListExecutionsResponse.
                         * @memberof google.cloud.notebooks.v1
                         * @classdesc Represents a ListExecutionsResponse.
                         * @implements IListExecutionsResponse
                         * @constructor
                         * @param {google.cloud.notebooks.v1.IListExecutionsResponse=} [properties] Properties to set
                         */
                        function ListExecutionsResponse(properties) {
                            this.executions = [];
                            this.unreachable = [];
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * ListExecutionsResponse executions.
                         * @member {Array.<google.cloud.notebooks.v1.IExecution>} executions
                         * @memberof google.cloud.notebooks.v1.ListExecutionsResponse
                         * @instance
                         */
                        ListExecutionsResponse.prototype.executions = $util.emptyArray;
    
                        /**
                         * ListExecutionsResponse nextPageToken.
                         * @member {string} nextPageToken
                         * @memberof google.cloud.notebooks.v1.ListExecutionsResponse
                         * @instance
                         */
                        ListExecutionsResponse.prototype.nextPageToken = "";
    
                        /**
                         * ListExecutionsResponse unreachable.
                         * @member {Array.<string>} unreachable
                         * @memberof google.cloud.notebooks.v1.ListExecutionsResponse
                         * @instance
                         */
                        ListExecutionsResponse.prototype.unreachable = $util.emptyArray;
    
                        /**
                         * Creates a new ListExecutionsResponse instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.notebooks.v1.ListExecutionsResponse
                         * @static
                         * @param {google.cloud.notebooks.v1.IListExecutionsResponse=} [properties] Properties to set
                         * @returns {google.cloud.notebooks.v1.ListExecutionsResponse} ListExecutionsResponse instance
                         */
                        ListExecutionsResponse.create = function create(properties) {
                            return new ListExecutionsResponse(properties);
                        };
    
                        /**
                         * Encodes the specified ListExecutionsResponse message. Does not implicitly {@link google.cloud.notebooks.v1.ListExecutionsResponse.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.notebooks.v1.ListExecutionsResponse
                         * @static
                         * @param {google.cloud.notebooks.v1.IListExecutionsResponse} message ListExecutionsResponse message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        ListExecutionsResponse.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.executions != null && message.executions.length)
                                for (var i = 0; i < message.executions.length; ++i)
                                    $root.google.cloud.notebooks.v1.Execution.encode(message.executions[i], writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                            if (message.nextPageToken != null && Object.hasOwnProperty.call(message, "nextPageToken"))
                                writer.uint32(/* id 2, wireType 2 =*/18).string(message.nextPageToken);
                            if (message.unreachable != null && message.unreachable.length)
                                for (var i = 0; i < message.unreachable.length; ++i)
                                    writer.uint32(/* id 3, wireType 2 =*/26).string(message.unreachable[i]);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified ListExecutionsResponse message, length delimited. Does not implicitly {@link google.cloud.notebooks.v1.ListExecutionsResponse.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.notebooks.v1.ListExecutionsResponse
                         * @static
                         * @param {google.cloud.notebooks.v1.IListExecutionsResponse} message ListExecutionsResponse message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        ListExecutionsResponse.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a ListExecutionsResponse message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.notebooks.v1.ListExecutionsResponse
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.notebooks.v1.ListExecutionsResponse} ListExecutionsResponse
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        ListExecutionsResponse.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.notebooks.v1.ListExecutionsResponse();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        if (!(message.executions && message.executions.length))
                                            message.executions = [];
                                        message.executions.push($root.google.cloud.notebooks.v1.Execution.decode(reader, reader.uint32()));
                                        break;
                                    }
                                case 2: {
                                        message.nextPageToken = reader.string();
                                        break;
                                    }
                                case 3: {
                                        if (!(message.unreachable && message.unreachable.length))
                                            message.unreachable = [];
                                        message.unreachable.push(reader.string());
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a ListExecutionsResponse message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.notebooks.v1.ListExecutionsResponse
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.notebooks.v1.ListExecutionsResponse} ListExecutionsResponse
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        ListExecutionsResponse.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a ListExecutionsResponse message.
                         * @function verify
                         * @memberof google.cloud.notebooks.v1.ListExecutionsResponse
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        ListExecutionsResponse.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.executions != null && message.hasOwnProperty("executions")) {
                                if (!Array.isArray(message.executions))
                                    return "executions: array expected";
                                for (var i = 0; i < message.executions.length; ++i) {
                                    var error = $root.google.cloud.notebooks.v1.Execution.verify(message.executions[i]);
                                    if (error)
                                        return "executions." + error;
                                }
                            }
                            if (message.nextPageToken != null && message.hasOwnProperty("nextPageToken"))
                                if (!$util.isString(message.nextPageToken))
                                    return "nextPageToken: string expected";
                            if (message.unreachable != null && message.hasOwnProperty("unreachable")) {
                                if (!Array.isArray(message.unreachable))
                                    return "unreachable: array expected";
                                for (var i = 0; i < message.unreachable.length; ++i)
                                    if (!$util.isString(message.unreachable[i]))
                                        return "unreachable: string[] expected";
                            }
                            return null;
                        };
    
                        /**
                         * Creates a ListExecutionsResponse message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.notebooks.v1.ListExecutionsResponse
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.notebooks.v1.ListExecutionsResponse} ListExecutionsResponse
                         */
                        ListExecutionsResponse.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.notebooks.v1.ListExecutionsResponse)
                                return object;
                            var message = new $root.google.cloud.notebooks.v1.ListExecutionsResponse();
                            if (object.executions) {
                                if (!Array.isArray(object.executions))
                                    throw TypeError(".google.cloud.notebooks.v1.ListExecutionsResponse.executions: array expected");
                                message.executions = [];
                                for (var i = 0; i < object.executions.length; ++i) {
                                    if (typeof object.executions[i] !== "object")
                                        throw TypeError(".google.cloud.notebooks.v1.ListExecutionsResponse.executions: object expected");
                                    message.executions[i] = $root.google.cloud.notebooks.v1.Execution.fromObject(object.executions[i]);
                                }
                            }
                            if (object.nextPageToken != null)
                                message.nextPageToken = String(object.nextPageToken);
                            if (object.unreachable) {
                                if (!Array.isArray(object.unreachable))
                                    throw TypeError(".google.cloud.notebooks.v1.ListExecutionsResponse.unreachable: array expected");
                                message.unreachable = [];
                                for (var i = 0; i < object.unreachable.length; ++i)
                                    message.unreachable[i] = String(object.unreachable[i]);
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a ListExecutionsResponse message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.notebooks.v1.ListExecutionsResponse
                         * @static
                         * @param {google.cloud.notebooks.v1.ListExecutionsResponse} message ListExecutionsResponse
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        ListExecutionsResponse.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.arrays || options.defaults) {
                                object.executions = [];
                                object.unreachable = [];
                            }
                            if (options.defaults)
                                object.nextPageToken = "";
                            if (message.executions && message.executions.length) {
                                object.executions = [];
                                for (var j = 0; j < message.executions.length; ++j)
                                    object.executions[j] = $root.google.cloud.notebooks.v1.Execution.toObject(message.executions[j], options);
                            }
                            if (message.nextPageToken != null && message.hasOwnProperty("nextPageToken"))
                                object.nextPageToken = message.nextPageToken;
                            if (message.unreachable && message.unreachable.length) {
                                object.unreachable = [];
                                for (var j = 0; j < message.unreachable.length; ++j)
                                    object.unreachable[j] = message.unreachable[j];
                            }
                            return object;
                        };
    
                        /**
                         * Converts this ListExecutionsResponse to JSON.
                         * @function toJSON
                         * @memberof google.cloud.notebooks.v1.ListExecutionsResponse
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        ListExecutionsResponse.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for ListExecutionsResponse
                         * @function getTypeUrl
                         * @memberof google.cloud.notebooks.v1.ListExecutionsResponse
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        ListExecutionsResponse.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.notebooks.v1.ListExecutionsResponse";
                        };
    
                        return ListExecutionsResponse;
                    })();
    
                    v1.GetExecutionRequest = (function() {
    
                        /**
                         * Properties of a GetExecutionRequest.
                         * @memberof google.cloud.notebooks.v1
                         * @interface IGetExecutionRequest
                         * @property {string|null} [name] GetExecutionRequest name
                         */
    
                        /**
                         * Constructs a new GetExecutionRequest.
                         * @memberof google.cloud.notebooks.v1
                         * @classdesc Represents a GetExecutionRequest.
                         * @implements IGetExecutionRequest
                         * @constructor
                         * @param {google.cloud.notebooks.v1.IGetExecutionRequest=} [properties] Properties to set
                         */
                        function GetExecutionRequest(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * GetExecutionRequest name.
                         * @member {string} name
                         * @memberof google.cloud.notebooks.v1.GetExecutionRequest
                         * @instance
                         */
                        GetExecutionRequest.prototype.name = "";
    
                        /**
                         * Creates a new GetExecutionRequest instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.notebooks.v1.GetExecutionRequest
                         * @static
                         * @param {google.cloud.notebooks.v1.IGetExecutionRequest=} [properties] Properties to set
                         * @returns {google.cloud.notebooks.v1.GetExecutionRequest} GetExecutionRequest instance
                         */
                        GetExecutionRequest.create = function create(properties) {
                            return new GetExecutionRequest(properties);
                        };
    
                        /**
                         * Encodes the specified GetExecutionRequest message. Does not implicitly {@link google.cloud.notebooks.v1.GetExecutionRequest.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.notebooks.v1.GetExecutionRequest
                         * @static
                         * @param {google.cloud.notebooks.v1.IGetExecutionRequest} message GetExecutionRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        GetExecutionRequest.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified GetExecutionRequest message, length delimited. Does not implicitly {@link google.cloud.notebooks.v1.GetExecutionRequest.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.notebooks.v1.GetExecutionRequest
                         * @static
                         * @param {google.cloud.notebooks.v1.IGetExecutionRequest} message GetExecutionRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        GetExecutionRequest.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a GetExecutionRequest message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.notebooks.v1.GetExecutionRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.notebooks.v1.GetExecutionRequest} GetExecutionRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        GetExecutionRequest.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.notebooks.v1.GetExecutionRequest();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.name = reader.string();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a GetExecutionRequest message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.notebooks.v1.GetExecutionRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.notebooks.v1.GetExecutionRequest} GetExecutionRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        GetExecutionRequest.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a GetExecutionRequest message.
                         * @function verify
                         * @memberof google.cloud.notebooks.v1.GetExecutionRequest
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        GetExecutionRequest.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.name != null && message.hasOwnProperty("name"))
                                if (!$util.isString(message.name))
                                    return "name: string expected";
                            return null;
                        };
    
                        /**
                         * Creates a GetExecutionRequest message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.notebooks.v1.GetExecutionRequest
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.notebooks.v1.GetExecutionRequest} GetExecutionRequest
                         */
                        GetExecutionRequest.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.notebooks.v1.GetExecutionRequest)
                                return object;
                            var message = new $root.google.cloud.notebooks.v1.GetExecutionRequest();
                            if (object.name != null)
                                message.name = String(object.name);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a GetExecutionRequest message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.notebooks.v1.GetExecutionRequest
                         * @static
                         * @param {google.cloud.notebooks.v1.GetExecutionRequest} message GetExecutionRequest
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        GetExecutionRequest.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults)
                                object.name = "";
                            if (message.name != null && message.hasOwnProperty("name"))
                                object.name = message.name;
                            return object;
                        };
    
                        /**
                         * Converts this GetExecutionRequest to JSON.
                         * @function toJSON
                         * @memberof google.cloud.notebooks.v1.GetExecutionRequest
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        GetExecutionRequest.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for GetExecutionRequest
                         * @function getTypeUrl
                         * @memberof google.cloud.notebooks.v1.GetExecutionRequest
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        GetExecutionRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.notebooks.v1.GetExecutionRequest";
                        };
    
                        return GetExecutionRequest;
                    })();
    
                    v1.DeleteExecutionRequest = (function() {
    
                        /**
                         * Properties of a DeleteExecutionRequest.
                         * @memberof google.cloud.notebooks.v1
                         * @interface IDeleteExecutionRequest
                         * @property {string|null} [name] DeleteExecutionRequest name
                         */
    
                        /**
                         * Constructs a new DeleteExecutionRequest.
                         * @memberof google.cloud.notebooks.v1
                         * @classdesc Represents a DeleteExecutionRequest.
                         * @implements IDeleteExecutionRequest
                         * @constructor
                         * @param {google.cloud.notebooks.v1.IDeleteExecutionRequest=} [properties] Properties to set
                         */
                        function DeleteExecutionRequest(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * DeleteExecutionRequest name.
                         * @member {string} name
                         * @memberof google.cloud.notebooks.v1.DeleteExecutionRequest
                         * @instance
                         */
                        DeleteExecutionRequest.prototype.name = "";
    
                        /**
                         * Creates a new DeleteExecutionRequest instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.notebooks.v1.DeleteExecutionRequest
                         * @static
                         * @param {google.cloud.notebooks.v1.IDeleteExecutionRequest=} [properties] Properties to set
                         * @returns {google.cloud.notebooks.v1.DeleteExecutionRequest} DeleteExecutionRequest instance
                         */
                        DeleteExecutionRequest.create = function create(properties) {
                            return new DeleteExecutionRequest(properties);
                        };
    
                        /**
                         * Encodes the specified DeleteExecutionRequest message. Does not implicitly {@link google.cloud.notebooks.v1.DeleteExecutionRequest.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.notebooks.v1.DeleteExecutionRequest
                         * @static
                         * @param {google.cloud.notebooks.v1.IDeleteExecutionRequest} message DeleteExecutionRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        DeleteExecutionRequest.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified DeleteExecutionRequest message, length delimited. Does not implicitly {@link google.cloud.notebooks.v1.DeleteExecutionRequest.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.notebooks.v1.DeleteExecutionRequest
                         * @static
                         * @param {google.cloud.notebooks.v1.IDeleteExecutionRequest} message DeleteExecutionRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        DeleteExecutionRequest.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a DeleteExecutionRequest message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.notebooks.v1.DeleteExecutionRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.notebooks.v1.DeleteExecutionRequest} DeleteExecutionRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        DeleteExecutionRequest.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.notebooks.v1.DeleteExecutionRequest();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.name = reader.string();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a DeleteExecutionRequest message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.notebooks.v1.DeleteExecutionRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.notebooks.v1.DeleteExecutionRequest} DeleteExecutionRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        DeleteExecutionRequest.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a DeleteExecutionRequest message.
                         * @function verify
                         * @memberof google.cloud.notebooks.v1.DeleteExecutionRequest
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        DeleteExecutionRequest.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.name != null && message.hasOwnProperty("name"))
                                if (!$util.isString(message.name))
                                    return "name: string expected";
                            return null;
                        };
    
                        /**
                         * Creates a DeleteExecutionRequest message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.notebooks.v1.DeleteExecutionRequest
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.notebooks.v1.DeleteExecutionRequest} DeleteExecutionRequest
                         */
                        DeleteExecutionRequest.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.notebooks.v1.DeleteExecutionRequest)
                                return object;
                            var message = new $root.google.cloud.notebooks.v1.DeleteExecutionRequest();
                            if (object.name != null)
                                message.name = String(object.name);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a DeleteExecutionRequest message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.notebooks.v1.DeleteExecutionRequest
                         * @static
                         * @param {google.cloud.notebooks.v1.DeleteExecutionRequest} message DeleteExecutionRequest
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        DeleteExecutionRequest.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults)
                                object.name = "";
                            if (message.name != null && message.hasOwnProperty("name"))
                                object.name = message.name;
                            return object;
                        };
    
                        /**
                         * Converts this DeleteExecutionRequest to JSON.
                         * @function toJSON
                         * @memberof google.cloud.notebooks.v1.DeleteExecutionRequest
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        DeleteExecutionRequest.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for DeleteExecutionRequest
                         * @function getTypeUrl
                         * @memberof google.cloud.notebooks.v1.DeleteExecutionRequest
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        DeleteExecutionRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.notebooks.v1.DeleteExecutionRequest";
                        };
    
                        return DeleteExecutionRequest;
                    })();
    
                    v1.CreateExecutionRequest = (function() {
    
                        /**
                         * Properties of a CreateExecutionRequest.
                         * @memberof google.cloud.notebooks.v1
                         * @interface ICreateExecutionRequest
                         * @property {string|null} [parent] CreateExecutionRequest parent
                         * @property {string|null} [executionId] CreateExecutionRequest executionId
                         * @property {google.cloud.notebooks.v1.IExecution|null} [execution] CreateExecutionRequest execution
                         */
    
                        /**
                         * Constructs a new CreateExecutionRequest.
                         * @memberof google.cloud.notebooks.v1
                         * @classdesc Represents a CreateExecutionRequest.
                         * @implements ICreateExecutionRequest
                         * @constructor
                         * @param {google.cloud.notebooks.v1.ICreateExecutionRequest=} [properties] Properties to set
                         */
                        function CreateExecutionRequest(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * CreateExecutionRequest parent.
                         * @member {string} parent
                         * @memberof google.cloud.notebooks.v1.CreateExecutionRequest
                         * @instance
                         */
                        CreateExecutionRequest.prototype.parent = "";
    
                        /**
                         * CreateExecutionRequest executionId.
                         * @member {string} executionId
                         * @memberof google.cloud.notebooks.v1.CreateExecutionRequest
                         * @instance
                         */
                        CreateExecutionRequest.prototype.executionId = "";
    
                        /**
                         * CreateExecutionRequest execution.
                         * @member {google.cloud.notebooks.v1.IExecution|null|undefined} execution
                         * @memberof google.cloud.notebooks.v1.CreateExecutionRequest
                         * @instance
                         */
                        CreateExecutionRequest.prototype.execution = null;
    
                        /**
                         * Creates a new CreateExecutionRequest instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.notebooks.v1.CreateExecutionRequest
                         * @static
                         * @param {google.cloud.notebooks.v1.ICreateExecutionRequest=} [properties] Properties to set
                         * @returns {google.cloud.notebooks.v1.CreateExecutionRequest} CreateExecutionRequest instance
                         */
                        CreateExecutionRequest.create = function create(properties) {
                            return new CreateExecutionRequest(properties);
                        };
    
                        /**
                         * Encodes the specified CreateExecutionRequest message. Does not implicitly {@link google.cloud.notebooks.v1.CreateExecutionRequest.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.notebooks.v1.CreateExecutionRequest
                         * @static
                         * @param {google.cloud.notebooks.v1.ICreateExecutionRequest} message CreateExecutionRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        CreateExecutionRequest.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.parent != null && Object.hasOwnProperty.call(message, "parent"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.parent);
                            if (message.executionId != null && Object.hasOwnProperty.call(message, "executionId"))
                                writer.uint32(/* id 2, wireType 2 =*/18).string(message.executionId);
                            if (message.execution != null && Object.hasOwnProperty.call(message, "execution"))
                                $root.google.cloud.notebooks.v1.Execution.encode(message.execution, writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();
                            return writer;
                        };
    
                        /**
                         * Encodes the specified CreateExecutionRequest message, length delimited. Does not implicitly {@link google.cloud.notebooks.v1.CreateExecutionRequest.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.notebooks.v1.CreateExecutionRequest
                         * @static
                         * @param {google.cloud.notebooks.v1.ICreateExecutionRequest} message CreateExecutionRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        CreateExecutionRequest.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a CreateExecutionRequest message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.notebooks.v1.CreateExecutionRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.notebooks.v1.CreateExecutionRequest} CreateExecutionRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        CreateExecutionRequest.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.notebooks.v1.CreateExecutionRequest();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.parent = reader.string();
                                        break;
                                    }
                                case 2: {
                                        message.executionId = reader.string();
                                        break;
                                    }
                                case 3: {
                                        message.execution = $root.google.cloud.notebooks.v1.Execution.decode(reader, reader.uint32());
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a CreateExecutionRequest message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.notebooks.v1.CreateExecutionRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.notebooks.v1.CreateExecutionRequest} CreateExecutionRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        CreateExecutionRequest.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a CreateExecutionRequest message.
                         * @function verify
                         * @memberof google.cloud.notebooks.v1.CreateExecutionRequest
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        CreateExecutionRequest.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.parent != null && message.hasOwnProperty("parent"))
                                if (!$util.isString(message.parent))
                                    return "parent: string expected";
                            if (message.executionId != null && message.hasOwnProperty("executionId"))
                                if (!$util.isString(message.executionId))
                                    return "executionId: string expected";
                            if (message.execution != null && message.hasOwnProperty("execution")) {
                                var error = $root.google.cloud.notebooks.v1.Execution.verify(message.execution);
                                if (error)
                                    return "execution." + error;
                            }
                            return null;
                        };
    
                        /**
                         * Creates a CreateExecutionRequest message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.notebooks.v1.CreateExecutionRequest
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.notebooks.v1.CreateExecutionRequest} CreateExecutionRequest
                         */
                        CreateExecutionRequest.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.notebooks.v1.CreateExecutionRequest)
                                return object;
                            var message = new $root.google.cloud.notebooks.v1.CreateExecutionRequest();
                            if (object.parent != null)
                                message.parent = String(object.parent);
                            if (object.executionId != null)
                                message.executionId = String(object.executionId);
                            if (object.execution != null) {
                                if (typeof object.execution !== "object")
                                    throw TypeError(".google.cloud.notebooks.v1.CreateExecutionRequest.execution: object expected");
                                message.execution = $root.google.cloud.notebooks.v1.Execution.fromObject(object.execution);
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a CreateExecutionRequest message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.notebooks.v1.CreateExecutionRequest
                         * @static
                         * @param {google.cloud.notebooks.v1.CreateExecutionRequest} message CreateExecutionRequest
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        CreateExecutionRequest.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.parent = "";
                                object.executionId = "";
                                object.execution = null;
                            }
                            if (message.parent != null && message.hasOwnProperty("parent"))
                                object.parent = message.parent;
                            if (message.executionId != null && message.hasOwnProperty("executionId"))
                                object.executionId = message.executionId;
                            if (message.execution != null && message.hasOwnProperty("execution"))
                                object.execution = $root.google.cloud.notebooks.v1.Execution.toObject(message.execution, options);
                            return object;
                        };
    
                        /**
                         * Converts this CreateExecutionRequest to JSON.
                         * @function toJSON
                         * @memberof google.cloud.notebooks.v1.CreateExecutionRequest
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        CreateExecutionRequest.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for CreateExecutionRequest
                         * @function getTypeUrl
                         * @memberof google.cloud.notebooks.v1.CreateExecutionRequest
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        CreateExecutionRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.notebooks.v1.CreateExecutionRequest";
                        };
    
                        return CreateExecutionRequest;
                    })();
    
                    /**
                     * UpgradeType enum.
                     * @name google.cloud.notebooks.v1.UpgradeType
                     * @enum {number}
                     * @property {number} UPGRADE_TYPE_UNSPECIFIED=0 UPGRADE_TYPE_UNSPECIFIED value
                     * @property {number} UPGRADE_FRAMEWORK=1 UPGRADE_FRAMEWORK value
                     * @property {number} UPGRADE_OS=2 UPGRADE_OS value
                     * @property {number} UPGRADE_CUDA=3 UPGRADE_CUDA value
                     * @property {number} UPGRADE_ALL=4 UPGRADE_ALL value
                     */
                    v1.UpgradeType = (function() {
                        var valuesById = {}, values = Object.create(valuesById);
                        values[valuesById[0] = "UPGRADE_TYPE_UNSPECIFIED"] = 0;
                        values[valuesById[1] = "UPGRADE_FRAMEWORK"] = 1;
                        values[valuesById[2] = "UPGRADE_OS"] = 2;
                        values[valuesById[3] = "UPGRADE_CUDA"] = 3;
                        values[valuesById[4] = "UPGRADE_ALL"] = 4;
                        return values;
                    })();
    
                    return v1;
                })();
    
                notebooks.v1beta1 = (function() {
    
                    /**
                     * Namespace v1beta1.
                     * @memberof google.cloud.notebooks
                     * @namespace
                     */
                    var v1beta1 = {};
    
                    v1beta1.Environment = (function() {
    
                        /**
                         * Properties of an Environment.
                         * @memberof google.cloud.notebooks.v1beta1
                         * @interface IEnvironment
                         * @property {string|null} [name] Environment name
                         * @property {string|null} [displayName] Environment displayName
                         * @property {string|null} [description] Environment description
                         * @property {google.cloud.notebooks.v1beta1.IVmImage|null} [vmImage] Environment vmImage
                         * @property {google.cloud.notebooks.v1beta1.IContainerImage|null} [containerImage] Environment containerImage
                         * @property {string|null} [postStartupScript] Environment postStartupScript
                         * @property {google.protobuf.ITimestamp|null} [createTime] Environment createTime
                         */
    
                        /**
                         * Constructs a new Environment.
                         * @memberof google.cloud.notebooks.v1beta1
                         * @classdesc Represents an Environment.
                         * @implements IEnvironment
                         * @constructor
                         * @param {google.cloud.notebooks.v1beta1.IEnvironment=} [properties] Properties to set
                         */
                        function Environment(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * Environment name.
                         * @member {string} name
                         * @memberof google.cloud.notebooks.v1beta1.Environment
                         * @instance
                         */
                        Environment.prototype.name = "";
    
                        /**
                         * Environment displayName.
                         * @member {string} displayName
                         * @memberof google.cloud.notebooks.v1beta1.Environment
                         * @instance
                         */
                        Environment.prototype.displayName = "";
    
                        /**
                         * Environment description.
                         * @member {string} description
                         * @memberof google.cloud.notebooks.v1beta1.Environment
                         * @instance
                         */
                        Environment.prototype.description = "";
    
                        /**
                         * Environment vmImage.
                         * @member {google.cloud.notebooks.v1beta1.IVmImage|null|undefined} vmImage
                         * @memberof google.cloud.notebooks.v1beta1.Environment
                         * @instance
                         */
                        Environment.prototype.vmImage = null;
    
                        /**
                         * Environment containerImage.
                         * @member {google.cloud.notebooks.v1beta1.IContainerImage|null|undefined} containerImage
                         * @memberof google.cloud.notebooks.v1beta1.Environment
                         * @instance
                         */
                        Environment.prototype.containerImage = null;
    
                        /**
                         * Environment postStartupScript.
                         * @member {string} postStartupScript
                         * @memberof google.cloud.notebooks.v1beta1.Environment
                         * @instance
                         */
                        Environment.prototype.postStartupScript = "";
    
                        /**
                         * Environment createTime.
                         * @member {google.protobuf.ITimestamp|null|undefined} createTime
                         * @memberof google.cloud.notebooks.v1beta1.Environment
                         * @instance
                         */
                        Environment.prototype.createTime = null;
    
                        // OneOf field names bound to virtual getters and setters
                        var $oneOfFields;
    
                        /**
                         * Environment imageType.
                         * @member {"vmImage"|"containerImage"|undefined} imageType
                         * @memberof google.cloud.notebooks.v1beta1.Environment
                         * @instance
                         */
                        Object.defineProperty(Environment.prototype, "imageType", {
                            get: $util.oneOfGetter($oneOfFields = ["vmImage", "containerImage"]),
                            set: $util.oneOfSetter($oneOfFields)
                        });
    
                        /**
                         * Creates a new Environment instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.notebooks.v1beta1.Environment
                         * @static
                         * @param {google.cloud.notebooks.v1beta1.IEnvironment=} [properties] Properties to set
                         * @returns {google.cloud.notebooks.v1beta1.Environment} Environment instance
                         */
                        Environment.create = function create(properties) {
                            return new Environment(properties);
                        };
    
                        /**
                         * Encodes the specified Environment message. Does not implicitly {@link google.cloud.notebooks.v1beta1.Environment.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.notebooks.v1beta1.Environment
                         * @static
                         * @param {google.cloud.notebooks.v1beta1.IEnvironment} message Environment message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        Environment.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                            if (message.displayName != null && Object.hasOwnProperty.call(message, "displayName"))
                                writer.uint32(/* id 2, wireType 2 =*/18).string(message.displayName);
                            if (message.description != null && Object.hasOwnProperty.call(message, "description"))
                                writer.uint32(/* id 3, wireType 2 =*/26).string(message.description);
                            if (message.vmImage != null && Object.hasOwnProperty.call(message, "vmImage"))
                                $root.google.cloud.notebooks.v1beta1.VmImage.encode(message.vmImage, writer.uint32(/* id 6, wireType 2 =*/50).fork()).ldelim();
                            if (message.containerImage != null && Object.hasOwnProperty.call(message, "containerImage"))
                                $root.google.cloud.notebooks.v1beta1.ContainerImage.encode(message.containerImage, writer.uint32(/* id 7, wireType 2 =*/58).fork()).ldelim();
                            if (message.postStartupScript != null && Object.hasOwnProperty.call(message, "postStartupScript"))
                                writer.uint32(/* id 8, wireType 2 =*/66).string(message.postStartupScript);
                            if (message.createTime != null && Object.hasOwnProperty.call(message, "createTime"))
                                $root.google.protobuf.Timestamp.encode(message.createTime, writer.uint32(/* id 9, wireType 2 =*/74).fork()).ldelim();
                            return writer;
                        };
    
                        /**
                         * Encodes the specified Environment message, length delimited. Does not implicitly {@link google.cloud.notebooks.v1beta1.Environment.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.notebooks.v1beta1.Environment
                         * @static
                         * @param {google.cloud.notebooks.v1beta1.IEnvironment} message Environment message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        Environment.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes an Environment message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.notebooks.v1beta1.Environment
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.notebooks.v1beta1.Environment} Environment
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        Environment.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.notebooks.v1beta1.Environment();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.name = reader.string();
                                        break;
                                    }
                                case 2: {
                                        message.displayName = reader.string();
                                        break;
                                    }
                                case 3: {
                                        message.description = reader.string();
                                        break;
                                    }
                                case 6: {
                                        message.vmImage = $root.google.cloud.notebooks.v1beta1.VmImage.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 7: {
                                        message.containerImage = $root.google.cloud.notebooks.v1beta1.ContainerImage.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 8: {
                                        message.postStartupScript = reader.string();
                                        break;
                                    }
                                case 9: {
                                        message.createTime = $root.google.protobuf.Timestamp.decode(reader, reader.uint32());
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes an Environment message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.notebooks.v1beta1.Environment
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.notebooks.v1beta1.Environment} Environment
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        Environment.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies an Environment message.
                         * @function verify
                         * @memberof google.cloud.notebooks.v1beta1.Environment
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        Environment.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            var properties = {};
                            if (message.name != null && message.hasOwnProperty("name"))
                                if (!$util.isString(message.name))
                                    return "name: string expected";
                            if (message.displayName != null && message.hasOwnProperty("displayName"))
                                if (!$util.isString(message.displayName))
                                    return "displayName: string expected";
                            if (message.description != null && message.hasOwnProperty("description"))
                                if (!$util.isString(message.description))
                                    return "description: string expected";
                            if (message.vmImage != null && message.hasOwnProperty("vmImage")) {
                                properties.imageType = 1;
                                {
                                    var error = $root.google.cloud.notebooks.v1beta1.VmImage.verify(message.vmImage);
                                    if (error)
                                        return "vmImage." + error;
                                }
                            }
                            if (message.containerImage != null && message.hasOwnProperty("containerImage")) {
                                if (properties.imageType === 1)
                                    return "imageType: multiple values";
                                properties.imageType = 1;
                                {
                                    var error = $root.google.cloud.notebooks.v1beta1.ContainerImage.verify(message.containerImage);
                                    if (error)
                                        return "containerImage." + error;
                                }
                            }
                            if (message.postStartupScript != null && message.hasOwnProperty("postStartupScript"))
                                if (!$util.isString(message.postStartupScript))
                                    return "postStartupScript: string expected";
                            if (message.createTime != null && message.hasOwnProperty("createTime")) {
                                var error = $root.google.protobuf.Timestamp.verify(message.createTime);
                                if (error)
                                    return "createTime." + error;
                            }
                            return null;
                        };
    
                        /**
                         * Creates an Environment message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.notebooks.v1beta1.Environment
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.notebooks.v1beta1.Environment} Environment
                         */
                        Environment.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.notebooks.v1beta1.Environment)
                                return object;
                            var message = new $root.google.cloud.notebooks.v1beta1.Environment();
                            if (object.name != null)
                                message.name = String(object.name);
                            if (object.displayName != null)
                                message.displayName = String(object.displayName);
                            if (object.description != null)
                                message.description = String(object.description);
                            if (object.vmImage != null) {
                                if (typeof object.vmImage !== "object")
                                    throw TypeError(".google.cloud.notebooks.v1beta1.Environment.vmImage: object expected");
                                message.vmImage = $root.google.cloud.notebooks.v1beta1.VmImage.fromObject(object.vmImage);
                            }
                            if (object.containerImage != null) {
                                if (typeof object.containerImage !== "object")
                                    throw TypeError(".google.cloud.notebooks.v1beta1.Environment.containerImage: object expected");
                                message.containerImage = $root.google.cloud.notebooks.v1beta1.ContainerImage.fromObject(object.containerImage);
                            }
                            if (object.postStartupScript != null)
                                message.postStartupScript = String(object.postStartupScript);
                            if (object.createTime != null) {
                                if (typeof object.createTime !== "object")
                                    throw TypeError(".google.cloud.notebooks.v1beta1.Environment.createTime: object expected");
                                message.createTime = $root.google.protobuf.Timestamp.fromObject(object.createTime);
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from an Environment message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.notebooks.v1beta1.Environment
                         * @static
                         * @param {google.cloud.notebooks.v1beta1.Environment} message Environment
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        Environment.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.name = "";
                                object.displayName = "";
                                object.description = "";
                                object.postStartupScript = "";
                                object.createTime = null;
                            }
                            if (message.name != null && message.hasOwnProperty("name"))
                                object.name = message.name;
                            if (message.displayName != null && message.hasOwnProperty("displayName"))
                                object.displayName = message.displayName;
                            if (message.description != null && message.hasOwnProperty("description"))
                                object.description = message.description;
                            if (message.vmImage != null && message.hasOwnProperty("vmImage")) {
                                object.vmImage = $root.google.cloud.notebooks.v1beta1.VmImage.toObject(message.vmImage, options);
                                if (options.oneofs)
                                    object.imageType = "vmImage";
                            }
                            if (message.containerImage != null && message.hasOwnProperty("containerImage")) {
                                object.containerImage = $root.google.cloud.notebooks.v1beta1.ContainerImage.toObject(message.containerImage, options);
                                if (options.oneofs)
                                    object.imageType = "containerImage";
                            }
                            if (message.postStartupScript != null && message.hasOwnProperty("postStartupScript"))
                                object.postStartupScript = message.postStartupScript;
                            if (message.createTime != null && message.hasOwnProperty("createTime"))
                                object.createTime = $root.google.protobuf.Timestamp.toObject(message.createTime, options);
                            return object;
                        };
    
                        /**
                         * Converts this Environment to JSON.
                         * @function toJSON
                         * @memberof google.cloud.notebooks.v1beta1.Environment
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        Environment.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for Environment
                         * @function getTypeUrl
                         * @memberof google.cloud.notebooks.v1beta1.Environment
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        Environment.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.notebooks.v1beta1.Environment";
                        };
    
                        return Environment;
                    })();
    
                    v1beta1.VmImage = (function() {
    
                        /**
                         * Properties of a VmImage.
                         * @memberof google.cloud.notebooks.v1beta1
                         * @interface IVmImage
                         * @property {string|null} [project] VmImage project
                         * @property {string|null} [imageName] VmImage imageName
                         * @property {string|null} [imageFamily] VmImage imageFamily
                         */
    
                        /**
                         * Constructs a new VmImage.
                         * @memberof google.cloud.notebooks.v1beta1
                         * @classdesc Represents a VmImage.
                         * @implements IVmImage
                         * @constructor
                         * @param {google.cloud.notebooks.v1beta1.IVmImage=} [properties] Properties to set
                         */
                        function VmImage(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * VmImage project.
                         * @member {string} project
                         * @memberof google.cloud.notebooks.v1beta1.VmImage
                         * @instance
                         */
                        VmImage.prototype.project = "";
    
                        /**
                         * VmImage imageName.
                         * @member {string|null|undefined} imageName
                         * @memberof google.cloud.notebooks.v1beta1.VmImage
                         * @instance
                         */
                        VmImage.prototype.imageName = null;
    
                        /**
                         * VmImage imageFamily.
                         * @member {string|null|undefined} imageFamily
                         * @memberof google.cloud.notebooks.v1beta1.VmImage
                         * @instance
                         */
                        VmImage.prototype.imageFamily = null;
    
                        // OneOf field names bound to virtual getters and setters
                        var $oneOfFields;
    
                        /**
                         * VmImage image.
                         * @member {"imageName"|"imageFamily"|undefined} image
                         * @memberof google.cloud.notebooks.v1beta1.VmImage
                         * @instance
                         */
                        Object.defineProperty(VmImage.prototype, "image", {
                            get: $util.oneOfGetter($oneOfFields = ["imageName", "imageFamily"]),
                            set: $util.oneOfSetter($oneOfFields)
                        });
    
                        /**
                         * Creates a new VmImage instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.notebooks.v1beta1.VmImage
                         * @static
                         * @param {google.cloud.notebooks.v1beta1.IVmImage=} [properties] Properties to set
                         * @returns {google.cloud.notebooks.v1beta1.VmImage} VmImage instance
                         */
                        VmImage.create = function create(properties) {
                            return new VmImage(properties);
                        };
    
                        /**
                         * Encodes the specified VmImage message. Does not implicitly {@link google.cloud.notebooks.v1beta1.VmImage.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.notebooks.v1beta1.VmImage
                         * @static
                         * @param {google.cloud.notebooks.v1beta1.IVmImage} message VmImage message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        VmImage.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.project != null && Object.hasOwnProperty.call(message, "project"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.project);
                            if (message.imageName != null && Object.hasOwnProperty.call(message, "imageName"))
                                writer.uint32(/* id 2, wireType 2 =*/18).string(message.imageName);
                            if (message.imageFamily != null && Object.hasOwnProperty.call(message, "imageFamily"))
                                writer.uint32(/* id 3, wireType 2 =*/26).string(message.imageFamily);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified VmImage message, length delimited. Does not implicitly {@link google.cloud.notebooks.v1beta1.VmImage.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.notebooks.v1beta1.VmImage
                         * @static
                         * @param {google.cloud.notebooks.v1beta1.IVmImage} message VmImage message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        VmImage.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a VmImage message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.notebooks.v1beta1.VmImage
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.notebooks.v1beta1.VmImage} VmImage
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        VmImage.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.notebooks.v1beta1.VmImage();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.project = reader.string();
                                        break;
                                    }
                                case 2: {
                                        message.imageName = reader.string();
                                        break;
                                    }
                                case 3: {
                                        message.imageFamily = reader.string();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a VmImage message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.notebooks.v1beta1.VmImage
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.notebooks.v1beta1.VmImage} VmImage
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        VmImage.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a VmImage message.
                         * @function verify
                         * @memberof google.cloud.notebooks.v1beta1.VmImage
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        VmImage.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            var properties = {};
                            if (message.project != null && message.hasOwnProperty("project"))
                                if (!$util.isString(message.project))
                                    return "project: string expected";
                            if (message.imageName != null && message.hasOwnProperty("imageName")) {
                                properties.image = 1;
                                if (!$util.isString(message.imageName))
                                    return "imageName: string expected";
                            }
                            if (message.imageFamily != null && message.hasOwnProperty("imageFamily")) {
                                if (properties.image === 1)
                                    return "image: multiple values";
                                properties.image = 1;
                                if (!$util.isString(message.imageFamily))
                                    return "imageFamily: string expected";
                            }
                            return null;
                        };
    
                        /**
                         * Creates a VmImage message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.notebooks.v1beta1.VmImage
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.notebooks.v1beta1.VmImage} VmImage
                         */
                        VmImage.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.notebooks.v1beta1.VmImage)
                                return object;
                            var message = new $root.google.cloud.notebooks.v1beta1.VmImage();
                            if (object.project != null)
                                message.project = String(object.project);
                            if (object.imageName != null)
                                message.imageName = String(object.imageName);
                            if (object.imageFamily != null)
                                message.imageFamily = String(object.imageFamily);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a VmImage message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.notebooks.v1beta1.VmImage
                         * @static
                         * @param {google.cloud.notebooks.v1beta1.VmImage} message VmImage
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        VmImage.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults)
                                object.project = "";
                            if (message.project != null && message.hasOwnProperty("project"))
                                object.project = message.project;
                            if (message.imageName != null && message.hasOwnProperty("imageName")) {
                                object.imageName = message.imageName;
                                if (options.oneofs)
                                    object.image = "imageName";
                            }
                            if (message.imageFamily != null && message.hasOwnProperty("imageFamily")) {
                                object.imageFamily = message.imageFamily;
                                if (options.oneofs)
                                    object.image = "imageFamily";
                            }
                            return object;
                        };
    
                        /**
                         * Converts this VmImage to JSON.
                         * @function toJSON
                         * @memberof google.cloud.notebooks.v1beta1.VmImage
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        VmImage.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for VmImage
                         * @function getTypeUrl
                         * @memberof google.cloud.notebooks.v1beta1.VmImage
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        VmImage.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.notebooks.v1beta1.VmImage";
                        };
    
                        return VmImage;
                    })();
    
                    v1beta1.ContainerImage = (function() {
    
                        /**
                         * Properties of a ContainerImage.
                         * @memberof google.cloud.notebooks.v1beta1
                         * @interface IContainerImage
                         * @property {string|null} [repository] ContainerImage repository
                         * @property {string|null} [tag] ContainerImage tag
                         */
    
                        /**
                         * Constructs a new ContainerImage.
                         * @memberof google.cloud.notebooks.v1beta1
                         * @classdesc Represents a ContainerImage.
                         * @implements IContainerImage
                         * @constructor
                         * @param {google.cloud.notebooks.v1beta1.IContainerImage=} [properties] Properties to set
                         */
                        function ContainerImage(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * ContainerImage repository.
                         * @member {string} repository
                         * @memberof google.cloud.notebooks.v1beta1.ContainerImage
                         * @instance
                         */
                        ContainerImage.prototype.repository = "";
    
                        /**
                         * ContainerImage tag.
                         * @member {string} tag
                         * @memberof google.cloud.notebooks.v1beta1.ContainerImage
                         * @instance
                         */
                        ContainerImage.prototype.tag = "";
    
                        /**
                         * Creates a new ContainerImage instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.notebooks.v1beta1.ContainerImage
                         * @static
                         * @param {google.cloud.notebooks.v1beta1.IContainerImage=} [properties] Properties to set
                         * @returns {google.cloud.notebooks.v1beta1.ContainerImage} ContainerImage instance
                         */
                        ContainerImage.create = function create(properties) {
                            return new ContainerImage(properties);
                        };
    
                        /**
                         * Encodes the specified ContainerImage message. Does not implicitly {@link google.cloud.notebooks.v1beta1.ContainerImage.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.notebooks.v1beta1.ContainerImage
                         * @static
                         * @param {google.cloud.notebooks.v1beta1.IContainerImage} message ContainerImage message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        ContainerImage.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.repository != null && Object.hasOwnProperty.call(message, "repository"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.repository);
                            if (message.tag != null && Object.hasOwnProperty.call(message, "tag"))
                                writer.uint32(/* id 2, wireType 2 =*/18).string(message.tag);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified ContainerImage message, length delimited. Does not implicitly {@link google.cloud.notebooks.v1beta1.ContainerImage.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.notebooks.v1beta1.ContainerImage
                         * @static
                         * @param {google.cloud.notebooks.v1beta1.IContainerImage} message ContainerImage message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        ContainerImage.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a ContainerImage message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.notebooks.v1beta1.ContainerImage
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.notebooks.v1beta1.ContainerImage} ContainerImage
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        ContainerImage.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.notebooks.v1beta1.ContainerImage();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.repository = reader.string();
                                        break;
                                    }
                                case 2: {
                                        message.tag = reader.string();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a ContainerImage message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.notebooks.v1beta1.ContainerImage
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.notebooks.v1beta1.ContainerImage} ContainerImage
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        ContainerImage.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a ContainerImage message.
                         * @function verify
                         * @memberof google.cloud.notebooks.v1beta1.ContainerImage
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        ContainerImage.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.repository != null && message.hasOwnProperty("repository"))
                                if (!$util.isString(message.repository))
                                    return "repository: string expected";
                            if (message.tag != null && message.hasOwnProperty("tag"))
                                if (!$util.isString(message.tag))
                                    return "tag: string expected";
                            return null;
                        };
    
                        /**
                         * Creates a ContainerImage message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.notebooks.v1beta1.ContainerImage
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.notebooks.v1beta1.ContainerImage} ContainerImage
                         */
                        ContainerImage.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.notebooks.v1beta1.ContainerImage)
                                return object;
                            var message = new $root.google.cloud.notebooks.v1beta1.ContainerImage();
                            if (object.repository != null)
                                message.repository = String(object.repository);
                            if (object.tag != null)
                                message.tag = String(object.tag);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a ContainerImage message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.notebooks.v1beta1.ContainerImage
                         * @static
                         * @param {google.cloud.notebooks.v1beta1.ContainerImage} message ContainerImage
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        ContainerImage.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.repository = "";
                                object.tag = "";
                            }
                            if (message.repository != null && message.hasOwnProperty("repository"))
                                object.repository = message.repository;
                            if (message.tag != null && message.hasOwnProperty("tag"))
                                object.tag = message.tag;
                            return object;
                        };
    
                        /**
                         * Converts this ContainerImage to JSON.
                         * @function toJSON
                         * @memberof google.cloud.notebooks.v1beta1.ContainerImage
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        ContainerImage.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for ContainerImage
                         * @function getTypeUrl
                         * @memberof google.cloud.notebooks.v1beta1.ContainerImage
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        ContainerImage.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.notebooks.v1beta1.ContainerImage";
                        };
    
                        return ContainerImage;
                    })();
    
                    v1beta1.ReservationAffinity = (function() {
    
                        /**
                         * Properties of a ReservationAffinity.
                         * @memberof google.cloud.notebooks.v1beta1
                         * @interface IReservationAffinity
                         * @property {google.cloud.notebooks.v1beta1.ReservationAffinity.Type|null} [consumeReservationType] ReservationAffinity consumeReservationType
                         * @property {string|null} [key] ReservationAffinity key
                         * @property {Array.<string>|null} [values] ReservationAffinity values
                         */
    
                        /**
                         * Constructs a new ReservationAffinity.
                         * @memberof google.cloud.notebooks.v1beta1
                         * @classdesc Represents a ReservationAffinity.
                         * @implements IReservationAffinity
                         * @constructor
                         * @param {google.cloud.notebooks.v1beta1.IReservationAffinity=} [properties] Properties to set
                         */
                        function ReservationAffinity(properties) {
                            this.values = [];
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * ReservationAffinity consumeReservationType.
                         * @member {google.cloud.notebooks.v1beta1.ReservationAffinity.Type} consumeReservationType
                         * @memberof google.cloud.notebooks.v1beta1.ReservationAffinity
                         * @instance
                         */
                        ReservationAffinity.prototype.consumeReservationType = 0;
    
                        /**
                         * ReservationAffinity key.
                         * @member {string} key
                         * @memberof google.cloud.notebooks.v1beta1.ReservationAffinity
                         * @instance
                         */
                        ReservationAffinity.prototype.key = "";
    
                        /**
                         * ReservationAffinity values.
                         * @member {Array.<string>} values
                         * @memberof google.cloud.notebooks.v1beta1.ReservationAffinity
                         * @instance
                         */
                        ReservationAffinity.prototype.values = $util.emptyArray;
    
                        /**
                         * Creates a new ReservationAffinity instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.notebooks.v1beta1.ReservationAffinity
                         * @static
                         * @param {google.cloud.notebooks.v1beta1.IReservationAffinity=} [properties] Properties to set
                         * @returns {google.cloud.notebooks.v1beta1.ReservationAffinity} ReservationAffinity instance
                         */
                        ReservationAffinity.create = function create(properties) {
                            return new ReservationAffinity(properties);
                        };
    
                        /**
                         * Encodes the specified ReservationAffinity message. Does not implicitly {@link google.cloud.notebooks.v1beta1.ReservationAffinity.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.notebooks.v1beta1.ReservationAffinity
                         * @static
                         * @param {google.cloud.notebooks.v1beta1.IReservationAffinity} message ReservationAffinity message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        ReservationAffinity.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.consumeReservationType != null && Object.hasOwnProperty.call(message, "consumeReservationType"))
                                writer.uint32(/* id 1, wireType 0 =*/8).int32(message.consumeReservationType);
                            if (message.key != null && Object.hasOwnProperty.call(message, "key"))
                                writer.uint32(/* id 2, wireType 2 =*/18).string(message.key);
                            if (message.values != null && message.values.length)
                                for (var i = 0; i < message.values.length; ++i)
                                    writer.uint32(/* id 3, wireType 2 =*/26).string(message.values[i]);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified ReservationAffinity message, length delimited. Does not implicitly {@link google.cloud.notebooks.v1beta1.ReservationAffinity.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.notebooks.v1beta1.ReservationAffinity
                         * @static
                         * @param {google.cloud.notebooks.v1beta1.IReservationAffinity} message ReservationAffinity message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        ReservationAffinity.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a ReservationAffinity message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.notebooks.v1beta1.ReservationAffinity
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.notebooks.v1beta1.ReservationAffinity} ReservationAffinity
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        ReservationAffinity.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.notebooks.v1beta1.ReservationAffinity();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.consumeReservationType = reader.int32();
                                        break;
                                    }
                                case 2: {
                                        message.key = reader.string();
                                        break;
                                    }
                                case 3: {
                                        if (!(message.values && message.values.length))
                                            message.values = [];
                                        message.values.push(reader.string());
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a ReservationAffinity message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.notebooks.v1beta1.ReservationAffinity
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.notebooks.v1beta1.ReservationAffinity} ReservationAffinity
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        ReservationAffinity.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a ReservationAffinity message.
                         * @function verify
                         * @memberof google.cloud.notebooks.v1beta1.ReservationAffinity
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        ReservationAffinity.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.consumeReservationType != null && message.hasOwnProperty("consumeReservationType"))
                                switch (message.consumeReservationType) {
                                default:
                                    return "consumeReservationType: enum value expected";
                                case 0:
                                case 1:
                                case 2:
                                case 3:
                                    break;
                                }
                            if (message.key != null && message.hasOwnProperty("key"))
                                if (!$util.isString(message.key))
                                    return "key: string expected";
                            if (message.values != null && message.hasOwnProperty("values")) {
                                if (!Array.isArray(message.values))
                                    return "values: array expected";
                                for (var i = 0; i < message.values.length; ++i)
                                    if (!$util.isString(message.values[i]))
                                        return "values: string[] expected";
                            }
                            return null;
                        };
    
                        /**
                         * Creates a ReservationAffinity message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.notebooks.v1beta1.ReservationAffinity
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.notebooks.v1beta1.ReservationAffinity} ReservationAffinity
                         */
                        ReservationAffinity.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.notebooks.v1beta1.ReservationAffinity)
                                return object;
                            var message = new $root.google.cloud.notebooks.v1beta1.ReservationAffinity();
                            switch (object.consumeReservationType) {
                            default:
                                if (typeof object.consumeReservationType === "number") {
                                    message.consumeReservationType = object.consumeReservationType;
                                    break;
                                }
                                break;
                            case "TYPE_UNSPECIFIED":
                            case 0:
                                message.consumeReservationType = 0;
                                break;
                            case "NO_RESERVATION":
                            case 1:
                                message.consumeReservationType = 1;
                                break;
                            case "ANY_RESERVATION":
                            case 2:
                                message.consumeReservationType = 2;
                                break;
                            case "SPECIFIC_RESERVATION":
                            case 3:
                                message.consumeReservationType = 3;
                                break;
                            }
                            if (object.key != null)
                                message.key = String(object.key);
                            if (object.values) {
                                if (!Array.isArray(object.values))
                                    throw TypeError(".google.cloud.notebooks.v1beta1.ReservationAffinity.values: array expected");
                                message.values = [];
                                for (var i = 0; i < object.values.length; ++i)
                                    message.values[i] = String(object.values[i]);
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a ReservationAffinity message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.notebooks.v1beta1.ReservationAffinity
                         * @static
                         * @param {google.cloud.notebooks.v1beta1.ReservationAffinity} message ReservationAffinity
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        ReservationAffinity.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.arrays || options.defaults)
                                object.values = [];
                            if (options.defaults) {
                                object.consumeReservationType = options.enums === String ? "TYPE_UNSPECIFIED" : 0;
                                object.key = "";
                            }
                            if (message.consumeReservationType != null && message.hasOwnProperty("consumeReservationType"))
                                object.consumeReservationType = options.enums === String ? $root.google.cloud.notebooks.v1beta1.ReservationAffinity.Type[message.consumeReservationType] === undefined ? message.consumeReservationType : $root.google.cloud.notebooks.v1beta1.ReservationAffinity.Type[message.consumeReservationType] : message.consumeReservationType;
                            if (message.key != null && message.hasOwnProperty("key"))
                                object.key = message.key;
                            if (message.values && message.values.length) {
                                object.values = [];
                                for (var j = 0; j < message.values.length; ++j)
                                    object.values[j] = message.values[j];
                            }
                            return object;
                        };
    
                        /**
                         * Converts this ReservationAffinity to JSON.
                         * @function toJSON
                         * @memberof google.cloud.notebooks.v1beta1.ReservationAffinity
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        ReservationAffinity.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for ReservationAffinity
                         * @function getTypeUrl
                         * @memberof google.cloud.notebooks.v1beta1.ReservationAffinity
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        ReservationAffinity.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.notebooks.v1beta1.ReservationAffinity";
                        };
    
                        /**
                         * Type enum.
                         * @name google.cloud.notebooks.v1beta1.ReservationAffinity.Type
                         * @enum {number}
                         * @property {number} TYPE_UNSPECIFIED=0 TYPE_UNSPECIFIED value
                         * @property {number} NO_RESERVATION=1 NO_RESERVATION value
                         * @property {number} ANY_RESERVATION=2 ANY_RESERVATION value
                         * @property {number} SPECIFIC_RESERVATION=3 SPECIFIC_RESERVATION value
                         */
                        ReservationAffinity.Type = (function() {
                            var valuesById = {}, values = Object.create(valuesById);
                            values[valuesById[0] = "TYPE_UNSPECIFIED"] = 0;
                            values[valuesById[1] = "NO_RESERVATION"] = 1;
                            values[valuesById[2] = "ANY_RESERVATION"] = 2;
                            values[valuesById[3] = "SPECIFIC_RESERVATION"] = 3;
                            return values;
                        })();
    
                        return ReservationAffinity;
                    })();
    
                    v1beta1.Instance = (function() {
    
                        /**
                         * Properties of an Instance.
                         * @memberof google.cloud.notebooks.v1beta1
                         * @interface IInstance
                         * @property {string|null} [name] Instance name
                         * @property {google.cloud.notebooks.v1beta1.IVmImage|null} [vmImage] Instance vmImage
                         * @property {google.cloud.notebooks.v1beta1.IContainerImage|null} [containerImage] Instance containerImage
                         * @property {string|null} [postStartupScript] Instance postStartupScript
                         * @property {string|null} [proxyUri] Instance proxyUri
                         * @property {Array.<string>|null} [instanceOwners] Instance instanceOwners
                         * @property {string|null} [serviceAccount] Instance serviceAccount
                         * @property {string|null} [machineType] Instance machineType
                         * @property {google.cloud.notebooks.v1beta1.Instance.IAcceleratorConfig|null} [acceleratorConfig] Instance acceleratorConfig
                         * @property {google.cloud.notebooks.v1beta1.Instance.State|null} [state] Instance state
                         * @property {boolean|null} [installGpuDriver] Instance installGpuDriver
                         * @property {string|null} [customGpuDriverPath] Instance customGpuDriverPath
                         * @property {google.cloud.notebooks.v1beta1.Instance.DiskType|null} [bootDiskType] Instance bootDiskType
                         * @property {number|Long|null} [bootDiskSizeGb] Instance bootDiskSizeGb
                         * @property {google.cloud.notebooks.v1beta1.Instance.DiskType|null} [dataDiskType] Instance dataDiskType
                         * @property {number|Long|null} [dataDiskSizeGb] Instance dataDiskSizeGb
                         * @property {boolean|null} [noRemoveDataDisk] Instance noRemoveDataDisk
                         * @property {google.cloud.notebooks.v1beta1.Instance.DiskEncryption|null} [diskEncryption] Instance diskEncryption
                         * @property {string|null} [kmsKey] Instance kmsKey
                         * @property {boolean|null} [noPublicIp] Instance noPublicIp
                         * @property {boolean|null} [noProxyAccess] Instance noProxyAccess
                         * @property {string|null} [network] Instance network
                         * @property {string|null} [subnet] Instance subnet
                         * @property {Object.<string,string>|null} [labels] Instance labels
                         * @property {Object.<string,string>|null} [metadata] Instance metadata
                         * @property {google.cloud.notebooks.v1beta1.Instance.NicType|null} [nicType] Instance nicType
                         * @property {google.cloud.notebooks.v1beta1.IReservationAffinity|null} [reservationAffinity] Instance reservationAffinity
                         * @property {boolean|null} [canIpForward] Instance canIpForward
                         * @property {google.protobuf.ITimestamp|null} [createTime] Instance createTime
                         * @property {google.protobuf.ITimestamp|null} [updateTime] Instance updateTime
                         */
    
                        /**
                         * Constructs a new Instance.
                         * @memberof google.cloud.notebooks.v1beta1
                         * @classdesc Represents an Instance.
                         * @implements IInstance
                         * @constructor
                         * @param {google.cloud.notebooks.v1beta1.IInstance=} [properties] Properties to set
                         */
                        function Instance(properties) {
                            this.instanceOwners = [];
                            this.labels = {};
                            this.metadata = {};
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * Instance name.
                         * @member {string} name
                         * @memberof google.cloud.notebooks.v1beta1.Instance
                         * @instance
                         */
                        Instance.prototype.name = "";
    
                        /**
                         * Instance vmImage.
                         * @member {google.cloud.notebooks.v1beta1.IVmImage|null|undefined} vmImage
                         * @memberof google.cloud.notebooks.v1beta1.Instance
                         * @instance
                         */
                        Instance.prototype.vmImage = null;
    
                        /**
                         * Instance containerImage.
                         * @member {google.cloud.notebooks.v1beta1.IContainerImage|null|undefined} containerImage
                         * @memberof google.cloud.notebooks.v1beta1.Instance
                         * @instance
                         */
                        Instance.prototype.containerImage = null;
    
                        /**
                         * Instance postStartupScript.
                         * @member {string} postStartupScript
                         * @memberof google.cloud.notebooks.v1beta1.Instance
                         * @instance
                         */
                        Instance.prototype.postStartupScript = "";
    
                        /**
                         * Instance proxyUri.
                         * @member {string} proxyUri
                         * @memberof google.cloud.notebooks.v1beta1.Instance
                         * @instance
                         */
                        Instance.prototype.proxyUri = "";
    
                        /**
                         * Instance instanceOwners.
                         * @member {Array.<string>} instanceOwners
                         * @memberof google.cloud.notebooks.v1beta1.Instance
                         * @instance
                         */
                        Instance.prototype.instanceOwners = $util.emptyArray;
    
                        /**
                         * Instance serviceAccount.
                         * @member {string} serviceAccount
                         * @memberof google.cloud.notebooks.v1beta1.Instance
                         * @instance
                         */
                        Instance.prototype.serviceAccount = "";
    
                        /**
                         * Instance machineType.
                         * @member {string} machineType
                         * @memberof google.cloud.notebooks.v1beta1.Instance
                         * @instance
                         */
                        Instance.prototype.machineType = "";
    
                        /**
                         * Instance acceleratorConfig.
                         * @member {google.cloud.notebooks.v1beta1.Instance.IAcceleratorConfig|null|undefined} acceleratorConfig
                         * @memberof google.cloud.notebooks.v1beta1.Instance
                         * @instance
                         */
                        Instance.prototype.acceleratorConfig = null;
    
                        /**
                         * Instance state.
                         * @member {google.cloud.notebooks.v1beta1.Instance.State} state
                         * @memberof google.cloud.notebooks.v1beta1.Instance
                         * @instance
                         */
                        Instance.prototype.state = 0;
    
                        /**
                         * Instance installGpuDriver.
                         * @member {boolean} installGpuDriver
                         * @memberof google.cloud.notebooks.v1beta1.Instance
                         * @instance
                         */
                        Instance.prototype.installGpuDriver = false;
    
                        /**
                         * Instance customGpuDriverPath.
                         * @member {string} customGpuDriverPath
                         * @memberof google.cloud.notebooks.v1beta1.Instance
                         * @instance
                         */
                        Instance.prototype.customGpuDriverPath = "";
    
                        /**
                         * Instance bootDiskType.
                         * @member {google.cloud.notebooks.v1beta1.Instance.DiskType} bootDiskType
                         * @memberof google.cloud.notebooks.v1beta1.Instance
                         * @instance
                         */
                        Instance.prototype.bootDiskType = 0;
    
                        /**
                         * Instance bootDiskSizeGb.
                         * @member {number|Long} bootDiskSizeGb
                         * @memberof google.cloud.notebooks.v1beta1.Instance
                         * @instance
                         */
                        Instance.prototype.bootDiskSizeGb = $util.Long ? $util.Long.fromBits(0,0,false) : 0;
    
                        /**
                         * Instance dataDiskType.
                         * @member {google.cloud.notebooks.v1beta1.Instance.DiskType} dataDiskType
                         * @memberof google.cloud.notebooks.v1beta1.Instance
                         * @instance
                         */
                        Instance.prototype.dataDiskType = 0;
    
                        /**
                         * Instance dataDiskSizeGb.
                         * @member {number|Long} dataDiskSizeGb
                         * @memberof google.cloud.notebooks.v1beta1.Instance
                         * @instance
                         */
                        Instance.prototype.dataDiskSizeGb = $util.Long ? $util.Long.fromBits(0,0,false) : 0;
    
                        /**
                         * Instance noRemoveDataDisk.
                         * @member {boolean} noRemoveDataDisk
                         * @memberof google.cloud.notebooks.v1beta1.Instance
                         * @instance
                         */
                        Instance.prototype.noRemoveDataDisk = false;
    
                        /**
                         * Instance diskEncryption.
                         * @member {google.cloud.notebooks.v1beta1.Instance.DiskEncryption} diskEncryption
                         * @memberof google.cloud.notebooks.v1beta1.Instance
                         * @instance
                         */
                        Instance.prototype.diskEncryption = 0;
    
                        /**
                         * Instance kmsKey.
                         * @member {string} kmsKey
                         * @memberof google.cloud.notebooks.v1beta1.Instance
                         * @instance
                         */
                        Instance.prototype.kmsKey = "";
    
                        /**
                         * Instance noPublicIp.
                         * @member {boolean} noPublicIp
                         * @memberof google.cloud.notebooks.v1beta1.Instance
                         * @instance
                         */
                        Instance.prototype.noPublicIp = false;
    
                        /**
                         * Instance noProxyAccess.
                         * @member {boolean} noProxyAccess
                         * @memberof google.cloud.notebooks.v1beta1.Instance
                         * @instance
                         */
                        Instance.prototype.noProxyAccess = false;
    
                        /**
                         * Instance network.
                         * @member {string} network
                         * @memberof google.cloud.notebooks.v1beta1.Instance
                         * @instance
                         */
                        Instance.prototype.network = "";
    
                        /**
                         * Instance subnet.
                         * @member {string} subnet
                         * @memberof google.cloud.notebooks.v1beta1.Instance
                         * @instance
                         */
                        Instance.prototype.subnet = "";
    
                        /**
                         * Instance labels.
                         * @member {Object.<string,string>} labels
                         * @memberof google.cloud.notebooks.v1beta1.Instance
                         * @instance
                         */
                        Instance.prototype.labels = $util.emptyObject;
    
                        /**
                         * Instance metadata.
                         * @member {Object.<string,string>} metadata
                         * @memberof google.cloud.notebooks.v1beta1.Instance
                         * @instance
                         */
                        Instance.prototype.metadata = $util.emptyObject;
    
                        /**
                         * Instance nicType.
                         * @member {google.cloud.notebooks.v1beta1.Instance.NicType} nicType
                         * @memberof google.cloud.notebooks.v1beta1.Instance
                         * @instance
                         */
                        Instance.prototype.nicType = 0;
    
                        /**
                         * Instance reservationAffinity.
                         * @member {google.cloud.notebooks.v1beta1.IReservationAffinity|null|undefined} reservationAffinity
                         * @memberof google.cloud.notebooks.v1beta1.Instance
                         * @instance
                         */
                        Instance.prototype.reservationAffinity = null;
    
                        /**
                         * Instance canIpForward.
                         * @member {boolean} canIpForward
                         * @memberof google.cloud.notebooks.v1beta1.Instance
                         * @instance
                         */
                        Instance.prototype.canIpForward = false;
    
                        /**
                         * Instance createTime.
                         * @member {google.protobuf.ITimestamp|null|undefined} createTime
                         * @memberof google.cloud.notebooks.v1beta1.Instance
                         * @instance
                         */
                        Instance.prototype.createTime = null;
    
                        /**
                         * Instance updateTime.
                         * @member {google.protobuf.ITimestamp|null|undefined} updateTime
                         * @memberof google.cloud.notebooks.v1beta1.Instance
                         * @instance
                         */
                        Instance.prototype.updateTime = null;
    
                        // OneOf field names bound to virtual getters and setters
                        var $oneOfFields;
    
                        /**
                         * Instance environment.
                         * @member {"vmImage"|"containerImage"|undefined} environment
                         * @memberof google.cloud.notebooks.v1beta1.Instance
                         * @instance
                         */
                        Object.defineProperty(Instance.prototype, "environment", {
                            get: $util.oneOfGetter($oneOfFields = ["vmImage", "containerImage"]),
                            set: $util.oneOfSetter($oneOfFields)
                        });
    
                        /**
                         * Creates a new Instance instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.notebooks.v1beta1.Instance
                         * @static
                         * @param {google.cloud.notebooks.v1beta1.IInstance=} [properties] Properties to set
                         * @returns {google.cloud.notebooks.v1beta1.Instance} Instance instance
                         */
                        Instance.create = function create(properties) {
                            return new Instance(properties);
                        };
    
                        /**
                         * Encodes the specified Instance message. Does not implicitly {@link google.cloud.notebooks.v1beta1.Instance.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.notebooks.v1beta1.Instance
                         * @static
                         * @param {google.cloud.notebooks.v1beta1.IInstance} message Instance message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        Instance.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                            if (message.vmImage != null && Object.hasOwnProperty.call(message, "vmImage"))
                                $root.google.cloud.notebooks.v1beta1.VmImage.encode(message.vmImage, writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                            if (message.containerImage != null && Object.hasOwnProperty.call(message, "containerImage"))
                                $root.google.cloud.notebooks.v1beta1.ContainerImage.encode(message.containerImage, writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();
                            if (message.postStartupScript != null && Object.hasOwnProperty.call(message, "postStartupScript"))
                                writer.uint32(/* id 4, wireType 2 =*/34).string(message.postStartupScript);
                            if (message.proxyUri != null && Object.hasOwnProperty.call(message, "proxyUri"))
                                writer.uint32(/* id 5, wireType 2 =*/42).string(message.proxyUri);
                            if (message.instanceOwners != null && message.instanceOwners.length)
                                for (var i = 0; i < message.instanceOwners.length; ++i)
                                    writer.uint32(/* id 6, wireType 2 =*/50).string(message.instanceOwners[i]);
                            if (message.serviceAccount != null && Object.hasOwnProperty.call(message, "serviceAccount"))
                                writer.uint32(/* id 7, wireType 2 =*/58).string(message.serviceAccount);
                            if (message.machineType != null && Object.hasOwnProperty.call(message, "machineType"))
                                writer.uint32(/* id 8, wireType 2 =*/66).string(message.machineType);
                            if (message.acceleratorConfig != null && Object.hasOwnProperty.call(message, "acceleratorConfig"))
                                $root.google.cloud.notebooks.v1beta1.Instance.AcceleratorConfig.encode(message.acceleratorConfig, writer.uint32(/* id 9, wireType 2 =*/74).fork()).ldelim();
                            if (message.state != null && Object.hasOwnProperty.call(message, "state"))
                                writer.uint32(/* id 10, wireType 0 =*/80).int32(message.state);
                            if (message.installGpuDriver != null && Object.hasOwnProperty.call(message, "installGpuDriver"))
                                writer.uint32(/* id 11, wireType 0 =*/88).bool(message.installGpuDriver);
                            if (message.customGpuDriverPath != null && Object.hasOwnProperty.call(message, "customGpuDriverPath"))
                                writer.uint32(/* id 12, wireType 2 =*/98).string(message.customGpuDriverPath);
                            if (message.bootDiskType != null && Object.hasOwnProperty.call(message, "bootDiskType"))
                                writer.uint32(/* id 13, wireType 0 =*/104).int32(message.bootDiskType);
                            if (message.bootDiskSizeGb != null && Object.hasOwnProperty.call(message, "bootDiskSizeGb"))
                                writer.uint32(/* id 14, wireType 0 =*/112).int64(message.bootDiskSizeGb);
                            if (message.diskEncryption != null && Object.hasOwnProperty.call(message, "diskEncryption"))
                                writer.uint32(/* id 15, wireType 0 =*/120).int32(message.diskEncryption);
                            if (message.kmsKey != null && Object.hasOwnProperty.call(message, "kmsKey"))
                                writer.uint32(/* id 16, wireType 2 =*/130).string(message.kmsKey);
                            if (message.noPublicIp != null && Object.hasOwnProperty.call(message, "noPublicIp"))
                                writer.uint32(/* id 17, wireType 0 =*/136).bool(message.noPublicIp);
                            if (message.noProxyAccess != null && Object.hasOwnProperty.call(message, "noProxyAccess"))
                                writer.uint32(/* id 18, wireType 0 =*/144).bool(message.noProxyAccess);
                            if (message.network != null && Object.hasOwnProperty.call(message, "network"))
                                writer.uint32(/* id 19, wireType 2 =*/154).string(message.network);
                            if (message.subnet != null && Object.hasOwnProperty.call(message, "subnet"))
                                writer.uint32(/* id 20, wireType 2 =*/162).string(message.subnet);
                            if (message.labels != null && Object.hasOwnProperty.call(message, "labels"))
                                for (var keys = Object.keys(message.labels), i = 0; i < keys.length; ++i)
                                    writer.uint32(/* id 21, wireType 2 =*/170).fork().uint32(/* id 1, wireType 2 =*/10).string(keys[i]).uint32(/* id 2, wireType 2 =*/18).string(message.labels[keys[i]]).ldelim();
                            if (message.metadata != null && Object.hasOwnProperty.call(message, "metadata"))
                                for (var keys = Object.keys(message.metadata), i = 0; i < keys.length; ++i)
                                    writer.uint32(/* id 22, wireType 2 =*/178).fork().uint32(/* id 1, wireType 2 =*/10).string(keys[i]).uint32(/* id 2, wireType 2 =*/18).string(message.metadata[keys[i]]).ldelim();
                            if (message.createTime != null && Object.hasOwnProperty.call(message, "createTime"))
                                $root.google.protobuf.Timestamp.encode(message.createTime, writer.uint32(/* id 23, wireType 2 =*/186).fork()).ldelim();
                            if (message.updateTime != null && Object.hasOwnProperty.call(message, "updateTime"))
                                $root.google.protobuf.Timestamp.encode(message.updateTime, writer.uint32(/* id 24, wireType 2 =*/194).fork()).ldelim();
                            if (message.dataDiskType != null && Object.hasOwnProperty.call(message, "dataDiskType"))
                                writer.uint32(/* id 25, wireType 0 =*/200).int32(message.dataDiskType);
                            if (message.dataDiskSizeGb != null && Object.hasOwnProperty.call(message, "dataDiskSizeGb"))
                                writer.uint32(/* id 26, wireType 0 =*/208).int64(message.dataDiskSizeGb);
                            if (message.noRemoveDataDisk != null && Object.hasOwnProperty.call(message, "noRemoveDataDisk"))
                                writer.uint32(/* id 27, wireType 0 =*/216).bool(message.noRemoveDataDisk);
                            if (message.nicType != null && Object.hasOwnProperty.call(message, "nicType"))
                                writer.uint32(/* id 28, wireType 0 =*/224).int32(message.nicType);
                            if (message.reservationAffinity != null && Object.hasOwnProperty.call(message, "reservationAffinity"))
                                $root.google.cloud.notebooks.v1beta1.ReservationAffinity.encode(message.reservationAffinity, writer.uint32(/* id 29, wireType 2 =*/234).fork()).ldelim();
                            if (message.canIpForward != null && Object.hasOwnProperty.call(message, "canIpForward"))
                                writer.uint32(/* id 31, wireType 0 =*/248).bool(message.canIpForward);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified Instance message, length delimited. Does not implicitly {@link google.cloud.notebooks.v1beta1.Instance.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.notebooks.v1beta1.Instance
                         * @static
                         * @param {google.cloud.notebooks.v1beta1.IInstance} message Instance message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        Instance.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes an Instance message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.notebooks.v1beta1.Instance
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.notebooks.v1beta1.Instance} Instance
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        Instance.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.notebooks.v1beta1.Instance(), key, value;
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.name = reader.string();
                                        break;
                                    }
                                case 2: {
                                        message.vmImage = $root.google.cloud.notebooks.v1beta1.VmImage.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 3: {
                                        message.containerImage = $root.google.cloud.notebooks.v1beta1.ContainerImage.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 4: {
                                        message.postStartupScript = reader.string();
                                        break;
                                    }
                                case 5: {
                                        message.proxyUri = reader.string();
                                        break;
                                    }
                                case 6: {
                                        if (!(message.instanceOwners && message.instanceOwners.length))
                                            message.instanceOwners = [];
                                        message.instanceOwners.push(reader.string());
                                        break;
                                    }
                                case 7: {
                                        message.serviceAccount = reader.string();
                                        break;
                                    }
                                case 8: {
                                        message.machineType = reader.string();
                                        break;
                                    }
                                case 9: {
                                        message.acceleratorConfig = $root.google.cloud.notebooks.v1beta1.Instance.AcceleratorConfig.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 10: {
                                        message.state = reader.int32();
                                        break;
                                    }
                                case 11: {
                                        message.installGpuDriver = reader.bool();
                                        break;
                                    }
                                case 12: {
                                        message.customGpuDriverPath = reader.string();
                                        break;
                                    }
                                case 13: {
                                        message.bootDiskType = reader.int32();
                                        break;
                                    }
                                case 14: {
                                        message.bootDiskSizeGb = reader.int64();
                                        break;
                                    }
                                case 25: {
                                        message.dataDiskType = reader.int32();
                                        break;
                                    }
                                case 26: {
                                        message.dataDiskSizeGb = reader.int64();
                                        break;
                                    }
                                case 27: {
                                        message.noRemoveDataDisk = reader.bool();
                                        break;
                                    }
                                case 15: {
                                        message.diskEncryption = reader.int32();
                                        break;
                                    }
                                case 16: {
                                        message.kmsKey = reader.string();
                                        break;
                                    }
                                case 17: {
                                        message.noPublicIp = reader.bool();
                                        break;
                                    }
                                case 18: {
                                        message.noProxyAccess = reader.bool();
                                        break;
                                    }
                                case 19: {
                                        message.network = reader.string();
                                        break;
                                    }
                                case 20: {
                                        message.subnet = reader.string();
                                        break;
                                    }
                                case 21: {
                                        if (message.labels === $util.emptyObject)
                                            message.labels = {};
                                        var end2 = reader.uint32() + reader.pos;
                                        key = "";
                                        value = "";
                                        while (reader.pos < end2) {
                                            var tag2 = reader.uint32();
                                            switch (tag2 >>> 3) {
                                            case 1:
                                                key = reader.string();
                                                break;
                                            case 2:
                                                value = reader.string();
                                                break;
                                            default:
                                                reader.skipType(tag2 & 7);
                                                break;
                                            }
                                        }
                                        message.labels[key] = value;
                                        break;
                                    }
                                case 22: {
                                        if (message.metadata === $util.emptyObject)
                                            message.metadata = {};
                                        var end2 = reader.uint32() + reader.pos;
                                        key = "";
                                        value = "";
                                        while (reader.pos < end2) {
                                            var tag2 = reader.uint32();
                                            switch (tag2 >>> 3) {
                                            case 1:
                                                key = reader.string();
                                                break;
                                            case 2:
                                                value = reader.string();
                                                break;
                                            default:
                                                reader.skipType(tag2 & 7);
                                                break;
                                            }
                                        }
                                        message.metadata[key] = value;
                                        break;
                                    }
                                case 28: {
                                        message.nicType = reader.int32();
                                        break;
                                    }
                                case 29: {
                                        message.reservationAffinity = $root.google.cloud.notebooks.v1beta1.ReservationAffinity.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 31: {
                                        message.canIpForward = reader.bool();
                                        break;
                                    }
                                case 23: {
                                        message.createTime = $root.google.protobuf.Timestamp.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 24: {
                                        message.updateTime = $root.google.protobuf.Timestamp.decode(reader, reader.uint32());
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes an Instance message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.notebooks.v1beta1.Instance
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.notebooks.v1beta1.Instance} Instance
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        Instance.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies an Instance message.
                         * @function verify
                         * @memberof google.cloud.notebooks.v1beta1.Instance
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        Instance.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            var properties = {};
                            if (message.name != null && message.hasOwnProperty("name"))
                                if (!$util.isString(message.name))
                                    return "name: string expected";
                            if (message.vmImage != null && message.hasOwnProperty("vmImage")) {
                                properties.environment = 1;
                                {
                                    var error = $root.google.cloud.notebooks.v1beta1.VmImage.verify(message.vmImage);
                                    if (error)
                                        return "vmImage." + error;
                                }
                            }
                            if (message.containerImage != null && message.hasOwnProperty("containerImage")) {
                                if (properties.environment === 1)
                                    return "environment: multiple values";
                                properties.environment = 1;
                                {
                                    var error = $root.google.cloud.notebooks.v1beta1.ContainerImage.verify(message.containerImage);
                                    if (error)
                                        return "containerImage." + error;
                                }
                            }
                            if (message.postStartupScript != null && message.hasOwnProperty("postStartupScript"))
                                if (!$util.isString(message.postStartupScript))
                                    return "postStartupScript: string expected";
                            if (message.proxyUri != null && message.hasOwnProperty("proxyUri"))
                                if (!$util.isString(message.proxyUri))
                                    return "proxyUri: string expected";
                            if (message.instanceOwners != null && message.hasOwnProperty("instanceOwners")) {
                                if (!Array.isArray(message.instanceOwners))
                                    return "instanceOwners: array expected";
                                for (var i = 0; i < message.instanceOwners.length; ++i)
                                    if (!$util.isString(message.instanceOwners[i]))
                                        return "instanceOwners: string[] expected";
                            }
                            if (message.serviceAccount != null && message.hasOwnProperty("serviceAccount"))
                                if (!$util.isString(message.serviceAccount))
                                    return "serviceAccount: string expected";
                            if (message.machineType != null && message.hasOwnProperty("machineType"))
                                if (!$util.isString(message.machineType))
                                    return "machineType: string expected";
                            if (message.acceleratorConfig != null && message.hasOwnProperty("acceleratorConfig")) {
                                var error = $root.google.cloud.notebooks.v1beta1.Instance.AcceleratorConfig.verify(message.acceleratorConfig);
                                if (error)
                                    return "acceleratorConfig." + error;
                            }
                            if (message.state != null && message.hasOwnProperty("state"))
                                switch (message.state) {
                                default:
                                    return "state: enum value expected";
                                case 0:
                                case 1:
                                case 2:
                                case 3:
                                case 4:
                                case 5:
                                case 6:
                                case 7:
                                case 8:
                                case 9:
                                case 10:
                                case 11:
                                    break;
                                }
                            if (message.installGpuDriver != null && message.hasOwnProperty("installGpuDriver"))
                                if (typeof message.installGpuDriver !== "boolean")
                                    return "installGpuDriver: boolean expected";
                            if (message.customGpuDriverPath != null && message.hasOwnProperty("customGpuDriverPath"))
                                if (!$util.isString(message.customGpuDriverPath))
                                    return "customGpuDriverPath: string expected";
                            if (message.bootDiskType != null && message.hasOwnProperty("bootDiskType"))
                                switch (message.bootDiskType) {
                                default:
                                    return "bootDiskType: enum value expected";
                                case 0:
                                case 1:
                                case 2:
                                case 3:
                                    break;
                                }
                            if (message.bootDiskSizeGb != null && message.hasOwnProperty("bootDiskSizeGb"))
                                if (!$util.isInteger(message.bootDiskSizeGb) && !(message.bootDiskSizeGb && $util.isInteger(message.bootDiskSizeGb.low) && $util.isInteger(message.bootDiskSizeGb.high)))
                                    return "bootDiskSizeGb: integer|Long expected";
                            if (message.dataDiskType != null && message.hasOwnProperty("dataDiskType"))
                                switch (message.dataDiskType) {
                                default:
                                    return "dataDiskType: enum value expected";
                                case 0:
                                case 1:
                                case 2:
                                case 3:
                                    break;
                                }
                            if (message.dataDiskSizeGb != null && message.hasOwnProperty("dataDiskSizeGb"))
                                if (!$util.isInteger(message.dataDiskSizeGb) && !(message.dataDiskSizeGb && $util.isInteger(message.dataDiskSizeGb.low) && $util.isInteger(message.dataDiskSizeGb.high)))
                                    return "dataDiskSizeGb: integer|Long expected";
                            if (message.noRemoveDataDisk != null && message.hasOwnProperty("noRemoveDataDisk"))
                                if (typeof message.noRemoveDataDisk !== "boolean")
                                    return "noRemoveDataDisk: boolean expected";
                            if (message.diskEncryption != null && message.hasOwnProperty("diskEncryption"))
                                switch (message.diskEncryption) {
                                default:
                                    return "diskEncryption: enum value expected";
                                case 0:
                                case 1:
                                case 2:
                                    break;
                                }
                            if (message.kmsKey != null && message.hasOwnProperty("kmsKey"))
                                if (!$util.isString(message.kmsKey))
                                    return "kmsKey: string expected";
                            if (message.noPublicIp != null && message.hasOwnProperty("noPublicIp"))
                                if (typeof message.noPublicIp !== "boolean")
                                    return "noPublicIp: boolean expected";
                            if (message.noProxyAccess != null && message.hasOwnProperty("noProxyAccess"))
                                if (typeof message.noProxyAccess !== "boolean")
                                    return "noProxyAccess: boolean expected";
                            if (message.network != null && message.hasOwnProperty("network"))
                                if (!$util.isString(message.network))
                                    return "network: string expected";
                            if (message.subnet != null && message.hasOwnProperty("subnet"))
                                if (!$util.isString(message.subnet))
                                    return "subnet: string expected";
                            if (message.labels != null && message.hasOwnProperty("labels")) {
                                if (!$util.isObject(message.labels))
                                    return "labels: object expected";
                                var key = Object.keys(message.labels);
                                for (var i = 0; i < key.length; ++i)
                                    if (!$util.isString(message.labels[key[i]]))
                                        return "labels: string{k:string} expected";
                            }
                            if (message.metadata != null && message.hasOwnProperty("metadata")) {
                                if (!$util.isObject(message.metadata))
                                    return "metadata: object expected";
                                var key = Object.keys(message.metadata);
                                for (var i = 0; i < key.length; ++i)
                                    if (!$util.isString(message.metadata[key[i]]))
                                        return "metadata: string{k:string} expected";
                            }
                            if (message.nicType != null && message.hasOwnProperty("nicType"))
                                switch (message.nicType) {
                                default:
                                    return "nicType: enum value expected";
                                case 0:
                                case 1:
                                case 2:
                                    break;
                                }
                            if (message.reservationAffinity != null && message.hasOwnProperty("reservationAffinity")) {
                                var error = $root.google.cloud.notebooks.v1beta1.ReservationAffinity.verify(message.reservationAffinity);
                                if (error)
                                    return "reservationAffinity." + error;
                            }
                            if (message.canIpForward != null && message.hasOwnProperty("canIpForward"))
                                if (typeof message.canIpForward !== "boolean")
                                    return "canIpForward: boolean expected";
                            if (message.createTime != null && message.hasOwnProperty("createTime")) {
                                var error = $root.google.protobuf.Timestamp.verify(message.createTime);
                                if (error)
                                    return "createTime." + error;
                            }
                            if (message.updateTime != null && message.hasOwnProperty("updateTime")) {
                                var error = $root.google.protobuf.Timestamp.verify(message.updateTime);
                                if (error)
                                    return "updateTime." + error;
                            }
                            return null;
                        };
    
                        /**
                         * Creates an Instance message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.notebooks.v1beta1.Instance
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.notebooks.v1beta1.Instance} Instance
                         */
                        Instance.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.notebooks.v1beta1.Instance)
                                return object;
                            var message = new $root.google.cloud.notebooks.v1beta1.Instance();
                            if (object.name != null)
                                message.name = String(object.name);
                            if (object.vmImage != null) {
                                if (typeof object.vmImage !== "object")
                                    throw TypeError(".google.cloud.notebooks.v1beta1.Instance.vmImage: object expected");
                                message.vmImage = $root.google.cloud.notebooks.v1beta1.VmImage.fromObject(object.vmImage);
                            }
                            if (object.containerImage != null) {
                                if (typeof object.containerImage !== "object")
                                    throw TypeError(".google.cloud.notebooks.v1beta1.Instance.containerImage: object expected");
                                message.containerImage = $root.google.cloud.notebooks.v1beta1.ContainerImage.fromObject(object.containerImage);
                            }
                            if (object.postStartupScript != null)
                                message.postStartupScript = String(object.postStartupScript);
                            if (object.proxyUri != null)
                                message.proxyUri = String(object.proxyUri);
                            if (object.instanceOwners) {
                                if (!Array.isArray(object.instanceOwners))
                                    throw TypeError(".google.cloud.notebooks.v1beta1.Instance.instanceOwners: array expected");
                                message.instanceOwners = [];
                                for (var i = 0; i < object.instanceOwners.length; ++i)
                                    message.instanceOwners[i] = String(object.instanceOwners[i]);
                            }
                            if (object.serviceAccount != null)
                                message.serviceAccount = String(object.serviceAccount);
                            if (object.machineType != null)
                                message.machineType = String(object.machineType);
                            if (object.acceleratorConfig != null) {
                                if (typeof object.acceleratorConfig !== "object")
                                    throw TypeError(".google.cloud.notebooks.v1beta1.Instance.acceleratorConfig: object expected");
                                message.acceleratorConfig = $root.google.cloud.notebooks.v1beta1.Instance.AcceleratorConfig.fromObject(object.acceleratorConfig);
                            }
                            switch (object.state) {
                            default:
                                if (typeof object.state === "number") {
                                    message.state = object.state;
                                    break;
                                }
                                break;
                            case "STATE_UNSPECIFIED":
                            case 0:
                                message.state = 0;
                                break;
                            case "STARTING":
                            case 1:
                                message.state = 1;
                                break;
                            case "PROVISIONING":
                            case 2:
                                message.state = 2;
                                break;
                            case "ACTIVE":
                            case 3:
                                message.state = 3;
                                break;
                            case "STOPPING":
                            case 4:
                                message.state = 4;
                                break;
                            case "STOPPED":
                            case 5:
                                message.state = 5;
                                break;
                            case "DELETED":
                            case 6:
                                message.state = 6;
                                break;
                            case "UPGRADING":
                            case 7:
                                message.state = 7;
                                break;
                            case "INITIALIZING":
                            case 8:
                                message.state = 8;
                                break;
                            case "REGISTERING":
                            case 9:
                                message.state = 9;
                                break;
                            case "SUSPENDING":
                            case 10:
                                message.state = 10;
                                break;
                            case "SUSPENDED":
                            case 11:
                                message.state = 11;
                                break;
                            }
                            if (object.installGpuDriver != null)
                                message.installGpuDriver = Boolean(object.installGpuDriver);
                            if (object.customGpuDriverPath != null)
                                message.customGpuDriverPath = String(object.customGpuDriverPath);
                            switch (object.bootDiskType) {
                            default:
                                if (typeof object.bootDiskType === "number") {
                                    message.bootDiskType = object.bootDiskType;
                                    break;
                                }
                                break;
                            case "DISK_TYPE_UNSPECIFIED":
                            case 0:
                                message.bootDiskType = 0;
                                break;
                            case "PD_STANDARD":
                            case 1:
                                message.bootDiskType = 1;
                                break;
                            case "PD_SSD":
                            case 2:
                                message.bootDiskType = 2;
                                break;
                            case "PD_BALANCED":
                            case 3:
                                message.bootDiskType = 3;
                                break;
                            }
                            if (object.bootDiskSizeGb != null)
                                if ($util.Long)
                                    (message.bootDiskSizeGb = $util.Long.fromValue(object.bootDiskSizeGb)).unsigned = false;
                                else if (typeof object.bootDiskSizeGb === "string")
                                    message.bootDiskSizeGb = parseInt(object.bootDiskSizeGb, 10);
                                else if (typeof object.bootDiskSizeGb === "number")
                                    message.bootDiskSizeGb = object.bootDiskSizeGb;
                                else if (typeof object.bootDiskSizeGb === "object")
                                    message.bootDiskSizeGb = new $util.LongBits(object.bootDiskSizeGb.low >>> 0, object.bootDiskSizeGb.high >>> 0).toNumber();
                            switch (object.dataDiskType) {
                            default:
                                if (typeof object.dataDiskType === "number") {
                                    message.dataDiskType = object.dataDiskType;
                                    break;
                                }
                                break;
                            case "DISK_TYPE_UNSPECIFIED":
                            case 0:
                                message.dataDiskType = 0;
                                break;
                            case "PD_STANDARD":
                            case 1:
                                message.dataDiskType = 1;
                                break;
                            case "PD_SSD":
                            case 2:
                                message.dataDiskType = 2;
                                break;
                            case "PD_BALANCED":
                            case 3:
                                message.dataDiskType = 3;
                                break;
                            }
                            if (object.dataDiskSizeGb != null)
                                if ($util.Long)
                                    (message.dataDiskSizeGb = $util.Long.fromValue(object.dataDiskSizeGb)).unsigned = false;
                                else if (typeof object.dataDiskSizeGb === "string")
                                    message.dataDiskSizeGb = parseInt(object.dataDiskSizeGb, 10);
                                else if (typeof object.dataDiskSizeGb === "number")
                                    message.dataDiskSizeGb = object.dataDiskSizeGb;
                                else if (typeof object.dataDiskSizeGb === "object")
                                    message.dataDiskSizeGb = new $util.LongBits(object.dataDiskSizeGb.low >>> 0, object.dataDiskSizeGb.high >>> 0).toNumber();
                            if (object.noRemoveDataDisk != null)
                                message.noRemoveDataDisk = Boolean(object.noRemoveDataDisk);
                            switch (object.diskEncryption) {
                            default:
                                if (typeof object.diskEncryption === "number") {
                                    message.diskEncryption = object.diskEncryption;
                                    break;
                                }
                                break;
                            case "DISK_ENCRYPTION_UNSPECIFIED":
                            case 0:
                                message.diskEncryption = 0;
                                break;
                            case "GMEK":
                            case 1:
                                message.diskEncryption = 1;
                                break;
                            case "CMEK":
                            case 2:
                                message.diskEncryption = 2;
                                break;
                            }
                            if (object.kmsKey != null)
                                message.kmsKey = String(object.kmsKey);
                            if (object.noPublicIp != null)
                                message.noPublicIp = Boolean(object.noPublicIp);
                            if (object.noProxyAccess != null)
                                message.noProxyAccess = Boolean(object.noProxyAccess);
                            if (object.network != null)
                                message.network = String(object.network);
                            if (object.subnet != null)
                                message.subnet = String(object.subnet);
                            if (object.labels) {
                                if (typeof object.labels !== "object")
                                    throw TypeError(".google.cloud.notebooks.v1beta1.Instance.labels: object expected");
                                message.labels = {};
                                for (var keys = Object.keys(object.labels), i = 0; i < keys.length; ++i)
                                    message.labels[keys[i]] = String(object.labels[keys[i]]);
                            }
                            if (object.metadata) {
                                if (typeof object.metadata !== "object")
                                    throw TypeError(".google.cloud.notebooks.v1beta1.Instance.metadata: object expected");
                                message.metadata = {};
                                for (var keys = Object.keys(object.metadata), i = 0; i < keys.length; ++i)
                                    message.metadata[keys[i]] = String(object.metadata[keys[i]]);
                            }
                            switch (object.nicType) {
                            default:
                                if (typeof object.nicType === "number") {
                                    message.nicType = object.nicType;
                                    break;
                                }
                                break;
                            case "UNSPECIFIED_NIC_TYPE":
                            case 0:
                                message.nicType = 0;
                                break;
                            case "VIRTIO_NET":
                            case 1:
                                message.nicType = 1;
                                break;
                            case "GVNIC":
                            case 2:
                                message.nicType = 2;
                                break;
                            }
                            if (object.reservationAffinity != null) {
                                if (typeof object.reservationAffinity !== "object")
                                    throw TypeError(".google.cloud.notebooks.v1beta1.Instance.reservationAffinity: object expected");
                                message.reservationAffinity = $root.google.cloud.notebooks.v1beta1.ReservationAffinity.fromObject(object.reservationAffinity);
                            }
                            if (object.canIpForward != null)
                                message.canIpForward = Boolean(object.canIpForward);
                            if (object.createTime != null) {
                                if (typeof object.createTime !== "object")
                                    throw TypeError(".google.cloud.notebooks.v1beta1.Instance.createTime: object expected");
                                message.createTime = $root.google.protobuf.Timestamp.fromObject(object.createTime);
                            }
                            if (object.updateTime != null) {
                                if (typeof object.updateTime !== "object")
                                    throw TypeError(".google.cloud.notebooks.v1beta1.Instance.updateTime: object expected");
                                message.updateTime = $root.google.protobuf.Timestamp.fromObject(object.updateTime);
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from an Instance message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.notebooks.v1beta1.Instance
                         * @static
                         * @param {google.cloud.notebooks.v1beta1.Instance} message Instance
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        Instance.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.arrays || options.defaults)
                                object.instanceOwners = [];
                            if (options.objects || options.defaults) {
                                object.labels = {};
                                object.metadata = {};
                            }
                            if (options.defaults) {
                                object.name = "";
                                object.postStartupScript = "";
                                object.proxyUri = "";
                                object.serviceAccount = "";
                                object.machineType = "";
                                object.acceleratorConfig = null;
                                object.state = options.enums === String ? "STATE_UNSPECIFIED" : 0;
                                object.installGpuDriver = false;
                                object.customGpuDriverPath = "";
                                object.bootDiskType = options.enums === String ? "DISK_TYPE_UNSPECIFIED" : 0;
                                if ($util.Long) {
                                    var long = new $util.Long(0, 0, false);
                                    object.bootDiskSizeGb = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                                } else
                                    object.bootDiskSizeGb = options.longs === String ? "0" : 0;
                                object.diskEncryption = options.enums === String ? "DISK_ENCRYPTION_UNSPECIFIED" : 0;
                                object.kmsKey = "";
                                object.noPublicIp = false;
                                object.noProxyAccess = false;
                                object.network = "";
                                object.subnet = "";
                                object.createTime = null;
                                object.updateTime = null;
                                object.dataDiskType = options.enums === String ? "DISK_TYPE_UNSPECIFIED" : 0;
                                if ($util.Long) {
                                    var long = new $util.Long(0, 0, false);
                                    object.dataDiskSizeGb = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                                } else
                                    object.dataDiskSizeGb = options.longs === String ? "0" : 0;
                                object.noRemoveDataDisk = false;
                                object.nicType = options.enums === String ? "UNSPECIFIED_NIC_TYPE" : 0;
                                object.reservationAffinity = null;
                                object.canIpForward = false;
                            }
                            if (message.name != null && message.hasOwnProperty("name"))
                                object.name = message.name;
                            if (message.vmImage != null && message.hasOwnProperty("vmImage")) {
                                object.vmImage = $root.google.cloud.notebooks.v1beta1.VmImage.toObject(message.vmImage, options);
                                if (options.oneofs)
                                    object.environment = "vmImage";
                            }
                            if (message.containerImage != null && message.hasOwnProperty("containerImage")) {
                                object.containerImage = $root.google.cloud.notebooks.v1beta1.ContainerImage.toObject(message.containerImage, options);
                                if (options.oneofs)
                                    object.environment = "containerImage";
                            }
                            if (message.postStartupScript != null && message.hasOwnProperty("postStartupScript"))
                                object.postStartupScript = message.postStartupScript;
                            if (message.proxyUri != null && message.hasOwnProperty("proxyUri"))
                                object.proxyUri = message.proxyUri;
                            if (message.instanceOwners && message.instanceOwners.length) {
                                object.instanceOwners = [];
                                for (var j = 0; j < message.instanceOwners.length; ++j)
                                    object.instanceOwners[j] = message.instanceOwners[j];
                            }
                            if (message.serviceAccount != null && message.hasOwnProperty("serviceAccount"))
                                object.serviceAccount = message.serviceAccount;
                            if (message.machineType != null && message.hasOwnProperty("machineType"))
                                object.machineType = message.machineType;
                            if (message.acceleratorConfig != null && message.hasOwnProperty("acceleratorConfig"))
                                object.acceleratorConfig = $root.google.cloud.notebooks.v1beta1.Instance.AcceleratorConfig.toObject(message.acceleratorConfig, options);
                            if (message.state != null && message.hasOwnProperty("state"))
                                object.state = options.enums === String ? $root.google.cloud.notebooks.v1beta1.Instance.State[message.state] === undefined ? message.state : $root.google.cloud.notebooks.v1beta1.Instance.State[message.state] : message.state;
                            if (message.installGpuDriver != null && message.hasOwnProperty("installGpuDriver"))
                                object.installGpuDriver = message.installGpuDriver;
                            if (message.customGpuDriverPath != null && message.hasOwnProperty("customGpuDriverPath"))
                                object.customGpuDriverPath = message.customGpuDriverPath;
                            if (message.bootDiskType != null && message.hasOwnProperty("bootDiskType"))
                                object.bootDiskType = options.enums === String ? $root.google.cloud.notebooks.v1beta1.Instance.DiskType[message.bootDiskType] === undefined ? message.bootDiskType : $root.google.cloud.notebooks.v1beta1.Instance.DiskType[message.bootDiskType] : message.bootDiskType;
                            if (message.bootDiskSizeGb != null && message.hasOwnProperty("bootDiskSizeGb"))
                                if (typeof message.bootDiskSizeGb === "number")
                                    object.bootDiskSizeGb = options.longs === String ? String(message.bootDiskSizeGb) : message.bootDiskSizeGb;
                                else
                                    object.bootDiskSizeGb = options.longs === String ? $util.Long.prototype.toString.call(message.bootDiskSizeGb) : options.longs === Number ? new $util.LongBits(message.bootDiskSizeGb.low >>> 0, message.bootDiskSizeGb.high >>> 0).toNumber() : message.bootDiskSizeGb;
                            if (message.diskEncryption != null && message.hasOwnProperty("diskEncryption"))
                                object.diskEncryption = options.enums === String ? $root.google.cloud.notebooks.v1beta1.Instance.DiskEncryption[message.diskEncryption] === undefined ? message.diskEncryption : $root.google.cloud.notebooks.v1beta1.Instance.DiskEncryption[message.diskEncryption] : message.diskEncryption;
                            if (message.kmsKey != null && message.hasOwnProperty("kmsKey"))
                                object.kmsKey = message.kmsKey;
                            if (message.noPublicIp != null && message.hasOwnProperty("noPublicIp"))
                                object.noPublicIp = message.noPublicIp;
                            if (message.noProxyAccess != null && message.hasOwnProperty("noProxyAccess"))
                                object.noProxyAccess = message.noProxyAccess;
                            if (message.network != null && message.hasOwnProperty("network"))
                                object.network = message.network;
                            if (message.subnet != null && message.hasOwnProperty("subnet"))
                                object.subnet = message.subnet;
                            var keys2;
                            if (message.labels && (keys2 = Object.keys(message.labels)).length) {
                                object.labels = {};
                                for (var j = 0; j < keys2.length; ++j)
                                    object.labels[keys2[j]] = message.labels[keys2[j]];
                            }
                            if (message.metadata && (keys2 = Object.keys(message.metadata)).length) {
                                object.metadata = {};
                                for (var j = 0; j < keys2.length; ++j)
                                    object.metadata[keys2[j]] = message.metadata[keys2[j]];
                            }
                            if (message.createTime != null && message.hasOwnProperty("createTime"))
                                object.createTime = $root.google.protobuf.Timestamp.toObject(message.createTime, options);
                            if (message.updateTime != null && message.hasOwnProperty("updateTime"))
                                object.updateTime = $root.google.protobuf.Timestamp.toObject(message.updateTime, options);
                            if (message.dataDiskType != null && message.hasOwnProperty("dataDiskType"))
                                object.dataDiskType = options.enums === String ? $root.google.cloud.notebooks.v1beta1.Instance.DiskType[message.dataDiskType] === undefined ? message.dataDiskType : $root.google.cloud.notebooks.v1beta1.Instance.DiskType[message.dataDiskType] : message.dataDiskType;
                            if (message.dataDiskSizeGb != null && message.hasOwnProperty("dataDiskSizeGb"))
                                if (typeof message.dataDiskSizeGb === "number")
                                    object.dataDiskSizeGb = options.longs === String ? String(message.dataDiskSizeGb) : message.dataDiskSizeGb;
                                else
                                    object.dataDiskSizeGb = options.longs === String ? $util.Long.prototype.toString.call(message.dataDiskSizeGb) : options.longs === Number ? new $util.LongBits(message.dataDiskSizeGb.low >>> 0, message.dataDiskSizeGb.high >>> 0).toNumber() : message.dataDiskSizeGb;
                            if (message.noRemoveDataDisk != null && message.hasOwnProperty("noRemoveDataDisk"))
                                object.noRemoveDataDisk = message.noRemoveDataDisk;
                            if (message.nicType != null && message.hasOwnProperty("nicType"))
                                object.nicType = options.enums === String ? $root.google.cloud.notebooks.v1beta1.Instance.NicType[message.nicType] === undefined ? message.nicType : $root.google.cloud.notebooks.v1beta1.Instance.NicType[message.nicType] : message.nicType;
                            if (message.reservationAffinity != null && message.hasOwnProperty("reservationAffinity"))
                                object.reservationAffinity = $root.google.cloud.notebooks.v1beta1.ReservationAffinity.toObject(message.reservationAffinity, options);
                            if (message.canIpForward != null && message.hasOwnProperty("canIpForward"))
                                object.canIpForward = message.canIpForward;
                            return object;
                        };
    
                        /**
                         * Converts this Instance to JSON.
                         * @function toJSON
                         * @memberof google.cloud.notebooks.v1beta1.Instance
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        Instance.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for Instance
                         * @function getTypeUrl
                         * @memberof google.cloud.notebooks.v1beta1.Instance
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        Instance.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.notebooks.v1beta1.Instance";
                        };
    
                        /**
                         * AcceleratorType enum.
                         * @name google.cloud.notebooks.v1beta1.Instance.AcceleratorType
                         * @enum {number}
                         * @property {number} ACCELERATOR_TYPE_UNSPECIFIED=0 ACCELERATOR_TYPE_UNSPECIFIED value
                         * @property {number} NVIDIA_TESLA_K80=1 NVIDIA_TESLA_K80 value
                         * @property {number} NVIDIA_TESLA_P100=2 NVIDIA_TESLA_P100 value
                         * @property {number} NVIDIA_TESLA_V100=3 NVIDIA_TESLA_V100 value
                         * @property {number} NVIDIA_TESLA_P4=4 NVIDIA_TESLA_P4 value
                         * @property {number} NVIDIA_TESLA_T4=5 NVIDIA_TESLA_T4 value
                         * @property {number} NVIDIA_TESLA_T4_VWS=8 NVIDIA_TESLA_T4_VWS value
                         * @property {number} NVIDIA_TESLA_P100_VWS=9 NVIDIA_TESLA_P100_VWS value
                         * @property {number} NVIDIA_TESLA_P4_VWS=10 NVIDIA_TESLA_P4_VWS value
                         * @property {number} TPU_V2=6 TPU_V2 value
                         * @property {number} TPU_V3=7 TPU_V3 value
                         */
                        Instance.AcceleratorType = (function() {
                            var valuesById = {}, values = Object.create(valuesById);
                            values[valuesById[0] = "ACCELERATOR_TYPE_UNSPECIFIED"] = 0;
                            values[valuesById[1] = "NVIDIA_TESLA_K80"] = 1;
                            values[valuesById[2] = "NVIDIA_TESLA_P100"] = 2;
                            values[valuesById[3] = "NVIDIA_TESLA_V100"] = 3;
                            values[valuesById[4] = "NVIDIA_TESLA_P4"] = 4;
                            values[valuesById[5] = "NVIDIA_TESLA_T4"] = 5;
                            values[valuesById[8] = "NVIDIA_TESLA_T4_VWS"] = 8;
                            values[valuesById[9] = "NVIDIA_TESLA_P100_VWS"] = 9;
                            values[valuesById[10] = "NVIDIA_TESLA_P4_VWS"] = 10;
                            values[valuesById[6] = "TPU_V2"] = 6;
                            values[valuesById[7] = "TPU_V3"] = 7;
                            return values;
                        })();
    
                        Instance.AcceleratorConfig = (function() {
    
                            /**
                             * Properties of an AcceleratorConfig.
                             * @memberof google.cloud.notebooks.v1beta1.Instance
                             * @interface IAcceleratorConfig
                             * @property {google.cloud.notebooks.v1beta1.Instance.AcceleratorType|null} [type] AcceleratorConfig type
                             * @property {number|Long|null} [coreCount] AcceleratorConfig coreCount
                             */
    
                            /**
                             * Constructs a new AcceleratorConfig.
                             * @memberof google.cloud.notebooks.v1beta1.Instance
                             * @classdesc Represents an AcceleratorConfig.
                             * @implements IAcceleratorConfig
                             * @constructor
                             * @param {google.cloud.notebooks.v1beta1.Instance.IAcceleratorConfig=} [properties] Properties to set
                             */
                            function AcceleratorConfig(properties) {
                                if (properties)
                                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                        if (properties[keys[i]] != null)
                                            this[keys[i]] = properties[keys[i]];
                            }
    
                            /**
                             * AcceleratorConfig type.
                             * @member {google.cloud.notebooks.v1beta1.Instance.AcceleratorType} type
                             * @memberof google.cloud.notebooks.v1beta1.Instance.AcceleratorConfig
                             * @instance
                             */
                            AcceleratorConfig.prototype.type = 0;
    
                            /**
                             * AcceleratorConfig coreCount.
                             * @member {number|Long} coreCount
                             * @memberof google.cloud.notebooks.v1beta1.Instance.AcceleratorConfig
                             * @instance
                             */
                            AcceleratorConfig.prototype.coreCount = $util.Long ? $util.Long.fromBits(0,0,false) : 0;
    
                            /**
                             * Creates a new AcceleratorConfig instance using the specified properties.
                             * @function create
                             * @memberof google.cloud.notebooks.v1beta1.Instance.AcceleratorConfig
                             * @static
                             * @param {google.cloud.notebooks.v1beta1.Instance.IAcceleratorConfig=} [properties] Properties to set
                             * @returns {google.cloud.notebooks.v1beta1.Instance.AcceleratorConfig} AcceleratorConfig instance
                             */
                            AcceleratorConfig.create = function create(properties) {
                                return new AcceleratorConfig(properties);
                            };
    
                            /**
                             * Encodes the specified AcceleratorConfig message. Does not implicitly {@link google.cloud.notebooks.v1beta1.Instance.AcceleratorConfig.verify|verify} messages.
                             * @function encode
                             * @memberof google.cloud.notebooks.v1beta1.Instance.AcceleratorConfig
                             * @static
                             * @param {google.cloud.notebooks.v1beta1.Instance.IAcceleratorConfig} message AcceleratorConfig message or plain object to encode
                             * @param {$protobuf.Writer} [writer] Writer to encode to
                             * @returns {$protobuf.Writer} Writer
                             */
                            AcceleratorConfig.encode = function encode(message, writer) {
                                if (!writer)
                                    writer = $Writer.create();
                                if (message.type != null && Object.hasOwnProperty.call(message, "type"))
                                    writer.uint32(/* id 1, wireType 0 =*/8).int32(message.type);
                                if (message.coreCount != null && Object.hasOwnProperty.call(message, "coreCount"))
                                    writer.uint32(/* id 2, wireType 0 =*/16).int64(message.coreCount);
                                return writer;
                            };
    
                            /**
                             * Encodes the specified AcceleratorConfig message, length delimited. Does not implicitly {@link google.cloud.notebooks.v1beta1.Instance.AcceleratorConfig.verify|verify} messages.
                             * @function encodeDelimited
                             * @memberof google.cloud.notebooks.v1beta1.Instance.AcceleratorConfig
                             * @static
                             * @param {google.cloud.notebooks.v1beta1.Instance.IAcceleratorConfig} message AcceleratorConfig message or plain object to encode
                             * @param {$protobuf.Writer} [writer] Writer to encode to
                             * @returns {$protobuf.Writer} Writer
                             */
                            AcceleratorConfig.encodeDelimited = function encodeDelimited(message, writer) {
                                return this.encode(message, writer).ldelim();
                            };
    
                            /**
                             * Decodes an AcceleratorConfig message from the specified reader or buffer.
                             * @function decode
                             * @memberof google.cloud.notebooks.v1beta1.Instance.AcceleratorConfig
                             * @static
                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                             * @param {number} [length] Message length if known beforehand
                             * @returns {google.cloud.notebooks.v1beta1.Instance.AcceleratorConfig} AcceleratorConfig
                             * @throws {Error} If the payload is not a reader or valid buffer
                             * @throws {$protobuf.util.ProtocolError} If required fields are missing
                             */
                            AcceleratorConfig.decode = function decode(reader, length) {
                                if (!(reader instanceof $Reader))
                                    reader = $Reader.create(reader);
                                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.notebooks.v1beta1.Instance.AcceleratorConfig();
                                while (reader.pos < end) {
                                    var tag = reader.uint32();
                                    switch (tag >>> 3) {
                                    case 1: {
                                            message.type = reader.int32();
                                            break;
                                        }
                                    case 2: {
                                            message.coreCount = reader.int64();
                                            break;
                                        }
                                    default:
                                        reader.skipType(tag & 7);
                                        break;
                                    }
                                }
                                return message;
                            };
    
                            /**
                             * Decodes an AcceleratorConfig message from the specified reader or buffer, length delimited.
                             * @function decodeDelimited
                             * @memberof google.cloud.notebooks.v1beta1.Instance.AcceleratorConfig
                             * @static
                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                             * @returns {google.cloud.notebooks.v1beta1.Instance.AcceleratorConfig} AcceleratorConfig
                             * @throws {Error} If the payload is not a reader or valid buffer
                             * @throws {$protobuf.util.ProtocolError} If required fields are missing
                             */
                            AcceleratorConfig.decodeDelimited = function decodeDelimited(reader) {
                                if (!(reader instanceof $Reader))
                                    reader = new $Reader(reader);
                                return this.decode(reader, reader.uint32());
                            };
    
                            /**
                             * Verifies an AcceleratorConfig message.
                             * @function verify
                             * @memberof google.cloud.notebooks.v1beta1.Instance.AcceleratorConfig
                             * @static
                             * @param {Object.<string,*>} message Plain object to verify
                             * @returns {string|null} `null` if valid, otherwise the reason why it is not
                             */
                            AcceleratorConfig.verify = function verify(message) {
                                if (typeof message !== "object" || message === null)
                                    return "object expected";
                                if (message.type != null && message.hasOwnProperty("type"))
                                    switch (message.type) {
                                    default:
                                        return "type: enum value expected";
                                    case 0:
                                    case 1:
                                    case 2:
                                    case 3:
                                    case 4:
                                    case 5:
                                    case 8:
                                    case 9:
                                    case 10:
                                    case 6:
                                    case 7:
                                        break;
                                    }
                                if (message.coreCount != null && message.hasOwnProperty("coreCount"))
                                    if (!$util.isInteger(message.coreCount) && !(message.coreCount && $util.isInteger(message.coreCount.low) && $util.isInteger(message.coreCount.high)))
                                        return "coreCount: integer|Long expected";
                                return null;
                            };
    
                            /**
                             * Creates an AcceleratorConfig message from a plain object. Also converts values to their respective internal types.
                             * @function fromObject
                             * @memberof google.cloud.notebooks.v1beta1.Instance.AcceleratorConfig
                             * @static
                             * @param {Object.<string,*>} object Plain object
                             * @returns {google.cloud.notebooks.v1beta1.Instance.AcceleratorConfig} AcceleratorConfig
                             */
                            AcceleratorConfig.fromObject = function fromObject(object) {
                                if (object instanceof $root.google.cloud.notebooks.v1beta1.Instance.AcceleratorConfig)
                                    return object;
                                var message = new $root.google.cloud.notebooks.v1beta1.Instance.AcceleratorConfig();
                                switch (object.type) {
                                default:
                                    if (typeof object.type === "number") {
                                        message.type = object.type;
                                        break;
                                    }
                                    break;
                                case "ACCELERATOR_TYPE_UNSPECIFIED":
                                case 0:
                                    message.type = 0;
                                    break;
                                case "NVIDIA_TESLA_K80":
                                case 1:
                                    message.type = 1;
                                    break;
                                case "NVIDIA_TESLA_P100":
                                case 2:
                                    message.type = 2;
                                    break;
                                case "NVIDIA_TESLA_V100":
                                case 3:
                                    message.type = 3;
                                    break;
                                case "NVIDIA_TESLA_P4":
                                case 4:
                                    message.type = 4;
                                    break;
                                case "NVIDIA_TESLA_T4":
                                case 5:
                                    message.type = 5;
                                    break;
                                case "NVIDIA_TESLA_T4_VWS":
                                case 8:
                                    message.type = 8;
                                    break;
                                case "NVIDIA_TESLA_P100_VWS":
                                case 9:
                                    message.type = 9;
                                    break;
                                case "NVIDIA_TESLA_P4_VWS":
                                case 10:
                                    message.type = 10;
                                    break;
                                case "TPU_V2":
                                case 6:
                                    message.type = 6;
                                    break;
                                case "TPU_V3":
                                case 7:
                                    message.type = 7;
                                    break;
                                }
                                if (object.coreCount != null)
                                    if ($util.Long)
                                        (message.coreCount = $util.Long.fromValue(object.coreCount)).unsigned = false;
                                    else if (typeof object.coreCount === "string")
                                        message.coreCount = parseInt(object.coreCount, 10);
                                    else if (typeof object.coreCount === "number")
                                        message.coreCount = object.coreCount;
                                    else if (typeof object.coreCount === "object")
                                        message.coreCount = new $util.LongBits(object.coreCount.low >>> 0, object.coreCount.high >>> 0).toNumber();
                                return message;
                            };
    
                            /**
                             * Creates a plain object from an AcceleratorConfig message. Also converts values to other types if specified.
                             * @function toObject
                             * @memberof google.cloud.notebooks.v1beta1.Instance.AcceleratorConfig
                             * @static
                             * @param {google.cloud.notebooks.v1beta1.Instance.AcceleratorConfig} message AcceleratorConfig
                             * @param {$protobuf.IConversionOptions} [options] Conversion options
                             * @returns {Object.<string,*>} Plain object
                             */
                            AcceleratorConfig.toObject = function toObject(message, options) {
                                if (!options)
                                    options = {};
                                var object = {};
                                if (options.defaults) {
                                    object.type = options.enums === String ? "ACCELERATOR_TYPE_UNSPECIFIED" : 0;
                                    if ($util.Long) {
                                        var long = new $util.Long(0, 0, false);
                                        object.coreCount = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                                    } else
                                        object.coreCount = options.longs === String ? "0" : 0;
                                }
                                if (message.type != null && message.hasOwnProperty("type"))
                                    object.type = options.enums === String ? $root.google.cloud.notebooks.v1beta1.Instance.AcceleratorType[message.type] === undefined ? message.type : $root.google.cloud.notebooks.v1beta1.Instance.AcceleratorType[message.type] : message.type;
                                if (message.coreCount != null && message.hasOwnProperty("coreCount"))
                                    if (typeof message.coreCount === "number")
                                        object.coreCount = options.longs === String ? String(message.coreCount) : message.coreCount;
                                    else
                                        object.coreCount = options.longs === String ? $util.Long.prototype.toString.call(message.coreCount) : options.longs === Number ? new $util.LongBits(message.coreCount.low >>> 0, message.coreCount.high >>> 0).toNumber() : message.coreCount;
                                return object;
                            };
    
                            /**
                             * Converts this AcceleratorConfig to JSON.
                             * @function toJSON
                             * @memberof google.cloud.notebooks.v1beta1.Instance.AcceleratorConfig
                             * @instance
                             * @returns {Object.<string,*>} JSON object
                             */
                            AcceleratorConfig.prototype.toJSON = function toJSON() {
                                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                            };
    
                            /**
                             * Gets the default type url for AcceleratorConfig
                             * @function getTypeUrl
                             * @memberof google.cloud.notebooks.v1beta1.Instance.AcceleratorConfig
                             * @static
                             * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                             * @returns {string} The default type url
                             */
                            AcceleratorConfig.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                                if (typeUrlPrefix === undefined) {
                                    typeUrlPrefix = "type.googleapis.com";
                                }
                                return typeUrlPrefix + "/google.cloud.notebooks.v1beta1.Instance.AcceleratorConfig";
                            };
    
                            return AcceleratorConfig;
                        })();
    
                        /**
                         * State enum.
                         * @name google.cloud.notebooks.v1beta1.Instance.State
                         * @enum {number}
                         * @property {number} STATE_UNSPECIFIED=0 STATE_UNSPECIFIED value
                         * @property {number} STARTING=1 STARTING value
                         * @property {number} PROVISIONING=2 PROVISIONING value
                         * @property {number} ACTIVE=3 ACTIVE value
                         * @property {number} STOPPING=4 STOPPING value
                         * @property {number} STOPPED=5 STOPPED value
                         * @property {number} DELETED=6 DELETED value
                         * @property {number} UPGRADING=7 UPGRADING value
                         * @property {number} INITIALIZING=8 INITIALIZING value
                         * @property {number} REGISTERING=9 REGISTERING value
                         * @property {number} SUSPENDING=10 SUSPENDING value
                         * @property {number} SUSPENDED=11 SUSPENDED value
                         */
                        Instance.State = (function() {
                            var valuesById = {}, values = Object.create(valuesById);
                            values[valuesById[0] = "STATE_UNSPECIFIED"] = 0;
                            values[valuesById[1] = "STARTING"] = 1;
                            values[valuesById[2] = "PROVISIONING"] = 2;
                            values[valuesById[3] = "ACTIVE"] = 3;
                            values[valuesById[4] = "STOPPING"] = 4;
                            values[valuesById[5] = "STOPPED"] = 5;
                            values[valuesById[6] = "DELETED"] = 6;
                            values[valuesById[7] = "UPGRADING"] = 7;
                            values[valuesById[8] = "INITIALIZING"] = 8;
                            values[valuesById[9] = "REGISTERING"] = 9;
                            values[valuesById[10] = "SUSPENDING"] = 10;
                            values[valuesById[11] = "SUSPENDED"] = 11;
                            return values;
                        })();
    
                        /**
                         * DiskType enum.
                         * @name google.cloud.notebooks.v1beta1.Instance.DiskType
                         * @enum {number}
                         * @property {number} DISK_TYPE_UNSPECIFIED=0 DISK_TYPE_UNSPECIFIED value
                         * @property {number} PD_STANDARD=1 PD_STANDARD value
                         * @property {number} PD_SSD=2 PD_SSD value
                         * @property {number} PD_BALANCED=3 PD_BALANCED value
                         */
                        Instance.DiskType = (function() {
                            var valuesById = {}, values = Object.create(valuesById);
                            values[valuesById[0] = "DISK_TYPE_UNSPECIFIED"] = 0;
                            values[valuesById[1] = "PD_STANDARD"] = 1;
                            values[valuesById[2] = "PD_SSD"] = 2;
                            values[valuesById[3] = "PD_BALANCED"] = 3;
                            return values;
                        })();
    
                        /**
                         * DiskEncryption enum.
                         * @name google.cloud.notebooks.v1beta1.Instance.DiskEncryption
                         * @enum {number}
                         * @property {number} DISK_ENCRYPTION_UNSPECIFIED=0 DISK_ENCRYPTION_UNSPECIFIED value
                         * @property {number} GMEK=1 GMEK value
                         * @property {number} CMEK=2 CMEK value
                         */
                        Instance.DiskEncryption = (function() {
                            var valuesById = {}, values = Object.create(valuesById);
                            values[valuesById[0] = "DISK_ENCRYPTION_UNSPECIFIED"] = 0;
                            values[valuesById[1] = "GMEK"] = 1;
                            values[valuesById[2] = "CMEK"] = 2;
                            return values;
                        })();
    
                        /**
                         * NicType enum.
                         * @name google.cloud.notebooks.v1beta1.Instance.NicType
                         * @enum {number}
                         * @property {number} UNSPECIFIED_NIC_TYPE=0 UNSPECIFIED_NIC_TYPE value
                         * @property {number} VIRTIO_NET=1 VIRTIO_NET value
                         * @property {number} GVNIC=2 GVNIC value
                         */
                        Instance.NicType = (function() {
                            var valuesById = {}, values = Object.create(valuesById);
                            values[valuesById[0] = "UNSPECIFIED_NIC_TYPE"] = 0;
                            values[valuesById[1] = "VIRTIO_NET"] = 1;
                            values[valuesById[2] = "GVNIC"] = 2;
                            return values;
                        })();
    
                        return Instance;
                    })();
    
                    v1beta1.NotebookService = (function() {
    
                        /**
                         * Constructs a new NotebookService service.
                         * @memberof google.cloud.notebooks.v1beta1
                         * @classdesc Represents a NotebookService
                         * @extends $protobuf.rpc.Service
                         * @constructor
                         * @param {$protobuf.RPCImpl} rpcImpl RPC implementation
                         * @param {boolean} [requestDelimited=false] Whether requests are length-delimited
                         * @param {boolean} [responseDelimited=false] Whether responses are length-delimited
                         */
                        function NotebookService(rpcImpl, requestDelimited, responseDelimited) {
                            $protobuf.rpc.Service.call(this, rpcImpl, requestDelimited, responseDelimited);
                        }
    
                        (NotebookService.prototype = Object.create($protobuf.rpc.Service.prototype)).constructor = NotebookService;
    
                        /**
                         * Creates new NotebookService service using the specified rpc implementation.
                         * @function create
                         * @memberof google.cloud.notebooks.v1beta1.NotebookService
                         * @static
                         * @param {$protobuf.RPCImpl} rpcImpl RPC implementation
                         * @param {boolean} [requestDelimited=false] Whether requests are length-delimited
                         * @param {boolean} [responseDelimited=false] Whether responses are length-delimited
                         * @returns {NotebookService} RPC service. Useful where requests and/or responses are streamed.
                         */
                        NotebookService.create = function create(rpcImpl, requestDelimited, responseDelimited) {
                            return new this(rpcImpl, requestDelimited, responseDelimited);
                        };
    
                        /**
                         * Callback as used by {@link google.cloud.notebooks.v1beta1.NotebookService|listInstances}.
                         * @memberof google.cloud.notebooks.v1beta1.NotebookService
                         * @typedef ListInstancesCallback
                         * @type {function}
                         * @param {Error|null} error Error, if any
                         * @param {google.cloud.notebooks.v1beta1.ListInstancesResponse} [response] ListInstancesResponse
                         */
    
                        /**
                         * Calls ListInstances.
                         * @function listInstances
                         * @memberof google.cloud.notebooks.v1beta1.NotebookService
                         * @instance
                         * @param {google.cloud.notebooks.v1beta1.IListInstancesRequest} request ListInstancesRequest message or plain object
                         * @param {google.cloud.notebooks.v1beta1.NotebookService.ListInstancesCallback} callback Node-style callback called with the error, if any, and ListInstancesResponse
                         * @returns {undefined}
                         * @variation 1
                         */
                        Object.defineProperty(NotebookService.prototype.listInstances = function listInstances(request, callback) {
                            return this.rpcCall(listInstances, $root.google.cloud.notebooks.v1beta1.ListInstancesRequest, $root.google.cloud.notebooks.v1beta1.ListInstancesResponse, request, callback);
                        }, "name", { value: "ListInstances" });
    
                        /**
                         * Calls ListInstances.
                         * @function listInstances
                         * @memberof google.cloud.notebooks.v1beta1.NotebookService
                         * @instance
                         * @param {google.cloud.notebooks.v1beta1.IListInstancesRequest} request ListInstancesRequest message or plain object
                         * @returns {Promise<google.cloud.notebooks.v1beta1.ListInstancesResponse>} Promise
                         * @variation 2
                         */
    
                        /**
                         * Callback as used by {@link google.cloud.notebooks.v1beta1.NotebookService|getInstance}.
                         * @memberof google.cloud.notebooks.v1beta1.NotebookService
                         * @typedef GetInstanceCallback
                         * @type {function}
                         * @param {Error|null} error Error, if any
                         * @param {google.cloud.notebooks.v1beta1.Instance} [response] Instance
                         */
    
                        /**
                         * Calls GetInstance.
                         * @function getInstance
                         * @memberof google.cloud.notebooks.v1beta1.NotebookService
                         * @instance
                         * @param {google.cloud.notebooks.v1beta1.IGetInstanceRequest} request GetInstanceRequest message or plain object
                         * @param {google.cloud.notebooks.v1beta1.NotebookService.GetInstanceCallback} callback Node-style callback called with the error, if any, and Instance
                         * @returns {undefined}
                         * @variation 1
                         */
                        Object.defineProperty(NotebookService.prototype.getInstance = function getInstance(request, callback) {
                            return this.rpcCall(getInstance, $root.google.cloud.notebooks.v1beta1.GetInstanceRequest, $root.google.cloud.notebooks.v1beta1.Instance, request, callback);
                        }, "name", { value: "GetInstance" });
    
                        /**
                         * Calls GetInstance.
                         * @function getInstance
                         * @memberof google.cloud.notebooks.v1beta1.NotebookService
                         * @instance
                         * @param {google.cloud.notebooks.v1beta1.IGetInstanceRequest} request GetInstanceRequest message or plain object
                         * @returns {Promise<google.cloud.notebooks.v1beta1.Instance>} Promise
                         * @variation 2
                         */
    
                        /**
                         * Callback as used by {@link google.cloud.notebooks.v1beta1.NotebookService|createInstance}.
                         * @memberof google.cloud.notebooks.v1beta1.NotebookService
                         * @typedef CreateInstanceCallback
                         * @type {function}
                         * @param {Error|null} error Error, if any
                         * @param {google.longrunning.Operation} [response] Operation
                         */
    
                        /**
                         * Calls CreateInstance.
                         * @function createInstance
                         * @memberof google.cloud.notebooks.v1beta1.NotebookService
                         * @instance
                         * @param {google.cloud.notebooks.v1beta1.ICreateInstanceRequest} request CreateInstanceRequest message or plain object
                         * @param {google.cloud.notebooks.v1beta1.NotebookService.CreateInstanceCallback} callback Node-style callback called with the error, if any, and Operation
                         * @returns {undefined}
                         * @variation 1
                         */
                        Object.defineProperty(NotebookService.prototype.createInstance = function createInstance(request, callback) {
                            return this.rpcCall(createInstance, $root.google.cloud.notebooks.v1beta1.CreateInstanceRequest, $root.google.longrunning.Operation, request, callback);
                        }, "name", { value: "CreateInstance" });
    
                        /**
                         * Calls CreateInstance.
                         * @function createInstance
                         * @memberof google.cloud.notebooks.v1beta1.NotebookService
                         * @instance
                         * @param {google.cloud.notebooks.v1beta1.ICreateInstanceRequest} request CreateInstanceRequest message or plain object
                         * @returns {Promise<google.longrunning.Operation>} Promise
                         * @variation 2
                         */
    
                        /**
                         * Callback as used by {@link google.cloud.notebooks.v1beta1.NotebookService|registerInstance}.
                         * @memberof google.cloud.notebooks.v1beta1.NotebookService
                         * @typedef RegisterInstanceCallback
                         * @type {function}
                         * @param {Error|null} error Error, if any
                         * @param {google.longrunning.Operation} [response] Operation
                         */
    
                        /**
                         * Calls RegisterInstance.
                         * @function registerInstance
                         * @memberof google.cloud.notebooks.v1beta1.NotebookService
                         * @instance
                         * @param {google.cloud.notebooks.v1beta1.IRegisterInstanceRequest} request RegisterInstanceRequest message or plain object
                         * @param {google.cloud.notebooks.v1beta1.NotebookService.RegisterInstanceCallback} callback Node-style callback called with the error, if any, and Operation
                         * @returns {undefined}
                         * @variation 1
                         */
                        Object.defineProperty(NotebookService.prototype.registerInstance = function registerInstance(request, callback) {
                            return this.rpcCall(registerInstance, $root.google.cloud.notebooks.v1beta1.RegisterInstanceRequest, $root.google.longrunning.Operation, request, callback);
                        }, "name", { value: "RegisterInstance" });
    
                        /**
                         * Calls RegisterInstance.
                         * @function registerInstance
                         * @memberof google.cloud.notebooks.v1beta1.NotebookService
                         * @instance
                         * @param {google.cloud.notebooks.v1beta1.IRegisterInstanceRequest} request RegisterInstanceRequest message or plain object
                         * @returns {Promise<google.longrunning.Operation>} Promise
                         * @variation 2
                         */
    
                        /**
                         * Callback as used by {@link google.cloud.notebooks.v1beta1.NotebookService|setInstanceAccelerator}.
                         * @memberof google.cloud.notebooks.v1beta1.NotebookService
                         * @typedef SetInstanceAcceleratorCallback
                         * @type {function}
                         * @param {Error|null} error Error, if any
                         * @param {google.longrunning.Operation} [response] Operation
                         */
    
                        /**
                         * Calls SetInstanceAccelerator.
                         * @function setInstanceAccelerator
                         * @memberof google.cloud.notebooks.v1beta1.NotebookService
                         * @instance
                         * @param {google.cloud.notebooks.v1beta1.ISetInstanceAcceleratorRequest} request SetInstanceAcceleratorRequest message or plain object
                         * @param {google.cloud.notebooks.v1beta1.NotebookService.SetInstanceAcceleratorCallback} callback Node-style callback called with the error, if any, and Operation
                         * @returns {undefined}
                         * @variation 1
                         */
                        Object.defineProperty(NotebookService.prototype.setInstanceAccelerator = function setInstanceAccelerator(request, callback) {
                            return this.rpcCall(setInstanceAccelerator, $root.google.cloud.notebooks.v1beta1.SetInstanceAcceleratorRequest, $root.google.longrunning.Operation, request, callback);
                        }, "name", { value: "SetInstanceAccelerator" });
    
                        /**
                         * Calls SetInstanceAccelerator.
                         * @function setInstanceAccelerator
                         * @memberof google.cloud.notebooks.v1beta1.NotebookService
                         * @instance
                         * @param {google.cloud.notebooks.v1beta1.ISetInstanceAcceleratorRequest} request SetInstanceAcceleratorRequest message or plain object
                         * @returns {Promise<google.longrunning.Operation>} Promise
                         * @variation 2
                         */
    
                        /**
                         * Callback as used by {@link google.cloud.notebooks.v1beta1.NotebookService|setInstanceMachineType}.
                         * @memberof google.cloud.notebooks.v1beta1.NotebookService
                         * @typedef SetInstanceMachineTypeCallback
                         * @type {function}
                         * @param {Error|null} error Error, if any
                         * @param {google.longrunning.Operation} [response] Operation
                         */
    
                        /**
                         * Calls SetInstanceMachineType.
                         * @function setInstanceMachineType
                         * @memberof google.cloud.notebooks.v1beta1.NotebookService
                         * @instance
                         * @param {google.cloud.notebooks.v1beta1.ISetInstanceMachineTypeRequest} request SetInstanceMachineTypeRequest message or plain object
                         * @param {google.cloud.notebooks.v1beta1.NotebookService.SetInstanceMachineTypeCallback} callback Node-style callback called with the error, if any, and Operation
                         * @returns {undefined}
                         * @variation 1
                         */
                        Object.defineProperty(NotebookService.prototype.setInstanceMachineType = function setInstanceMachineType(request, callback) {
                            return this.rpcCall(setInstanceMachineType, $root.google.cloud.notebooks.v1beta1.SetInstanceMachineTypeRequest, $root.google.longrunning.Operation, request, callback);
                        }, "name", { value: "SetInstanceMachineType" });
    
                        /**
                         * Calls SetInstanceMachineType.
                         * @function setInstanceMachineType
                         * @memberof google.cloud.notebooks.v1beta1.NotebookService
                         * @instance
                         * @param {google.cloud.notebooks.v1beta1.ISetInstanceMachineTypeRequest} request SetInstanceMachineTypeRequest message or plain object
                         * @returns {Promise<google.longrunning.Operation>} Promise
                         * @variation 2
                         */
    
                        /**
                         * Callback as used by {@link google.cloud.notebooks.v1beta1.NotebookService|setInstanceLabels}.
                         * @memberof google.cloud.notebooks.v1beta1.NotebookService
                         * @typedef SetInstanceLabelsCallback
                         * @type {function}
                         * @param {Error|null} error Error, if any
                         * @param {google.longrunning.Operation} [response] Operation
                         */
    
                        /**
                         * Calls SetInstanceLabels.
                         * @function setInstanceLabels
                         * @memberof google.cloud.notebooks.v1beta1.NotebookService
                         * @instance
                         * @param {google.cloud.notebooks.v1beta1.ISetInstanceLabelsRequest} request SetInstanceLabelsRequest message or plain object
                         * @param {google.cloud.notebooks.v1beta1.NotebookService.SetInstanceLabelsCallback} callback Node-style callback called with the error, if any, and Operation
                         * @returns {undefined}
                         * @variation 1
                         */
                        Object.defineProperty(NotebookService.prototype.setInstanceLabels = function setInstanceLabels(request, callback) {
                            return this.rpcCall(setInstanceLabels, $root.google.cloud.notebooks.v1beta1.SetInstanceLabelsRequest, $root.google.longrunning.Operation, request, callback);
                        }, "name", { value: "SetInstanceLabels" });
    
                        /**
                         * Calls SetInstanceLabels.
                         * @function setInstanceLabels
                         * @memberof google.cloud.notebooks.v1beta1.NotebookService
                         * @instance
                         * @param {google.cloud.notebooks.v1beta1.ISetInstanceLabelsRequest} request SetInstanceLabelsRequest message or plain object
                         * @returns {Promise<google.longrunning.Operation>} Promise
                         * @variation 2
                         */
    
                        /**
                         * Callback as used by {@link google.cloud.notebooks.v1beta1.NotebookService|deleteInstance}.
                         * @memberof google.cloud.notebooks.v1beta1.NotebookService
                         * @typedef DeleteInstanceCallback
                         * @type {function}
                         * @param {Error|null} error Error, if any
                         * @param {google.longrunning.Operation} [response] Operation
                         */
    
                        /**
                         * Calls DeleteInstance.
                         * @function deleteInstance
                         * @memberof google.cloud.notebooks.v1beta1.NotebookService
                         * @instance
                         * @param {google.cloud.notebooks.v1beta1.IDeleteInstanceRequest} request DeleteInstanceRequest message or plain object
                         * @param {google.cloud.notebooks.v1beta1.NotebookService.DeleteInstanceCallback} callback Node-style callback called with the error, if any, and Operation
                         * @returns {undefined}
                         * @variation 1
                         */
                        Object.defineProperty(NotebookService.prototype.deleteInstance = function deleteInstance(request, callback) {
                            return this.rpcCall(deleteInstance, $root.google.cloud.notebooks.v1beta1.DeleteInstanceRequest, $root.google.longrunning.Operation, request, callback);
                        }, "name", { value: "DeleteInstance" });
    
                        /**
                         * Calls DeleteInstance.
                         * @function deleteInstance
                         * @memberof google.cloud.notebooks.v1beta1.NotebookService
                         * @instance
                         * @param {google.cloud.notebooks.v1beta1.IDeleteInstanceRequest} request DeleteInstanceRequest message or plain object
                         * @returns {Promise<google.longrunning.Operation>} Promise
                         * @variation 2
                         */
    
                        /**
                         * Callback as used by {@link google.cloud.notebooks.v1beta1.NotebookService|startInstance}.
                         * @memberof google.cloud.notebooks.v1beta1.NotebookService
                         * @typedef StartInstanceCallback
                         * @type {function}
                         * @param {Error|null} error Error, if any
                         * @param {google.longrunning.Operation} [response] Operation
                         */
    
                        /**
                         * Calls StartInstance.
                         * @function startInstance
                         * @memberof google.cloud.notebooks.v1beta1.NotebookService
                         * @instance
                         * @param {google.cloud.notebooks.v1beta1.IStartInstanceRequest} request StartInstanceRequest message or plain object
                         * @param {google.cloud.notebooks.v1beta1.NotebookService.StartInstanceCallback} callback Node-style callback called with the error, if any, and Operation
                         * @returns {undefined}
                         * @variation 1
                         */
                        Object.defineProperty(NotebookService.prototype.startInstance = function startInstance(request, callback) {
                            return this.rpcCall(startInstance, $root.google.cloud.notebooks.v1beta1.StartInstanceRequest, $root.google.longrunning.Operation, request, callback);
                        }, "name", { value: "StartInstance" });
    
                        /**
                         * Calls StartInstance.
                         * @function startInstance
                         * @memberof google.cloud.notebooks.v1beta1.NotebookService
                         * @instance
                         * @param {google.cloud.notebooks.v1beta1.IStartInstanceRequest} request StartInstanceRequest message or plain object
                         * @returns {Promise<google.longrunning.Operation>} Promise
                         * @variation 2
                         */
    
                        /**
                         * Callback as used by {@link google.cloud.notebooks.v1beta1.NotebookService|stopInstance}.
                         * @memberof google.cloud.notebooks.v1beta1.NotebookService
                         * @typedef StopInstanceCallback
                         * @type {function}
                         * @param {Error|null} error Error, if any
                         * @param {google.longrunning.Operation} [response] Operation
                         */
    
                        /**
                         * Calls StopInstance.
                         * @function stopInstance
                         * @memberof google.cloud.notebooks.v1beta1.NotebookService
                         * @instance
                         * @param {google.cloud.notebooks.v1beta1.IStopInstanceRequest} request StopInstanceRequest message or plain object
                         * @param {google.cloud.notebooks.v1beta1.NotebookService.StopInstanceCallback} callback Node-style callback called with the error, if any, and Operation
                         * @returns {undefined}
                         * @variation 1
                         */
                        Object.defineProperty(NotebookService.prototype.stopInstance = function stopInstance(request, callback) {
                            return this.rpcCall(stopInstance, $root.google.cloud.notebooks.v1beta1.StopInstanceRequest, $root.google.longrunning.Operation, request, callback);
                        }, "name", { value: "StopInstance" });
    
                        /**
                         * Calls StopInstance.
                         * @function stopInstance
                         * @memberof google.cloud.notebooks.v1beta1.NotebookService
                         * @instance
                         * @param {google.cloud.notebooks.v1beta1.IStopInstanceRequest} request StopInstanceRequest message or plain object
                         * @returns {Promise<google.longrunning.Operation>} Promise
                         * @variation 2
                         */
    
                        /**
                         * Callback as used by {@link google.cloud.notebooks.v1beta1.NotebookService|resetInstance}.
                         * @memberof google.cloud.notebooks.v1beta1.NotebookService
                         * @typedef ResetInstanceCallback
                         * @type {function}
                         * @param {Error|null} error Error, if any
                         * @param {google.longrunning.Operation} [response] Operation
                         */
    
                        /**
                         * Calls ResetInstance.
                         * @function resetInstance
                         * @memberof google.cloud.notebooks.v1beta1.NotebookService
                         * @instance
                         * @param {google.cloud.notebooks.v1beta1.IResetInstanceRequest} request ResetInstanceRequest message or plain object
                         * @param {google.cloud.notebooks.v1beta1.NotebookService.ResetInstanceCallback} callback Node-style callback called with the error, if any, and Operation
                         * @returns {undefined}
                         * @variation 1
                         */
                        Object.defineProperty(NotebookService.prototype.resetInstance = function resetInstance(request, callback) {
                            return this.rpcCall(resetInstance, $root.google.cloud.notebooks.v1beta1.ResetInstanceRequest, $root.google.longrunning.Operation, request, callback);
                        }, "name", { value: "ResetInstance" });
    
                        /**
                         * Calls ResetInstance.
                         * @function resetInstance
                         * @memberof google.cloud.notebooks.v1beta1.NotebookService
                         * @instance
                         * @param {google.cloud.notebooks.v1beta1.IResetInstanceRequest} request ResetInstanceRequest message or plain object
                         * @returns {Promise<google.longrunning.Operation>} Promise
                         * @variation 2
                         */
    
                        /**
                         * Callback as used by {@link google.cloud.notebooks.v1beta1.NotebookService|reportInstanceInfo}.
                         * @memberof google.cloud.notebooks.v1beta1.NotebookService
                         * @typedef ReportInstanceInfoCallback
                         * @type {function}
                         * @param {Error|null} error Error, if any
                         * @param {google.longrunning.Operation} [response] Operation
                         */
    
                        /**
                         * Calls ReportInstanceInfo.
                         * @function reportInstanceInfo
                         * @memberof google.cloud.notebooks.v1beta1.NotebookService
                         * @instance
                         * @param {google.cloud.notebooks.v1beta1.IReportInstanceInfoRequest} request ReportInstanceInfoRequest message or plain object
                         * @param {google.cloud.notebooks.v1beta1.NotebookService.ReportInstanceInfoCallback} callback Node-style callback called with the error, if any, and Operation
                         * @returns {undefined}
                         * @variation 1
                         */
                        Object.defineProperty(NotebookService.prototype.reportInstanceInfo = function reportInstanceInfo(request, callback) {
                            return this.rpcCall(reportInstanceInfo, $root.google.cloud.notebooks.v1beta1.ReportInstanceInfoRequest, $root.google.longrunning.Operation, request, callback);
                        }, "name", { value: "ReportInstanceInfo" });
    
                        /**
                         * Calls ReportInstanceInfo.
                         * @function reportInstanceInfo
                         * @memberof google.cloud.notebooks.v1beta1.NotebookService
                         * @instance
                         * @param {google.cloud.notebooks.v1beta1.IReportInstanceInfoRequest} request ReportInstanceInfoRequest message or plain object
                         * @returns {Promise<google.longrunning.Operation>} Promise
                         * @variation 2
                         */
    
                        /**
                         * Callback as used by {@link google.cloud.notebooks.v1beta1.NotebookService|isInstanceUpgradeable}.
                         * @memberof google.cloud.notebooks.v1beta1.NotebookService
                         * @typedef IsInstanceUpgradeableCallback
                         * @type {function}
                         * @param {Error|null} error Error, if any
                         * @param {google.cloud.notebooks.v1beta1.IsInstanceUpgradeableResponse} [response] IsInstanceUpgradeableResponse
                         */
    
                        /**
                         * Calls IsInstanceUpgradeable.
                         * @function isInstanceUpgradeable
                         * @memberof google.cloud.notebooks.v1beta1.NotebookService
                         * @instance
                         * @param {google.cloud.notebooks.v1beta1.IIsInstanceUpgradeableRequest} request IsInstanceUpgradeableRequest message or plain object
                         * @param {google.cloud.notebooks.v1beta1.NotebookService.IsInstanceUpgradeableCallback} callback Node-style callback called with the error, if any, and IsInstanceUpgradeableResponse
                         * @returns {undefined}
                         * @variation 1
                         */
                        Object.defineProperty(NotebookService.prototype.isInstanceUpgradeable = function isInstanceUpgradeable(request, callback) {
                            return this.rpcCall(isInstanceUpgradeable, $root.google.cloud.notebooks.v1beta1.IsInstanceUpgradeableRequest, $root.google.cloud.notebooks.v1beta1.IsInstanceUpgradeableResponse, request, callback);
                        }, "name", { value: "IsInstanceUpgradeable" });
    
                        /**
                         * Calls IsInstanceUpgradeable.
                         * @function isInstanceUpgradeable
                         * @memberof google.cloud.notebooks.v1beta1.NotebookService
                         * @instance
                         * @param {google.cloud.notebooks.v1beta1.IIsInstanceUpgradeableRequest} request IsInstanceUpgradeableRequest message or plain object
                         * @returns {Promise<google.cloud.notebooks.v1beta1.IsInstanceUpgradeableResponse>} Promise
                         * @variation 2
                         */
    
                        /**
                         * Callback as used by {@link google.cloud.notebooks.v1beta1.NotebookService|upgradeInstance}.
                         * @memberof google.cloud.notebooks.v1beta1.NotebookService
                         * @typedef UpgradeInstanceCallback
                         * @type {function}
                         * @param {Error|null} error Error, if any
                         * @param {google.longrunning.Operation} [response] Operation
                         */
    
                        /**
                         * Calls UpgradeInstance.
                         * @function upgradeInstance
                         * @memberof google.cloud.notebooks.v1beta1.NotebookService
                         * @instance
                         * @param {google.cloud.notebooks.v1beta1.IUpgradeInstanceRequest} request UpgradeInstanceRequest message or plain object
                         * @param {google.cloud.notebooks.v1beta1.NotebookService.UpgradeInstanceCallback} callback Node-style callback called with the error, if any, and Operation
                         * @returns {undefined}
                         * @variation 1
                         */
                        Object.defineProperty(NotebookService.prototype.upgradeInstance = function upgradeInstance(request, callback) {
                            return this.rpcCall(upgradeInstance, $root.google.cloud.notebooks.v1beta1.UpgradeInstanceRequest, $root.google.longrunning.Operation, request, callback);
                        }, "name", { value: "UpgradeInstance" });
    
                        /**
                         * Calls UpgradeInstance.
                         * @function upgradeInstance
                         * @memberof google.cloud.notebooks.v1beta1.NotebookService
                         * @instance
                         * @param {google.cloud.notebooks.v1beta1.IUpgradeInstanceRequest} request UpgradeInstanceRequest message or plain object
                         * @returns {Promise<google.longrunning.Operation>} Promise
                         * @variation 2
                         */
    
                        /**
                         * Callback as used by {@link google.cloud.notebooks.v1beta1.NotebookService|upgradeInstanceInternal}.
                         * @memberof google.cloud.notebooks.v1beta1.NotebookService
                         * @typedef UpgradeInstanceInternalCallback
                         * @type {function}
                         * @param {Error|null} error Error, if any
                         * @param {google.longrunning.Operation} [response] Operation
                         */
    
                        /**
                         * Calls UpgradeInstanceInternal.
                         * @function upgradeInstanceInternal
                         * @memberof google.cloud.notebooks.v1beta1.NotebookService
                         * @instance
                         * @param {google.cloud.notebooks.v1beta1.IUpgradeInstanceInternalRequest} request UpgradeInstanceInternalRequest message or plain object
                         * @param {google.cloud.notebooks.v1beta1.NotebookService.UpgradeInstanceInternalCallback} callback Node-style callback called with the error, if any, and Operation
                         * @returns {undefined}
                         * @variation 1
                         */
                        Object.defineProperty(NotebookService.prototype.upgradeInstanceInternal = function upgradeInstanceInternal(request, callback) {
                            return this.rpcCall(upgradeInstanceInternal, $root.google.cloud.notebooks.v1beta1.UpgradeInstanceInternalRequest, $root.google.longrunning.Operation, request, callback);
                        }, "name", { value: "UpgradeInstanceInternal" });
    
                        /**
                         * Calls UpgradeInstanceInternal.
                         * @function upgradeInstanceInternal
                         * @memberof google.cloud.notebooks.v1beta1.NotebookService
                         * @instance
                         * @param {google.cloud.notebooks.v1beta1.IUpgradeInstanceInternalRequest} request UpgradeInstanceInternalRequest message or plain object
                         * @returns {Promise<google.longrunning.Operation>} Promise
                         * @variation 2
                         */
    
                        /**
                         * Callback as used by {@link google.cloud.notebooks.v1beta1.NotebookService|listEnvironments}.
                         * @memberof google.cloud.notebooks.v1beta1.NotebookService
                         * @typedef ListEnvironmentsCallback
                         * @type {function}
                         * @param {Error|null} error Error, if any
                         * @param {google.cloud.notebooks.v1beta1.ListEnvironmentsResponse} [response] ListEnvironmentsResponse
                         */
    
                        /**
                         * Calls ListEnvironments.
                         * @function listEnvironments
                         * @memberof google.cloud.notebooks.v1beta1.NotebookService
                         * @instance
                         * @param {google.cloud.notebooks.v1beta1.IListEnvironmentsRequest} request ListEnvironmentsRequest message or plain object
                         * @param {google.cloud.notebooks.v1beta1.NotebookService.ListEnvironmentsCallback} callback Node-style callback called with the error, if any, and ListEnvironmentsResponse
                         * @returns {undefined}
                         * @variation 1
                         */
                        Object.defineProperty(NotebookService.prototype.listEnvironments = function listEnvironments(request, callback) {
                            return this.rpcCall(listEnvironments, $root.google.cloud.notebooks.v1beta1.ListEnvironmentsRequest, $root.google.cloud.notebooks.v1beta1.ListEnvironmentsResponse, request, callback);
                        }, "name", { value: "ListEnvironments" });
    
                        /**
                         * Calls ListEnvironments.
                         * @function listEnvironments
                         * @memberof google.cloud.notebooks.v1beta1.NotebookService
                         * @instance
                         * @param {google.cloud.notebooks.v1beta1.IListEnvironmentsRequest} request ListEnvironmentsRequest message or plain object
                         * @returns {Promise<google.cloud.notebooks.v1beta1.ListEnvironmentsResponse>} Promise
                         * @variation 2
                         */
    
                        /**
                         * Callback as used by {@link google.cloud.notebooks.v1beta1.NotebookService|getEnvironment}.
                         * @memberof google.cloud.notebooks.v1beta1.NotebookService
                         * @typedef GetEnvironmentCallback
                         * @type {function}
                         * @param {Error|null} error Error, if any
                         * @param {google.cloud.notebooks.v1beta1.Environment} [response] Environment
                         */
    
                        /**
                         * Calls GetEnvironment.
                         * @function getEnvironment
                         * @memberof google.cloud.notebooks.v1beta1.NotebookService
                         * @instance
                         * @param {google.cloud.notebooks.v1beta1.IGetEnvironmentRequest} request GetEnvironmentRequest message or plain object
                         * @param {google.cloud.notebooks.v1beta1.NotebookService.GetEnvironmentCallback} callback Node-style callback called with the error, if any, and Environment
                         * @returns {undefined}
                         * @variation 1
                         */
                        Object.defineProperty(NotebookService.prototype.getEnvironment = function getEnvironment(request, callback) {
                            return this.rpcCall(getEnvironment, $root.google.cloud.notebooks.v1beta1.GetEnvironmentRequest, $root.google.cloud.notebooks.v1beta1.Environment, request, callback);
                        }, "name", { value: "GetEnvironment" });
    
                        /**
                         * Calls GetEnvironment.
                         * @function getEnvironment
                         * @memberof google.cloud.notebooks.v1beta1.NotebookService
                         * @instance
                         * @param {google.cloud.notebooks.v1beta1.IGetEnvironmentRequest} request GetEnvironmentRequest message or plain object
                         * @returns {Promise<google.cloud.notebooks.v1beta1.Environment>} Promise
                         * @variation 2
                         */
    
                        /**
                         * Callback as used by {@link google.cloud.notebooks.v1beta1.NotebookService|createEnvironment}.
                         * @memberof google.cloud.notebooks.v1beta1.NotebookService
                         * @typedef CreateEnvironmentCallback
                         * @type {function}
                         * @param {Error|null} error Error, if any
                         * @param {google.longrunning.Operation} [response] Operation
                         */
    
                        /**
                         * Calls CreateEnvironment.
                         * @function createEnvironment
                         * @memberof google.cloud.notebooks.v1beta1.NotebookService
                         * @instance
                         * @param {google.cloud.notebooks.v1beta1.ICreateEnvironmentRequest} request CreateEnvironmentRequest message or plain object
                         * @param {google.cloud.notebooks.v1beta1.NotebookService.CreateEnvironmentCallback} callback Node-style callback called with the error, if any, and Operation
                         * @returns {undefined}
                         * @variation 1
                         */
                        Object.defineProperty(NotebookService.prototype.createEnvironment = function createEnvironment(request, callback) {
                            return this.rpcCall(createEnvironment, $root.google.cloud.notebooks.v1beta1.CreateEnvironmentRequest, $root.google.longrunning.Operation, request, callback);
                        }, "name", { value: "CreateEnvironment" });
    
                        /**
                         * Calls CreateEnvironment.
                         * @function createEnvironment
                         * @memberof google.cloud.notebooks.v1beta1.NotebookService
                         * @instance
                         * @param {google.cloud.notebooks.v1beta1.ICreateEnvironmentRequest} request CreateEnvironmentRequest message or plain object
                         * @returns {Promise<google.longrunning.Operation>} Promise
                         * @variation 2
                         */
    
                        /**
                         * Callback as used by {@link google.cloud.notebooks.v1beta1.NotebookService|deleteEnvironment}.
                         * @memberof google.cloud.notebooks.v1beta1.NotebookService
                         * @typedef DeleteEnvironmentCallback
                         * @type {function}
                         * @param {Error|null} error Error, if any
                         * @param {google.longrunning.Operation} [response] Operation
                         */
    
                        /**
                         * Calls DeleteEnvironment.
                         * @function deleteEnvironment
                         * @memberof google.cloud.notebooks.v1beta1.NotebookService
                         * @instance
                         * @param {google.cloud.notebooks.v1beta1.IDeleteEnvironmentRequest} request DeleteEnvironmentRequest message or plain object
                         * @param {google.cloud.notebooks.v1beta1.NotebookService.DeleteEnvironmentCallback} callback Node-style callback called with the error, if any, and Operation
                         * @returns {undefined}
                         * @variation 1
                         */
                        Object.defineProperty(NotebookService.prototype.deleteEnvironment = function deleteEnvironment(request, callback) {
                            return this.rpcCall(deleteEnvironment, $root.google.cloud.notebooks.v1beta1.DeleteEnvironmentRequest, $root.google.longrunning.Operation, request, callback);
                        }, "name", { value: "DeleteEnvironment" });
    
                        /**
                         * Calls DeleteEnvironment.
                         * @function deleteEnvironment
                         * @memberof google.cloud.notebooks.v1beta1.NotebookService
                         * @instance
                         * @param {google.cloud.notebooks.v1beta1.IDeleteEnvironmentRequest} request DeleteEnvironmentRequest message or plain object
                         * @returns {Promise<google.longrunning.Operation>} Promise
                         * @variation 2
                         */
    
                        return NotebookService;
                    })();
    
                    v1beta1.OperationMetadata = (function() {
    
                        /**
                         * Properties of an OperationMetadata.
                         * @memberof google.cloud.notebooks.v1beta1
                         * @interface IOperationMetadata
                         * @property {google.protobuf.ITimestamp|null} [createTime] OperationMetadata createTime
                         * @property {google.protobuf.ITimestamp|null} [endTime] OperationMetadata endTime
                         * @property {string|null} [target] OperationMetadata target
                         * @property {string|null} [verb] OperationMetadata verb
                         * @property {string|null} [statusMessage] OperationMetadata statusMessage
                         * @property {boolean|null} [requestedCancellation] OperationMetadata requestedCancellation
                         * @property {string|null} [apiVersion] OperationMetadata apiVersion
                         * @property {string|null} [endpoint] OperationMetadata endpoint
                         */
    
                        /**
                         * Constructs a new OperationMetadata.
                         * @memberof google.cloud.notebooks.v1beta1
                         * @classdesc Represents an OperationMetadata.
                         * @implements IOperationMetadata
                         * @constructor
                         * @param {google.cloud.notebooks.v1beta1.IOperationMetadata=} [properties] Properties to set
                         */
                        function OperationMetadata(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * OperationMetadata createTime.
                         * @member {google.protobuf.ITimestamp|null|undefined} createTime
                         * @memberof google.cloud.notebooks.v1beta1.OperationMetadata
                         * @instance
                         */
                        OperationMetadata.prototype.createTime = null;
    
                        /**
                         * OperationMetadata endTime.
                         * @member {google.protobuf.ITimestamp|null|undefined} endTime
                         * @memberof google.cloud.notebooks.v1beta1.OperationMetadata
                         * @instance
                         */
                        OperationMetadata.prototype.endTime = null;
    
                        /**
                         * OperationMetadata target.
                         * @member {string} target
                         * @memberof google.cloud.notebooks.v1beta1.OperationMetadata
                         * @instance
                         */
                        OperationMetadata.prototype.target = "";
    
                        /**
                         * OperationMetadata verb.
                         * @member {string} verb
                         * @memberof google.cloud.notebooks.v1beta1.OperationMetadata
                         * @instance
                         */
                        OperationMetadata.prototype.verb = "";
    
                        /**
                         * OperationMetadata statusMessage.
                         * @member {string} statusMessage
                         * @memberof google.cloud.notebooks.v1beta1.OperationMetadata
                         * @instance
                         */
                        OperationMetadata.prototype.statusMessage = "";
    
                        /**
                         * OperationMetadata requestedCancellation.
                         * @member {boolean} requestedCancellation
                         * @memberof google.cloud.notebooks.v1beta1.OperationMetadata
                         * @instance
                         */
                        OperationMetadata.prototype.requestedCancellation = false;
    
                        /**
                         * OperationMetadata apiVersion.
                         * @member {string} apiVersion
                         * @memberof google.cloud.notebooks.v1beta1.OperationMetadata
                         * @instance
                         */
                        OperationMetadata.prototype.apiVersion = "";
    
                        /**
                         * OperationMetadata endpoint.
                         * @member {string} endpoint
                         * @memberof google.cloud.notebooks.v1beta1.OperationMetadata
                         * @instance
                         */
                        OperationMetadata.prototype.endpoint = "";
    
                        /**
                         * Creates a new OperationMetadata instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.notebooks.v1beta1.OperationMetadata
                         * @static
                         * @param {google.cloud.notebooks.v1beta1.IOperationMetadata=} [properties] Properties to set
                         * @returns {google.cloud.notebooks.v1beta1.OperationMetadata} OperationMetadata instance
                         */
                        OperationMetadata.create = function create(properties) {
                            return new OperationMetadata(properties);
                        };
    
                        /**
                         * Encodes the specified OperationMetadata message. Does not implicitly {@link google.cloud.notebooks.v1beta1.OperationMetadata.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.notebooks.v1beta1.OperationMetadata
                         * @static
                         * @param {google.cloud.notebooks.v1beta1.IOperationMetadata} message OperationMetadata message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        OperationMetadata.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.createTime != null && Object.hasOwnProperty.call(message, "createTime"))
                                $root.google.protobuf.Timestamp.encode(message.createTime, writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                            if (message.endTime != null && Object.hasOwnProperty.call(message, "endTime"))
                                $root.google.protobuf.Timestamp.encode(message.endTime, writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                            if (message.target != null && Object.hasOwnProperty.call(message, "target"))
                                writer.uint32(/* id 3, wireType 2 =*/26).string(message.target);
                            if (message.verb != null && Object.hasOwnProperty.call(message, "verb"))
                                writer.uint32(/* id 4, wireType 2 =*/34).string(message.verb);
                            if (message.statusMessage != null && Object.hasOwnProperty.call(message, "statusMessage"))
                                writer.uint32(/* id 5, wireType 2 =*/42).string(message.statusMessage);
                            if (message.requestedCancellation != null && Object.hasOwnProperty.call(message, "requestedCancellation"))
                                writer.uint32(/* id 6, wireType 0 =*/48).bool(message.requestedCancellation);
                            if (message.apiVersion != null && Object.hasOwnProperty.call(message, "apiVersion"))
                                writer.uint32(/* id 7, wireType 2 =*/58).string(message.apiVersion);
                            if (message.endpoint != null && Object.hasOwnProperty.call(message, "endpoint"))
                                writer.uint32(/* id 8, wireType 2 =*/66).string(message.endpoint);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified OperationMetadata message, length delimited. Does not implicitly {@link google.cloud.notebooks.v1beta1.OperationMetadata.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.notebooks.v1beta1.OperationMetadata
                         * @static
                         * @param {google.cloud.notebooks.v1beta1.IOperationMetadata} message OperationMetadata message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        OperationMetadata.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes an OperationMetadata message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.notebooks.v1beta1.OperationMetadata
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.notebooks.v1beta1.OperationMetadata} OperationMetadata
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        OperationMetadata.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.notebooks.v1beta1.OperationMetadata();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.createTime = $root.google.protobuf.Timestamp.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 2: {
                                        message.endTime = $root.google.protobuf.Timestamp.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 3: {
                                        message.target = reader.string();
                                        break;
                                    }
                                case 4: {
                                        message.verb = reader.string();
                                        break;
                                    }
                                case 5: {
                                        message.statusMessage = reader.string();
                                        break;
                                    }
                                case 6: {
                                        message.requestedCancellation = reader.bool();
                                        break;
                                    }
                                case 7: {
                                        message.apiVersion = reader.string();
                                        break;
                                    }
                                case 8: {
                                        message.endpoint = reader.string();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes an OperationMetadata message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.notebooks.v1beta1.OperationMetadata
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.notebooks.v1beta1.OperationMetadata} OperationMetadata
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        OperationMetadata.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies an OperationMetadata message.
                         * @function verify
                         * @memberof google.cloud.notebooks.v1beta1.OperationMetadata
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        OperationMetadata.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.createTime != null && message.hasOwnProperty("createTime")) {
                                var error = $root.google.protobuf.Timestamp.verify(message.createTime);
                                if (error)
                                    return "createTime." + error;
                            }
                            if (message.endTime != null && message.hasOwnProperty("endTime")) {
                                var error = $root.google.protobuf.Timestamp.verify(message.endTime);
                                if (error)
                                    return "endTime." + error;
                            }
                            if (message.target != null && message.hasOwnProperty("target"))
                                if (!$util.isString(message.target))
                                    return "target: string expected";
                            if (message.verb != null && message.hasOwnProperty("verb"))
                                if (!$util.isString(message.verb))
                                    return "verb: string expected";
                            if (message.statusMessage != null && message.hasOwnProperty("statusMessage"))
                                if (!$util.isString(message.statusMessage))
                                    return "statusMessage: string expected";
                            if (message.requestedCancellation != null && message.hasOwnProperty("requestedCancellation"))
                                if (typeof message.requestedCancellation !== "boolean")
                                    return "requestedCancellation: boolean expected";
                            if (message.apiVersion != null && message.hasOwnProperty("apiVersion"))
                                if (!$util.isString(message.apiVersion))
                                    return "apiVersion: string expected";
                            if (message.endpoint != null && message.hasOwnProperty("endpoint"))
                                if (!$util.isString(message.endpoint))
                                    return "endpoint: string expected";
                            return null;
                        };
    
                        /**
                         * Creates an OperationMetadata message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.notebooks.v1beta1.OperationMetadata
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.notebooks.v1beta1.OperationMetadata} OperationMetadata
                         */
                        OperationMetadata.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.notebooks.v1beta1.OperationMetadata)
                                return object;
                            var message = new $root.google.cloud.notebooks.v1beta1.OperationMetadata();
                            if (object.createTime != null) {
                                if (typeof object.createTime !== "object")
                                    throw TypeError(".google.cloud.notebooks.v1beta1.OperationMetadata.createTime: object expected");
                                message.createTime = $root.google.protobuf.Timestamp.fromObject(object.createTime);
                            }
                            if (object.endTime != null) {
                                if (typeof object.endTime !== "object")
                                    throw TypeError(".google.cloud.notebooks.v1beta1.OperationMetadata.endTime: object expected");
                                message.endTime = $root.google.protobuf.Timestamp.fromObject(object.endTime);
                            }
                            if (object.target != null)
                                message.target = String(object.target);
                            if (object.verb != null)
                                message.verb = String(object.verb);
                            if (object.statusMessage != null)
                                message.statusMessage = String(object.statusMessage);
                            if (object.requestedCancellation != null)
                                message.requestedCancellation = Boolean(object.requestedCancellation);
                            if (object.apiVersion != null)
                                message.apiVersion = String(object.apiVersion);
                            if (object.endpoint != null)
                                message.endpoint = String(object.endpoint);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from an OperationMetadata message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.notebooks.v1beta1.OperationMetadata
                         * @static
                         * @param {google.cloud.notebooks.v1beta1.OperationMetadata} message OperationMetadata
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        OperationMetadata.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.createTime = null;
                                object.endTime = null;
                                object.target = "";
                                object.verb = "";
                                object.statusMessage = "";
                                object.requestedCancellation = false;
                                object.apiVersion = "";
                                object.endpoint = "";
                            }
                            if (message.createTime != null && message.hasOwnProperty("createTime"))
                                object.createTime = $root.google.protobuf.Timestamp.toObject(message.createTime, options);
                            if (message.endTime != null && message.hasOwnProperty("endTime"))
                                object.endTime = $root.google.protobuf.Timestamp.toObject(message.endTime, options);
                            if (message.target != null && message.hasOwnProperty("target"))
                                object.target = message.target;
                            if (message.verb != null && message.hasOwnProperty("verb"))
                                object.verb = message.verb;
                            if (message.statusMessage != null && message.hasOwnProperty("statusMessage"))
                                object.statusMessage = message.statusMessage;
                            if (message.requestedCancellation != null && message.hasOwnProperty("requestedCancellation"))
                                object.requestedCancellation = message.requestedCancellation;
                            if (message.apiVersion != null && message.hasOwnProperty("apiVersion"))
                                object.apiVersion = message.apiVersion;
                            if (message.endpoint != null && message.hasOwnProperty("endpoint"))
                                object.endpoint = message.endpoint;
                            return object;
                        };
    
                        /**
                         * Converts this OperationMetadata to JSON.
                         * @function toJSON
                         * @memberof google.cloud.notebooks.v1beta1.OperationMetadata
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        OperationMetadata.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for OperationMetadata
                         * @function getTypeUrl
                         * @memberof google.cloud.notebooks.v1beta1.OperationMetadata
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        OperationMetadata.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.notebooks.v1beta1.OperationMetadata";
                        };
    
                        return OperationMetadata;
                    })();
    
                    v1beta1.ListInstancesRequest = (function() {
    
                        /**
                         * Properties of a ListInstancesRequest.
                         * @memberof google.cloud.notebooks.v1beta1
                         * @interface IListInstancesRequest
                         * @property {string|null} [parent] ListInstancesRequest parent
                         * @property {number|null} [pageSize] ListInstancesRequest pageSize
                         * @property {string|null} [pageToken] ListInstancesRequest pageToken
                         */
    
                        /**
                         * Constructs a new ListInstancesRequest.
                         * @memberof google.cloud.notebooks.v1beta1
                         * @classdesc Represents a ListInstancesRequest.
                         * @implements IListInstancesRequest
                         * @constructor
                         * @param {google.cloud.notebooks.v1beta1.IListInstancesRequest=} [properties] Properties to set
                         */
                        function ListInstancesRequest(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * ListInstancesRequest parent.
                         * @member {string} parent
                         * @memberof google.cloud.notebooks.v1beta1.ListInstancesRequest
                         * @instance
                         */
                        ListInstancesRequest.prototype.parent = "";
    
                        /**
                         * ListInstancesRequest pageSize.
                         * @member {number} pageSize
                         * @memberof google.cloud.notebooks.v1beta1.ListInstancesRequest
                         * @instance
                         */
                        ListInstancesRequest.prototype.pageSize = 0;
    
                        /**
                         * ListInstancesRequest pageToken.
                         * @member {string} pageToken
                         * @memberof google.cloud.notebooks.v1beta1.ListInstancesRequest
                         * @instance
                         */
                        ListInstancesRequest.prototype.pageToken = "";
    
                        /**
                         * Creates a new ListInstancesRequest instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.notebooks.v1beta1.ListInstancesRequest
                         * @static
                         * @param {google.cloud.notebooks.v1beta1.IListInstancesRequest=} [properties] Properties to set
                         * @returns {google.cloud.notebooks.v1beta1.ListInstancesRequest} ListInstancesRequest instance
                         */
                        ListInstancesRequest.create = function create(properties) {
                            return new ListInstancesRequest(properties);
                        };
    
                        /**
                         * Encodes the specified ListInstancesRequest message. Does not implicitly {@link google.cloud.notebooks.v1beta1.ListInstancesRequest.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.notebooks.v1beta1.ListInstancesRequest
                         * @static
                         * @param {google.cloud.notebooks.v1beta1.IListInstancesRequest} message ListInstancesRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        ListInstancesRequest.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.parent != null && Object.hasOwnProperty.call(message, "parent"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.parent);
                            if (message.pageSize != null && Object.hasOwnProperty.call(message, "pageSize"))
                                writer.uint32(/* id 2, wireType 0 =*/16).int32(message.pageSize);
                            if (message.pageToken != null && Object.hasOwnProperty.call(message, "pageToken"))
                                writer.uint32(/* id 3, wireType 2 =*/26).string(message.pageToken);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified ListInstancesRequest message, length delimited. Does not implicitly {@link google.cloud.notebooks.v1beta1.ListInstancesRequest.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.notebooks.v1beta1.ListInstancesRequest
                         * @static
                         * @param {google.cloud.notebooks.v1beta1.IListInstancesRequest} message ListInstancesRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        ListInstancesRequest.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a ListInstancesRequest message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.notebooks.v1beta1.ListInstancesRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.notebooks.v1beta1.ListInstancesRequest} ListInstancesRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        ListInstancesRequest.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.notebooks.v1beta1.ListInstancesRequest();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.parent = reader.string();
                                        break;
                                    }
                                case 2: {
                                        message.pageSize = reader.int32();
                                        break;
                                    }
                                case 3: {
                                        message.pageToken = reader.string();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a ListInstancesRequest message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.notebooks.v1beta1.ListInstancesRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.notebooks.v1beta1.ListInstancesRequest} ListInstancesRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        ListInstancesRequest.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a ListInstancesRequest message.
                         * @function verify
                         * @memberof google.cloud.notebooks.v1beta1.ListInstancesRequest
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        ListInstancesRequest.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.parent != null && message.hasOwnProperty("parent"))
                                if (!$util.isString(message.parent))
                                    return "parent: string expected";
                            if (message.pageSize != null && message.hasOwnProperty("pageSize"))
                                if (!$util.isInteger(message.pageSize))
                                    return "pageSize: integer expected";
                            if (message.pageToken != null && message.hasOwnProperty("pageToken"))
                                if (!$util.isString(message.pageToken))
                                    return "pageToken: string expected";
                            return null;
                        };
    
                        /**
                         * Creates a ListInstancesRequest message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.notebooks.v1beta1.ListInstancesRequest
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.notebooks.v1beta1.ListInstancesRequest} ListInstancesRequest
                         */
                        ListInstancesRequest.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.notebooks.v1beta1.ListInstancesRequest)
                                return object;
                            var message = new $root.google.cloud.notebooks.v1beta1.ListInstancesRequest();
                            if (object.parent != null)
                                message.parent = String(object.parent);
                            if (object.pageSize != null)
                                message.pageSize = object.pageSize | 0;
                            if (object.pageToken != null)
                                message.pageToken = String(object.pageToken);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a ListInstancesRequest message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.notebooks.v1beta1.ListInstancesRequest
                         * @static
                         * @param {google.cloud.notebooks.v1beta1.ListInstancesRequest} message ListInstancesRequest
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        ListInstancesRequest.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.parent = "";
                                object.pageSize = 0;
                                object.pageToken = "";
                            }
                            if (message.parent != null && message.hasOwnProperty("parent"))
                                object.parent = message.parent;
                            if (message.pageSize != null && message.hasOwnProperty("pageSize"))
                                object.pageSize = message.pageSize;
                            if (message.pageToken != null && message.hasOwnProperty("pageToken"))
                                object.pageToken = message.pageToken;
                            return object;
                        };
    
                        /**
                         * Converts this ListInstancesRequest to JSON.
                         * @function toJSON
                         * @memberof google.cloud.notebooks.v1beta1.ListInstancesRequest
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        ListInstancesRequest.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for ListInstancesRequest
                         * @function getTypeUrl
                         * @memberof google.cloud.notebooks.v1beta1.ListInstancesRequest
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        ListInstancesRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.notebooks.v1beta1.ListInstancesRequest";
                        };
    
                        return ListInstancesRequest;
                    })();
    
                    v1beta1.ListInstancesResponse = (function() {
    
                        /**
                         * Properties of a ListInstancesResponse.
                         * @memberof google.cloud.notebooks.v1beta1
                         * @interface IListInstancesResponse
                         * @property {Array.<google.cloud.notebooks.v1beta1.IInstance>|null} [instances] ListInstancesResponse instances
                         * @property {string|null} [nextPageToken] ListInstancesResponse nextPageToken
                         * @property {Array.<string>|null} [unreachable] ListInstancesResponse unreachable
                         */
    
                        /**
                         * Constructs a new ListInstancesResponse.
                         * @memberof google.cloud.notebooks.v1beta1
                         * @classdesc Represents a ListInstancesResponse.
                         * @implements IListInstancesResponse
                         * @constructor
                         * @param {google.cloud.notebooks.v1beta1.IListInstancesResponse=} [properties] Properties to set
                         */
                        function ListInstancesResponse(properties) {
                            this.instances = [];
                            this.unreachable = [];
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * ListInstancesResponse instances.
                         * @member {Array.<google.cloud.notebooks.v1beta1.IInstance>} instances
                         * @memberof google.cloud.notebooks.v1beta1.ListInstancesResponse
                         * @instance
                         */
                        ListInstancesResponse.prototype.instances = $util.emptyArray;
    
                        /**
                         * ListInstancesResponse nextPageToken.
                         * @member {string} nextPageToken
                         * @memberof google.cloud.notebooks.v1beta1.ListInstancesResponse
                         * @instance
                         */
                        ListInstancesResponse.prototype.nextPageToken = "";
    
                        /**
                         * ListInstancesResponse unreachable.
                         * @member {Array.<string>} unreachable
                         * @memberof google.cloud.notebooks.v1beta1.ListInstancesResponse
                         * @instance
                         */
                        ListInstancesResponse.prototype.unreachable = $util.emptyArray;
    
                        /**
                         * Creates a new ListInstancesResponse instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.notebooks.v1beta1.ListInstancesResponse
                         * @static
                         * @param {google.cloud.notebooks.v1beta1.IListInstancesResponse=} [properties] Properties to set
                         * @returns {google.cloud.notebooks.v1beta1.ListInstancesResponse} ListInstancesResponse instance
                         */
                        ListInstancesResponse.create = function create(properties) {
                            return new ListInstancesResponse(properties);
                        };
    
                        /**
                         * Encodes the specified ListInstancesResponse message. Does not implicitly {@link google.cloud.notebooks.v1beta1.ListInstancesResponse.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.notebooks.v1beta1.ListInstancesResponse
                         * @static
                         * @param {google.cloud.notebooks.v1beta1.IListInstancesResponse} message ListInstancesResponse message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        ListInstancesResponse.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.instances != null && message.instances.length)
                                for (var i = 0; i < message.instances.length; ++i)
                                    $root.google.cloud.notebooks.v1beta1.Instance.encode(message.instances[i], writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                            if (message.nextPageToken != null && Object.hasOwnProperty.call(message, "nextPageToken"))
                                writer.uint32(/* id 2, wireType 2 =*/18).string(message.nextPageToken);
                            if (message.unreachable != null && message.unreachable.length)
                                for (var i = 0; i < message.unreachable.length; ++i)
                                    writer.uint32(/* id 3, wireType 2 =*/26).string(message.unreachable[i]);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified ListInstancesResponse message, length delimited. Does not implicitly {@link google.cloud.notebooks.v1beta1.ListInstancesResponse.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.notebooks.v1beta1.ListInstancesResponse
                         * @static
                         * @param {google.cloud.notebooks.v1beta1.IListInstancesResponse} message ListInstancesResponse message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        ListInstancesResponse.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a ListInstancesResponse message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.notebooks.v1beta1.ListInstancesResponse
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.notebooks.v1beta1.ListInstancesResponse} ListInstancesResponse
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        ListInstancesResponse.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.notebooks.v1beta1.ListInstancesResponse();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        if (!(message.instances && message.instances.length))
                                            message.instances = [];
                                        message.instances.push($root.google.cloud.notebooks.v1beta1.Instance.decode(reader, reader.uint32()));
                                        break;
                                    }
                                case 2: {
                                        message.nextPageToken = reader.string();
                                        break;
                                    }
                                case 3: {
                                        if (!(message.unreachable && message.unreachable.length))
                                            message.unreachable = [];
                                        message.unreachable.push(reader.string());
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a ListInstancesResponse message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.notebooks.v1beta1.ListInstancesResponse
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.notebooks.v1beta1.ListInstancesResponse} ListInstancesResponse
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        ListInstancesResponse.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a ListInstancesResponse message.
                         * @function verify
                         * @memberof google.cloud.notebooks.v1beta1.ListInstancesResponse
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        ListInstancesResponse.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.instances != null && message.hasOwnProperty("instances")) {
                                if (!Array.isArray(message.instances))
                                    return "instances: array expected";
                                for (var i = 0; i < message.instances.length; ++i) {
                                    var error = $root.google.cloud.notebooks.v1beta1.Instance.verify(message.instances[i]);
                                    if (error)
                                        return "instances." + error;
                                }
                            }
                            if (message.nextPageToken != null && message.hasOwnProperty("nextPageToken"))
                                if (!$util.isString(message.nextPageToken))
                                    return "nextPageToken: string expected";
                            if (message.unreachable != null && message.hasOwnProperty("unreachable")) {
                                if (!Array.isArray(message.unreachable))
                                    return "unreachable: array expected";
                                for (var i = 0; i < message.unreachable.length; ++i)
                                    if (!$util.isString(message.unreachable[i]))
                                        return "unreachable: string[] expected";
                            }
                            return null;
                        };
    
                        /**
                         * Creates a ListInstancesResponse message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.notebooks.v1beta1.ListInstancesResponse
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.notebooks.v1beta1.ListInstancesResponse} ListInstancesResponse
                         */
                        ListInstancesResponse.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.notebooks.v1beta1.ListInstancesResponse)
                                return object;
                            var message = new $root.google.cloud.notebooks.v1beta1.ListInstancesResponse();
                            if (object.instances) {
                                if (!Array.isArray(object.instances))
                                    throw TypeError(".google.cloud.notebooks.v1beta1.ListInstancesResponse.instances: array expected");
                                message.instances = [];
                                for (var i = 0; i < object.instances.length; ++i) {
                                    if (typeof object.instances[i] !== "object")
                                        throw TypeError(".google.cloud.notebooks.v1beta1.ListInstancesResponse.instances: object expected");
                                    message.instances[i] = $root.google.cloud.notebooks.v1beta1.Instance.fromObject(object.instances[i]);
                                }
                            }
                            if (object.nextPageToken != null)
                                message.nextPageToken = String(object.nextPageToken);
                            if (object.unreachable) {
                                if (!Array.isArray(object.unreachable))
                                    throw TypeError(".google.cloud.notebooks.v1beta1.ListInstancesResponse.unreachable: array expected");
                                message.unreachable = [];
                                for (var i = 0; i < object.unreachable.length; ++i)
                                    message.unreachable[i] = String(object.unreachable[i]);
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a ListInstancesResponse message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.notebooks.v1beta1.ListInstancesResponse
                         * @static
                         * @param {google.cloud.notebooks.v1beta1.ListInstancesResponse} message ListInstancesResponse
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        ListInstancesResponse.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.arrays || options.defaults) {
                                object.instances = [];
                                object.unreachable = [];
                            }
                            if (options.defaults)
                                object.nextPageToken = "";
                            if (message.instances && message.instances.length) {
                                object.instances = [];
                                for (var j = 0; j < message.instances.length; ++j)
                                    object.instances[j] = $root.google.cloud.notebooks.v1beta1.Instance.toObject(message.instances[j], options);
                            }
                            if (message.nextPageToken != null && message.hasOwnProperty("nextPageToken"))
                                object.nextPageToken = message.nextPageToken;
                            if (message.unreachable && message.unreachable.length) {
                                object.unreachable = [];
                                for (var j = 0; j < message.unreachable.length; ++j)
                                    object.unreachable[j] = message.unreachable[j];
                            }
                            return object;
                        };
    
                        /**
                         * Converts this ListInstancesResponse to JSON.
                         * @function toJSON
                         * @memberof google.cloud.notebooks.v1beta1.ListInstancesResponse
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        ListInstancesResponse.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for ListInstancesResponse
                         * @function getTypeUrl
                         * @memberof google.cloud.notebooks.v1beta1.ListInstancesResponse
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        ListInstancesResponse.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.notebooks.v1beta1.ListInstancesResponse";
                        };
    
                        return ListInstancesResponse;
                    })();
    
                    v1beta1.GetInstanceRequest = (function() {
    
                        /**
                         * Properties of a GetInstanceRequest.
                         * @memberof google.cloud.notebooks.v1beta1
                         * @interface IGetInstanceRequest
                         * @property {string|null} [name] GetInstanceRequest name
                         */
    
                        /**
                         * Constructs a new GetInstanceRequest.
                         * @memberof google.cloud.notebooks.v1beta1
                         * @classdesc Represents a GetInstanceRequest.
                         * @implements IGetInstanceRequest
                         * @constructor
                         * @param {google.cloud.notebooks.v1beta1.IGetInstanceRequest=} [properties] Properties to set
                         */
                        function GetInstanceRequest(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * GetInstanceRequest name.
                         * @member {string} name
                         * @memberof google.cloud.notebooks.v1beta1.GetInstanceRequest
                         * @instance
                         */
                        GetInstanceRequest.prototype.name = "";
    
                        /**
                         * Creates a new GetInstanceRequest instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.notebooks.v1beta1.GetInstanceRequest
                         * @static
                         * @param {google.cloud.notebooks.v1beta1.IGetInstanceRequest=} [properties] Properties to set
                         * @returns {google.cloud.notebooks.v1beta1.GetInstanceRequest} GetInstanceRequest instance
                         */
                        GetInstanceRequest.create = function create(properties) {
                            return new GetInstanceRequest(properties);
                        };
    
                        /**
                         * Encodes the specified GetInstanceRequest message. Does not implicitly {@link google.cloud.notebooks.v1beta1.GetInstanceRequest.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.notebooks.v1beta1.GetInstanceRequest
                         * @static
                         * @param {google.cloud.notebooks.v1beta1.IGetInstanceRequest} message GetInstanceRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        GetInstanceRequest.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified GetInstanceRequest message, length delimited. Does not implicitly {@link google.cloud.notebooks.v1beta1.GetInstanceRequest.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.notebooks.v1beta1.GetInstanceRequest
                         * @static
                         * @param {google.cloud.notebooks.v1beta1.IGetInstanceRequest} message GetInstanceRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        GetInstanceRequest.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a GetInstanceRequest message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.notebooks.v1beta1.GetInstanceRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.notebooks.v1beta1.GetInstanceRequest} GetInstanceRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        GetInstanceRequest.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.notebooks.v1beta1.GetInstanceRequest();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.name = reader.string();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a GetInstanceRequest message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.notebooks.v1beta1.GetInstanceRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.notebooks.v1beta1.GetInstanceRequest} GetInstanceRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        GetInstanceRequest.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a GetInstanceRequest message.
                         * @function verify
                         * @memberof google.cloud.notebooks.v1beta1.GetInstanceRequest
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        GetInstanceRequest.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.name != null && message.hasOwnProperty("name"))
                                if (!$util.isString(message.name))
                                    return "name: string expected";
                            return null;
                        };
    
                        /**
                         * Creates a GetInstanceRequest message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.notebooks.v1beta1.GetInstanceRequest
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.notebooks.v1beta1.GetInstanceRequest} GetInstanceRequest
                         */
                        GetInstanceRequest.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.notebooks.v1beta1.GetInstanceRequest)
                                return object;
                            var message = new $root.google.cloud.notebooks.v1beta1.GetInstanceRequest();
                            if (object.name != null)
                                message.name = String(object.name);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a GetInstanceRequest message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.notebooks.v1beta1.GetInstanceRequest
                         * @static
                         * @param {google.cloud.notebooks.v1beta1.GetInstanceRequest} message GetInstanceRequest
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        GetInstanceRequest.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults)
                                object.name = "";
                            if (message.name != null && message.hasOwnProperty("name"))
                                object.name = message.name;
                            return object;
                        };
    
                        /**
                         * Converts this GetInstanceRequest to JSON.
                         * @function toJSON
                         * @memberof google.cloud.notebooks.v1beta1.GetInstanceRequest
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        GetInstanceRequest.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for GetInstanceRequest
                         * @function getTypeUrl
                         * @memberof google.cloud.notebooks.v1beta1.GetInstanceRequest
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        GetInstanceRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.notebooks.v1beta1.GetInstanceRequest";
                        };
    
                        return GetInstanceRequest;
                    })();
    
                    v1beta1.CreateInstanceRequest = (function() {
    
                        /**
                         * Properties of a CreateInstanceRequest.
                         * @memberof google.cloud.notebooks.v1beta1
                         * @interface ICreateInstanceRequest
                         * @property {string|null} [parent] CreateInstanceRequest parent
                         * @property {string|null} [instanceId] CreateInstanceRequest instanceId
                         * @property {google.cloud.notebooks.v1beta1.IInstance|null} [instance] CreateInstanceRequest instance
                         */
    
                        /**
                         * Constructs a new CreateInstanceRequest.
                         * @memberof google.cloud.notebooks.v1beta1
                         * @classdesc Represents a CreateInstanceRequest.
                         * @implements ICreateInstanceRequest
                         * @constructor
                         * @param {google.cloud.notebooks.v1beta1.ICreateInstanceRequest=} [properties] Properties to set
                         */
                        function CreateInstanceRequest(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * CreateInstanceRequest parent.
                         * @member {string} parent
                         * @memberof google.cloud.notebooks.v1beta1.CreateInstanceRequest
                         * @instance
                         */
                        CreateInstanceRequest.prototype.parent = "";
    
                        /**
                         * CreateInstanceRequest instanceId.
                         * @member {string} instanceId
                         * @memberof google.cloud.notebooks.v1beta1.CreateInstanceRequest
                         * @instance
                         */
                        CreateInstanceRequest.prototype.instanceId = "";
    
                        /**
                         * CreateInstanceRequest instance.
                         * @member {google.cloud.notebooks.v1beta1.IInstance|null|undefined} instance
                         * @memberof google.cloud.notebooks.v1beta1.CreateInstanceRequest
                         * @instance
                         */
                        CreateInstanceRequest.prototype.instance = null;
    
                        /**
                         * Creates a new CreateInstanceRequest instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.notebooks.v1beta1.CreateInstanceRequest
                         * @static
                         * @param {google.cloud.notebooks.v1beta1.ICreateInstanceRequest=} [properties] Properties to set
                         * @returns {google.cloud.notebooks.v1beta1.CreateInstanceRequest} CreateInstanceRequest instance
                         */
                        CreateInstanceRequest.create = function create(properties) {
                            return new CreateInstanceRequest(properties);
                        };
    
                        /**
                         * Encodes the specified CreateInstanceRequest message. Does not implicitly {@link google.cloud.notebooks.v1beta1.CreateInstanceRequest.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.notebooks.v1beta1.CreateInstanceRequest
                         * @static
                         * @param {google.cloud.notebooks.v1beta1.ICreateInstanceRequest} message CreateInstanceRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        CreateInstanceRequest.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.parent != null && Object.hasOwnProperty.call(message, "parent"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.parent);
                            if (message.instanceId != null && Object.hasOwnProperty.call(message, "instanceId"))
                                writer.uint32(/* id 2, wireType 2 =*/18).string(message.instanceId);
                            if (message.instance != null && Object.hasOwnProperty.call(message, "instance"))
                                $root.google.cloud.notebooks.v1beta1.Instance.encode(message.instance, writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();
                            return writer;
                        };
    
                        /**
                         * Encodes the specified CreateInstanceRequest message, length delimited. Does not implicitly {@link google.cloud.notebooks.v1beta1.CreateInstanceRequest.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.notebooks.v1beta1.CreateInstanceRequest
                         * @static
                         * @param {google.cloud.notebooks.v1beta1.ICreateInstanceRequest} message CreateInstanceRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        CreateInstanceRequest.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a CreateInstanceRequest message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.notebooks.v1beta1.CreateInstanceRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.notebooks.v1beta1.CreateInstanceRequest} CreateInstanceRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        CreateInstanceRequest.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.notebooks.v1beta1.CreateInstanceRequest();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.parent = reader.string();
                                        break;
                                    }
                                case 2: {
                                        message.instanceId = reader.string();
                                        break;
                                    }
                                case 3: {
                                        message.instance = $root.google.cloud.notebooks.v1beta1.Instance.decode(reader, reader.uint32());
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a CreateInstanceRequest message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.notebooks.v1beta1.CreateInstanceRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.notebooks.v1beta1.CreateInstanceRequest} CreateInstanceRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        CreateInstanceRequest.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a CreateInstanceRequest message.
                         * @function verify
                         * @memberof google.cloud.notebooks.v1beta1.CreateInstanceRequest
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        CreateInstanceRequest.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.parent != null && message.hasOwnProperty("parent"))
                                if (!$util.isString(message.parent))
                                    return "parent: string expected";
                            if (message.instanceId != null && message.hasOwnProperty("instanceId"))
                                if (!$util.isString(message.instanceId))
                                    return "instanceId: string expected";
                            if (message.instance != null && message.hasOwnProperty("instance")) {
                                var error = $root.google.cloud.notebooks.v1beta1.Instance.verify(message.instance);
                                if (error)
                                    return "instance." + error;
                            }
                            return null;
                        };
    
                        /**
                         * Creates a CreateInstanceRequest message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.notebooks.v1beta1.CreateInstanceRequest
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.notebooks.v1beta1.CreateInstanceRequest} CreateInstanceRequest
                         */
                        CreateInstanceRequest.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.notebooks.v1beta1.CreateInstanceRequest)
                                return object;
                            var message = new $root.google.cloud.notebooks.v1beta1.CreateInstanceRequest();
                            if (object.parent != null)
                                message.parent = String(object.parent);
                            if (object.instanceId != null)
                                message.instanceId = String(object.instanceId);
                            if (object.instance != null) {
                                if (typeof object.instance !== "object")
                                    throw TypeError(".google.cloud.notebooks.v1beta1.CreateInstanceRequest.instance: object expected");
                                message.instance = $root.google.cloud.notebooks.v1beta1.Instance.fromObject(object.instance);
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a CreateInstanceRequest message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.notebooks.v1beta1.CreateInstanceRequest
                         * @static
                         * @param {google.cloud.notebooks.v1beta1.CreateInstanceRequest} message CreateInstanceRequest
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        CreateInstanceRequest.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.parent = "";
                                object.instanceId = "";
                                object.instance = null;
                            }
                            if (message.parent != null && message.hasOwnProperty("parent"))
                                object.parent = message.parent;
                            if (message.instanceId != null && message.hasOwnProperty("instanceId"))
                                object.instanceId = message.instanceId;
                            if (message.instance != null && message.hasOwnProperty("instance"))
                                object.instance = $root.google.cloud.notebooks.v1beta1.Instance.toObject(message.instance, options);
                            return object;
                        };
    
                        /**
                         * Converts this CreateInstanceRequest to JSON.
                         * @function toJSON
                         * @memberof google.cloud.notebooks.v1beta1.CreateInstanceRequest
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        CreateInstanceRequest.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for CreateInstanceRequest
                         * @function getTypeUrl
                         * @memberof google.cloud.notebooks.v1beta1.CreateInstanceRequest
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        CreateInstanceRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.notebooks.v1beta1.CreateInstanceRequest";
                        };
    
                        return CreateInstanceRequest;
                    })();
    
                    v1beta1.RegisterInstanceRequest = (function() {
    
                        /**
                         * Properties of a RegisterInstanceRequest.
                         * @memberof google.cloud.notebooks.v1beta1
                         * @interface IRegisterInstanceRequest
                         * @property {string|null} [parent] RegisterInstanceRequest parent
                         * @property {string|null} [instanceId] RegisterInstanceRequest instanceId
                         */
    
                        /**
                         * Constructs a new RegisterInstanceRequest.
                         * @memberof google.cloud.notebooks.v1beta1
                         * @classdesc Represents a RegisterInstanceRequest.
                         * @implements IRegisterInstanceRequest
                         * @constructor
                         * @param {google.cloud.notebooks.v1beta1.IRegisterInstanceRequest=} [properties] Properties to set
                         */
                        function RegisterInstanceRequest(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * RegisterInstanceRequest parent.
                         * @member {string} parent
                         * @memberof google.cloud.notebooks.v1beta1.RegisterInstanceRequest
                         * @instance
                         */
                        RegisterInstanceRequest.prototype.parent = "";
    
                        /**
                         * RegisterInstanceRequest instanceId.
                         * @member {string} instanceId
                         * @memberof google.cloud.notebooks.v1beta1.RegisterInstanceRequest
                         * @instance
                         */
                        RegisterInstanceRequest.prototype.instanceId = "";
    
                        /**
                         * Creates a new RegisterInstanceRequest instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.notebooks.v1beta1.RegisterInstanceRequest
                         * @static
                         * @param {google.cloud.notebooks.v1beta1.IRegisterInstanceRequest=} [properties] Properties to set
                         * @returns {google.cloud.notebooks.v1beta1.RegisterInstanceRequest} RegisterInstanceRequest instance
                         */
                        RegisterInstanceRequest.create = function create(properties) {
                            return new RegisterInstanceRequest(properties);
                        };
    
                        /**
                         * Encodes the specified RegisterInstanceRequest message. Does not implicitly {@link google.cloud.notebooks.v1beta1.RegisterInstanceRequest.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.notebooks.v1beta1.RegisterInstanceRequest
                         * @static
                         * @param {google.cloud.notebooks.v1beta1.IRegisterInstanceRequest} message RegisterInstanceRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        RegisterInstanceRequest.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.parent != null && Object.hasOwnProperty.call(message, "parent"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.parent);
                            if (message.instanceId != null && Object.hasOwnProperty.call(message, "instanceId"))
                                writer.uint32(/* id 2, wireType 2 =*/18).string(message.instanceId);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified RegisterInstanceRequest message, length delimited. Does not implicitly {@link google.cloud.notebooks.v1beta1.RegisterInstanceRequest.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.notebooks.v1beta1.RegisterInstanceRequest
                         * @static
                         * @param {google.cloud.notebooks.v1beta1.IRegisterInstanceRequest} message RegisterInstanceRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        RegisterInstanceRequest.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a RegisterInstanceRequest message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.notebooks.v1beta1.RegisterInstanceRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.notebooks.v1beta1.RegisterInstanceRequest} RegisterInstanceRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        RegisterInstanceRequest.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.notebooks.v1beta1.RegisterInstanceRequest();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.parent = reader.string();
                                        break;
                                    }
                                case 2: {
                                        message.instanceId = reader.string();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a RegisterInstanceRequest message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.notebooks.v1beta1.RegisterInstanceRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.notebooks.v1beta1.RegisterInstanceRequest} RegisterInstanceRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        RegisterInstanceRequest.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a RegisterInstanceRequest message.
                         * @function verify
                         * @memberof google.cloud.notebooks.v1beta1.RegisterInstanceRequest
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        RegisterInstanceRequest.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.parent != null && message.hasOwnProperty("parent"))
                                if (!$util.isString(message.parent))
                                    return "parent: string expected";
                            if (message.instanceId != null && message.hasOwnProperty("instanceId"))
                                if (!$util.isString(message.instanceId))
                                    return "instanceId: string expected";
                            return null;
                        };
    
                        /**
                         * Creates a RegisterInstanceRequest message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.notebooks.v1beta1.RegisterInstanceRequest
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.notebooks.v1beta1.RegisterInstanceRequest} RegisterInstanceRequest
                         */
                        RegisterInstanceRequest.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.notebooks.v1beta1.RegisterInstanceRequest)
                                return object;
                            var message = new $root.google.cloud.notebooks.v1beta1.RegisterInstanceRequest();
                            if (object.parent != null)
                                message.parent = String(object.parent);
                            if (object.instanceId != null)
                                message.instanceId = String(object.instanceId);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a RegisterInstanceRequest message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.notebooks.v1beta1.RegisterInstanceRequest
                         * @static
                         * @param {google.cloud.notebooks.v1beta1.RegisterInstanceRequest} message RegisterInstanceRequest
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        RegisterInstanceRequest.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.parent = "";
                                object.instanceId = "";
                            }
                            if (message.parent != null && message.hasOwnProperty("parent"))
                                object.parent = message.parent;
                            if (message.instanceId != null && message.hasOwnProperty("instanceId"))
                                object.instanceId = message.instanceId;
                            return object;
                        };
    
                        /**
                         * Converts this RegisterInstanceRequest to JSON.
                         * @function toJSON
                         * @memberof google.cloud.notebooks.v1beta1.RegisterInstanceRequest
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        RegisterInstanceRequest.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for RegisterInstanceRequest
                         * @function getTypeUrl
                         * @memberof google.cloud.notebooks.v1beta1.RegisterInstanceRequest
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        RegisterInstanceRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.notebooks.v1beta1.RegisterInstanceRequest";
                        };
    
                        return RegisterInstanceRequest;
                    })();
    
                    v1beta1.SetInstanceAcceleratorRequest = (function() {
    
                        /**
                         * Properties of a SetInstanceAcceleratorRequest.
                         * @memberof google.cloud.notebooks.v1beta1
                         * @interface ISetInstanceAcceleratorRequest
                         * @property {string|null} [name] SetInstanceAcceleratorRequest name
                         * @property {google.cloud.notebooks.v1beta1.Instance.AcceleratorType|null} [type] SetInstanceAcceleratorRequest type
                         * @property {number|Long|null} [coreCount] SetInstanceAcceleratorRequest coreCount
                         */
    
                        /**
                         * Constructs a new SetInstanceAcceleratorRequest.
                         * @memberof google.cloud.notebooks.v1beta1
                         * @classdesc Represents a SetInstanceAcceleratorRequest.
                         * @implements ISetInstanceAcceleratorRequest
                         * @constructor
                         * @param {google.cloud.notebooks.v1beta1.ISetInstanceAcceleratorRequest=} [properties] Properties to set
                         */
                        function SetInstanceAcceleratorRequest(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * SetInstanceAcceleratorRequest name.
                         * @member {string} name
                         * @memberof google.cloud.notebooks.v1beta1.SetInstanceAcceleratorRequest
                         * @instance
                         */
                        SetInstanceAcceleratorRequest.prototype.name = "";
    
                        /**
                         * SetInstanceAcceleratorRequest type.
                         * @member {google.cloud.notebooks.v1beta1.Instance.AcceleratorType} type
                         * @memberof google.cloud.notebooks.v1beta1.SetInstanceAcceleratorRequest
                         * @instance
                         */
                        SetInstanceAcceleratorRequest.prototype.type = 0;
    
                        /**
                         * SetInstanceAcceleratorRequest coreCount.
                         * @member {number|Long} coreCount
                         * @memberof google.cloud.notebooks.v1beta1.SetInstanceAcceleratorRequest
                         * @instance
                         */
                        SetInstanceAcceleratorRequest.prototype.coreCount = $util.Long ? $util.Long.fromBits(0,0,false) : 0;
    
                        /**
                         * Creates a new SetInstanceAcceleratorRequest instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.notebooks.v1beta1.SetInstanceAcceleratorRequest
                         * @static
                         * @param {google.cloud.notebooks.v1beta1.ISetInstanceAcceleratorRequest=} [properties] Properties to set
                         * @returns {google.cloud.notebooks.v1beta1.SetInstanceAcceleratorRequest} SetInstanceAcceleratorRequest instance
                         */
                        SetInstanceAcceleratorRequest.create = function create(properties) {
                            return new SetInstanceAcceleratorRequest(properties);
                        };
    
                        /**
                         * Encodes the specified SetInstanceAcceleratorRequest message. Does not implicitly {@link google.cloud.notebooks.v1beta1.SetInstanceAcceleratorRequest.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.notebooks.v1beta1.SetInstanceAcceleratorRequest
                         * @static
                         * @param {google.cloud.notebooks.v1beta1.ISetInstanceAcceleratorRequest} message SetInstanceAcceleratorRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        SetInstanceAcceleratorRequest.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                            if (message.type != null && Object.hasOwnProperty.call(message, "type"))
                                writer.uint32(/* id 2, wireType 0 =*/16).int32(message.type);
                            if (message.coreCount != null && Object.hasOwnProperty.call(message, "coreCount"))
                                writer.uint32(/* id 3, wireType 0 =*/24).int64(message.coreCount);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified SetInstanceAcceleratorRequest message, length delimited. Does not implicitly {@link google.cloud.notebooks.v1beta1.SetInstanceAcceleratorRequest.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.notebooks.v1beta1.SetInstanceAcceleratorRequest
                         * @static
                         * @param {google.cloud.notebooks.v1beta1.ISetInstanceAcceleratorRequest} message SetInstanceAcceleratorRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        SetInstanceAcceleratorRequest.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a SetInstanceAcceleratorRequest message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.notebooks.v1beta1.SetInstanceAcceleratorRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.notebooks.v1beta1.SetInstanceAcceleratorRequest} SetInstanceAcceleratorRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        SetInstanceAcceleratorRequest.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.notebooks.v1beta1.SetInstanceAcceleratorRequest();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.name = reader.string();
                                        break;
                                    }
                                case 2: {
                                        message.type = reader.int32();
                                        break;
                                    }
                                case 3: {
                                        message.coreCount = reader.int64();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a SetInstanceAcceleratorRequest message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.notebooks.v1beta1.SetInstanceAcceleratorRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.notebooks.v1beta1.SetInstanceAcceleratorRequest} SetInstanceAcceleratorRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        SetInstanceAcceleratorRequest.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a SetInstanceAcceleratorRequest message.
                         * @function verify
                         * @memberof google.cloud.notebooks.v1beta1.SetInstanceAcceleratorRequest
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        SetInstanceAcceleratorRequest.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.name != null && message.hasOwnProperty("name"))
                                if (!$util.isString(message.name))
                                    return "name: string expected";
                            if (message.type != null && message.hasOwnProperty("type"))
                                switch (message.type) {
                                default:
                                    return "type: enum value expected";
                                case 0:
                                case 1:
                                case 2:
                                case 3:
                                case 4:
                                case 5:
                                case 8:
                                case 9:
                                case 10:
                                case 6:
                                case 7:
                                    break;
                                }
                            if (message.coreCount != null && message.hasOwnProperty("coreCount"))
                                if (!$util.isInteger(message.coreCount) && !(message.coreCount && $util.isInteger(message.coreCount.low) && $util.isInteger(message.coreCount.high)))
                                    return "coreCount: integer|Long expected";
                            return null;
                        };
    
                        /**
                         * Creates a SetInstanceAcceleratorRequest message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.notebooks.v1beta1.SetInstanceAcceleratorRequest
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.notebooks.v1beta1.SetInstanceAcceleratorRequest} SetInstanceAcceleratorRequest
                         */
                        SetInstanceAcceleratorRequest.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.notebooks.v1beta1.SetInstanceAcceleratorRequest)
                                return object;
                            var message = new $root.google.cloud.notebooks.v1beta1.SetInstanceAcceleratorRequest();
                            if (object.name != null)
                                message.name = String(object.name);
                            switch (object.type) {
                            default:
                                if (typeof object.type === "number") {
                                    message.type = object.type;
                                    break;
                                }
                                break;
                            case "ACCELERATOR_TYPE_UNSPECIFIED":
                            case 0:
                                message.type = 0;
                                break;
                            case "NVIDIA_TESLA_K80":
                            case 1:
                                message.type = 1;
                                break;
                            case "NVIDIA_TESLA_P100":
                            case 2:
                                message.type = 2;
                                break;
                            case "NVIDIA_TESLA_V100":
                            case 3:
                                message.type = 3;
                                break;
                            case "NVIDIA_TESLA_P4":
                            case 4:
                                message.type = 4;
                                break;
                            case "NVIDIA_TESLA_T4":
                            case 5:
                                message.type = 5;
                                break;
                            case "NVIDIA_TESLA_T4_VWS":
                            case 8:
                                message.type = 8;
                                break;
                            case "NVIDIA_TESLA_P100_VWS":
                            case 9:
                                message.type = 9;
                                break;
                            case "NVIDIA_TESLA_P4_VWS":
                            case 10:
                                message.type = 10;
                                break;
                            case "TPU_V2":
                            case 6:
                                message.type = 6;
                                break;
                            case "TPU_V3":
                            case 7:
                                message.type = 7;
                                break;
                            }
                            if (object.coreCount != null)
                                if ($util.Long)
                                    (message.coreCount = $util.Long.fromValue(object.coreCount)).unsigned = false;
                                else if (typeof object.coreCount === "string")
                                    message.coreCount = parseInt(object.coreCount, 10);
                                else if (typeof object.coreCount === "number")
                                    message.coreCount = object.coreCount;
                                else if (typeof object.coreCount === "object")
                                    message.coreCount = new $util.LongBits(object.coreCount.low >>> 0, object.coreCount.high >>> 0).toNumber();
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a SetInstanceAcceleratorRequest message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.notebooks.v1beta1.SetInstanceAcceleratorRequest
                         * @static
                         * @param {google.cloud.notebooks.v1beta1.SetInstanceAcceleratorRequest} message SetInstanceAcceleratorRequest
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        SetInstanceAcceleratorRequest.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.name = "";
                                object.type = options.enums === String ? "ACCELERATOR_TYPE_UNSPECIFIED" : 0;
                                if ($util.Long) {
                                    var long = new $util.Long(0, 0, false);
                                    object.coreCount = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                                } else
                                    object.coreCount = options.longs === String ? "0" : 0;
                            }
                            if (message.name != null && message.hasOwnProperty("name"))
                                object.name = message.name;
                            if (message.type != null && message.hasOwnProperty("type"))
                                object.type = options.enums === String ? $root.google.cloud.notebooks.v1beta1.Instance.AcceleratorType[message.type] === undefined ? message.type : $root.google.cloud.notebooks.v1beta1.Instance.AcceleratorType[message.type] : message.type;
                            if (message.coreCount != null && message.hasOwnProperty("coreCount"))
                                if (typeof message.coreCount === "number")
                                    object.coreCount = options.longs === String ? String(message.coreCount) : message.coreCount;
                                else
                                    object.coreCount = options.longs === String ? $util.Long.prototype.toString.call(message.coreCount) : options.longs === Number ? new $util.LongBits(message.coreCount.low >>> 0, message.coreCount.high >>> 0).toNumber() : message.coreCount;
                            return object;
                        };
    
                        /**
                         * Converts this SetInstanceAcceleratorRequest to JSON.
                         * @function toJSON
                         * @memberof google.cloud.notebooks.v1beta1.SetInstanceAcceleratorRequest
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        SetInstanceAcceleratorRequest.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for SetInstanceAcceleratorRequest
                         * @function getTypeUrl
                         * @memberof google.cloud.notebooks.v1beta1.SetInstanceAcceleratorRequest
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        SetInstanceAcceleratorRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.notebooks.v1beta1.SetInstanceAcceleratorRequest";
                        };
    
                        return SetInstanceAcceleratorRequest;
                    })();
    
                    v1beta1.SetInstanceMachineTypeRequest = (function() {
    
                        /**
                         * Properties of a SetInstanceMachineTypeRequest.
                         * @memberof google.cloud.notebooks.v1beta1
                         * @interface ISetInstanceMachineTypeRequest
                         * @property {string|null} [name] SetInstanceMachineTypeRequest name
                         * @property {string|null} [machineType] SetInstanceMachineTypeRequest machineType
                         */
    
                        /**
                         * Constructs a new SetInstanceMachineTypeRequest.
                         * @memberof google.cloud.notebooks.v1beta1
                         * @classdesc Represents a SetInstanceMachineTypeRequest.
                         * @implements ISetInstanceMachineTypeRequest
                         * @constructor
                         * @param {google.cloud.notebooks.v1beta1.ISetInstanceMachineTypeRequest=} [properties] Properties to set
                         */
                        function SetInstanceMachineTypeRequest(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * SetInstanceMachineTypeRequest name.
                         * @member {string} name
                         * @memberof google.cloud.notebooks.v1beta1.SetInstanceMachineTypeRequest
                         * @instance
                         */
                        SetInstanceMachineTypeRequest.prototype.name = "";
    
                        /**
                         * SetInstanceMachineTypeRequest machineType.
                         * @member {string} machineType
                         * @memberof google.cloud.notebooks.v1beta1.SetInstanceMachineTypeRequest
                         * @instance
                         */
                        SetInstanceMachineTypeRequest.prototype.machineType = "";
    
                        /**
                         * Creates a new SetInstanceMachineTypeRequest instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.notebooks.v1beta1.SetInstanceMachineTypeRequest
                         * @static
                         * @param {google.cloud.notebooks.v1beta1.ISetInstanceMachineTypeRequest=} [properties] Properties to set
                         * @returns {google.cloud.notebooks.v1beta1.SetInstanceMachineTypeRequest} SetInstanceMachineTypeRequest instance
                         */
                        SetInstanceMachineTypeRequest.create = function create(properties) {
                            return new SetInstanceMachineTypeRequest(properties);
                        };
    
                        /**
                         * Encodes the specified SetInstanceMachineTypeRequest message. Does not implicitly {@link google.cloud.notebooks.v1beta1.SetInstanceMachineTypeRequest.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.notebooks.v1beta1.SetInstanceMachineTypeRequest
                         * @static
                         * @param {google.cloud.notebooks.v1beta1.ISetInstanceMachineTypeRequest} message SetInstanceMachineTypeRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        SetInstanceMachineTypeRequest.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                            if (message.machineType != null && Object.hasOwnProperty.call(message, "machineType"))
                                writer.uint32(/* id 2, wireType 2 =*/18).string(message.machineType);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified SetInstanceMachineTypeRequest message, length delimited. Does not implicitly {@link google.cloud.notebooks.v1beta1.SetInstanceMachineTypeRequest.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.notebooks.v1beta1.SetInstanceMachineTypeRequest
                         * @static
                         * @param {google.cloud.notebooks.v1beta1.ISetInstanceMachineTypeRequest} message SetInstanceMachineTypeRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        SetInstanceMachineTypeRequest.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a SetInstanceMachineTypeRequest message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.notebooks.v1beta1.SetInstanceMachineTypeRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.notebooks.v1beta1.SetInstanceMachineTypeRequest} SetInstanceMachineTypeRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        SetInstanceMachineTypeRequest.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.notebooks.v1beta1.SetInstanceMachineTypeRequest();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.name = reader.string();
                                        break;
                                    }
                                case 2: {
                                        message.machineType = reader.string();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a SetInstanceMachineTypeRequest message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.notebooks.v1beta1.SetInstanceMachineTypeRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.notebooks.v1beta1.SetInstanceMachineTypeRequest} SetInstanceMachineTypeRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        SetInstanceMachineTypeRequest.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a SetInstanceMachineTypeRequest message.
                         * @function verify
                         * @memberof google.cloud.notebooks.v1beta1.SetInstanceMachineTypeRequest
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        SetInstanceMachineTypeRequest.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.name != null && message.hasOwnProperty("name"))
                                if (!$util.isString(message.name))
                                    return "name: string expected";
                            if (message.machineType != null && message.hasOwnProperty("machineType"))
                                if (!$util.isString(message.machineType))
                                    return "machineType: string expected";
                            return null;
                        };
    
                        /**
                         * Creates a SetInstanceMachineTypeRequest message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.notebooks.v1beta1.SetInstanceMachineTypeRequest
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.notebooks.v1beta1.SetInstanceMachineTypeRequest} SetInstanceMachineTypeRequest
                         */
                        SetInstanceMachineTypeRequest.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.notebooks.v1beta1.SetInstanceMachineTypeRequest)
                                return object;
                            var message = new $root.google.cloud.notebooks.v1beta1.SetInstanceMachineTypeRequest();
                            if (object.name != null)
                                message.name = String(object.name);
                            if (object.machineType != null)
                                message.machineType = String(object.machineType);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a SetInstanceMachineTypeRequest message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.notebooks.v1beta1.SetInstanceMachineTypeRequest
                         * @static
                         * @param {google.cloud.notebooks.v1beta1.SetInstanceMachineTypeRequest} message SetInstanceMachineTypeRequest
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        SetInstanceMachineTypeRequest.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.name = "";
                                object.machineType = "";
                            }
                            if (message.name != null && message.hasOwnProperty("name"))
                                object.name = message.name;
                            if (message.machineType != null && message.hasOwnProperty("machineType"))
                                object.machineType = message.machineType;
                            return object;
                        };
    
                        /**
                         * Converts this SetInstanceMachineTypeRequest to JSON.
                         * @function toJSON
                         * @memberof google.cloud.notebooks.v1beta1.SetInstanceMachineTypeRequest
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        SetInstanceMachineTypeRequest.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for SetInstanceMachineTypeRequest
                         * @function getTypeUrl
                         * @memberof google.cloud.notebooks.v1beta1.SetInstanceMachineTypeRequest
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        SetInstanceMachineTypeRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.notebooks.v1beta1.SetInstanceMachineTypeRequest";
                        };
    
                        return SetInstanceMachineTypeRequest;
                    })();
    
                    v1beta1.SetInstanceLabelsRequest = (function() {
    
                        /**
                         * Properties of a SetInstanceLabelsRequest.
                         * @memberof google.cloud.notebooks.v1beta1
                         * @interface ISetInstanceLabelsRequest
                         * @property {string|null} [name] SetInstanceLabelsRequest name
                         * @property {Object.<string,string>|null} [labels] SetInstanceLabelsRequest labels
                         */
    
                        /**
                         * Constructs a new SetInstanceLabelsRequest.
                         * @memberof google.cloud.notebooks.v1beta1
                         * @classdesc Represents a SetInstanceLabelsRequest.
                         * @implements ISetInstanceLabelsRequest
                         * @constructor
                         * @param {google.cloud.notebooks.v1beta1.ISetInstanceLabelsRequest=} [properties] Properties to set
                         */
                        function SetInstanceLabelsRequest(properties) {
                            this.labels = {};
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * SetInstanceLabelsRequest name.
                         * @member {string} name
                         * @memberof google.cloud.notebooks.v1beta1.SetInstanceLabelsRequest
                         * @instance
                         */
                        SetInstanceLabelsRequest.prototype.name = "";
    
                        /**
                         * SetInstanceLabelsRequest labels.
                         * @member {Object.<string,string>} labels
                         * @memberof google.cloud.notebooks.v1beta1.SetInstanceLabelsRequest
                         * @instance
                         */
                        SetInstanceLabelsRequest.prototype.labels = $util.emptyObject;
    
                        /**
                         * Creates a new SetInstanceLabelsRequest instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.notebooks.v1beta1.SetInstanceLabelsRequest
                         * @static
                         * @param {google.cloud.notebooks.v1beta1.ISetInstanceLabelsRequest=} [properties] Properties to set
                         * @returns {google.cloud.notebooks.v1beta1.SetInstanceLabelsRequest} SetInstanceLabelsRequest instance
                         */
                        SetInstanceLabelsRequest.create = function create(properties) {
                            return new SetInstanceLabelsRequest(properties);
                        };
    
                        /**
                         * Encodes the specified SetInstanceLabelsRequest message. Does not implicitly {@link google.cloud.notebooks.v1beta1.SetInstanceLabelsRequest.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.notebooks.v1beta1.SetInstanceLabelsRequest
                         * @static
                         * @param {google.cloud.notebooks.v1beta1.ISetInstanceLabelsRequest} message SetInstanceLabelsRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        SetInstanceLabelsRequest.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                            if (message.labels != null && Object.hasOwnProperty.call(message, "labels"))
                                for (var keys = Object.keys(message.labels), i = 0; i < keys.length; ++i)
                                    writer.uint32(/* id 2, wireType 2 =*/18).fork().uint32(/* id 1, wireType 2 =*/10).string(keys[i]).uint32(/* id 2, wireType 2 =*/18).string(message.labels[keys[i]]).ldelim();
                            return writer;
                        };
    
                        /**
                         * Encodes the specified SetInstanceLabelsRequest message, length delimited. Does not implicitly {@link google.cloud.notebooks.v1beta1.SetInstanceLabelsRequest.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.notebooks.v1beta1.SetInstanceLabelsRequest
                         * @static
                         * @param {google.cloud.notebooks.v1beta1.ISetInstanceLabelsRequest} message SetInstanceLabelsRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        SetInstanceLabelsRequest.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a SetInstanceLabelsRequest message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.notebooks.v1beta1.SetInstanceLabelsRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.notebooks.v1beta1.SetInstanceLabelsRequest} SetInstanceLabelsRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        SetInstanceLabelsRequest.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.notebooks.v1beta1.SetInstanceLabelsRequest(), key, value;
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.name = reader.string();
                                        break;
                                    }
                                case 2: {
                                        if (message.labels === $util.emptyObject)
                                            message.labels = {};
                                        var end2 = reader.uint32() + reader.pos;
                                        key = "";
                                        value = "";
                                        while (reader.pos < end2) {
                                            var tag2 = reader.uint32();
                                            switch (tag2 >>> 3) {
                                            case 1:
                                                key = reader.string();
                                                break;
                                            case 2:
                                                value = reader.string();
                                                break;
                                            default:
                                                reader.skipType(tag2 & 7);
                                                break;
                                            }
                                        }
                                        message.labels[key] = value;
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a SetInstanceLabelsRequest message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.notebooks.v1beta1.SetInstanceLabelsRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.notebooks.v1beta1.SetInstanceLabelsRequest} SetInstanceLabelsRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        SetInstanceLabelsRequest.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a SetInstanceLabelsRequest message.
                         * @function verify
                         * @memberof google.cloud.notebooks.v1beta1.SetInstanceLabelsRequest
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        SetInstanceLabelsRequest.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.name != null && message.hasOwnProperty("name"))
                                if (!$util.isString(message.name))
                                    return "name: string expected";
                            if (message.labels != null && message.hasOwnProperty("labels")) {
                                if (!$util.isObject(message.labels))
                                    return "labels: object expected";
                                var key = Object.keys(message.labels);
                                for (var i = 0; i < key.length; ++i)
                                    if (!$util.isString(message.labels[key[i]]))
                                        return "labels: string{k:string} expected";
                            }
                            return null;
                        };
    
                        /**
                         * Creates a SetInstanceLabelsRequest message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.notebooks.v1beta1.SetInstanceLabelsRequest
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.notebooks.v1beta1.SetInstanceLabelsRequest} SetInstanceLabelsRequest
                         */
                        SetInstanceLabelsRequest.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.notebooks.v1beta1.SetInstanceLabelsRequest)
                                return object;
                            var message = new $root.google.cloud.notebooks.v1beta1.SetInstanceLabelsRequest();
                            if (object.name != null)
                                message.name = String(object.name);
                            if (object.labels) {
                                if (typeof object.labels !== "object")
                                    throw TypeError(".google.cloud.notebooks.v1beta1.SetInstanceLabelsRequest.labels: object expected");
                                message.labels = {};
                                for (var keys = Object.keys(object.labels), i = 0; i < keys.length; ++i)
                                    message.labels[keys[i]] = String(object.labels[keys[i]]);
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a SetInstanceLabelsRequest message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.notebooks.v1beta1.SetInstanceLabelsRequest
                         * @static
                         * @param {google.cloud.notebooks.v1beta1.SetInstanceLabelsRequest} message SetInstanceLabelsRequest
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        SetInstanceLabelsRequest.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.objects || options.defaults)
                                object.labels = {};
                            if (options.defaults)
                                object.name = "";
                            if (message.name != null && message.hasOwnProperty("name"))
                                object.name = message.name;
                            var keys2;
                            if (message.labels && (keys2 = Object.keys(message.labels)).length) {
                                object.labels = {};
                                for (var j = 0; j < keys2.length; ++j)
                                    object.labels[keys2[j]] = message.labels[keys2[j]];
                            }
                            return object;
                        };
    
                        /**
                         * Converts this SetInstanceLabelsRequest to JSON.
                         * @function toJSON
                         * @memberof google.cloud.notebooks.v1beta1.SetInstanceLabelsRequest
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        SetInstanceLabelsRequest.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for SetInstanceLabelsRequest
                         * @function getTypeUrl
                         * @memberof google.cloud.notebooks.v1beta1.SetInstanceLabelsRequest
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        SetInstanceLabelsRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.notebooks.v1beta1.SetInstanceLabelsRequest";
                        };
    
                        return SetInstanceLabelsRequest;
                    })();
    
                    v1beta1.DeleteInstanceRequest = (function() {
    
                        /**
                         * Properties of a DeleteInstanceRequest.
                         * @memberof google.cloud.notebooks.v1beta1
                         * @interface IDeleteInstanceRequest
                         * @property {string|null} [name] DeleteInstanceRequest name
                         */
    
                        /**
                         * Constructs a new DeleteInstanceRequest.
                         * @memberof google.cloud.notebooks.v1beta1
                         * @classdesc Represents a DeleteInstanceRequest.
                         * @implements IDeleteInstanceRequest
                         * @constructor
                         * @param {google.cloud.notebooks.v1beta1.IDeleteInstanceRequest=} [properties] Properties to set
                         */
                        function DeleteInstanceRequest(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * DeleteInstanceRequest name.
                         * @member {string} name
                         * @memberof google.cloud.notebooks.v1beta1.DeleteInstanceRequest
                         * @instance
                         */
                        DeleteInstanceRequest.prototype.name = "";
    
                        /**
                         * Creates a new DeleteInstanceRequest instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.notebooks.v1beta1.DeleteInstanceRequest
                         * @static
                         * @param {google.cloud.notebooks.v1beta1.IDeleteInstanceRequest=} [properties] Properties to set
                         * @returns {google.cloud.notebooks.v1beta1.DeleteInstanceRequest} DeleteInstanceRequest instance
                         */
                        DeleteInstanceRequest.create = function create(properties) {
                            return new DeleteInstanceRequest(properties);
                        };
    
                        /**
                         * Encodes the specified DeleteInstanceRequest message. Does not implicitly {@link google.cloud.notebooks.v1beta1.DeleteInstanceRequest.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.notebooks.v1beta1.DeleteInstanceRequest
                         * @static
                         * @param {google.cloud.notebooks.v1beta1.IDeleteInstanceRequest} message DeleteInstanceRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        DeleteInstanceRequest.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified DeleteInstanceRequest message, length delimited. Does not implicitly {@link google.cloud.notebooks.v1beta1.DeleteInstanceRequest.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.notebooks.v1beta1.DeleteInstanceRequest
                         * @static
                         * @param {google.cloud.notebooks.v1beta1.IDeleteInstanceRequest} message DeleteInstanceRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        DeleteInstanceRequest.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a DeleteInstanceRequest message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.notebooks.v1beta1.DeleteInstanceRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.notebooks.v1beta1.DeleteInstanceRequest} DeleteInstanceRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        DeleteInstanceRequest.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.notebooks.v1beta1.DeleteInstanceRequest();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.name = reader.string();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a DeleteInstanceRequest message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.notebooks.v1beta1.DeleteInstanceRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.notebooks.v1beta1.DeleteInstanceRequest} DeleteInstanceRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        DeleteInstanceRequest.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a DeleteInstanceRequest message.
                         * @function verify
                         * @memberof google.cloud.notebooks.v1beta1.DeleteInstanceRequest
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        DeleteInstanceRequest.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.name != null && message.hasOwnProperty("name"))
                                if (!$util.isString(message.name))
                                    return "name: string expected";
                            return null;
                        };
    
                        /**
                         * Creates a DeleteInstanceRequest message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.notebooks.v1beta1.DeleteInstanceRequest
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.notebooks.v1beta1.DeleteInstanceRequest} DeleteInstanceRequest
                         */
                        DeleteInstanceRequest.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.notebooks.v1beta1.DeleteInstanceRequest)
                                return object;
                            var message = new $root.google.cloud.notebooks.v1beta1.DeleteInstanceRequest();
                            if (object.name != null)
                                message.name = String(object.name);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a DeleteInstanceRequest message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.notebooks.v1beta1.DeleteInstanceRequest
                         * @static
                         * @param {google.cloud.notebooks.v1beta1.DeleteInstanceRequest} message DeleteInstanceRequest
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        DeleteInstanceRequest.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults)
                                object.name = "";
                            if (message.name != null && message.hasOwnProperty("name"))
                                object.name = message.name;
                            return object;
                        };
    
                        /**
                         * Converts this DeleteInstanceRequest to JSON.
                         * @function toJSON
                         * @memberof google.cloud.notebooks.v1beta1.DeleteInstanceRequest
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        DeleteInstanceRequest.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for DeleteInstanceRequest
                         * @function getTypeUrl
                         * @memberof google.cloud.notebooks.v1beta1.DeleteInstanceRequest
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        DeleteInstanceRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.notebooks.v1beta1.DeleteInstanceRequest";
                        };
    
                        return DeleteInstanceRequest;
                    })();
    
                    v1beta1.StartInstanceRequest = (function() {
    
                        /**
                         * Properties of a StartInstanceRequest.
                         * @memberof google.cloud.notebooks.v1beta1
                         * @interface IStartInstanceRequest
                         * @property {string|null} [name] StartInstanceRequest name
                         */
    
                        /**
                         * Constructs a new StartInstanceRequest.
                         * @memberof google.cloud.notebooks.v1beta1
                         * @classdesc Represents a StartInstanceRequest.
                         * @implements IStartInstanceRequest
                         * @constructor
                         * @param {google.cloud.notebooks.v1beta1.IStartInstanceRequest=} [properties] Properties to set
                         */
                        function StartInstanceRequest(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * StartInstanceRequest name.
                         * @member {string} name
                         * @memberof google.cloud.notebooks.v1beta1.StartInstanceRequest
                         * @instance
                         */
                        StartInstanceRequest.prototype.name = "";
    
                        /**
                         * Creates a new StartInstanceRequest instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.notebooks.v1beta1.StartInstanceRequest
                         * @static
                         * @param {google.cloud.notebooks.v1beta1.IStartInstanceRequest=} [properties] Properties to set
                         * @returns {google.cloud.notebooks.v1beta1.StartInstanceRequest} StartInstanceRequest instance
                         */
                        StartInstanceRequest.create = function create(properties) {
                            return new StartInstanceRequest(properties);
                        };
    
                        /**
                         * Encodes the specified StartInstanceRequest message. Does not implicitly {@link google.cloud.notebooks.v1beta1.StartInstanceRequest.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.notebooks.v1beta1.StartInstanceRequest
                         * @static
                         * @param {google.cloud.notebooks.v1beta1.IStartInstanceRequest} message StartInstanceRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        StartInstanceRequest.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified StartInstanceRequest message, length delimited. Does not implicitly {@link google.cloud.notebooks.v1beta1.StartInstanceRequest.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.notebooks.v1beta1.StartInstanceRequest
                         * @static
                         * @param {google.cloud.notebooks.v1beta1.IStartInstanceRequest} message StartInstanceRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        StartInstanceRequest.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a StartInstanceRequest message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.notebooks.v1beta1.StartInstanceRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.notebooks.v1beta1.StartInstanceRequest} StartInstanceRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        StartInstanceRequest.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.notebooks.v1beta1.StartInstanceRequest();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.name = reader.string();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a StartInstanceRequest message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.notebooks.v1beta1.StartInstanceRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.notebooks.v1beta1.StartInstanceRequest} StartInstanceRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        StartInstanceRequest.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a StartInstanceRequest message.
                         * @function verify
                         * @memberof google.cloud.notebooks.v1beta1.StartInstanceRequest
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        StartInstanceRequest.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.name != null && message.hasOwnProperty("name"))
                                if (!$util.isString(message.name))
                                    return "name: string expected";
                            return null;
                        };
    
                        /**
                         * Creates a StartInstanceRequest message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.notebooks.v1beta1.StartInstanceRequest
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.notebooks.v1beta1.StartInstanceRequest} StartInstanceRequest
                         */
                        StartInstanceRequest.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.notebooks.v1beta1.StartInstanceRequest)
                                return object;
                            var message = new $root.google.cloud.notebooks.v1beta1.StartInstanceRequest();
                            if (object.name != null)
                                message.name = String(object.name);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a StartInstanceRequest message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.notebooks.v1beta1.StartInstanceRequest
                         * @static
                         * @param {google.cloud.notebooks.v1beta1.StartInstanceRequest} message StartInstanceRequest
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        StartInstanceRequest.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults)
                                object.name = "";
                            if (message.name != null && message.hasOwnProperty("name"))
                                object.name = message.name;
                            return object;
                        };
    
                        /**
                         * Converts this StartInstanceRequest to JSON.
                         * @function toJSON
                         * @memberof google.cloud.notebooks.v1beta1.StartInstanceRequest
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        StartInstanceRequest.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for StartInstanceRequest
                         * @function getTypeUrl
                         * @memberof google.cloud.notebooks.v1beta1.StartInstanceRequest
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        StartInstanceRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.notebooks.v1beta1.StartInstanceRequest";
                        };
    
                        return StartInstanceRequest;
                    })();
    
                    v1beta1.StopInstanceRequest = (function() {
    
                        /**
                         * Properties of a StopInstanceRequest.
                         * @memberof google.cloud.notebooks.v1beta1
                         * @interface IStopInstanceRequest
                         * @property {string|null} [name] StopInstanceRequest name
                         */
    
                        /**
                         * Constructs a new StopInstanceRequest.
                         * @memberof google.cloud.notebooks.v1beta1
                         * @classdesc Represents a StopInstanceRequest.
                         * @implements IStopInstanceRequest
                         * @constructor
                         * @param {google.cloud.notebooks.v1beta1.IStopInstanceRequest=} [properties] Properties to set
                         */
                        function StopInstanceRequest(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * StopInstanceRequest name.
                         * @member {string} name
                         * @memberof google.cloud.notebooks.v1beta1.StopInstanceRequest
                         * @instance
                         */
                        StopInstanceRequest.prototype.name = "";
    
                        /**
                         * Creates a new StopInstanceRequest instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.notebooks.v1beta1.StopInstanceRequest
                         * @static
                         * @param {google.cloud.notebooks.v1beta1.IStopInstanceRequest=} [properties] Properties to set
                         * @returns {google.cloud.notebooks.v1beta1.StopInstanceRequest} StopInstanceRequest instance
                         */
                        StopInstanceRequest.create = function create(properties) {
                            return new StopInstanceRequest(properties);
                        };
    
                        /**
                         * Encodes the specified StopInstanceRequest message. Does not implicitly {@link google.cloud.notebooks.v1beta1.StopInstanceRequest.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.notebooks.v1beta1.StopInstanceRequest
                         * @static
                         * @param {google.cloud.notebooks.v1beta1.IStopInstanceRequest} message StopInstanceRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        StopInstanceRequest.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified StopInstanceRequest message, length delimited. Does not implicitly {@link google.cloud.notebooks.v1beta1.StopInstanceRequest.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.notebooks.v1beta1.StopInstanceRequest
                         * @static
                         * @param {google.cloud.notebooks.v1beta1.IStopInstanceRequest} message StopInstanceRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        StopInstanceRequest.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a StopInstanceRequest message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.notebooks.v1beta1.StopInstanceRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.notebooks.v1beta1.StopInstanceRequest} StopInstanceRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        StopInstanceRequest.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.notebooks.v1beta1.StopInstanceRequest();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.name = reader.string();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a StopInstanceRequest message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.notebooks.v1beta1.StopInstanceRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.notebooks.v1beta1.StopInstanceRequest} StopInstanceRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        StopInstanceRequest.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a StopInstanceRequest message.
                         * @function verify
                         * @memberof google.cloud.notebooks.v1beta1.StopInstanceRequest
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        StopInstanceRequest.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.name != null && message.hasOwnProperty("name"))
                                if (!$util.isString(message.name))
                                    return "name: string expected";
                            return null;
                        };
    
                        /**
                         * Creates a StopInstanceRequest message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.notebooks.v1beta1.StopInstanceRequest
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.notebooks.v1beta1.StopInstanceRequest} StopInstanceRequest
                         */
                        StopInstanceRequest.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.notebooks.v1beta1.StopInstanceRequest)
                                return object;
                            var message = new $root.google.cloud.notebooks.v1beta1.StopInstanceRequest();
                            if (object.name != null)
                                message.name = String(object.name);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a StopInstanceRequest message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.notebooks.v1beta1.StopInstanceRequest
                         * @static
                         * @param {google.cloud.notebooks.v1beta1.StopInstanceRequest} message StopInstanceRequest
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        StopInstanceRequest.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults)
                                object.name = "";
                            if (message.name != null && message.hasOwnProperty("name"))
                                object.name = message.name;
                            return object;
                        };
    
                        /**
                         * Converts this StopInstanceRequest to JSON.
                         * @function toJSON
                         * @memberof google.cloud.notebooks.v1beta1.StopInstanceRequest
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        StopInstanceRequest.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for StopInstanceRequest
                         * @function getTypeUrl
                         * @memberof google.cloud.notebooks.v1beta1.StopInstanceRequest
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        StopInstanceRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.notebooks.v1beta1.StopInstanceRequest";
                        };
    
                        return StopInstanceRequest;
                    })();
    
                    v1beta1.ResetInstanceRequest = (function() {
    
                        /**
                         * Properties of a ResetInstanceRequest.
                         * @memberof google.cloud.notebooks.v1beta1
                         * @interface IResetInstanceRequest
                         * @property {string|null} [name] ResetInstanceRequest name
                         */
    
                        /**
                         * Constructs a new ResetInstanceRequest.
                         * @memberof google.cloud.notebooks.v1beta1
                         * @classdesc Represents a ResetInstanceRequest.
                         * @implements IResetInstanceRequest
                         * @constructor
                         * @param {google.cloud.notebooks.v1beta1.IResetInstanceRequest=} [properties] Properties to set
                         */
                        function ResetInstanceRequest(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * ResetInstanceRequest name.
                         * @member {string} name
                         * @memberof google.cloud.notebooks.v1beta1.ResetInstanceRequest
                         * @instance
                         */
                        ResetInstanceRequest.prototype.name = "";
    
                        /**
                         * Creates a new ResetInstanceRequest instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.notebooks.v1beta1.ResetInstanceRequest
                         * @static
                         * @param {google.cloud.notebooks.v1beta1.IResetInstanceRequest=} [properties] Properties to set
                         * @returns {google.cloud.notebooks.v1beta1.ResetInstanceRequest} ResetInstanceRequest instance
                         */
                        ResetInstanceRequest.create = function create(properties) {
                            return new ResetInstanceRequest(properties);
                        };
    
                        /**
                         * Encodes the specified ResetInstanceRequest message. Does not implicitly {@link google.cloud.notebooks.v1beta1.ResetInstanceRequest.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.notebooks.v1beta1.ResetInstanceRequest
                         * @static
                         * @param {google.cloud.notebooks.v1beta1.IResetInstanceRequest} message ResetInstanceRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        ResetInstanceRequest.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified ResetInstanceRequest message, length delimited. Does not implicitly {@link google.cloud.notebooks.v1beta1.ResetInstanceRequest.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.notebooks.v1beta1.ResetInstanceRequest
                         * @static
                         * @param {google.cloud.notebooks.v1beta1.IResetInstanceRequest} message ResetInstanceRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        ResetInstanceRequest.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a ResetInstanceRequest message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.notebooks.v1beta1.ResetInstanceRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.notebooks.v1beta1.ResetInstanceRequest} ResetInstanceRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        ResetInstanceRequest.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.notebooks.v1beta1.ResetInstanceRequest();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.name = reader.string();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a ResetInstanceRequest message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.notebooks.v1beta1.ResetInstanceRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.notebooks.v1beta1.ResetInstanceRequest} ResetInstanceRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        ResetInstanceRequest.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a ResetInstanceRequest message.
                         * @function verify
                         * @memberof google.cloud.notebooks.v1beta1.ResetInstanceRequest
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        ResetInstanceRequest.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.name != null && message.hasOwnProperty("name"))
                                if (!$util.isString(message.name))
                                    return "name: string expected";
                            return null;
                        };
    
                        /**
                         * Creates a ResetInstanceRequest message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.notebooks.v1beta1.ResetInstanceRequest
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.notebooks.v1beta1.ResetInstanceRequest} ResetInstanceRequest
                         */
                        ResetInstanceRequest.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.notebooks.v1beta1.ResetInstanceRequest)
                                return object;
                            var message = new $root.google.cloud.notebooks.v1beta1.ResetInstanceRequest();
                            if (object.name != null)
                                message.name = String(object.name);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a ResetInstanceRequest message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.notebooks.v1beta1.ResetInstanceRequest
                         * @static
                         * @param {google.cloud.notebooks.v1beta1.ResetInstanceRequest} message ResetInstanceRequest
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        ResetInstanceRequest.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults)
                                object.name = "";
                            if (message.name != null && message.hasOwnProperty("name"))
                                object.name = message.name;
                            return object;
                        };
    
                        /**
                         * Converts this ResetInstanceRequest to JSON.
                         * @function toJSON
                         * @memberof google.cloud.notebooks.v1beta1.ResetInstanceRequest
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        ResetInstanceRequest.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for ResetInstanceRequest
                         * @function getTypeUrl
                         * @memberof google.cloud.notebooks.v1beta1.ResetInstanceRequest
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        ResetInstanceRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.notebooks.v1beta1.ResetInstanceRequest";
                        };
    
                        return ResetInstanceRequest;
                    })();
    
                    v1beta1.ReportInstanceInfoRequest = (function() {
    
                        /**
                         * Properties of a ReportInstanceInfoRequest.
                         * @memberof google.cloud.notebooks.v1beta1
                         * @interface IReportInstanceInfoRequest
                         * @property {string|null} [name] ReportInstanceInfoRequest name
                         * @property {string|null} [vmId] ReportInstanceInfoRequest vmId
                         * @property {Object.<string,string>|null} [metadata] ReportInstanceInfoRequest metadata
                         */
    
                        /**
                         * Constructs a new ReportInstanceInfoRequest.
                         * @memberof google.cloud.notebooks.v1beta1
                         * @classdesc Represents a ReportInstanceInfoRequest.
                         * @implements IReportInstanceInfoRequest
                         * @constructor
                         * @param {google.cloud.notebooks.v1beta1.IReportInstanceInfoRequest=} [properties] Properties to set
                         */
                        function ReportInstanceInfoRequest(properties) {
                            this.metadata = {};
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * ReportInstanceInfoRequest name.
                         * @member {string} name
                         * @memberof google.cloud.notebooks.v1beta1.ReportInstanceInfoRequest
                         * @instance
                         */
                        ReportInstanceInfoRequest.prototype.name = "";
    
                        /**
                         * ReportInstanceInfoRequest vmId.
                         * @member {string} vmId
                         * @memberof google.cloud.notebooks.v1beta1.ReportInstanceInfoRequest
                         * @instance
                         */
                        ReportInstanceInfoRequest.prototype.vmId = "";
    
                        /**
                         * ReportInstanceInfoRequest metadata.
                         * @member {Object.<string,string>} metadata
                         * @memberof google.cloud.notebooks.v1beta1.ReportInstanceInfoRequest
                         * @instance
                         */
                        ReportInstanceInfoRequest.prototype.metadata = $util.emptyObject;
    
                        /**
                         * Creates a new ReportInstanceInfoRequest instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.notebooks.v1beta1.ReportInstanceInfoRequest
                         * @static
                         * @param {google.cloud.notebooks.v1beta1.IReportInstanceInfoRequest=} [properties] Properties to set
                         * @returns {google.cloud.notebooks.v1beta1.ReportInstanceInfoRequest} ReportInstanceInfoRequest instance
                         */
                        ReportInstanceInfoRequest.create = function create(properties) {
                            return new ReportInstanceInfoRequest(properties);
                        };
    
                        /**
                         * Encodes the specified ReportInstanceInfoRequest message. Does not implicitly {@link google.cloud.notebooks.v1beta1.ReportInstanceInfoRequest.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.notebooks.v1beta1.ReportInstanceInfoRequest
                         * @static
                         * @param {google.cloud.notebooks.v1beta1.IReportInstanceInfoRequest} message ReportInstanceInfoRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        ReportInstanceInfoRequest.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                            if (message.vmId != null && Object.hasOwnProperty.call(message, "vmId"))
                                writer.uint32(/* id 2, wireType 2 =*/18).string(message.vmId);
                            if (message.metadata != null && Object.hasOwnProperty.call(message, "metadata"))
                                for (var keys = Object.keys(message.metadata), i = 0; i < keys.length; ++i)
                                    writer.uint32(/* id 3, wireType 2 =*/26).fork().uint32(/* id 1, wireType 2 =*/10).string(keys[i]).uint32(/* id 2, wireType 2 =*/18).string(message.metadata[keys[i]]).ldelim();
                            return writer;
                        };
    
                        /**
                         * Encodes the specified ReportInstanceInfoRequest message, length delimited. Does not implicitly {@link google.cloud.notebooks.v1beta1.ReportInstanceInfoRequest.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.notebooks.v1beta1.ReportInstanceInfoRequest
                         * @static
                         * @param {google.cloud.notebooks.v1beta1.IReportInstanceInfoRequest} message ReportInstanceInfoRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        ReportInstanceInfoRequest.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a ReportInstanceInfoRequest message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.notebooks.v1beta1.ReportInstanceInfoRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.notebooks.v1beta1.ReportInstanceInfoRequest} ReportInstanceInfoRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        ReportInstanceInfoRequest.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.notebooks.v1beta1.ReportInstanceInfoRequest(), key, value;
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.name = reader.string();
                                        break;
                                    }
                                case 2: {
                                        message.vmId = reader.string();
                                        break;
                                    }
                                case 3: {
                                        if (message.metadata === $util.emptyObject)
                                            message.metadata = {};
                                        var end2 = reader.uint32() + reader.pos;
                                        key = "";
                                        value = "";
                                        while (reader.pos < end2) {
                                            var tag2 = reader.uint32();
                                            switch (tag2 >>> 3) {
                                            case 1:
                                                key = reader.string();
                                                break;
                                            case 2:
                                                value = reader.string();
                                                break;
                                            default:
                                                reader.skipType(tag2 & 7);
                                                break;
                                            }
                                        }
                                        message.metadata[key] = value;
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a ReportInstanceInfoRequest message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.notebooks.v1beta1.ReportInstanceInfoRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.notebooks.v1beta1.ReportInstanceInfoRequest} ReportInstanceInfoRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        ReportInstanceInfoRequest.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a ReportInstanceInfoRequest message.
                         * @function verify
                         * @memberof google.cloud.notebooks.v1beta1.ReportInstanceInfoRequest
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        ReportInstanceInfoRequest.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.name != null && message.hasOwnProperty("name"))
                                if (!$util.isString(message.name))
                                    return "name: string expected";
                            if (message.vmId != null && message.hasOwnProperty("vmId"))
                                if (!$util.isString(message.vmId))
                                    return "vmId: string expected";
                            if (message.metadata != null && message.hasOwnProperty("metadata")) {
                                if (!$util.isObject(message.metadata))
                                    return "metadata: object expected";
                                var key = Object.keys(message.metadata);
                                for (var i = 0; i < key.length; ++i)
                                    if (!$util.isString(message.metadata[key[i]]))
                                        return "metadata: string{k:string} expected";
                            }
                            return null;
                        };
    
                        /**
                         * Creates a ReportInstanceInfoRequest message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.notebooks.v1beta1.ReportInstanceInfoRequest
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.notebooks.v1beta1.ReportInstanceInfoRequest} ReportInstanceInfoRequest
                         */
                        ReportInstanceInfoRequest.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.notebooks.v1beta1.ReportInstanceInfoRequest)
                                return object;
                            var message = new $root.google.cloud.notebooks.v1beta1.ReportInstanceInfoRequest();
                            if (object.name != null)
                                message.name = String(object.name);
                            if (object.vmId != null)
                                message.vmId = String(object.vmId);
                            if (object.metadata) {
                                if (typeof object.metadata !== "object")
                                    throw TypeError(".google.cloud.notebooks.v1beta1.ReportInstanceInfoRequest.metadata: object expected");
                                message.metadata = {};
                                for (var keys = Object.keys(object.metadata), i = 0; i < keys.length; ++i)
                                    message.metadata[keys[i]] = String(object.metadata[keys[i]]);
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a ReportInstanceInfoRequest message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.notebooks.v1beta1.ReportInstanceInfoRequest
                         * @static
                         * @param {google.cloud.notebooks.v1beta1.ReportInstanceInfoRequest} message ReportInstanceInfoRequest
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        ReportInstanceInfoRequest.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.objects || options.defaults)
                                object.metadata = {};
                            if (options.defaults) {
                                object.name = "";
                                object.vmId = "";
                            }
                            if (message.name != null && message.hasOwnProperty("name"))
                                object.name = message.name;
                            if (message.vmId != null && message.hasOwnProperty("vmId"))
                                object.vmId = message.vmId;
                            var keys2;
                            if (message.metadata && (keys2 = Object.keys(message.metadata)).length) {
                                object.metadata = {};
                                for (var j = 0; j < keys2.length; ++j)
                                    object.metadata[keys2[j]] = message.metadata[keys2[j]];
                            }
                            return object;
                        };
    
                        /**
                         * Converts this ReportInstanceInfoRequest to JSON.
                         * @function toJSON
                         * @memberof google.cloud.notebooks.v1beta1.ReportInstanceInfoRequest
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        ReportInstanceInfoRequest.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for ReportInstanceInfoRequest
                         * @function getTypeUrl
                         * @memberof google.cloud.notebooks.v1beta1.ReportInstanceInfoRequest
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        ReportInstanceInfoRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.notebooks.v1beta1.ReportInstanceInfoRequest";
                        };
    
                        return ReportInstanceInfoRequest;
                    })();
    
                    v1beta1.IsInstanceUpgradeableRequest = (function() {
    
                        /**
                         * Properties of an IsInstanceUpgradeableRequest.
                         * @memberof google.cloud.notebooks.v1beta1
                         * @interface IIsInstanceUpgradeableRequest
                         * @property {string|null} [notebookInstance] IsInstanceUpgradeableRequest notebookInstance
                         */
    
                        /**
                         * Constructs a new IsInstanceUpgradeableRequest.
                         * @memberof google.cloud.notebooks.v1beta1
                         * @classdesc Represents an IsInstanceUpgradeableRequest.
                         * @implements IIsInstanceUpgradeableRequest
                         * @constructor
                         * @param {google.cloud.notebooks.v1beta1.IIsInstanceUpgradeableRequest=} [properties] Properties to set
                         */
                        function IsInstanceUpgradeableRequest(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * IsInstanceUpgradeableRequest notebookInstance.
                         * @member {string} notebookInstance
                         * @memberof google.cloud.notebooks.v1beta1.IsInstanceUpgradeableRequest
                         * @instance
                         */
                        IsInstanceUpgradeableRequest.prototype.notebookInstance = "";
    
                        /**
                         * Creates a new IsInstanceUpgradeableRequest instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.notebooks.v1beta1.IsInstanceUpgradeableRequest
                         * @static
                         * @param {google.cloud.notebooks.v1beta1.IIsInstanceUpgradeableRequest=} [properties] Properties to set
                         * @returns {google.cloud.notebooks.v1beta1.IsInstanceUpgradeableRequest} IsInstanceUpgradeableRequest instance
                         */
                        IsInstanceUpgradeableRequest.create = function create(properties) {
                            return new IsInstanceUpgradeableRequest(properties);
                        };
    
                        /**
                         * Encodes the specified IsInstanceUpgradeableRequest message. Does not implicitly {@link google.cloud.notebooks.v1beta1.IsInstanceUpgradeableRequest.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.notebooks.v1beta1.IsInstanceUpgradeableRequest
                         * @static
                         * @param {google.cloud.notebooks.v1beta1.IIsInstanceUpgradeableRequest} message IsInstanceUpgradeableRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        IsInstanceUpgradeableRequest.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.notebookInstance != null && Object.hasOwnProperty.call(message, "notebookInstance"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.notebookInstance);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified IsInstanceUpgradeableRequest message, length delimited. Does not implicitly {@link google.cloud.notebooks.v1beta1.IsInstanceUpgradeableRequest.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.notebooks.v1beta1.IsInstanceUpgradeableRequest
                         * @static
                         * @param {google.cloud.notebooks.v1beta1.IIsInstanceUpgradeableRequest} message IsInstanceUpgradeableRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        IsInstanceUpgradeableRequest.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes an IsInstanceUpgradeableRequest message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.notebooks.v1beta1.IsInstanceUpgradeableRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.notebooks.v1beta1.IsInstanceUpgradeableRequest} IsInstanceUpgradeableRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        IsInstanceUpgradeableRequest.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.notebooks.v1beta1.IsInstanceUpgradeableRequest();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.notebookInstance = reader.string();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes an IsInstanceUpgradeableRequest message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.notebooks.v1beta1.IsInstanceUpgradeableRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.notebooks.v1beta1.IsInstanceUpgradeableRequest} IsInstanceUpgradeableRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        IsInstanceUpgradeableRequest.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies an IsInstanceUpgradeableRequest message.
                         * @function verify
                         * @memberof google.cloud.notebooks.v1beta1.IsInstanceUpgradeableRequest
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        IsInstanceUpgradeableRequest.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.notebookInstance != null && message.hasOwnProperty("notebookInstance"))
                                if (!$util.isString(message.notebookInstance))
                                    return "notebookInstance: string expected";
                            return null;
                        };
    
                        /**
                         * Creates an IsInstanceUpgradeableRequest message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.notebooks.v1beta1.IsInstanceUpgradeableRequest
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.notebooks.v1beta1.IsInstanceUpgradeableRequest} IsInstanceUpgradeableRequest
                         */
                        IsInstanceUpgradeableRequest.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.notebooks.v1beta1.IsInstanceUpgradeableRequest)
                                return object;
                            var message = new $root.google.cloud.notebooks.v1beta1.IsInstanceUpgradeableRequest();
                            if (object.notebookInstance != null)
                                message.notebookInstance = String(object.notebookInstance);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from an IsInstanceUpgradeableRequest message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.notebooks.v1beta1.IsInstanceUpgradeableRequest
                         * @static
                         * @param {google.cloud.notebooks.v1beta1.IsInstanceUpgradeableRequest} message IsInstanceUpgradeableRequest
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        IsInstanceUpgradeableRequest.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults)
                                object.notebookInstance = "";
                            if (message.notebookInstance != null && message.hasOwnProperty("notebookInstance"))
                                object.notebookInstance = message.notebookInstance;
                            return object;
                        };
    
                        /**
                         * Converts this IsInstanceUpgradeableRequest to JSON.
                         * @function toJSON
                         * @memberof google.cloud.notebooks.v1beta1.IsInstanceUpgradeableRequest
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        IsInstanceUpgradeableRequest.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for IsInstanceUpgradeableRequest
                         * @function getTypeUrl
                         * @memberof google.cloud.notebooks.v1beta1.IsInstanceUpgradeableRequest
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        IsInstanceUpgradeableRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.notebooks.v1beta1.IsInstanceUpgradeableRequest";
                        };
    
                        return IsInstanceUpgradeableRequest;
                    })();
    
                    v1beta1.IsInstanceUpgradeableResponse = (function() {
    
                        /**
                         * Properties of an IsInstanceUpgradeableResponse.
                         * @memberof google.cloud.notebooks.v1beta1
                         * @interface IIsInstanceUpgradeableResponse
                         * @property {boolean|null} [upgradeable] IsInstanceUpgradeableResponse upgradeable
                         * @property {string|null} [upgradeVersion] IsInstanceUpgradeableResponse upgradeVersion
                         * @property {string|null} [upgradeInfo] IsInstanceUpgradeableResponse upgradeInfo
                         * @property {string|null} [upgradeImage] IsInstanceUpgradeableResponse upgradeImage
                         */
    
                        /**
                         * Constructs a new IsInstanceUpgradeableResponse.
                         * @memberof google.cloud.notebooks.v1beta1
                         * @classdesc Represents an IsInstanceUpgradeableResponse.
                         * @implements IIsInstanceUpgradeableResponse
                         * @constructor
                         * @param {google.cloud.notebooks.v1beta1.IIsInstanceUpgradeableResponse=} [properties] Properties to set
                         */
                        function IsInstanceUpgradeableResponse(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * IsInstanceUpgradeableResponse upgradeable.
                         * @member {boolean} upgradeable
                         * @memberof google.cloud.notebooks.v1beta1.IsInstanceUpgradeableResponse
                         * @instance
                         */
                        IsInstanceUpgradeableResponse.prototype.upgradeable = false;
    
                        /**
                         * IsInstanceUpgradeableResponse upgradeVersion.
                         * @member {string} upgradeVersion
                         * @memberof google.cloud.notebooks.v1beta1.IsInstanceUpgradeableResponse
                         * @instance
                         */
                        IsInstanceUpgradeableResponse.prototype.upgradeVersion = "";
    
                        /**
                         * IsInstanceUpgradeableResponse upgradeInfo.
                         * @member {string} upgradeInfo
                         * @memberof google.cloud.notebooks.v1beta1.IsInstanceUpgradeableResponse
                         * @instance
                         */
                        IsInstanceUpgradeableResponse.prototype.upgradeInfo = "";
    
                        /**
                         * IsInstanceUpgradeableResponse upgradeImage.
                         * @member {string} upgradeImage
                         * @memberof google.cloud.notebooks.v1beta1.IsInstanceUpgradeableResponse
                         * @instance
                         */
                        IsInstanceUpgradeableResponse.prototype.upgradeImage = "";
    
                        /**
                         * Creates a new IsInstanceUpgradeableResponse instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.notebooks.v1beta1.IsInstanceUpgradeableResponse
                         * @static
                         * @param {google.cloud.notebooks.v1beta1.IIsInstanceUpgradeableResponse=} [properties] Properties to set
                         * @returns {google.cloud.notebooks.v1beta1.IsInstanceUpgradeableResponse} IsInstanceUpgradeableResponse instance
                         */
                        IsInstanceUpgradeableResponse.create = function create(properties) {
                            return new IsInstanceUpgradeableResponse(properties);
                        };
    
                        /**
                         * Encodes the specified IsInstanceUpgradeableResponse message. Does not implicitly {@link google.cloud.notebooks.v1beta1.IsInstanceUpgradeableResponse.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.notebooks.v1beta1.IsInstanceUpgradeableResponse
                         * @static
                         * @param {google.cloud.notebooks.v1beta1.IIsInstanceUpgradeableResponse} message IsInstanceUpgradeableResponse message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        IsInstanceUpgradeableResponse.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.upgradeable != null && Object.hasOwnProperty.call(message, "upgradeable"))
                                writer.uint32(/* id 1, wireType 0 =*/8).bool(message.upgradeable);
                            if (message.upgradeVersion != null && Object.hasOwnProperty.call(message, "upgradeVersion"))
                                writer.uint32(/* id 2, wireType 2 =*/18).string(message.upgradeVersion);
                            if (message.upgradeInfo != null && Object.hasOwnProperty.call(message, "upgradeInfo"))
                                writer.uint32(/* id 3, wireType 2 =*/26).string(message.upgradeInfo);
                            if (message.upgradeImage != null && Object.hasOwnProperty.call(message, "upgradeImage"))
                                writer.uint32(/* id 4, wireType 2 =*/34).string(message.upgradeImage);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified IsInstanceUpgradeableResponse message, length delimited. Does not implicitly {@link google.cloud.notebooks.v1beta1.IsInstanceUpgradeableResponse.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.notebooks.v1beta1.IsInstanceUpgradeableResponse
                         * @static
                         * @param {google.cloud.notebooks.v1beta1.IIsInstanceUpgradeableResponse} message IsInstanceUpgradeableResponse message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        IsInstanceUpgradeableResponse.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes an IsInstanceUpgradeableResponse message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.notebooks.v1beta1.IsInstanceUpgradeableResponse
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.notebooks.v1beta1.IsInstanceUpgradeableResponse} IsInstanceUpgradeableResponse
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        IsInstanceUpgradeableResponse.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.notebooks.v1beta1.IsInstanceUpgradeableResponse();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.upgradeable = reader.bool();
                                        break;
                                    }
                                case 2: {
                                        message.upgradeVersion = reader.string();
                                        break;
                                    }
                                case 3: {
                                        message.upgradeInfo = reader.string();
                                        break;
                                    }
                                case 4: {
                                        message.upgradeImage = reader.string();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes an IsInstanceUpgradeableResponse message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.notebooks.v1beta1.IsInstanceUpgradeableResponse
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.notebooks.v1beta1.IsInstanceUpgradeableResponse} IsInstanceUpgradeableResponse
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        IsInstanceUpgradeableResponse.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies an IsInstanceUpgradeableResponse message.
                         * @function verify
                         * @memberof google.cloud.notebooks.v1beta1.IsInstanceUpgradeableResponse
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        IsInstanceUpgradeableResponse.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.upgradeable != null && message.hasOwnProperty("upgradeable"))
                                if (typeof message.upgradeable !== "boolean")
                                    return "upgradeable: boolean expected";
                            if (message.upgradeVersion != null && message.hasOwnProperty("upgradeVersion"))
                                if (!$util.isString(message.upgradeVersion))
                                    return "upgradeVersion: string expected";
                            if (message.upgradeInfo != null && message.hasOwnProperty("upgradeInfo"))
                                if (!$util.isString(message.upgradeInfo))
                                    return "upgradeInfo: string expected";
                            if (message.upgradeImage != null && message.hasOwnProperty("upgradeImage"))
                                if (!$util.isString(message.upgradeImage))
                                    return "upgradeImage: string expected";
                            return null;
                        };
    
                        /**
                         * Creates an IsInstanceUpgradeableResponse message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.notebooks.v1beta1.IsInstanceUpgradeableResponse
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.notebooks.v1beta1.IsInstanceUpgradeableResponse} IsInstanceUpgradeableResponse
                         */
                        IsInstanceUpgradeableResponse.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.notebooks.v1beta1.IsInstanceUpgradeableResponse)
                                return object;
                            var message = new $root.google.cloud.notebooks.v1beta1.IsInstanceUpgradeableResponse();
                            if (object.upgradeable != null)
                                message.upgradeable = Boolean(object.upgradeable);
                            if (object.upgradeVersion != null)
                                message.upgradeVersion = String(object.upgradeVersion);
                            if (object.upgradeInfo != null)
                                message.upgradeInfo = String(object.upgradeInfo);
                            if (object.upgradeImage != null)
                                message.upgradeImage = String(object.upgradeImage);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from an IsInstanceUpgradeableResponse message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.notebooks.v1beta1.IsInstanceUpgradeableResponse
                         * @static
                         * @param {google.cloud.notebooks.v1beta1.IsInstanceUpgradeableResponse} message IsInstanceUpgradeableResponse
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        IsInstanceUpgradeableResponse.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.upgradeable = false;
                                object.upgradeVersion = "";
                                object.upgradeInfo = "";
                                object.upgradeImage = "";
                            }
                            if (message.upgradeable != null && message.hasOwnProperty("upgradeable"))
                                object.upgradeable = message.upgradeable;
                            if (message.upgradeVersion != null && message.hasOwnProperty("upgradeVersion"))
                                object.upgradeVersion = message.upgradeVersion;
                            if (message.upgradeInfo != null && message.hasOwnProperty("upgradeInfo"))
                                object.upgradeInfo = message.upgradeInfo;
                            if (message.upgradeImage != null && message.hasOwnProperty("upgradeImage"))
                                object.upgradeImage = message.upgradeImage;
                            return object;
                        };
    
                        /**
                         * Converts this IsInstanceUpgradeableResponse to JSON.
                         * @function toJSON
                         * @memberof google.cloud.notebooks.v1beta1.IsInstanceUpgradeableResponse
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        IsInstanceUpgradeableResponse.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for IsInstanceUpgradeableResponse
                         * @function getTypeUrl
                         * @memberof google.cloud.notebooks.v1beta1.IsInstanceUpgradeableResponse
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        IsInstanceUpgradeableResponse.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.notebooks.v1beta1.IsInstanceUpgradeableResponse";
                        };
    
                        return IsInstanceUpgradeableResponse;
                    })();
    
                    v1beta1.UpgradeInstanceRequest = (function() {
    
                        /**
                         * Properties of an UpgradeInstanceRequest.
                         * @memberof google.cloud.notebooks.v1beta1
                         * @interface IUpgradeInstanceRequest
                         * @property {string|null} [name] UpgradeInstanceRequest name
                         */
    
                        /**
                         * Constructs a new UpgradeInstanceRequest.
                         * @memberof google.cloud.notebooks.v1beta1
                         * @classdesc Represents an UpgradeInstanceRequest.
                         * @implements IUpgradeInstanceRequest
                         * @constructor
                         * @param {google.cloud.notebooks.v1beta1.IUpgradeInstanceRequest=} [properties] Properties to set
                         */
                        function UpgradeInstanceRequest(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * UpgradeInstanceRequest name.
                         * @member {string} name
                         * @memberof google.cloud.notebooks.v1beta1.UpgradeInstanceRequest
                         * @instance
                         */
                        UpgradeInstanceRequest.prototype.name = "";
    
                        /**
                         * Creates a new UpgradeInstanceRequest instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.notebooks.v1beta1.UpgradeInstanceRequest
                         * @static
                         * @param {google.cloud.notebooks.v1beta1.IUpgradeInstanceRequest=} [properties] Properties to set
                         * @returns {google.cloud.notebooks.v1beta1.UpgradeInstanceRequest} UpgradeInstanceRequest instance
                         */
                        UpgradeInstanceRequest.create = function create(properties) {
                            return new UpgradeInstanceRequest(properties);
                        };
    
                        /**
                         * Encodes the specified UpgradeInstanceRequest message. Does not implicitly {@link google.cloud.notebooks.v1beta1.UpgradeInstanceRequest.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.notebooks.v1beta1.UpgradeInstanceRequest
                         * @static
                         * @param {google.cloud.notebooks.v1beta1.IUpgradeInstanceRequest} message UpgradeInstanceRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        UpgradeInstanceRequest.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified UpgradeInstanceRequest message, length delimited. Does not implicitly {@link google.cloud.notebooks.v1beta1.UpgradeInstanceRequest.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.notebooks.v1beta1.UpgradeInstanceRequest
                         * @static
                         * @param {google.cloud.notebooks.v1beta1.IUpgradeInstanceRequest} message UpgradeInstanceRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        UpgradeInstanceRequest.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes an UpgradeInstanceRequest message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.notebooks.v1beta1.UpgradeInstanceRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.notebooks.v1beta1.UpgradeInstanceRequest} UpgradeInstanceRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        UpgradeInstanceRequest.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.notebooks.v1beta1.UpgradeInstanceRequest();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.name = reader.string();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes an UpgradeInstanceRequest message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.notebooks.v1beta1.UpgradeInstanceRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.notebooks.v1beta1.UpgradeInstanceRequest} UpgradeInstanceRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        UpgradeInstanceRequest.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies an UpgradeInstanceRequest message.
                         * @function verify
                         * @memberof google.cloud.notebooks.v1beta1.UpgradeInstanceRequest
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        UpgradeInstanceRequest.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.name != null && message.hasOwnProperty("name"))
                                if (!$util.isString(message.name))
                                    return "name: string expected";
                            return null;
                        };
    
                        /**
                         * Creates an UpgradeInstanceRequest message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.notebooks.v1beta1.UpgradeInstanceRequest
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.notebooks.v1beta1.UpgradeInstanceRequest} UpgradeInstanceRequest
                         */
                        UpgradeInstanceRequest.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.notebooks.v1beta1.UpgradeInstanceRequest)
                                return object;
                            var message = new $root.google.cloud.notebooks.v1beta1.UpgradeInstanceRequest();
                            if (object.name != null)
                                message.name = String(object.name);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from an UpgradeInstanceRequest message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.notebooks.v1beta1.UpgradeInstanceRequest
                         * @static
                         * @param {google.cloud.notebooks.v1beta1.UpgradeInstanceRequest} message UpgradeInstanceRequest
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        UpgradeInstanceRequest.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults)
                                object.name = "";
                            if (message.name != null && message.hasOwnProperty("name"))
                                object.name = message.name;
                            return object;
                        };
    
                        /**
                         * Converts this UpgradeInstanceRequest to JSON.
                         * @function toJSON
                         * @memberof google.cloud.notebooks.v1beta1.UpgradeInstanceRequest
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        UpgradeInstanceRequest.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for UpgradeInstanceRequest
                         * @function getTypeUrl
                         * @memberof google.cloud.notebooks.v1beta1.UpgradeInstanceRequest
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        UpgradeInstanceRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.notebooks.v1beta1.UpgradeInstanceRequest";
                        };
    
                        return UpgradeInstanceRequest;
                    })();
    
                    v1beta1.UpgradeInstanceInternalRequest = (function() {
    
                        /**
                         * Properties of an UpgradeInstanceInternalRequest.
                         * @memberof google.cloud.notebooks.v1beta1
                         * @interface IUpgradeInstanceInternalRequest
                         * @property {string|null} [name] UpgradeInstanceInternalRequest name
                         * @property {string|null} [vmId] UpgradeInstanceInternalRequest vmId
                         */
    
                        /**
                         * Constructs a new UpgradeInstanceInternalRequest.
                         * @memberof google.cloud.notebooks.v1beta1
                         * @classdesc Represents an UpgradeInstanceInternalRequest.
                         * @implements IUpgradeInstanceInternalRequest
                         * @constructor
                         * @param {google.cloud.notebooks.v1beta1.IUpgradeInstanceInternalRequest=} [properties] Properties to set
                         */
                        function UpgradeInstanceInternalRequest(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * UpgradeInstanceInternalRequest name.
                         * @member {string} name
                         * @memberof google.cloud.notebooks.v1beta1.UpgradeInstanceInternalRequest
                         * @instance
                         */
                        UpgradeInstanceInternalRequest.prototype.name = "";
    
                        /**
                         * UpgradeInstanceInternalRequest vmId.
                         * @member {string} vmId
                         * @memberof google.cloud.notebooks.v1beta1.UpgradeInstanceInternalRequest
                         * @instance
                         */
                        UpgradeInstanceInternalRequest.prototype.vmId = "";
    
                        /**
                         * Creates a new UpgradeInstanceInternalRequest instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.notebooks.v1beta1.UpgradeInstanceInternalRequest
                         * @static
                         * @param {google.cloud.notebooks.v1beta1.IUpgradeInstanceInternalRequest=} [properties] Properties to set
                         * @returns {google.cloud.notebooks.v1beta1.UpgradeInstanceInternalRequest} UpgradeInstanceInternalRequest instance
                         */
                        UpgradeInstanceInternalRequest.create = function create(properties) {
                            return new UpgradeInstanceInternalRequest(properties);
                        };
    
                        /**
                         * Encodes the specified UpgradeInstanceInternalRequest message. Does not implicitly {@link google.cloud.notebooks.v1beta1.UpgradeInstanceInternalRequest.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.notebooks.v1beta1.UpgradeInstanceInternalRequest
                         * @static
                         * @param {google.cloud.notebooks.v1beta1.IUpgradeInstanceInternalRequest} message UpgradeInstanceInternalRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        UpgradeInstanceInternalRequest.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                            if (message.vmId != null && Object.hasOwnProperty.call(message, "vmId"))
                                writer.uint32(/* id 2, wireType 2 =*/18).string(message.vmId);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified UpgradeInstanceInternalRequest message, length delimited. Does not implicitly {@link google.cloud.notebooks.v1beta1.UpgradeInstanceInternalRequest.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.notebooks.v1beta1.UpgradeInstanceInternalRequest
                         * @static
                         * @param {google.cloud.notebooks.v1beta1.IUpgradeInstanceInternalRequest} message UpgradeInstanceInternalRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        UpgradeInstanceInternalRequest.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes an UpgradeInstanceInternalRequest message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.notebooks.v1beta1.UpgradeInstanceInternalRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.notebooks.v1beta1.UpgradeInstanceInternalRequest} UpgradeInstanceInternalRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        UpgradeInstanceInternalRequest.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.notebooks.v1beta1.UpgradeInstanceInternalRequest();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.name = reader.string();
                                        break;
                                    }
                                case 2: {
                                        message.vmId = reader.string();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes an UpgradeInstanceInternalRequest message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.notebooks.v1beta1.UpgradeInstanceInternalRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.notebooks.v1beta1.UpgradeInstanceInternalRequest} UpgradeInstanceInternalRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        UpgradeInstanceInternalRequest.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies an UpgradeInstanceInternalRequest message.
                         * @function verify
                         * @memberof google.cloud.notebooks.v1beta1.UpgradeInstanceInternalRequest
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        UpgradeInstanceInternalRequest.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.name != null && message.hasOwnProperty("name"))
                                if (!$util.isString(message.name))
                                    return "name: string expected";
                            if (message.vmId != null && message.hasOwnProperty("vmId"))
                                if (!$util.isString(message.vmId))
                                    return "vmId: string expected";
                            return null;
                        };
    
                        /**
                         * Creates an UpgradeInstanceInternalRequest message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.notebooks.v1beta1.UpgradeInstanceInternalRequest
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.notebooks.v1beta1.UpgradeInstanceInternalRequest} UpgradeInstanceInternalRequest
                         */
                        UpgradeInstanceInternalRequest.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.notebooks.v1beta1.UpgradeInstanceInternalRequest)
                                return object;
                            var message = new $root.google.cloud.notebooks.v1beta1.UpgradeInstanceInternalRequest();
                            if (object.name != null)
                                message.name = String(object.name);
                            if (object.vmId != null)
                                message.vmId = String(object.vmId);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from an UpgradeInstanceInternalRequest message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.notebooks.v1beta1.UpgradeInstanceInternalRequest
                         * @static
                         * @param {google.cloud.notebooks.v1beta1.UpgradeInstanceInternalRequest} message UpgradeInstanceInternalRequest
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        UpgradeInstanceInternalRequest.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.name = "";
                                object.vmId = "";
                            }
                            if (message.name != null && message.hasOwnProperty("name"))
                                object.name = message.name;
                            if (message.vmId != null && message.hasOwnProperty("vmId"))
                                object.vmId = message.vmId;
                            return object;
                        };
    
                        /**
                         * Converts this UpgradeInstanceInternalRequest to JSON.
                         * @function toJSON
                         * @memberof google.cloud.notebooks.v1beta1.UpgradeInstanceInternalRequest
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        UpgradeInstanceInternalRequest.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for UpgradeInstanceInternalRequest
                         * @function getTypeUrl
                         * @memberof google.cloud.notebooks.v1beta1.UpgradeInstanceInternalRequest
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        UpgradeInstanceInternalRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.notebooks.v1beta1.UpgradeInstanceInternalRequest";
                        };
    
                        return UpgradeInstanceInternalRequest;
                    })();
    
                    v1beta1.ListEnvironmentsRequest = (function() {
    
                        /**
                         * Properties of a ListEnvironmentsRequest.
                         * @memberof google.cloud.notebooks.v1beta1
                         * @interface IListEnvironmentsRequest
                         * @property {string|null} [parent] ListEnvironmentsRequest parent
                         * @property {number|null} [pageSize] ListEnvironmentsRequest pageSize
                         * @property {string|null} [pageToken] ListEnvironmentsRequest pageToken
                         */
    
                        /**
                         * Constructs a new ListEnvironmentsRequest.
                         * @memberof google.cloud.notebooks.v1beta1
                         * @classdesc Represents a ListEnvironmentsRequest.
                         * @implements IListEnvironmentsRequest
                         * @constructor
                         * @param {google.cloud.notebooks.v1beta1.IListEnvironmentsRequest=} [properties] Properties to set
                         */
                        function ListEnvironmentsRequest(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * ListEnvironmentsRequest parent.
                         * @member {string} parent
                         * @memberof google.cloud.notebooks.v1beta1.ListEnvironmentsRequest
                         * @instance
                         */
                        ListEnvironmentsRequest.prototype.parent = "";
    
                        /**
                         * ListEnvironmentsRequest pageSize.
                         * @member {number} pageSize
                         * @memberof google.cloud.notebooks.v1beta1.ListEnvironmentsRequest
                         * @instance
                         */
                        ListEnvironmentsRequest.prototype.pageSize = 0;
    
                        /**
                         * ListEnvironmentsRequest pageToken.
                         * @member {string} pageToken
                         * @memberof google.cloud.notebooks.v1beta1.ListEnvironmentsRequest
                         * @instance
                         */
                        ListEnvironmentsRequest.prototype.pageToken = "";
    
                        /**
                         * Creates a new ListEnvironmentsRequest instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.notebooks.v1beta1.ListEnvironmentsRequest
                         * @static
                         * @param {google.cloud.notebooks.v1beta1.IListEnvironmentsRequest=} [properties] Properties to set
                         * @returns {google.cloud.notebooks.v1beta1.ListEnvironmentsRequest} ListEnvironmentsRequest instance
                         */
                        ListEnvironmentsRequest.create = function create(properties) {
                            return new ListEnvironmentsRequest(properties);
                        };
    
                        /**
                         * Encodes the specified ListEnvironmentsRequest message. Does not implicitly {@link google.cloud.notebooks.v1beta1.ListEnvironmentsRequest.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.notebooks.v1beta1.ListEnvironmentsRequest
                         * @static
                         * @param {google.cloud.notebooks.v1beta1.IListEnvironmentsRequest} message ListEnvironmentsRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        ListEnvironmentsRequest.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.parent != null && Object.hasOwnProperty.call(message, "parent"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.parent);
                            if (message.pageSize != null && Object.hasOwnProperty.call(message, "pageSize"))
                                writer.uint32(/* id 2, wireType 0 =*/16).int32(message.pageSize);
                            if (message.pageToken != null && Object.hasOwnProperty.call(message, "pageToken"))
                                writer.uint32(/* id 3, wireType 2 =*/26).string(message.pageToken);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified ListEnvironmentsRequest message, length delimited. Does not implicitly {@link google.cloud.notebooks.v1beta1.ListEnvironmentsRequest.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.notebooks.v1beta1.ListEnvironmentsRequest
                         * @static
                         * @param {google.cloud.notebooks.v1beta1.IListEnvironmentsRequest} message ListEnvironmentsRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        ListEnvironmentsRequest.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a ListEnvironmentsRequest message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.notebooks.v1beta1.ListEnvironmentsRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.notebooks.v1beta1.ListEnvironmentsRequest} ListEnvironmentsRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        ListEnvironmentsRequest.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.notebooks.v1beta1.ListEnvironmentsRequest();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.parent = reader.string();
                                        break;
                                    }
                                case 2: {
                                        message.pageSize = reader.int32();
                                        break;
                                    }
                                case 3: {
                                        message.pageToken = reader.string();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a ListEnvironmentsRequest message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.notebooks.v1beta1.ListEnvironmentsRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.notebooks.v1beta1.ListEnvironmentsRequest} ListEnvironmentsRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        ListEnvironmentsRequest.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a ListEnvironmentsRequest message.
                         * @function verify
                         * @memberof google.cloud.notebooks.v1beta1.ListEnvironmentsRequest
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        ListEnvironmentsRequest.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.parent != null && message.hasOwnProperty("parent"))
                                if (!$util.isString(message.parent))
                                    return "parent: string expected";
                            if (message.pageSize != null && message.hasOwnProperty("pageSize"))
                                if (!$util.isInteger(message.pageSize))
                                    return "pageSize: integer expected";
                            if (message.pageToken != null && message.hasOwnProperty("pageToken"))
                                if (!$util.isString(message.pageToken))
                                    return "pageToken: string expected";
                            return null;
                        };
    
                        /**
                         * Creates a ListEnvironmentsRequest message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.notebooks.v1beta1.ListEnvironmentsRequest
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.notebooks.v1beta1.ListEnvironmentsRequest} ListEnvironmentsRequest
                         */
                        ListEnvironmentsRequest.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.notebooks.v1beta1.ListEnvironmentsRequest)
                                return object;
                            var message = new $root.google.cloud.notebooks.v1beta1.ListEnvironmentsRequest();
                            if (object.parent != null)
                                message.parent = String(object.parent);
                            if (object.pageSize != null)
                                message.pageSize = object.pageSize | 0;
                            if (object.pageToken != null)
                                message.pageToken = String(object.pageToken);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a ListEnvironmentsRequest message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.notebooks.v1beta1.ListEnvironmentsRequest
                         * @static
                         * @param {google.cloud.notebooks.v1beta1.ListEnvironmentsRequest} message ListEnvironmentsRequest
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        ListEnvironmentsRequest.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.parent = "";
                                object.pageSize = 0;
                                object.pageToken = "";
                            }
                            if (message.parent != null && message.hasOwnProperty("parent"))
                                object.parent = message.parent;
                            if (message.pageSize != null && message.hasOwnProperty("pageSize"))
                                object.pageSize = message.pageSize;
                            if (message.pageToken != null && message.hasOwnProperty("pageToken"))
                                object.pageToken = message.pageToken;
                            return object;
                        };
    
                        /**
                         * Converts this ListEnvironmentsRequest to JSON.
                         * @function toJSON
                         * @memberof google.cloud.notebooks.v1beta1.ListEnvironmentsRequest
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        ListEnvironmentsRequest.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for ListEnvironmentsRequest
                         * @function getTypeUrl
                         * @memberof google.cloud.notebooks.v1beta1.ListEnvironmentsRequest
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        ListEnvironmentsRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.notebooks.v1beta1.ListEnvironmentsRequest";
                        };
    
                        return ListEnvironmentsRequest;
                    })();
    
                    v1beta1.ListEnvironmentsResponse = (function() {
    
                        /**
                         * Properties of a ListEnvironmentsResponse.
                         * @memberof google.cloud.notebooks.v1beta1
                         * @interface IListEnvironmentsResponse
                         * @property {Array.<google.cloud.notebooks.v1beta1.IEnvironment>|null} [environments] ListEnvironmentsResponse environments
                         * @property {string|null} [nextPageToken] ListEnvironmentsResponse nextPageToken
                         * @property {Array.<string>|null} [unreachable] ListEnvironmentsResponse unreachable
                         */
    
                        /**
                         * Constructs a new ListEnvironmentsResponse.
                         * @memberof google.cloud.notebooks.v1beta1
                         * @classdesc Represents a ListEnvironmentsResponse.
                         * @implements IListEnvironmentsResponse
                         * @constructor
                         * @param {google.cloud.notebooks.v1beta1.IListEnvironmentsResponse=} [properties] Properties to set
                         */
                        function ListEnvironmentsResponse(properties) {
                            this.environments = [];
                            this.unreachable = [];
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * ListEnvironmentsResponse environments.
                         * @member {Array.<google.cloud.notebooks.v1beta1.IEnvironment>} environments
                         * @memberof google.cloud.notebooks.v1beta1.ListEnvironmentsResponse
                         * @instance
                         */
                        ListEnvironmentsResponse.prototype.environments = $util.emptyArray;
    
                        /**
                         * ListEnvironmentsResponse nextPageToken.
                         * @member {string} nextPageToken
                         * @memberof google.cloud.notebooks.v1beta1.ListEnvironmentsResponse
                         * @instance
                         */
                        ListEnvironmentsResponse.prototype.nextPageToken = "";
    
                        /**
                         * ListEnvironmentsResponse unreachable.
                         * @member {Array.<string>} unreachable
                         * @memberof google.cloud.notebooks.v1beta1.ListEnvironmentsResponse
                         * @instance
                         */
                        ListEnvironmentsResponse.prototype.unreachable = $util.emptyArray;
    
                        /**
                         * Creates a new ListEnvironmentsResponse instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.notebooks.v1beta1.ListEnvironmentsResponse
                         * @static
                         * @param {google.cloud.notebooks.v1beta1.IListEnvironmentsResponse=} [properties] Properties to set
                         * @returns {google.cloud.notebooks.v1beta1.ListEnvironmentsResponse} ListEnvironmentsResponse instance
                         */
                        ListEnvironmentsResponse.create = function create(properties) {
                            return new ListEnvironmentsResponse(properties);
                        };
    
                        /**
                         * Encodes the specified ListEnvironmentsResponse message. Does not implicitly {@link google.cloud.notebooks.v1beta1.ListEnvironmentsResponse.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.notebooks.v1beta1.ListEnvironmentsResponse
                         * @static
                         * @param {google.cloud.notebooks.v1beta1.IListEnvironmentsResponse} message ListEnvironmentsResponse message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        ListEnvironmentsResponse.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.environments != null && message.environments.length)
                                for (var i = 0; i < message.environments.length; ++i)
                                    $root.google.cloud.notebooks.v1beta1.Environment.encode(message.environments[i], writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                            if (message.nextPageToken != null && Object.hasOwnProperty.call(message, "nextPageToken"))
                                writer.uint32(/* id 2, wireType 2 =*/18).string(message.nextPageToken);
                            if (message.unreachable != null && message.unreachable.length)
                                for (var i = 0; i < message.unreachable.length; ++i)
                                    writer.uint32(/* id 3, wireType 2 =*/26).string(message.unreachable[i]);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified ListEnvironmentsResponse message, length delimited. Does not implicitly {@link google.cloud.notebooks.v1beta1.ListEnvironmentsResponse.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.notebooks.v1beta1.ListEnvironmentsResponse
                         * @static
                         * @param {google.cloud.notebooks.v1beta1.IListEnvironmentsResponse} message ListEnvironmentsResponse message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        ListEnvironmentsResponse.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a ListEnvironmentsResponse message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.notebooks.v1beta1.ListEnvironmentsResponse
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.notebooks.v1beta1.ListEnvironmentsResponse} ListEnvironmentsResponse
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        ListEnvironmentsResponse.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.notebooks.v1beta1.ListEnvironmentsResponse();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        if (!(message.environments && message.environments.length))
                                            message.environments = [];
                                        message.environments.push($root.google.cloud.notebooks.v1beta1.Environment.decode(reader, reader.uint32()));
                                        break;
                                    }
                                case 2: {
                                        message.nextPageToken = reader.string();
                                        break;
                                    }
                                case 3: {
                                        if (!(message.unreachable && message.unreachable.length))
                                            message.unreachable = [];
                                        message.unreachable.push(reader.string());
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a ListEnvironmentsResponse message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.notebooks.v1beta1.ListEnvironmentsResponse
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.notebooks.v1beta1.ListEnvironmentsResponse} ListEnvironmentsResponse
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        ListEnvironmentsResponse.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a ListEnvironmentsResponse message.
                         * @function verify
                         * @memberof google.cloud.notebooks.v1beta1.ListEnvironmentsResponse
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        ListEnvironmentsResponse.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.environments != null && message.hasOwnProperty("environments")) {
                                if (!Array.isArray(message.environments))
                                    return "environments: array expected";
                                for (var i = 0; i < message.environments.length; ++i) {
                                    var error = $root.google.cloud.notebooks.v1beta1.Environment.verify(message.environments[i]);
                                    if (error)
                                        return "environments." + error;
                                }
                            }
                            if (message.nextPageToken != null && message.hasOwnProperty("nextPageToken"))
                                if (!$util.isString(message.nextPageToken))
                                    return "nextPageToken: string expected";
                            if (message.unreachable != null && message.hasOwnProperty("unreachable")) {
                                if (!Array.isArray(message.unreachable))
                                    return "unreachable: array expected";
                                for (var i = 0; i < message.unreachable.length; ++i)
                                    if (!$util.isString(message.unreachable[i]))
                                        return "unreachable: string[] expected";
                            }
                            return null;
                        };
    
                        /**
                         * Creates a ListEnvironmentsResponse message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.notebooks.v1beta1.ListEnvironmentsResponse
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.notebooks.v1beta1.ListEnvironmentsResponse} ListEnvironmentsResponse
                         */
                        ListEnvironmentsResponse.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.notebooks.v1beta1.ListEnvironmentsResponse)
                                return object;
                            var message = new $root.google.cloud.notebooks.v1beta1.ListEnvironmentsResponse();
                            if (object.environments) {
                                if (!Array.isArray(object.environments))
                                    throw TypeError(".google.cloud.notebooks.v1beta1.ListEnvironmentsResponse.environments: array expected");
                                message.environments = [];
                                for (var i = 0; i < object.environments.length; ++i) {
                                    if (typeof object.environments[i] !== "object")
                                        throw TypeError(".google.cloud.notebooks.v1beta1.ListEnvironmentsResponse.environments: object expected");
                                    message.environments[i] = $root.google.cloud.notebooks.v1beta1.Environment.fromObject(object.environments[i]);
                                }
                            }
                            if (object.nextPageToken != null)
                                message.nextPageToken = String(object.nextPageToken);
                            if (object.unreachable) {
                                if (!Array.isArray(object.unreachable))
                                    throw TypeError(".google.cloud.notebooks.v1beta1.ListEnvironmentsResponse.unreachable: array expected");
                                message.unreachable = [];
                                for (var i = 0; i < object.unreachable.length; ++i)
                                    message.unreachable[i] = String(object.unreachable[i]);
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a ListEnvironmentsResponse message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.notebooks.v1beta1.ListEnvironmentsResponse
                         * @static
                         * @param {google.cloud.notebooks.v1beta1.ListEnvironmentsResponse} message ListEnvironmentsResponse
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        ListEnvironmentsResponse.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.arrays || options.defaults) {
                                object.environments = [];
                                object.unreachable = [];
                            }
                            if (options.defaults)
                                object.nextPageToken = "";
                            if (message.environments && message.environments.length) {
                                object.environments = [];
                                for (var j = 0; j < message.environments.length; ++j)
                                    object.environments[j] = $root.google.cloud.notebooks.v1beta1.Environment.toObject(message.environments[j], options);
                            }
                            if (message.nextPageToken != null && message.hasOwnProperty("nextPageToken"))
                                object.nextPageToken = message.nextPageToken;
                            if (message.unreachable && message.unreachable.length) {
                                object.unreachable = [];
                                for (var j = 0; j < message.unreachable.length; ++j)
                                    object.unreachable[j] = message.unreachable[j];
                            }
                            return object;
                        };
    
                        /**
                         * Converts this ListEnvironmentsResponse to JSON.
                         * @function toJSON
                         * @memberof google.cloud.notebooks.v1beta1.ListEnvironmentsResponse
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        ListEnvironmentsResponse.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for ListEnvironmentsResponse
                         * @function getTypeUrl
                         * @memberof google.cloud.notebooks.v1beta1.ListEnvironmentsResponse
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        ListEnvironmentsResponse.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.notebooks.v1beta1.ListEnvironmentsResponse";
                        };
    
                        return ListEnvironmentsResponse;
                    })();
    
                    v1beta1.GetEnvironmentRequest = (function() {
    
                        /**
                         * Properties of a GetEnvironmentRequest.
                         * @memberof google.cloud.notebooks.v1beta1
                         * @interface IGetEnvironmentRequest
                         * @property {string|null} [name] GetEnvironmentRequest name
                         */
    
                        /**
                         * Constructs a new GetEnvironmentRequest.
                         * @memberof google.cloud.notebooks.v1beta1
                         * @classdesc Represents a GetEnvironmentRequest.
                         * @implements IGetEnvironmentRequest
                         * @constructor
                         * @param {google.cloud.notebooks.v1beta1.IGetEnvironmentRequest=} [properties] Properties to set
                         */
                        function GetEnvironmentRequest(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * GetEnvironmentRequest name.
                         * @member {string} name
                         * @memberof google.cloud.notebooks.v1beta1.GetEnvironmentRequest
                         * @instance
                         */
                        GetEnvironmentRequest.prototype.name = "";
    
                        /**
                         * Creates a new GetEnvironmentRequest instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.notebooks.v1beta1.GetEnvironmentRequest
                         * @static
                         * @param {google.cloud.notebooks.v1beta1.IGetEnvironmentRequest=} [properties] Properties to set
                         * @returns {google.cloud.notebooks.v1beta1.GetEnvironmentRequest} GetEnvironmentRequest instance
                         */
                        GetEnvironmentRequest.create = function create(properties) {
                            return new GetEnvironmentRequest(properties);
                        };
    
                        /**
                         * Encodes the specified GetEnvironmentRequest message. Does not implicitly {@link google.cloud.notebooks.v1beta1.GetEnvironmentRequest.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.notebooks.v1beta1.GetEnvironmentRequest
                         * @static
                         * @param {google.cloud.notebooks.v1beta1.IGetEnvironmentRequest} message GetEnvironmentRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        GetEnvironmentRequest.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified GetEnvironmentRequest message, length delimited. Does not implicitly {@link google.cloud.notebooks.v1beta1.GetEnvironmentRequest.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.notebooks.v1beta1.GetEnvironmentRequest
                         * @static
                         * @param {google.cloud.notebooks.v1beta1.IGetEnvironmentRequest} message GetEnvironmentRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        GetEnvironmentRequest.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a GetEnvironmentRequest message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.notebooks.v1beta1.GetEnvironmentRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.notebooks.v1beta1.GetEnvironmentRequest} GetEnvironmentRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        GetEnvironmentRequest.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.notebooks.v1beta1.GetEnvironmentRequest();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.name = reader.string();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a GetEnvironmentRequest message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.notebooks.v1beta1.GetEnvironmentRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.notebooks.v1beta1.GetEnvironmentRequest} GetEnvironmentRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        GetEnvironmentRequest.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a GetEnvironmentRequest message.
                         * @function verify
                         * @memberof google.cloud.notebooks.v1beta1.GetEnvironmentRequest
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        GetEnvironmentRequest.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.name != null && message.hasOwnProperty("name"))
                                if (!$util.isString(message.name))
                                    return "name: string expected";
                            return null;
                        };
    
                        /**
                         * Creates a GetEnvironmentRequest message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.notebooks.v1beta1.GetEnvironmentRequest
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.notebooks.v1beta1.GetEnvironmentRequest} GetEnvironmentRequest
                         */
                        GetEnvironmentRequest.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.notebooks.v1beta1.GetEnvironmentRequest)
                                return object;
                            var message = new $root.google.cloud.notebooks.v1beta1.GetEnvironmentRequest();
                            if (object.name != null)
                                message.name = String(object.name);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a GetEnvironmentRequest message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.notebooks.v1beta1.GetEnvironmentRequest
                         * @static
                         * @param {google.cloud.notebooks.v1beta1.GetEnvironmentRequest} message GetEnvironmentRequest
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        GetEnvironmentRequest.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults)
                                object.name = "";
                            if (message.name != null && message.hasOwnProperty("name"))
                                object.name = message.name;
                            return object;
                        };
    
                        /**
                         * Converts this GetEnvironmentRequest to JSON.
                         * @function toJSON
                         * @memberof google.cloud.notebooks.v1beta1.GetEnvironmentRequest
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        GetEnvironmentRequest.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for GetEnvironmentRequest
                         * @function getTypeUrl
                         * @memberof google.cloud.notebooks.v1beta1.GetEnvironmentRequest
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        GetEnvironmentRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.notebooks.v1beta1.GetEnvironmentRequest";
                        };
    
                        return GetEnvironmentRequest;
                    })();
    
                    v1beta1.CreateEnvironmentRequest = (function() {
    
                        /**
                         * Properties of a CreateEnvironmentRequest.
                         * @memberof google.cloud.notebooks.v1beta1
                         * @interface ICreateEnvironmentRequest
                         * @property {string|null} [parent] CreateEnvironmentRequest parent
                         * @property {string|null} [environmentId] CreateEnvironmentRequest environmentId
                         * @property {google.cloud.notebooks.v1beta1.IEnvironment|null} [environment] CreateEnvironmentRequest environment
                         */
    
                        /**
                         * Constructs a new CreateEnvironmentRequest.
                         * @memberof google.cloud.notebooks.v1beta1
                         * @classdesc Represents a CreateEnvironmentRequest.
                         * @implements ICreateEnvironmentRequest
                         * @constructor
                         * @param {google.cloud.notebooks.v1beta1.ICreateEnvironmentRequest=} [properties] Properties to set
                         */
                        function CreateEnvironmentRequest(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * CreateEnvironmentRequest parent.
                         * @member {string} parent
                         * @memberof google.cloud.notebooks.v1beta1.CreateEnvironmentRequest
                         * @instance
                         */
                        CreateEnvironmentRequest.prototype.parent = "";
    
                        /**
                         * CreateEnvironmentRequest environmentId.
                         * @member {string} environmentId
                         * @memberof google.cloud.notebooks.v1beta1.CreateEnvironmentRequest
                         * @instance
                         */
                        CreateEnvironmentRequest.prototype.environmentId = "";
    
                        /**
                         * CreateEnvironmentRequest environment.
                         * @member {google.cloud.notebooks.v1beta1.IEnvironment|null|undefined} environment
                         * @memberof google.cloud.notebooks.v1beta1.CreateEnvironmentRequest
                         * @instance
                         */
                        CreateEnvironmentRequest.prototype.environment = null;
    
                        /**
                         * Creates a new CreateEnvironmentRequest instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.notebooks.v1beta1.CreateEnvironmentRequest
                         * @static
                         * @param {google.cloud.notebooks.v1beta1.ICreateEnvironmentRequest=} [properties] Properties to set
                         * @returns {google.cloud.notebooks.v1beta1.CreateEnvironmentRequest} CreateEnvironmentRequest instance
                         */
                        CreateEnvironmentRequest.create = function create(properties) {
                            return new CreateEnvironmentRequest(properties);
                        };
    
                        /**
                         * Encodes the specified CreateEnvironmentRequest message. Does not implicitly {@link google.cloud.notebooks.v1beta1.CreateEnvironmentRequest.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.notebooks.v1beta1.CreateEnvironmentRequest
                         * @static
                         * @param {google.cloud.notebooks.v1beta1.ICreateEnvironmentRequest} message CreateEnvironmentRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        CreateEnvironmentRequest.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.parent != null && Object.hasOwnProperty.call(message, "parent"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.parent);
                            if (message.environmentId != null && Object.hasOwnProperty.call(message, "environmentId"))
                                writer.uint32(/* id 2, wireType 2 =*/18).string(message.environmentId);
                            if (message.environment != null && Object.hasOwnProperty.call(message, "environment"))
                                $root.google.cloud.notebooks.v1beta1.Environment.encode(message.environment, writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();
                            return writer;
                        };
    
                        /**
                         * Encodes the specified CreateEnvironmentRequest message, length delimited. Does not implicitly {@link google.cloud.notebooks.v1beta1.CreateEnvironmentRequest.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.notebooks.v1beta1.CreateEnvironmentRequest
                         * @static
                         * @param {google.cloud.notebooks.v1beta1.ICreateEnvironmentRequest} message CreateEnvironmentRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        CreateEnvironmentRequest.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a CreateEnvironmentRequest message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.notebooks.v1beta1.CreateEnvironmentRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.notebooks.v1beta1.CreateEnvironmentRequest} CreateEnvironmentRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        CreateEnvironmentRequest.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.notebooks.v1beta1.CreateEnvironmentRequest();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.parent = reader.string();
                                        break;
                                    }
                                case 2: {
                                        message.environmentId = reader.string();
                                        break;
                                    }
                                case 3: {
                                        message.environment = $root.google.cloud.notebooks.v1beta1.Environment.decode(reader, reader.uint32());
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a CreateEnvironmentRequest message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.notebooks.v1beta1.CreateEnvironmentRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.notebooks.v1beta1.CreateEnvironmentRequest} CreateEnvironmentRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        CreateEnvironmentRequest.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a CreateEnvironmentRequest message.
                         * @function verify
                         * @memberof google.cloud.notebooks.v1beta1.CreateEnvironmentRequest
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        CreateEnvironmentRequest.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.parent != null && message.hasOwnProperty("parent"))
                                if (!$util.isString(message.parent))
                                    return "parent: string expected";
                            if (message.environmentId != null && message.hasOwnProperty("environmentId"))
                                if (!$util.isString(message.environmentId))
                                    return "environmentId: string expected";
                            if (message.environment != null && message.hasOwnProperty("environment")) {
                                var error = $root.google.cloud.notebooks.v1beta1.Environment.verify(message.environment);
                                if (error)
                                    return "environment." + error;
                            }
                            return null;
                        };
    
                        /**
                         * Creates a CreateEnvironmentRequest message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.notebooks.v1beta1.CreateEnvironmentRequest
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.notebooks.v1beta1.CreateEnvironmentRequest} CreateEnvironmentRequest
                         */
                        CreateEnvironmentRequest.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.notebooks.v1beta1.CreateEnvironmentRequest)
                                return object;
                            var message = new $root.google.cloud.notebooks.v1beta1.CreateEnvironmentRequest();
                            if (object.parent != null)
                                message.parent = String(object.parent);
                            if (object.environmentId != null)
                                message.environmentId = String(object.environmentId);
                            if (object.environment != null) {
                                if (typeof object.environment !== "object")
                                    throw TypeError(".google.cloud.notebooks.v1beta1.CreateEnvironmentRequest.environment: object expected");
                                message.environment = $root.google.cloud.notebooks.v1beta1.Environment.fromObject(object.environment);
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a CreateEnvironmentRequest message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.notebooks.v1beta1.CreateEnvironmentRequest
                         * @static
                         * @param {google.cloud.notebooks.v1beta1.CreateEnvironmentRequest} message CreateEnvironmentRequest
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        CreateEnvironmentRequest.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.parent = "";
                                object.environmentId = "";
                                object.environment = null;
                            }
                            if (message.parent != null && message.hasOwnProperty("parent"))
                                object.parent = message.parent;
                            if (message.environmentId != null && message.hasOwnProperty("environmentId"))
                                object.environmentId = message.environmentId;
                            if (message.environment != null && message.hasOwnProperty("environment"))
                                object.environment = $root.google.cloud.notebooks.v1beta1.Environment.toObject(message.environment, options);
                            return object;
                        };
    
                        /**
                         * Converts this CreateEnvironmentRequest to JSON.
                         * @function toJSON
                         * @memberof google.cloud.notebooks.v1beta1.CreateEnvironmentRequest
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        CreateEnvironmentRequest.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for CreateEnvironmentRequest
                         * @function getTypeUrl
                         * @memberof google.cloud.notebooks.v1beta1.CreateEnvironmentRequest
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        CreateEnvironmentRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.notebooks.v1beta1.CreateEnvironmentRequest";
                        };
    
                        return CreateEnvironmentRequest;
                    })();
    
                    v1beta1.DeleteEnvironmentRequest = (function() {
    
                        /**
                         * Properties of a DeleteEnvironmentRequest.
                         * @memberof google.cloud.notebooks.v1beta1
                         * @interface IDeleteEnvironmentRequest
                         * @property {string|null} [name] DeleteEnvironmentRequest name
                         */
    
                        /**
                         * Constructs a new DeleteEnvironmentRequest.
                         * @memberof google.cloud.notebooks.v1beta1
                         * @classdesc Represents a DeleteEnvironmentRequest.
                         * @implements IDeleteEnvironmentRequest
                         * @constructor
                         * @param {google.cloud.notebooks.v1beta1.IDeleteEnvironmentRequest=} [properties] Properties to set
                         */
                        function DeleteEnvironmentRequest(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * DeleteEnvironmentRequest name.
                         * @member {string} name
                         * @memberof google.cloud.notebooks.v1beta1.DeleteEnvironmentRequest
                         * @instance
                         */
                        DeleteEnvironmentRequest.prototype.name = "";
    
                        /**
                         * Creates a new DeleteEnvironmentRequest instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.notebooks.v1beta1.DeleteEnvironmentRequest
                         * @static
                         * @param {google.cloud.notebooks.v1beta1.IDeleteEnvironmentRequest=} [properties] Properties to set
                         * @returns {google.cloud.notebooks.v1beta1.DeleteEnvironmentRequest} DeleteEnvironmentRequest instance
                         */
                        DeleteEnvironmentRequest.create = function create(properties) {
                            return new DeleteEnvironmentRequest(properties);
                        };
    
                        /**
                         * Encodes the specified DeleteEnvironmentRequest message. Does not implicitly {@link google.cloud.notebooks.v1beta1.DeleteEnvironmentRequest.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.notebooks.v1beta1.DeleteEnvironmentRequest
                         * @static
                         * @param {google.cloud.notebooks.v1beta1.IDeleteEnvironmentRequest} message DeleteEnvironmentRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        DeleteEnvironmentRequest.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified DeleteEnvironmentRequest message, length delimited. Does not implicitly {@link google.cloud.notebooks.v1beta1.DeleteEnvironmentRequest.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.notebooks.v1beta1.DeleteEnvironmentRequest
                         * @static
                         * @param {google.cloud.notebooks.v1beta1.IDeleteEnvironmentRequest} message DeleteEnvironmentRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        DeleteEnvironmentRequest.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a DeleteEnvironmentRequest message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.notebooks.v1beta1.DeleteEnvironmentRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.notebooks.v1beta1.DeleteEnvironmentRequest} DeleteEnvironmentRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        DeleteEnvironmentRequest.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.notebooks.v1beta1.DeleteEnvironmentRequest();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.name = reader.string();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a DeleteEnvironmentRequest message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.notebooks.v1beta1.DeleteEnvironmentRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.notebooks.v1beta1.DeleteEnvironmentRequest} DeleteEnvironmentRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        DeleteEnvironmentRequest.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a DeleteEnvironmentRequest message.
                         * @function verify
                         * @memberof google.cloud.notebooks.v1beta1.DeleteEnvironmentRequest
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        DeleteEnvironmentRequest.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.name != null && message.hasOwnProperty("name"))
                                if (!$util.isString(message.name))
                                    return "name: string expected";
                            return null;
                        };
    
                        /**
                         * Creates a DeleteEnvironmentRequest message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.notebooks.v1beta1.DeleteEnvironmentRequest
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.notebooks.v1beta1.DeleteEnvironmentRequest} DeleteEnvironmentRequest
                         */
                        DeleteEnvironmentRequest.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.notebooks.v1beta1.DeleteEnvironmentRequest)
                                return object;
                            var message = new $root.google.cloud.notebooks.v1beta1.DeleteEnvironmentRequest();
                            if (object.name != null)
                                message.name = String(object.name);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a DeleteEnvironmentRequest message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.notebooks.v1beta1.DeleteEnvironmentRequest
                         * @static
                         * @param {google.cloud.notebooks.v1beta1.DeleteEnvironmentRequest} message DeleteEnvironmentRequest
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        DeleteEnvironmentRequest.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults)
                                object.name = "";
                            if (message.name != null && message.hasOwnProperty("name"))
                                object.name = message.name;
                            return object;
                        };
    
                        /**
                         * Converts this DeleteEnvironmentRequest to JSON.
                         * @function toJSON
                         * @memberof google.cloud.notebooks.v1beta1.DeleteEnvironmentRequest
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        DeleteEnvironmentRequest.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for DeleteEnvironmentRequest
                         * @function getTypeUrl
                         * @memberof google.cloud.notebooks.v1beta1.DeleteEnvironmentRequest
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        DeleteEnvironmentRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.notebooks.v1beta1.DeleteEnvironmentRequest";
                        };
    
                        return DeleteEnvironmentRequest;
                    })();
    
                    return v1beta1;
                })();
    
                notebooks.v2 = (function() {
    
                    /**
                     * Namespace v2.
                     * @memberof google.cloud.notebooks
                     * @namespace
                     */
                    var v2 = {};
    
                    v2.DiagnosticConfig = (function() {
    
                        /**
                         * Properties of a DiagnosticConfig.
                         * @memberof google.cloud.notebooks.v2
                         * @interface IDiagnosticConfig
                         * @property {string|null} [gcsBucket] DiagnosticConfig gcsBucket
                         * @property {string|null} [relativePath] DiagnosticConfig relativePath
                         * @property {boolean|null} [enableRepairFlag] DiagnosticConfig enableRepairFlag
                         * @property {boolean|null} [enablePacketCaptureFlag] DiagnosticConfig enablePacketCaptureFlag
                         * @property {boolean|null} [enableCopyHomeFilesFlag] DiagnosticConfig enableCopyHomeFilesFlag
                         */
    
                        /**
                         * Constructs a new DiagnosticConfig.
                         * @memberof google.cloud.notebooks.v2
                         * @classdesc Represents a DiagnosticConfig.
                         * @implements IDiagnosticConfig
                         * @constructor
                         * @param {google.cloud.notebooks.v2.IDiagnosticConfig=} [properties] Properties to set
                         */
                        function DiagnosticConfig(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * DiagnosticConfig gcsBucket.
                         * @member {string} gcsBucket
                         * @memberof google.cloud.notebooks.v2.DiagnosticConfig
                         * @instance
                         */
                        DiagnosticConfig.prototype.gcsBucket = "";
    
                        /**
                         * DiagnosticConfig relativePath.
                         * @member {string} relativePath
                         * @memberof google.cloud.notebooks.v2.DiagnosticConfig
                         * @instance
                         */
                        DiagnosticConfig.prototype.relativePath = "";
    
                        /**
                         * DiagnosticConfig enableRepairFlag.
                         * @member {boolean} enableRepairFlag
                         * @memberof google.cloud.notebooks.v2.DiagnosticConfig
                         * @instance
                         */
                        DiagnosticConfig.prototype.enableRepairFlag = false;
    
                        /**
                         * DiagnosticConfig enablePacketCaptureFlag.
                         * @member {boolean} enablePacketCaptureFlag
                         * @memberof google.cloud.notebooks.v2.DiagnosticConfig
                         * @instance
                         */
                        DiagnosticConfig.prototype.enablePacketCaptureFlag = false;
    
                        /**
                         * DiagnosticConfig enableCopyHomeFilesFlag.
                         * @member {boolean} enableCopyHomeFilesFlag
                         * @memberof google.cloud.notebooks.v2.DiagnosticConfig
                         * @instance
                         */
                        DiagnosticConfig.prototype.enableCopyHomeFilesFlag = false;
    
                        /**
                         * Creates a new DiagnosticConfig instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.notebooks.v2.DiagnosticConfig
                         * @static
                         * @param {google.cloud.notebooks.v2.IDiagnosticConfig=} [properties] Properties to set
                         * @returns {google.cloud.notebooks.v2.DiagnosticConfig} DiagnosticConfig instance
                         */
                        DiagnosticConfig.create = function create(properties) {
                            return new DiagnosticConfig(properties);
                        };
    
                        /**
                         * Encodes the specified DiagnosticConfig message. Does not implicitly {@link google.cloud.notebooks.v2.DiagnosticConfig.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.notebooks.v2.DiagnosticConfig
                         * @static
                         * @param {google.cloud.notebooks.v2.IDiagnosticConfig} message DiagnosticConfig message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        DiagnosticConfig.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.gcsBucket != null && Object.hasOwnProperty.call(message, "gcsBucket"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.gcsBucket);
                            if (message.relativePath != null && Object.hasOwnProperty.call(message, "relativePath"))
                                writer.uint32(/* id 2, wireType 2 =*/18).string(message.relativePath);
                            if (message.enableRepairFlag != null && Object.hasOwnProperty.call(message, "enableRepairFlag"))
                                writer.uint32(/* id 3, wireType 0 =*/24).bool(message.enableRepairFlag);
                            if (message.enablePacketCaptureFlag != null && Object.hasOwnProperty.call(message, "enablePacketCaptureFlag"))
                                writer.uint32(/* id 4, wireType 0 =*/32).bool(message.enablePacketCaptureFlag);
                            if (message.enableCopyHomeFilesFlag != null && Object.hasOwnProperty.call(message, "enableCopyHomeFilesFlag"))
                                writer.uint32(/* id 5, wireType 0 =*/40).bool(message.enableCopyHomeFilesFlag);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified DiagnosticConfig message, length delimited. Does not implicitly {@link google.cloud.notebooks.v2.DiagnosticConfig.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.notebooks.v2.DiagnosticConfig
                         * @static
                         * @param {google.cloud.notebooks.v2.IDiagnosticConfig} message DiagnosticConfig message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        DiagnosticConfig.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a DiagnosticConfig message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.notebooks.v2.DiagnosticConfig
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.notebooks.v2.DiagnosticConfig} DiagnosticConfig
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        DiagnosticConfig.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.notebooks.v2.DiagnosticConfig();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.gcsBucket = reader.string();
                                        break;
                                    }
                                case 2: {
                                        message.relativePath = reader.string();
                                        break;
                                    }
                                case 3: {
                                        message.enableRepairFlag = reader.bool();
                                        break;
                                    }
                                case 4: {
                                        message.enablePacketCaptureFlag = reader.bool();
                                        break;
                                    }
                                case 5: {
                                        message.enableCopyHomeFilesFlag = reader.bool();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a DiagnosticConfig message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.notebooks.v2.DiagnosticConfig
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.notebooks.v2.DiagnosticConfig} DiagnosticConfig
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        DiagnosticConfig.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a DiagnosticConfig message.
                         * @function verify
                         * @memberof google.cloud.notebooks.v2.DiagnosticConfig
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        DiagnosticConfig.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.gcsBucket != null && message.hasOwnProperty("gcsBucket"))
                                if (!$util.isString(message.gcsBucket))
                                    return "gcsBucket: string expected";
                            if (message.relativePath != null && message.hasOwnProperty("relativePath"))
                                if (!$util.isString(message.relativePath))
                                    return "relativePath: string expected";
                            if (message.enableRepairFlag != null && message.hasOwnProperty("enableRepairFlag"))
                                if (typeof message.enableRepairFlag !== "boolean")
                                    return "enableRepairFlag: boolean expected";
                            if (message.enablePacketCaptureFlag != null && message.hasOwnProperty("enablePacketCaptureFlag"))
                                if (typeof message.enablePacketCaptureFlag !== "boolean")
                                    return "enablePacketCaptureFlag: boolean expected";
                            if (message.enableCopyHomeFilesFlag != null && message.hasOwnProperty("enableCopyHomeFilesFlag"))
                                if (typeof message.enableCopyHomeFilesFlag !== "boolean")
                                    return "enableCopyHomeFilesFlag: boolean expected";
                            return null;
                        };
    
                        /**
                         * Creates a DiagnosticConfig message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.notebooks.v2.DiagnosticConfig
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.notebooks.v2.DiagnosticConfig} DiagnosticConfig
                         */
                        DiagnosticConfig.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.notebooks.v2.DiagnosticConfig)
                                return object;
                            var message = new $root.google.cloud.notebooks.v2.DiagnosticConfig();
                            if (object.gcsBucket != null)
                                message.gcsBucket = String(object.gcsBucket);
                            if (object.relativePath != null)
                                message.relativePath = String(object.relativePath);
                            if (object.enableRepairFlag != null)
                                message.enableRepairFlag = Boolean(object.enableRepairFlag);
                            if (object.enablePacketCaptureFlag != null)
                                message.enablePacketCaptureFlag = Boolean(object.enablePacketCaptureFlag);
                            if (object.enableCopyHomeFilesFlag != null)
                                message.enableCopyHomeFilesFlag = Boolean(object.enableCopyHomeFilesFlag);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a DiagnosticConfig message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.notebooks.v2.DiagnosticConfig
                         * @static
                         * @param {google.cloud.notebooks.v2.DiagnosticConfig} message DiagnosticConfig
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        DiagnosticConfig.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.gcsBucket = "";
                                object.relativePath = "";
                                object.enableRepairFlag = false;
                                object.enablePacketCaptureFlag = false;
                                object.enableCopyHomeFilesFlag = false;
                            }
                            if (message.gcsBucket != null && message.hasOwnProperty("gcsBucket"))
                                object.gcsBucket = message.gcsBucket;
                            if (message.relativePath != null && message.hasOwnProperty("relativePath"))
                                object.relativePath = message.relativePath;
                            if (message.enableRepairFlag != null && message.hasOwnProperty("enableRepairFlag"))
                                object.enableRepairFlag = message.enableRepairFlag;
                            if (message.enablePacketCaptureFlag != null && message.hasOwnProperty("enablePacketCaptureFlag"))
                                object.enablePacketCaptureFlag = message.enablePacketCaptureFlag;
                            if (message.enableCopyHomeFilesFlag != null && message.hasOwnProperty("enableCopyHomeFilesFlag"))
                                object.enableCopyHomeFilesFlag = message.enableCopyHomeFilesFlag;
                            return object;
                        };
    
                        /**
                         * Converts this DiagnosticConfig to JSON.
                         * @function toJSON
                         * @memberof google.cloud.notebooks.v2.DiagnosticConfig
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        DiagnosticConfig.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for DiagnosticConfig
                         * @function getTypeUrl
                         * @memberof google.cloud.notebooks.v2.DiagnosticConfig
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        DiagnosticConfig.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.notebooks.v2.DiagnosticConfig";
                        };
    
                        return DiagnosticConfig;
                    })();
    
                    v2.Event = (function() {
    
                        /**
                         * Properties of an Event.
                         * @memberof google.cloud.notebooks.v2
                         * @interface IEvent
                         * @property {google.protobuf.ITimestamp|null} [reportTime] Event reportTime
                         * @property {google.cloud.notebooks.v2.Event.EventType|null} [type] Event type
                         * @property {Object.<string,string>|null} [details] Event details
                         */
    
                        /**
                         * Constructs a new Event.
                         * @memberof google.cloud.notebooks.v2
                         * @classdesc Represents an Event.
                         * @implements IEvent
                         * @constructor
                         * @param {google.cloud.notebooks.v2.IEvent=} [properties] Properties to set
                         */
                        function Event(properties) {
                            this.details = {};
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * Event reportTime.
                         * @member {google.protobuf.ITimestamp|null|undefined} reportTime
                         * @memberof google.cloud.notebooks.v2.Event
                         * @instance
                         */
                        Event.prototype.reportTime = null;
    
                        /**
                         * Event type.
                         * @member {google.cloud.notebooks.v2.Event.EventType} type
                         * @memberof google.cloud.notebooks.v2.Event
                         * @instance
                         */
                        Event.prototype.type = 0;
    
                        /**
                         * Event details.
                         * @member {Object.<string,string>} details
                         * @memberof google.cloud.notebooks.v2.Event
                         * @instance
                         */
                        Event.prototype.details = $util.emptyObject;
    
                        /**
                         * Creates a new Event instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.notebooks.v2.Event
                         * @static
                         * @param {google.cloud.notebooks.v2.IEvent=} [properties] Properties to set
                         * @returns {google.cloud.notebooks.v2.Event} Event instance
                         */
                        Event.create = function create(properties) {
                            return new Event(properties);
                        };
    
                        /**
                         * Encodes the specified Event message. Does not implicitly {@link google.cloud.notebooks.v2.Event.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.notebooks.v2.Event
                         * @static
                         * @param {google.cloud.notebooks.v2.IEvent} message Event message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        Event.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.reportTime != null && Object.hasOwnProperty.call(message, "reportTime"))
                                $root.google.protobuf.Timestamp.encode(message.reportTime, writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                            if (message.type != null && Object.hasOwnProperty.call(message, "type"))
                                writer.uint32(/* id 2, wireType 0 =*/16).int32(message.type);
                            if (message.details != null && Object.hasOwnProperty.call(message, "details"))
                                for (var keys = Object.keys(message.details), i = 0; i < keys.length; ++i)
                                    writer.uint32(/* id 3, wireType 2 =*/26).fork().uint32(/* id 1, wireType 2 =*/10).string(keys[i]).uint32(/* id 2, wireType 2 =*/18).string(message.details[keys[i]]).ldelim();
                            return writer;
                        };
    
                        /**
                         * Encodes the specified Event message, length delimited. Does not implicitly {@link google.cloud.notebooks.v2.Event.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.notebooks.v2.Event
                         * @static
                         * @param {google.cloud.notebooks.v2.IEvent} message Event message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        Event.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes an Event message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.notebooks.v2.Event
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.notebooks.v2.Event} Event
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        Event.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.notebooks.v2.Event(), key, value;
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.reportTime = $root.google.protobuf.Timestamp.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 2: {
                                        message.type = reader.int32();
                                        break;
                                    }
                                case 3: {
                                        if (message.details === $util.emptyObject)
                                            message.details = {};
                                        var end2 = reader.uint32() + reader.pos;
                                        key = "";
                                        value = "";
                                        while (reader.pos < end2) {
                                            var tag2 = reader.uint32();
                                            switch (tag2 >>> 3) {
                                            case 1:
                                                key = reader.string();
                                                break;
                                            case 2:
                                                value = reader.string();
                                                break;
                                            default:
                                                reader.skipType(tag2 & 7);
                                                break;
                                            }
                                        }
                                        message.details[key] = value;
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes an Event message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.notebooks.v2.Event
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.notebooks.v2.Event} Event
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        Event.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies an Event message.
                         * @function verify
                         * @memberof google.cloud.notebooks.v2.Event
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        Event.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.reportTime != null && message.hasOwnProperty("reportTime")) {
                                var error = $root.google.protobuf.Timestamp.verify(message.reportTime);
                                if (error)
                                    return "reportTime." + error;
                            }
                            if (message.type != null && message.hasOwnProperty("type"))
                                switch (message.type) {
                                default:
                                    return "type: enum value expected";
                                case 0:
                                case 1:
                                case 2:
                                case 3:
                                case 4:
                                case 5:
                                    break;
                                }
                            if (message.details != null && message.hasOwnProperty("details")) {
                                if (!$util.isObject(message.details))
                                    return "details: object expected";
                                var key = Object.keys(message.details);
                                for (var i = 0; i < key.length; ++i)
                                    if (!$util.isString(message.details[key[i]]))
                                        return "details: string{k:string} expected";
                            }
                            return null;
                        };
    
                        /**
                         * Creates an Event message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.notebooks.v2.Event
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.notebooks.v2.Event} Event
                         */
                        Event.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.notebooks.v2.Event)
                                return object;
                            var message = new $root.google.cloud.notebooks.v2.Event();
                            if (object.reportTime != null) {
                                if (typeof object.reportTime !== "object")
                                    throw TypeError(".google.cloud.notebooks.v2.Event.reportTime: object expected");
                                message.reportTime = $root.google.protobuf.Timestamp.fromObject(object.reportTime);
                            }
                            switch (object.type) {
                            default:
                                if (typeof object.type === "number") {
                                    message.type = object.type;
                                    break;
                                }
                                break;
                            case "EVENT_TYPE_UNSPECIFIED":
                            case 0:
                                message.type = 0;
                                break;
                            case "IDLE":
                            case 1:
                                message.type = 1;
                                break;
                            case "HEARTBEAT":
                            case 2:
                                message.type = 2;
                                break;
                            case "HEALTH":
                            case 3:
                                message.type = 3;
                                break;
                            case "MAINTENANCE":
                            case 4:
                                message.type = 4;
                                break;
                            case "METADATA_CHANGE":
                            case 5:
                                message.type = 5;
                                break;
                            }
                            if (object.details) {
                                if (typeof object.details !== "object")
                                    throw TypeError(".google.cloud.notebooks.v2.Event.details: object expected");
                                message.details = {};
                                for (var keys = Object.keys(object.details), i = 0; i < keys.length; ++i)
                                    message.details[keys[i]] = String(object.details[keys[i]]);
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from an Event message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.notebooks.v2.Event
                         * @static
                         * @param {google.cloud.notebooks.v2.Event} message Event
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        Event.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.objects || options.defaults)
                                object.details = {};
                            if (options.defaults) {
                                object.reportTime = null;
                                object.type = options.enums === String ? "EVENT_TYPE_UNSPECIFIED" : 0;
                            }
                            if (message.reportTime != null && message.hasOwnProperty("reportTime"))
                                object.reportTime = $root.google.protobuf.Timestamp.toObject(message.reportTime, options);
                            if (message.type != null && message.hasOwnProperty("type"))
                                object.type = options.enums === String ? $root.google.cloud.notebooks.v2.Event.EventType[message.type] === undefined ? message.type : $root.google.cloud.notebooks.v2.Event.EventType[message.type] : message.type;
                            var keys2;
                            if (message.details && (keys2 = Object.keys(message.details)).length) {
                                object.details = {};
                                for (var j = 0; j < keys2.length; ++j)
                                    object.details[keys2[j]] = message.details[keys2[j]];
                            }
                            return object;
                        };
    
                        /**
                         * Converts this Event to JSON.
                         * @function toJSON
                         * @memberof google.cloud.notebooks.v2.Event
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        Event.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for Event
                         * @function getTypeUrl
                         * @memberof google.cloud.notebooks.v2.Event
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        Event.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.notebooks.v2.Event";
                        };
    
                        /**
                         * EventType enum.
                         * @name google.cloud.notebooks.v2.Event.EventType
                         * @enum {number}
                         * @property {number} EVENT_TYPE_UNSPECIFIED=0 EVENT_TYPE_UNSPECIFIED value
                         * @property {number} IDLE=1 IDLE value
                         * @property {number} HEARTBEAT=2 HEARTBEAT value
                         * @property {number} HEALTH=3 HEALTH value
                         * @property {number} MAINTENANCE=4 MAINTENANCE value
                         * @property {number} METADATA_CHANGE=5 METADATA_CHANGE value
                         */
                        Event.EventType = (function() {
                            var valuesById = {}, values = Object.create(valuesById);
                            values[valuesById[0] = "EVENT_TYPE_UNSPECIFIED"] = 0;
                            values[valuesById[1] = "IDLE"] = 1;
                            values[valuesById[2] = "HEARTBEAT"] = 2;
                            values[valuesById[3] = "HEALTH"] = 3;
                            values[valuesById[4] = "MAINTENANCE"] = 4;
                            values[valuesById[5] = "METADATA_CHANGE"] = 5;
                            return values;
                        })();
    
                        return Event;
                    })();
    
                    v2.NetworkInterface = (function() {
    
                        /**
                         * Properties of a NetworkInterface.
                         * @memberof google.cloud.notebooks.v2
                         * @interface INetworkInterface
                         * @property {string|null} [network] NetworkInterface network
                         * @property {string|null} [subnet] NetworkInterface subnet
                         * @property {google.cloud.notebooks.v2.NetworkInterface.NicType|null} [nicType] NetworkInterface nicType
                         */
    
                        /**
                         * Constructs a new NetworkInterface.
                         * @memberof google.cloud.notebooks.v2
                         * @classdesc Represents a NetworkInterface.
                         * @implements INetworkInterface
                         * @constructor
                         * @param {google.cloud.notebooks.v2.INetworkInterface=} [properties] Properties to set
                         */
                        function NetworkInterface(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * NetworkInterface network.
                         * @member {string} network
                         * @memberof google.cloud.notebooks.v2.NetworkInterface
                         * @instance
                         */
                        NetworkInterface.prototype.network = "";
    
                        /**
                         * NetworkInterface subnet.
                         * @member {string} subnet
                         * @memberof google.cloud.notebooks.v2.NetworkInterface
                         * @instance
                         */
                        NetworkInterface.prototype.subnet = "";
    
                        /**
                         * NetworkInterface nicType.
                         * @member {google.cloud.notebooks.v2.NetworkInterface.NicType} nicType
                         * @memberof google.cloud.notebooks.v2.NetworkInterface
                         * @instance
                         */
                        NetworkInterface.prototype.nicType = 0;
    
                        /**
                         * Creates a new NetworkInterface instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.notebooks.v2.NetworkInterface
                         * @static
                         * @param {google.cloud.notebooks.v2.INetworkInterface=} [properties] Properties to set
                         * @returns {google.cloud.notebooks.v2.NetworkInterface} NetworkInterface instance
                         */
                        NetworkInterface.create = function create(properties) {
                            return new NetworkInterface(properties);
                        };
    
                        /**
                         * Encodes the specified NetworkInterface message. Does not implicitly {@link google.cloud.notebooks.v2.NetworkInterface.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.notebooks.v2.NetworkInterface
                         * @static
                         * @param {google.cloud.notebooks.v2.INetworkInterface} message NetworkInterface message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        NetworkInterface.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.network != null && Object.hasOwnProperty.call(message, "network"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.network);
                            if (message.subnet != null && Object.hasOwnProperty.call(message, "subnet"))
                                writer.uint32(/* id 2, wireType 2 =*/18).string(message.subnet);
                            if (message.nicType != null && Object.hasOwnProperty.call(message, "nicType"))
                                writer.uint32(/* id 3, wireType 0 =*/24).int32(message.nicType);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified NetworkInterface message, length delimited. Does not implicitly {@link google.cloud.notebooks.v2.NetworkInterface.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.notebooks.v2.NetworkInterface
                         * @static
                         * @param {google.cloud.notebooks.v2.INetworkInterface} message NetworkInterface message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        NetworkInterface.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a NetworkInterface message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.notebooks.v2.NetworkInterface
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.notebooks.v2.NetworkInterface} NetworkInterface
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        NetworkInterface.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.notebooks.v2.NetworkInterface();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.network = reader.string();
                                        break;
                                    }
                                case 2: {
                                        message.subnet = reader.string();
                                        break;
                                    }
                                case 3: {
                                        message.nicType = reader.int32();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a NetworkInterface message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.notebooks.v2.NetworkInterface
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.notebooks.v2.NetworkInterface} NetworkInterface
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        NetworkInterface.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a NetworkInterface message.
                         * @function verify
                         * @memberof google.cloud.notebooks.v2.NetworkInterface
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        NetworkInterface.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.network != null && message.hasOwnProperty("network"))
                                if (!$util.isString(message.network))
                                    return "network: string expected";
                            if (message.subnet != null && message.hasOwnProperty("subnet"))
                                if (!$util.isString(message.subnet))
                                    return "subnet: string expected";
                            if (message.nicType != null && message.hasOwnProperty("nicType"))
                                switch (message.nicType) {
                                default:
                                    return "nicType: enum value expected";
                                case 0:
                                case 1:
                                case 2:
                                    break;
                                }
                            return null;
                        };
    
                        /**
                         * Creates a NetworkInterface message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.notebooks.v2.NetworkInterface
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.notebooks.v2.NetworkInterface} NetworkInterface
                         */
                        NetworkInterface.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.notebooks.v2.NetworkInterface)
                                return object;
                            var message = new $root.google.cloud.notebooks.v2.NetworkInterface();
                            if (object.network != null)
                                message.network = String(object.network);
                            if (object.subnet != null)
                                message.subnet = String(object.subnet);
                            switch (object.nicType) {
                            default:
                                if (typeof object.nicType === "number") {
                                    message.nicType = object.nicType;
                                    break;
                                }
                                break;
                            case "NIC_TYPE_UNSPECIFIED":
                            case 0:
                                message.nicType = 0;
                                break;
                            case "VIRTIO_NET":
                            case 1:
                                message.nicType = 1;
                                break;
                            case "GVNIC":
                            case 2:
                                message.nicType = 2;
                                break;
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a NetworkInterface message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.notebooks.v2.NetworkInterface
                         * @static
                         * @param {google.cloud.notebooks.v2.NetworkInterface} message NetworkInterface
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        NetworkInterface.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.network = "";
                                object.subnet = "";
                                object.nicType = options.enums === String ? "NIC_TYPE_UNSPECIFIED" : 0;
                            }
                            if (message.network != null && message.hasOwnProperty("network"))
                                object.network = message.network;
                            if (message.subnet != null && message.hasOwnProperty("subnet"))
                                object.subnet = message.subnet;
                            if (message.nicType != null && message.hasOwnProperty("nicType"))
                                object.nicType = options.enums === String ? $root.google.cloud.notebooks.v2.NetworkInterface.NicType[message.nicType] === undefined ? message.nicType : $root.google.cloud.notebooks.v2.NetworkInterface.NicType[message.nicType] : message.nicType;
                            return object;
                        };
    
                        /**
                         * Converts this NetworkInterface to JSON.
                         * @function toJSON
                         * @memberof google.cloud.notebooks.v2.NetworkInterface
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        NetworkInterface.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for NetworkInterface
                         * @function getTypeUrl
                         * @memberof google.cloud.notebooks.v2.NetworkInterface
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        NetworkInterface.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.notebooks.v2.NetworkInterface";
                        };
    
                        /**
                         * NicType enum.
                         * @name google.cloud.notebooks.v2.NetworkInterface.NicType
                         * @enum {number}
                         * @property {number} NIC_TYPE_UNSPECIFIED=0 NIC_TYPE_UNSPECIFIED value
                         * @property {number} VIRTIO_NET=1 VIRTIO_NET value
                         * @property {number} GVNIC=2 GVNIC value
                         */
                        NetworkInterface.NicType = (function() {
                            var valuesById = {}, values = Object.create(valuesById);
                            values[valuesById[0] = "NIC_TYPE_UNSPECIFIED"] = 0;
                            values[valuesById[1] = "VIRTIO_NET"] = 1;
                            values[valuesById[2] = "GVNIC"] = 2;
                            return values;
                        })();
    
                        return NetworkInterface;
                    })();
    
                    v2.VmImage = (function() {
    
                        /**
                         * Properties of a VmImage.
                         * @memberof google.cloud.notebooks.v2
                         * @interface IVmImage
                         * @property {string|null} [project] VmImage project
                         * @property {string|null} [name] VmImage name
                         * @property {string|null} [family] VmImage family
                         */
    
                        /**
                         * Constructs a new VmImage.
                         * @memberof google.cloud.notebooks.v2
                         * @classdesc Represents a VmImage.
                         * @implements IVmImage
                         * @constructor
                         * @param {google.cloud.notebooks.v2.IVmImage=} [properties] Properties to set
                         */
                        function VmImage(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * VmImage project.
                         * @member {string} project
                         * @memberof google.cloud.notebooks.v2.VmImage
                         * @instance
                         */
                        VmImage.prototype.project = "";
    
                        /**
                         * VmImage name.
                         * @member {string|null|undefined} name
                         * @memberof google.cloud.notebooks.v2.VmImage
                         * @instance
                         */
                        VmImage.prototype.name = null;
    
                        /**
                         * VmImage family.
                         * @member {string|null|undefined} family
                         * @memberof google.cloud.notebooks.v2.VmImage
                         * @instance
                         */
                        VmImage.prototype.family = null;
    
                        // OneOf field names bound to virtual getters and setters
                        var $oneOfFields;
    
                        /**
                         * VmImage image.
                         * @member {"name"|"family"|undefined} image
                         * @memberof google.cloud.notebooks.v2.VmImage
                         * @instance
                         */
                        Object.defineProperty(VmImage.prototype, "image", {
                            get: $util.oneOfGetter($oneOfFields = ["name", "family"]),
                            set: $util.oneOfSetter($oneOfFields)
                        });
    
                        /**
                         * Creates a new VmImage instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.notebooks.v2.VmImage
                         * @static
                         * @param {google.cloud.notebooks.v2.IVmImage=} [properties] Properties to set
                         * @returns {google.cloud.notebooks.v2.VmImage} VmImage instance
                         */
                        VmImage.create = function create(properties) {
                            return new VmImage(properties);
                        };
    
                        /**
                         * Encodes the specified VmImage message. Does not implicitly {@link google.cloud.notebooks.v2.VmImage.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.notebooks.v2.VmImage
                         * @static
                         * @param {google.cloud.notebooks.v2.IVmImage} message VmImage message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        VmImage.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.project != null && Object.hasOwnProperty.call(message, "project"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.project);
                            if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                                writer.uint32(/* id 2, wireType 2 =*/18).string(message.name);
                            if (message.family != null && Object.hasOwnProperty.call(message, "family"))
                                writer.uint32(/* id 3, wireType 2 =*/26).string(message.family);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified VmImage message, length delimited. Does not implicitly {@link google.cloud.notebooks.v2.VmImage.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.notebooks.v2.VmImage
                         * @static
                         * @param {google.cloud.notebooks.v2.IVmImage} message VmImage message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        VmImage.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a VmImage message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.notebooks.v2.VmImage
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.notebooks.v2.VmImage} VmImage
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        VmImage.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.notebooks.v2.VmImage();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.project = reader.string();
                                        break;
                                    }
                                case 2: {
                                        message.name = reader.string();
                                        break;
                                    }
                                case 3: {
                                        message.family = reader.string();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a VmImage message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.notebooks.v2.VmImage
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.notebooks.v2.VmImage} VmImage
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        VmImage.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a VmImage message.
                         * @function verify
                         * @memberof google.cloud.notebooks.v2.VmImage
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        VmImage.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            var properties = {};
                            if (message.project != null && message.hasOwnProperty("project"))
                                if (!$util.isString(message.project))
                                    return "project: string expected";
                            if (message.name != null && message.hasOwnProperty("name")) {
                                properties.image = 1;
                                if (!$util.isString(message.name))
                                    return "name: string expected";
                            }
                            if (message.family != null && message.hasOwnProperty("family")) {
                                if (properties.image === 1)
                                    return "image: multiple values";
                                properties.image = 1;
                                if (!$util.isString(message.family))
                                    return "family: string expected";
                            }
                            return null;
                        };
    
                        /**
                         * Creates a VmImage message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.notebooks.v2.VmImage
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.notebooks.v2.VmImage} VmImage
                         */
                        VmImage.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.notebooks.v2.VmImage)
                                return object;
                            var message = new $root.google.cloud.notebooks.v2.VmImage();
                            if (object.project != null)
                                message.project = String(object.project);
                            if (object.name != null)
                                message.name = String(object.name);
                            if (object.family != null)
                                message.family = String(object.family);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a VmImage message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.notebooks.v2.VmImage
                         * @static
                         * @param {google.cloud.notebooks.v2.VmImage} message VmImage
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        VmImage.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults)
                                object.project = "";
                            if (message.project != null && message.hasOwnProperty("project"))
                                object.project = message.project;
                            if (message.name != null && message.hasOwnProperty("name")) {
                                object.name = message.name;
                                if (options.oneofs)
                                    object.image = "name";
                            }
                            if (message.family != null && message.hasOwnProperty("family")) {
                                object.family = message.family;
                                if (options.oneofs)
                                    object.image = "family";
                            }
                            return object;
                        };
    
                        /**
                         * Converts this VmImage to JSON.
                         * @function toJSON
                         * @memberof google.cloud.notebooks.v2.VmImage
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        VmImage.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for VmImage
                         * @function getTypeUrl
                         * @memberof google.cloud.notebooks.v2.VmImage
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        VmImage.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.notebooks.v2.VmImage";
                        };
    
                        return VmImage;
                    })();
    
                    v2.ContainerImage = (function() {
    
                        /**
                         * Properties of a ContainerImage.
                         * @memberof google.cloud.notebooks.v2
                         * @interface IContainerImage
                         * @property {string|null} [repository] ContainerImage repository
                         * @property {string|null} [tag] ContainerImage tag
                         */
    
                        /**
                         * Constructs a new ContainerImage.
                         * @memberof google.cloud.notebooks.v2
                         * @classdesc Represents a ContainerImage.
                         * @implements IContainerImage
                         * @constructor
                         * @param {google.cloud.notebooks.v2.IContainerImage=} [properties] Properties to set
                         */
                        function ContainerImage(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * ContainerImage repository.
                         * @member {string} repository
                         * @memberof google.cloud.notebooks.v2.ContainerImage
                         * @instance
                         */
                        ContainerImage.prototype.repository = "";
    
                        /**
                         * ContainerImage tag.
                         * @member {string} tag
                         * @memberof google.cloud.notebooks.v2.ContainerImage
                         * @instance
                         */
                        ContainerImage.prototype.tag = "";
    
                        /**
                         * Creates a new ContainerImage instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.notebooks.v2.ContainerImage
                         * @static
                         * @param {google.cloud.notebooks.v2.IContainerImage=} [properties] Properties to set
                         * @returns {google.cloud.notebooks.v2.ContainerImage} ContainerImage instance
                         */
                        ContainerImage.create = function create(properties) {
                            return new ContainerImage(properties);
                        };
    
                        /**
                         * Encodes the specified ContainerImage message. Does not implicitly {@link google.cloud.notebooks.v2.ContainerImage.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.notebooks.v2.ContainerImage
                         * @static
                         * @param {google.cloud.notebooks.v2.IContainerImage} message ContainerImage message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        ContainerImage.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.repository != null && Object.hasOwnProperty.call(message, "repository"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.repository);
                            if (message.tag != null && Object.hasOwnProperty.call(message, "tag"))
                                writer.uint32(/* id 2, wireType 2 =*/18).string(message.tag);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified ContainerImage message, length delimited. Does not implicitly {@link google.cloud.notebooks.v2.ContainerImage.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.notebooks.v2.ContainerImage
                         * @static
                         * @param {google.cloud.notebooks.v2.IContainerImage} message ContainerImage message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        ContainerImage.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a ContainerImage message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.notebooks.v2.ContainerImage
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.notebooks.v2.ContainerImage} ContainerImage
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        ContainerImage.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.notebooks.v2.ContainerImage();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.repository = reader.string();
                                        break;
                                    }
                                case 2: {
                                        message.tag = reader.string();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a ContainerImage message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.notebooks.v2.ContainerImage
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.notebooks.v2.ContainerImage} ContainerImage
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        ContainerImage.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a ContainerImage message.
                         * @function verify
                         * @memberof google.cloud.notebooks.v2.ContainerImage
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        ContainerImage.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.repository != null && message.hasOwnProperty("repository"))
                                if (!$util.isString(message.repository))
                                    return "repository: string expected";
                            if (message.tag != null && message.hasOwnProperty("tag"))
                                if (!$util.isString(message.tag))
                                    return "tag: string expected";
                            return null;
                        };
    
                        /**
                         * Creates a ContainerImage message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.notebooks.v2.ContainerImage
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.notebooks.v2.ContainerImage} ContainerImage
                         */
                        ContainerImage.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.notebooks.v2.ContainerImage)
                                return object;
                            var message = new $root.google.cloud.notebooks.v2.ContainerImage();
                            if (object.repository != null)
                                message.repository = String(object.repository);
                            if (object.tag != null)
                                message.tag = String(object.tag);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a ContainerImage message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.notebooks.v2.ContainerImage
                         * @static
                         * @param {google.cloud.notebooks.v2.ContainerImage} message ContainerImage
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        ContainerImage.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.repository = "";
                                object.tag = "";
                            }
                            if (message.repository != null && message.hasOwnProperty("repository"))
                                object.repository = message.repository;
                            if (message.tag != null && message.hasOwnProperty("tag"))
                                object.tag = message.tag;
                            return object;
                        };
    
                        /**
                         * Converts this ContainerImage to JSON.
                         * @function toJSON
                         * @memberof google.cloud.notebooks.v2.ContainerImage
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        ContainerImage.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for ContainerImage
                         * @function getTypeUrl
                         * @memberof google.cloud.notebooks.v2.ContainerImage
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        ContainerImage.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.notebooks.v2.ContainerImage";
                        };
    
                        return ContainerImage;
                    })();
    
                    v2.AcceleratorConfig = (function() {
    
                        /**
                         * Properties of an AcceleratorConfig.
                         * @memberof google.cloud.notebooks.v2
                         * @interface IAcceleratorConfig
                         * @property {google.cloud.notebooks.v2.AcceleratorConfig.AcceleratorType|null} [type] AcceleratorConfig type
                         * @property {number|Long|null} [coreCount] AcceleratorConfig coreCount
                         */
    
                        /**
                         * Constructs a new AcceleratorConfig.
                         * @memberof google.cloud.notebooks.v2
                         * @classdesc Represents an AcceleratorConfig.
                         * @implements IAcceleratorConfig
                         * @constructor
                         * @param {google.cloud.notebooks.v2.IAcceleratorConfig=} [properties] Properties to set
                         */
                        function AcceleratorConfig(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * AcceleratorConfig type.
                         * @member {google.cloud.notebooks.v2.AcceleratorConfig.AcceleratorType} type
                         * @memberof google.cloud.notebooks.v2.AcceleratorConfig
                         * @instance
                         */
                        AcceleratorConfig.prototype.type = 0;
    
                        /**
                         * AcceleratorConfig coreCount.
                         * @member {number|Long} coreCount
                         * @memberof google.cloud.notebooks.v2.AcceleratorConfig
                         * @instance
                         */
                        AcceleratorConfig.prototype.coreCount = $util.Long ? $util.Long.fromBits(0,0,false) : 0;
    
                        /**
                         * Creates a new AcceleratorConfig instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.notebooks.v2.AcceleratorConfig
                         * @static
                         * @param {google.cloud.notebooks.v2.IAcceleratorConfig=} [properties] Properties to set
                         * @returns {google.cloud.notebooks.v2.AcceleratorConfig} AcceleratorConfig instance
                         */
                        AcceleratorConfig.create = function create(properties) {
                            return new AcceleratorConfig(properties);
                        };
    
                        /**
                         * Encodes the specified AcceleratorConfig message. Does not implicitly {@link google.cloud.notebooks.v2.AcceleratorConfig.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.notebooks.v2.AcceleratorConfig
                         * @static
                         * @param {google.cloud.notebooks.v2.IAcceleratorConfig} message AcceleratorConfig message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        AcceleratorConfig.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.type != null && Object.hasOwnProperty.call(message, "type"))
                                writer.uint32(/* id 1, wireType 0 =*/8).int32(message.type);
                            if (message.coreCount != null && Object.hasOwnProperty.call(message, "coreCount"))
                                writer.uint32(/* id 2, wireType 0 =*/16).int64(message.coreCount);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified AcceleratorConfig message, length delimited. Does not implicitly {@link google.cloud.notebooks.v2.AcceleratorConfig.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.notebooks.v2.AcceleratorConfig
                         * @static
                         * @param {google.cloud.notebooks.v2.IAcceleratorConfig} message AcceleratorConfig message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        AcceleratorConfig.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes an AcceleratorConfig message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.notebooks.v2.AcceleratorConfig
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.notebooks.v2.AcceleratorConfig} AcceleratorConfig
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        AcceleratorConfig.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.notebooks.v2.AcceleratorConfig();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.type = reader.int32();
                                        break;
                                    }
                                case 2: {
                                        message.coreCount = reader.int64();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes an AcceleratorConfig message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.notebooks.v2.AcceleratorConfig
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.notebooks.v2.AcceleratorConfig} AcceleratorConfig
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        AcceleratorConfig.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies an AcceleratorConfig message.
                         * @function verify
                         * @memberof google.cloud.notebooks.v2.AcceleratorConfig
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        AcceleratorConfig.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.type != null && message.hasOwnProperty("type"))
                                switch (message.type) {
                                default:
                                    return "type: enum value expected";
                                case 0:
                                case 2:
                                case 3:
                                case 4:
                                case 5:
                                case 11:
                                case 12:
                                case 13:
                                case 8:
                                case 9:
                                case 10:
                                    break;
                                }
                            if (message.coreCount != null && message.hasOwnProperty("coreCount"))
                                if (!$util.isInteger(message.coreCount) && !(message.coreCount && $util.isInteger(message.coreCount.low) && $util.isInteger(message.coreCount.high)))
                                    return "coreCount: integer|Long expected";
                            return null;
                        };
    
                        /**
                         * Creates an AcceleratorConfig message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.notebooks.v2.AcceleratorConfig
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.notebooks.v2.AcceleratorConfig} AcceleratorConfig
                         */
                        AcceleratorConfig.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.notebooks.v2.AcceleratorConfig)
                                return object;
                            var message = new $root.google.cloud.notebooks.v2.AcceleratorConfig();
                            switch (object.type) {
                            default:
                                if (typeof object.type === "number") {
                                    message.type = object.type;
                                    break;
                                }
                                break;
                            case "ACCELERATOR_TYPE_UNSPECIFIED":
                            case 0:
                                message.type = 0;
                                break;
                            case "NVIDIA_TESLA_P100":
                            case 2:
                                message.type = 2;
                                break;
                            case "NVIDIA_TESLA_V100":
                            case 3:
                                message.type = 3;
                                break;
                            case "NVIDIA_TESLA_P4":
                            case 4:
                                message.type = 4;
                                break;
                            case "NVIDIA_TESLA_T4":
                            case 5:
                                message.type = 5;
                                break;
                            case "NVIDIA_TESLA_A100":
                            case 11:
                                message.type = 11;
                                break;
                            case "NVIDIA_A100_80GB":
                            case 12:
                                message.type = 12;
                                break;
                            case "NVIDIA_L4":
                            case 13:
                                message.type = 13;
                                break;
                            case "NVIDIA_TESLA_T4_VWS":
                            case 8:
                                message.type = 8;
                                break;
                            case "NVIDIA_TESLA_P100_VWS":
                            case 9:
                                message.type = 9;
                                break;
                            case "NVIDIA_TESLA_P4_VWS":
                            case 10:
                                message.type = 10;
                                break;
                            }
                            if (object.coreCount != null)
                                if ($util.Long)
                                    (message.coreCount = $util.Long.fromValue(object.coreCount)).unsigned = false;
                                else if (typeof object.coreCount === "string")
                                    message.coreCount = parseInt(object.coreCount, 10);
                                else if (typeof object.coreCount === "number")
                                    message.coreCount = object.coreCount;
                                else if (typeof object.coreCount === "object")
                                    message.coreCount = new $util.LongBits(object.coreCount.low >>> 0, object.coreCount.high >>> 0).toNumber();
                            return message;
                        };
    
                        /**
                         * Creates a plain object from an AcceleratorConfig message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.notebooks.v2.AcceleratorConfig
                         * @static
                         * @param {google.cloud.notebooks.v2.AcceleratorConfig} message AcceleratorConfig
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        AcceleratorConfig.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.type = options.enums === String ? "ACCELERATOR_TYPE_UNSPECIFIED" : 0;
                                if ($util.Long) {
                                    var long = new $util.Long(0, 0, false);
                                    object.coreCount = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                                } else
                                    object.coreCount = options.longs === String ? "0" : 0;
                            }
                            if (message.type != null && message.hasOwnProperty("type"))
                                object.type = options.enums === String ? $root.google.cloud.notebooks.v2.AcceleratorConfig.AcceleratorType[message.type] === undefined ? message.type : $root.google.cloud.notebooks.v2.AcceleratorConfig.AcceleratorType[message.type] : message.type;
                            if (message.coreCount != null && message.hasOwnProperty("coreCount"))
                                if (typeof message.coreCount === "number")
                                    object.coreCount = options.longs === String ? String(message.coreCount) : message.coreCount;
                                else
                                    object.coreCount = options.longs === String ? $util.Long.prototype.toString.call(message.coreCount) : options.longs === Number ? new $util.LongBits(message.coreCount.low >>> 0, message.coreCount.high >>> 0).toNumber() : message.coreCount;
                            return object;
                        };
    
                        /**
                         * Converts this AcceleratorConfig to JSON.
                         * @function toJSON
                         * @memberof google.cloud.notebooks.v2.AcceleratorConfig
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        AcceleratorConfig.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for AcceleratorConfig
                         * @function getTypeUrl
                         * @memberof google.cloud.notebooks.v2.AcceleratorConfig
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        AcceleratorConfig.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.notebooks.v2.AcceleratorConfig";
                        };
    
                        /**
                         * AcceleratorType enum.
                         * @name google.cloud.notebooks.v2.AcceleratorConfig.AcceleratorType
                         * @enum {number}
                         * @property {number} ACCELERATOR_TYPE_UNSPECIFIED=0 ACCELERATOR_TYPE_UNSPECIFIED value
                         * @property {number} NVIDIA_TESLA_P100=2 NVIDIA_TESLA_P100 value
                         * @property {number} NVIDIA_TESLA_V100=3 NVIDIA_TESLA_V100 value
                         * @property {number} NVIDIA_TESLA_P4=4 NVIDIA_TESLA_P4 value
                         * @property {number} NVIDIA_TESLA_T4=5 NVIDIA_TESLA_T4 value
                         * @property {number} NVIDIA_TESLA_A100=11 NVIDIA_TESLA_A100 value
                         * @property {number} NVIDIA_A100_80GB=12 NVIDIA_A100_80GB value
                         * @property {number} NVIDIA_L4=13 NVIDIA_L4 value
                         * @property {number} NVIDIA_TESLA_T4_VWS=8 NVIDIA_TESLA_T4_VWS value
                         * @property {number} NVIDIA_TESLA_P100_VWS=9 NVIDIA_TESLA_P100_VWS value
                         * @property {number} NVIDIA_TESLA_P4_VWS=10 NVIDIA_TESLA_P4_VWS value
                         */
                        AcceleratorConfig.AcceleratorType = (function() {
                            var valuesById = {}, values = Object.create(valuesById);
                            values[valuesById[0] = "ACCELERATOR_TYPE_UNSPECIFIED"] = 0;
                            values[valuesById[2] = "NVIDIA_TESLA_P100"] = 2;
                            values[valuesById[3] = "NVIDIA_TESLA_V100"] = 3;
                            values[valuesById[4] = "NVIDIA_TESLA_P4"] = 4;
                            values[valuesById[5] = "NVIDIA_TESLA_T4"] = 5;
                            values[valuesById[11] = "NVIDIA_TESLA_A100"] = 11;
                            values[valuesById[12] = "NVIDIA_A100_80GB"] = 12;
                            values[valuesById[13] = "NVIDIA_L4"] = 13;
                            values[valuesById[8] = "NVIDIA_TESLA_T4_VWS"] = 8;
                            values[valuesById[9] = "NVIDIA_TESLA_P100_VWS"] = 9;
                            values[valuesById[10] = "NVIDIA_TESLA_P4_VWS"] = 10;
                            return values;
                        })();
    
                        return AcceleratorConfig;
                    })();
    
                    v2.ShieldedInstanceConfig = (function() {
    
                        /**
                         * Properties of a ShieldedInstanceConfig.
                         * @memberof google.cloud.notebooks.v2
                         * @interface IShieldedInstanceConfig
                         * @property {boolean|null} [enableSecureBoot] ShieldedInstanceConfig enableSecureBoot
                         * @property {boolean|null} [enableVtpm] ShieldedInstanceConfig enableVtpm
                         * @property {boolean|null} [enableIntegrityMonitoring] ShieldedInstanceConfig enableIntegrityMonitoring
                         */
    
                        /**
                         * Constructs a new ShieldedInstanceConfig.
                         * @memberof google.cloud.notebooks.v2
                         * @classdesc Represents a ShieldedInstanceConfig.
                         * @implements IShieldedInstanceConfig
                         * @constructor
                         * @param {google.cloud.notebooks.v2.IShieldedInstanceConfig=} [properties] Properties to set
                         */
                        function ShieldedInstanceConfig(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * ShieldedInstanceConfig enableSecureBoot.
                         * @member {boolean} enableSecureBoot
                         * @memberof google.cloud.notebooks.v2.ShieldedInstanceConfig
                         * @instance
                         */
                        ShieldedInstanceConfig.prototype.enableSecureBoot = false;
    
                        /**
                         * ShieldedInstanceConfig enableVtpm.
                         * @member {boolean} enableVtpm
                         * @memberof google.cloud.notebooks.v2.ShieldedInstanceConfig
                         * @instance
                         */
                        ShieldedInstanceConfig.prototype.enableVtpm = false;
    
                        /**
                         * ShieldedInstanceConfig enableIntegrityMonitoring.
                         * @member {boolean} enableIntegrityMonitoring
                         * @memberof google.cloud.notebooks.v2.ShieldedInstanceConfig
                         * @instance
                         */
                        ShieldedInstanceConfig.prototype.enableIntegrityMonitoring = false;
    
                        /**
                         * Creates a new ShieldedInstanceConfig instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.notebooks.v2.ShieldedInstanceConfig
                         * @static
                         * @param {google.cloud.notebooks.v2.IShieldedInstanceConfig=} [properties] Properties to set
                         * @returns {google.cloud.notebooks.v2.ShieldedInstanceConfig} ShieldedInstanceConfig instance
                         */
                        ShieldedInstanceConfig.create = function create(properties) {
                            return new ShieldedInstanceConfig(properties);
                        };
    
                        /**
                         * Encodes the specified ShieldedInstanceConfig message. Does not implicitly {@link google.cloud.notebooks.v2.ShieldedInstanceConfig.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.notebooks.v2.ShieldedInstanceConfig
                         * @static
                         * @param {google.cloud.notebooks.v2.IShieldedInstanceConfig} message ShieldedInstanceConfig message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        ShieldedInstanceConfig.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.enableSecureBoot != null && Object.hasOwnProperty.call(message, "enableSecureBoot"))
                                writer.uint32(/* id 1, wireType 0 =*/8).bool(message.enableSecureBoot);
                            if (message.enableVtpm != null && Object.hasOwnProperty.call(message, "enableVtpm"))
                                writer.uint32(/* id 2, wireType 0 =*/16).bool(message.enableVtpm);
                            if (message.enableIntegrityMonitoring != null && Object.hasOwnProperty.call(message, "enableIntegrityMonitoring"))
                                writer.uint32(/* id 3, wireType 0 =*/24).bool(message.enableIntegrityMonitoring);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified ShieldedInstanceConfig message, length delimited. Does not implicitly {@link google.cloud.notebooks.v2.ShieldedInstanceConfig.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.notebooks.v2.ShieldedInstanceConfig
                         * @static
                         * @param {google.cloud.notebooks.v2.IShieldedInstanceConfig} message ShieldedInstanceConfig message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        ShieldedInstanceConfig.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a ShieldedInstanceConfig message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.notebooks.v2.ShieldedInstanceConfig
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.notebooks.v2.ShieldedInstanceConfig} ShieldedInstanceConfig
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        ShieldedInstanceConfig.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.notebooks.v2.ShieldedInstanceConfig();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.enableSecureBoot = reader.bool();
                                        break;
                                    }
                                case 2: {
                                        message.enableVtpm = reader.bool();
                                        break;
                                    }
                                case 3: {
                                        message.enableIntegrityMonitoring = reader.bool();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a ShieldedInstanceConfig message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.notebooks.v2.ShieldedInstanceConfig
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.notebooks.v2.ShieldedInstanceConfig} ShieldedInstanceConfig
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        ShieldedInstanceConfig.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a ShieldedInstanceConfig message.
                         * @function verify
                         * @memberof google.cloud.notebooks.v2.ShieldedInstanceConfig
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        ShieldedInstanceConfig.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.enableSecureBoot != null && message.hasOwnProperty("enableSecureBoot"))
                                if (typeof message.enableSecureBoot !== "boolean")
                                    return "enableSecureBoot: boolean expected";
                            if (message.enableVtpm != null && message.hasOwnProperty("enableVtpm"))
                                if (typeof message.enableVtpm !== "boolean")
                                    return "enableVtpm: boolean expected";
                            if (message.enableIntegrityMonitoring != null && message.hasOwnProperty("enableIntegrityMonitoring"))
                                if (typeof message.enableIntegrityMonitoring !== "boolean")
                                    return "enableIntegrityMonitoring: boolean expected";
                            return null;
                        };
    
                        /**
                         * Creates a ShieldedInstanceConfig message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.notebooks.v2.ShieldedInstanceConfig
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.notebooks.v2.ShieldedInstanceConfig} ShieldedInstanceConfig
                         */
                        ShieldedInstanceConfig.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.notebooks.v2.ShieldedInstanceConfig)
                                return object;
                            var message = new $root.google.cloud.notebooks.v2.ShieldedInstanceConfig();
                            if (object.enableSecureBoot != null)
                                message.enableSecureBoot = Boolean(object.enableSecureBoot);
                            if (object.enableVtpm != null)
                                message.enableVtpm = Boolean(object.enableVtpm);
                            if (object.enableIntegrityMonitoring != null)
                                message.enableIntegrityMonitoring = Boolean(object.enableIntegrityMonitoring);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a ShieldedInstanceConfig message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.notebooks.v2.ShieldedInstanceConfig
                         * @static
                         * @param {google.cloud.notebooks.v2.ShieldedInstanceConfig} message ShieldedInstanceConfig
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        ShieldedInstanceConfig.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.enableSecureBoot = false;
                                object.enableVtpm = false;
                                object.enableIntegrityMonitoring = false;
                            }
                            if (message.enableSecureBoot != null && message.hasOwnProperty("enableSecureBoot"))
                                object.enableSecureBoot = message.enableSecureBoot;
                            if (message.enableVtpm != null && message.hasOwnProperty("enableVtpm"))
                                object.enableVtpm = message.enableVtpm;
                            if (message.enableIntegrityMonitoring != null && message.hasOwnProperty("enableIntegrityMonitoring"))
                                object.enableIntegrityMonitoring = message.enableIntegrityMonitoring;
                            return object;
                        };
    
                        /**
                         * Converts this ShieldedInstanceConfig to JSON.
                         * @function toJSON
                         * @memberof google.cloud.notebooks.v2.ShieldedInstanceConfig
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        ShieldedInstanceConfig.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for ShieldedInstanceConfig
                         * @function getTypeUrl
                         * @memberof google.cloud.notebooks.v2.ShieldedInstanceConfig
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        ShieldedInstanceConfig.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.notebooks.v2.ShieldedInstanceConfig";
                        };
    
                        return ShieldedInstanceConfig;
                    })();
    
                    v2.GPUDriverConfig = (function() {
    
                        /**
                         * Properties of a GPUDriverConfig.
                         * @memberof google.cloud.notebooks.v2
                         * @interface IGPUDriverConfig
                         * @property {boolean|null} [enableGpuDriver] GPUDriverConfig enableGpuDriver
                         * @property {string|null} [customGpuDriverPath] GPUDriverConfig customGpuDriverPath
                         */
    
                        /**
                         * Constructs a new GPUDriverConfig.
                         * @memberof google.cloud.notebooks.v2
                         * @classdesc Represents a GPUDriverConfig.
                         * @implements IGPUDriverConfig
                         * @constructor
                         * @param {google.cloud.notebooks.v2.IGPUDriverConfig=} [properties] Properties to set
                         */
                        function GPUDriverConfig(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * GPUDriverConfig enableGpuDriver.
                         * @member {boolean} enableGpuDriver
                         * @memberof google.cloud.notebooks.v2.GPUDriverConfig
                         * @instance
                         */
                        GPUDriverConfig.prototype.enableGpuDriver = false;
    
                        /**
                         * GPUDriverConfig customGpuDriverPath.
                         * @member {string} customGpuDriverPath
                         * @memberof google.cloud.notebooks.v2.GPUDriverConfig
                         * @instance
                         */
                        GPUDriverConfig.prototype.customGpuDriverPath = "";
    
                        /**
                         * Creates a new GPUDriverConfig instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.notebooks.v2.GPUDriverConfig
                         * @static
                         * @param {google.cloud.notebooks.v2.IGPUDriverConfig=} [properties] Properties to set
                         * @returns {google.cloud.notebooks.v2.GPUDriverConfig} GPUDriverConfig instance
                         */
                        GPUDriverConfig.create = function create(properties) {
                            return new GPUDriverConfig(properties);
                        };
    
                        /**
                         * Encodes the specified GPUDriverConfig message. Does not implicitly {@link google.cloud.notebooks.v2.GPUDriverConfig.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.notebooks.v2.GPUDriverConfig
                         * @static
                         * @param {google.cloud.notebooks.v2.IGPUDriverConfig} message GPUDriverConfig message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        GPUDriverConfig.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.enableGpuDriver != null && Object.hasOwnProperty.call(message, "enableGpuDriver"))
                                writer.uint32(/* id 1, wireType 0 =*/8).bool(message.enableGpuDriver);
                            if (message.customGpuDriverPath != null && Object.hasOwnProperty.call(message, "customGpuDriverPath"))
                                writer.uint32(/* id 2, wireType 2 =*/18).string(message.customGpuDriverPath);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified GPUDriverConfig message, length delimited. Does not implicitly {@link google.cloud.notebooks.v2.GPUDriverConfig.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.notebooks.v2.GPUDriverConfig
                         * @static
                         * @param {google.cloud.notebooks.v2.IGPUDriverConfig} message GPUDriverConfig message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        GPUDriverConfig.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a GPUDriverConfig message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.notebooks.v2.GPUDriverConfig
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.notebooks.v2.GPUDriverConfig} GPUDriverConfig
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        GPUDriverConfig.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.notebooks.v2.GPUDriverConfig();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.enableGpuDriver = reader.bool();
                                        break;
                                    }
                                case 2: {
                                        message.customGpuDriverPath = reader.string();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a GPUDriverConfig message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.notebooks.v2.GPUDriverConfig
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.notebooks.v2.GPUDriverConfig} GPUDriverConfig
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        GPUDriverConfig.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a GPUDriverConfig message.
                         * @function verify
                         * @memberof google.cloud.notebooks.v2.GPUDriverConfig
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        GPUDriverConfig.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.enableGpuDriver != null && message.hasOwnProperty("enableGpuDriver"))
                                if (typeof message.enableGpuDriver !== "boolean")
                                    return "enableGpuDriver: boolean expected";
                            if (message.customGpuDriverPath != null && message.hasOwnProperty("customGpuDriverPath"))
                                if (!$util.isString(message.customGpuDriverPath))
                                    return "customGpuDriverPath: string expected";
                            return null;
                        };
    
                        /**
                         * Creates a GPUDriverConfig message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.notebooks.v2.GPUDriverConfig
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.notebooks.v2.GPUDriverConfig} GPUDriverConfig
                         */
                        GPUDriverConfig.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.notebooks.v2.GPUDriverConfig)
                                return object;
                            var message = new $root.google.cloud.notebooks.v2.GPUDriverConfig();
                            if (object.enableGpuDriver != null)
                                message.enableGpuDriver = Boolean(object.enableGpuDriver);
                            if (object.customGpuDriverPath != null)
                                message.customGpuDriverPath = String(object.customGpuDriverPath);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a GPUDriverConfig message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.notebooks.v2.GPUDriverConfig
                         * @static
                         * @param {google.cloud.notebooks.v2.GPUDriverConfig} message GPUDriverConfig
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        GPUDriverConfig.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.enableGpuDriver = false;
                                object.customGpuDriverPath = "";
                            }
                            if (message.enableGpuDriver != null && message.hasOwnProperty("enableGpuDriver"))
                                object.enableGpuDriver = message.enableGpuDriver;
                            if (message.customGpuDriverPath != null && message.hasOwnProperty("customGpuDriverPath"))
                                object.customGpuDriverPath = message.customGpuDriverPath;
                            return object;
                        };
    
                        /**
                         * Converts this GPUDriverConfig to JSON.
                         * @function toJSON
                         * @memberof google.cloud.notebooks.v2.GPUDriverConfig
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        GPUDriverConfig.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for GPUDriverConfig
                         * @function getTypeUrl
                         * @memberof google.cloud.notebooks.v2.GPUDriverConfig
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        GPUDriverConfig.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.notebooks.v2.GPUDriverConfig";
                        };
    
                        return GPUDriverConfig;
                    })();
    
                    v2.DataDisk = (function() {
    
                        /**
                         * Properties of a DataDisk.
                         * @memberof google.cloud.notebooks.v2
                         * @interface IDataDisk
                         * @property {number|Long|null} [diskSizeGb] DataDisk diskSizeGb
                         * @property {google.cloud.notebooks.v2.DiskType|null} [diskType] DataDisk diskType
                         * @property {google.cloud.notebooks.v2.DiskEncryption|null} [diskEncryption] DataDisk diskEncryption
                         * @property {string|null} [kmsKey] DataDisk kmsKey
                         */
    
                        /**
                         * Constructs a new DataDisk.
                         * @memberof google.cloud.notebooks.v2
                         * @classdesc Represents a DataDisk.
                         * @implements IDataDisk
                         * @constructor
                         * @param {google.cloud.notebooks.v2.IDataDisk=} [properties] Properties to set
                         */
                        function DataDisk(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * DataDisk diskSizeGb.
                         * @member {number|Long} diskSizeGb
                         * @memberof google.cloud.notebooks.v2.DataDisk
                         * @instance
                         */
                        DataDisk.prototype.diskSizeGb = $util.Long ? $util.Long.fromBits(0,0,false) : 0;
    
                        /**
                         * DataDisk diskType.
                         * @member {google.cloud.notebooks.v2.DiskType} diskType
                         * @memberof google.cloud.notebooks.v2.DataDisk
                         * @instance
                         */
                        DataDisk.prototype.diskType = 0;
    
                        /**
                         * DataDisk diskEncryption.
                         * @member {google.cloud.notebooks.v2.DiskEncryption} diskEncryption
                         * @memberof google.cloud.notebooks.v2.DataDisk
                         * @instance
                         */
                        DataDisk.prototype.diskEncryption = 0;
    
                        /**
                         * DataDisk kmsKey.
                         * @member {string} kmsKey
                         * @memberof google.cloud.notebooks.v2.DataDisk
                         * @instance
                         */
                        DataDisk.prototype.kmsKey = "";
    
                        /**
                         * Creates a new DataDisk instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.notebooks.v2.DataDisk
                         * @static
                         * @param {google.cloud.notebooks.v2.IDataDisk=} [properties] Properties to set
                         * @returns {google.cloud.notebooks.v2.DataDisk} DataDisk instance
                         */
                        DataDisk.create = function create(properties) {
                            return new DataDisk(properties);
                        };
    
                        /**
                         * Encodes the specified DataDisk message. Does not implicitly {@link google.cloud.notebooks.v2.DataDisk.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.notebooks.v2.DataDisk
                         * @static
                         * @param {google.cloud.notebooks.v2.IDataDisk} message DataDisk message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        DataDisk.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.diskSizeGb != null && Object.hasOwnProperty.call(message, "diskSizeGb"))
                                writer.uint32(/* id 1, wireType 0 =*/8).int64(message.diskSizeGb);
                            if (message.diskType != null && Object.hasOwnProperty.call(message, "diskType"))
                                writer.uint32(/* id 2, wireType 0 =*/16).int32(message.diskType);
                            if (message.diskEncryption != null && Object.hasOwnProperty.call(message, "diskEncryption"))
                                writer.uint32(/* id 5, wireType 0 =*/40).int32(message.diskEncryption);
                            if (message.kmsKey != null && Object.hasOwnProperty.call(message, "kmsKey"))
                                writer.uint32(/* id 6, wireType 2 =*/50).string(message.kmsKey);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified DataDisk message, length delimited. Does not implicitly {@link google.cloud.notebooks.v2.DataDisk.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.notebooks.v2.DataDisk
                         * @static
                         * @param {google.cloud.notebooks.v2.IDataDisk} message DataDisk message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        DataDisk.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a DataDisk message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.notebooks.v2.DataDisk
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.notebooks.v2.DataDisk} DataDisk
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        DataDisk.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.notebooks.v2.DataDisk();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.diskSizeGb = reader.int64();
                                        break;
                                    }
                                case 2: {
                                        message.diskType = reader.int32();
                                        break;
                                    }
                                case 5: {
                                        message.diskEncryption = reader.int32();
                                        break;
                                    }
                                case 6: {
                                        message.kmsKey = reader.string();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a DataDisk message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.notebooks.v2.DataDisk
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.notebooks.v2.DataDisk} DataDisk
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        DataDisk.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a DataDisk message.
                         * @function verify
                         * @memberof google.cloud.notebooks.v2.DataDisk
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        DataDisk.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.diskSizeGb != null && message.hasOwnProperty("diskSizeGb"))
                                if (!$util.isInteger(message.diskSizeGb) && !(message.diskSizeGb && $util.isInteger(message.diskSizeGb.low) && $util.isInteger(message.diskSizeGb.high)))
                                    return "diskSizeGb: integer|Long expected";
                            if (message.diskType != null && message.hasOwnProperty("diskType"))
                                switch (message.diskType) {
                                default:
                                    return "diskType: enum value expected";
                                case 0:
                                case 1:
                                case 2:
                                case 3:
                                case 4:
                                    break;
                                }
                            if (message.diskEncryption != null && message.hasOwnProperty("diskEncryption"))
                                switch (message.diskEncryption) {
                                default:
                                    return "diskEncryption: enum value expected";
                                case 0:
                                case 1:
                                case 2:
                                    break;
                                }
                            if (message.kmsKey != null && message.hasOwnProperty("kmsKey"))
                                if (!$util.isString(message.kmsKey))
                                    return "kmsKey: string expected";
                            return null;
                        };
    
                        /**
                         * Creates a DataDisk message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.notebooks.v2.DataDisk
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.notebooks.v2.DataDisk} DataDisk
                         */
                        DataDisk.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.notebooks.v2.DataDisk)
                                return object;
                            var message = new $root.google.cloud.notebooks.v2.DataDisk();
                            if (object.diskSizeGb != null)
                                if ($util.Long)
                                    (message.diskSizeGb = $util.Long.fromValue(object.diskSizeGb)).unsigned = false;
                                else if (typeof object.diskSizeGb === "string")
                                    message.diskSizeGb = parseInt(object.diskSizeGb, 10);
                                else if (typeof object.diskSizeGb === "number")
                                    message.diskSizeGb = object.diskSizeGb;
                                else if (typeof object.diskSizeGb === "object")
                                    message.diskSizeGb = new $util.LongBits(object.diskSizeGb.low >>> 0, object.diskSizeGb.high >>> 0).toNumber();
                            switch (object.diskType) {
                            default:
                                if (typeof object.diskType === "number") {
                                    message.diskType = object.diskType;
                                    break;
                                }
                                break;
                            case "DISK_TYPE_UNSPECIFIED":
                            case 0:
                                message.diskType = 0;
                                break;
                            case "PD_STANDARD":
                            case 1:
                                message.diskType = 1;
                                break;
                            case "PD_SSD":
                            case 2:
                                message.diskType = 2;
                                break;
                            case "PD_BALANCED":
                            case 3:
                                message.diskType = 3;
                                break;
                            case "PD_EXTREME":
                            case 4:
                                message.diskType = 4;
                                break;
                            }
                            switch (object.diskEncryption) {
                            default:
                                if (typeof object.diskEncryption === "number") {
                                    message.diskEncryption = object.diskEncryption;
                                    break;
                                }
                                break;
                            case "DISK_ENCRYPTION_UNSPECIFIED":
                            case 0:
                                message.diskEncryption = 0;
                                break;
                            case "GMEK":
                            case 1:
                                message.diskEncryption = 1;
                                break;
                            case "CMEK":
                            case 2:
                                message.diskEncryption = 2;
                                break;
                            }
                            if (object.kmsKey != null)
                                message.kmsKey = String(object.kmsKey);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a DataDisk message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.notebooks.v2.DataDisk
                         * @static
                         * @param {google.cloud.notebooks.v2.DataDisk} message DataDisk
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        DataDisk.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                if ($util.Long) {
                                    var long = new $util.Long(0, 0, false);
                                    object.diskSizeGb = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                                } else
                                    object.diskSizeGb = options.longs === String ? "0" : 0;
                                object.diskType = options.enums === String ? "DISK_TYPE_UNSPECIFIED" : 0;
                                object.diskEncryption = options.enums === String ? "DISK_ENCRYPTION_UNSPECIFIED" : 0;
                                object.kmsKey = "";
                            }
                            if (message.diskSizeGb != null && message.hasOwnProperty("diskSizeGb"))
                                if (typeof message.diskSizeGb === "number")
                                    object.diskSizeGb = options.longs === String ? String(message.diskSizeGb) : message.diskSizeGb;
                                else
                                    object.diskSizeGb = options.longs === String ? $util.Long.prototype.toString.call(message.diskSizeGb) : options.longs === Number ? new $util.LongBits(message.diskSizeGb.low >>> 0, message.diskSizeGb.high >>> 0).toNumber() : message.diskSizeGb;
                            if (message.diskType != null && message.hasOwnProperty("diskType"))
                                object.diskType = options.enums === String ? $root.google.cloud.notebooks.v2.DiskType[message.diskType] === undefined ? message.diskType : $root.google.cloud.notebooks.v2.DiskType[message.diskType] : message.diskType;
                            if (message.diskEncryption != null && message.hasOwnProperty("diskEncryption"))
                                object.diskEncryption = options.enums === String ? $root.google.cloud.notebooks.v2.DiskEncryption[message.diskEncryption] === undefined ? message.diskEncryption : $root.google.cloud.notebooks.v2.DiskEncryption[message.diskEncryption] : message.diskEncryption;
                            if (message.kmsKey != null && message.hasOwnProperty("kmsKey"))
                                object.kmsKey = message.kmsKey;
                            return object;
                        };
    
                        /**
                         * Converts this DataDisk to JSON.
                         * @function toJSON
                         * @memberof google.cloud.notebooks.v2.DataDisk
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        DataDisk.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for DataDisk
                         * @function getTypeUrl
                         * @memberof google.cloud.notebooks.v2.DataDisk
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        DataDisk.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.notebooks.v2.DataDisk";
                        };
    
                        return DataDisk;
                    })();
    
                    v2.BootDisk = (function() {
    
                        /**
                         * Properties of a BootDisk.
                         * @memberof google.cloud.notebooks.v2
                         * @interface IBootDisk
                         * @property {number|Long|null} [diskSizeGb] BootDisk diskSizeGb
                         * @property {google.cloud.notebooks.v2.DiskType|null} [diskType] BootDisk diskType
                         * @property {google.cloud.notebooks.v2.DiskEncryption|null} [diskEncryption] BootDisk diskEncryption
                         * @property {string|null} [kmsKey] BootDisk kmsKey
                         */
    
                        /**
                         * Constructs a new BootDisk.
                         * @memberof google.cloud.notebooks.v2
                         * @classdesc Represents a BootDisk.
                         * @implements IBootDisk
                         * @constructor
                         * @param {google.cloud.notebooks.v2.IBootDisk=} [properties] Properties to set
                         */
                        function BootDisk(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * BootDisk diskSizeGb.
                         * @member {number|Long} diskSizeGb
                         * @memberof google.cloud.notebooks.v2.BootDisk
                         * @instance
                         */
                        BootDisk.prototype.diskSizeGb = $util.Long ? $util.Long.fromBits(0,0,false) : 0;
    
                        /**
                         * BootDisk diskType.
                         * @member {google.cloud.notebooks.v2.DiskType} diskType
                         * @memberof google.cloud.notebooks.v2.BootDisk
                         * @instance
                         */
                        BootDisk.prototype.diskType = 0;
    
                        /**
                         * BootDisk diskEncryption.
                         * @member {google.cloud.notebooks.v2.DiskEncryption} diskEncryption
                         * @memberof google.cloud.notebooks.v2.BootDisk
                         * @instance
                         */
                        BootDisk.prototype.diskEncryption = 0;
    
                        /**
                         * BootDisk kmsKey.
                         * @member {string} kmsKey
                         * @memberof google.cloud.notebooks.v2.BootDisk
                         * @instance
                         */
                        BootDisk.prototype.kmsKey = "";
    
                        /**
                         * Creates a new BootDisk instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.notebooks.v2.BootDisk
                         * @static
                         * @param {google.cloud.notebooks.v2.IBootDisk=} [properties] Properties to set
                         * @returns {google.cloud.notebooks.v2.BootDisk} BootDisk instance
                         */
                        BootDisk.create = function create(properties) {
                            return new BootDisk(properties);
                        };
    
                        /**
                         * Encodes the specified BootDisk message. Does not implicitly {@link google.cloud.notebooks.v2.BootDisk.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.notebooks.v2.BootDisk
                         * @static
                         * @param {google.cloud.notebooks.v2.IBootDisk} message BootDisk message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        BootDisk.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.diskSizeGb != null && Object.hasOwnProperty.call(message, "diskSizeGb"))
                                writer.uint32(/* id 1, wireType 0 =*/8).int64(message.diskSizeGb);
                            if (message.diskType != null && Object.hasOwnProperty.call(message, "diskType"))
                                writer.uint32(/* id 2, wireType 0 =*/16).int32(message.diskType);
                            if (message.diskEncryption != null && Object.hasOwnProperty.call(message, "diskEncryption"))
                                writer.uint32(/* id 3, wireType 0 =*/24).int32(message.diskEncryption);
                            if (message.kmsKey != null && Object.hasOwnProperty.call(message, "kmsKey"))
                                writer.uint32(/* id 4, wireType 2 =*/34).string(message.kmsKey);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified BootDisk message, length delimited. Does not implicitly {@link google.cloud.notebooks.v2.BootDisk.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.notebooks.v2.BootDisk
                         * @static
                         * @param {google.cloud.notebooks.v2.IBootDisk} message BootDisk message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        BootDisk.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a BootDisk message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.notebooks.v2.BootDisk
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.notebooks.v2.BootDisk} BootDisk
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        BootDisk.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.notebooks.v2.BootDisk();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.diskSizeGb = reader.int64();
                                        break;
                                    }
                                case 2: {
                                        message.diskType = reader.int32();
                                        break;
                                    }
                                case 3: {
                                        message.diskEncryption = reader.int32();
                                        break;
                                    }
                                case 4: {
                                        message.kmsKey = reader.string();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a BootDisk message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.notebooks.v2.BootDisk
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.notebooks.v2.BootDisk} BootDisk
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        BootDisk.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a BootDisk message.
                         * @function verify
                         * @memberof google.cloud.notebooks.v2.BootDisk
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        BootDisk.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.diskSizeGb != null && message.hasOwnProperty("diskSizeGb"))
                                if (!$util.isInteger(message.diskSizeGb) && !(message.diskSizeGb && $util.isInteger(message.diskSizeGb.low) && $util.isInteger(message.diskSizeGb.high)))
                                    return "diskSizeGb: integer|Long expected";
                            if (message.diskType != null && message.hasOwnProperty("diskType"))
                                switch (message.diskType) {
                                default:
                                    return "diskType: enum value expected";
                                case 0:
                                case 1:
                                case 2:
                                case 3:
                                case 4:
                                    break;
                                }
                            if (message.diskEncryption != null && message.hasOwnProperty("diskEncryption"))
                                switch (message.diskEncryption) {
                                default:
                                    return "diskEncryption: enum value expected";
                                case 0:
                                case 1:
                                case 2:
                                    break;
                                }
                            if (message.kmsKey != null && message.hasOwnProperty("kmsKey"))
                                if (!$util.isString(message.kmsKey))
                                    return "kmsKey: string expected";
                            return null;
                        };
    
                        /**
                         * Creates a BootDisk message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.notebooks.v2.BootDisk
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.notebooks.v2.BootDisk} BootDisk
                         */
                        BootDisk.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.notebooks.v2.BootDisk)
                                return object;
                            var message = new $root.google.cloud.notebooks.v2.BootDisk();
                            if (object.diskSizeGb != null)
                                if ($util.Long)
                                    (message.diskSizeGb = $util.Long.fromValue(object.diskSizeGb)).unsigned = false;
                                else if (typeof object.diskSizeGb === "string")
                                    message.diskSizeGb = parseInt(object.diskSizeGb, 10);
                                else if (typeof object.diskSizeGb === "number")
                                    message.diskSizeGb = object.diskSizeGb;
                                else if (typeof object.diskSizeGb === "object")
                                    message.diskSizeGb = new $util.LongBits(object.diskSizeGb.low >>> 0, object.diskSizeGb.high >>> 0).toNumber();
                            switch (object.diskType) {
                            default:
                                if (typeof object.diskType === "number") {
                                    message.diskType = object.diskType;
                                    break;
                                }
                                break;
                            case "DISK_TYPE_UNSPECIFIED":
                            case 0:
                                message.diskType = 0;
                                break;
                            case "PD_STANDARD":
                            case 1:
                                message.diskType = 1;
                                break;
                            case "PD_SSD":
                            case 2:
                                message.diskType = 2;
                                break;
                            case "PD_BALANCED":
                            case 3:
                                message.diskType = 3;
                                break;
                            case "PD_EXTREME":
                            case 4:
                                message.diskType = 4;
                                break;
                            }
                            switch (object.diskEncryption) {
                            default:
                                if (typeof object.diskEncryption === "number") {
                                    message.diskEncryption = object.diskEncryption;
                                    break;
                                }
                                break;
                            case "DISK_ENCRYPTION_UNSPECIFIED":
                            case 0:
                                message.diskEncryption = 0;
                                break;
                            case "GMEK":
                            case 1:
                                message.diskEncryption = 1;
                                break;
                            case "CMEK":
                            case 2:
                                message.diskEncryption = 2;
                                break;
                            }
                            if (object.kmsKey != null)
                                message.kmsKey = String(object.kmsKey);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a BootDisk message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.notebooks.v2.BootDisk
                         * @static
                         * @param {google.cloud.notebooks.v2.BootDisk} message BootDisk
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        BootDisk.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                if ($util.Long) {
                                    var long = new $util.Long(0, 0, false);
                                    object.diskSizeGb = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                                } else
                                    object.diskSizeGb = options.longs === String ? "0" : 0;
                                object.diskType = options.enums === String ? "DISK_TYPE_UNSPECIFIED" : 0;
                                object.diskEncryption = options.enums === String ? "DISK_ENCRYPTION_UNSPECIFIED" : 0;
                                object.kmsKey = "";
                            }
                            if (message.diskSizeGb != null && message.hasOwnProperty("diskSizeGb"))
                                if (typeof message.diskSizeGb === "number")
                                    object.diskSizeGb = options.longs === String ? String(message.diskSizeGb) : message.diskSizeGb;
                                else
                                    object.diskSizeGb = options.longs === String ? $util.Long.prototype.toString.call(message.diskSizeGb) : options.longs === Number ? new $util.LongBits(message.diskSizeGb.low >>> 0, message.diskSizeGb.high >>> 0).toNumber() : message.diskSizeGb;
                            if (message.diskType != null && message.hasOwnProperty("diskType"))
                                object.diskType = options.enums === String ? $root.google.cloud.notebooks.v2.DiskType[message.diskType] === undefined ? message.diskType : $root.google.cloud.notebooks.v2.DiskType[message.diskType] : message.diskType;
                            if (message.diskEncryption != null && message.hasOwnProperty("diskEncryption"))
                                object.diskEncryption = options.enums === String ? $root.google.cloud.notebooks.v2.DiskEncryption[message.diskEncryption] === undefined ? message.diskEncryption : $root.google.cloud.notebooks.v2.DiskEncryption[message.diskEncryption] : message.diskEncryption;
                            if (message.kmsKey != null && message.hasOwnProperty("kmsKey"))
                                object.kmsKey = message.kmsKey;
                            return object;
                        };
    
                        /**
                         * Converts this BootDisk to JSON.
                         * @function toJSON
                         * @memberof google.cloud.notebooks.v2.BootDisk
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        BootDisk.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for BootDisk
                         * @function getTypeUrl
                         * @memberof google.cloud.notebooks.v2.BootDisk
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        BootDisk.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.notebooks.v2.BootDisk";
                        };
    
                        return BootDisk;
                    })();
    
                    v2.ServiceAccount = (function() {
    
                        /**
                         * Properties of a ServiceAccount.
                         * @memberof google.cloud.notebooks.v2
                         * @interface IServiceAccount
                         * @property {string|null} [email] ServiceAccount email
                         * @property {Array.<string>|null} [scopes] ServiceAccount scopes
                         */
    
                        /**
                         * Constructs a new ServiceAccount.
                         * @memberof google.cloud.notebooks.v2
                         * @classdesc Represents a ServiceAccount.
                         * @implements IServiceAccount
                         * @constructor
                         * @param {google.cloud.notebooks.v2.IServiceAccount=} [properties] Properties to set
                         */
                        function ServiceAccount(properties) {
                            this.scopes = [];
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * ServiceAccount email.
                         * @member {string} email
                         * @memberof google.cloud.notebooks.v2.ServiceAccount
                         * @instance
                         */
                        ServiceAccount.prototype.email = "";
    
                        /**
                         * ServiceAccount scopes.
                         * @member {Array.<string>} scopes
                         * @memberof google.cloud.notebooks.v2.ServiceAccount
                         * @instance
                         */
                        ServiceAccount.prototype.scopes = $util.emptyArray;
    
                        /**
                         * Creates a new ServiceAccount instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.notebooks.v2.ServiceAccount
                         * @static
                         * @param {google.cloud.notebooks.v2.IServiceAccount=} [properties] Properties to set
                         * @returns {google.cloud.notebooks.v2.ServiceAccount} ServiceAccount instance
                         */
                        ServiceAccount.create = function create(properties) {
                            return new ServiceAccount(properties);
                        };
    
                        /**
                         * Encodes the specified ServiceAccount message. Does not implicitly {@link google.cloud.notebooks.v2.ServiceAccount.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.notebooks.v2.ServiceAccount
                         * @static
                         * @param {google.cloud.notebooks.v2.IServiceAccount} message ServiceAccount message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        ServiceAccount.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.email != null && Object.hasOwnProperty.call(message, "email"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.email);
                            if (message.scopes != null && message.scopes.length)
                                for (var i = 0; i < message.scopes.length; ++i)
                                    writer.uint32(/* id 2, wireType 2 =*/18).string(message.scopes[i]);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified ServiceAccount message, length delimited. Does not implicitly {@link google.cloud.notebooks.v2.ServiceAccount.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.notebooks.v2.ServiceAccount
                         * @static
                         * @param {google.cloud.notebooks.v2.IServiceAccount} message ServiceAccount message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        ServiceAccount.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a ServiceAccount message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.notebooks.v2.ServiceAccount
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.notebooks.v2.ServiceAccount} ServiceAccount
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        ServiceAccount.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.notebooks.v2.ServiceAccount();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.email = reader.string();
                                        break;
                                    }
                                case 2: {
                                        if (!(message.scopes && message.scopes.length))
                                            message.scopes = [];
                                        message.scopes.push(reader.string());
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a ServiceAccount message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.notebooks.v2.ServiceAccount
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.notebooks.v2.ServiceAccount} ServiceAccount
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        ServiceAccount.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a ServiceAccount message.
                         * @function verify
                         * @memberof google.cloud.notebooks.v2.ServiceAccount
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        ServiceAccount.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.email != null && message.hasOwnProperty("email"))
                                if (!$util.isString(message.email))
                                    return "email: string expected";
                            if (message.scopes != null && message.hasOwnProperty("scopes")) {
                                if (!Array.isArray(message.scopes))
                                    return "scopes: array expected";
                                for (var i = 0; i < message.scopes.length; ++i)
                                    if (!$util.isString(message.scopes[i]))
                                        return "scopes: string[] expected";
                            }
                            return null;
                        };
    
                        /**
                         * Creates a ServiceAccount message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.notebooks.v2.ServiceAccount
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.notebooks.v2.ServiceAccount} ServiceAccount
                         */
                        ServiceAccount.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.notebooks.v2.ServiceAccount)
                                return object;
                            var message = new $root.google.cloud.notebooks.v2.ServiceAccount();
                            if (object.email != null)
                                message.email = String(object.email);
                            if (object.scopes) {
                                if (!Array.isArray(object.scopes))
                                    throw TypeError(".google.cloud.notebooks.v2.ServiceAccount.scopes: array expected");
                                message.scopes = [];
                                for (var i = 0; i < object.scopes.length; ++i)
                                    message.scopes[i] = String(object.scopes[i]);
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a ServiceAccount message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.notebooks.v2.ServiceAccount
                         * @static
                         * @param {google.cloud.notebooks.v2.ServiceAccount} message ServiceAccount
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        ServiceAccount.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.arrays || options.defaults)
                                object.scopes = [];
                            if (options.defaults)
                                object.email = "";
                            if (message.email != null && message.hasOwnProperty("email"))
                                object.email = message.email;
                            if (message.scopes && message.scopes.length) {
                                object.scopes = [];
                                for (var j = 0; j < message.scopes.length; ++j)
                                    object.scopes[j] = message.scopes[j];
                            }
                            return object;
                        };
    
                        /**
                         * Converts this ServiceAccount to JSON.
                         * @function toJSON
                         * @memberof google.cloud.notebooks.v2.ServiceAccount
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        ServiceAccount.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for ServiceAccount
                         * @function getTypeUrl
                         * @memberof google.cloud.notebooks.v2.ServiceAccount
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        ServiceAccount.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.notebooks.v2.ServiceAccount";
                        };
    
                        return ServiceAccount;
                    })();
    
                    v2.GceSetup = (function() {
    
                        /**
                         * Properties of a GceSetup.
                         * @memberof google.cloud.notebooks.v2
                         * @interface IGceSetup
                         * @property {string|null} [machineType] GceSetup machineType
                         * @property {Array.<google.cloud.notebooks.v2.IAcceleratorConfig>|null} [acceleratorConfigs] GceSetup acceleratorConfigs
                         * @property {Array.<google.cloud.notebooks.v2.IServiceAccount>|null} [serviceAccounts] GceSetup serviceAccounts
                         * @property {google.cloud.notebooks.v2.IVmImage|null} [vmImage] GceSetup vmImage
                         * @property {google.cloud.notebooks.v2.IContainerImage|null} [containerImage] GceSetup containerImage
                         * @property {google.cloud.notebooks.v2.IBootDisk|null} [bootDisk] GceSetup bootDisk
                         * @property {Array.<google.cloud.notebooks.v2.IDataDisk>|null} [dataDisks] GceSetup dataDisks
                         * @property {google.cloud.notebooks.v2.IShieldedInstanceConfig|null} [shieldedInstanceConfig] GceSetup shieldedInstanceConfig
                         * @property {Array.<google.cloud.notebooks.v2.INetworkInterface>|null} [networkInterfaces] GceSetup networkInterfaces
                         * @property {boolean|null} [disablePublicIp] GceSetup disablePublicIp
                         * @property {Array.<string>|null} [tags] GceSetup tags
                         * @property {Object.<string,string>|null} [metadata] GceSetup metadata
                         * @property {boolean|null} [enableIpForwarding] GceSetup enableIpForwarding
                         * @property {google.cloud.notebooks.v2.IGPUDriverConfig|null} [gpuDriverConfig] GceSetup gpuDriverConfig
                         */
    
                        /**
                         * Constructs a new GceSetup.
                         * @memberof google.cloud.notebooks.v2
                         * @classdesc Represents a GceSetup.
                         * @implements IGceSetup
                         * @constructor
                         * @param {google.cloud.notebooks.v2.IGceSetup=} [properties] Properties to set
                         */
                        function GceSetup(properties) {
                            this.acceleratorConfigs = [];
                            this.serviceAccounts = [];
                            this.dataDisks = [];
                            this.networkInterfaces = [];
                            this.tags = [];
                            this.metadata = {};
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * GceSetup machineType.
                         * @member {string} machineType
                         * @memberof google.cloud.notebooks.v2.GceSetup
                         * @instance
                         */
                        GceSetup.prototype.machineType = "";
    
                        /**
                         * GceSetup acceleratorConfigs.
                         * @member {Array.<google.cloud.notebooks.v2.IAcceleratorConfig>} acceleratorConfigs
                         * @memberof google.cloud.notebooks.v2.GceSetup
                         * @instance
                         */
                        GceSetup.prototype.acceleratorConfigs = $util.emptyArray;
    
                        /**
                         * GceSetup serviceAccounts.
                         * @member {Array.<google.cloud.notebooks.v2.IServiceAccount>} serviceAccounts
                         * @memberof google.cloud.notebooks.v2.GceSetup
                         * @instance
                         */
                        GceSetup.prototype.serviceAccounts = $util.emptyArray;
    
                        /**
                         * GceSetup vmImage.
                         * @member {google.cloud.notebooks.v2.IVmImage|null|undefined} vmImage
                         * @memberof google.cloud.notebooks.v2.GceSetup
                         * @instance
                         */
                        GceSetup.prototype.vmImage = null;
    
                        /**
                         * GceSetup containerImage.
                         * @member {google.cloud.notebooks.v2.IContainerImage|null|undefined} containerImage
                         * @memberof google.cloud.notebooks.v2.GceSetup
                         * @instance
                         */
                        GceSetup.prototype.containerImage = null;
    
                        /**
                         * GceSetup bootDisk.
                         * @member {google.cloud.notebooks.v2.IBootDisk|null|undefined} bootDisk
                         * @memberof google.cloud.notebooks.v2.GceSetup
                         * @instance
                         */
                        GceSetup.prototype.bootDisk = null;
    
                        /**
                         * GceSetup dataDisks.
                         * @member {Array.<google.cloud.notebooks.v2.IDataDisk>} dataDisks
                         * @memberof google.cloud.notebooks.v2.GceSetup
                         * @instance
                         */
                        GceSetup.prototype.dataDisks = $util.emptyArray;
    
                        /**
                         * GceSetup shieldedInstanceConfig.
                         * @member {google.cloud.notebooks.v2.IShieldedInstanceConfig|null|undefined} shieldedInstanceConfig
                         * @memberof google.cloud.notebooks.v2.GceSetup
                         * @instance
                         */
                        GceSetup.prototype.shieldedInstanceConfig = null;
    
                        /**
                         * GceSetup networkInterfaces.
                         * @member {Array.<google.cloud.notebooks.v2.INetworkInterface>} networkInterfaces
                         * @memberof google.cloud.notebooks.v2.GceSetup
                         * @instance
                         */
                        GceSetup.prototype.networkInterfaces = $util.emptyArray;
    
                        /**
                         * GceSetup disablePublicIp.
                         * @member {boolean} disablePublicIp
                         * @memberof google.cloud.notebooks.v2.GceSetup
                         * @instance
                         */
                        GceSetup.prototype.disablePublicIp = false;
    
                        /**
                         * GceSetup tags.
                         * @member {Array.<string>} tags
                         * @memberof google.cloud.notebooks.v2.GceSetup
                         * @instance
                         */
                        GceSetup.prototype.tags = $util.emptyArray;
    
                        /**
                         * GceSetup metadata.
                         * @member {Object.<string,string>} metadata
                         * @memberof google.cloud.notebooks.v2.GceSetup
                         * @instance
                         */
                        GceSetup.prototype.metadata = $util.emptyObject;
    
                        /**
                         * GceSetup enableIpForwarding.
                         * @member {boolean} enableIpForwarding
                         * @memberof google.cloud.notebooks.v2.GceSetup
                         * @instance
                         */
                        GceSetup.prototype.enableIpForwarding = false;
    
                        /**
                         * GceSetup gpuDriverConfig.
                         * @member {google.cloud.notebooks.v2.IGPUDriverConfig|null|undefined} gpuDriverConfig
                         * @memberof google.cloud.notebooks.v2.GceSetup
                         * @instance
                         */
                        GceSetup.prototype.gpuDriverConfig = null;
    
                        // OneOf field names bound to virtual getters and setters
                        var $oneOfFields;
    
                        /**
                         * GceSetup image.
                         * @member {"vmImage"|"containerImage"|undefined} image
                         * @memberof google.cloud.notebooks.v2.GceSetup
                         * @instance
                         */
                        Object.defineProperty(GceSetup.prototype, "image", {
                            get: $util.oneOfGetter($oneOfFields = ["vmImage", "containerImage"]),
                            set: $util.oneOfSetter($oneOfFields)
                        });
    
                        /**
                         * Creates a new GceSetup instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.notebooks.v2.GceSetup
                         * @static
                         * @param {google.cloud.notebooks.v2.IGceSetup=} [properties] Properties to set
                         * @returns {google.cloud.notebooks.v2.GceSetup} GceSetup instance
                         */
                        GceSetup.create = function create(properties) {
                            return new GceSetup(properties);
                        };
    
                        /**
                         * Encodes the specified GceSetup message. Does not implicitly {@link google.cloud.notebooks.v2.GceSetup.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.notebooks.v2.GceSetup
                         * @static
                         * @param {google.cloud.notebooks.v2.IGceSetup} message GceSetup message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        GceSetup.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.machineType != null && Object.hasOwnProperty.call(message, "machineType"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.machineType);
                            if (message.acceleratorConfigs != null && message.acceleratorConfigs.length)
                                for (var i = 0; i < message.acceleratorConfigs.length; ++i)
                                    $root.google.cloud.notebooks.v2.AcceleratorConfig.encode(message.acceleratorConfigs[i], writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                            if (message.serviceAccounts != null && message.serviceAccounts.length)
                                for (var i = 0; i < message.serviceAccounts.length; ++i)
                                    $root.google.cloud.notebooks.v2.ServiceAccount.encode(message.serviceAccounts[i], writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();
                            if (message.vmImage != null && Object.hasOwnProperty.call(message, "vmImage"))
                                $root.google.cloud.notebooks.v2.VmImage.encode(message.vmImage, writer.uint32(/* id 4, wireType 2 =*/34).fork()).ldelim();
                            if (message.containerImage != null && Object.hasOwnProperty.call(message, "containerImage"))
                                $root.google.cloud.notebooks.v2.ContainerImage.encode(message.containerImage, writer.uint32(/* id 5, wireType 2 =*/42).fork()).ldelim();
                            if (message.bootDisk != null && Object.hasOwnProperty.call(message, "bootDisk"))
                                $root.google.cloud.notebooks.v2.BootDisk.encode(message.bootDisk, writer.uint32(/* id 6, wireType 2 =*/50).fork()).ldelim();
                            if (message.dataDisks != null && message.dataDisks.length)
                                for (var i = 0; i < message.dataDisks.length; ++i)
                                    $root.google.cloud.notebooks.v2.DataDisk.encode(message.dataDisks[i], writer.uint32(/* id 7, wireType 2 =*/58).fork()).ldelim();
                            if (message.shieldedInstanceConfig != null && Object.hasOwnProperty.call(message, "shieldedInstanceConfig"))
                                $root.google.cloud.notebooks.v2.ShieldedInstanceConfig.encode(message.shieldedInstanceConfig, writer.uint32(/* id 8, wireType 2 =*/66).fork()).ldelim();
                            if (message.networkInterfaces != null && message.networkInterfaces.length)
                                for (var i = 0; i < message.networkInterfaces.length; ++i)
                                    $root.google.cloud.notebooks.v2.NetworkInterface.encode(message.networkInterfaces[i], writer.uint32(/* id 9, wireType 2 =*/74).fork()).ldelim();
                            if (message.disablePublicIp != null && Object.hasOwnProperty.call(message, "disablePublicIp"))
                                writer.uint32(/* id 10, wireType 0 =*/80).bool(message.disablePublicIp);
                            if (message.tags != null && message.tags.length)
                                for (var i = 0; i < message.tags.length; ++i)
                                    writer.uint32(/* id 11, wireType 2 =*/90).string(message.tags[i]);
                            if (message.metadata != null && Object.hasOwnProperty.call(message, "metadata"))
                                for (var keys = Object.keys(message.metadata), i = 0; i < keys.length; ++i)
                                    writer.uint32(/* id 12, wireType 2 =*/98).fork().uint32(/* id 1, wireType 2 =*/10).string(keys[i]).uint32(/* id 2, wireType 2 =*/18).string(message.metadata[keys[i]]).ldelim();
                            if (message.enableIpForwarding != null && Object.hasOwnProperty.call(message, "enableIpForwarding"))
                                writer.uint32(/* id 13, wireType 0 =*/104).bool(message.enableIpForwarding);
                            if (message.gpuDriverConfig != null && Object.hasOwnProperty.call(message, "gpuDriverConfig"))
                                $root.google.cloud.notebooks.v2.GPUDriverConfig.encode(message.gpuDriverConfig, writer.uint32(/* id 14, wireType 2 =*/114).fork()).ldelim();
                            return writer;
                        };
    
                        /**
                         * Encodes the specified GceSetup message, length delimited. Does not implicitly {@link google.cloud.notebooks.v2.GceSetup.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.notebooks.v2.GceSetup
                         * @static
                         * @param {google.cloud.notebooks.v2.IGceSetup} message GceSetup message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        GceSetup.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a GceSetup message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.notebooks.v2.GceSetup
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.notebooks.v2.GceSetup} GceSetup
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        GceSetup.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.notebooks.v2.GceSetup(), key, value;
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.machineType = reader.string();
                                        break;
                                    }
                                case 2: {
                                        if (!(message.acceleratorConfigs && message.acceleratorConfigs.length))
                                            message.acceleratorConfigs = [];
                                        message.acceleratorConfigs.push($root.google.cloud.notebooks.v2.AcceleratorConfig.decode(reader, reader.uint32()));
                                        break;
                                    }
                                case 3: {
                                        if (!(message.serviceAccounts && message.serviceAccounts.length))
                                            message.serviceAccounts = [];
                                        message.serviceAccounts.push($root.google.cloud.notebooks.v2.ServiceAccount.decode(reader, reader.uint32()));
                                        break;
                                    }
                                case 4: {
                                        message.vmImage = $root.google.cloud.notebooks.v2.VmImage.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 5: {
                                        message.containerImage = $root.google.cloud.notebooks.v2.ContainerImage.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 6: {
                                        message.bootDisk = $root.google.cloud.notebooks.v2.BootDisk.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 7: {
                                        if (!(message.dataDisks && message.dataDisks.length))
                                            message.dataDisks = [];
                                        message.dataDisks.push($root.google.cloud.notebooks.v2.DataDisk.decode(reader, reader.uint32()));
                                        break;
                                    }
                                case 8: {
                                        message.shieldedInstanceConfig = $root.google.cloud.notebooks.v2.ShieldedInstanceConfig.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 9: {
                                        if (!(message.networkInterfaces && message.networkInterfaces.length))
                                            message.networkInterfaces = [];
                                        message.networkInterfaces.push($root.google.cloud.notebooks.v2.NetworkInterface.decode(reader, reader.uint32()));
                                        break;
                                    }
                                case 10: {
                                        message.disablePublicIp = reader.bool();
                                        break;
                                    }
                                case 11: {
                                        if (!(message.tags && message.tags.length))
                                            message.tags = [];
                                        message.tags.push(reader.string());
                                        break;
                                    }
                                case 12: {
                                        if (message.metadata === $util.emptyObject)
                                            message.metadata = {};
                                        var end2 = reader.uint32() + reader.pos;
                                        key = "";
                                        value = "";
                                        while (reader.pos < end2) {
                                            var tag2 = reader.uint32();
                                            switch (tag2 >>> 3) {
                                            case 1:
                                                key = reader.string();
                                                break;
                                            case 2:
                                                value = reader.string();
                                                break;
                                            default:
                                                reader.skipType(tag2 & 7);
                                                break;
                                            }
                                        }
                                        message.metadata[key] = value;
                                        break;
                                    }
                                case 13: {
                                        message.enableIpForwarding = reader.bool();
                                        break;
                                    }
                                case 14: {
                                        message.gpuDriverConfig = $root.google.cloud.notebooks.v2.GPUDriverConfig.decode(reader, reader.uint32());
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a GceSetup message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.notebooks.v2.GceSetup
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.notebooks.v2.GceSetup} GceSetup
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        GceSetup.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a GceSetup message.
                         * @function verify
                         * @memberof google.cloud.notebooks.v2.GceSetup
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        GceSetup.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            var properties = {};
                            if (message.machineType != null && message.hasOwnProperty("machineType"))
                                if (!$util.isString(message.machineType))
                                    return "machineType: string expected";
                            if (message.acceleratorConfigs != null && message.hasOwnProperty("acceleratorConfigs")) {
                                if (!Array.isArray(message.acceleratorConfigs))
                                    return "acceleratorConfigs: array expected";
                                for (var i = 0; i < message.acceleratorConfigs.length; ++i) {
                                    var error = $root.google.cloud.notebooks.v2.AcceleratorConfig.verify(message.acceleratorConfigs[i]);
                                    if (error)
                                        return "acceleratorConfigs." + error;
                                }
                            }
                            if (message.serviceAccounts != null && message.hasOwnProperty("serviceAccounts")) {
                                if (!Array.isArray(message.serviceAccounts))
                                    return "serviceAccounts: array expected";
                                for (var i = 0; i < message.serviceAccounts.length; ++i) {
                                    var error = $root.google.cloud.notebooks.v2.ServiceAccount.verify(message.serviceAccounts[i]);
                                    if (error)
                                        return "serviceAccounts." + error;
                                }
                            }
                            if (message.vmImage != null && message.hasOwnProperty("vmImage")) {
                                properties.image = 1;
                                {
                                    var error = $root.google.cloud.notebooks.v2.VmImage.verify(message.vmImage);
                                    if (error)
                                        return "vmImage." + error;
                                }
                            }
                            if (message.containerImage != null && message.hasOwnProperty("containerImage")) {
                                if (properties.image === 1)
                                    return "image: multiple values";
                                properties.image = 1;
                                {
                                    var error = $root.google.cloud.notebooks.v2.ContainerImage.verify(message.containerImage);
                                    if (error)
                                        return "containerImage." + error;
                                }
                            }
                            if (message.bootDisk != null && message.hasOwnProperty("bootDisk")) {
                                var error = $root.google.cloud.notebooks.v2.BootDisk.verify(message.bootDisk);
                                if (error)
                                    return "bootDisk." + error;
                            }
                            if (message.dataDisks != null && message.hasOwnProperty("dataDisks")) {
                                if (!Array.isArray(message.dataDisks))
                                    return "dataDisks: array expected";
                                for (var i = 0; i < message.dataDisks.length; ++i) {
                                    var error = $root.google.cloud.notebooks.v2.DataDisk.verify(message.dataDisks[i]);
                                    if (error)
                                        return "dataDisks." + error;
                                }
                            }
                            if (message.shieldedInstanceConfig != null && message.hasOwnProperty("shieldedInstanceConfig")) {
                                var error = $root.google.cloud.notebooks.v2.ShieldedInstanceConfig.verify(message.shieldedInstanceConfig);
                                if (error)
                                    return "shieldedInstanceConfig." + error;
                            }
                            if (message.networkInterfaces != null && message.hasOwnProperty("networkInterfaces")) {
                                if (!Array.isArray(message.networkInterfaces))
                                    return "networkInterfaces: array expected";
                                for (var i = 0; i < message.networkInterfaces.length; ++i) {
                                    var error = $root.google.cloud.notebooks.v2.NetworkInterface.verify(message.networkInterfaces[i]);
                                    if (error)
                                        return "networkInterfaces." + error;
                                }
                            }
                            if (message.disablePublicIp != null && message.hasOwnProperty("disablePublicIp"))
                                if (typeof message.disablePublicIp !== "boolean")
                                    return "disablePublicIp: boolean expected";
                            if (message.tags != null && message.hasOwnProperty("tags")) {
                                if (!Array.isArray(message.tags))
                                    return "tags: array expected";
                                for (var i = 0; i < message.tags.length; ++i)
                                    if (!$util.isString(message.tags[i]))
                                        return "tags: string[] expected";
                            }
                            if (message.metadata != null && message.hasOwnProperty("metadata")) {
                                if (!$util.isObject(message.metadata))
                                    return "metadata: object expected";
                                var key = Object.keys(message.metadata);
                                for (var i = 0; i < key.length; ++i)
                                    if (!$util.isString(message.metadata[key[i]]))
                                        return "metadata: string{k:string} expected";
                            }
                            if (message.enableIpForwarding != null && message.hasOwnProperty("enableIpForwarding"))
                                if (typeof message.enableIpForwarding !== "boolean")
                                    return "enableIpForwarding: boolean expected";
                            if (message.gpuDriverConfig != null && message.hasOwnProperty("gpuDriverConfig")) {
                                var error = $root.google.cloud.notebooks.v2.GPUDriverConfig.verify(message.gpuDriverConfig);
                                if (error)
                                    return "gpuDriverConfig." + error;
                            }
                            return null;
                        };
    
                        /**
                         * Creates a GceSetup message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.notebooks.v2.GceSetup
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.notebooks.v2.GceSetup} GceSetup
                         */
                        GceSetup.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.notebooks.v2.GceSetup)
                                return object;
                            var message = new $root.google.cloud.notebooks.v2.GceSetup();
                            if (object.machineType != null)
                                message.machineType = String(object.machineType);
                            if (object.acceleratorConfigs) {
                                if (!Array.isArray(object.acceleratorConfigs))
                                    throw TypeError(".google.cloud.notebooks.v2.GceSetup.acceleratorConfigs: array expected");
                                message.acceleratorConfigs = [];
                                for (var i = 0; i < object.acceleratorConfigs.length; ++i) {
                                    if (typeof object.acceleratorConfigs[i] !== "object")
                                        throw TypeError(".google.cloud.notebooks.v2.GceSetup.acceleratorConfigs: object expected");
                                    message.acceleratorConfigs[i] = $root.google.cloud.notebooks.v2.AcceleratorConfig.fromObject(object.acceleratorConfigs[i]);
                                }
                            }
                            if (object.serviceAccounts) {
                                if (!Array.isArray(object.serviceAccounts))
                                    throw TypeError(".google.cloud.notebooks.v2.GceSetup.serviceAccounts: array expected");
                                message.serviceAccounts = [];
                                for (var i = 0; i < object.serviceAccounts.length; ++i) {
                                    if (typeof object.serviceAccounts[i] !== "object")
                                        throw TypeError(".google.cloud.notebooks.v2.GceSetup.serviceAccounts: object expected");
                                    message.serviceAccounts[i] = $root.google.cloud.notebooks.v2.ServiceAccount.fromObject(object.serviceAccounts[i]);
                                }
                            }
                            if (object.vmImage != null) {
                                if (typeof object.vmImage !== "object")
                                    throw TypeError(".google.cloud.notebooks.v2.GceSetup.vmImage: object expected");
                                message.vmImage = $root.google.cloud.notebooks.v2.VmImage.fromObject(object.vmImage);
                            }
                            if (object.containerImage != null) {
                                if (typeof object.containerImage !== "object")
                                    throw TypeError(".google.cloud.notebooks.v2.GceSetup.containerImage: object expected");
                                message.containerImage = $root.google.cloud.notebooks.v2.ContainerImage.fromObject(object.containerImage);
                            }
                            if (object.bootDisk != null) {
                                if (typeof object.bootDisk !== "object")
                                    throw TypeError(".google.cloud.notebooks.v2.GceSetup.bootDisk: object expected");
                                message.bootDisk = $root.google.cloud.notebooks.v2.BootDisk.fromObject(object.bootDisk);
                            }
                            if (object.dataDisks) {
                                if (!Array.isArray(object.dataDisks))
                                    throw TypeError(".google.cloud.notebooks.v2.GceSetup.dataDisks: array expected");
                                message.dataDisks = [];
                                for (var i = 0; i < object.dataDisks.length; ++i) {
                                    if (typeof object.dataDisks[i] !== "object")
                                        throw TypeError(".google.cloud.notebooks.v2.GceSetup.dataDisks: object expected");
                                    message.dataDisks[i] = $root.google.cloud.notebooks.v2.DataDisk.fromObject(object.dataDisks[i]);
                                }
                            }
                            if (object.shieldedInstanceConfig != null) {
                                if (typeof object.shieldedInstanceConfig !== "object")
                                    throw TypeError(".google.cloud.notebooks.v2.GceSetup.shieldedInstanceConfig: object expected");
                                message.shieldedInstanceConfig = $root.google.cloud.notebooks.v2.ShieldedInstanceConfig.fromObject(object.shieldedInstanceConfig);
                            }
                            if (object.networkInterfaces) {
                                if (!Array.isArray(object.networkInterfaces))
                                    throw TypeError(".google.cloud.notebooks.v2.GceSetup.networkInterfaces: array expected");
                                message.networkInterfaces = [];
                                for (var i = 0; i < object.networkInterfaces.length; ++i) {
                                    if (typeof object.networkInterfaces[i] !== "object")
                                        throw TypeError(".google.cloud.notebooks.v2.GceSetup.networkInterfaces: object expected");
                                    message.networkInterfaces[i] = $root.google.cloud.notebooks.v2.NetworkInterface.fromObject(object.networkInterfaces[i]);
                                }
                            }
                            if (object.disablePublicIp != null)
                                message.disablePublicIp = Boolean(object.disablePublicIp);
                            if (object.tags) {
                                if (!Array.isArray(object.tags))
                                    throw TypeError(".google.cloud.notebooks.v2.GceSetup.tags: array expected");
                                message.tags = [];
                                for (var i = 0; i < object.tags.length; ++i)
                                    message.tags[i] = String(object.tags[i]);
                            }
                            if (object.metadata) {
                                if (typeof object.metadata !== "object")
                                    throw TypeError(".google.cloud.notebooks.v2.GceSetup.metadata: object expected");
                                message.metadata = {};
                                for (var keys = Object.keys(object.metadata), i = 0; i < keys.length; ++i)
                                    message.metadata[keys[i]] = String(object.metadata[keys[i]]);
                            }
                            if (object.enableIpForwarding != null)
                                message.enableIpForwarding = Boolean(object.enableIpForwarding);
                            if (object.gpuDriverConfig != null) {
                                if (typeof object.gpuDriverConfig !== "object")
                                    throw TypeError(".google.cloud.notebooks.v2.GceSetup.gpuDriverConfig: object expected");
                                message.gpuDriverConfig = $root.google.cloud.notebooks.v2.GPUDriverConfig.fromObject(object.gpuDriverConfig);
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a GceSetup message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.notebooks.v2.GceSetup
                         * @static
                         * @param {google.cloud.notebooks.v2.GceSetup} message GceSetup
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        GceSetup.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.arrays || options.defaults) {
                                object.acceleratorConfigs = [];
                                object.serviceAccounts = [];
                                object.dataDisks = [];
                                object.networkInterfaces = [];
                                object.tags = [];
                            }
                            if (options.objects || options.defaults)
                                object.metadata = {};
                            if (options.defaults) {
                                object.machineType = "";
                                object.bootDisk = null;
                                object.shieldedInstanceConfig = null;
                                object.disablePublicIp = false;
                                object.enableIpForwarding = false;
                                object.gpuDriverConfig = null;
                            }
                            if (message.machineType != null && message.hasOwnProperty("machineType"))
                                object.machineType = message.machineType;
                            if (message.acceleratorConfigs && message.acceleratorConfigs.length) {
                                object.acceleratorConfigs = [];
                                for (var j = 0; j < message.acceleratorConfigs.length; ++j)
                                    object.acceleratorConfigs[j] = $root.google.cloud.notebooks.v2.AcceleratorConfig.toObject(message.acceleratorConfigs[j], options);
                            }
                            if (message.serviceAccounts && message.serviceAccounts.length) {
                                object.serviceAccounts = [];
                                for (var j = 0; j < message.serviceAccounts.length; ++j)
                                    object.serviceAccounts[j] = $root.google.cloud.notebooks.v2.ServiceAccount.toObject(message.serviceAccounts[j], options);
                            }
                            if (message.vmImage != null && message.hasOwnProperty("vmImage")) {
                                object.vmImage = $root.google.cloud.notebooks.v2.VmImage.toObject(message.vmImage, options);
                                if (options.oneofs)
                                    object.image = "vmImage";
                            }
                            if (message.containerImage != null && message.hasOwnProperty("containerImage")) {
                                object.containerImage = $root.google.cloud.notebooks.v2.ContainerImage.toObject(message.containerImage, options);
                                if (options.oneofs)
                                    object.image = "containerImage";
                            }
                            if (message.bootDisk != null && message.hasOwnProperty("bootDisk"))
                                object.bootDisk = $root.google.cloud.notebooks.v2.BootDisk.toObject(message.bootDisk, options);
                            if (message.dataDisks && message.dataDisks.length) {
                                object.dataDisks = [];
                                for (var j = 0; j < message.dataDisks.length; ++j)
                                    object.dataDisks[j] = $root.google.cloud.notebooks.v2.DataDisk.toObject(message.dataDisks[j], options);
                            }
                            if (message.shieldedInstanceConfig != null && message.hasOwnProperty("shieldedInstanceConfig"))
                                object.shieldedInstanceConfig = $root.google.cloud.notebooks.v2.ShieldedInstanceConfig.toObject(message.shieldedInstanceConfig, options);
                            if (message.networkInterfaces && message.networkInterfaces.length) {
                                object.networkInterfaces = [];
                                for (var j = 0; j < message.networkInterfaces.length; ++j)
                                    object.networkInterfaces[j] = $root.google.cloud.notebooks.v2.NetworkInterface.toObject(message.networkInterfaces[j], options);
                            }
                            if (message.disablePublicIp != null && message.hasOwnProperty("disablePublicIp"))
                                object.disablePublicIp = message.disablePublicIp;
                            if (message.tags && message.tags.length) {
                                object.tags = [];
                                for (var j = 0; j < message.tags.length; ++j)
                                    object.tags[j] = message.tags[j];
                            }
                            var keys2;
                            if (message.metadata && (keys2 = Object.keys(message.metadata)).length) {
                                object.metadata = {};
                                for (var j = 0; j < keys2.length; ++j)
                                    object.metadata[keys2[j]] = message.metadata[keys2[j]];
                            }
                            if (message.enableIpForwarding != null && message.hasOwnProperty("enableIpForwarding"))
                                object.enableIpForwarding = message.enableIpForwarding;
                            if (message.gpuDriverConfig != null && message.hasOwnProperty("gpuDriverConfig"))
                                object.gpuDriverConfig = $root.google.cloud.notebooks.v2.GPUDriverConfig.toObject(message.gpuDriverConfig, options);
                            return object;
                        };
    
                        /**
                         * Converts this GceSetup to JSON.
                         * @function toJSON
                         * @memberof google.cloud.notebooks.v2.GceSetup
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        GceSetup.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for GceSetup
                         * @function getTypeUrl
                         * @memberof google.cloud.notebooks.v2.GceSetup
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        GceSetup.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.notebooks.v2.GceSetup";
                        };
    
                        return GceSetup;
                    })();
    
                    /**
                     * DiskEncryption enum.
                     * @name google.cloud.notebooks.v2.DiskEncryption
                     * @enum {number}
                     * @property {number} DISK_ENCRYPTION_UNSPECIFIED=0 DISK_ENCRYPTION_UNSPECIFIED value
                     * @property {number} GMEK=1 GMEK value
                     * @property {number} CMEK=2 CMEK value
                     */
                    v2.DiskEncryption = (function() {
                        var valuesById = {}, values = Object.create(valuesById);
                        values[valuesById[0] = "DISK_ENCRYPTION_UNSPECIFIED"] = 0;
                        values[valuesById[1] = "GMEK"] = 1;
                        values[valuesById[2] = "CMEK"] = 2;
                        return values;
                    })();
    
                    /**
                     * DiskType enum.
                     * @name google.cloud.notebooks.v2.DiskType
                     * @enum {number}
                     * @property {number} DISK_TYPE_UNSPECIFIED=0 DISK_TYPE_UNSPECIFIED value
                     * @property {number} PD_STANDARD=1 PD_STANDARD value
                     * @property {number} PD_SSD=2 PD_SSD value
                     * @property {number} PD_BALANCED=3 PD_BALANCED value
                     * @property {number} PD_EXTREME=4 PD_EXTREME value
                     */
                    v2.DiskType = (function() {
                        var valuesById = {}, values = Object.create(valuesById);
                        values[valuesById[0] = "DISK_TYPE_UNSPECIFIED"] = 0;
                        values[valuesById[1] = "PD_STANDARD"] = 1;
                        values[valuesById[2] = "PD_SSD"] = 2;
                        values[valuesById[3] = "PD_BALANCED"] = 3;
                        values[valuesById[4] = "PD_EXTREME"] = 4;
                        return values;
                    })();
    
                    v2.UpgradeHistoryEntry = (function() {
    
                        /**
                         * Properties of an UpgradeHistoryEntry.
                         * @memberof google.cloud.notebooks.v2
                         * @interface IUpgradeHistoryEntry
                         * @property {string|null} [snapshot] UpgradeHistoryEntry snapshot
                         * @property {string|null} [vmImage] UpgradeHistoryEntry vmImage
                         * @property {string|null} [containerImage] UpgradeHistoryEntry containerImage
                         * @property {string|null} [framework] UpgradeHistoryEntry framework
                         * @property {string|null} [version] UpgradeHistoryEntry version
                         * @property {google.cloud.notebooks.v2.UpgradeHistoryEntry.State|null} [state] UpgradeHistoryEntry state
                         * @property {google.protobuf.ITimestamp|null} [createTime] UpgradeHistoryEntry createTime
                         * @property {google.cloud.notebooks.v2.UpgradeHistoryEntry.Action|null} [action] UpgradeHistoryEntry action
                         * @property {string|null} [targetVersion] UpgradeHistoryEntry targetVersion
                         */
    
                        /**
                         * Constructs a new UpgradeHistoryEntry.
                         * @memberof google.cloud.notebooks.v2
                         * @classdesc Represents an UpgradeHistoryEntry.
                         * @implements IUpgradeHistoryEntry
                         * @constructor
                         * @param {google.cloud.notebooks.v2.IUpgradeHistoryEntry=} [properties] Properties to set
                         */
                        function UpgradeHistoryEntry(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * UpgradeHistoryEntry snapshot.
                         * @member {string} snapshot
                         * @memberof google.cloud.notebooks.v2.UpgradeHistoryEntry
                         * @instance
                         */
                        UpgradeHistoryEntry.prototype.snapshot = "";
    
                        /**
                         * UpgradeHistoryEntry vmImage.
                         * @member {string} vmImage
                         * @memberof google.cloud.notebooks.v2.UpgradeHistoryEntry
                         * @instance
                         */
                        UpgradeHistoryEntry.prototype.vmImage = "";
    
                        /**
                         * UpgradeHistoryEntry containerImage.
                         * @member {string} containerImage
                         * @memberof google.cloud.notebooks.v2.UpgradeHistoryEntry
                         * @instance
                         */
                        UpgradeHistoryEntry.prototype.containerImage = "";
    
                        /**
                         * UpgradeHistoryEntry framework.
                         * @member {string} framework
                         * @memberof google.cloud.notebooks.v2.UpgradeHistoryEntry
                         * @instance
                         */
                        UpgradeHistoryEntry.prototype.framework = "";
    
                        /**
                         * UpgradeHistoryEntry version.
                         * @member {string} version
                         * @memberof google.cloud.notebooks.v2.UpgradeHistoryEntry
                         * @instance
                         */
                        UpgradeHistoryEntry.prototype.version = "";
    
                        /**
                         * UpgradeHistoryEntry state.
                         * @member {google.cloud.notebooks.v2.UpgradeHistoryEntry.State} state
                         * @memberof google.cloud.notebooks.v2.UpgradeHistoryEntry
                         * @instance
                         */
                        UpgradeHistoryEntry.prototype.state = 0;
    
                        /**
                         * UpgradeHistoryEntry createTime.
                         * @member {google.protobuf.ITimestamp|null|undefined} createTime
                         * @memberof google.cloud.notebooks.v2.UpgradeHistoryEntry
                         * @instance
                         */
                        UpgradeHistoryEntry.prototype.createTime = null;
    
                        /**
                         * UpgradeHistoryEntry action.
                         * @member {google.cloud.notebooks.v2.UpgradeHistoryEntry.Action} action
                         * @memberof google.cloud.notebooks.v2.UpgradeHistoryEntry
                         * @instance
                         */
                        UpgradeHistoryEntry.prototype.action = 0;
    
                        /**
                         * UpgradeHistoryEntry targetVersion.
                         * @member {string} targetVersion
                         * @memberof google.cloud.notebooks.v2.UpgradeHistoryEntry
                         * @instance
                         */
                        UpgradeHistoryEntry.prototype.targetVersion = "";
    
                        /**
                         * Creates a new UpgradeHistoryEntry instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.notebooks.v2.UpgradeHistoryEntry
                         * @static
                         * @param {google.cloud.notebooks.v2.IUpgradeHistoryEntry=} [properties] Properties to set
                         * @returns {google.cloud.notebooks.v2.UpgradeHistoryEntry} UpgradeHistoryEntry instance
                         */
                        UpgradeHistoryEntry.create = function create(properties) {
                            return new UpgradeHistoryEntry(properties);
                        };
    
                        /**
                         * Encodes the specified UpgradeHistoryEntry message. Does not implicitly {@link google.cloud.notebooks.v2.UpgradeHistoryEntry.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.notebooks.v2.UpgradeHistoryEntry
                         * @static
                         * @param {google.cloud.notebooks.v2.IUpgradeHistoryEntry} message UpgradeHistoryEntry message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        UpgradeHistoryEntry.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.snapshot != null && Object.hasOwnProperty.call(message, "snapshot"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.snapshot);
                            if (message.vmImage != null && Object.hasOwnProperty.call(message, "vmImage"))
                                writer.uint32(/* id 2, wireType 2 =*/18).string(message.vmImage);
                            if (message.containerImage != null && Object.hasOwnProperty.call(message, "containerImage"))
                                writer.uint32(/* id 3, wireType 2 =*/26).string(message.containerImage);
                            if (message.framework != null && Object.hasOwnProperty.call(message, "framework"))
                                writer.uint32(/* id 4, wireType 2 =*/34).string(message.framework);
                            if (message.version != null && Object.hasOwnProperty.call(message, "version"))
                                writer.uint32(/* id 5, wireType 2 =*/42).string(message.version);
                            if (message.state != null && Object.hasOwnProperty.call(message, "state"))
                                writer.uint32(/* id 6, wireType 0 =*/48).int32(message.state);
                            if (message.createTime != null && Object.hasOwnProperty.call(message, "createTime"))
                                $root.google.protobuf.Timestamp.encode(message.createTime, writer.uint32(/* id 7, wireType 2 =*/58).fork()).ldelim();
                            if (message.action != null && Object.hasOwnProperty.call(message, "action"))
                                writer.uint32(/* id 8, wireType 0 =*/64).int32(message.action);
                            if (message.targetVersion != null && Object.hasOwnProperty.call(message, "targetVersion"))
                                writer.uint32(/* id 9, wireType 2 =*/74).string(message.targetVersion);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified UpgradeHistoryEntry message, length delimited. Does not implicitly {@link google.cloud.notebooks.v2.UpgradeHistoryEntry.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.notebooks.v2.UpgradeHistoryEntry
                         * @static
                         * @param {google.cloud.notebooks.v2.IUpgradeHistoryEntry} message UpgradeHistoryEntry message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        UpgradeHistoryEntry.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes an UpgradeHistoryEntry message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.notebooks.v2.UpgradeHistoryEntry
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.notebooks.v2.UpgradeHistoryEntry} UpgradeHistoryEntry
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        UpgradeHistoryEntry.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.notebooks.v2.UpgradeHistoryEntry();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.snapshot = reader.string();
                                        break;
                                    }
                                case 2: {
                                        message.vmImage = reader.string();
                                        break;
                                    }
                                case 3: {
                                        message.containerImage = reader.string();
                                        break;
                                    }
                                case 4: {
                                        message.framework = reader.string();
                                        break;
                                    }
                                case 5: {
                                        message.version = reader.string();
                                        break;
                                    }
                                case 6: {
                                        message.state = reader.int32();
                                        break;
                                    }
                                case 7: {
                                        message.createTime = $root.google.protobuf.Timestamp.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 8: {
                                        message.action = reader.int32();
                                        break;
                                    }
                                case 9: {
                                        message.targetVersion = reader.string();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes an UpgradeHistoryEntry message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.notebooks.v2.UpgradeHistoryEntry
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.notebooks.v2.UpgradeHistoryEntry} UpgradeHistoryEntry
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        UpgradeHistoryEntry.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies an UpgradeHistoryEntry message.
                         * @function verify
                         * @memberof google.cloud.notebooks.v2.UpgradeHistoryEntry
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        UpgradeHistoryEntry.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.snapshot != null && message.hasOwnProperty("snapshot"))
                                if (!$util.isString(message.snapshot))
                                    return "snapshot: string expected";
                            if (message.vmImage != null && message.hasOwnProperty("vmImage"))
                                if (!$util.isString(message.vmImage))
                                    return "vmImage: string expected";
                            if (message.containerImage != null && message.hasOwnProperty("containerImage"))
                                if (!$util.isString(message.containerImage))
                                    return "containerImage: string expected";
                            if (message.framework != null && message.hasOwnProperty("framework"))
                                if (!$util.isString(message.framework))
                                    return "framework: string expected";
                            if (message.version != null && message.hasOwnProperty("version"))
                                if (!$util.isString(message.version))
                                    return "version: string expected";
                            if (message.state != null && message.hasOwnProperty("state"))
                                switch (message.state) {
                                default:
                                    return "state: enum value expected";
                                case 0:
                                case 1:
                                case 2:
                                case 3:
                                    break;
                                }
                            if (message.createTime != null && message.hasOwnProperty("createTime")) {
                                var error = $root.google.protobuf.Timestamp.verify(message.createTime);
                                if (error)
                                    return "createTime." + error;
                            }
                            if (message.action != null && message.hasOwnProperty("action"))
                                switch (message.action) {
                                default:
                                    return "action: enum value expected";
                                case 0:
                                case 1:
                                case 2:
                                    break;
                                }
                            if (message.targetVersion != null && message.hasOwnProperty("targetVersion"))
                                if (!$util.isString(message.targetVersion))
                                    return "targetVersion: string expected";
                            return null;
                        };
    
                        /**
                         * Creates an UpgradeHistoryEntry message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.notebooks.v2.UpgradeHistoryEntry
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.notebooks.v2.UpgradeHistoryEntry} UpgradeHistoryEntry
                         */
                        UpgradeHistoryEntry.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.notebooks.v2.UpgradeHistoryEntry)
                                return object;
                            var message = new $root.google.cloud.notebooks.v2.UpgradeHistoryEntry();
                            if (object.snapshot != null)
                                message.snapshot = String(object.snapshot);
                            if (object.vmImage != null)
                                message.vmImage = String(object.vmImage);
                            if (object.containerImage != null)
                                message.containerImage = String(object.containerImage);
                            if (object.framework != null)
                                message.framework = String(object.framework);
                            if (object.version != null)
                                message.version = String(object.version);
                            switch (object.state) {
                            default:
                                if (typeof object.state === "number") {
                                    message.state = object.state;
                                    break;
                                }
                                break;
                            case "STATE_UNSPECIFIED":
                            case 0:
                                message.state = 0;
                                break;
                            case "STARTED":
                            case 1:
                                message.state = 1;
                                break;
                            case "SUCCEEDED":
                            case 2:
                                message.state = 2;
                                break;
                            case "FAILED":
                            case 3:
                                message.state = 3;
                                break;
                            }
                            if (object.createTime != null) {
                                if (typeof object.createTime !== "object")
                                    throw TypeError(".google.cloud.notebooks.v2.UpgradeHistoryEntry.createTime: object expected");
                                message.createTime = $root.google.protobuf.Timestamp.fromObject(object.createTime);
                            }
                            switch (object.action) {
                            default:
                                if (typeof object.action === "number") {
                                    message.action = object.action;
                                    break;
                                }
                                break;
                            case "ACTION_UNSPECIFIED":
                            case 0:
                                message.action = 0;
                                break;
                            case "UPGRADE":
                            case 1:
                                message.action = 1;
                                break;
                            case "ROLLBACK":
                            case 2:
                                message.action = 2;
                                break;
                            }
                            if (object.targetVersion != null)
                                message.targetVersion = String(object.targetVersion);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from an UpgradeHistoryEntry message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.notebooks.v2.UpgradeHistoryEntry
                         * @static
                         * @param {google.cloud.notebooks.v2.UpgradeHistoryEntry} message UpgradeHistoryEntry
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        UpgradeHistoryEntry.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.snapshot = "";
                                object.vmImage = "";
                                object.containerImage = "";
                                object.framework = "";
                                object.version = "";
                                object.state = options.enums === String ? "STATE_UNSPECIFIED" : 0;
                                object.createTime = null;
                                object.action = options.enums === String ? "ACTION_UNSPECIFIED" : 0;
                                object.targetVersion = "";
                            }
                            if (message.snapshot != null && message.hasOwnProperty("snapshot"))
                                object.snapshot = message.snapshot;
                            if (message.vmImage != null && message.hasOwnProperty("vmImage"))
                                object.vmImage = message.vmImage;
                            if (message.containerImage != null && message.hasOwnProperty("containerImage"))
                                object.containerImage = message.containerImage;
                            if (message.framework != null && message.hasOwnProperty("framework"))
                                object.framework = message.framework;
                            if (message.version != null && message.hasOwnProperty("version"))
                                object.version = message.version;
                            if (message.state != null && message.hasOwnProperty("state"))
                                object.state = options.enums === String ? $root.google.cloud.notebooks.v2.UpgradeHistoryEntry.State[message.state] === undefined ? message.state : $root.google.cloud.notebooks.v2.UpgradeHistoryEntry.State[message.state] : message.state;
                            if (message.createTime != null && message.hasOwnProperty("createTime"))
                                object.createTime = $root.google.protobuf.Timestamp.toObject(message.createTime, options);
                            if (message.action != null && message.hasOwnProperty("action"))
                                object.action = options.enums === String ? $root.google.cloud.notebooks.v2.UpgradeHistoryEntry.Action[message.action] === undefined ? message.action : $root.google.cloud.notebooks.v2.UpgradeHistoryEntry.Action[message.action] : message.action;
                            if (message.targetVersion != null && message.hasOwnProperty("targetVersion"))
                                object.targetVersion = message.targetVersion;
                            return object;
                        };
    
                        /**
                         * Converts this UpgradeHistoryEntry to JSON.
                         * @function toJSON
                         * @memberof google.cloud.notebooks.v2.UpgradeHistoryEntry
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        UpgradeHistoryEntry.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for UpgradeHistoryEntry
                         * @function getTypeUrl
                         * @memberof google.cloud.notebooks.v2.UpgradeHistoryEntry
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        UpgradeHistoryEntry.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.notebooks.v2.UpgradeHistoryEntry";
                        };
    
                        /**
                         * State enum.
                         * @name google.cloud.notebooks.v2.UpgradeHistoryEntry.State
                         * @enum {number}
                         * @property {number} STATE_UNSPECIFIED=0 STATE_UNSPECIFIED value
                         * @property {number} STARTED=1 STARTED value
                         * @property {number} SUCCEEDED=2 SUCCEEDED value
                         * @property {number} FAILED=3 FAILED value
                         */
                        UpgradeHistoryEntry.State = (function() {
                            var valuesById = {}, values = Object.create(valuesById);
                            values[valuesById[0] = "STATE_UNSPECIFIED"] = 0;
                            values[valuesById[1] = "STARTED"] = 1;
                            values[valuesById[2] = "SUCCEEDED"] = 2;
                            values[valuesById[3] = "FAILED"] = 3;
                            return values;
                        })();
    
                        /**
                         * Action enum.
                         * @name google.cloud.notebooks.v2.UpgradeHistoryEntry.Action
                         * @enum {number}
                         * @property {number} ACTION_UNSPECIFIED=0 ACTION_UNSPECIFIED value
                         * @property {number} UPGRADE=1 UPGRADE value
                         * @property {number} ROLLBACK=2 ROLLBACK value
                         */
                        UpgradeHistoryEntry.Action = (function() {
                            var valuesById = {}, values = Object.create(valuesById);
                            values[valuesById[0] = "ACTION_UNSPECIFIED"] = 0;
                            values[valuesById[1] = "UPGRADE"] = 1;
                            values[valuesById[2] = "ROLLBACK"] = 2;
                            return values;
                        })();
    
                        return UpgradeHistoryEntry;
                    })();
    
                    v2.Instance = (function() {
    
                        /**
                         * Properties of an Instance.
                         * @memberof google.cloud.notebooks.v2
                         * @interface IInstance
                         * @property {string|null} [name] Instance name
                         * @property {google.cloud.notebooks.v2.IGceSetup|null} [gceSetup] Instance gceSetup
                         * @property {string|null} [proxyUri] Instance proxyUri
                         * @property {Array.<string>|null} [instanceOwners] Instance instanceOwners
                         * @property {string|null} [creator] Instance creator
                         * @property {google.cloud.notebooks.v2.State|null} [state] Instance state
                         * @property {Array.<google.cloud.notebooks.v2.IUpgradeHistoryEntry>|null} [upgradeHistory] Instance upgradeHistory
                         * @property {string|null} [id] Instance id
                         * @property {google.cloud.notebooks.v2.HealthState|null} [healthState] Instance healthState
                         * @property {Object.<string,string>|null} [healthInfo] Instance healthInfo
                         * @property {google.protobuf.ITimestamp|null} [createTime] Instance createTime
                         * @property {google.protobuf.ITimestamp|null} [updateTime] Instance updateTime
                         * @property {boolean|null} [disableProxyAccess] Instance disableProxyAccess
                         * @property {Object.<string,string>|null} [labels] Instance labels
                         */
    
                        /**
                         * Constructs a new Instance.
                         * @memberof google.cloud.notebooks.v2
                         * @classdesc Represents an Instance.
                         * @implements IInstance
                         * @constructor
                         * @param {google.cloud.notebooks.v2.IInstance=} [properties] Properties to set
                         */
                        function Instance(properties) {
                            this.instanceOwners = [];
                            this.upgradeHistory = [];
                            this.healthInfo = {};
                            this.labels = {};
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * Instance name.
                         * @member {string} name
                         * @memberof google.cloud.notebooks.v2.Instance
                         * @instance
                         */
                        Instance.prototype.name = "";
    
                        /**
                         * Instance gceSetup.
                         * @member {google.cloud.notebooks.v2.IGceSetup|null|undefined} gceSetup
                         * @memberof google.cloud.notebooks.v2.Instance
                         * @instance
                         */
                        Instance.prototype.gceSetup = null;
    
                        /**
                         * Instance proxyUri.
                         * @member {string} proxyUri
                         * @memberof google.cloud.notebooks.v2.Instance
                         * @instance
                         */
                        Instance.prototype.proxyUri = "";
    
                        /**
                         * Instance instanceOwners.
                         * @member {Array.<string>} instanceOwners
                         * @memberof google.cloud.notebooks.v2.Instance
                         * @instance
                         */
                        Instance.prototype.instanceOwners = $util.emptyArray;
    
                        /**
                         * Instance creator.
                         * @member {string} creator
                         * @memberof google.cloud.notebooks.v2.Instance
                         * @instance
                         */
                        Instance.prototype.creator = "";
    
                        /**
                         * Instance state.
                         * @member {google.cloud.notebooks.v2.State} state
                         * @memberof google.cloud.notebooks.v2.Instance
                         * @instance
                         */
                        Instance.prototype.state = 0;
    
                        /**
                         * Instance upgradeHistory.
                         * @member {Array.<google.cloud.notebooks.v2.IUpgradeHistoryEntry>} upgradeHistory
                         * @memberof google.cloud.notebooks.v2.Instance
                         * @instance
                         */
                        Instance.prototype.upgradeHistory = $util.emptyArray;
    
                        /**
                         * Instance id.
                         * @member {string} id
                         * @memberof google.cloud.notebooks.v2.Instance
                         * @instance
                         */
                        Instance.prototype.id = "";
    
                        /**
                         * Instance healthState.
                         * @member {google.cloud.notebooks.v2.HealthState} healthState
                         * @memberof google.cloud.notebooks.v2.Instance
                         * @instance
                         */
                        Instance.prototype.healthState = 0;
    
                        /**
                         * Instance healthInfo.
                         * @member {Object.<string,string>} healthInfo
                         * @memberof google.cloud.notebooks.v2.Instance
                         * @instance
                         */
                        Instance.prototype.healthInfo = $util.emptyObject;
    
                        /**
                         * Instance createTime.
                         * @member {google.protobuf.ITimestamp|null|undefined} createTime
                         * @memberof google.cloud.notebooks.v2.Instance
                         * @instance
                         */
                        Instance.prototype.createTime = null;
    
                        /**
                         * Instance updateTime.
                         * @member {google.protobuf.ITimestamp|null|undefined} updateTime
                         * @memberof google.cloud.notebooks.v2.Instance
                         * @instance
                         */
                        Instance.prototype.updateTime = null;
    
                        /**
                         * Instance disableProxyAccess.
                         * @member {boolean} disableProxyAccess
                         * @memberof google.cloud.notebooks.v2.Instance
                         * @instance
                         */
                        Instance.prototype.disableProxyAccess = false;
    
                        /**
                         * Instance labels.
                         * @member {Object.<string,string>} labels
                         * @memberof google.cloud.notebooks.v2.Instance
                         * @instance
                         */
                        Instance.prototype.labels = $util.emptyObject;
    
                        // OneOf field names bound to virtual getters and setters
                        var $oneOfFields;
    
                        /**
                         * Instance infrastructure.
                         * @member {"gceSetup"|undefined} infrastructure
                         * @memberof google.cloud.notebooks.v2.Instance
                         * @instance
                         */
                        Object.defineProperty(Instance.prototype, "infrastructure", {
                            get: $util.oneOfGetter($oneOfFields = ["gceSetup"]),
                            set: $util.oneOfSetter($oneOfFields)
                        });
    
                        /**
                         * Creates a new Instance instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.notebooks.v2.Instance
                         * @static
                         * @param {google.cloud.notebooks.v2.IInstance=} [properties] Properties to set
                         * @returns {google.cloud.notebooks.v2.Instance} Instance instance
                         */
                        Instance.create = function create(properties) {
                            return new Instance(properties);
                        };
    
                        /**
                         * Encodes the specified Instance message. Does not implicitly {@link google.cloud.notebooks.v2.Instance.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.notebooks.v2.Instance
                         * @static
                         * @param {google.cloud.notebooks.v2.IInstance} message Instance message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        Instance.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                            if (message.gceSetup != null && Object.hasOwnProperty.call(message, "gceSetup"))
                                $root.google.cloud.notebooks.v2.GceSetup.encode(message.gceSetup, writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                            if (message.proxyUri != null && Object.hasOwnProperty.call(message, "proxyUri"))
                                writer.uint32(/* id 3, wireType 2 =*/26).string(message.proxyUri);
                            if (message.instanceOwners != null && message.instanceOwners.length)
                                for (var i = 0; i < message.instanceOwners.length; ++i)
                                    writer.uint32(/* id 4, wireType 2 =*/34).string(message.instanceOwners[i]);
                            if (message.creator != null && Object.hasOwnProperty.call(message, "creator"))
                                writer.uint32(/* id 5, wireType 2 =*/42).string(message.creator);
                            if (message.state != null && Object.hasOwnProperty.call(message, "state"))
                                writer.uint32(/* id 6, wireType 0 =*/48).int32(message.state);
                            if (message.upgradeHistory != null && message.upgradeHistory.length)
                                for (var i = 0; i < message.upgradeHistory.length; ++i)
                                    $root.google.cloud.notebooks.v2.UpgradeHistoryEntry.encode(message.upgradeHistory[i], writer.uint32(/* id 7, wireType 2 =*/58).fork()).ldelim();
                            if (message.id != null && Object.hasOwnProperty.call(message, "id"))
                                writer.uint32(/* id 8, wireType 2 =*/66).string(message.id);
                            if (message.healthState != null && Object.hasOwnProperty.call(message, "healthState"))
                                writer.uint32(/* id 9, wireType 0 =*/72).int32(message.healthState);
                            if (message.healthInfo != null && Object.hasOwnProperty.call(message, "healthInfo"))
                                for (var keys = Object.keys(message.healthInfo), i = 0; i < keys.length; ++i)
                                    writer.uint32(/* id 10, wireType 2 =*/82).fork().uint32(/* id 1, wireType 2 =*/10).string(keys[i]).uint32(/* id 2, wireType 2 =*/18).string(message.healthInfo[keys[i]]).ldelim();
                            if (message.createTime != null && Object.hasOwnProperty.call(message, "createTime"))
                                $root.google.protobuf.Timestamp.encode(message.createTime, writer.uint32(/* id 11, wireType 2 =*/90).fork()).ldelim();
                            if (message.updateTime != null && Object.hasOwnProperty.call(message, "updateTime"))
                                $root.google.protobuf.Timestamp.encode(message.updateTime, writer.uint32(/* id 12, wireType 2 =*/98).fork()).ldelim();
                            if (message.disableProxyAccess != null && Object.hasOwnProperty.call(message, "disableProxyAccess"))
                                writer.uint32(/* id 13, wireType 0 =*/104).bool(message.disableProxyAccess);
                            if (message.labels != null && Object.hasOwnProperty.call(message, "labels"))
                                for (var keys = Object.keys(message.labels), i = 0; i < keys.length; ++i)
                                    writer.uint32(/* id 14, wireType 2 =*/114).fork().uint32(/* id 1, wireType 2 =*/10).string(keys[i]).uint32(/* id 2, wireType 2 =*/18).string(message.labels[keys[i]]).ldelim();
                            return writer;
                        };
    
                        /**
                         * Encodes the specified Instance message, length delimited. Does not implicitly {@link google.cloud.notebooks.v2.Instance.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.notebooks.v2.Instance
                         * @static
                         * @param {google.cloud.notebooks.v2.IInstance} message Instance message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        Instance.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes an Instance message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.notebooks.v2.Instance
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.notebooks.v2.Instance} Instance
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        Instance.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.notebooks.v2.Instance(), key, value;
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.name = reader.string();
                                        break;
                                    }
                                case 2: {
                                        message.gceSetup = $root.google.cloud.notebooks.v2.GceSetup.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 3: {
                                        message.proxyUri = reader.string();
                                        break;
                                    }
                                case 4: {
                                        if (!(message.instanceOwners && message.instanceOwners.length))
                                            message.instanceOwners = [];
                                        message.instanceOwners.push(reader.string());
                                        break;
                                    }
                                case 5: {
                                        message.creator = reader.string();
                                        break;
                                    }
                                case 6: {
                                        message.state = reader.int32();
                                        break;
                                    }
                                case 7: {
                                        if (!(message.upgradeHistory && message.upgradeHistory.length))
                                            message.upgradeHistory = [];
                                        message.upgradeHistory.push($root.google.cloud.notebooks.v2.UpgradeHistoryEntry.decode(reader, reader.uint32()));
                                        break;
                                    }
                                case 8: {
                                        message.id = reader.string();
                                        break;
                                    }
                                case 9: {
                                        message.healthState = reader.int32();
                                        break;
                                    }
                                case 10: {
                                        if (message.healthInfo === $util.emptyObject)
                                            message.healthInfo = {};
                                        var end2 = reader.uint32() + reader.pos;
                                        key = "";
                                        value = "";
                                        while (reader.pos < end2) {
                                            var tag2 = reader.uint32();
                                            switch (tag2 >>> 3) {
                                            case 1:
                                                key = reader.string();
                                                break;
                                            case 2:
                                                value = reader.string();
                                                break;
                                            default:
                                                reader.skipType(tag2 & 7);
                                                break;
                                            }
                                        }
                                        message.healthInfo[key] = value;
                                        break;
                                    }
                                case 11: {
                                        message.createTime = $root.google.protobuf.Timestamp.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 12: {
                                        message.updateTime = $root.google.protobuf.Timestamp.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 13: {
                                        message.disableProxyAccess = reader.bool();
                                        break;
                                    }
                                case 14: {
                                        if (message.labels === $util.emptyObject)
                                            message.labels = {};
                                        var end2 = reader.uint32() + reader.pos;
                                        key = "";
                                        value = "";
                                        while (reader.pos < end2) {
                                            var tag2 = reader.uint32();
                                            switch (tag2 >>> 3) {
                                            case 1:
                                                key = reader.string();
                                                break;
                                            case 2:
                                                value = reader.string();
                                                break;
                                            default:
                                                reader.skipType(tag2 & 7);
                                                break;
                                            }
                                        }
                                        message.labels[key] = value;
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes an Instance message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.notebooks.v2.Instance
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.notebooks.v2.Instance} Instance
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        Instance.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies an Instance message.
                         * @function verify
                         * @memberof google.cloud.notebooks.v2.Instance
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        Instance.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            var properties = {};
                            if (message.name != null && message.hasOwnProperty("name"))
                                if (!$util.isString(message.name))
                                    return "name: string expected";
                            if (message.gceSetup != null && message.hasOwnProperty("gceSetup")) {
                                properties.infrastructure = 1;
                                {
                                    var error = $root.google.cloud.notebooks.v2.GceSetup.verify(message.gceSetup);
                                    if (error)
                                        return "gceSetup." + error;
                                }
                            }
                            if (message.proxyUri != null && message.hasOwnProperty("proxyUri"))
                                if (!$util.isString(message.proxyUri))
                                    return "proxyUri: string expected";
                            if (message.instanceOwners != null && message.hasOwnProperty("instanceOwners")) {
                                if (!Array.isArray(message.instanceOwners))
                                    return "instanceOwners: array expected";
                                for (var i = 0; i < message.instanceOwners.length; ++i)
                                    if (!$util.isString(message.instanceOwners[i]))
                                        return "instanceOwners: string[] expected";
                            }
                            if (message.creator != null && message.hasOwnProperty("creator"))
                                if (!$util.isString(message.creator))
                                    return "creator: string expected";
                            if (message.state != null && message.hasOwnProperty("state"))
                                switch (message.state) {
                                default:
                                    return "state: enum value expected";
                                case 0:
                                case 1:
                                case 2:
                                case 3:
                                case 4:
                                case 5:
                                case 6:
                                case 7:
                                case 8:
                                case 9:
                                case 10:
                                    break;
                                }
                            if (message.upgradeHistory != null && message.hasOwnProperty("upgradeHistory")) {
                                if (!Array.isArray(message.upgradeHistory))
                                    return "upgradeHistory: array expected";
                                for (var i = 0; i < message.upgradeHistory.length; ++i) {
                                    var error = $root.google.cloud.notebooks.v2.UpgradeHistoryEntry.verify(message.upgradeHistory[i]);
                                    if (error)
                                        return "upgradeHistory." + error;
                                }
                            }
                            if (message.id != null && message.hasOwnProperty("id"))
                                if (!$util.isString(message.id))
                                    return "id: string expected";
                            if (message.healthState != null && message.hasOwnProperty("healthState"))
                                switch (message.healthState) {
                                default:
                                    return "healthState: enum value expected";
                                case 0:
                                case 1:
                                case 2:
                                case 3:
                                case 4:
                                    break;
                                }
                            if (message.healthInfo != null && message.hasOwnProperty("healthInfo")) {
                                if (!$util.isObject(message.healthInfo))
                                    return "healthInfo: object expected";
                                var key = Object.keys(message.healthInfo);
                                for (var i = 0; i < key.length; ++i)
                                    if (!$util.isString(message.healthInfo[key[i]]))
                                        return "healthInfo: string{k:string} expected";
                            }
                            if (message.createTime != null && message.hasOwnProperty("createTime")) {
                                var error = $root.google.protobuf.Timestamp.verify(message.createTime);
                                if (error)
                                    return "createTime." + error;
                            }
                            if (message.updateTime != null && message.hasOwnProperty("updateTime")) {
                                var error = $root.google.protobuf.Timestamp.verify(message.updateTime);
                                if (error)
                                    return "updateTime." + error;
                            }
                            if (message.disableProxyAccess != null && message.hasOwnProperty("disableProxyAccess"))
                                if (typeof message.disableProxyAccess !== "boolean")
                                    return "disableProxyAccess: boolean expected";
                            if (message.labels != null && message.hasOwnProperty("labels")) {
                                if (!$util.isObject(message.labels))
                                    return "labels: object expected";
                                var key = Object.keys(message.labels);
                                for (var i = 0; i < key.length; ++i)
                                    if (!$util.isString(message.labels[key[i]]))
                                        return "labels: string{k:string} expected";
                            }
                            return null;
                        };
    
                        /**
                         * Creates an Instance message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.notebooks.v2.Instance
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.notebooks.v2.Instance} Instance
                         */
                        Instance.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.notebooks.v2.Instance)
                                return object;
                            var message = new $root.google.cloud.notebooks.v2.Instance();
                            if (object.name != null)
                                message.name = String(object.name);
                            if (object.gceSetup != null) {
                                if (typeof object.gceSetup !== "object")
                                    throw TypeError(".google.cloud.notebooks.v2.Instance.gceSetup: object expected");
                                message.gceSetup = $root.google.cloud.notebooks.v2.GceSetup.fromObject(object.gceSetup);
                            }
                            if (object.proxyUri != null)
                                message.proxyUri = String(object.proxyUri);
                            if (object.instanceOwners) {
                                if (!Array.isArray(object.instanceOwners))
                                    throw TypeError(".google.cloud.notebooks.v2.Instance.instanceOwners: array expected");
                                message.instanceOwners = [];
                                for (var i = 0; i < object.instanceOwners.length; ++i)
                                    message.instanceOwners[i] = String(object.instanceOwners[i]);
                            }
                            if (object.creator != null)
                                message.creator = String(object.creator);
                            switch (object.state) {
                            default:
                                if (typeof object.state === "number") {
                                    message.state = object.state;
                                    break;
                                }
                                break;
                            case "STATE_UNSPECIFIED":
                            case 0:
                                message.state = 0;
                                break;
                            case "STARTING":
                            case 1:
                                message.state = 1;
                                break;
                            case "PROVISIONING":
                            case 2:
                                message.state = 2;
                                break;
                            case "ACTIVE":
                            case 3:
                                message.state = 3;
                                break;
                            case "STOPPING":
                            case 4:
                                message.state = 4;
                                break;
                            case "STOPPED":
                            case 5:
                                message.state = 5;
                                break;
                            case "DELETED":
                            case 6:
                                message.state = 6;
                                break;
                            case "UPGRADING":
                            case 7:
                                message.state = 7;
                                break;
                            case "INITIALIZING":
                            case 8:
                                message.state = 8;
                                break;
                            case "SUSPENDING":
                            case 9:
                                message.state = 9;
                                break;
                            case "SUSPENDED":
                            case 10:
                                message.state = 10;
                                break;
                            }
                            if (object.upgradeHistory) {
                                if (!Array.isArray(object.upgradeHistory))
                                    throw TypeError(".google.cloud.notebooks.v2.Instance.upgradeHistory: array expected");
                                message.upgradeHistory = [];
                                for (var i = 0; i < object.upgradeHistory.length; ++i) {
                                    if (typeof object.upgradeHistory[i] !== "object")
                                        throw TypeError(".google.cloud.notebooks.v2.Instance.upgradeHistory: object expected");
                                    message.upgradeHistory[i] = $root.google.cloud.notebooks.v2.UpgradeHistoryEntry.fromObject(object.upgradeHistory[i]);
                                }
                            }
                            if (object.id != null)
                                message.id = String(object.id);
                            switch (object.healthState) {
                            default:
                                if (typeof object.healthState === "number") {
                                    message.healthState = object.healthState;
                                    break;
                                }
                                break;
                            case "HEALTH_STATE_UNSPECIFIED":
                            case 0:
                                message.healthState = 0;
                                break;
                            case "HEALTHY":
                            case 1:
                                message.healthState = 1;
                                break;
                            case "UNHEALTHY":
                            case 2:
                                message.healthState = 2;
                                break;
                            case "AGENT_NOT_INSTALLED":
                            case 3:
                                message.healthState = 3;
                                break;
                            case "AGENT_NOT_RUNNING":
                            case 4:
                                message.healthState = 4;
                                break;
                            }
                            if (object.healthInfo) {
                                if (typeof object.healthInfo !== "object")
                                    throw TypeError(".google.cloud.notebooks.v2.Instance.healthInfo: object expected");
                                message.healthInfo = {};
                                for (var keys = Object.keys(object.healthInfo), i = 0; i < keys.length; ++i)
                                    message.healthInfo[keys[i]] = String(object.healthInfo[keys[i]]);
                            }
                            if (object.createTime != null) {
                                if (typeof object.createTime !== "object")
                                    throw TypeError(".google.cloud.notebooks.v2.Instance.createTime: object expected");
                                message.createTime = $root.google.protobuf.Timestamp.fromObject(object.createTime);
                            }
                            if (object.updateTime != null) {
                                if (typeof object.updateTime !== "object")
                                    throw TypeError(".google.cloud.notebooks.v2.Instance.updateTime: object expected");
                                message.updateTime = $root.google.protobuf.Timestamp.fromObject(object.updateTime);
                            }
                            if (object.disableProxyAccess != null)
                                message.disableProxyAccess = Boolean(object.disableProxyAccess);
                            if (object.labels) {
                                if (typeof object.labels !== "object")
                                    throw TypeError(".google.cloud.notebooks.v2.Instance.labels: object expected");
                                message.labels = {};
                                for (var keys = Object.keys(object.labels), i = 0; i < keys.length; ++i)
                                    message.labels[keys[i]] = String(object.labels[keys[i]]);
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from an Instance message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.notebooks.v2.Instance
                         * @static
                         * @param {google.cloud.notebooks.v2.Instance} message Instance
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        Instance.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.arrays || options.defaults) {
                                object.instanceOwners = [];
                                object.upgradeHistory = [];
                            }
                            if (options.objects || options.defaults) {
                                object.healthInfo = {};
                                object.labels = {};
                            }
                            if (options.defaults) {
                                object.name = "";
                                object.proxyUri = "";
                                object.creator = "";
                                object.state = options.enums === String ? "STATE_UNSPECIFIED" : 0;
                                object.id = "";
                                object.healthState = options.enums === String ? "HEALTH_STATE_UNSPECIFIED" : 0;
                                object.createTime = null;
                                object.updateTime = null;
                                object.disableProxyAccess = false;
                            }
                            if (message.name != null && message.hasOwnProperty("name"))
                                object.name = message.name;
                            if (message.gceSetup != null && message.hasOwnProperty("gceSetup")) {
                                object.gceSetup = $root.google.cloud.notebooks.v2.GceSetup.toObject(message.gceSetup, options);
                                if (options.oneofs)
                                    object.infrastructure = "gceSetup";
                            }
                            if (message.proxyUri != null && message.hasOwnProperty("proxyUri"))
                                object.proxyUri = message.proxyUri;
                            if (message.instanceOwners && message.instanceOwners.length) {
                                object.instanceOwners = [];
                                for (var j = 0; j < message.instanceOwners.length; ++j)
                                    object.instanceOwners[j] = message.instanceOwners[j];
                            }
                            if (message.creator != null && message.hasOwnProperty("creator"))
                                object.creator = message.creator;
                            if (message.state != null && message.hasOwnProperty("state"))
                                object.state = options.enums === String ? $root.google.cloud.notebooks.v2.State[message.state] === undefined ? message.state : $root.google.cloud.notebooks.v2.State[message.state] : message.state;
                            if (message.upgradeHistory && message.upgradeHistory.length) {
                                object.upgradeHistory = [];
                                for (var j = 0; j < message.upgradeHistory.length; ++j)
                                    object.upgradeHistory[j] = $root.google.cloud.notebooks.v2.UpgradeHistoryEntry.toObject(message.upgradeHistory[j], options);
                            }
                            if (message.id != null && message.hasOwnProperty("id"))
                                object.id = message.id;
                            if (message.healthState != null && message.hasOwnProperty("healthState"))
                                object.healthState = options.enums === String ? $root.google.cloud.notebooks.v2.HealthState[message.healthState] === undefined ? message.healthState : $root.google.cloud.notebooks.v2.HealthState[message.healthState] : message.healthState;
                            var keys2;
                            if (message.healthInfo && (keys2 = Object.keys(message.healthInfo)).length) {
                                object.healthInfo = {};
                                for (var j = 0; j < keys2.length; ++j)
                                    object.healthInfo[keys2[j]] = message.healthInfo[keys2[j]];
                            }
                            if (message.createTime != null && message.hasOwnProperty("createTime"))
                                object.createTime = $root.google.protobuf.Timestamp.toObject(message.createTime, options);
                            if (message.updateTime != null && message.hasOwnProperty("updateTime"))
                                object.updateTime = $root.google.protobuf.Timestamp.toObject(message.updateTime, options);
                            if (message.disableProxyAccess != null && message.hasOwnProperty("disableProxyAccess"))
                                object.disableProxyAccess = message.disableProxyAccess;
                            if (message.labels && (keys2 = Object.keys(message.labels)).length) {
                                object.labels = {};
                                for (var j = 0; j < keys2.length; ++j)
                                    object.labels[keys2[j]] = message.labels[keys2[j]];
                            }
                            return object;
                        };
    
                        /**
                         * Converts this Instance to JSON.
                         * @function toJSON
                         * @memberof google.cloud.notebooks.v2.Instance
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        Instance.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for Instance
                         * @function getTypeUrl
                         * @memberof google.cloud.notebooks.v2.Instance
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        Instance.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.notebooks.v2.Instance";
                        };
    
                        return Instance;
                    })();
    
                    /**
                     * State enum.
                     * @name google.cloud.notebooks.v2.State
                     * @enum {number}
                     * @property {number} STATE_UNSPECIFIED=0 STATE_UNSPECIFIED value
                     * @property {number} STARTING=1 STARTING value
                     * @property {number} PROVISIONING=2 PROVISIONING value
                     * @property {number} ACTIVE=3 ACTIVE value
                     * @property {number} STOPPING=4 STOPPING value
                     * @property {number} STOPPED=5 STOPPED value
                     * @property {number} DELETED=6 DELETED value
                     * @property {number} UPGRADING=7 UPGRADING value
                     * @property {number} INITIALIZING=8 INITIALIZING value
                     * @property {number} SUSPENDING=9 SUSPENDING value
                     * @property {number} SUSPENDED=10 SUSPENDED value
                     */
                    v2.State = (function() {
                        var valuesById = {}, values = Object.create(valuesById);
                        values[valuesById[0] = "STATE_UNSPECIFIED"] = 0;
                        values[valuesById[1] = "STARTING"] = 1;
                        values[valuesById[2] = "PROVISIONING"] = 2;
                        values[valuesById[3] = "ACTIVE"] = 3;
                        values[valuesById[4] = "STOPPING"] = 4;
                        values[valuesById[5] = "STOPPED"] = 5;
                        values[valuesById[6] = "DELETED"] = 6;
                        values[valuesById[7] = "UPGRADING"] = 7;
                        values[valuesById[8] = "INITIALIZING"] = 8;
                        values[valuesById[9] = "SUSPENDING"] = 9;
                        values[valuesById[10] = "SUSPENDED"] = 10;
                        return values;
                    })();
    
                    /**
                     * HealthState enum.
                     * @name google.cloud.notebooks.v2.HealthState
                     * @enum {number}
                     * @property {number} HEALTH_STATE_UNSPECIFIED=0 HEALTH_STATE_UNSPECIFIED value
                     * @property {number} HEALTHY=1 HEALTHY value
                     * @property {number} UNHEALTHY=2 UNHEALTHY value
                     * @property {number} AGENT_NOT_INSTALLED=3 AGENT_NOT_INSTALLED value
                     * @property {number} AGENT_NOT_RUNNING=4 AGENT_NOT_RUNNING value
                     */
                    v2.HealthState = (function() {
                        var valuesById = {}, values = Object.create(valuesById);
                        values[valuesById[0] = "HEALTH_STATE_UNSPECIFIED"] = 0;
                        values[valuesById[1] = "HEALTHY"] = 1;
                        values[valuesById[2] = "UNHEALTHY"] = 2;
                        values[valuesById[3] = "AGENT_NOT_INSTALLED"] = 3;
                        values[valuesById[4] = "AGENT_NOT_RUNNING"] = 4;
                        return values;
                    })();
    
                    v2.NotebookService = (function() {
    
                        /**
                         * Constructs a new NotebookService service.
                         * @memberof google.cloud.notebooks.v2
                         * @classdesc Represents a NotebookService
                         * @extends $protobuf.rpc.Service
                         * @constructor
                         * @param {$protobuf.RPCImpl} rpcImpl RPC implementation
                         * @param {boolean} [requestDelimited=false] Whether requests are length-delimited
                         * @param {boolean} [responseDelimited=false] Whether responses are length-delimited
                         */
                        function NotebookService(rpcImpl, requestDelimited, responseDelimited) {
                            $protobuf.rpc.Service.call(this, rpcImpl, requestDelimited, responseDelimited);
                        }
    
                        (NotebookService.prototype = Object.create($protobuf.rpc.Service.prototype)).constructor = NotebookService;
    
                        /**
                         * Creates new NotebookService service using the specified rpc implementation.
                         * @function create
                         * @memberof google.cloud.notebooks.v2.NotebookService
                         * @static
                         * @param {$protobuf.RPCImpl} rpcImpl RPC implementation
                         * @param {boolean} [requestDelimited=false] Whether requests are length-delimited
                         * @param {boolean} [responseDelimited=false] Whether responses are length-delimited
                         * @returns {NotebookService} RPC service. Useful where requests and/or responses are streamed.
                         */
                        NotebookService.create = function create(rpcImpl, requestDelimited, responseDelimited) {
                            return new this(rpcImpl, requestDelimited, responseDelimited);
                        };
    
                        /**
                         * Callback as used by {@link google.cloud.notebooks.v2.NotebookService|listInstances}.
                         * @memberof google.cloud.notebooks.v2.NotebookService
                         * @typedef ListInstancesCallback
                         * @type {function}
                         * @param {Error|null} error Error, if any
                         * @param {google.cloud.notebooks.v2.ListInstancesResponse} [response] ListInstancesResponse
                         */
    
                        /**
                         * Calls ListInstances.
                         * @function listInstances
                         * @memberof google.cloud.notebooks.v2.NotebookService
                         * @instance
                         * @param {google.cloud.notebooks.v2.IListInstancesRequest} request ListInstancesRequest message or plain object
                         * @param {google.cloud.notebooks.v2.NotebookService.ListInstancesCallback} callback Node-style callback called with the error, if any, and ListInstancesResponse
                         * @returns {undefined}
                         * @variation 1
                         */
                        Object.defineProperty(NotebookService.prototype.listInstances = function listInstances(request, callback) {
                            return this.rpcCall(listInstances, $root.google.cloud.notebooks.v2.ListInstancesRequest, $root.google.cloud.notebooks.v2.ListInstancesResponse, request, callback);
                        }, "name", { value: "ListInstances" });
    
                        /**
                         * Calls ListInstances.
                         * @function listInstances
                         * @memberof google.cloud.notebooks.v2.NotebookService
                         * @instance
                         * @param {google.cloud.notebooks.v2.IListInstancesRequest} request ListInstancesRequest message or plain object
                         * @returns {Promise<google.cloud.notebooks.v2.ListInstancesResponse>} Promise
                         * @variation 2
                         */
    
                        /**
                         * Callback as used by {@link google.cloud.notebooks.v2.NotebookService|getInstance}.
                         * @memberof google.cloud.notebooks.v2.NotebookService
                         * @typedef GetInstanceCallback
                         * @type {function}
                         * @param {Error|null} error Error, if any
                         * @param {google.cloud.notebooks.v2.Instance} [response] Instance
                         */
    
                        /**
                         * Calls GetInstance.
                         * @function getInstance
                         * @memberof google.cloud.notebooks.v2.NotebookService
                         * @instance
                         * @param {google.cloud.notebooks.v2.IGetInstanceRequest} request GetInstanceRequest message or plain object
                         * @param {google.cloud.notebooks.v2.NotebookService.GetInstanceCallback} callback Node-style callback called with the error, if any, and Instance
                         * @returns {undefined}
                         * @variation 1
                         */
                        Object.defineProperty(NotebookService.prototype.getInstance = function getInstance(request, callback) {
                            return this.rpcCall(getInstance, $root.google.cloud.notebooks.v2.GetInstanceRequest, $root.google.cloud.notebooks.v2.Instance, request, callback);
                        }, "name", { value: "GetInstance" });
    
                        /**
                         * Calls GetInstance.
                         * @function getInstance
                         * @memberof google.cloud.notebooks.v2.NotebookService
                         * @instance
                         * @param {google.cloud.notebooks.v2.IGetInstanceRequest} request GetInstanceRequest message or plain object
                         * @returns {Promise<google.cloud.notebooks.v2.Instance>} Promise
                         * @variation 2
                         */
    
                        /**
                         * Callback as used by {@link google.cloud.notebooks.v2.NotebookService|createInstance}.
                         * @memberof google.cloud.notebooks.v2.NotebookService
                         * @typedef CreateInstanceCallback
                         * @type {function}
                         * @param {Error|null} error Error, if any
                         * @param {google.longrunning.Operation} [response] Operation
                         */
    
                        /**
                         * Calls CreateInstance.
                         * @function createInstance
                         * @memberof google.cloud.notebooks.v2.NotebookService
                         * @instance
                         * @param {google.cloud.notebooks.v2.ICreateInstanceRequest} request CreateInstanceRequest message or plain object
                         * @param {google.cloud.notebooks.v2.NotebookService.CreateInstanceCallback} callback Node-style callback called with the error, if any, and Operation
                         * @returns {undefined}
                         * @variation 1
                         */
                        Object.defineProperty(NotebookService.prototype.createInstance = function createInstance(request, callback) {
                            return this.rpcCall(createInstance, $root.google.cloud.notebooks.v2.CreateInstanceRequest, $root.google.longrunning.Operation, request, callback);
                        }, "name", { value: "CreateInstance" });
    
                        /**
                         * Calls CreateInstance.
                         * @function createInstance
                         * @memberof google.cloud.notebooks.v2.NotebookService
                         * @instance
                         * @param {google.cloud.notebooks.v2.ICreateInstanceRequest} request CreateInstanceRequest message or plain object
                         * @returns {Promise<google.longrunning.Operation>} Promise
                         * @variation 2
                         */
    
                        /**
                         * Callback as used by {@link google.cloud.notebooks.v2.NotebookService|updateInstance}.
                         * @memberof google.cloud.notebooks.v2.NotebookService
                         * @typedef UpdateInstanceCallback
                         * @type {function}
                         * @param {Error|null} error Error, if any
                         * @param {google.longrunning.Operation} [response] Operation
                         */
    
                        /**
                         * Calls UpdateInstance.
                         * @function updateInstance
                         * @memberof google.cloud.notebooks.v2.NotebookService
                         * @instance
                         * @param {google.cloud.notebooks.v2.IUpdateInstanceRequest} request UpdateInstanceRequest message or plain object
                         * @param {google.cloud.notebooks.v2.NotebookService.UpdateInstanceCallback} callback Node-style callback called with the error, if any, and Operation
                         * @returns {undefined}
                         * @variation 1
                         */
                        Object.defineProperty(NotebookService.prototype.updateInstance = function updateInstance(request, callback) {
                            return this.rpcCall(updateInstance, $root.google.cloud.notebooks.v2.UpdateInstanceRequest, $root.google.longrunning.Operation, request, callback);
                        }, "name", { value: "UpdateInstance" });
    
                        /**
                         * Calls UpdateInstance.
                         * @function updateInstance
                         * @memberof google.cloud.notebooks.v2.NotebookService
                         * @instance
                         * @param {google.cloud.notebooks.v2.IUpdateInstanceRequest} request UpdateInstanceRequest message or plain object
                         * @returns {Promise<google.longrunning.Operation>} Promise
                         * @variation 2
                         */
    
                        /**
                         * Callback as used by {@link google.cloud.notebooks.v2.NotebookService|deleteInstance}.
                         * @memberof google.cloud.notebooks.v2.NotebookService
                         * @typedef DeleteInstanceCallback
                         * @type {function}
                         * @param {Error|null} error Error, if any
                         * @param {google.longrunning.Operation} [response] Operation
                         */
    
                        /**
                         * Calls DeleteInstance.
                         * @function deleteInstance
                         * @memberof google.cloud.notebooks.v2.NotebookService
                         * @instance
                         * @param {google.cloud.notebooks.v2.IDeleteInstanceRequest} request DeleteInstanceRequest message or plain object
                         * @param {google.cloud.notebooks.v2.NotebookService.DeleteInstanceCallback} callback Node-style callback called with the error, if any, and Operation
                         * @returns {undefined}
                         * @variation 1
                         */
                        Object.defineProperty(NotebookService.prototype.deleteInstance = function deleteInstance(request, callback) {
                            return this.rpcCall(deleteInstance, $root.google.cloud.notebooks.v2.DeleteInstanceRequest, $root.google.longrunning.Operation, request, callback);
                        }, "name", { value: "DeleteInstance" });
    
                        /**
                         * Calls DeleteInstance.
                         * @function deleteInstance
                         * @memberof google.cloud.notebooks.v2.NotebookService
                         * @instance
                         * @param {google.cloud.notebooks.v2.IDeleteInstanceRequest} request DeleteInstanceRequest message or plain object
                         * @returns {Promise<google.longrunning.Operation>} Promise
                         * @variation 2
                         */
    
                        /**
                         * Callback as used by {@link google.cloud.notebooks.v2.NotebookService|startInstance}.
                         * @memberof google.cloud.notebooks.v2.NotebookService
                         * @typedef StartInstanceCallback
                         * @type {function}
                         * @param {Error|null} error Error, if any
                         * @param {google.longrunning.Operation} [response] Operation
                         */
    
                        /**
                         * Calls StartInstance.
                         * @function startInstance
                         * @memberof google.cloud.notebooks.v2.NotebookService
                         * @instance
                         * @param {google.cloud.notebooks.v2.IStartInstanceRequest} request StartInstanceRequest message or plain object
                         * @param {google.cloud.notebooks.v2.NotebookService.StartInstanceCallback} callback Node-style callback called with the error, if any, and Operation
                         * @returns {undefined}
                         * @variation 1
                         */
                        Object.defineProperty(NotebookService.prototype.startInstance = function startInstance(request, callback) {
                            return this.rpcCall(startInstance, $root.google.cloud.notebooks.v2.StartInstanceRequest, $root.google.longrunning.Operation, request, callback);
                        }, "name", { value: "StartInstance" });
    
                        /**
                         * Calls StartInstance.
                         * @function startInstance
                         * @memberof google.cloud.notebooks.v2.NotebookService
                         * @instance
                         * @param {google.cloud.notebooks.v2.IStartInstanceRequest} request StartInstanceRequest message or plain object
                         * @returns {Promise<google.longrunning.Operation>} Promise
                         * @variation 2
                         */
    
                        /**
                         * Callback as used by {@link google.cloud.notebooks.v2.NotebookService|stopInstance}.
                         * @memberof google.cloud.notebooks.v2.NotebookService
                         * @typedef StopInstanceCallback
                         * @type {function}
                         * @param {Error|null} error Error, if any
                         * @param {google.longrunning.Operation} [response] Operation
                         */
    
                        /**
                         * Calls StopInstance.
                         * @function stopInstance
                         * @memberof google.cloud.notebooks.v2.NotebookService
                         * @instance
                         * @param {google.cloud.notebooks.v2.IStopInstanceRequest} request StopInstanceRequest message or plain object
                         * @param {google.cloud.notebooks.v2.NotebookService.StopInstanceCallback} callback Node-style callback called with the error, if any, and Operation
                         * @returns {undefined}
                         * @variation 1
                         */
                        Object.defineProperty(NotebookService.prototype.stopInstance = function stopInstance(request, callback) {
                            return this.rpcCall(stopInstance, $root.google.cloud.notebooks.v2.StopInstanceRequest, $root.google.longrunning.Operation, request, callback);
                        }, "name", { value: "StopInstance" });
    
                        /**
                         * Calls StopInstance.
                         * @function stopInstance
                         * @memberof google.cloud.notebooks.v2.NotebookService
                         * @instance
                         * @param {google.cloud.notebooks.v2.IStopInstanceRequest} request StopInstanceRequest message or plain object
                         * @returns {Promise<google.longrunning.Operation>} Promise
                         * @variation 2
                         */
    
                        /**
                         * Callback as used by {@link google.cloud.notebooks.v2.NotebookService|resetInstance}.
                         * @memberof google.cloud.notebooks.v2.NotebookService
                         * @typedef ResetInstanceCallback
                         * @type {function}
                         * @param {Error|null} error Error, if any
                         * @param {google.longrunning.Operation} [response] Operation
                         */
    
                        /**
                         * Calls ResetInstance.
                         * @function resetInstance
                         * @memberof google.cloud.notebooks.v2.NotebookService
                         * @instance
                         * @param {google.cloud.notebooks.v2.IResetInstanceRequest} request ResetInstanceRequest message or plain object
                         * @param {google.cloud.notebooks.v2.NotebookService.ResetInstanceCallback} callback Node-style callback called with the error, if any, and Operation
                         * @returns {undefined}
                         * @variation 1
                         */
                        Object.defineProperty(NotebookService.prototype.resetInstance = function resetInstance(request, callback) {
                            return this.rpcCall(resetInstance, $root.google.cloud.notebooks.v2.ResetInstanceRequest, $root.google.longrunning.Operation, request, callback);
                        }, "name", { value: "ResetInstance" });
    
                        /**
                         * Calls ResetInstance.
                         * @function resetInstance
                         * @memberof google.cloud.notebooks.v2.NotebookService
                         * @instance
                         * @param {google.cloud.notebooks.v2.IResetInstanceRequest} request ResetInstanceRequest message or plain object
                         * @returns {Promise<google.longrunning.Operation>} Promise
                         * @variation 2
                         */
    
                        /**
                         * Callback as used by {@link google.cloud.notebooks.v2.NotebookService|checkInstanceUpgradability}.
                         * @memberof google.cloud.notebooks.v2.NotebookService
                         * @typedef CheckInstanceUpgradabilityCallback
                         * @type {function}
                         * @param {Error|null} error Error, if any
                         * @param {google.cloud.notebooks.v2.CheckInstanceUpgradabilityResponse} [response] CheckInstanceUpgradabilityResponse
                         */
    
                        /**
                         * Calls CheckInstanceUpgradability.
                         * @function checkInstanceUpgradability
                         * @memberof google.cloud.notebooks.v2.NotebookService
                         * @instance
                         * @param {google.cloud.notebooks.v2.ICheckInstanceUpgradabilityRequest} request CheckInstanceUpgradabilityRequest message or plain object
                         * @param {google.cloud.notebooks.v2.NotebookService.CheckInstanceUpgradabilityCallback} callback Node-style callback called with the error, if any, and CheckInstanceUpgradabilityResponse
                         * @returns {undefined}
                         * @variation 1
                         */
                        Object.defineProperty(NotebookService.prototype.checkInstanceUpgradability = function checkInstanceUpgradability(request, callback) {
                            return this.rpcCall(checkInstanceUpgradability, $root.google.cloud.notebooks.v2.CheckInstanceUpgradabilityRequest, $root.google.cloud.notebooks.v2.CheckInstanceUpgradabilityResponse, request, callback);
                        }, "name", { value: "CheckInstanceUpgradability" });
    
                        /**
                         * Calls CheckInstanceUpgradability.
                         * @function checkInstanceUpgradability
                         * @memberof google.cloud.notebooks.v2.NotebookService
                         * @instance
                         * @param {google.cloud.notebooks.v2.ICheckInstanceUpgradabilityRequest} request CheckInstanceUpgradabilityRequest message or plain object
                         * @returns {Promise<google.cloud.notebooks.v2.CheckInstanceUpgradabilityResponse>} Promise
                         * @variation 2
                         */
    
                        /**
                         * Callback as used by {@link google.cloud.notebooks.v2.NotebookService|upgradeInstance}.
                         * @memberof google.cloud.notebooks.v2.NotebookService
                         * @typedef UpgradeInstanceCallback
                         * @type {function}
                         * @param {Error|null} error Error, if any
                         * @param {google.longrunning.Operation} [response] Operation
                         */
    
                        /**
                         * Calls UpgradeInstance.
                         * @function upgradeInstance
                         * @memberof google.cloud.notebooks.v2.NotebookService
                         * @instance
                         * @param {google.cloud.notebooks.v2.IUpgradeInstanceRequest} request UpgradeInstanceRequest message or plain object
                         * @param {google.cloud.notebooks.v2.NotebookService.UpgradeInstanceCallback} callback Node-style callback called with the error, if any, and Operation
                         * @returns {undefined}
                         * @variation 1
                         */
                        Object.defineProperty(NotebookService.prototype.upgradeInstance = function upgradeInstance(request, callback) {
                            return this.rpcCall(upgradeInstance, $root.google.cloud.notebooks.v2.UpgradeInstanceRequest, $root.google.longrunning.Operation, request, callback);
                        }, "name", { value: "UpgradeInstance" });
    
                        /**
                         * Calls UpgradeInstance.
                         * @function upgradeInstance
                         * @memberof google.cloud.notebooks.v2.NotebookService
                         * @instance
                         * @param {google.cloud.notebooks.v2.IUpgradeInstanceRequest} request UpgradeInstanceRequest message or plain object
                         * @returns {Promise<google.longrunning.Operation>} Promise
                         * @variation 2
                         */
    
                        /**
                         * Callback as used by {@link google.cloud.notebooks.v2.NotebookService|rollbackInstance}.
                         * @memberof google.cloud.notebooks.v2.NotebookService
                         * @typedef RollbackInstanceCallback
                         * @type {function}
                         * @param {Error|null} error Error, if any
                         * @param {google.longrunning.Operation} [response] Operation
                         */
    
                        /**
                         * Calls RollbackInstance.
                         * @function rollbackInstance
                         * @memberof google.cloud.notebooks.v2.NotebookService
                         * @instance
                         * @param {google.cloud.notebooks.v2.IRollbackInstanceRequest} request RollbackInstanceRequest message or plain object
                         * @param {google.cloud.notebooks.v2.NotebookService.RollbackInstanceCallback} callback Node-style callback called with the error, if any, and Operation
                         * @returns {undefined}
                         * @variation 1
                         */
                        Object.defineProperty(NotebookService.prototype.rollbackInstance = function rollbackInstance(request, callback) {
                            return this.rpcCall(rollbackInstance, $root.google.cloud.notebooks.v2.RollbackInstanceRequest, $root.google.longrunning.Operation, request, callback);
                        }, "name", { value: "RollbackInstance" });
    
                        /**
                         * Calls RollbackInstance.
                         * @function rollbackInstance
                         * @memberof google.cloud.notebooks.v2.NotebookService
                         * @instance
                         * @param {google.cloud.notebooks.v2.IRollbackInstanceRequest} request RollbackInstanceRequest message or plain object
                         * @returns {Promise<google.longrunning.Operation>} Promise
                         * @variation 2
                         */
    
                        /**
                         * Callback as used by {@link google.cloud.notebooks.v2.NotebookService|diagnoseInstance}.
                         * @memberof google.cloud.notebooks.v2.NotebookService
                         * @typedef DiagnoseInstanceCallback
                         * @type {function}
                         * @param {Error|null} error Error, if any
                         * @param {google.longrunning.Operation} [response] Operation
                         */
    
                        /**
                         * Calls DiagnoseInstance.
                         * @function diagnoseInstance
                         * @memberof google.cloud.notebooks.v2.NotebookService
                         * @instance
                         * @param {google.cloud.notebooks.v2.IDiagnoseInstanceRequest} request DiagnoseInstanceRequest message or plain object
                         * @param {google.cloud.notebooks.v2.NotebookService.DiagnoseInstanceCallback} callback Node-style callback called with the error, if any, and Operation
                         * @returns {undefined}
                         * @variation 1
                         */
                        Object.defineProperty(NotebookService.prototype.diagnoseInstance = function diagnoseInstance(request, callback) {
                            return this.rpcCall(diagnoseInstance, $root.google.cloud.notebooks.v2.DiagnoseInstanceRequest, $root.google.longrunning.Operation, request, callback);
                        }, "name", { value: "DiagnoseInstance" });
    
                        /**
                         * Calls DiagnoseInstance.
                         * @function diagnoseInstance
                         * @memberof google.cloud.notebooks.v2.NotebookService
                         * @instance
                         * @param {google.cloud.notebooks.v2.IDiagnoseInstanceRequest} request DiagnoseInstanceRequest message or plain object
                         * @returns {Promise<google.longrunning.Operation>} Promise
                         * @variation 2
                         */
    
                        return NotebookService;
                    })();
    
                    v2.OperationMetadata = (function() {
    
                        /**
                         * Properties of an OperationMetadata.
                         * @memberof google.cloud.notebooks.v2
                         * @interface IOperationMetadata
                         * @property {google.protobuf.ITimestamp|null} [createTime] OperationMetadata createTime
                         * @property {google.protobuf.ITimestamp|null} [endTime] OperationMetadata endTime
                         * @property {string|null} [target] OperationMetadata target
                         * @property {string|null} [verb] OperationMetadata verb
                         * @property {string|null} [statusMessage] OperationMetadata statusMessage
                         * @property {boolean|null} [requestedCancellation] OperationMetadata requestedCancellation
                         * @property {string|null} [apiVersion] OperationMetadata apiVersion
                         * @property {string|null} [endpoint] OperationMetadata endpoint
                         */
    
                        /**
                         * Constructs a new OperationMetadata.
                         * @memberof google.cloud.notebooks.v2
                         * @classdesc Represents an OperationMetadata.
                         * @implements IOperationMetadata
                         * @constructor
                         * @param {google.cloud.notebooks.v2.IOperationMetadata=} [properties] Properties to set
                         */
                        function OperationMetadata(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * OperationMetadata createTime.
                         * @member {google.protobuf.ITimestamp|null|undefined} createTime
                         * @memberof google.cloud.notebooks.v2.OperationMetadata
                         * @instance
                         */
                        OperationMetadata.prototype.createTime = null;
    
                        /**
                         * OperationMetadata endTime.
                         * @member {google.protobuf.ITimestamp|null|undefined} endTime
                         * @memberof google.cloud.notebooks.v2.OperationMetadata
                         * @instance
                         */
                        OperationMetadata.prototype.endTime = null;
    
                        /**
                         * OperationMetadata target.
                         * @member {string} target
                         * @memberof google.cloud.notebooks.v2.OperationMetadata
                         * @instance
                         */
                        OperationMetadata.prototype.target = "";
    
                        /**
                         * OperationMetadata verb.
                         * @member {string} verb
                         * @memberof google.cloud.notebooks.v2.OperationMetadata
                         * @instance
                         */
                        OperationMetadata.prototype.verb = "";
    
                        /**
                         * OperationMetadata statusMessage.
                         * @member {string} statusMessage
                         * @memberof google.cloud.notebooks.v2.OperationMetadata
                         * @instance
                         */
                        OperationMetadata.prototype.statusMessage = "";
    
                        /**
                         * OperationMetadata requestedCancellation.
                         * @member {boolean} requestedCancellation
                         * @memberof google.cloud.notebooks.v2.OperationMetadata
                         * @instance
                         */
                        OperationMetadata.prototype.requestedCancellation = false;
    
                        /**
                         * OperationMetadata apiVersion.
                         * @member {string} apiVersion
                         * @memberof google.cloud.notebooks.v2.OperationMetadata
                         * @instance
                         */
                        OperationMetadata.prototype.apiVersion = "";
    
                        /**
                         * OperationMetadata endpoint.
                         * @member {string} endpoint
                         * @memberof google.cloud.notebooks.v2.OperationMetadata
                         * @instance
                         */
                        OperationMetadata.prototype.endpoint = "";
    
                        /**
                         * Creates a new OperationMetadata instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.notebooks.v2.OperationMetadata
                         * @static
                         * @param {google.cloud.notebooks.v2.IOperationMetadata=} [properties] Properties to set
                         * @returns {google.cloud.notebooks.v2.OperationMetadata} OperationMetadata instance
                         */
                        OperationMetadata.create = function create(properties) {
                            return new OperationMetadata(properties);
                        };
    
                        /**
                         * Encodes the specified OperationMetadata message. Does not implicitly {@link google.cloud.notebooks.v2.OperationMetadata.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.notebooks.v2.OperationMetadata
                         * @static
                         * @param {google.cloud.notebooks.v2.IOperationMetadata} message OperationMetadata message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        OperationMetadata.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.createTime != null && Object.hasOwnProperty.call(message, "createTime"))
                                $root.google.protobuf.Timestamp.encode(message.createTime, writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                            if (message.endTime != null && Object.hasOwnProperty.call(message, "endTime"))
                                $root.google.protobuf.Timestamp.encode(message.endTime, writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                            if (message.target != null && Object.hasOwnProperty.call(message, "target"))
                                writer.uint32(/* id 3, wireType 2 =*/26).string(message.target);
                            if (message.verb != null && Object.hasOwnProperty.call(message, "verb"))
                                writer.uint32(/* id 4, wireType 2 =*/34).string(message.verb);
                            if (message.statusMessage != null && Object.hasOwnProperty.call(message, "statusMessage"))
                                writer.uint32(/* id 5, wireType 2 =*/42).string(message.statusMessage);
                            if (message.requestedCancellation != null && Object.hasOwnProperty.call(message, "requestedCancellation"))
                                writer.uint32(/* id 6, wireType 0 =*/48).bool(message.requestedCancellation);
                            if (message.apiVersion != null && Object.hasOwnProperty.call(message, "apiVersion"))
                                writer.uint32(/* id 7, wireType 2 =*/58).string(message.apiVersion);
                            if (message.endpoint != null && Object.hasOwnProperty.call(message, "endpoint"))
                                writer.uint32(/* id 8, wireType 2 =*/66).string(message.endpoint);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified OperationMetadata message, length delimited. Does not implicitly {@link google.cloud.notebooks.v2.OperationMetadata.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.notebooks.v2.OperationMetadata
                         * @static
                         * @param {google.cloud.notebooks.v2.IOperationMetadata} message OperationMetadata message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        OperationMetadata.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes an OperationMetadata message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.notebooks.v2.OperationMetadata
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.notebooks.v2.OperationMetadata} OperationMetadata
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        OperationMetadata.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.notebooks.v2.OperationMetadata();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.createTime = $root.google.protobuf.Timestamp.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 2: {
                                        message.endTime = $root.google.protobuf.Timestamp.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 3: {
                                        message.target = reader.string();
                                        break;
                                    }
                                case 4: {
                                        message.verb = reader.string();
                                        break;
                                    }
                                case 5: {
                                        message.statusMessage = reader.string();
                                        break;
                                    }
                                case 6: {
                                        message.requestedCancellation = reader.bool();
                                        break;
                                    }
                                case 7: {
                                        message.apiVersion = reader.string();
                                        break;
                                    }
                                case 8: {
                                        message.endpoint = reader.string();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes an OperationMetadata message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.notebooks.v2.OperationMetadata
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.notebooks.v2.OperationMetadata} OperationMetadata
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        OperationMetadata.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies an OperationMetadata message.
                         * @function verify
                         * @memberof google.cloud.notebooks.v2.OperationMetadata
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        OperationMetadata.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.createTime != null && message.hasOwnProperty("createTime")) {
                                var error = $root.google.protobuf.Timestamp.verify(message.createTime);
                                if (error)
                                    return "createTime." + error;
                            }
                            if (message.endTime != null && message.hasOwnProperty("endTime")) {
                                var error = $root.google.protobuf.Timestamp.verify(message.endTime);
                                if (error)
                                    return "endTime." + error;
                            }
                            if (message.target != null && message.hasOwnProperty("target"))
                                if (!$util.isString(message.target))
                                    return "target: string expected";
                            if (message.verb != null && message.hasOwnProperty("verb"))
                                if (!$util.isString(message.verb))
                                    return "verb: string expected";
                            if (message.statusMessage != null && message.hasOwnProperty("statusMessage"))
                                if (!$util.isString(message.statusMessage))
                                    return "statusMessage: string expected";
                            if (message.requestedCancellation != null && message.hasOwnProperty("requestedCancellation"))
                                if (typeof message.requestedCancellation !== "boolean")
                                    return "requestedCancellation: boolean expected";
                            if (message.apiVersion != null && message.hasOwnProperty("apiVersion"))
                                if (!$util.isString(message.apiVersion))
                                    return "apiVersion: string expected";
                            if (message.endpoint != null && message.hasOwnProperty("endpoint"))
                                if (!$util.isString(message.endpoint))
                                    return "endpoint: string expected";
                            return null;
                        };
    
                        /**
                         * Creates an OperationMetadata message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.notebooks.v2.OperationMetadata
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.notebooks.v2.OperationMetadata} OperationMetadata
                         */
                        OperationMetadata.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.notebooks.v2.OperationMetadata)
                                return object;
                            var message = new $root.google.cloud.notebooks.v2.OperationMetadata();
                            if (object.createTime != null) {
                                if (typeof object.createTime !== "object")
                                    throw TypeError(".google.cloud.notebooks.v2.OperationMetadata.createTime: object expected");
                                message.createTime = $root.google.protobuf.Timestamp.fromObject(object.createTime);
                            }
                            if (object.endTime != null) {
                                if (typeof object.endTime !== "object")
                                    throw TypeError(".google.cloud.notebooks.v2.OperationMetadata.endTime: object expected");
                                message.endTime = $root.google.protobuf.Timestamp.fromObject(object.endTime);
                            }
                            if (object.target != null)
                                message.target = String(object.target);
                            if (object.verb != null)
                                message.verb = String(object.verb);
                            if (object.statusMessage != null)
                                message.statusMessage = String(object.statusMessage);
                            if (object.requestedCancellation != null)
                                message.requestedCancellation = Boolean(object.requestedCancellation);
                            if (object.apiVersion != null)
                                message.apiVersion = String(object.apiVersion);
                            if (object.endpoint != null)
                                message.endpoint = String(object.endpoint);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from an OperationMetadata message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.notebooks.v2.OperationMetadata
                         * @static
                         * @param {google.cloud.notebooks.v2.OperationMetadata} message OperationMetadata
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        OperationMetadata.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.createTime = null;
                                object.endTime = null;
                                object.target = "";
                                object.verb = "";
                                object.statusMessage = "";
                                object.requestedCancellation = false;
                                object.apiVersion = "";
                                object.endpoint = "";
                            }
                            if (message.createTime != null && message.hasOwnProperty("createTime"))
                                object.createTime = $root.google.protobuf.Timestamp.toObject(message.createTime, options);
                            if (message.endTime != null && message.hasOwnProperty("endTime"))
                                object.endTime = $root.google.protobuf.Timestamp.toObject(message.endTime, options);
                            if (message.target != null && message.hasOwnProperty("target"))
                                object.target = message.target;
                            if (message.verb != null && message.hasOwnProperty("verb"))
                                object.verb = message.verb;
                            if (message.statusMessage != null && message.hasOwnProperty("statusMessage"))
                                object.statusMessage = message.statusMessage;
                            if (message.requestedCancellation != null && message.hasOwnProperty("requestedCancellation"))
                                object.requestedCancellation = message.requestedCancellation;
                            if (message.apiVersion != null && message.hasOwnProperty("apiVersion"))
                                object.apiVersion = message.apiVersion;
                            if (message.endpoint != null && message.hasOwnProperty("endpoint"))
                                object.endpoint = message.endpoint;
                            return object;
                        };
    
                        /**
                         * Converts this OperationMetadata to JSON.
                         * @function toJSON
                         * @memberof google.cloud.notebooks.v2.OperationMetadata
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        OperationMetadata.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for OperationMetadata
                         * @function getTypeUrl
                         * @memberof google.cloud.notebooks.v2.OperationMetadata
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        OperationMetadata.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.notebooks.v2.OperationMetadata";
                        };
    
                        return OperationMetadata;
                    })();
    
                    v2.ListInstancesRequest = (function() {
    
                        /**
                         * Properties of a ListInstancesRequest.
                         * @memberof google.cloud.notebooks.v2
                         * @interface IListInstancesRequest
                         * @property {string|null} [parent] ListInstancesRequest parent
                         * @property {number|null} [pageSize] ListInstancesRequest pageSize
                         * @property {string|null} [pageToken] ListInstancesRequest pageToken
                         * @property {string|null} [orderBy] ListInstancesRequest orderBy
                         * @property {string|null} [filter] ListInstancesRequest filter
                         */
    
                        /**
                         * Constructs a new ListInstancesRequest.
                         * @memberof google.cloud.notebooks.v2
                         * @classdesc Represents a ListInstancesRequest.
                         * @implements IListInstancesRequest
                         * @constructor
                         * @param {google.cloud.notebooks.v2.IListInstancesRequest=} [properties] Properties to set
                         */
                        function ListInstancesRequest(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * ListInstancesRequest parent.
                         * @member {string} parent
                         * @memberof google.cloud.notebooks.v2.ListInstancesRequest
                         * @instance
                         */
                        ListInstancesRequest.prototype.parent = "";
    
                        /**
                         * ListInstancesRequest pageSize.
                         * @member {number} pageSize
                         * @memberof google.cloud.notebooks.v2.ListInstancesRequest
                         * @instance
                         */
                        ListInstancesRequest.prototype.pageSize = 0;
    
                        /**
                         * ListInstancesRequest pageToken.
                         * @member {string} pageToken
                         * @memberof google.cloud.notebooks.v2.ListInstancesRequest
                         * @instance
                         */
                        ListInstancesRequest.prototype.pageToken = "";
    
                        /**
                         * ListInstancesRequest orderBy.
                         * @member {string} orderBy
                         * @memberof google.cloud.notebooks.v2.ListInstancesRequest
                         * @instance
                         */
                        ListInstancesRequest.prototype.orderBy = "";
    
                        /**
                         * ListInstancesRequest filter.
                         * @member {string} filter
                         * @memberof google.cloud.notebooks.v2.ListInstancesRequest
                         * @instance
                         */
                        ListInstancesRequest.prototype.filter = "";
    
                        /**
                         * Creates a new ListInstancesRequest instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.notebooks.v2.ListInstancesRequest
                         * @static
                         * @param {google.cloud.notebooks.v2.IListInstancesRequest=} [properties] Properties to set
                         * @returns {google.cloud.notebooks.v2.ListInstancesRequest} ListInstancesRequest instance
                         */
                        ListInstancesRequest.create = function create(properties) {
                            return new ListInstancesRequest(properties);
                        };
    
                        /**
                         * Encodes the specified ListInstancesRequest message. Does not implicitly {@link google.cloud.notebooks.v2.ListInstancesRequest.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.notebooks.v2.ListInstancesRequest
                         * @static
                         * @param {google.cloud.notebooks.v2.IListInstancesRequest} message ListInstancesRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        ListInstancesRequest.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.parent != null && Object.hasOwnProperty.call(message, "parent"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.parent);
                            if (message.pageSize != null && Object.hasOwnProperty.call(message, "pageSize"))
                                writer.uint32(/* id 2, wireType 0 =*/16).int32(message.pageSize);
                            if (message.pageToken != null && Object.hasOwnProperty.call(message, "pageToken"))
                                writer.uint32(/* id 3, wireType 2 =*/26).string(message.pageToken);
                            if (message.orderBy != null && Object.hasOwnProperty.call(message, "orderBy"))
                                writer.uint32(/* id 4, wireType 2 =*/34).string(message.orderBy);
                            if (message.filter != null && Object.hasOwnProperty.call(message, "filter"))
                                writer.uint32(/* id 5, wireType 2 =*/42).string(message.filter);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified ListInstancesRequest message, length delimited. Does not implicitly {@link google.cloud.notebooks.v2.ListInstancesRequest.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.notebooks.v2.ListInstancesRequest
                         * @static
                         * @param {google.cloud.notebooks.v2.IListInstancesRequest} message ListInstancesRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        ListInstancesRequest.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a ListInstancesRequest message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.notebooks.v2.ListInstancesRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.notebooks.v2.ListInstancesRequest} ListInstancesRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        ListInstancesRequest.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.notebooks.v2.ListInstancesRequest();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.parent = reader.string();
                                        break;
                                    }
                                case 2: {
                                        message.pageSize = reader.int32();
                                        break;
                                    }
                                case 3: {
                                        message.pageToken = reader.string();
                                        break;
                                    }
                                case 4: {
                                        message.orderBy = reader.string();
                                        break;
                                    }
                                case 5: {
                                        message.filter = reader.string();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a ListInstancesRequest message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.notebooks.v2.ListInstancesRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.notebooks.v2.ListInstancesRequest} ListInstancesRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        ListInstancesRequest.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a ListInstancesRequest message.
                         * @function verify
                         * @memberof google.cloud.notebooks.v2.ListInstancesRequest
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        ListInstancesRequest.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.parent != null && message.hasOwnProperty("parent"))
                                if (!$util.isString(message.parent))
                                    return "parent: string expected";
                            if (message.pageSize != null && message.hasOwnProperty("pageSize"))
                                if (!$util.isInteger(message.pageSize))
                                    return "pageSize: integer expected";
                            if (message.pageToken != null && message.hasOwnProperty("pageToken"))
                                if (!$util.isString(message.pageToken))
                                    return "pageToken: string expected";
                            if (message.orderBy != null && message.hasOwnProperty("orderBy"))
                                if (!$util.isString(message.orderBy))
                                    return "orderBy: string expected";
                            if (message.filter != null && message.hasOwnProperty("filter"))
                                if (!$util.isString(message.filter))
                                    return "filter: string expected";
                            return null;
                        };
    
                        /**
                         * Creates a ListInstancesRequest message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.notebooks.v2.ListInstancesRequest
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.notebooks.v2.ListInstancesRequest} ListInstancesRequest
                         */
                        ListInstancesRequest.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.notebooks.v2.ListInstancesRequest)
                                return object;
                            var message = new $root.google.cloud.notebooks.v2.ListInstancesRequest();
                            if (object.parent != null)
                                message.parent = String(object.parent);
                            if (object.pageSize != null)
                                message.pageSize = object.pageSize | 0;
                            if (object.pageToken != null)
                                message.pageToken = String(object.pageToken);
                            if (object.orderBy != null)
                                message.orderBy = String(object.orderBy);
                            if (object.filter != null)
                                message.filter = String(object.filter);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a ListInstancesRequest message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.notebooks.v2.ListInstancesRequest
                         * @static
                         * @param {google.cloud.notebooks.v2.ListInstancesRequest} message ListInstancesRequest
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        ListInstancesRequest.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.parent = "";
                                object.pageSize = 0;
                                object.pageToken = "";
                                object.orderBy = "";
                                object.filter = "";
                            }
                            if (message.parent != null && message.hasOwnProperty("parent"))
                                object.parent = message.parent;
                            if (message.pageSize != null && message.hasOwnProperty("pageSize"))
                                object.pageSize = message.pageSize;
                            if (message.pageToken != null && message.hasOwnProperty("pageToken"))
                                object.pageToken = message.pageToken;
                            if (message.orderBy != null && message.hasOwnProperty("orderBy"))
                                object.orderBy = message.orderBy;
                            if (message.filter != null && message.hasOwnProperty("filter"))
                                object.filter = message.filter;
                            return object;
                        };
    
                        /**
                         * Converts this ListInstancesRequest to JSON.
                         * @function toJSON
                         * @memberof google.cloud.notebooks.v2.ListInstancesRequest
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        ListInstancesRequest.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for ListInstancesRequest
                         * @function getTypeUrl
                         * @memberof google.cloud.notebooks.v2.ListInstancesRequest
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        ListInstancesRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.notebooks.v2.ListInstancesRequest";
                        };
    
                        return ListInstancesRequest;
                    })();
    
                    v2.ListInstancesResponse = (function() {
    
                        /**
                         * Properties of a ListInstancesResponse.
                         * @memberof google.cloud.notebooks.v2
                         * @interface IListInstancesResponse
                         * @property {Array.<google.cloud.notebooks.v2.IInstance>|null} [instances] ListInstancesResponse instances
                         * @property {string|null} [nextPageToken] ListInstancesResponse nextPageToken
                         * @property {Array.<string>|null} [unreachable] ListInstancesResponse unreachable
                         */
    
                        /**
                         * Constructs a new ListInstancesResponse.
                         * @memberof google.cloud.notebooks.v2
                         * @classdesc Represents a ListInstancesResponse.
                         * @implements IListInstancesResponse
                         * @constructor
                         * @param {google.cloud.notebooks.v2.IListInstancesResponse=} [properties] Properties to set
                         */
                        function ListInstancesResponse(properties) {
                            this.instances = [];
                            this.unreachable = [];
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * ListInstancesResponse instances.
                         * @member {Array.<google.cloud.notebooks.v2.IInstance>} instances
                         * @memberof google.cloud.notebooks.v2.ListInstancesResponse
                         * @instance
                         */
                        ListInstancesResponse.prototype.instances = $util.emptyArray;
    
                        /**
                         * ListInstancesResponse nextPageToken.
                         * @member {string} nextPageToken
                         * @memberof google.cloud.notebooks.v2.ListInstancesResponse
                         * @instance
                         */
                        ListInstancesResponse.prototype.nextPageToken = "";
    
                        /**
                         * ListInstancesResponse unreachable.
                         * @member {Array.<string>} unreachable
                         * @memberof google.cloud.notebooks.v2.ListInstancesResponse
                         * @instance
                         */
                        ListInstancesResponse.prototype.unreachable = $util.emptyArray;
    
                        /**
                         * Creates a new ListInstancesResponse instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.notebooks.v2.ListInstancesResponse
                         * @static
                         * @param {google.cloud.notebooks.v2.IListInstancesResponse=} [properties] Properties to set
                         * @returns {google.cloud.notebooks.v2.ListInstancesResponse} ListInstancesResponse instance
                         */
                        ListInstancesResponse.create = function create(properties) {
                            return new ListInstancesResponse(properties);
                        };
    
                        /**
                         * Encodes the specified ListInstancesResponse message. Does not implicitly {@link google.cloud.notebooks.v2.ListInstancesResponse.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.notebooks.v2.ListInstancesResponse
                         * @static
                         * @param {google.cloud.notebooks.v2.IListInstancesResponse} message ListInstancesResponse message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        ListInstancesResponse.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.instances != null && message.instances.length)
                                for (var i = 0; i < message.instances.length; ++i)
                                    $root.google.cloud.notebooks.v2.Instance.encode(message.instances[i], writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                            if (message.nextPageToken != null && Object.hasOwnProperty.call(message, "nextPageToken"))
                                writer.uint32(/* id 2, wireType 2 =*/18).string(message.nextPageToken);
                            if (message.unreachable != null && message.unreachable.length)
                                for (var i = 0; i < message.unreachable.length; ++i)
                                    writer.uint32(/* id 3, wireType 2 =*/26).string(message.unreachable[i]);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified ListInstancesResponse message, length delimited. Does not implicitly {@link google.cloud.notebooks.v2.ListInstancesResponse.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.notebooks.v2.ListInstancesResponse
                         * @static
                         * @param {google.cloud.notebooks.v2.IListInstancesResponse} message ListInstancesResponse message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        ListInstancesResponse.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a ListInstancesResponse message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.notebooks.v2.ListInstancesResponse
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.notebooks.v2.ListInstancesResponse} ListInstancesResponse
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        ListInstancesResponse.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.notebooks.v2.ListInstancesResponse();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        if (!(message.instances && message.instances.length))
                                            message.instances = [];
                                        message.instances.push($root.google.cloud.notebooks.v2.Instance.decode(reader, reader.uint32()));
                                        break;
                                    }
                                case 2: {
                                        message.nextPageToken = reader.string();
                                        break;
                                    }
                                case 3: {
                                        if (!(message.unreachable && message.unreachable.length))
                                            message.unreachable = [];
                                        message.unreachable.push(reader.string());
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a ListInstancesResponse message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.notebooks.v2.ListInstancesResponse
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.notebooks.v2.ListInstancesResponse} ListInstancesResponse
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        ListInstancesResponse.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a ListInstancesResponse message.
                         * @function verify
                         * @memberof google.cloud.notebooks.v2.ListInstancesResponse
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        ListInstancesResponse.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.instances != null && message.hasOwnProperty("instances")) {
                                if (!Array.isArray(message.instances))
                                    return "instances: array expected";
                                for (var i = 0; i < message.instances.length; ++i) {
                                    var error = $root.google.cloud.notebooks.v2.Instance.verify(message.instances[i]);
                                    if (error)
                                        return "instances." + error;
                                }
                            }
                            if (message.nextPageToken != null && message.hasOwnProperty("nextPageToken"))
                                if (!$util.isString(message.nextPageToken))
                                    return "nextPageToken: string expected";
                            if (message.unreachable != null && message.hasOwnProperty("unreachable")) {
                                if (!Array.isArray(message.unreachable))
                                    return "unreachable: array expected";
                                for (var i = 0; i < message.unreachable.length; ++i)
                                    if (!$util.isString(message.unreachable[i]))
                                        return "unreachable: string[] expected";
                            }
                            return null;
                        };
    
                        /**
                         * Creates a ListInstancesResponse message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.notebooks.v2.ListInstancesResponse
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.notebooks.v2.ListInstancesResponse} ListInstancesResponse
                         */
                        ListInstancesResponse.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.notebooks.v2.ListInstancesResponse)
                                return object;
                            var message = new $root.google.cloud.notebooks.v2.ListInstancesResponse();
                            if (object.instances) {
                                if (!Array.isArray(object.instances))
                                    throw TypeError(".google.cloud.notebooks.v2.ListInstancesResponse.instances: array expected");
                                message.instances = [];
                                for (var i = 0; i < object.instances.length; ++i) {
                                    if (typeof object.instances[i] !== "object")
                                        throw TypeError(".google.cloud.notebooks.v2.ListInstancesResponse.instances: object expected");
                                    message.instances[i] = $root.google.cloud.notebooks.v2.Instance.fromObject(object.instances[i]);
                                }
                            }
                            if (object.nextPageToken != null)
                                message.nextPageToken = String(object.nextPageToken);
                            if (object.unreachable) {
                                if (!Array.isArray(object.unreachable))
                                    throw TypeError(".google.cloud.notebooks.v2.ListInstancesResponse.unreachable: array expected");
                                message.unreachable = [];
                                for (var i = 0; i < object.unreachable.length; ++i)
                                    message.unreachable[i] = String(object.unreachable[i]);
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a ListInstancesResponse message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.notebooks.v2.ListInstancesResponse
                         * @static
                         * @param {google.cloud.notebooks.v2.ListInstancesResponse} message ListInstancesResponse
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        ListInstancesResponse.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.arrays || options.defaults) {
                                object.instances = [];
                                object.unreachable = [];
                            }
                            if (options.defaults)
                                object.nextPageToken = "";
                            if (message.instances && message.instances.length) {
                                object.instances = [];
                                for (var j = 0; j < message.instances.length; ++j)
                                    object.instances[j] = $root.google.cloud.notebooks.v2.Instance.toObject(message.instances[j], options);
                            }
                            if (message.nextPageToken != null && message.hasOwnProperty("nextPageToken"))
                                object.nextPageToken = message.nextPageToken;
                            if (message.unreachable && message.unreachable.length) {
                                object.unreachable = [];
                                for (var j = 0; j < message.unreachable.length; ++j)
                                    object.unreachable[j] = message.unreachable[j];
                            }
                            return object;
                        };
    
                        /**
                         * Converts this ListInstancesResponse to JSON.
                         * @function toJSON
                         * @memberof google.cloud.notebooks.v2.ListInstancesResponse
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        ListInstancesResponse.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for ListInstancesResponse
                         * @function getTypeUrl
                         * @memberof google.cloud.notebooks.v2.ListInstancesResponse
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        ListInstancesResponse.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.notebooks.v2.ListInstancesResponse";
                        };
    
                        return ListInstancesResponse;
                    })();
    
                    v2.GetInstanceRequest = (function() {
    
                        /**
                         * Properties of a GetInstanceRequest.
                         * @memberof google.cloud.notebooks.v2
                         * @interface IGetInstanceRequest
                         * @property {string|null} [name] GetInstanceRequest name
                         */
    
                        /**
                         * Constructs a new GetInstanceRequest.
                         * @memberof google.cloud.notebooks.v2
                         * @classdesc Represents a GetInstanceRequest.
                         * @implements IGetInstanceRequest
                         * @constructor
                         * @param {google.cloud.notebooks.v2.IGetInstanceRequest=} [properties] Properties to set
                         */
                        function GetInstanceRequest(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * GetInstanceRequest name.
                         * @member {string} name
                         * @memberof google.cloud.notebooks.v2.GetInstanceRequest
                         * @instance
                         */
                        GetInstanceRequest.prototype.name = "";
    
                        /**
                         * Creates a new GetInstanceRequest instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.notebooks.v2.GetInstanceRequest
                         * @static
                         * @param {google.cloud.notebooks.v2.IGetInstanceRequest=} [properties] Properties to set
                         * @returns {google.cloud.notebooks.v2.GetInstanceRequest} GetInstanceRequest instance
                         */
                        GetInstanceRequest.create = function create(properties) {
                            return new GetInstanceRequest(properties);
                        };
    
                        /**
                         * Encodes the specified GetInstanceRequest message. Does not implicitly {@link google.cloud.notebooks.v2.GetInstanceRequest.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.notebooks.v2.GetInstanceRequest
                         * @static
                         * @param {google.cloud.notebooks.v2.IGetInstanceRequest} message GetInstanceRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        GetInstanceRequest.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified GetInstanceRequest message, length delimited. Does not implicitly {@link google.cloud.notebooks.v2.GetInstanceRequest.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.notebooks.v2.GetInstanceRequest
                         * @static
                         * @param {google.cloud.notebooks.v2.IGetInstanceRequest} message GetInstanceRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        GetInstanceRequest.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a GetInstanceRequest message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.notebooks.v2.GetInstanceRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.notebooks.v2.GetInstanceRequest} GetInstanceRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        GetInstanceRequest.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.notebooks.v2.GetInstanceRequest();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.name = reader.string();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a GetInstanceRequest message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.notebooks.v2.GetInstanceRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.notebooks.v2.GetInstanceRequest} GetInstanceRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        GetInstanceRequest.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a GetInstanceRequest message.
                         * @function verify
                         * @memberof google.cloud.notebooks.v2.GetInstanceRequest
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        GetInstanceRequest.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.name != null && message.hasOwnProperty("name"))
                                if (!$util.isString(message.name))
                                    return "name: string expected";
                            return null;
                        };
    
                        /**
                         * Creates a GetInstanceRequest message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.notebooks.v2.GetInstanceRequest
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.notebooks.v2.GetInstanceRequest} GetInstanceRequest
                         */
                        GetInstanceRequest.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.notebooks.v2.GetInstanceRequest)
                                return object;
                            var message = new $root.google.cloud.notebooks.v2.GetInstanceRequest();
                            if (object.name != null)
                                message.name = String(object.name);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a GetInstanceRequest message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.notebooks.v2.GetInstanceRequest
                         * @static
                         * @param {google.cloud.notebooks.v2.GetInstanceRequest} message GetInstanceRequest
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        GetInstanceRequest.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults)
                                object.name = "";
                            if (message.name != null && message.hasOwnProperty("name"))
                                object.name = message.name;
                            return object;
                        };
    
                        /**
                         * Converts this GetInstanceRequest to JSON.
                         * @function toJSON
                         * @memberof google.cloud.notebooks.v2.GetInstanceRequest
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        GetInstanceRequest.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for GetInstanceRequest
                         * @function getTypeUrl
                         * @memberof google.cloud.notebooks.v2.GetInstanceRequest
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        GetInstanceRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.notebooks.v2.GetInstanceRequest";
                        };
    
                        return GetInstanceRequest;
                    })();
    
                    v2.CreateInstanceRequest = (function() {
    
                        /**
                         * Properties of a CreateInstanceRequest.
                         * @memberof google.cloud.notebooks.v2
                         * @interface ICreateInstanceRequest
                         * @property {string|null} [parent] CreateInstanceRequest parent
                         * @property {string|null} [instanceId] CreateInstanceRequest instanceId
                         * @property {google.cloud.notebooks.v2.IInstance|null} [instance] CreateInstanceRequest instance
                         * @property {string|null} [requestId] CreateInstanceRequest requestId
                         */
    
                        /**
                         * Constructs a new CreateInstanceRequest.
                         * @memberof google.cloud.notebooks.v2
                         * @classdesc Represents a CreateInstanceRequest.
                         * @implements ICreateInstanceRequest
                         * @constructor
                         * @param {google.cloud.notebooks.v2.ICreateInstanceRequest=} [properties] Properties to set
                         */
                        function CreateInstanceRequest(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * CreateInstanceRequest parent.
                         * @member {string} parent
                         * @memberof google.cloud.notebooks.v2.CreateInstanceRequest
                         * @instance
                         */
                        CreateInstanceRequest.prototype.parent = "";
    
                        /**
                         * CreateInstanceRequest instanceId.
                         * @member {string} instanceId
                         * @memberof google.cloud.notebooks.v2.CreateInstanceRequest
                         * @instance
                         */
                        CreateInstanceRequest.prototype.instanceId = "";
    
                        /**
                         * CreateInstanceRequest instance.
                         * @member {google.cloud.notebooks.v2.IInstance|null|undefined} instance
                         * @memberof google.cloud.notebooks.v2.CreateInstanceRequest
                         * @instance
                         */
                        CreateInstanceRequest.prototype.instance = null;
    
                        /**
                         * CreateInstanceRequest requestId.
                         * @member {string} requestId
                         * @memberof google.cloud.notebooks.v2.CreateInstanceRequest
                         * @instance
                         */
                        CreateInstanceRequest.prototype.requestId = "";
    
                        /**
                         * Creates a new CreateInstanceRequest instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.notebooks.v2.CreateInstanceRequest
                         * @static
                         * @param {google.cloud.notebooks.v2.ICreateInstanceRequest=} [properties] Properties to set
                         * @returns {google.cloud.notebooks.v2.CreateInstanceRequest} CreateInstanceRequest instance
                         */
                        CreateInstanceRequest.create = function create(properties) {
                            return new CreateInstanceRequest(properties);
                        };
    
                        /**
                         * Encodes the specified CreateInstanceRequest message. Does not implicitly {@link google.cloud.notebooks.v2.CreateInstanceRequest.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.notebooks.v2.CreateInstanceRequest
                         * @static
                         * @param {google.cloud.notebooks.v2.ICreateInstanceRequest} message CreateInstanceRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        CreateInstanceRequest.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.parent != null && Object.hasOwnProperty.call(message, "parent"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.parent);
                            if (message.instanceId != null && Object.hasOwnProperty.call(message, "instanceId"))
                                writer.uint32(/* id 2, wireType 2 =*/18).string(message.instanceId);
                            if (message.instance != null && Object.hasOwnProperty.call(message, "instance"))
                                $root.google.cloud.notebooks.v2.Instance.encode(message.instance, writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();
                            if (message.requestId != null && Object.hasOwnProperty.call(message, "requestId"))
                                writer.uint32(/* id 4, wireType 2 =*/34).string(message.requestId);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified CreateInstanceRequest message, length delimited. Does not implicitly {@link google.cloud.notebooks.v2.CreateInstanceRequest.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.notebooks.v2.CreateInstanceRequest
                         * @static
                         * @param {google.cloud.notebooks.v2.ICreateInstanceRequest} message CreateInstanceRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        CreateInstanceRequest.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a CreateInstanceRequest message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.notebooks.v2.CreateInstanceRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.notebooks.v2.CreateInstanceRequest} CreateInstanceRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        CreateInstanceRequest.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.notebooks.v2.CreateInstanceRequest();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.parent = reader.string();
                                        break;
                                    }
                                case 2: {
                                        message.instanceId = reader.string();
                                        break;
                                    }
                                case 3: {
                                        message.instance = $root.google.cloud.notebooks.v2.Instance.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 4: {
                                        message.requestId = reader.string();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a CreateInstanceRequest message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.notebooks.v2.CreateInstanceRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.notebooks.v2.CreateInstanceRequest} CreateInstanceRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        CreateInstanceRequest.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a CreateInstanceRequest message.
                         * @function verify
                         * @memberof google.cloud.notebooks.v2.CreateInstanceRequest
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        CreateInstanceRequest.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.parent != null && message.hasOwnProperty("parent"))
                                if (!$util.isString(message.parent))
                                    return "parent: string expected";
                            if (message.instanceId != null && message.hasOwnProperty("instanceId"))
                                if (!$util.isString(message.instanceId))
                                    return "instanceId: string expected";
                            if (message.instance != null && message.hasOwnProperty("instance")) {
                                var error = $root.google.cloud.notebooks.v2.Instance.verify(message.instance);
                                if (error)
                                    return "instance." + error;
                            }
                            if (message.requestId != null && message.hasOwnProperty("requestId"))
                                if (!$util.isString(message.requestId))
                                    return "requestId: string expected";
                            return null;
                        };
    
                        /**
                         * Creates a CreateInstanceRequest message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.notebooks.v2.CreateInstanceRequest
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.notebooks.v2.CreateInstanceRequest} CreateInstanceRequest
                         */
                        CreateInstanceRequest.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.notebooks.v2.CreateInstanceRequest)
                                return object;
                            var message = new $root.google.cloud.notebooks.v2.CreateInstanceRequest();
                            if (object.parent != null)
                                message.parent = String(object.parent);
                            if (object.instanceId != null)
                                message.instanceId = String(object.instanceId);
                            if (object.instance != null) {
                                if (typeof object.instance !== "object")
                                    throw TypeError(".google.cloud.notebooks.v2.CreateInstanceRequest.instance: object expected");
                                message.instance = $root.google.cloud.notebooks.v2.Instance.fromObject(object.instance);
                            }
                            if (object.requestId != null)
                                message.requestId = String(object.requestId);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a CreateInstanceRequest message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.notebooks.v2.CreateInstanceRequest
                         * @static
                         * @param {google.cloud.notebooks.v2.CreateInstanceRequest} message CreateInstanceRequest
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        CreateInstanceRequest.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.parent = "";
                                object.instanceId = "";
                                object.instance = null;
                                object.requestId = "";
                            }
                            if (message.parent != null && message.hasOwnProperty("parent"))
                                object.parent = message.parent;
                            if (message.instanceId != null && message.hasOwnProperty("instanceId"))
                                object.instanceId = message.instanceId;
                            if (message.instance != null && message.hasOwnProperty("instance"))
                                object.instance = $root.google.cloud.notebooks.v2.Instance.toObject(message.instance, options);
                            if (message.requestId != null && message.hasOwnProperty("requestId"))
                                object.requestId = message.requestId;
                            return object;
                        };
    
                        /**
                         * Converts this CreateInstanceRequest to JSON.
                         * @function toJSON
                         * @memberof google.cloud.notebooks.v2.CreateInstanceRequest
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        CreateInstanceRequest.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for CreateInstanceRequest
                         * @function getTypeUrl
                         * @memberof google.cloud.notebooks.v2.CreateInstanceRequest
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        CreateInstanceRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.notebooks.v2.CreateInstanceRequest";
                        };
    
                        return CreateInstanceRequest;
                    })();
    
                    v2.UpdateInstanceRequest = (function() {
    
                        /**
                         * Properties of an UpdateInstanceRequest.
                         * @memberof google.cloud.notebooks.v2
                         * @interface IUpdateInstanceRequest
                         * @property {google.cloud.notebooks.v2.IInstance|null} [instance] UpdateInstanceRequest instance
                         * @property {google.protobuf.IFieldMask|null} [updateMask] UpdateInstanceRequest updateMask
                         * @property {string|null} [requestId] UpdateInstanceRequest requestId
                         */
    
                        /**
                         * Constructs a new UpdateInstanceRequest.
                         * @memberof google.cloud.notebooks.v2
                         * @classdesc Represents an UpdateInstanceRequest.
                         * @implements IUpdateInstanceRequest
                         * @constructor
                         * @param {google.cloud.notebooks.v2.IUpdateInstanceRequest=} [properties] Properties to set
                         */
                        function UpdateInstanceRequest(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * UpdateInstanceRequest instance.
                         * @member {google.cloud.notebooks.v2.IInstance|null|undefined} instance
                         * @memberof google.cloud.notebooks.v2.UpdateInstanceRequest
                         * @instance
                         */
                        UpdateInstanceRequest.prototype.instance = null;
    
                        /**
                         * UpdateInstanceRequest updateMask.
                         * @member {google.protobuf.IFieldMask|null|undefined} updateMask
                         * @memberof google.cloud.notebooks.v2.UpdateInstanceRequest
                         * @instance
                         */
                        UpdateInstanceRequest.prototype.updateMask = null;
    
                        /**
                         * UpdateInstanceRequest requestId.
                         * @member {string} requestId
                         * @memberof google.cloud.notebooks.v2.UpdateInstanceRequest
                         * @instance
                         */
                        UpdateInstanceRequest.prototype.requestId = "";
    
                        /**
                         * Creates a new UpdateInstanceRequest instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.notebooks.v2.UpdateInstanceRequest
                         * @static
                         * @param {google.cloud.notebooks.v2.IUpdateInstanceRequest=} [properties] Properties to set
                         * @returns {google.cloud.notebooks.v2.UpdateInstanceRequest} UpdateInstanceRequest instance
                         */
                        UpdateInstanceRequest.create = function create(properties) {
                            return new UpdateInstanceRequest(properties);
                        };
    
                        /**
                         * Encodes the specified UpdateInstanceRequest message. Does not implicitly {@link google.cloud.notebooks.v2.UpdateInstanceRequest.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.notebooks.v2.UpdateInstanceRequest
                         * @static
                         * @param {google.cloud.notebooks.v2.IUpdateInstanceRequest} message UpdateInstanceRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        UpdateInstanceRequest.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.instance != null && Object.hasOwnProperty.call(message, "instance"))
                                $root.google.cloud.notebooks.v2.Instance.encode(message.instance, writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                            if (message.updateMask != null && Object.hasOwnProperty.call(message, "updateMask"))
                                $root.google.protobuf.FieldMask.encode(message.updateMask, writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                            if (message.requestId != null && Object.hasOwnProperty.call(message, "requestId"))
                                writer.uint32(/* id 3, wireType 2 =*/26).string(message.requestId);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified UpdateInstanceRequest message, length delimited. Does not implicitly {@link google.cloud.notebooks.v2.UpdateInstanceRequest.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.notebooks.v2.UpdateInstanceRequest
                         * @static
                         * @param {google.cloud.notebooks.v2.IUpdateInstanceRequest} message UpdateInstanceRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        UpdateInstanceRequest.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes an UpdateInstanceRequest message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.notebooks.v2.UpdateInstanceRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.notebooks.v2.UpdateInstanceRequest} UpdateInstanceRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        UpdateInstanceRequest.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.notebooks.v2.UpdateInstanceRequest();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.instance = $root.google.cloud.notebooks.v2.Instance.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 2: {
                                        message.updateMask = $root.google.protobuf.FieldMask.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 3: {
                                        message.requestId = reader.string();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes an UpdateInstanceRequest message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.notebooks.v2.UpdateInstanceRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.notebooks.v2.UpdateInstanceRequest} UpdateInstanceRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        UpdateInstanceRequest.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies an UpdateInstanceRequest message.
                         * @function verify
                         * @memberof google.cloud.notebooks.v2.UpdateInstanceRequest
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        UpdateInstanceRequest.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.instance != null && message.hasOwnProperty("instance")) {
                                var error = $root.google.cloud.notebooks.v2.Instance.verify(message.instance);
                                if (error)
                                    return "instance." + error;
                            }
                            if (message.updateMask != null && message.hasOwnProperty("updateMask")) {
                                var error = $root.google.protobuf.FieldMask.verify(message.updateMask);
                                if (error)
                                    return "updateMask." + error;
                            }
                            if (message.requestId != null && message.hasOwnProperty("requestId"))
                                if (!$util.isString(message.requestId))
                                    return "requestId: string expected";
                            return null;
                        };
    
                        /**
                         * Creates an UpdateInstanceRequest message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.notebooks.v2.UpdateInstanceRequest
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.notebooks.v2.UpdateInstanceRequest} UpdateInstanceRequest
                         */
                        UpdateInstanceRequest.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.notebooks.v2.UpdateInstanceRequest)
                                return object;
                            var message = new $root.google.cloud.notebooks.v2.UpdateInstanceRequest();
                            if (object.instance != null) {
                                if (typeof object.instance !== "object")
                                    throw TypeError(".google.cloud.notebooks.v2.UpdateInstanceRequest.instance: object expected");
                                message.instance = $root.google.cloud.notebooks.v2.Instance.fromObject(object.instance);
                            }
                            if (object.updateMask != null) {
                                if (typeof object.updateMask !== "object")
                                    throw TypeError(".google.cloud.notebooks.v2.UpdateInstanceRequest.updateMask: object expected");
                                message.updateMask = $root.google.protobuf.FieldMask.fromObject(object.updateMask);
                            }
                            if (object.requestId != null)
                                message.requestId = String(object.requestId);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from an UpdateInstanceRequest message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.notebooks.v2.UpdateInstanceRequest
                         * @static
                         * @param {google.cloud.notebooks.v2.UpdateInstanceRequest} message UpdateInstanceRequest
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        UpdateInstanceRequest.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.instance = null;
                                object.updateMask = null;
                                object.requestId = "";
                            }
                            if (message.instance != null && message.hasOwnProperty("instance"))
                                object.instance = $root.google.cloud.notebooks.v2.Instance.toObject(message.instance, options);
                            if (message.updateMask != null && message.hasOwnProperty("updateMask"))
                                object.updateMask = $root.google.protobuf.FieldMask.toObject(message.updateMask, options);
                            if (message.requestId != null && message.hasOwnProperty("requestId"))
                                object.requestId = message.requestId;
                            return object;
                        };
    
                        /**
                         * Converts this UpdateInstanceRequest to JSON.
                         * @function toJSON
                         * @memberof google.cloud.notebooks.v2.UpdateInstanceRequest
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        UpdateInstanceRequest.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for UpdateInstanceRequest
                         * @function getTypeUrl
                         * @memberof google.cloud.notebooks.v2.UpdateInstanceRequest
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        UpdateInstanceRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.notebooks.v2.UpdateInstanceRequest";
                        };
    
                        return UpdateInstanceRequest;
                    })();
    
                    v2.DeleteInstanceRequest = (function() {
    
                        /**
                         * Properties of a DeleteInstanceRequest.
                         * @memberof google.cloud.notebooks.v2
                         * @interface IDeleteInstanceRequest
                         * @property {string|null} [name] DeleteInstanceRequest name
                         * @property {string|null} [requestId] DeleteInstanceRequest requestId
                         */
    
                        /**
                         * Constructs a new DeleteInstanceRequest.
                         * @memberof google.cloud.notebooks.v2
                         * @classdesc Represents a DeleteInstanceRequest.
                         * @implements IDeleteInstanceRequest
                         * @constructor
                         * @param {google.cloud.notebooks.v2.IDeleteInstanceRequest=} [properties] Properties to set
                         */
                        function DeleteInstanceRequest(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * DeleteInstanceRequest name.
                         * @member {string} name
                         * @memberof google.cloud.notebooks.v2.DeleteInstanceRequest
                         * @instance
                         */
                        DeleteInstanceRequest.prototype.name = "";
    
                        /**
                         * DeleteInstanceRequest requestId.
                         * @member {string} requestId
                         * @memberof google.cloud.notebooks.v2.DeleteInstanceRequest
                         * @instance
                         */
                        DeleteInstanceRequest.prototype.requestId = "";
    
                        /**
                         * Creates a new DeleteInstanceRequest instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.notebooks.v2.DeleteInstanceRequest
                         * @static
                         * @param {google.cloud.notebooks.v2.IDeleteInstanceRequest=} [properties] Properties to set
                         * @returns {google.cloud.notebooks.v2.DeleteInstanceRequest} DeleteInstanceRequest instance
                         */
                        DeleteInstanceRequest.create = function create(properties) {
                            return new DeleteInstanceRequest(properties);
                        };
    
                        /**
                         * Encodes the specified DeleteInstanceRequest message. Does not implicitly {@link google.cloud.notebooks.v2.DeleteInstanceRequest.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.notebooks.v2.DeleteInstanceRequest
                         * @static
                         * @param {google.cloud.notebooks.v2.IDeleteInstanceRequest} message DeleteInstanceRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        DeleteInstanceRequest.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                            if (message.requestId != null && Object.hasOwnProperty.call(message, "requestId"))
                                writer.uint32(/* id 2, wireType 2 =*/18).string(message.requestId);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified DeleteInstanceRequest message, length delimited. Does not implicitly {@link google.cloud.notebooks.v2.DeleteInstanceRequest.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.notebooks.v2.DeleteInstanceRequest
                         * @static
                         * @param {google.cloud.notebooks.v2.IDeleteInstanceRequest} message DeleteInstanceRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        DeleteInstanceRequest.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a DeleteInstanceRequest message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.notebooks.v2.DeleteInstanceRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.notebooks.v2.DeleteInstanceRequest} DeleteInstanceRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        DeleteInstanceRequest.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.notebooks.v2.DeleteInstanceRequest();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.name = reader.string();
                                        break;
                                    }
                                case 2: {
                                        message.requestId = reader.string();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a DeleteInstanceRequest message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.notebooks.v2.DeleteInstanceRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.notebooks.v2.DeleteInstanceRequest} DeleteInstanceRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        DeleteInstanceRequest.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a DeleteInstanceRequest message.
                         * @function verify
                         * @memberof google.cloud.notebooks.v2.DeleteInstanceRequest
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        DeleteInstanceRequest.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.name != null && message.hasOwnProperty("name"))
                                if (!$util.isString(message.name))
                                    return "name: string expected";
                            if (message.requestId != null && message.hasOwnProperty("requestId"))
                                if (!$util.isString(message.requestId))
                                    return "requestId: string expected";
                            return null;
                        };
    
                        /**
                         * Creates a DeleteInstanceRequest message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.notebooks.v2.DeleteInstanceRequest
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.notebooks.v2.DeleteInstanceRequest} DeleteInstanceRequest
                         */
                        DeleteInstanceRequest.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.notebooks.v2.DeleteInstanceRequest)
                                return object;
                            var message = new $root.google.cloud.notebooks.v2.DeleteInstanceRequest();
                            if (object.name != null)
                                message.name = String(object.name);
                            if (object.requestId != null)
                                message.requestId = String(object.requestId);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a DeleteInstanceRequest message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.notebooks.v2.DeleteInstanceRequest
                         * @static
                         * @param {google.cloud.notebooks.v2.DeleteInstanceRequest} message DeleteInstanceRequest
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        DeleteInstanceRequest.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.name = "";
                                object.requestId = "";
                            }
                            if (message.name != null && message.hasOwnProperty("name"))
                                object.name = message.name;
                            if (message.requestId != null && message.hasOwnProperty("requestId"))
                                object.requestId = message.requestId;
                            return object;
                        };
    
                        /**
                         * Converts this DeleteInstanceRequest to JSON.
                         * @function toJSON
                         * @memberof google.cloud.notebooks.v2.DeleteInstanceRequest
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        DeleteInstanceRequest.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for DeleteInstanceRequest
                         * @function getTypeUrl
                         * @memberof google.cloud.notebooks.v2.DeleteInstanceRequest
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        DeleteInstanceRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.notebooks.v2.DeleteInstanceRequest";
                        };
    
                        return DeleteInstanceRequest;
                    })();
    
                    v2.StartInstanceRequest = (function() {
    
                        /**
                         * Properties of a StartInstanceRequest.
                         * @memberof google.cloud.notebooks.v2
                         * @interface IStartInstanceRequest
                         * @property {string|null} [name] StartInstanceRequest name
                         */
    
                        /**
                         * Constructs a new StartInstanceRequest.
                         * @memberof google.cloud.notebooks.v2
                         * @classdesc Represents a StartInstanceRequest.
                         * @implements IStartInstanceRequest
                         * @constructor
                         * @param {google.cloud.notebooks.v2.IStartInstanceRequest=} [properties] Properties to set
                         */
                        function StartInstanceRequest(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * StartInstanceRequest name.
                         * @member {string} name
                         * @memberof google.cloud.notebooks.v2.StartInstanceRequest
                         * @instance
                         */
                        StartInstanceRequest.prototype.name = "";
    
                        /**
                         * Creates a new StartInstanceRequest instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.notebooks.v2.StartInstanceRequest
                         * @static
                         * @param {google.cloud.notebooks.v2.IStartInstanceRequest=} [properties] Properties to set
                         * @returns {google.cloud.notebooks.v2.StartInstanceRequest} StartInstanceRequest instance
                         */
                        StartInstanceRequest.create = function create(properties) {
                            return new StartInstanceRequest(properties);
                        };
    
                        /**
                         * Encodes the specified StartInstanceRequest message. Does not implicitly {@link google.cloud.notebooks.v2.StartInstanceRequest.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.notebooks.v2.StartInstanceRequest
                         * @static
                         * @param {google.cloud.notebooks.v2.IStartInstanceRequest} message StartInstanceRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        StartInstanceRequest.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified StartInstanceRequest message, length delimited. Does not implicitly {@link google.cloud.notebooks.v2.StartInstanceRequest.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.notebooks.v2.StartInstanceRequest
                         * @static
                         * @param {google.cloud.notebooks.v2.IStartInstanceRequest} message StartInstanceRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        StartInstanceRequest.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a StartInstanceRequest message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.notebooks.v2.StartInstanceRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.notebooks.v2.StartInstanceRequest} StartInstanceRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        StartInstanceRequest.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.notebooks.v2.StartInstanceRequest();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.name = reader.string();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a StartInstanceRequest message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.notebooks.v2.StartInstanceRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.notebooks.v2.StartInstanceRequest} StartInstanceRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        StartInstanceRequest.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a StartInstanceRequest message.
                         * @function verify
                         * @memberof google.cloud.notebooks.v2.StartInstanceRequest
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        StartInstanceRequest.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.name != null && message.hasOwnProperty("name"))
                                if (!$util.isString(message.name))
                                    return "name: string expected";
                            return null;
                        };
    
                        /**
                         * Creates a StartInstanceRequest message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.notebooks.v2.StartInstanceRequest
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.notebooks.v2.StartInstanceRequest} StartInstanceRequest
                         */
                        StartInstanceRequest.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.notebooks.v2.StartInstanceRequest)
                                return object;
                            var message = new $root.google.cloud.notebooks.v2.StartInstanceRequest();
                            if (object.name != null)
                                message.name = String(object.name);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a StartInstanceRequest message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.notebooks.v2.StartInstanceRequest
                         * @static
                         * @param {google.cloud.notebooks.v2.StartInstanceRequest} message StartInstanceRequest
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        StartInstanceRequest.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults)
                                object.name = "";
                            if (message.name != null && message.hasOwnProperty("name"))
                                object.name = message.name;
                            return object;
                        };
    
                        /**
                         * Converts this StartInstanceRequest to JSON.
                         * @function toJSON
                         * @memberof google.cloud.notebooks.v2.StartInstanceRequest
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        StartInstanceRequest.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for StartInstanceRequest
                         * @function getTypeUrl
                         * @memberof google.cloud.notebooks.v2.StartInstanceRequest
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        StartInstanceRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.notebooks.v2.StartInstanceRequest";
                        };
    
                        return StartInstanceRequest;
                    })();
    
                    v2.StopInstanceRequest = (function() {
    
                        /**
                         * Properties of a StopInstanceRequest.
                         * @memberof google.cloud.notebooks.v2
                         * @interface IStopInstanceRequest
                         * @property {string|null} [name] StopInstanceRequest name
                         */
    
                        /**
                         * Constructs a new StopInstanceRequest.
                         * @memberof google.cloud.notebooks.v2
                         * @classdesc Represents a StopInstanceRequest.
                         * @implements IStopInstanceRequest
                         * @constructor
                         * @param {google.cloud.notebooks.v2.IStopInstanceRequest=} [properties] Properties to set
                         */
                        function StopInstanceRequest(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * StopInstanceRequest name.
                         * @member {string} name
                         * @memberof google.cloud.notebooks.v2.StopInstanceRequest
                         * @instance
                         */
                        StopInstanceRequest.prototype.name = "";
    
                        /**
                         * Creates a new StopInstanceRequest instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.notebooks.v2.StopInstanceRequest
                         * @static
                         * @param {google.cloud.notebooks.v2.IStopInstanceRequest=} [properties] Properties to set
                         * @returns {google.cloud.notebooks.v2.StopInstanceRequest} StopInstanceRequest instance
                         */
                        StopInstanceRequest.create = function create(properties) {
                            return new StopInstanceRequest(properties);
                        };
    
                        /**
                         * Encodes the specified StopInstanceRequest message. Does not implicitly {@link google.cloud.notebooks.v2.StopInstanceRequest.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.notebooks.v2.StopInstanceRequest
                         * @static
                         * @param {google.cloud.notebooks.v2.IStopInstanceRequest} message StopInstanceRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        StopInstanceRequest.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified StopInstanceRequest message, length delimited. Does not implicitly {@link google.cloud.notebooks.v2.StopInstanceRequest.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.notebooks.v2.StopInstanceRequest
                         * @static
                         * @param {google.cloud.notebooks.v2.IStopInstanceRequest} message StopInstanceRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        StopInstanceRequest.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a StopInstanceRequest message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.notebooks.v2.StopInstanceRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.notebooks.v2.StopInstanceRequest} StopInstanceRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        StopInstanceRequest.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.notebooks.v2.StopInstanceRequest();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.name = reader.string();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a StopInstanceRequest message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.notebooks.v2.StopInstanceRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.notebooks.v2.StopInstanceRequest} StopInstanceRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        StopInstanceRequest.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a StopInstanceRequest message.
                         * @function verify
                         * @memberof google.cloud.notebooks.v2.StopInstanceRequest
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        StopInstanceRequest.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.name != null && message.hasOwnProperty("name"))
                                if (!$util.isString(message.name))
                                    return "name: string expected";
                            return null;
                        };
    
                        /**
                         * Creates a StopInstanceRequest message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.notebooks.v2.StopInstanceRequest
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.notebooks.v2.StopInstanceRequest} StopInstanceRequest
                         */
                        StopInstanceRequest.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.notebooks.v2.StopInstanceRequest)
                                return object;
                            var message = new $root.google.cloud.notebooks.v2.StopInstanceRequest();
                            if (object.name != null)
                                message.name = String(object.name);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a StopInstanceRequest message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.notebooks.v2.StopInstanceRequest
                         * @static
                         * @param {google.cloud.notebooks.v2.StopInstanceRequest} message StopInstanceRequest
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        StopInstanceRequest.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults)
                                object.name = "";
                            if (message.name != null && message.hasOwnProperty("name"))
                                object.name = message.name;
                            return object;
                        };
    
                        /**
                         * Converts this StopInstanceRequest to JSON.
                         * @function toJSON
                         * @memberof google.cloud.notebooks.v2.StopInstanceRequest
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        StopInstanceRequest.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for StopInstanceRequest
                         * @function getTypeUrl
                         * @memberof google.cloud.notebooks.v2.StopInstanceRequest
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        StopInstanceRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.notebooks.v2.StopInstanceRequest";
                        };
    
                        return StopInstanceRequest;
                    })();
    
                    v2.ResetInstanceRequest = (function() {
    
                        /**
                         * Properties of a ResetInstanceRequest.
                         * @memberof google.cloud.notebooks.v2
                         * @interface IResetInstanceRequest
                         * @property {string|null} [name] ResetInstanceRequest name
                         */
    
                        /**
                         * Constructs a new ResetInstanceRequest.
                         * @memberof google.cloud.notebooks.v2
                         * @classdesc Represents a ResetInstanceRequest.
                         * @implements IResetInstanceRequest
                         * @constructor
                         * @param {google.cloud.notebooks.v2.IResetInstanceRequest=} [properties] Properties to set
                         */
                        function ResetInstanceRequest(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * ResetInstanceRequest name.
                         * @member {string} name
                         * @memberof google.cloud.notebooks.v2.ResetInstanceRequest
                         * @instance
                         */
                        ResetInstanceRequest.prototype.name = "";
    
                        /**
                         * Creates a new ResetInstanceRequest instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.notebooks.v2.ResetInstanceRequest
                         * @static
                         * @param {google.cloud.notebooks.v2.IResetInstanceRequest=} [properties] Properties to set
                         * @returns {google.cloud.notebooks.v2.ResetInstanceRequest} ResetInstanceRequest instance
                         */
                        ResetInstanceRequest.create = function create(properties) {
                            return new ResetInstanceRequest(properties);
                        };
    
                        /**
                         * Encodes the specified ResetInstanceRequest message. Does not implicitly {@link google.cloud.notebooks.v2.ResetInstanceRequest.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.notebooks.v2.ResetInstanceRequest
                         * @static
                         * @param {google.cloud.notebooks.v2.IResetInstanceRequest} message ResetInstanceRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        ResetInstanceRequest.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified ResetInstanceRequest message, length delimited. Does not implicitly {@link google.cloud.notebooks.v2.ResetInstanceRequest.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.notebooks.v2.ResetInstanceRequest
                         * @static
                         * @param {google.cloud.notebooks.v2.IResetInstanceRequest} message ResetInstanceRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        ResetInstanceRequest.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a ResetInstanceRequest message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.notebooks.v2.ResetInstanceRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.notebooks.v2.ResetInstanceRequest} ResetInstanceRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        ResetInstanceRequest.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.notebooks.v2.ResetInstanceRequest();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.name = reader.string();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a ResetInstanceRequest message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.notebooks.v2.ResetInstanceRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.notebooks.v2.ResetInstanceRequest} ResetInstanceRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        ResetInstanceRequest.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a ResetInstanceRequest message.
                         * @function verify
                         * @memberof google.cloud.notebooks.v2.ResetInstanceRequest
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        ResetInstanceRequest.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.name != null && message.hasOwnProperty("name"))
                                if (!$util.isString(message.name))
                                    return "name: string expected";
                            return null;
                        };
    
                        /**
                         * Creates a ResetInstanceRequest message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.notebooks.v2.ResetInstanceRequest
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.notebooks.v2.ResetInstanceRequest} ResetInstanceRequest
                         */
                        ResetInstanceRequest.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.notebooks.v2.ResetInstanceRequest)
                                return object;
                            var message = new $root.google.cloud.notebooks.v2.ResetInstanceRequest();
                            if (object.name != null)
                                message.name = String(object.name);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a ResetInstanceRequest message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.notebooks.v2.ResetInstanceRequest
                         * @static
                         * @param {google.cloud.notebooks.v2.ResetInstanceRequest} message ResetInstanceRequest
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        ResetInstanceRequest.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults)
                                object.name = "";
                            if (message.name != null && message.hasOwnProperty("name"))
                                object.name = message.name;
                            return object;
                        };
    
                        /**
                         * Converts this ResetInstanceRequest to JSON.
                         * @function toJSON
                         * @memberof google.cloud.notebooks.v2.ResetInstanceRequest
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        ResetInstanceRequest.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for ResetInstanceRequest
                         * @function getTypeUrl
                         * @memberof google.cloud.notebooks.v2.ResetInstanceRequest
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        ResetInstanceRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.notebooks.v2.ResetInstanceRequest";
                        };
    
                        return ResetInstanceRequest;
                    })();
    
                    v2.CheckInstanceUpgradabilityRequest = (function() {
    
                        /**
                         * Properties of a CheckInstanceUpgradabilityRequest.
                         * @memberof google.cloud.notebooks.v2
                         * @interface ICheckInstanceUpgradabilityRequest
                         * @property {string|null} [notebookInstance] CheckInstanceUpgradabilityRequest notebookInstance
                         */
    
                        /**
                         * Constructs a new CheckInstanceUpgradabilityRequest.
                         * @memberof google.cloud.notebooks.v2
                         * @classdesc Represents a CheckInstanceUpgradabilityRequest.
                         * @implements ICheckInstanceUpgradabilityRequest
                         * @constructor
                         * @param {google.cloud.notebooks.v2.ICheckInstanceUpgradabilityRequest=} [properties] Properties to set
                         */
                        function CheckInstanceUpgradabilityRequest(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * CheckInstanceUpgradabilityRequest notebookInstance.
                         * @member {string} notebookInstance
                         * @memberof google.cloud.notebooks.v2.CheckInstanceUpgradabilityRequest
                         * @instance
                         */
                        CheckInstanceUpgradabilityRequest.prototype.notebookInstance = "";
    
                        /**
                         * Creates a new CheckInstanceUpgradabilityRequest instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.notebooks.v2.CheckInstanceUpgradabilityRequest
                         * @static
                         * @param {google.cloud.notebooks.v2.ICheckInstanceUpgradabilityRequest=} [properties] Properties to set
                         * @returns {google.cloud.notebooks.v2.CheckInstanceUpgradabilityRequest} CheckInstanceUpgradabilityRequest instance
                         */
                        CheckInstanceUpgradabilityRequest.create = function create(properties) {
                            return new CheckInstanceUpgradabilityRequest(properties);
                        };
    
                        /**
                         * Encodes the specified CheckInstanceUpgradabilityRequest message. Does not implicitly {@link google.cloud.notebooks.v2.CheckInstanceUpgradabilityRequest.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.notebooks.v2.CheckInstanceUpgradabilityRequest
                         * @static
                         * @param {google.cloud.notebooks.v2.ICheckInstanceUpgradabilityRequest} message CheckInstanceUpgradabilityRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        CheckInstanceUpgradabilityRequest.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.notebookInstance != null && Object.hasOwnProperty.call(message, "notebookInstance"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.notebookInstance);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified CheckInstanceUpgradabilityRequest message, length delimited. Does not implicitly {@link google.cloud.notebooks.v2.CheckInstanceUpgradabilityRequest.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.notebooks.v2.CheckInstanceUpgradabilityRequest
                         * @static
                         * @param {google.cloud.notebooks.v2.ICheckInstanceUpgradabilityRequest} message CheckInstanceUpgradabilityRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        CheckInstanceUpgradabilityRequest.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a CheckInstanceUpgradabilityRequest message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.notebooks.v2.CheckInstanceUpgradabilityRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.notebooks.v2.CheckInstanceUpgradabilityRequest} CheckInstanceUpgradabilityRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        CheckInstanceUpgradabilityRequest.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.notebooks.v2.CheckInstanceUpgradabilityRequest();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.notebookInstance = reader.string();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a CheckInstanceUpgradabilityRequest message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.notebooks.v2.CheckInstanceUpgradabilityRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.notebooks.v2.CheckInstanceUpgradabilityRequest} CheckInstanceUpgradabilityRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        CheckInstanceUpgradabilityRequest.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a CheckInstanceUpgradabilityRequest message.
                         * @function verify
                         * @memberof google.cloud.notebooks.v2.CheckInstanceUpgradabilityRequest
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        CheckInstanceUpgradabilityRequest.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.notebookInstance != null && message.hasOwnProperty("notebookInstance"))
                                if (!$util.isString(message.notebookInstance))
                                    return "notebookInstance: string expected";
                            return null;
                        };
    
                        /**
                         * Creates a CheckInstanceUpgradabilityRequest message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.notebooks.v2.CheckInstanceUpgradabilityRequest
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.notebooks.v2.CheckInstanceUpgradabilityRequest} CheckInstanceUpgradabilityRequest
                         */
                        CheckInstanceUpgradabilityRequest.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.notebooks.v2.CheckInstanceUpgradabilityRequest)
                                return object;
                            var message = new $root.google.cloud.notebooks.v2.CheckInstanceUpgradabilityRequest();
                            if (object.notebookInstance != null)
                                message.notebookInstance = String(object.notebookInstance);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a CheckInstanceUpgradabilityRequest message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.notebooks.v2.CheckInstanceUpgradabilityRequest
                         * @static
                         * @param {google.cloud.notebooks.v2.CheckInstanceUpgradabilityRequest} message CheckInstanceUpgradabilityRequest
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        CheckInstanceUpgradabilityRequest.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults)
                                object.notebookInstance = "";
                            if (message.notebookInstance != null && message.hasOwnProperty("notebookInstance"))
                                object.notebookInstance = message.notebookInstance;
                            return object;
                        };
    
                        /**
                         * Converts this CheckInstanceUpgradabilityRequest to JSON.
                         * @function toJSON
                         * @memberof google.cloud.notebooks.v2.CheckInstanceUpgradabilityRequest
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        CheckInstanceUpgradabilityRequest.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for CheckInstanceUpgradabilityRequest
                         * @function getTypeUrl
                         * @memberof google.cloud.notebooks.v2.CheckInstanceUpgradabilityRequest
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        CheckInstanceUpgradabilityRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.notebooks.v2.CheckInstanceUpgradabilityRequest";
                        };
    
                        return CheckInstanceUpgradabilityRequest;
                    })();
    
                    v2.CheckInstanceUpgradabilityResponse = (function() {
    
                        /**
                         * Properties of a CheckInstanceUpgradabilityResponse.
                         * @memberof google.cloud.notebooks.v2
                         * @interface ICheckInstanceUpgradabilityResponse
                         * @property {boolean|null} [upgradeable] CheckInstanceUpgradabilityResponse upgradeable
                         * @property {string|null} [upgradeVersion] CheckInstanceUpgradabilityResponse upgradeVersion
                         * @property {string|null} [upgradeInfo] CheckInstanceUpgradabilityResponse upgradeInfo
                         * @property {string|null} [upgradeImage] CheckInstanceUpgradabilityResponse upgradeImage
                         */
    
                        /**
                         * Constructs a new CheckInstanceUpgradabilityResponse.
                         * @memberof google.cloud.notebooks.v2
                         * @classdesc Represents a CheckInstanceUpgradabilityResponse.
                         * @implements ICheckInstanceUpgradabilityResponse
                         * @constructor
                         * @param {google.cloud.notebooks.v2.ICheckInstanceUpgradabilityResponse=} [properties] Properties to set
                         */
                        function CheckInstanceUpgradabilityResponse(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * CheckInstanceUpgradabilityResponse upgradeable.
                         * @member {boolean} upgradeable
                         * @memberof google.cloud.notebooks.v2.CheckInstanceUpgradabilityResponse
                         * @instance
                         */
                        CheckInstanceUpgradabilityResponse.prototype.upgradeable = false;
    
                        /**
                         * CheckInstanceUpgradabilityResponse upgradeVersion.
                         * @member {string} upgradeVersion
                         * @memberof google.cloud.notebooks.v2.CheckInstanceUpgradabilityResponse
                         * @instance
                         */
                        CheckInstanceUpgradabilityResponse.prototype.upgradeVersion = "";
    
                        /**
                         * CheckInstanceUpgradabilityResponse upgradeInfo.
                         * @member {string} upgradeInfo
                         * @memberof google.cloud.notebooks.v2.CheckInstanceUpgradabilityResponse
                         * @instance
                         */
                        CheckInstanceUpgradabilityResponse.prototype.upgradeInfo = "";
    
                        /**
                         * CheckInstanceUpgradabilityResponse upgradeImage.
                         * @member {string} upgradeImage
                         * @memberof google.cloud.notebooks.v2.CheckInstanceUpgradabilityResponse
                         * @instance
                         */
                        CheckInstanceUpgradabilityResponse.prototype.upgradeImage = "";
    
                        /**
                         * Creates a new CheckInstanceUpgradabilityResponse instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.notebooks.v2.CheckInstanceUpgradabilityResponse
                         * @static
                         * @param {google.cloud.notebooks.v2.ICheckInstanceUpgradabilityResponse=} [properties] Properties to set
                         * @returns {google.cloud.notebooks.v2.CheckInstanceUpgradabilityResponse} CheckInstanceUpgradabilityResponse instance
                         */
                        CheckInstanceUpgradabilityResponse.create = function create(properties) {
                            return new CheckInstanceUpgradabilityResponse(properties);
                        };
    
                        /**
                         * Encodes the specified CheckInstanceUpgradabilityResponse message. Does not implicitly {@link google.cloud.notebooks.v2.CheckInstanceUpgradabilityResponse.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.notebooks.v2.CheckInstanceUpgradabilityResponse
                         * @static
                         * @param {google.cloud.notebooks.v2.ICheckInstanceUpgradabilityResponse} message CheckInstanceUpgradabilityResponse message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        CheckInstanceUpgradabilityResponse.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.upgradeable != null && Object.hasOwnProperty.call(message, "upgradeable"))
                                writer.uint32(/* id 1, wireType 0 =*/8).bool(message.upgradeable);
                            if (message.upgradeVersion != null && Object.hasOwnProperty.call(message, "upgradeVersion"))
                                writer.uint32(/* id 2, wireType 2 =*/18).string(message.upgradeVersion);
                            if (message.upgradeInfo != null && Object.hasOwnProperty.call(message, "upgradeInfo"))
                                writer.uint32(/* id 3, wireType 2 =*/26).string(message.upgradeInfo);
                            if (message.upgradeImage != null && Object.hasOwnProperty.call(message, "upgradeImage"))
                                writer.uint32(/* id 4, wireType 2 =*/34).string(message.upgradeImage);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified CheckInstanceUpgradabilityResponse message, length delimited. Does not implicitly {@link google.cloud.notebooks.v2.CheckInstanceUpgradabilityResponse.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.notebooks.v2.CheckInstanceUpgradabilityResponse
                         * @static
                         * @param {google.cloud.notebooks.v2.ICheckInstanceUpgradabilityResponse} message CheckInstanceUpgradabilityResponse message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        CheckInstanceUpgradabilityResponse.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a CheckInstanceUpgradabilityResponse message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.notebooks.v2.CheckInstanceUpgradabilityResponse
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.notebooks.v2.CheckInstanceUpgradabilityResponse} CheckInstanceUpgradabilityResponse
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        CheckInstanceUpgradabilityResponse.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.notebooks.v2.CheckInstanceUpgradabilityResponse();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.upgradeable = reader.bool();
                                        break;
                                    }
                                case 2: {
                                        message.upgradeVersion = reader.string();
                                        break;
                                    }
                                case 3: {
                                        message.upgradeInfo = reader.string();
                                        break;
                                    }
                                case 4: {
                                        message.upgradeImage = reader.string();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a CheckInstanceUpgradabilityResponse message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.notebooks.v2.CheckInstanceUpgradabilityResponse
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.notebooks.v2.CheckInstanceUpgradabilityResponse} CheckInstanceUpgradabilityResponse
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        CheckInstanceUpgradabilityResponse.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a CheckInstanceUpgradabilityResponse message.
                         * @function verify
                         * @memberof google.cloud.notebooks.v2.CheckInstanceUpgradabilityResponse
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        CheckInstanceUpgradabilityResponse.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.upgradeable != null && message.hasOwnProperty("upgradeable"))
                                if (typeof message.upgradeable !== "boolean")
                                    return "upgradeable: boolean expected";
                            if (message.upgradeVersion != null && message.hasOwnProperty("upgradeVersion"))
                                if (!$util.isString(message.upgradeVersion))
                                    return "upgradeVersion: string expected";
                            if (message.upgradeInfo != null && message.hasOwnProperty("upgradeInfo"))
                                if (!$util.isString(message.upgradeInfo))
                                    return "upgradeInfo: string expected";
                            if (message.upgradeImage != null && message.hasOwnProperty("upgradeImage"))
                                if (!$util.isString(message.upgradeImage))
                                    return "upgradeImage: string expected";
                            return null;
                        };
    
                        /**
                         * Creates a CheckInstanceUpgradabilityResponse message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.notebooks.v2.CheckInstanceUpgradabilityResponse
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.notebooks.v2.CheckInstanceUpgradabilityResponse} CheckInstanceUpgradabilityResponse
                         */
                        CheckInstanceUpgradabilityResponse.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.notebooks.v2.CheckInstanceUpgradabilityResponse)
                                return object;
                            var message = new $root.google.cloud.notebooks.v2.CheckInstanceUpgradabilityResponse();
                            if (object.upgradeable != null)
                                message.upgradeable = Boolean(object.upgradeable);
                            if (object.upgradeVersion != null)
                                message.upgradeVersion = String(object.upgradeVersion);
                            if (object.upgradeInfo != null)
                                message.upgradeInfo = String(object.upgradeInfo);
                            if (object.upgradeImage != null)
                                message.upgradeImage = String(object.upgradeImage);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a CheckInstanceUpgradabilityResponse message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.notebooks.v2.CheckInstanceUpgradabilityResponse
                         * @static
                         * @param {google.cloud.notebooks.v2.CheckInstanceUpgradabilityResponse} message CheckInstanceUpgradabilityResponse
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        CheckInstanceUpgradabilityResponse.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.upgradeable = false;
                                object.upgradeVersion = "";
                                object.upgradeInfo = "";
                                object.upgradeImage = "";
                            }
                            if (message.upgradeable != null && message.hasOwnProperty("upgradeable"))
                                object.upgradeable = message.upgradeable;
                            if (message.upgradeVersion != null && message.hasOwnProperty("upgradeVersion"))
                                object.upgradeVersion = message.upgradeVersion;
                            if (message.upgradeInfo != null && message.hasOwnProperty("upgradeInfo"))
                                object.upgradeInfo = message.upgradeInfo;
                            if (message.upgradeImage != null && message.hasOwnProperty("upgradeImage"))
                                object.upgradeImage = message.upgradeImage;
                            return object;
                        };
    
                        /**
                         * Converts this CheckInstanceUpgradabilityResponse to JSON.
                         * @function toJSON
                         * @memberof google.cloud.notebooks.v2.CheckInstanceUpgradabilityResponse
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        CheckInstanceUpgradabilityResponse.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for CheckInstanceUpgradabilityResponse
                         * @function getTypeUrl
                         * @memberof google.cloud.notebooks.v2.CheckInstanceUpgradabilityResponse
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        CheckInstanceUpgradabilityResponse.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.notebooks.v2.CheckInstanceUpgradabilityResponse";
                        };
    
                        return CheckInstanceUpgradabilityResponse;
                    })();
    
                    v2.UpgradeInstanceRequest = (function() {
    
                        /**
                         * Properties of an UpgradeInstanceRequest.
                         * @memberof google.cloud.notebooks.v2
                         * @interface IUpgradeInstanceRequest
                         * @property {string|null} [name] UpgradeInstanceRequest name
                         */
    
                        /**
                         * Constructs a new UpgradeInstanceRequest.
                         * @memberof google.cloud.notebooks.v2
                         * @classdesc Represents an UpgradeInstanceRequest.
                         * @implements IUpgradeInstanceRequest
                         * @constructor
                         * @param {google.cloud.notebooks.v2.IUpgradeInstanceRequest=} [properties] Properties to set
                         */
                        function UpgradeInstanceRequest(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * UpgradeInstanceRequest name.
                         * @member {string} name
                         * @memberof google.cloud.notebooks.v2.UpgradeInstanceRequest
                         * @instance
                         */
                        UpgradeInstanceRequest.prototype.name = "";
    
                        /**
                         * Creates a new UpgradeInstanceRequest instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.notebooks.v2.UpgradeInstanceRequest
                         * @static
                         * @param {google.cloud.notebooks.v2.IUpgradeInstanceRequest=} [properties] Properties to set
                         * @returns {google.cloud.notebooks.v2.UpgradeInstanceRequest} UpgradeInstanceRequest instance
                         */
                        UpgradeInstanceRequest.create = function create(properties) {
                            return new UpgradeInstanceRequest(properties);
                        };
    
                        /**
                         * Encodes the specified UpgradeInstanceRequest message. Does not implicitly {@link google.cloud.notebooks.v2.UpgradeInstanceRequest.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.notebooks.v2.UpgradeInstanceRequest
                         * @static
                         * @param {google.cloud.notebooks.v2.IUpgradeInstanceRequest} message UpgradeInstanceRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        UpgradeInstanceRequest.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified UpgradeInstanceRequest message, length delimited. Does not implicitly {@link google.cloud.notebooks.v2.UpgradeInstanceRequest.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.notebooks.v2.UpgradeInstanceRequest
                         * @static
                         * @param {google.cloud.notebooks.v2.IUpgradeInstanceRequest} message UpgradeInstanceRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        UpgradeInstanceRequest.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes an UpgradeInstanceRequest message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.notebooks.v2.UpgradeInstanceRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.notebooks.v2.UpgradeInstanceRequest} UpgradeInstanceRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        UpgradeInstanceRequest.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.notebooks.v2.UpgradeInstanceRequest();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.name = reader.string();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes an UpgradeInstanceRequest message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.notebooks.v2.UpgradeInstanceRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.notebooks.v2.UpgradeInstanceRequest} UpgradeInstanceRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        UpgradeInstanceRequest.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies an UpgradeInstanceRequest message.
                         * @function verify
                         * @memberof google.cloud.notebooks.v2.UpgradeInstanceRequest
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        UpgradeInstanceRequest.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.name != null && message.hasOwnProperty("name"))
                                if (!$util.isString(message.name))
                                    return "name: string expected";
                            return null;
                        };
    
                        /**
                         * Creates an UpgradeInstanceRequest message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.notebooks.v2.UpgradeInstanceRequest
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.notebooks.v2.UpgradeInstanceRequest} UpgradeInstanceRequest
                         */
                        UpgradeInstanceRequest.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.notebooks.v2.UpgradeInstanceRequest)
                                return object;
                            var message = new $root.google.cloud.notebooks.v2.UpgradeInstanceRequest();
                            if (object.name != null)
                                message.name = String(object.name);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from an UpgradeInstanceRequest message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.notebooks.v2.UpgradeInstanceRequest
                         * @static
                         * @param {google.cloud.notebooks.v2.UpgradeInstanceRequest} message UpgradeInstanceRequest
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        UpgradeInstanceRequest.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults)
                                object.name = "";
                            if (message.name != null && message.hasOwnProperty("name"))
                                object.name = message.name;
                            return object;
                        };
    
                        /**
                         * Converts this UpgradeInstanceRequest to JSON.
                         * @function toJSON
                         * @memberof google.cloud.notebooks.v2.UpgradeInstanceRequest
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        UpgradeInstanceRequest.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for UpgradeInstanceRequest
                         * @function getTypeUrl
                         * @memberof google.cloud.notebooks.v2.UpgradeInstanceRequest
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        UpgradeInstanceRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.notebooks.v2.UpgradeInstanceRequest";
                        };
    
                        return UpgradeInstanceRequest;
                    })();
    
                    v2.RollbackInstanceRequest = (function() {
    
                        /**
                         * Properties of a RollbackInstanceRequest.
                         * @memberof google.cloud.notebooks.v2
                         * @interface IRollbackInstanceRequest
                         * @property {string|null} [name] RollbackInstanceRequest name
                         * @property {string|null} [targetSnapshot] RollbackInstanceRequest targetSnapshot
                         * @property {string|null} [revisionId] RollbackInstanceRequest revisionId
                         */
    
                        /**
                         * Constructs a new RollbackInstanceRequest.
                         * @memberof google.cloud.notebooks.v2
                         * @classdesc Represents a RollbackInstanceRequest.
                         * @implements IRollbackInstanceRequest
                         * @constructor
                         * @param {google.cloud.notebooks.v2.IRollbackInstanceRequest=} [properties] Properties to set
                         */
                        function RollbackInstanceRequest(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * RollbackInstanceRequest name.
                         * @member {string} name
                         * @memberof google.cloud.notebooks.v2.RollbackInstanceRequest
                         * @instance
                         */
                        RollbackInstanceRequest.prototype.name = "";
    
                        /**
                         * RollbackInstanceRequest targetSnapshot.
                         * @member {string} targetSnapshot
                         * @memberof google.cloud.notebooks.v2.RollbackInstanceRequest
                         * @instance
                         */
                        RollbackInstanceRequest.prototype.targetSnapshot = "";
    
                        /**
                         * RollbackInstanceRequest revisionId.
                         * @member {string} revisionId
                         * @memberof google.cloud.notebooks.v2.RollbackInstanceRequest
                         * @instance
                         */
                        RollbackInstanceRequest.prototype.revisionId = "";
    
                        /**
                         * Creates a new RollbackInstanceRequest instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.notebooks.v2.RollbackInstanceRequest
                         * @static
                         * @param {google.cloud.notebooks.v2.IRollbackInstanceRequest=} [properties] Properties to set
                         * @returns {google.cloud.notebooks.v2.RollbackInstanceRequest} RollbackInstanceRequest instance
                         */
                        RollbackInstanceRequest.create = function create(properties) {
                            return new RollbackInstanceRequest(properties);
                        };
    
                        /**
                         * Encodes the specified RollbackInstanceRequest message. Does not implicitly {@link google.cloud.notebooks.v2.RollbackInstanceRequest.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.notebooks.v2.RollbackInstanceRequest
                         * @static
                         * @param {google.cloud.notebooks.v2.IRollbackInstanceRequest} message RollbackInstanceRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        RollbackInstanceRequest.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                            if (message.targetSnapshot != null && Object.hasOwnProperty.call(message, "targetSnapshot"))
                                writer.uint32(/* id 2, wireType 2 =*/18).string(message.targetSnapshot);
                            if (message.revisionId != null && Object.hasOwnProperty.call(message, "revisionId"))
                                writer.uint32(/* id 3, wireType 2 =*/26).string(message.revisionId);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified RollbackInstanceRequest message, length delimited. Does not implicitly {@link google.cloud.notebooks.v2.RollbackInstanceRequest.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.notebooks.v2.RollbackInstanceRequest
                         * @static
                         * @param {google.cloud.notebooks.v2.IRollbackInstanceRequest} message RollbackInstanceRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        RollbackInstanceRequest.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a RollbackInstanceRequest message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.notebooks.v2.RollbackInstanceRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.notebooks.v2.RollbackInstanceRequest} RollbackInstanceRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        RollbackInstanceRequest.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.notebooks.v2.RollbackInstanceRequest();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.name = reader.string();
                                        break;
                                    }
                                case 2: {
                                        message.targetSnapshot = reader.string();
                                        break;
                                    }
                                case 3: {
                                        message.revisionId = reader.string();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a RollbackInstanceRequest message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.notebooks.v2.RollbackInstanceRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.notebooks.v2.RollbackInstanceRequest} RollbackInstanceRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        RollbackInstanceRequest.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a RollbackInstanceRequest message.
                         * @function verify
                         * @memberof google.cloud.notebooks.v2.RollbackInstanceRequest
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        RollbackInstanceRequest.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.name != null && message.hasOwnProperty("name"))
                                if (!$util.isString(message.name))
                                    return "name: string expected";
                            if (message.targetSnapshot != null && message.hasOwnProperty("targetSnapshot"))
                                if (!$util.isString(message.targetSnapshot))
                                    return "targetSnapshot: string expected";
                            if (message.revisionId != null && message.hasOwnProperty("revisionId"))
                                if (!$util.isString(message.revisionId))
                                    return "revisionId: string expected";
                            return null;
                        };
    
                        /**
                         * Creates a RollbackInstanceRequest message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.notebooks.v2.RollbackInstanceRequest
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.notebooks.v2.RollbackInstanceRequest} RollbackInstanceRequest
                         */
                        RollbackInstanceRequest.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.notebooks.v2.RollbackInstanceRequest)
                                return object;
                            var message = new $root.google.cloud.notebooks.v2.RollbackInstanceRequest();
                            if (object.name != null)
                                message.name = String(object.name);
                            if (object.targetSnapshot != null)
                                message.targetSnapshot = String(object.targetSnapshot);
                            if (object.revisionId != null)
                                message.revisionId = String(object.revisionId);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a RollbackInstanceRequest message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.notebooks.v2.RollbackInstanceRequest
                         * @static
                         * @param {google.cloud.notebooks.v2.RollbackInstanceRequest} message RollbackInstanceRequest
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        RollbackInstanceRequest.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.name = "";
                                object.targetSnapshot = "";
                                object.revisionId = "";
                            }
                            if (message.name != null && message.hasOwnProperty("name"))
                                object.name = message.name;
                            if (message.targetSnapshot != null && message.hasOwnProperty("targetSnapshot"))
                                object.targetSnapshot = message.targetSnapshot;
                            if (message.revisionId != null && message.hasOwnProperty("revisionId"))
                                object.revisionId = message.revisionId;
                            return object;
                        };
    
                        /**
                         * Converts this RollbackInstanceRequest to JSON.
                         * @function toJSON
                         * @memberof google.cloud.notebooks.v2.RollbackInstanceRequest
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        RollbackInstanceRequest.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for RollbackInstanceRequest
                         * @function getTypeUrl
                         * @memberof google.cloud.notebooks.v2.RollbackInstanceRequest
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        RollbackInstanceRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.notebooks.v2.RollbackInstanceRequest";
                        };
    
                        return RollbackInstanceRequest;
                    })();
    
                    v2.DiagnoseInstanceRequest = (function() {
    
                        /**
                         * Properties of a DiagnoseInstanceRequest.
                         * @memberof google.cloud.notebooks.v2
                         * @interface IDiagnoseInstanceRequest
                         * @property {string|null} [name] DiagnoseInstanceRequest name
                         * @property {google.cloud.notebooks.v2.IDiagnosticConfig|null} [diagnosticConfig] DiagnoseInstanceRequest diagnosticConfig
                         * @property {number|null} [timeoutMinutes] DiagnoseInstanceRequest timeoutMinutes
                         */
    
                        /**
                         * Constructs a new DiagnoseInstanceRequest.
                         * @memberof google.cloud.notebooks.v2
                         * @classdesc Represents a DiagnoseInstanceRequest.
                         * @implements IDiagnoseInstanceRequest
                         * @constructor
                         * @param {google.cloud.notebooks.v2.IDiagnoseInstanceRequest=} [properties] Properties to set
                         */
                        function DiagnoseInstanceRequest(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * DiagnoseInstanceRequest name.
                         * @member {string} name
                         * @memberof google.cloud.notebooks.v2.DiagnoseInstanceRequest
                         * @instance
                         */
                        DiagnoseInstanceRequest.prototype.name = "";
    
                        /**
                         * DiagnoseInstanceRequest diagnosticConfig.
                         * @member {google.cloud.notebooks.v2.IDiagnosticConfig|null|undefined} diagnosticConfig
                         * @memberof google.cloud.notebooks.v2.DiagnoseInstanceRequest
                         * @instance
                         */
                        DiagnoseInstanceRequest.prototype.diagnosticConfig = null;
    
                        /**
                         * DiagnoseInstanceRequest timeoutMinutes.
                         * @member {number} timeoutMinutes
                         * @memberof google.cloud.notebooks.v2.DiagnoseInstanceRequest
                         * @instance
                         */
                        DiagnoseInstanceRequest.prototype.timeoutMinutes = 0;
    
                        /**
                         * Creates a new DiagnoseInstanceRequest instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.notebooks.v2.DiagnoseInstanceRequest
                         * @static
                         * @param {google.cloud.notebooks.v2.IDiagnoseInstanceRequest=} [properties] Properties to set
                         * @returns {google.cloud.notebooks.v2.DiagnoseInstanceRequest} DiagnoseInstanceRequest instance
                         */
                        DiagnoseInstanceRequest.create = function create(properties) {
                            return new DiagnoseInstanceRequest(properties);
                        };
    
                        /**
                         * Encodes the specified DiagnoseInstanceRequest message. Does not implicitly {@link google.cloud.notebooks.v2.DiagnoseInstanceRequest.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.notebooks.v2.DiagnoseInstanceRequest
                         * @static
                         * @param {google.cloud.notebooks.v2.IDiagnoseInstanceRequest} message DiagnoseInstanceRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        DiagnoseInstanceRequest.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                            if (message.diagnosticConfig != null && Object.hasOwnProperty.call(message, "diagnosticConfig"))
                                $root.google.cloud.notebooks.v2.DiagnosticConfig.encode(message.diagnosticConfig, writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                            if (message.timeoutMinutes != null && Object.hasOwnProperty.call(message, "timeoutMinutes"))
                                writer.uint32(/* id 3, wireType 0 =*/24).int32(message.timeoutMinutes);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified DiagnoseInstanceRequest message, length delimited. Does not implicitly {@link google.cloud.notebooks.v2.DiagnoseInstanceRequest.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.notebooks.v2.DiagnoseInstanceRequest
                         * @static
                         * @param {google.cloud.notebooks.v2.IDiagnoseInstanceRequest} message DiagnoseInstanceRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        DiagnoseInstanceRequest.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a DiagnoseInstanceRequest message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.notebooks.v2.DiagnoseInstanceRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.notebooks.v2.DiagnoseInstanceRequest} DiagnoseInstanceRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        DiagnoseInstanceRequest.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.notebooks.v2.DiagnoseInstanceRequest();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.name = reader.string();
                                        break;
                                    }
                                case 2: {
                                        message.diagnosticConfig = $root.google.cloud.notebooks.v2.DiagnosticConfig.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 3: {
                                        message.timeoutMinutes = reader.int32();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a DiagnoseInstanceRequest message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.notebooks.v2.DiagnoseInstanceRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.notebooks.v2.DiagnoseInstanceRequest} DiagnoseInstanceRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        DiagnoseInstanceRequest.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a DiagnoseInstanceRequest message.
                         * @function verify
                         * @memberof google.cloud.notebooks.v2.DiagnoseInstanceRequest
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        DiagnoseInstanceRequest.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.name != null && message.hasOwnProperty("name"))
                                if (!$util.isString(message.name))
                                    return "name: string expected";
                            if (message.diagnosticConfig != null && message.hasOwnProperty("diagnosticConfig")) {
                                var error = $root.google.cloud.notebooks.v2.DiagnosticConfig.verify(message.diagnosticConfig);
                                if (error)
                                    return "diagnosticConfig." + error;
                            }
                            if (message.timeoutMinutes != null && message.hasOwnProperty("timeoutMinutes"))
                                if (!$util.isInteger(message.timeoutMinutes))
                                    return "timeoutMinutes: integer expected";
                            return null;
                        };
    
                        /**
                         * Creates a DiagnoseInstanceRequest message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.notebooks.v2.DiagnoseInstanceRequest
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.notebooks.v2.DiagnoseInstanceRequest} DiagnoseInstanceRequest
                         */
                        DiagnoseInstanceRequest.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.notebooks.v2.DiagnoseInstanceRequest)
                                return object;
                            var message = new $root.google.cloud.notebooks.v2.DiagnoseInstanceRequest();
                            if (object.name != null)
                                message.name = String(object.name);
                            if (object.diagnosticConfig != null) {
                                if (typeof object.diagnosticConfig !== "object")
                                    throw TypeError(".google.cloud.notebooks.v2.DiagnoseInstanceRequest.diagnosticConfig: object expected");
                                message.diagnosticConfig = $root.google.cloud.notebooks.v2.DiagnosticConfig.fromObject(object.diagnosticConfig);
                            }
                            if (object.timeoutMinutes != null)
                                message.timeoutMinutes = object.timeoutMinutes | 0;
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a DiagnoseInstanceRequest message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.notebooks.v2.DiagnoseInstanceRequest
                         * @static
                         * @param {google.cloud.notebooks.v2.DiagnoseInstanceRequest} message DiagnoseInstanceRequest
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        DiagnoseInstanceRequest.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.name = "";
                                object.diagnosticConfig = null;
                                object.timeoutMinutes = 0;
                            }
                            if (message.name != null && message.hasOwnProperty("name"))
                                object.name = message.name;
                            if (message.diagnosticConfig != null && message.hasOwnProperty("diagnosticConfig"))
                                object.diagnosticConfig = $root.google.cloud.notebooks.v2.DiagnosticConfig.toObject(message.diagnosticConfig, options);
                            if (message.timeoutMinutes != null && message.hasOwnProperty("timeoutMinutes"))
                                object.timeoutMinutes = message.timeoutMinutes;
                            return object;
                        };
    
                        /**
                         * Converts this DiagnoseInstanceRequest to JSON.
                         * @function toJSON
                         * @memberof google.cloud.notebooks.v2.DiagnoseInstanceRequest
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        DiagnoseInstanceRequest.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for DiagnoseInstanceRequest
                         * @function getTypeUrl
                         * @memberof google.cloud.notebooks.v2.DiagnoseInstanceRequest
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        DiagnoseInstanceRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.notebooks.v2.DiagnoseInstanceRequest";
                        };
    
                        return DiagnoseInstanceRequest;
                    })();
    
                    return v2;
                })();
    
                return notebooks;
            })();
    
            return cloud;
        })();
    
        google.api = (function() {
    
            /**
             * Namespace api.
             * @memberof google
             * @namespace
             */
            var api = {};
    
            /**
             * FieldBehavior enum.
             * @name google.api.FieldBehavior
             * @enum {number}
             * @property {number} FIELD_BEHAVIOR_UNSPECIFIED=0 FIELD_BEHAVIOR_UNSPECIFIED value
             * @property {number} OPTIONAL=1 OPTIONAL value
             * @property {number} REQUIRED=2 REQUIRED value
             * @property {number} OUTPUT_ONLY=3 OUTPUT_ONLY value
             * @property {number} INPUT_ONLY=4 INPUT_ONLY value
             * @property {number} IMMUTABLE=5 IMMUTABLE value
             * @property {number} UNORDERED_LIST=6 UNORDERED_LIST value
             * @property {number} NON_EMPTY_DEFAULT=7 NON_EMPTY_DEFAULT value
             */
            api.FieldBehavior = (function() {
                var valuesById = {}, values = Object.create(valuesById);
                values[valuesById[0] = "FIELD_BEHAVIOR_UNSPECIFIED"] = 0;
                values[valuesById[1] = "OPTIONAL"] = 1;
                values[valuesById[2] = "REQUIRED"] = 2;
                values[valuesById[3] = "OUTPUT_ONLY"] = 3;
                values[valuesById[4] = "INPUT_ONLY"] = 4;
                values[valuesById[5] = "IMMUTABLE"] = 5;
                values[valuesById[6] = "UNORDERED_LIST"] = 6;
                values[valuesById[7] = "NON_EMPTY_DEFAULT"] = 7;
                return values;
            })();
    
            api.ResourceDescriptor = (function() {
    
                /**
                 * Properties of a ResourceDescriptor.
                 * @memberof google.api
                 * @interface IResourceDescriptor
                 * @property {string|null} [type] ResourceDescriptor type
                 * @property {Array.<string>|null} [pattern] ResourceDescriptor pattern
                 * @property {string|null} [nameField] ResourceDescriptor nameField
                 * @property {google.api.ResourceDescriptor.History|null} [history] ResourceDescriptor history
                 * @property {string|null} [plural] ResourceDescriptor plural
                 * @property {string|null} [singular] ResourceDescriptor singular
                 * @property {Array.<google.api.ResourceDescriptor.Style>|null} [style] ResourceDescriptor style
                 */
    
                /**
                 * Constructs a new ResourceDescriptor.
                 * @memberof google.api
                 * @classdesc Represents a ResourceDescriptor.
                 * @implements IResourceDescriptor
                 * @constructor
                 * @param {google.api.IResourceDescriptor=} [properties] Properties to set
                 */
                function ResourceDescriptor(properties) {
                    this.pattern = [];
                    this.style = [];
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * ResourceDescriptor type.
                 * @member {string} type
                 * @memberof google.api.ResourceDescriptor
                 * @instance
                 */
                ResourceDescriptor.prototype.type = "";
    
                /**
                 * ResourceDescriptor pattern.
                 * @member {Array.<string>} pattern
                 * @memberof google.api.ResourceDescriptor
                 * @instance
                 */
                ResourceDescriptor.prototype.pattern = $util.emptyArray;
    
                /**
                 * ResourceDescriptor nameField.
                 * @member {string} nameField
                 * @memberof google.api.ResourceDescriptor
                 * @instance
                 */
                ResourceDescriptor.prototype.nameField = "";
    
                /**
                 * ResourceDescriptor history.
                 * @member {google.api.ResourceDescriptor.History} history
                 * @memberof google.api.ResourceDescriptor
                 * @instance
                 */
                ResourceDescriptor.prototype.history = 0;
    
                /**
                 * ResourceDescriptor plural.
                 * @member {string} plural
                 * @memberof google.api.ResourceDescriptor
                 * @instance
                 */
                ResourceDescriptor.prototype.plural = "";
    
                /**
                 * ResourceDescriptor singular.
                 * @member {string} singular
                 * @memberof google.api.ResourceDescriptor
                 * @instance
                 */
                ResourceDescriptor.prototype.singular = "";
    
                /**
                 * ResourceDescriptor style.
                 * @member {Array.<google.api.ResourceDescriptor.Style>} style
                 * @memberof google.api.ResourceDescriptor
                 * @instance
                 */
                ResourceDescriptor.prototype.style = $util.emptyArray;
    
                /**
                 * Creates a new ResourceDescriptor instance using the specified properties.
                 * @function create
                 * @memberof google.api.ResourceDescriptor
                 * @static
                 * @param {google.api.IResourceDescriptor=} [properties] Properties to set
                 * @returns {google.api.ResourceDescriptor} ResourceDescriptor instance
                 */
                ResourceDescriptor.create = function create(properties) {
                    return new ResourceDescriptor(properties);
                };
    
                /**
                 * Encodes the specified ResourceDescriptor message. Does not implicitly {@link google.api.ResourceDescriptor.verify|verify} messages.
                 * @function encode
                 * @memberof google.api.ResourceDescriptor
                 * @static
                 * @param {google.api.IResourceDescriptor} message ResourceDescriptor message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                ResourceDescriptor.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.type != null && Object.hasOwnProperty.call(message, "type"))
                        writer.uint32(/* id 1, wireType 2 =*/10).string(message.type);
                    if (message.pattern != null && message.pattern.length)
                        for (var i = 0; i < message.pattern.length; ++i)
                            writer.uint32(/* id 2, wireType 2 =*/18).string(message.pattern[i]);
                    if (message.nameField != null && Object.hasOwnProperty.call(message, "nameField"))
                        writer.uint32(/* id 3, wireType 2 =*/26).string(message.nameField);
                    if (message.history != null && Object.hasOwnProperty.call(message, "history"))
                        writer.uint32(/* id 4, wireType 0 =*/32).int32(message.history);
                    if (message.plural != null && Object.hasOwnProperty.call(message, "plural"))
                        writer.uint32(/* id 5, wireType 2 =*/42).string(message.plural);
                    if (message.singular != null && Object.hasOwnProperty.call(message, "singular"))
                        writer.uint32(/* id 6, wireType 2 =*/50).string(message.singular);
                    if (message.style != null && message.style.length) {
                        writer.uint32(/* id 10, wireType 2 =*/82).fork();
                        for (var i = 0; i < message.style.length; ++i)
                            writer.int32(message.style[i]);
                        writer.ldelim();
                    }
                    return writer;
                };
    
                /**
                 * Encodes the specified ResourceDescriptor message, length delimited. Does not implicitly {@link google.api.ResourceDescriptor.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.api.ResourceDescriptor
                 * @static
                 * @param {google.api.IResourceDescriptor} message ResourceDescriptor message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                ResourceDescriptor.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a ResourceDescriptor message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.api.ResourceDescriptor
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.api.ResourceDescriptor} ResourceDescriptor
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                ResourceDescriptor.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.api.ResourceDescriptor();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1: {
                                message.type = reader.string();
                                break;
                            }
                        case 2: {
                                if (!(message.pattern && message.pattern.length))
                                    message.pattern = [];
                                message.pattern.push(reader.string());
                                break;
                            }
                        case 3: {
                                message.nameField = reader.string();
                                break;
                            }
                        case 4: {
                                message.history = reader.int32();
                                break;
                            }
                        case 5: {
                                message.plural = reader.string();
                                break;
                            }
                        case 6: {
                                message.singular = reader.string();
                                break;
                            }
                        case 10: {
                                if (!(message.style && message.style.length))
                                    message.style = [];
                                if ((tag & 7) === 2) {
                                    var end2 = reader.uint32() + reader.pos;
                                    while (reader.pos < end2)
                                        message.style.push(reader.int32());
                                } else
                                    message.style.push(reader.int32());
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a ResourceDescriptor message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.api.ResourceDescriptor
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.api.ResourceDescriptor} ResourceDescriptor
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                ResourceDescriptor.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a ResourceDescriptor message.
                 * @function verify
                 * @memberof google.api.ResourceDescriptor
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                ResourceDescriptor.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.type != null && message.hasOwnProperty("type"))
                        if (!$util.isString(message.type))
                            return "type: string expected";
                    if (message.pattern != null && message.hasOwnProperty("pattern")) {
                        if (!Array.isArray(message.pattern))
                            return "pattern: array expected";
                        for (var i = 0; i < message.pattern.length; ++i)
                            if (!$util.isString(message.pattern[i]))
                                return "pattern: string[] expected";
                    }
                    if (message.nameField != null && message.hasOwnProperty("nameField"))
                        if (!$util.isString(message.nameField))
                            return "nameField: string expected";
                    if (message.history != null && message.hasOwnProperty("history"))
                        switch (message.history) {
                        default:
                            return "history: enum value expected";
                        case 0:
                        case 1:
                        case 2:
                            break;
                        }
                    if (message.plural != null && message.hasOwnProperty("plural"))
                        if (!$util.isString(message.plural))
                            return "plural: string expected";
                    if (message.singular != null && message.hasOwnProperty("singular"))
                        if (!$util.isString(message.singular))
                            return "singular: string expected";
                    if (message.style != null && message.hasOwnProperty("style")) {
                        if (!Array.isArray(message.style))
                            return "style: array expected";
                        for (var i = 0; i < message.style.length; ++i)
                            switch (message.style[i]) {
                            default:
                                return "style: enum value[] expected";
                            case 0:
                            case 1:
                                break;
                            }
                    }
                    return null;
                };
    
                /**
                 * Creates a ResourceDescriptor message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.api.ResourceDescriptor
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.api.ResourceDescriptor} ResourceDescriptor
                 */
                ResourceDescriptor.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.api.ResourceDescriptor)
                        return object;
                    var message = new $root.google.api.ResourceDescriptor();
                    if (object.type != null)
                        message.type = String(object.type);
                    if (object.pattern) {
                        if (!Array.isArray(object.pattern))
                            throw TypeError(".google.api.ResourceDescriptor.pattern: array expected");
                        message.pattern = [];
                        for (var i = 0; i < object.pattern.length; ++i)
                            message.pattern[i] = String(object.pattern[i]);
                    }
                    if (object.nameField != null)
                        message.nameField = String(object.nameField);
                    switch (object.history) {
                    default:
                        if (typeof object.history === "number") {
                            message.history = object.history;
                            break;
                        }
                        break;
                    case "HISTORY_UNSPECIFIED":
                    case 0:
                        message.history = 0;
                        break;
                    case "ORIGINALLY_SINGLE_PATTERN":
                    case 1:
                        message.history = 1;
                        break;
                    case "FUTURE_MULTI_PATTERN":
                    case 2:
                        message.history = 2;
                        break;
                    }
                    if (object.plural != null)
                        message.plural = String(object.plural);
                    if (object.singular != null)
                        message.singular = String(object.singular);
                    if (object.style) {
                        if (!Array.isArray(object.style))
                            throw TypeError(".google.api.ResourceDescriptor.style: array expected");
                        message.style = [];
                        for (var i = 0; i < object.style.length; ++i)
                            switch (object.style[i]) {
                            default:
                                if (typeof object.style[i] === "number") {
                                    message.style[i] = object.style[i];
                                    break;
                                }
                            case "STYLE_UNSPECIFIED":
                            case 0:
                                message.style[i] = 0;
                                break;
                            case "DECLARATIVE_FRIENDLY":
                            case 1:
                                message.style[i] = 1;
                                break;
                            }
                    }
                    return message;
                };
    
                /**
                 * Creates a plain object from a ResourceDescriptor message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.api.ResourceDescriptor
                 * @static
                 * @param {google.api.ResourceDescriptor} message ResourceDescriptor
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                ResourceDescriptor.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.arrays || options.defaults) {
                        object.pattern = [];
                        object.style = [];
                    }
                    if (options.defaults) {
                        object.type = "";
                        object.nameField = "";
                        object.history = options.enums === String ? "HISTORY_UNSPECIFIED" : 0;
                        object.plural = "";
                        object.singular = "";
                    }
                    if (message.type != null && message.hasOwnProperty("type"))
                        object.type = message.type;
                    if (message.pattern && message.pattern.length) {
                        object.pattern = [];
                        for (var j = 0; j < message.pattern.length; ++j)
                            object.pattern[j] = message.pattern[j];
                    }
                    if (message.nameField != null && message.hasOwnProperty("nameField"))
                        object.nameField = message.nameField;
                    if (message.history != null && message.hasOwnProperty("history"))
                        object.history = options.enums === String ? $root.google.api.ResourceDescriptor.History[message.history] === undefined ? message.history : $root.google.api.ResourceDescriptor.History[message.history] : message.history;
                    if (message.plural != null && message.hasOwnProperty("plural"))
                        object.plural = message.plural;
                    if (message.singular != null && message.hasOwnProperty("singular"))
                        object.singular = message.singular;
                    if (message.style && message.style.length) {
                        object.style = [];
                        for (var j = 0; j < message.style.length; ++j)
                            object.style[j] = options.enums === String ? $root.google.api.ResourceDescriptor.Style[message.style[j]] === undefined ? message.style[j] : $root.google.api.ResourceDescriptor.Style[message.style[j]] : message.style[j];
                    }
                    return object;
                };
    
                /**
                 * Converts this ResourceDescriptor to JSON.
                 * @function toJSON
                 * @memberof google.api.ResourceDescriptor
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                ResourceDescriptor.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for ResourceDescriptor
                 * @function getTypeUrl
                 * @memberof google.api.ResourceDescriptor
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                ResourceDescriptor.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.api.ResourceDescriptor";
                };
    
                /**
                 * History enum.
                 * @name google.api.ResourceDescriptor.History
                 * @enum {number}
                 * @property {number} HISTORY_UNSPECIFIED=0 HISTORY_UNSPECIFIED value
                 * @property {number} ORIGINALLY_SINGLE_PATTERN=1 ORIGINALLY_SINGLE_PATTERN value
                 * @property {number} FUTURE_MULTI_PATTERN=2 FUTURE_MULTI_PATTERN value
                 */
                ResourceDescriptor.History = (function() {
                    var valuesById = {}, values = Object.create(valuesById);
                    values[valuesById[0] = "HISTORY_UNSPECIFIED"] = 0;
                    values[valuesById[1] = "ORIGINALLY_SINGLE_PATTERN"] = 1;
                    values[valuesById[2] = "FUTURE_MULTI_PATTERN"] = 2;
                    return values;
                })();
    
                /**
                 * Style enum.
                 * @name google.api.ResourceDescriptor.Style
                 * @enum {number}
                 * @property {number} STYLE_UNSPECIFIED=0 STYLE_UNSPECIFIED value
                 * @property {number} DECLARATIVE_FRIENDLY=1 DECLARATIVE_FRIENDLY value
                 */
                ResourceDescriptor.Style = (function() {
                    var valuesById = {}, values = Object.create(valuesById);
                    values[valuesById[0] = "STYLE_UNSPECIFIED"] = 0;
                    values[valuesById[1] = "DECLARATIVE_FRIENDLY"] = 1;
                    return values;
                })();
    
                return ResourceDescriptor;
            })();
    
            api.ResourceReference = (function() {
    
                /**
                 * Properties of a ResourceReference.
                 * @memberof google.api
                 * @interface IResourceReference
                 * @property {string|null} [type] ResourceReference type
                 * @property {string|null} [childType] ResourceReference childType
                 */
    
                /**
                 * Constructs a new ResourceReference.
                 * @memberof google.api
                 * @classdesc Represents a ResourceReference.
                 * @implements IResourceReference
                 * @constructor
                 * @param {google.api.IResourceReference=} [properties] Properties to set
                 */
                function ResourceReference(properties) {
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * ResourceReference type.
                 * @member {string} type
                 * @memberof google.api.ResourceReference
                 * @instance
                 */
                ResourceReference.prototype.type = "";
    
                /**
                 * ResourceReference childType.
                 * @member {string} childType
                 * @memberof google.api.ResourceReference
                 * @instance
                 */
                ResourceReference.prototype.childType = "";
    
                /**
                 * Creates a new ResourceReference instance using the specified properties.
                 * @function create
                 * @memberof google.api.ResourceReference
                 * @static
                 * @param {google.api.IResourceReference=} [properties] Properties to set
                 * @returns {google.api.ResourceReference} ResourceReference instance
                 */
                ResourceReference.create = function create(properties) {
                    return new ResourceReference(properties);
                };
    
                /**
                 * Encodes the specified ResourceReference message. Does not implicitly {@link google.api.ResourceReference.verify|verify} messages.
                 * @function encode
                 * @memberof google.api.ResourceReference
                 * @static
                 * @param {google.api.IResourceReference} message ResourceReference message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                ResourceReference.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.type != null && Object.hasOwnProperty.call(message, "type"))
                        writer.uint32(/* id 1, wireType 2 =*/10).string(message.type);
                    if (message.childType != null && Object.hasOwnProperty.call(message, "childType"))
                        writer.uint32(/* id 2, wireType 2 =*/18).string(message.childType);
                    return writer;
                };
    
                /**
                 * Encodes the specified ResourceReference message, length delimited. Does not implicitly {@link google.api.ResourceReference.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.api.ResourceReference
                 * @static
                 * @param {google.api.IResourceReference} message ResourceReference message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                ResourceReference.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a ResourceReference message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.api.ResourceReference
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.api.ResourceReference} ResourceReference
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                ResourceReference.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.api.ResourceReference();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1: {
                                message.type = reader.string();
                                break;
                            }
                        case 2: {
                                message.childType = reader.string();
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a ResourceReference message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.api.ResourceReference
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.api.ResourceReference} ResourceReference
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                ResourceReference.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a ResourceReference message.
                 * @function verify
                 * @memberof google.api.ResourceReference
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                ResourceReference.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.type != null && message.hasOwnProperty("type"))
                        if (!$util.isString(message.type))
                            return "type: string expected";
                    if (message.childType != null && message.hasOwnProperty("childType"))
                        if (!$util.isString(message.childType))
                            return "childType: string expected";
                    return null;
                };
    
                /**
                 * Creates a ResourceReference message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.api.ResourceReference
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.api.ResourceReference} ResourceReference
                 */
                ResourceReference.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.api.ResourceReference)
                        return object;
                    var message = new $root.google.api.ResourceReference();
                    if (object.type != null)
                        message.type = String(object.type);
                    if (object.childType != null)
                        message.childType = String(object.childType);
                    return message;
                };
    
                /**
                 * Creates a plain object from a ResourceReference message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.api.ResourceReference
                 * @static
                 * @param {google.api.ResourceReference} message ResourceReference
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                ResourceReference.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.defaults) {
                        object.type = "";
                        object.childType = "";
                    }
                    if (message.type != null && message.hasOwnProperty("type"))
                        object.type = message.type;
                    if (message.childType != null && message.hasOwnProperty("childType"))
                        object.childType = message.childType;
                    return object;
                };
    
                /**
                 * Converts this ResourceReference to JSON.
                 * @function toJSON
                 * @memberof google.api.ResourceReference
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                ResourceReference.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for ResourceReference
                 * @function getTypeUrl
                 * @memberof google.api.ResourceReference
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                ResourceReference.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.api.ResourceReference";
                };
    
                return ResourceReference;
            })();
    
            api.Http = (function() {
    
                /**
                 * Properties of a Http.
                 * @memberof google.api
                 * @interface IHttp
                 * @property {Array.<google.api.IHttpRule>|null} [rules] Http rules
                 * @property {boolean|null} [fullyDecodeReservedExpansion] Http fullyDecodeReservedExpansion
                 */
    
                /**
                 * Constructs a new Http.
                 * @memberof google.api
                 * @classdesc Represents a Http.
                 * @implements IHttp
                 * @constructor
                 * @param {google.api.IHttp=} [properties] Properties to set
                 */
                function Http(properties) {
                    this.rules = [];
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * Http rules.
                 * @member {Array.<google.api.IHttpRule>} rules
                 * @memberof google.api.Http
                 * @instance
                 */
                Http.prototype.rules = $util.emptyArray;
    
                /**
                 * Http fullyDecodeReservedExpansion.
                 * @member {boolean} fullyDecodeReservedExpansion
                 * @memberof google.api.Http
                 * @instance
                 */
                Http.prototype.fullyDecodeReservedExpansion = false;
    
                /**
                 * Creates a new Http instance using the specified properties.
                 * @function create
                 * @memberof google.api.Http
                 * @static
                 * @param {google.api.IHttp=} [properties] Properties to set
                 * @returns {google.api.Http} Http instance
                 */
                Http.create = function create(properties) {
                    return new Http(properties);
                };
    
                /**
                 * Encodes the specified Http message. Does not implicitly {@link google.api.Http.verify|verify} messages.
                 * @function encode
                 * @memberof google.api.Http
                 * @static
                 * @param {google.api.IHttp} message Http message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                Http.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.rules != null && message.rules.length)
                        for (var i = 0; i < message.rules.length; ++i)
                            $root.google.api.HttpRule.encode(message.rules[i], writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                    if (message.fullyDecodeReservedExpansion != null && Object.hasOwnProperty.call(message, "fullyDecodeReservedExpansion"))
                        writer.uint32(/* id 2, wireType 0 =*/16).bool(message.fullyDecodeReservedExpansion);
                    return writer;
                };
    
                /**
                 * Encodes the specified Http message, length delimited. Does not implicitly {@link google.api.Http.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.api.Http
                 * @static
                 * @param {google.api.IHttp} message Http message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                Http.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a Http message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.api.Http
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.api.Http} Http
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                Http.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.api.Http();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1: {
                                if (!(message.rules && message.rules.length))
                                    message.rules = [];
                                message.rules.push($root.google.api.HttpRule.decode(reader, reader.uint32()));
                                break;
                            }
                        case 2: {
                                message.fullyDecodeReservedExpansion = reader.bool();
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a Http message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.api.Http
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.api.Http} Http
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                Http.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a Http message.
                 * @function verify
                 * @memberof google.api.Http
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                Http.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.rules != null && message.hasOwnProperty("rules")) {
                        if (!Array.isArray(message.rules))
                            return "rules: array expected";
                        for (var i = 0; i < message.rules.length; ++i) {
                            var error = $root.google.api.HttpRule.verify(message.rules[i]);
                            if (error)
                                return "rules." + error;
                        }
                    }
                    if (message.fullyDecodeReservedExpansion != null && message.hasOwnProperty("fullyDecodeReservedExpansion"))
                        if (typeof message.fullyDecodeReservedExpansion !== "boolean")
                            return "fullyDecodeReservedExpansion: boolean expected";
                    return null;
                };
    
                /**
                 * Creates a Http message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.api.Http
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.api.Http} Http
                 */
                Http.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.api.Http)
                        return object;
                    var message = new $root.google.api.Http();
                    if (object.rules) {
                        if (!Array.isArray(object.rules))
                            throw TypeError(".google.api.Http.rules: array expected");
                        message.rules = [];
                        for (var i = 0; i < object.rules.length; ++i) {
                            if (typeof object.rules[i] !== "object")
                                throw TypeError(".google.api.Http.rules: object expected");
                            message.rules[i] = $root.google.api.HttpRule.fromObject(object.rules[i]);
                        }
                    }
                    if (object.fullyDecodeReservedExpansion != null)
                        message.fullyDecodeReservedExpansion = Boolean(object.fullyDecodeReservedExpansion);
                    return message;
                };
    
                /**
                 * Creates a plain object from a Http message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.api.Http
                 * @static
                 * @param {google.api.Http} message Http
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                Http.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.arrays || options.defaults)
                        object.rules = [];
                    if (options.defaults)
                        object.fullyDecodeReservedExpansion = false;
                    if (message.rules && message.rules.length) {
                        object.rules = [];
                        for (var j = 0; j < message.rules.length; ++j)
                            object.rules[j] = $root.google.api.HttpRule.toObject(message.rules[j], options);
                    }
                    if (message.fullyDecodeReservedExpansion != null && message.hasOwnProperty("fullyDecodeReservedExpansion"))
                        object.fullyDecodeReservedExpansion = message.fullyDecodeReservedExpansion;
                    return object;
                };
    
                /**
                 * Converts this Http to JSON.
                 * @function toJSON
                 * @memberof google.api.Http
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                Http.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for Http
                 * @function getTypeUrl
                 * @memberof google.api.Http
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                Http.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.api.Http";
                };
    
                return Http;
            })();
    
            api.HttpRule = (function() {
    
                /**
                 * Properties of a HttpRule.
                 * @memberof google.api
                 * @interface IHttpRule
                 * @property {string|null} [selector] HttpRule selector
                 * @property {string|null} [get] HttpRule get
                 * @property {string|null} [put] HttpRule put
                 * @property {string|null} [post] HttpRule post
                 * @property {string|null} ["delete"] HttpRule delete
                 * @property {string|null} [patch] HttpRule patch
                 * @property {google.api.ICustomHttpPattern|null} [custom] HttpRule custom
                 * @property {string|null} [body] HttpRule body
                 * @property {string|null} [responseBody] HttpRule responseBody
                 * @property {Array.<google.api.IHttpRule>|null} [additionalBindings] HttpRule additionalBindings
                 */
    
                /**
                 * Constructs a new HttpRule.
                 * @memberof google.api
                 * @classdesc Represents a HttpRule.
                 * @implements IHttpRule
                 * @constructor
                 * @param {google.api.IHttpRule=} [properties] Properties to set
                 */
                function HttpRule(properties) {
                    this.additionalBindings = [];
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * HttpRule selector.
                 * @member {string} selector
                 * @memberof google.api.HttpRule
                 * @instance
                 */
                HttpRule.prototype.selector = "";
    
                /**
                 * HttpRule get.
                 * @member {string|null|undefined} get
                 * @memberof google.api.HttpRule
                 * @instance
                 */
                HttpRule.prototype.get = null;
    
                /**
                 * HttpRule put.
                 * @member {string|null|undefined} put
                 * @memberof google.api.HttpRule
                 * @instance
                 */
                HttpRule.prototype.put = null;
    
                /**
                 * HttpRule post.
                 * @member {string|null|undefined} post
                 * @memberof google.api.HttpRule
                 * @instance
                 */
                HttpRule.prototype.post = null;
    
                /**
                 * HttpRule delete.
                 * @member {string|null|undefined} delete
                 * @memberof google.api.HttpRule
                 * @instance
                 */
                HttpRule.prototype["delete"] = null;
    
                /**
                 * HttpRule patch.
                 * @member {string|null|undefined} patch
                 * @memberof google.api.HttpRule
                 * @instance
                 */
                HttpRule.prototype.patch = null;
    
                /**
                 * HttpRule custom.
                 * @member {google.api.ICustomHttpPattern|null|undefined} custom
                 * @memberof google.api.HttpRule
                 * @instance
                 */
                HttpRule.prototype.custom = null;
    
                /**
                 * HttpRule body.
                 * @member {string} body
                 * @memberof google.api.HttpRule
                 * @instance
                 */
                HttpRule.prototype.body = "";
    
                /**
                 * HttpRule responseBody.
                 * @member {string} responseBody
                 * @memberof google.api.HttpRule
                 * @instance
                 */
                HttpRule.prototype.responseBody = "";
    
                /**
                 * HttpRule additionalBindings.
                 * @member {Array.<google.api.IHttpRule>} additionalBindings
                 * @memberof google.api.HttpRule
                 * @instance
                 */
                HttpRule.prototype.additionalBindings = $util.emptyArray;
    
                // OneOf field names bound to virtual getters and setters
                var $oneOfFields;
    
                /**
                 * HttpRule pattern.
                 * @member {"get"|"put"|"post"|"delete"|"patch"|"custom"|undefined} pattern
                 * @memberof google.api.HttpRule
                 * @instance
                 */
                Object.defineProperty(HttpRule.prototype, "pattern", {
                    get: $util.oneOfGetter($oneOfFields = ["get", "put", "post", "delete", "patch", "custom"]),
                    set: $util.oneOfSetter($oneOfFields)
                });
    
                /**
                 * Creates a new HttpRule instance using the specified properties.
                 * @function create
                 * @memberof google.api.HttpRule
                 * @static
                 * @param {google.api.IHttpRule=} [properties] Properties to set
                 * @returns {google.api.HttpRule} HttpRule instance
                 */
                HttpRule.create = function create(properties) {
                    return new HttpRule(properties);
                };
    
                /**
                 * Encodes the specified HttpRule message. Does not implicitly {@link google.api.HttpRule.verify|verify} messages.
                 * @function encode
                 * @memberof google.api.HttpRule
                 * @static
                 * @param {google.api.IHttpRule} message HttpRule message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                HttpRule.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.selector != null && Object.hasOwnProperty.call(message, "selector"))
                        writer.uint32(/* id 1, wireType 2 =*/10).string(message.selector);
                    if (message.get != null && Object.hasOwnProperty.call(message, "get"))
                        writer.uint32(/* id 2, wireType 2 =*/18).string(message.get);
                    if (message.put != null && Object.hasOwnProperty.call(message, "put"))
                        writer.uint32(/* id 3, wireType 2 =*/26).string(message.put);
                    if (message.post != null && Object.hasOwnProperty.call(message, "post"))
                        writer.uint32(/* id 4, wireType 2 =*/34).string(message.post);
                    if (message["delete"] != null && Object.hasOwnProperty.call(message, "delete"))
                        writer.uint32(/* id 5, wireType 2 =*/42).string(message["delete"]);
                    if (message.patch != null && Object.hasOwnProperty.call(message, "patch"))
                        writer.uint32(/* id 6, wireType 2 =*/50).string(message.patch);
                    if (message.body != null && Object.hasOwnProperty.call(message, "body"))
                        writer.uint32(/* id 7, wireType 2 =*/58).string(message.body);
                    if (message.custom != null && Object.hasOwnProperty.call(message, "custom"))
                        $root.google.api.CustomHttpPattern.encode(message.custom, writer.uint32(/* id 8, wireType 2 =*/66).fork()).ldelim();
                    if (message.additionalBindings != null && message.additionalBindings.length)
                        for (var i = 0; i < message.additionalBindings.length; ++i)
                            $root.google.api.HttpRule.encode(message.additionalBindings[i], writer.uint32(/* id 11, wireType 2 =*/90).fork()).ldelim();
                    if (message.responseBody != null && Object.hasOwnProperty.call(message, "responseBody"))
                        writer.uint32(/* id 12, wireType 2 =*/98).string(message.responseBody);
                    return writer;
                };
    
                /**
                 * Encodes the specified HttpRule message, length delimited. Does not implicitly {@link google.api.HttpRule.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.api.HttpRule
                 * @static
                 * @param {google.api.IHttpRule} message HttpRule message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                HttpRule.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a HttpRule message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.api.HttpRule
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.api.HttpRule} HttpRule
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                HttpRule.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.api.HttpRule();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1: {
                                message.selector = reader.string();
                                break;
                            }
                        case 2: {
                                message.get = reader.string();
                                break;
                            }
                        case 3: {
                                message.put = reader.string();
                                break;
                            }
                        case 4: {
                                message.post = reader.string();
                                break;
                            }
                        case 5: {
                                message["delete"] = reader.string();
                                break;
                            }
                        case 6: {
                                message.patch = reader.string();
                                break;
                            }
                        case 8: {
                                message.custom = $root.google.api.CustomHttpPattern.decode(reader, reader.uint32());
                                break;
                            }
                        case 7: {
                                message.body = reader.string();
                                break;
                            }
                        case 12: {
                                message.responseBody = reader.string();
                                break;
                            }
                        case 11: {
                                if (!(message.additionalBindings && message.additionalBindings.length))
                                    message.additionalBindings = [];
                                message.additionalBindings.push($root.google.api.HttpRule.decode(reader, reader.uint32()));
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a HttpRule message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.api.HttpRule
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.api.HttpRule} HttpRule
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                HttpRule.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a HttpRule message.
                 * @function verify
                 * @memberof google.api.HttpRule
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                HttpRule.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    var properties = {};
                    if (message.selector != null && message.hasOwnProperty("selector"))
                        if (!$util.isString(message.selector))
                            return "selector: string expected";
                    if (message.get != null && message.hasOwnProperty("get")) {
                        properties.pattern = 1;
                        if (!$util.isString(message.get))
                            return "get: string expected";
                    }
                    if (message.put != null && message.hasOwnProperty("put")) {
                        if (properties.pattern === 1)
                            return "pattern: multiple values";
                        properties.pattern = 1;
                        if (!$util.isString(message.put))
                            return "put: string expected";
                    }
                    if (message.post != null && message.hasOwnProperty("post")) {
                        if (properties.pattern === 1)
                            return "pattern: multiple values";
                        properties.pattern = 1;
                        if (!$util.isString(message.post))
                            return "post: string expected";
                    }
                    if (message["delete"] != null && message.hasOwnProperty("delete")) {
                        if (properties.pattern === 1)
                            return "pattern: multiple values";
                        properties.pattern = 1;
                        if (!$util.isString(message["delete"]))
                            return "delete: string expected";
                    }
                    if (message.patch != null && message.hasOwnProperty("patch")) {
                        if (properties.pattern === 1)
                            return "pattern: multiple values";
                        properties.pattern = 1;
                        if (!$util.isString(message.patch))
                            return "patch: string expected";
                    }
                    if (message.custom != null && message.hasOwnProperty("custom")) {
                        if (properties.pattern === 1)
                            return "pattern: multiple values";
                        properties.pattern = 1;
                        {
                            var error = $root.google.api.CustomHttpPattern.verify(message.custom);
                            if (error)
                                return "custom." + error;
                        }
                    }
                    if (message.body != null && message.hasOwnProperty("body"))
                        if (!$util.isString(message.body))
                            return "body: string expected";
                    if (message.responseBody != null && message.hasOwnProperty("responseBody"))
                        if (!$util.isString(message.responseBody))
                            return "responseBody: string expected";
                    if (message.additionalBindings != null && message.hasOwnProperty("additionalBindings")) {
                        if (!Array.isArray(message.additionalBindings))
                            return "additionalBindings: array expected";
                        for (var i = 0; i < message.additionalBindings.length; ++i) {
                            var error = $root.google.api.HttpRule.verify(message.additionalBindings[i]);
                            if (error)
                                return "additionalBindings." + error;
                        }
                    }
                    return null;
                };
    
                /**
                 * Creates a HttpRule message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.api.HttpRule
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.api.HttpRule} HttpRule
                 */
                HttpRule.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.api.HttpRule)
                        return object;
                    var message = new $root.google.api.HttpRule();
                    if (object.selector != null)
                        message.selector = String(object.selector);
                    if (object.get != null)
                        message.get = String(object.get);
                    if (object.put != null)
                        message.put = String(object.put);
                    if (object.post != null)
                        message.post = String(object.post);
                    if (object["delete"] != null)
                        message["delete"] = String(object["delete"]);
                    if (object.patch != null)
                        message.patch = String(object.patch);
                    if (object.custom != null) {
                        if (typeof object.custom !== "object")
                            throw TypeError(".google.api.HttpRule.custom: object expected");
                        message.custom = $root.google.api.CustomHttpPattern.fromObject(object.custom);
                    }
                    if (object.body != null)
                        message.body = String(object.body);
                    if (object.responseBody != null)
                        message.responseBody = String(object.responseBody);
                    if (object.additionalBindings) {
                        if (!Array.isArray(object.additionalBindings))
                            throw TypeError(".google.api.HttpRule.additionalBindings: array expected");
                        message.additionalBindings = [];
                        for (var i = 0; i < object.additionalBindings.length; ++i) {
                            if (typeof object.additionalBindings[i] !== "object")
                                throw TypeError(".google.api.HttpRule.additionalBindings: object expected");
                            message.additionalBindings[i] = $root.google.api.HttpRule.fromObject(object.additionalBindings[i]);
                        }
                    }
                    return message;
                };
    
                /**
                 * Creates a plain object from a HttpRule message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.api.HttpRule
                 * @static
                 * @param {google.api.HttpRule} message HttpRule
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                HttpRule.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.arrays || options.defaults)
                        object.additionalBindings = [];
                    if (options.defaults) {
                        object.selector = "";
                        object.body = "";
                        object.responseBody = "";
                    }
                    if (message.selector != null && message.hasOwnProperty("selector"))
                        object.selector = message.selector;
                    if (message.get != null && message.hasOwnProperty("get")) {
                        object.get = message.get;
                        if (options.oneofs)
                            object.pattern = "get";
                    }
                    if (message.put != null && message.hasOwnProperty("put")) {
                        object.put = message.put;
                        if (options.oneofs)
                            object.pattern = "put";
                    }
                    if (message.post != null && message.hasOwnProperty("post")) {
                        object.post = message.post;
                        if (options.oneofs)
                            object.pattern = "post";
                    }
                    if (message["delete"] != null && message.hasOwnProperty("delete")) {
                        object["delete"] = message["delete"];
                        if (options.oneofs)
                            object.pattern = "delete";
                    }
                    if (message.patch != null && message.hasOwnProperty("patch")) {
                        object.patch = message.patch;
                        if (options.oneofs)
                            object.pattern = "patch";
                    }
                    if (message.body != null && message.hasOwnProperty("body"))
                        object.body = message.body;
                    if (message.custom != null && message.hasOwnProperty("custom")) {
                        object.custom = $root.google.api.CustomHttpPattern.toObject(message.custom, options);
                        if (options.oneofs)
                            object.pattern = "custom";
                    }
                    if (message.additionalBindings && message.additionalBindings.length) {
                        object.additionalBindings = [];
                        for (var j = 0; j < message.additionalBindings.length; ++j)
                            object.additionalBindings[j] = $root.google.api.HttpRule.toObject(message.additionalBindings[j], options);
                    }
                    if (message.responseBody != null && message.hasOwnProperty("responseBody"))
                        object.responseBody = message.responseBody;
                    return object;
                };
    
                /**
                 * Converts this HttpRule to JSON.
                 * @function toJSON
                 * @memberof google.api.HttpRule
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                HttpRule.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for HttpRule
                 * @function getTypeUrl
                 * @memberof google.api.HttpRule
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                HttpRule.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.api.HttpRule";
                };
    
                return HttpRule;
            })();
    
            api.CustomHttpPattern = (function() {
    
                /**
                 * Properties of a CustomHttpPattern.
                 * @memberof google.api
                 * @interface ICustomHttpPattern
                 * @property {string|null} [kind] CustomHttpPattern kind
                 * @property {string|null} [path] CustomHttpPattern path
                 */
    
                /**
                 * Constructs a new CustomHttpPattern.
                 * @memberof google.api
                 * @classdesc Represents a CustomHttpPattern.
                 * @implements ICustomHttpPattern
                 * @constructor
                 * @param {google.api.ICustomHttpPattern=} [properties] Properties to set
                 */
                function CustomHttpPattern(properties) {
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * CustomHttpPattern kind.
                 * @member {string} kind
                 * @memberof google.api.CustomHttpPattern
                 * @instance
                 */
                CustomHttpPattern.prototype.kind = "";
    
                /**
                 * CustomHttpPattern path.
                 * @member {string} path
                 * @memberof google.api.CustomHttpPattern
                 * @instance
                 */
                CustomHttpPattern.prototype.path = "";
    
                /**
                 * Creates a new CustomHttpPattern instance using the specified properties.
                 * @function create
                 * @memberof google.api.CustomHttpPattern
                 * @static
                 * @param {google.api.ICustomHttpPattern=} [properties] Properties to set
                 * @returns {google.api.CustomHttpPattern} CustomHttpPattern instance
                 */
                CustomHttpPattern.create = function create(properties) {
                    return new CustomHttpPattern(properties);
                };
    
                /**
                 * Encodes the specified CustomHttpPattern message. Does not implicitly {@link google.api.CustomHttpPattern.verify|verify} messages.
                 * @function encode
                 * @memberof google.api.CustomHttpPattern
                 * @static
                 * @param {google.api.ICustomHttpPattern} message CustomHttpPattern message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                CustomHttpPattern.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.kind != null && Object.hasOwnProperty.call(message, "kind"))
                        writer.uint32(/* id 1, wireType 2 =*/10).string(message.kind);
                    if (message.path != null && Object.hasOwnProperty.call(message, "path"))
                        writer.uint32(/* id 2, wireType 2 =*/18).string(message.path);
                    return writer;
                };
    
                /**
                 * Encodes the specified CustomHttpPattern message, length delimited. Does not implicitly {@link google.api.CustomHttpPattern.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.api.CustomHttpPattern
                 * @static
                 * @param {google.api.ICustomHttpPattern} message CustomHttpPattern message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                CustomHttpPattern.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a CustomHttpPattern message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.api.CustomHttpPattern
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.api.CustomHttpPattern} CustomHttpPattern
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                CustomHttpPattern.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.api.CustomHttpPattern();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1: {
                                message.kind = reader.string();
                                break;
                            }
                        case 2: {
                                message.path = reader.string();
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a CustomHttpPattern message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.api.CustomHttpPattern
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.api.CustomHttpPattern} CustomHttpPattern
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                CustomHttpPattern.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a CustomHttpPattern message.
                 * @function verify
                 * @memberof google.api.CustomHttpPattern
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                CustomHttpPattern.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.kind != null && message.hasOwnProperty("kind"))
                        if (!$util.isString(message.kind))
                            return "kind: string expected";
                    if (message.path != null && message.hasOwnProperty("path"))
                        if (!$util.isString(message.path))
                            return "path: string expected";
                    return null;
                };
    
                /**
                 * Creates a CustomHttpPattern message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.api.CustomHttpPattern
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.api.CustomHttpPattern} CustomHttpPattern
                 */
                CustomHttpPattern.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.api.CustomHttpPattern)
                        return object;
                    var message = new $root.google.api.CustomHttpPattern();
                    if (object.kind != null)
                        message.kind = String(object.kind);
                    if (object.path != null)
                        message.path = String(object.path);
                    return message;
                };
    
                /**
                 * Creates a plain object from a CustomHttpPattern message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.api.CustomHttpPattern
                 * @static
                 * @param {google.api.CustomHttpPattern} message CustomHttpPattern
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                CustomHttpPattern.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.defaults) {
                        object.kind = "";
                        object.path = "";
                    }
                    if (message.kind != null && message.hasOwnProperty("kind"))
                        object.kind = message.kind;
                    if (message.path != null && message.hasOwnProperty("path"))
                        object.path = message.path;
                    return object;
                };
    
                /**
                 * Converts this CustomHttpPattern to JSON.
                 * @function toJSON
                 * @memberof google.api.CustomHttpPattern
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                CustomHttpPattern.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for CustomHttpPattern
                 * @function getTypeUrl
                 * @memberof google.api.CustomHttpPattern
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                CustomHttpPattern.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.api.CustomHttpPattern";
                };
    
                return CustomHttpPattern;
            })();
    
            api.CommonLanguageSettings = (function() {
    
                /**
                 * Properties of a CommonLanguageSettings.
                 * @memberof google.api
                 * @interface ICommonLanguageSettings
                 * @property {string|null} [referenceDocsUri] CommonLanguageSettings referenceDocsUri
                 * @property {Array.<google.api.ClientLibraryDestination>|null} [destinations] CommonLanguageSettings destinations
                 */
    
                /**
                 * Constructs a new CommonLanguageSettings.
                 * @memberof google.api
                 * @classdesc Represents a CommonLanguageSettings.
                 * @implements ICommonLanguageSettings
                 * @constructor
                 * @param {google.api.ICommonLanguageSettings=} [properties] Properties to set
                 */
                function CommonLanguageSettings(properties) {
                    this.destinations = [];
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * CommonLanguageSettings referenceDocsUri.
                 * @member {string} referenceDocsUri
                 * @memberof google.api.CommonLanguageSettings
                 * @instance
                 */
                CommonLanguageSettings.prototype.referenceDocsUri = "";
    
                /**
                 * CommonLanguageSettings destinations.
                 * @member {Array.<google.api.ClientLibraryDestination>} destinations
                 * @memberof google.api.CommonLanguageSettings
                 * @instance
                 */
                CommonLanguageSettings.prototype.destinations = $util.emptyArray;
    
                /**
                 * Creates a new CommonLanguageSettings instance using the specified properties.
                 * @function create
                 * @memberof google.api.CommonLanguageSettings
                 * @static
                 * @param {google.api.ICommonLanguageSettings=} [properties] Properties to set
                 * @returns {google.api.CommonLanguageSettings} CommonLanguageSettings instance
                 */
                CommonLanguageSettings.create = function create(properties) {
                    return new CommonLanguageSettings(properties);
                };
    
                /**
                 * Encodes the specified CommonLanguageSettings message. Does not implicitly {@link google.api.CommonLanguageSettings.verify|verify} messages.
                 * @function encode
                 * @memberof google.api.CommonLanguageSettings
                 * @static
                 * @param {google.api.ICommonLanguageSettings} message CommonLanguageSettings message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                CommonLanguageSettings.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.referenceDocsUri != null && Object.hasOwnProperty.call(message, "referenceDocsUri"))
                        writer.uint32(/* id 1, wireType 2 =*/10).string(message.referenceDocsUri);
                    if (message.destinations != null && message.destinations.length) {
                        writer.uint32(/* id 2, wireType 2 =*/18).fork();
                        for (var i = 0; i < message.destinations.length; ++i)
                            writer.int32(message.destinations[i]);
                        writer.ldelim();
                    }
                    return writer;
                };
    
                /**
                 * Encodes the specified CommonLanguageSettings message, length delimited. Does not implicitly {@link google.api.CommonLanguageSettings.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.api.CommonLanguageSettings
                 * @static
                 * @param {google.api.ICommonLanguageSettings} message CommonLanguageSettings message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                CommonLanguageSettings.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a CommonLanguageSettings message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.api.CommonLanguageSettings
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.api.CommonLanguageSettings} CommonLanguageSettings
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                CommonLanguageSettings.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.api.CommonLanguageSettings();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1: {
                                message.referenceDocsUri = reader.string();
                                break;
                            }
                        case 2: {
                                if (!(message.destinations && message.destinations.length))
                                    message.destinations = [];
                                if ((tag & 7) === 2) {
                                    var end2 = reader.uint32() + reader.pos;
                                    while (reader.pos < end2)
                                        message.destinations.push(reader.int32());
                                } else
                                    message.destinations.push(reader.int32());
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a CommonLanguageSettings message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.api.CommonLanguageSettings
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.api.CommonLanguageSettings} CommonLanguageSettings
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                CommonLanguageSettings.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a CommonLanguageSettings message.
                 * @function verify
                 * @memberof google.api.CommonLanguageSettings
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                CommonLanguageSettings.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.referenceDocsUri != null && message.hasOwnProperty("referenceDocsUri"))
                        if (!$util.isString(message.referenceDocsUri))
                            return "referenceDocsUri: string expected";
                    if (message.destinations != null && message.hasOwnProperty("destinations")) {
                        if (!Array.isArray(message.destinations))
                            return "destinations: array expected";
                        for (var i = 0; i < message.destinations.length; ++i)
                            switch (message.destinations[i]) {
                            default:
                                return "destinations: enum value[] expected";
                            case 0:
                            case 10:
                            case 20:
                                break;
                            }
                    }
                    return null;
                };
    
                /**
                 * Creates a CommonLanguageSettings message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.api.CommonLanguageSettings
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.api.CommonLanguageSettings} CommonLanguageSettings
                 */
                CommonLanguageSettings.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.api.CommonLanguageSettings)
                        return object;
                    var message = new $root.google.api.CommonLanguageSettings();
                    if (object.referenceDocsUri != null)
                        message.referenceDocsUri = String(object.referenceDocsUri);
                    if (object.destinations) {
                        if (!Array.isArray(object.destinations))
                            throw TypeError(".google.api.CommonLanguageSettings.destinations: array expected");
                        message.destinations = [];
                        for (var i = 0; i < object.destinations.length; ++i)
                            switch (object.destinations[i]) {
                            default:
                                if (typeof object.destinations[i] === "number") {
                                    message.destinations[i] = object.destinations[i];
                                    break;
                                }
                            case "CLIENT_LIBRARY_DESTINATION_UNSPECIFIED":
                            case 0:
                                message.destinations[i] = 0;
                                break;
                            case "GITHUB":
                            case 10:
                                message.destinations[i] = 10;
                                break;
                            case "PACKAGE_MANAGER":
                            case 20:
                                message.destinations[i] = 20;
                                break;
                            }
                    }
                    return message;
                };
    
                /**
                 * Creates a plain object from a CommonLanguageSettings message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.api.CommonLanguageSettings
                 * @static
                 * @param {google.api.CommonLanguageSettings} message CommonLanguageSettings
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                CommonLanguageSettings.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.arrays || options.defaults)
                        object.destinations = [];
                    if (options.defaults)
                        object.referenceDocsUri = "";
                    if (message.referenceDocsUri != null && message.hasOwnProperty("referenceDocsUri"))
                        object.referenceDocsUri = message.referenceDocsUri;
                    if (message.destinations && message.destinations.length) {
                        object.destinations = [];
                        for (var j = 0; j < message.destinations.length; ++j)
                            object.destinations[j] = options.enums === String ? $root.google.api.ClientLibraryDestination[message.destinations[j]] === undefined ? message.destinations[j] : $root.google.api.ClientLibraryDestination[message.destinations[j]] : message.destinations[j];
                    }
                    return object;
                };
    
                /**
                 * Converts this CommonLanguageSettings to JSON.
                 * @function toJSON
                 * @memberof google.api.CommonLanguageSettings
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                CommonLanguageSettings.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for CommonLanguageSettings
                 * @function getTypeUrl
                 * @memberof google.api.CommonLanguageSettings
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                CommonLanguageSettings.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.api.CommonLanguageSettings";
                };
    
                return CommonLanguageSettings;
            })();
    
            api.ClientLibrarySettings = (function() {
    
                /**
                 * Properties of a ClientLibrarySettings.
                 * @memberof google.api
                 * @interface IClientLibrarySettings
                 * @property {string|null} [version] ClientLibrarySettings version
                 * @property {google.api.LaunchStage|null} [launchStage] ClientLibrarySettings launchStage
                 * @property {boolean|null} [restNumericEnums] ClientLibrarySettings restNumericEnums
                 * @property {google.api.IJavaSettings|null} [javaSettings] ClientLibrarySettings javaSettings
                 * @property {google.api.ICppSettings|null} [cppSettings] ClientLibrarySettings cppSettings
                 * @property {google.api.IPhpSettings|null} [phpSettings] ClientLibrarySettings phpSettings
                 * @property {google.api.IPythonSettings|null} [pythonSettings] ClientLibrarySettings pythonSettings
                 * @property {google.api.INodeSettings|null} [nodeSettings] ClientLibrarySettings nodeSettings
                 * @property {google.api.IDotnetSettings|null} [dotnetSettings] ClientLibrarySettings dotnetSettings
                 * @property {google.api.IRubySettings|null} [rubySettings] ClientLibrarySettings rubySettings
                 * @property {google.api.IGoSettings|null} [goSettings] ClientLibrarySettings goSettings
                 */
    
                /**
                 * Constructs a new ClientLibrarySettings.
                 * @memberof google.api
                 * @classdesc Represents a ClientLibrarySettings.
                 * @implements IClientLibrarySettings
                 * @constructor
                 * @param {google.api.IClientLibrarySettings=} [properties] Properties to set
                 */
                function ClientLibrarySettings(properties) {
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * ClientLibrarySettings version.
                 * @member {string} version
                 * @memberof google.api.ClientLibrarySettings
                 * @instance
                 */
                ClientLibrarySettings.prototype.version = "";
    
                /**
                 * ClientLibrarySettings launchStage.
                 * @member {google.api.LaunchStage} launchStage
                 * @memberof google.api.ClientLibrarySettings
                 * @instance
                 */
                ClientLibrarySettings.prototype.launchStage = 0;
    
                /**
                 * ClientLibrarySettings restNumericEnums.
                 * @member {boolean} restNumericEnums
                 * @memberof google.api.ClientLibrarySettings
                 * @instance
                 */
                ClientLibrarySettings.prototype.restNumericEnums = false;
    
                /**
                 * ClientLibrarySettings javaSettings.
                 * @member {google.api.IJavaSettings|null|undefined} javaSettings
                 * @memberof google.api.ClientLibrarySettings
                 * @instance
                 */
                ClientLibrarySettings.prototype.javaSettings = null;
    
                /**
                 * ClientLibrarySettings cppSettings.
                 * @member {google.api.ICppSettings|null|undefined} cppSettings
                 * @memberof google.api.ClientLibrarySettings
                 * @instance
                 */
                ClientLibrarySettings.prototype.cppSettings = null;
    
                /**
                 * ClientLibrarySettings phpSettings.
                 * @member {google.api.IPhpSettings|null|undefined} phpSettings
                 * @memberof google.api.ClientLibrarySettings
                 * @instance
                 */
                ClientLibrarySettings.prototype.phpSettings = null;
    
                /**
                 * ClientLibrarySettings pythonSettings.
                 * @member {google.api.IPythonSettings|null|undefined} pythonSettings
                 * @memberof google.api.ClientLibrarySettings
                 * @instance
                 */
                ClientLibrarySettings.prototype.pythonSettings = null;
    
                /**
                 * ClientLibrarySettings nodeSettings.
                 * @member {google.api.INodeSettings|null|undefined} nodeSettings
                 * @memberof google.api.ClientLibrarySettings
                 * @instance
                 */
                ClientLibrarySettings.prototype.nodeSettings = null;
    
                /**
                 * ClientLibrarySettings dotnetSettings.
                 * @member {google.api.IDotnetSettings|null|undefined} dotnetSettings
                 * @memberof google.api.ClientLibrarySettings
                 * @instance
                 */
                ClientLibrarySettings.prototype.dotnetSettings = null;
    
                /**
                 * ClientLibrarySettings rubySettings.
                 * @member {google.api.IRubySettings|null|undefined} rubySettings
                 * @memberof google.api.ClientLibrarySettings
                 * @instance
                 */
                ClientLibrarySettings.prototype.rubySettings = null;
    
                /**
                 * ClientLibrarySettings goSettings.
                 * @member {google.api.IGoSettings|null|undefined} goSettings
                 * @memberof google.api.ClientLibrarySettings
                 * @instance
                 */
                ClientLibrarySettings.prototype.goSettings = null;
    
                /**
                 * Creates a new ClientLibrarySettings instance using the specified properties.
                 * @function create
                 * @memberof google.api.ClientLibrarySettings
                 * @static
                 * @param {google.api.IClientLibrarySettings=} [properties] Properties to set
                 * @returns {google.api.ClientLibrarySettings} ClientLibrarySettings instance
                 */
                ClientLibrarySettings.create = function create(properties) {
                    return new ClientLibrarySettings(properties);
                };
    
                /**
                 * Encodes the specified ClientLibrarySettings message. Does not implicitly {@link google.api.ClientLibrarySettings.verify|verify} messages.
                 * @function encode
                 * @memberof google.api.ClientLibrarySettings
                 * @static
                 * @param {google.api.IClientLibrarySettings} message ClientLibrarySettings message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                ClientLibrarySettings.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.version != null && Object.hasOwnProperty.call(message, "version"))
                        writer.uint32(/* id 1, wireType 2 =*/10).string(message.version);
                    if (message.launchStage != null && Object.hasOwnProperty.call(message, "launchStage"))
                        writer.uint32(/* id 2, wireType 0 =*/16).int32(message.launchStage);
                    if (message.restNumericEnums != null && Object.hasOwnProperty.call(message, "restNumericEnums"))
                        writer.uint32(/* id 3, wireType 0 =*/24).bool(message.restNumericEnums);
                    if (message.javaSettings != null && Object.hasOwnProperty.call(message, "javaSettings"))
                        $root.google.api.JavaSettings.encode(message.javaSettings, writer.uint32(/* id 21, wireType 2 =*/170).fork()).ldelim();
                    if (message.cppSettings != null && Object.hasOwnProperty.call(message, "cppSettings"))
                        $root.google.api.CppSettings.encode(message.cppSettings, writer.uint32(/* id 22, wireType 2 =*/178).fork()).ldelim();
                    if (message.phpSettings != null && Object.hasOwnProperty.call(message, "phpSettings"))
                        $root.google.api.PhpSettings.encode(message.phpSettings, writer.uint32(/* id 23, wireType 2 =*/186).fork()).ldelim();
                    if (message.pythonSettings != null && Object.hasOwnProperty.call(message, "pythonSettings"))
                        $root.google.api.PythonSettings.encode(message.pythonSettings, writer.uint32(/* id 24, wireType 2 =*/194).fork()).ldelim();
                    if (message.nodeSettings != null && Object.hasOwnProperty.call(message, "nodeSettings"))
                        $root.google.api.NodeSettings.encode(message.nodeSettings, writer.uint32(/* id 25, wireType 2 =*/202).fork()).ldelim();
                    if (message.dotnetSettings != null && Object.hasOwnProperty.call(message, "dotnetSettings"))
                        $root.google.api.DotnetSettings.encode(message.dotnetSettings, writer.uint32(/* id 26, wireType 2 =*/210).fork()).ldelim();
                    if (message.rubySettings != null && Object.hasOwnProperty.call(message, "rubySettings"))
                        $root.google.api.RubySettings.encode(message.rubySettings, writer.uint32(/* id 27, wireType 2 =*/218).fork()).ldelim();
                    if (message.goSettings != null && Object.hasOwnProperty.call(message, "goSettings"))
                        $root.google.api.GoSettings.encode(message.goSettings, writer.uint32(/* id 28, wireType 2 =*/226).fork()).ldelim();
                    return writer;
                };
    
                /**
                 * Encodes the specified ClientLibrarySettings message, length delimited. Does not implicitly {@link google.api.ClientLibrarySettings.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.api.ClientLibrarySettings
                 * @static
                 * @param {google.api.IClientLibrarySettings} message ClientLibrarySettings message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                ClientLibrarySettings.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a ClientLibrarySettings message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.api.ClientLibrarySettings
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.api.ClientLibrarySettings} ClientLibrarySettings
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                ClientLibrarySettings.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.api.ClientLibrarySettings();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1: {
                                message.version = reader.string();
                                break;
                            }
                        case 2: {
                                message.launchStage = reader.int32();
                                break;
                            }
                        case 3: {
                                message.restNumericEnums = reader.bool();
                                break;
                            }
                        case 21: {
                                message.javaSettings = $root.google.api.JavaSettings.decode(reader, reader.uint32());
                                break;
                            }
                        case 22: {
                                message.cppSettings = $root.google.api.CppSettings.decode(reader, reader.uint32());
                                break;
                            }
                        case 23: {
                                message.phpSettings = $root.google.api.PhpSettings.decode(reader, reader.uint32());
                                break;
                            }
                        case 24: {
                                message.pythonSettings = $root.google.api.PythonSettings.decode(reader, reader.uint32());
                                break;
                            }
                        case 25: {
                                message.nodeSettings = $root.google.api.NodeSettings.decode(reader, reader.uint32());
                                break;
                            }
                        case 26: {
                                message.dotnetSettings = $root.google.api.DotnetSettings.decode(reader, reader.uint32());
                                break;
                            }
                        case 27: {
                                message.rubySettings = $root.google.api.RubySettings.decode(reader, reader.uint32());
                                break;
                            }
                        case 28: {
                                message.goSettings = $root.google.api.GoSettings.decode(reader, reader.uint32());
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a ClientLibrarySettings message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.api.ClientLibrarySettings
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.api.ClientLibrarySettings} ClientLibrarySettings
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                ClientLibrarySettings.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a ClientLibrarySettings message.
                 * @function verify
                 * @memberof google.api.ClientLibrarySettings
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                ClientLibrarySettings.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.version != null && message.hasOwnProperty("version"))
                        if (!$util.isString(message.version))
                            return "version: string expected";
                    if (message.launchStage != null && message.hasOwnProperty("launchStage"))
                        switch (message.launchStage) {
                        default:
                            return "launchStage: enum value expected";
                        case 0:
                        case 6:
                        case 7:
                        case 1:
                        case 2:
                        case 3:
                        case 4:
                        case 5:
                            break;
                        }
                    if (message.restNumericEnums != null && message.hasOwnProperty("restNumericEnums"))
                        if (typeof message.restNumericEnums !== "boolean")
                            return "restNumericEnums: boolean expected";
                    if (message.javaSettings != null && message.hasOwnProperty("javaSettings")) {
                        var error = $root.google.api.JavaSettings.verify(message.javaSettings);
                        if (error)
                            return "javaSettings." + error;
                    }
                    if (message.cppSettings != null && message.hasOwnProperty("cppSettings")) {
                        var error = $root.google.api.CppSettings.verify(message.cppSettings);
                        if (error)
                            return "cppSettings." + error;
                    }
                    if (message.phpSettings != null && message.hasOwnProperty("phpSettings")) {
                        var error = $root.google.api.PhpSettings.verify(message.phpSettings);
                        if (error)
                            return "phpSettings." + error;
                    }
                    if (message.pythonSettings != null && message.hasOwnProperty("pythonSettings")) {
                        var error = $root.google.api.PythonSettings.verify(message.pythonSettings);
                        if (error)
                            return "pythonSettings." + error;
                    }
                    if (message.nodeSettings != null && message.hasOwnProperty("nodeSettings")) {
                        var error = $root.google.api.NodeSettings.verify(message.nodeSettings);
                        if (error)
                            return "nodeSettings." + error;
                    }
                    if (message.dotnetSettings != null && message.hasOwnProperty("dotnetSettings")) {
                        var error = $root.google.api.DotnetSettings.verify(message.dotnetSettings);
                        if (error)
                            return "dotnetSettings." + error;
                    }
                    if (message.rubySettings != null && message.hasOwnProperty("rubySettings")) {
                        var error = $root.google.api.RubySettings.verify(message.rubySettings);
                        if (error)
                            return "rubySettings." + error;
                    }
                    if (message.goSettings != null && message.hasOwnProperty("goSettings")) {
                        var error = $root.google.api.GoSettings.verify(message.goSettings);
                        if (error)
                            return "goSettings." + error;
                    }
                    return null;
                };
    
                /**
                 * Creates a ClientLibrarySettings message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.api.ClientLibrarySettings
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.api.ClientLibrarySettings} ClientLibrarySettings
                 */
                ClientLibrarySettings.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.api.ClientLibrarySettings)
                        return object;
                    var message = new $root.google.api.ClientLibrarySettings();
                    if (object.version != null)
                        message.version = String(object.version);
                    switch (object.launchStage) {
                    default:
                        if (typeof object.launchStage === "number") {
                            message.launchStage = object.launchStage;
                            break;
                        }
                        break;
                    case "LAUNCH_STAGE_UNSPECIFIED":
                    case 0:
                        message.launchStage = 0;
                        break;
                    case "UNIMPLEMENTED":
                    case 6:
                        message.launchStage = 6;
                        break;
                    case "PRELAUNCH":
                    case 7:
                        message.launchStage = 7;
                        break;
                    case "EARLY_ACCESS":
                    case 1:
                        message.launchStage = 1;
                        break;
                    case "ALPHA":
                    case 2:
                        message.launchStage = 2;
                        break;
                    case "BETA":
                    case 3:
                        message.launchStage = 3;
                        break;
                    case "GA":
                    case 4:
                        message.launchStage = 4;
                        break;
                    case "DEPRECATED":
                    case 5:
                        message.launchStage = 5;
                        break;
                    }
                    if (object.restNumericEnums != null)
                        message.restNumericEnums = Boolean(object.restNumericEnums);
                    if (object.javaSettings != null) {
                        if (typeof object.javaSettings !== "object")
                            throw TypeError(".google.api.ClientLibrarySettings.javaSettings: object expected");
                        message.javaSettings = $root.google.api.JavaSettings.fromObject(object.javaSettings);
                    }
                    if (object.cppSettings != null) {
                        if (typeof object.cppSettings !== "object")
                            throw TypeError(".google.api.ClientLibrarySettings.cppSettings: object expected");
                        message.cppSettings = $root.google.api.CppSettings.fromObject(object.cppSettings);
                    }
                    if (object.phpSettings != null) {
                        if (typeof object.phpSettings !== "object")
                            throw TypeError(".google.api.ClientLibrarySettings.phpSettings: object expected");
                        message.phpSettings = $root.google.api.PhpSettings.fromObject(object.phpSettings);
                    }
                    if (object.pythonSettings != null) {
                        if (typeof object.pythonSettings !== "object")
                            throw TypeError(".google.api.ClientLibrarySettings.pythonSettings: object expected");
                        message.pythonSettings = $root.google.api.PythonSettings.fromObject(object.pythonSettings);
                    }
                    if (object.nodeSettings != null) {
                        if (typeof object.nodeSettings !== "object")
                            throw TypeError(".google.api.ClientLibrarySettings.nodeSettings: object expected");
                        message.nodeSettings = $root.google.api.NodeSettings.fromObject(object.nodeSettings);
                    }
                    if (object.dotnetSettings != null) {
                        if (typeof object.dotnetSettings !== "object")
                            throw TypeError(".google.api.ClientLibrarySettings.dotnetSettings: object expected");
                        message.dotnetSettings = $root.google.api.DotnetSettings.fromObject(object.dotnetSettings);
                    }
                    if (object.rubySettings != null) {
                        if (typeof object.rubySettings !== "object")
                            throw TypeError(".google.api.ClientLibrarySettings.rubySettings: object expected");
                        message.rubySettings = $root.google.api.RubySettings.fromObject(object.rubySettings);
                    }
                    if (object.goSettings != null) {
                        if (typeof object.goSettings !== "object")
                            throw TypeError(".google.api.ClientLibrarySettings.goSettings: object expected");
                        message.goSettings = $root.google.api.GoSettings.fromObject(object.goSettings);
                    }
                    return message;
                };
    
                /**
                 * Creates a plain object from a ClientLibrarySettings message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.api.ClientLibrarySettings
                 * @static
                 * @param {google.api.ClientLibrarySettings} message ClientLibrarySettings
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                ClientLibrarySettings.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.defaults) {
                        object.version = "";
                        object.launchStage = options.enums === String ? "LAUNCH_STAGE_UNSPECIFIED" : 0;
                        object.restNumericEnums = false;
                        object.javaSettings = null;
                        object.cppSettings = null;
                        object.phpSettings = null;
                        object.pythonSettings = null;
                        object.nodeSettings = null;
                        object.dotnetSettings = null;
                        object.rubySettings = null;
                        object.goSettings = null;
                    }
                    if (message.version != null && message.hasOwnProperty("version"))
                        object.version = message.version;
                    if (message.launchStage != null && message.hasOwnProperty("launchStage"))
                        object.launchStage = options.enums === String ? $root.google.api.LaunchStage[message.launchStage] === undefined ? message.launchStage : $root.google.api.LaunchStage[message.launchStage] : message.launchStage;
                    if (message.restNumericEnums != null && message.hasOwnProperty("restNumericEnums"))
                        object.restNumericEnums = message.restNumericEnums;
                    if (message.javaSettings != null && message.hasOwnProperty("javaSettings"))
                        object.javaSettings = $root.google.api.JavaSettings.toObject(message.javaSettings, options);
                    if (message.cppSettings != null && message.hasOwnProperty("cppSettings"))
                        object.cppSettings = $root.google.api.CppSettings.toObject(message.cppSettings, options);
                    if (message.phpSettings != null && message.hasOwnProperty("phpSettings"))
                        object.phpSettings = $root.google.api.PhpSettings.toObject(message.phpSettings, options);
                    if (message.pythonSettings != null && message.hasOwnProperty("pythonSettings"))
                        object.pythonSettings = $root.google.api.PythonSettings.toObject(message.pythonSettings, options);
                    if (message.nodeSettings != null && message.hasOwnProperty("nodeSettings"))
                        object.nodeSettings = $root.google.api.NodeSettings.toObject(message.nodeSettings, options);
                    if (message.dotnetSettings != null && message.hasOwnProperty("dotnetSettings"))
                        object.dotnetSettings = $root.google.api.DotnetSettings.toObject(message.dotnetSettings, options);
                    if (message.rubySettings != null && message.hasOwnProperty("rubySettings"))
                        object.rubySettings = $root.google.api.RubySettings.toObject(message.rubySettings, options);
                    if (message.goSettings != null && message.hasOwnProperty("goSettings"))
                        object.goSettings = $root.google.api.GoSettings.toObject(message.goSettings, options);
                    return object;
                };
    
                /**
                 * Converts this ClientLibrarySettings to JSON.
                 * @function toJSON
                 * @memberof google.api.ClientLibrarySettings
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                ClientLibrarySettings.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for ClientLibrarySettings
                 * @function getTypeUrl
                 * @memberof google.api.ClientLibrarySettings
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                ClientLibrarySettings.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.api.ClientLibrarySettings";
                };
    
                return ClientLibrarySettings;
            })();
    
            api.Publishing = (function() {
    
                /**
                 * Properties of a Publishing.
                 * @memberof google.api
                 * @interface IPublishing
                 * @property {Array.<google.api.IMethodSettings>|null} [methodSettings] Publishing methodSettings
                 * @property {string|null} [newIssueUri] Publishing newIssueUri
                 * @property {string|null} [documentationUri] Publishing documentationUri
                 * @property {string|null} [apiShortName] Publishing apiShortName
                 * @property {string|null} [githubLabel] Publishing githubLabel
                 * @property {Array.<string>|null} [codeownerGithubTeams] Publishing codeownerGithubTeams
                 * @property {string|null} [docTagPrefix] Publishing docTagPrefix
                 * @property {google.api.ClientLibraryOrganization|null} [organization] Publishing organization
                 * @property {Array.<google.api.IClientLibrarySettings>|null} [librarySettings] Publishing librarySettings
                 */
    
                /**
                 * Constructs a new Publishing.
                 * @memberof google.api
                 * @classdesc Represents a Publishing.
                 * @implements IPublishing
                 * @constructor
                 * @param {google.api.IPublishing=} [properties] Properties to set
                 */
                function Publishing(properties) {
                    this.methodSettings = [];
                    this.codeownerGithubTeams = [];
                    this.librarySettings = [];
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * Publishing methodSettings.
                 * @member {Array.<google.api.IMethodSettings>} methodSettings
                 * @memberof google.api.Publishing
                 * @instance
                 */
                Publishing.prototype.methodSettings = $util.emptyArray;
    
                /**
                 * Publishing newIssueUri.
                 * @member {string} newIssueUri
                 * @memberof google.api.Publishing
                 * @instance
                 */
                Publishing.prototype.newIssueUri = "";
    
                /**
                 * Publishing documentationUri.
                 * @member {string} documentationUri
                 * @memberof google.api.Publishing
                 * @instance
                 */
                Publishing.prototype.documentationUri = "";
    
                /**
                 * Publishing apiShortName.
                 * @member {string} apiShortName
                 * @memberof google.api.Publishing
                 * @instance
                 */
                Publishing.prototype.apiShortName = "";
    
                /**
                 * Publishing githubLabel.
                 * @member {string} githubLabel
                 * @memberof google.api.Publishing
                 * @instance
                 */
                Publishing.prototype.githubLabel = "";
    
                /**
                 * Publishing codeownerGithubTeams.
                 * @member {Array.<string>} codeownerGithubTeams
                 * @memberof google.api.Publishing
                 * @instance
                 */
                Publishing.prototype.codeownerGithubTeams = $util.emptyArray;
    
                /**
                 * Publishing docTagPrefix.
                 * @member {string} docTagPrefix
                 * @memberof google.api.Publishing
                 * @instance
                 */
                Publishing.prototype.docTagPrefix = "";
    
                /**
                 * Publishing organization.
                 * @member {google.api.ClientLibraryOrganization} organization
                 * @memberof google.api.Publishing
                 * @instance
                 */
                Publishing.prototype.organization = 0;
    
                /**
                 * Publishing librarySettings.
                 * @member {Array.<google.api.IClientLibrarySettings>} librarySettings
                 * @memberof google.api.Publishing
                 * @instance
                 */
                Publishing.prototype.librarySettings = $util.emptyArray;
    
                /**
                 * Creates a new Publishing instance using the specified properties.
                 * @function create
                 * @memberof google.api.Publishing
                 * @static
                 * @param {google.api.IPublishing=} [properties] Properties to set
                 * @returns {google.api.Publishing} Publishing instance
                 */
                Publishing.create = function create(properties) {
                    return new Publishing(properties);
                };
    
                /**
                 * Encodes the specified Publishing message. Does not implicitly {@link google.api.Publishing.verify|verify} messages.
                 * @function encode
                 * @memberof google.api.Publishing
                 * @static
                 * @param {google.api.IPublishing} message Publishing message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                Publishing.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.methodSettings != null && message.methodSettings.length)
                        for (var i = 0; i < message.methodSettings.length; ++i)
                            $root.google.api.MethodSettings.encode(message.methodSettings[i], writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                    if (message.newIssueUri != null && Object.hasOwnProperty.call(message, "newIssueUri"))
                        writer.uint32(/* id 101, wireType 2 =*/810).string(message.newIssueUri);
                    if (message.documentationUri != null && Object.hasOwnProperty.call(message, "documentationUri"))
                        writer.uint32(/* id 102, wireType 2 =*/818).string(message.documentationUri);
                    if (message.apiShortName != null && Object.hasOwnProperty.call(message, "apiShortName"))
                        writer.uint32(/* id 103, wireType 2 =*/826).string(message.apiShortName);
                    if (message.githubLabel != null && Object.hasOwnProperty.call(message, "githubLabel"))
                        writer.uint32(/* id 104, wireType 2 =*/834).string(message.githubLabel);
                    if (message.codeownerGithubTeams != null && message.codeownerGithubTeams.length)
                        for (var i = 0; i < message.codeownerGithubTeams.length; ++i)
                            writer.uint32(/* id 105, wireType 2 =*/842).string(message.codeownerGithubTeams[i]);
                    if (message.docTagPrefix != null && Object.hasOwnProperty.call(message, "docTagPrefix"))
                        writer.uint32(/* id 106, wireType 2 =*/850).string(message.docTagPrefix);
                    if (message.organization != null && Object.hasOwnProperty.call(message, "organization"))
                        writer.uint32(/* id 107, wireType 0 =*/856).int32(message.organization);
                    if (message.librarySettings != null && message.librarySettings.length)
                        for (var i = 0; i < message.librarySettings.length; ++i)
                            $root.google.api.ClientLibrarySettings.encode(message.librarySettings[i], writer.uint32(/* id 109, wireType 2 =*/874).fork()).ldelim();
                    return writer;
                };
    
                /**
                 * Encodes the specified Publishing message, length delimited. Does not implicitly {@link google.api.Publishing.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.api.Publishing
                 * @static
                 * @param {google.api.IPublishing} message Publishing message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                Publishing.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a Publishing message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.api.Publishing
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.api.Publishing} Publishing
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                Publishing.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.api.Publishing();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 2: {
                                if (!(message.methodSettings && message.methodSettings.length))
                                    message.methodSettings = [];
                                message.methodSettings.push($root.google.api.MethodSettings.decode(reader, reader.uint32()));
                                break;
                            }
                        case 101: {
                                message.newIssueUri = reader.string();
                                break;
                            }
                        case 102: {
                                message.documentationUri = reader.string();
                                break;
                            }
                        case 103: {
                                message.apiShortName = reader.string();
                                break;
                            }
                        case 104: {
                                message.githubLabel = reader.string();
                                break;
                            }
                        case 105: {
                                if (!(message.codeownerGithubTeams && message.codeownerGithubTeams.length))
                                    message.codeownerGithubTeams = [];
                                message.codeownerGithubTeams.push(reader.string());
                                break;
                            }
                        case 106: {
                                message.docTagPrefix = reader.string();
                                break;
                            }
                        case 107: {
                                message.organization = reader.int32();
                                break;
                            }
                        case 109: {
                                if (!(message.librarySettings && message.librarySettings.length))
                                    message.librarySettings = [];
                                message.librarySettings.push($root.google.api.ClientLibrarySettings.decode(reader, reader.uint32()));
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a Publishing message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.api.Publishing
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.api.Publishing} Publishing
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                Publishing.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a Publishing message.
                 * @function verify
                 * @memberof google.api.Publishing
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                Publishing.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.methodSettings != null && message.hasOwnProperty("methodSettings")) {
                        if (!Array.isArray(message.methodSettings))
                            return "methodSettings: array expected";
                        for (var i = 0; i < message.methodSettings.length; ++i) {
                            var error = $root.google.api.MethodSettings.verify(message.methodSettings[i]);
                            if (error)
                                return "methodSettings." + error;
                        }
                    }
                    if (message.newIssueUri != null && message.hasOwnProperty("newIssueUri"))
                        if (!$util.isString(message.newIssueUri))
                            return "newIssueUri: string expected";
                    if (message.documentationUri != null && message.hasOwnProperty("documentationUri"))
                        if (!$util.isString(message.documentationUri))
                            return "documentationUri: string expected";
                    if (message.apiShortName != null && message.hasOwnProperty("apiShortName"))
                        if (!$util.isString(message.apiShortName))
                            return "apiShortName: string expected";
                    if (message.githubLabel != null && message.hasOwnProperty("githubLabel"))
                        if (!$util.isString(message.githubLabel))
                            return "githubLabel: string expected";
                    if (message.codeownerGithubTeams != null && message.hasOwnProperty("codeownerGithubTeams")) {
                        if (!Array.isArray(message.codeownerGithubTeams))
                            return "codeownerGithubTeams: array expected";
                        for (var i = 0; i < message.codeownerGithubTeams.length; ++i)
                            if (!$util.isString(message.codeownerGithubTeams[i]))
                                return "codeownerGithubTeams: string[] expected";
                    }
                    if (message.docTagPrefix != null && message.hasOwnProperty("docTagPrefix"))
                        if (!$util.isString(message.docTagPrefix))
                            return "docTagPrefix: string expected";
                    if (message.organization != null && message.hasOwnProperty("organization"))
                        switch (message.organization) {
                        default:
                            return "organization: enum value expected";
                        case 0:
                        case 1:
                        case 2:
                        case 3:
                        case 4:
                            break;
                        }
                    if (message.librarySettings != null && message.hasOwnProperty("librarySettings")) {
                        if (!Array.isArray(message.librarySettings))
                            return "librarySettings: array expected";
                        for (var i = 0; i < message.librarySettings.length; ++i) {
                            var error = $root.google.api.ClientLibrarySettings.verify(message.librarySettings[i]);
                            if (error)
                                return "librarySettings." + error;
                        }
                    }
                    return null;
                };
    
                /**
                 * Creates a Publishing message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.api.Publishing
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.api.Publishing} Publishing
                 */
                Publishing.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.api.Publishing)
                        return object;
                    var message = new $root.google.api.Publishing();
                    if (object.methodSettings) {
                        if (!Array.isArray(object.methodSettings))
                            throw TypeError(".google.api.Publishing.methodSettings: array expected");
                        message.methodSettings = [];
                        for (var i = 0; i < object.methodSettings.length; ++i) {
                            if (typeof object.methodSettings[i] !== "object")
                                throw TypeError(".google.api.Publishing.methodSettings: object expected");
                            message.methodSettings[i] = $root.google.api.MethodSettings.fromObject(object.methodSettings[i]);
                        }
                    }
                    if (object.newIssueUri != null)
                        message.newIssueUri = String(object.newIssueUri);
                    if (object.documentationUri != null)
                        message.documentationUri = String(object.documentationUri);
                    if (object.apiShortName != null)
                        message.apiShortName = String(object.apiShortName);
                    if (object.githubLabel != null)
                        message.githubLabel = String(object.githubLabel);
                    if (object.codeownerGithubTeams) {
                        if (!Array.isArray(object.codeownerGithubTeams))
                            throw TypeError(".google.api.Publishing.codeownerGithubTeams: array expected");
                        message.codeownerGithubTeams = [];
                        for (var i = 0; i < object.codeownerGithubTeams.length; ++i)
                            message.codeownerGithubTeams[i] = String(object.codeownerGithubTeams[i]);
                    }
                    if (object.docTagPrefix != null)
                        message.docTagPrefix = String(object.docTagPrefix);
                    switch (object.organization) {
                    default:
                        if (typeof object.organization === "number") {
                            message.organization = object.organization;
                            break;
                        }
                        break;
                    case "CLIENT_LIBRARY_ORGANIZATION_UNSPECIFIED":
                    case 0:
                        message.organization = 0;
                        break;
                    case "CLOUD":
                    case 1:
                        message.organization = 1;
                        break;
                    case "ADS":
                    case 2:
                        message.organization = 2;
                        break;
                    case "PHOTOS":
                    case 3:
                        message.organization = 3;
                        break;
                    case "STREET_VIEW":
                    case 4:
                        message.organization = 4;
                        break;
                    }
                    if (object.librarySettings) {
                        if (!Array.isArray(object.librarySettings))
                            throw TypeError(".google.api.Publishing.librarySettings: array expected");
                        message.librarySettings = [];
                        for (var i = 0; i < object.librarySettings.length; ++i) {
                            if (typeof object.librarySettings[i] !== "object")
                                throw TypeError(".google.api.Publishing.librarySettings: object expected");
                            message.librarySettings[i] = $root.google.api.ClientLibrarySettings.fromObject(object.librarySettings[i]);
                        }
                    }
                    return message;
                };
    
                /**
                 * Creates a plain object from a Publishing message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.api.Publishing
                 * @static
                 * @param {google.api.Publishing} message Publishing
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                Publishing.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.arrays || options.defaults) {
                        object.methodSettings = [];
                        object.codeownerGithubTeams = [];
                        object.librarySettings = [];
                    }
                    if (options.defaults) {
                        object.newIssueUri = "";
                        object.documentationUri = "";
                        object.apiShortName = "";
                        object.githubLabel = "";
                        object.docTagPrefix = "";
                        object.organization = options.enums === String ? "CLIENT_LIBRARY_ORGANIZATION_UNSPECIFIED" : 0;
                    }
                    if (message.methodSettings && message.methodSettings.length) {
                        object.methodSettings = [];
                        for (var j = 0; j < message.methodSettings.length; ++j)
                            object.methodSettings[j] = $root.google.api.MethodSettings.toObject(message.methodSettings[j], options);
                    }
                    if (message.newIssueUri != null && message.hasOwnProperty("newIssueUri"))
                        object.newIssueUri = message.newIssueUri;
                    if (message.documentationUri != null && message.hasOwnProperty("documentationUri"))
                        object.documentationUri = message.documentationUri;
                    if (message.apiShortName != null && message.hasOwnProperty("apiShortName"))
                        object.apiShortName = message.apiShortName;
                    if (message.githubLabel != null && message.hasOwnProperty("githubLabel"))
                        object.githubLabel = message.githubLabel;
                    if (message.codeownerGithubTeams && message.codeownerGithubTeams.length) {
                        object.codeownerGithubTeams = [];
                        for (var j = 0; j < message.codeownerGithubTeams.length; ++j)
                            object.codeownerGithubTeams[j] = message.codeownerGithubTeams[j];
                    }
                    if (message.docTagPrefix != null && message.hasOwnProperty("docTagPrefix"))
                        object.docTagPrefix = message.docTagPrefix;
                    if (message.organization != null && message.hasOwnProperty("organization"))
                        object.organization = options.enums === String ? $root.google.api.ClientLibraryOrganization[message.organization] === undefined ? message.organization : $root.google.api.ClientLibraryOrganization[message.organization] : message.organization;
                    if (message.librarySettings && message.librarySettings.length) {
                        object.librarySettings = [];
                        for (var j = 0; j < message.librarySettings.length; ++j)
                            object.librarySettings[j] = $root.google.api.ClientLibrarySettings.toObject(message.librarySettings[j], options);
                    }
                    return object;
                };
    
                /**
                 * Converts this Publishing to JSON.
                 * @function toJSON
                 * @memberof google.api.Publishing
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                Publishing.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for Publishing
                 * @function getTypeUrl
                 * @memberof google.api.Publishing
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                Publishing.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.api.Publishing";
                };
    
                return Publishing;
            })();
    
            api.JavaSettings = (function() {
    
                /**
                 * Properties of a JavaSettings.
                 * @memberof google.api
                 * @interface IJavaSettings
                 * @property {string|null} [libraryPackage] JavaSettings libraryPackage
                 * @property {Object.<string,string>|null} [serviceClassNames] JavaSettings serviceClassNames
                 * @property {google.api.ICommonLanguageSettings|null} [common] JavaSettings common
                 */
    
                /**
                 * Constructs a new JavaSettings.
                 * @memberof google.api
                 * @classdesc Represents a JavaSettings.
                 * @implements IJavaSettings
                 * @constructor
                 * @param {google.api.IJavaSettings=} [properties] Properties to set
                 */
                function JavaSettings(properties) {
                    this.serviceClassNames = {};
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * JavaSettings libraryPackage.
                 * @member {string} libraryPackage
                 * @memberof google.api.JavaSettings
                 * @instance
                 */
                JavaSettings.prototype.libraryPackage = "";
    
                /**
                 * JavaSettings serviceClassNames.
                 * @member {Object.<string,string>} serviceClassNames
                 * @memberof google.api.JavaSettings
                 * @instance
                 */
                JavaSettings.prototype.serviceClassNames = $util.emptyObject;
    
                /**
                 * JavaSettings common.
                 * @member {google.api.ICommonLanguageSettings|null|undefined} common
                 * @memberof google.api.JavaSettings
                 * @instance
                 */
                JavaSettings.prototype.common = null;
    
                /**
                 * Creates a new JavaSettings instance using the specified properties.
                 * @function create
                 * @memberof google.api.JavaSettings
                 * @static
                 * @param {google.api.IJavaSettings=} [properties] Properties to set
                 * @returns {google.api.JavaSettings} JavaSettings instance
                 */
                JavaSettings.create = function create(properties) {
                    return new JavaSettings(properties);
                };
    
                /**
                 * Encodes the specified JavaSettings message. Does not implicitly {@link google.api.JavaSettings.verify|verify} messages.
                 * @function encode
                 * @memberof google.api.JavaSettings
                 * @static
                 * @param {google.api.IJavaSettings} message JavaSettings message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                JavaSettings.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.libraryPackage != null && Object.hasOwnProperty.call(message, "libraryPackage"))
                        writer.uint32(/* id 1, wireType 2 =*/10).string(message.libraryPackage);
                    if (message.serviceClassNames != null && Object.hasOwnProperty.call(message, "serviceClassNames"))
                        for (var keys = Object.keys(message.serviceClassNames), i = 0; i < keys.length; ++i)
                            writer.uint32(/* id 2, wireType 2 =*/18).fork().uint32(/* id 1, wireType 2 =*/10).string(keys[i]).uint32(/* id 2, wireType 2 =*/18).string(message.serviceClassNames[keys[i]]).ldelim();
                    if (message.common != null && Object.hasOwnProperty.call(message, "common"))
                        $root.google.api.CommonLanguageSettings.encode(message.common, writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();
                    return writer;
                };
    
                /**
                 * Encodes the specified JavaSettings message, length delimited. Does not implicitly {@link google.api.JavaSettings.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.api.JavaSettings
                 * @static
                 * @param {google.api.IJavaSettings} message JavaSettings message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                JavaSettings.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a JavaSettings message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.api.JavaSettings
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.api.JavaSettings} JavaSettings
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                JavaSettings.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.api.JavaSettings(), key, value;
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1: {
                                message.libraryPackage = reader.string();
                                break;
                            }
                        case 2: {
                                if (message.serviceClassNames === $util.emptyObject)
                                    message.serviceClassNames = {};
                                var end2 = reader.uint32() + reader.pos;
                                key = "";
                                value = "";
                                while (reader.pos < end2) {
                                    var tag2 = reader.uint32();
                                    switch (tag2 >>> 3) {
                                    case 1:
                                        key = reader.string();
                                        break;
                                    case 2:
                                        value = reader.string();
                                        break;
                                    default:
                                        reader.skipType(tag2 & 7);
                                        break;
                                    }
                                }
                                message.serviceClassNames[key] = value;
                                break;
                            }
                        case 3: {
                                message.common = $root.google.api.CommonLanguageSettings.decode(reader, reader.uint32());
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a JavaSettings message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.api.JavaSettings
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.api.JavaSettings} JavaSettings
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                JavaSettings.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a JavaSettings message.
                 * @function verify
                 * @memberof google.api.JavaSettings
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                JavaSettings.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.libraryPackage != null && message.hasOwnProperty("libraryPackage"))
                        if (!$util.isString(message.libraryPackage))
                            return "libraryPackage: string expected";
                    if (message.serviceClassNames != null && message.hasOwnProperty("serviceClassNames")) {
                        if (!$util.isObject(message.serviceClassNames))
                            return "serviceClassNames: object expected";
                        var key = Object.keys(message.serviceClassNames);
                        for (var i = 0; i < key.length; ++i)
                            if (!$util.isString(message.serviceClassNames[key[i]]))
                                return "serviceClassNames: string{k:string} expected";
                    }
                    if (message.common != null && message.hasOwnProperty("common")) {
                        var error = $root.google.api.CommonLanguageSettings.verify(message.common);
                        if (error)
                            return "common." + error;
                    }
                    return null;
                };
    
                /**
                 * Creates a JavaSettings message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.api.JavaSettings
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.api.JavaSettings} JavaSettings
                 */
                JavaSettings.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.api.JavaSettings)
                        return object;
                    var message = new $root.google.api.JavaSettings();
                    if (object.libraryPackage != null)
                        message.libraryPackage = String(object.libraryPackage);
                    if (object.serviceClassNames) {
                        if (typeof object.serviceClassNames !== "object")
                            throw TypeError(".google.api.JavaSettings.serviceClassNames: object expected");
                        message.serviceClassNames = {};
                        for (var keys = Object.keys(object.serviceClassNames), i = 0; i < keys.length; ++i)
                            message.serviceClassNames[keys[i]] = String(object.serviceClassNames[keys[i]]);
                    }
                    if (object.common != null) {
                        if (typeof object.common !== "object")
                            throw TypeError(".google.api.JavaSettings.common: object expected");
                        message.common = $root.google.api.CommonLanguageSettings.fromObject(object.common);
                    }
                    return message;
                };
    
                /**
                 * Creates a plain object from a JavaSettings message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.api.JavaSettings
                 * @static
                 * @param {google.api.JavaSettings} message JavaSettings
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                JavaSettings.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.objects || options.defaults)
                        object.serviceClassNames = {};
                    if (options.defaults) {
                        object.libraryPackage = "";
                        object.common = null;
                    }
                    if (message.libraryPackage != null && message.hasOwnProperty("libraryPackage"))
                        object.libraryPackage = message.libraryPackage;
                    var keys2;
                    if (message.serviceClassNames && (keys2 = Object.keys(message.serviceClassNames)).length) {
                        object.serviceClassNames = {};
                        for (var j = 0; j < keys2.length; ++j)
                            object.serviceClassNames[keys2[j]] = message.serviceClassNames[keys2[j]];
                    }
                    if (message.common != null && message.hasOwnProperty("common"))
                        object.common = $root.google.api.CommonLanguageSettings.toObject(message.common, options);
                    return object;
                };
    
                /**
                 * Converts this JavaSettings to JSON.
                 * @function toJSON
                 * @memberof google.api.JavaSettings
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                JavaSettings.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for JavaSettings
                 * @function getTypeUrl
                 * @memberof google.api.JavaSettings
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                JavaSettings.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.api.JavaSettings";
                };
    
                return JavaSettings;
            })();
    
            api.CppSettings = (function() {
    
                /**
                 * Properties of a CppSettings.
                 * @memberof google.api
                 * @interface ICppSettings
                 * @property {google.api.ICommonLanguageSettings|null} [common] CppSettings common
                 */
    
                /**
                 * Constructs a new CppSettings.
                 * @memberof google.api
                 * @classdesc Represents a CppSettings.
                 * @implements ICppSettings
                 * @constructor
                 * @param {google.api.ICppSettings=} [properties] Properties to set
                 */
                function CppSettings(properties) {
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * CppSettings common.
                 * @member {google.api.ICommonLanguageSettings|null|undefined} common
                 * @memberof google.api.CppSettings
                 * @instance
                 */
                CppSettings.prototype.common = null;
    
                /**
                 * Creates a new CppSettings instance using the specified properties.
                 * @function create
                 * @memberof google.api.CppSettings
                 * @static
                 * @param {google.api.ICppSettings=} [properties] Properties to set
                 * @returns {google.api.CppSettings} CppSettings instance
                 */
                CppSettings.create = function create(properties) {
                    return new CppSettings(properties);
                };
    
                /**
                 * Encodes the specified CppSettings message. Does not implicitly {@link google.api.CppSettings.verify|verify} messages.
                 * @function encode
                 * @memberof google.api.CppSettings
                 * @static
                 * @param {google.api.ICppSettings} message CppSettings message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                CppSettings.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.common != null && Object.hasOwnProperty.call(message, "common"))
                        $root.google.api.CommonLanguageSettings.encode(message.common, writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                    return writer;
                };
    
                /**
                 * Encodes the specified CppSettings message, length delimited. Does not implicitly {@link google.api.CppSettings.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.api.CppSettings
                 * @static
                 * @param {google.api.ICppSettings} message CppSettings message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                CppSettings.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a CppSettings message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.api.CppSettings
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.api.CppSettings} CppSettings
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                CppSettings.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.api.CppSettings();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1: {
                                message.common = $root.google.api.CommonLanguageSettings.decode(reader, reader.uint32());
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a CppSettings message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.api.CppSettings
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.api.CppSettings} CppSettings
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                CppSettings.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a CppSettings message.
                 * @function verify
                 * @memberof google.api.CppSettings
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                CppSettings.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.common != null && message.hasOwnProperty("common")) {
                        var error = $root.google.api.CommonLanguageSettings.verify(message.common);
                        if (error)
                            return "common." + error;
                    }
                    return null;
                };
    
                /**
                 * Creates a CppSettings message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.api.CppSettings
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.api.CppSettings} CppSettings
                 */
                CppSettings.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.api.CppSettings)
                        return object;
                    var message = new $root.google.api.CppSettings();
                    if (object.common != null) {
                        if (typeof object.common !== "object")
                            throw TypeError(".google.api.CppSettings.common: object expected");
                        message.common = $root.google.api.CommonLanguageSettings.fromObject(object.common);
                    }
                    return message;
                };
    
                /**
                 * Creates a plain object from a CppSettings message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.api.CppSettings
                 * @static
                 * @param {google.api.CppSettings} message CppSettings
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                CppSettings.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.defaults)
                        object.common = null;
                    if (message.common != null && message.hasOwnProperty("common"))
                        object.common = $root.google.api.CommonLanguageSettings.toObject(message.common, options);
                    return object;
                };
    
                /**
                 * Converts this CppSettings to JSON.
                 * @function toJSON
                 * @memberof google.api.CppSettings
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                CppSettings.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for CppSettings
                 * @function getTypeUrl
                 * @memberof google.api.CppSettings
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                CppSettings.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.api.CppSettings";
                };
    
                return CppSettings;
            })();
    
            api.PhpSettings = (function() {
    
                /**
                 * Properties of a PhpSettings.
                 * @memberof google.api
                 * @interface IPhpSettings
                 * @property {google.api.ICommonLanguageSettings|null} [common] PhpSettings common
                 */
    
                /**
                 * Constructs a new PhpSettings.
                 * @memberof google.api
                 * @classdesc Represents a PhpSettings.
                 * @implements IPhpSettings
                 * @constructor
                 * @param {google.api.IPhpSettings=} [properties] Properties to set
                 */
                function PhpSettings(properties) {
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * PhpSettings common.
                 * @member {google.api.ICommonLanguageSettings|null|undefined} common
                 * @memberof google.api.PhpSettings
                 * @instance
                 */
                PhpSettings.prototype.common = null;
    
                /**
                 * Creates a new PhpSettings instance using the specified properties.
                 * @function create
                 * @memberof google.api.PhpSettings
                 * @static
                 * @param {google.api.IPhpSettings=} [properties] Properties to set
                 * @returns {google.api.PhpSettings} PhpSettings instance
                 */
                PhpSettings.create = function create(properties) {
                    return new PhpSettings(properties);
                };
    
                /**
                 * Encodes the specified PhpSettings message. Does not implicitly {@link google.api.PhpSettings.verify|verify} messages.
                 * @function encode
                 * @memberof google.api.PhpSettings
                 * @static
                 * @param {google.api.IPhpSettings} message PhpSettings message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                PhpSettings.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.common != null && Object.hasOwnProperty.call(message, "common"))
                        $root.google.api.CommonLanguageSettings.encode(message.common, writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                    return writer;
                };
    
                /**
                 * Encodes the specified PhpSettings message, length delimited. Does not implicitly {@link google.api.PhpSettings.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.api.PhpSettings
                 * @static
                 * @param {google.api.IPhpSettings} message PhpSettings message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                PhpSettings.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a PhpSettings message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.api.PhpSettings
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.api.PhpSettings} PhpSettings
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                PhpSettings.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.api.PhpSettings();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1: {
                                message.common = $root.google.api.CommonLanguageSettings.decode(reader, reader.uint32());
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a PhpSettings message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.api.PhpSettings
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.api.PhpSettings} PhpSettings
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                PhpSettings.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a PhpSettings message.
                 * @function verify
                 * @memberof google.api.PhpSettings
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                PhpSettings.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.common != null && message.hasOwnProperty("common")) {
                        var error = $root.google.api.CommonLanguageSettings.verify(message.common);
                        if (error)
                            return "common." + error;
                    }
                    return null;
                };
    
                /**
                 * Creates a PhpSettings message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.api.PhpSettings
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.api.PhpSettings} PhpSettings
                 */
                PhpSettings.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.api.PhpSettings)
                        return object;
                    var message = new $root.google.api.PhpSettings();
                    if (object.common != null) {
                        if (typeof object.common !== "object")
                            throw TypeError(".google.api.PhpSettings.common: object expected");
                        message.common = $root.google.api.CommonLanguageSettings.fromObject(object.common);
                    }
                    return message;
                };
    
                /**
                 * Creates a plain object from a PhpSettings message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.api.PhpSettings
                 * @static
                 * @param {google.api.PhpSettings} message PhpSettings
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                PhpSettings.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.defaults)
                        object.common = null;
                    if (message.common != null && message.hasOwnProperty("common"))
                        object.common = $root.google.api.CommonLanguageSettings.toObject(message.common, options);
                    return object;
                };
    
                /**
                 * Converts this PhpSettings to JSON.
                 * @function toJSON
                 * @memberof google.api.PhpSettings
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                PhpSettings.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for PhpSettings
                 * @function getTypeUrl
                 * @memberof google.api.PhpSettings
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                PhpSettings.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.api.PhpSettings";
                };
    
                return PhpSettings;
            })();
    
            api.PythonSettings = (function() {
    
                /**
                 * Properties of a PythonSettings.
                 * @memberof google.api
                 * @interface IPythonSettings
                 * @property {google.api.ICommonLanguageSettings|null} [common] PythonSettings common
                 */
    
                /**
                 * Constructs a new PythonSettings.
                 * @memberof google.api
                 * @classdesc Represents a PythonSettings.
                 * @implements IPythonSettings
                 * @constructor
                 * @param {google.api.IPythonSettings=} [properties] Properties to set
                 */
                function PythonSettings(properties) {
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * PythonSettings common.
                 * @member {google.api.ICommonLanguageSettings|null|undefined} common
                 * @memberof google.api.PythonSettings
                 * @instance
                 */
                PythonSettings.prototype.common = null;
    
                /**
                 * Creates a new PythonSettings instance using the specified properties.
                 * @function create
                 * @memberof google.api.PythonSettings
                 * @static
                 * @param {google.api.IPythonSettings=} [properties] Properties to set
                 * @returns {google.api.PythonSettings} PythonSettings instance
                 */
                PythonSettings.create = function create(properties) {
                    return new PythonSettings(properties);
                };
    
                /**
                 * Encodes the specified PythonSettings message. Does not implicitly {@link google.api.PythonSettings.verify|verify} messages.
                 * @function encode
                 * @memberof google.api.PythonSettings
                 * @static
                 * @param {google.api.IPythonSettings} message PythonSettings message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                PythonSettings.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.common != null && Object.hasOwnProperty.call(message, "common"))
                        $root.google.api.CommonLanguageSettings.encode(message.common, writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                    return writer;
                };
    
                /**
                 * Encodes the specified PythonSettings message, length delimited. Does not implicitly {@link google.api.PythonSettings.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.api.PythonSettings
                 * @static
                 * @param {google.api.IPythonSettings} message PythonSettings message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                PythonSettings.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a PythonSettings message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.api.PythonSettings
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.api.PythonSettings} PythonSettings
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                PythonSettings.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.api.PythonSettings();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1: {
                                message.common = $root.google.api.CommonLanguageSettings.decode(reader, reader.uint32());
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a PythonSettings message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.api.PythonSettings
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.api.PythonSettings} PythonSettings
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                PythonSettings.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a PythonSettings message.
                 * @function verify
                 * @memberof google.api.PythonSettings
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                PythonSettings.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.common != null && message.hasOwnProperty("common")) {
                        var error = $root.google.api.CommonLanguageSettings.verify(message.common);
                        if (error)
                            return "common." + error;
                    }
                    return null;
                };
    
                /**
                 * Creates a PythonSettings message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.api.PythonSettings
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.api.PythonSettings} PythonSettings
                 */
                PythonSettings.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.api.PythonSettings)
                        return object;
                    var message = new $root.google.api.PythonSettings();
                    if (object.common != null) {
                        if (typeof object.common !== "object")
                            throw TypeError(".google.api.PythonSettings.common: object expected");
                        message.common = $root.google.api.CommonLanguageSettings.fromObject(object.common);
                    }
                    return message;
                };
    
                /**
                 * Creates a plain object from a PythonSettings message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.api.PythonSettings
                 * @static
                 * @param {google.api.PythonSettings} message PythonSettings
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                PythonSettings.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.defaults)
                        object.common = null;
                    if (message.common != null && message.hasOwnProperty("common"))
                        object.common = $root.google.api.CommonLanguageSettings.toObject(message.common, options);
                    return object;
                };
    
                /**
                 * Converts this PythonSettings to JSON.
                 * @function toJSON
                 * @memberof google.api.PythonSettings
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                PythonSettings.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for PythonSettings
                 * @function getTypeUrl
                 * @memberof google.api.PythonSettings
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                PythonSettings.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.api.PythonSettings";
                };
    
                return PythonSettings;
            })();
    
            api.NodeSettings = (function() {
    
                /**
                 * Properties of a NodeSettings.
                 * @memberof google.api
                 * @interface INodeSettings
                 * @property {google.api.ICommonLanguageSettings|null} [common] NodeSettings common
                 */
    
                /**
                 * Constructs a new NodeSettings.
                 * @memberof google.api
                 * @classdesc Represents a NodeSettings.
                 * @implements INodeSettings
                 * @constructor
                 * @param {google.api.INodeSettings=} [properties] Properties to set
                 */
                function NodeSettings(properties) {
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * NodeSettings common.
                 * @member {google.api.ICommonLanguageSettings|null|undefined} common
                 * @memberof google.api.NodeSettings
                 * @instance
                 */
                NodeSettings.prototype.common = null;
    
                /**
                 * Creates a new NodeSettings instance using the specified properties.
                 * @function create
                 * @memberof google.api.NodeSettings
                 * @static
                 * @param {google.api.INodeSettings=} [properties] Properties to set
                 * @returns {google.api.NodeSettings} NodeSettings instance
                 */
                NodeSettings.create = function create(properties) {
                    return new NodeSettings(properties);
                };
    
                /**
                 * Encodes the specified NodeSettings message. Does not implicitly {@link google.api.NodeSettings.verify|verify} messages.
                 * @function encode
                 * @memberof google.api.NodeSettings
                 * @static
                 * @param {google.api.INodeSettings} message NodeSettings message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                NodeSettings.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.common != null && Object.hasOwnProperty.call(message, "common"))
                        $root.google.api.CommonLanguageSettings.encode(message.common, writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                    return writer;
                };
    
                /**
                 * Encodes the specified NodeSettings message, length delimited. Does not implicitly {@link google.api.NodeSettings.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.api.NodeSettings
                 * @static
                 * @param {google.api.INodeSettings} message NodeSettings message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                NodeSettings.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a NodeSettings message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.api.NodeSettings
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.api.NodeSettings} NodeSettings
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                NodeSettings.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.api.NodeSettings();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1: {
                                message.common = $root.google.api.CommonLanguageSettings.decode(reader, reader.uint32());
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a NodeSettings message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.api.NodeSettings
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.api.NodeSettings} NodeSettings
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                NodeSettings.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a NodeSettings message.
                 * @function verify
                 * @memberof google.api.NodeSettings
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                NodeSettings.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.common != null && message.hasOwnProperty("common")) {
                        var error = $root.google.api.CommonLanguageSettings.verify(message.common);
                        if (error)
                            return "common." + error;
                    }
                    return null;
                };
    
                /**
                 * Creates a NodeSettings message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.api.NodeSettings
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.api.NodeSettings} NodeSettings
                 */
                NodeSettings.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.api.NodeSettings)
                        return object;
                    var message = new $root.google.api.NodeSettings();
                    if (object.common != null) {
                        if (typeof object.common !== "object")
                            throw TypeError(".google.api.NodeSettings.common: object expected");
                        message.common = $root.google.api.CommonLanguageSettings.fromObject(object.common);
                    }
                    return message;
                };
    
                /**
                 * Creates a plain object from a NodeSettings message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.api.NodeSettings
                 * @static
                 * @param {google.api.NodeSettings} message NodeSettings
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                NodeSettings.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.defaults)
                        object.common = null;
                    if (message.common != null && message.hasOwnProperty("common"))
                        object.common = $root.google.api.CommonLanguageSettings.toObject(message.common, options);
                    return object;
                };
    
                /**
                 * Converts this NodeSettings to JSON.
                 * @function toJSON
                 * @memberof google.api.NodeSettings
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                NodeSettings.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for NodeSettings
                 * @function getTypeUrl
                 * @memberof google.api.NodeSettings
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                NodeSettings.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.api.NodeSettings";
                };
    
                return NodeSettings;
            })();
    
            api.DotnetSettings = (function() {
    
                /**
                 * Properties of a DotnetSettings.
                 * @memberof google.api
                 * @interface IDotnetSettings
                 * @property {google.api.ICommonLanguageSettings|null} [common] DotnetSettings common
                 */
    
                /**
                 * Constructs a new DotnetSettings.
                 * @memberof google.api
                 * @classdesc Represents a DotnetSettings.
                 * @implements IDotnetSettings
                 * @constructor
                 * @param {google.api.IDotnetSettings=} [properties] Properties to set
                 */
                function DotnetSettings(properties) {
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * DotnetSettings common.
                 * @member {google.api.ICommonLanguageSettings|null|undefined} common
                 * @memberof google.api.DotnetSettings
                 * @instance
                 */
                DotnetSettings.prototype.common = null;
    
                /**
                 * Creates a new DotnetSettings instance using the specified properties.
                 * @function create
                 * @memberof google.api.DotnetSettings
                 * @static
                 * @param {google.api.IDotnetSettings=} [properties] Properties to set
                 * @returns {google.api.DotnetSettings} DotnetSettings instance
                 */
                DotnetSettings.create = function create(properties) {
                    return new DotnetSettings(properties);
                };
    
                /**
                 * Encodes the specified DotnetSettings message. Does not implicitly {@link google.api.DotnetSettings.verify|verify} messages.
                 * @function encode
                 * @memberof google.api.DotnetSettings
                 * @static
                 * @param {google.api.IDotnetSettings} message DotnetSettings message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                DotnetSettings.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.common != null && Object.hasOwnProperty.call(message, "common"))
                        $root.google.api.CommonLanguageSettings.encode(message.common, writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                    return writer;
                };
    
                /**
                 * Encodes the specified DotnetSettings message, length delimited. Does not implicitly {@link google.api.DotnetSettings.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.api.DotnetSettings
                 * @static
                 * @param {google.api.IDotnetSettings} message DotnetSettings message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                DotnetSettings.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a DotnetSettings message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.api.DotnetSettings
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.api.DotnetSettings} DotnetSettings
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                DotnetSettings.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.api.DotnetSettings();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1: {
                                message.common = $root.google.api.CommonLanguageSettings.decode(reader, reader.uint32());
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a DotnetSettings message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.api.DotnetSettings
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.api.DotnetSettings} DotnetSettings
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                DotnetSettings.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a DotnetSettings message.
                 * @function verify
                 * @memberof google.api.DotnetSettings
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                DotnetSettings.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.common != null && message.hasOwnProperty("common")) {
                        var error = $root.google.api.CommonLanguageSettings.verify(message.common);
                        if (error)
                            return "common." + error;
                    }
                    return null;
                };
    
                /**
                 * Creates a DotnetSettings message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.api.DotnetSettings
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.api.DotnetSettings} DotnetSettings
                 */
                DotnetSettings.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.api.DotnetSettings)
                        return object;
                    var message = new $root.google.api.DotnetSettings();
                    if (object.common != null) {
                        if (typeof object.common !== "object")
                            throw TypeError(".google.api.DotnetSettings.common: object expected");
                        message.common = $root.google.api.CommonLanguageSettings.fromObject(object.common);
                    }
                    return message;
                };
    
                /**
                 * Creates a plain object from a DotnetSettings message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.api.DotnetSettings
                 * @static
                 * @param {google.api.DotnetSettings} message DotnetSettings
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                DotnetSettings.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.defaults)
                        object.common = null;
                    if (message.common != null && message.hasOwnProperty("common"))
                        object.common = $root.google.api.CommonLanguageSettings.toObject(message.common, options);
                    return object;
                };
    
                /**
                 * Converts this DotnetSettings to JSON.
                 * @function toJSON
                 * @memberof google.api.DotnetSettings
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                DotnetSettings.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for DotnetSettings
                 * @function getTypeUrl
                 * @memberof google.api.DotnetSettings
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                DotnetSettings.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.api.DotnetSettings";
                };
    
                return DotnetSettings;
            })();
    
            api.RubySettings = (function() {
    
                /**
                 * Properties of a RubySettings.
                 * @memberof google.api
                 * @interface IRubySettings
                 * @property {google.api.ICommonLanguageSettings|null} [common] RubySettings common
                 */
    
                /**
                 * Constructs a new RubySettings.
                 * @memberof google.api
                 * @classdesc Represents a RubySettings.
                 * @implements IRubySettings
                 * @constructor
                 * @param {google.api.IRubySettings=} [properties] Properties to set
                 */
                function RubySettings(properties) {
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * RubySettings common.
                 * @member {google.api.ICommonLanguageSettings|null|undefined} common
                 * @memberof google.api.RubySettings
                 * @instance
                 */
                RubySettings.prototype.common = null;
    
                /**
                 * Creates a new RubySettings instance using the specified properties.
                 * @function create
                 * @memberof google.api.RubySettings
                 * @static
                 * @param {google.api.IRubySettings=} [properties] Properties to set
                 * @returns {google.api.RubySettings} RubySettings instance
                 */
                RubySettings.create = function create(properties) {
                    return new RubySettings(properties);
                };
    
                /**
                 * Encodes the specified RubySettings message. Does not implicitly {@link google.api.RubySettings.verify|verify} messages.
                 * @function encode
                 * @memberof google.api.RubySettings
                 * @static
                 * @param {google.api.IRubySettings} message RubySettings message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                RubySettings.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.common != null && Object.hasOwnProperty.call(message, "common"))
                        $root.google.api.CommonLanguageSettings.encode(message.common, writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                    return writer;
                };
    
                /**
                 * Encodes the specified RubySettings message, length delimited. Does not implicitly {@link google.api.RubySettings.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.api.RubySettings
                 * @static
                 * @param {google.api.IRubySettings} message RubySettings message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                RubySettings.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a RubySettings message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.api.RubySettings
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.api.RubySettings} RubySettings
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                RubySettings.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.api.RubySettings();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1: {
                                message.common = $root.google.api.CommonLanguageSettings.decode(reader, reader.uint32());
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a RubySettings message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.api.RubySettings
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.api.RubySettings} RubySettings
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                RubySettings.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a RubySettings message.
                 * @function verify
                 * @memberof google.api.RubySettings
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                RubySettings.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.common != null && message.hasOwnProperty("common")) {
                        var error = $root.google.api.CommonLanguageSettings.verify(message.common);
                        if (error)
                            return "common." + error;
                    }
                    return null;
                };
    
                /**
                 * Creates a RubySettings message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.api.RubySettings
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.api.RubySettings} RubySettings
                 */
                RubySettings.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.api.RubySettings)
                        return object;
                    var message = new $root.google.api.RubySettings();
                    if (object.common != null) {
                        if (typeof object.common !== "object")
                            throw TypeError(".google.api.RubySettings.common: object expected");
                        message.common = $root.google.api.CommonLanguageSettings.fromObject(object.common);
                    }
                    return message;
                };
    
                /**
                 * Creates a plain object from a RubySettings message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.api.RubySettings
                 * @static
                 * @param {google.api.RubySettings} message RubySettings
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                RubySettings.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.defaults)
                        object.common = null;
                    if (message.common != null && message.hasOwnProperty("common"))
                        object.common = $root.google.api.CommonLanguageSettings.toObject(message.common, options);
                    return object;
                };
    
                /**
                 * Converts this RubySettings to JSON.
                 * @function toJSON
                 * @memberof google.api.RubySettings
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                RubySettings.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for RubySettings
                 * @function getTypeUrl
                 * @memberof google.api.RubySettings
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                RubySettings.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.api.RubySettings";
                };
    
                return RubySettings;
            })();
    
            api.GoSettings = (function() {
    
                /**
                 * Properties of a GoSettings.
                 * @memberof google.api
                 * @interface IGoSettings
                 * @property {google.api.ICommonLanguageSettings|null} [common] GoSettings common
                 */
    
                /**
                 * Constructs a new GoSettings.
                 * @memberof google.api
                 * @classdesc Represents a GoSettings.
                 * @implements IGoSettings
                 * @constructor
                 * @param {google.api.IGoSettings=} [properties] Properties to set
                 */
                function GoSettings(properties) {
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * GoSettings common.
                 * @member {google.api.ICommonLanguageSettings|null|undefined} common
                 * @memberof google.api.GoSettings
                 * @instance
                 */
                GoSettings.prototype.common = null;
    
                /**
                 * Creates a new GoSettings instance using the specified properties.
                 * @function create
                 * @memberof google.api.GoSettings
                 * @static
                 * @param {google.api.IGoSettings=} [properties] Properties to set
                 * @returns {google.api.GoSettings} GoSettings instance
                 */
                GoSettings.create = function create(properties) {
                    return new GoSettings(properties);
                };
    
                /**
                 * Encodes the specified GoSettings message. Does not implicitly {@link google.api.GoSettings.verify|verify} messages.
                 * @function encode
                 * @memberof google.api.GoSettings
                 * @static
                 * @param {google.api.IGoSettings} message GoSettings message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                GoSettings.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.common != null && Object.hasOwnProperty.call(message, "common"))
                        $root.google.api.CommonLanguageSettings.encode(message.common, writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                    return writer;
                };
    
                /**
                 * Encodes the specified GoSettings message, length delimited. Does not implicitly {@link google.api.GoSettings.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.api.GoSettings
                 * @static
                 * @param {google.api.IGoSettings} message GoSettings message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                GoSettings.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a GoSettings message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.api.GoSettings
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.api.GoSettings} GoSettings
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                GoSettings.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.api.GoSettings();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1: {
                                message.common = $root.google.api.CommonLanguageSettings.decode(reader, reader.uint32());
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a GoSettings message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.api.GoSettings
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.api.GoSettings} GoSettings
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                GoSettings.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a GoSettings message.
                 * @function verify
                 * @memberof google.api.GoSettings
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                GoSettings.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.common != null && message.hasOwnProperty("common")) {
                        var error = $root.google.api.CommonLanguageSettings.verify(message.common);
                        if (error)
                            return "common." + error;
                    }
                    return null;
                };
    
                /**
                 * Creates a GoSettings message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.api.GoSettings
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.api.GoSettings} GoSettings
                 */
                GoSettings.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.api.GoSettings)
                        return object;
                    var message = new $root.google.api.GoSettings();
                    if (object.common != null) {
                        if (typeof object.common !== "object")
                            throw TypeError(".google.api.GoSettings.common: object expected");
                        message.common = $root.google.api.CommonLanguageSettings.fromObject(object.common);
                    }
                    return message;
                };
    
                /**
                 * Creates a plain object from a GoSettings message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.api.GoSettings
                 * @static
                 * @param {google.api.GoSettings} message GoSettings
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                GoSettings.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.defaults)
                        object.common = null;
                    if (message.common != null && message.hasOwnProperty("common"))
                        object.common = $root.google.api.CommonLanguageSettings.toObject(message.common, options);
                    return object;
                };
    
                /**
                 * Converts this GoSettings to JSON.
                 * @function toJSON
                 * @memberof google.api.GoSettings
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                GoSettings.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for GoSettings
                 * @function getTypeUrl
                 * @memberof google.api.GoSettings
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                GoSettings.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.api.GoSettings";
                };
    
                return GoSettings;
            })();
    
            api.MethodSettings = (function() {
    
                /**
                 * Properties of a MethodSettings.
                 * @memberof google.api
                 * @interface IMethodSettings
                 * @property {string|null} [selector] MethodSettings selector
                 * @property {google.api.MethodSettings.ILongRunning|null} [longRunning] MethodSettings longRunning
                 */
    
                /**
                 * Constructs a new MethodSettings.
                 * @memberof google.api
                 * @classdesc Represents a MethodSettings.
                 * @implements IMethodSettings
                 * @constructor
                 * @param {google.api.IMethodSettings=} [properties] Properties to set
                 */
                function MethodSettings(properties) {
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * MethodSettings selector.
                 * @member {string} selector
                 * @memberof google.api.MethodSettings
                 * @instance
                 */
                MethodSettings.prototype.selector = "";
    
                /**
                 * MethodSettings longRunning.
                 * @member {google.api.MethodSettings.ILongRunning|null|undefined} longRunning
                 * @memberof google.api.MethodSettings
                 * @instance
                 */
                MethodSettings.prototype.longRunning = null;
    
                /**
                 * Creates a new MethodSettings instance using the specified properties.
                 * @function create
                 * @memberof google.api.MethodSettings
                 * @static
                 * @param {google.api.IMethodSettings=} [properties] Properties to set
                 * @returns {google.api.MethodSettings} MethodSettings instance
                 */
                MethodSettings.create = function create(properties) {
                    return new MethodSettings(properties);
                };
    
                /**
                 * Encodes the specified MethodSettings message. Does not implicitly {@link google.api.MethodSettings.verify|verify} messages.
                 * @function encode
                 * @memberof google.api.MethodSettings
                 * @static
                 * @param {google.api.IMethodSettings} message MethodSettings message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                MethodSettings.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.selector != null && Object.hasOwnProperty.call(message, "selector"))
                        writer.uint32(/* id 1, wireType 2 =*/10).string(message.selector);
                    if (message.longRunning != null && Object.hasOwnProperty.call(message, "longRunning"))
                        $root.google.api.MethodSettings.LongRunning.encode(message.longRunning, writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                    return writer;
                };
    
                /**
                 * Encodes the specified MethodSettings message, length delimited. Does not implicitly {@link google.api.MethodSettings.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.api.MethodSettings
                 * @static
                 * @param {google.api.IMethodSettings} message MethodSettings message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                MethodSettings.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a MethodSettings message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.api.MethodSettings
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.api.MethodSettings} MethodSettings
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                MethodSettings.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.api.MethodSettings();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1: {
                                message.selector = reader.string();
                                break;
                            }
                        case 2: {
                                message.longRunning = $root.google.api.MethodSettings.LongRunning.decode(reader, reader.uint32());
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a MethodSettings message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.api.MethodSettings
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.api.MethodSettings} MethodSettings
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                MethodSettings.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a MethodSettings message.
                 * @function verify
                 * @memberof google.api.MethodSettings
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                MethodSettings.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.selector != null && message.hasOwnProperty("selector"))
                        if (!$util.isString(message.selector))
                            return "selector: string expected";
                    if (message.longRunning != null && message.hasOwnProperty("longRunning")) {
                        var error = $root.google.api.MethodSettings.LongRunning.verify(message.longRunning);
                        if (error)
                            return "longRunning." + error;
                    }
                    return null;
                };
    
                /**
                 * Creates a MethodSettings message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.api.MethodSettings
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.api.MethodSettings} MethodSettings
                 */
                MethodSettings.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.api.MethodSettings)
                        return object;
                    var message = new $root.google.api.MethodSettings();
                    if (object.selector != null)
                        message.selector = String(object.selector);
                    if (object.longRunning != null) {
                        if (typeof object.longRunning !== "object")
                            throw TypeError(".google.api.MethodSettings.longRunning: object expected");
                        message.longRunning = $root.google.api.MethodSettings.LongRunning.fromObject(object.longRunning);
                    }
                    return message;
                };
    
                /**
                 * Creates a plain object from a MethodSettings message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.api.MethodSettings
                 * @static
                 * @param {google.api.MethodSettings} message MethodSettings
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                MethodSettings.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.defaults) {
                        object.selector = "";
                        object.longRunning = null;
                    }
                    if (message.selector != null && message.hasOwnProperty("selector"))
                        object.selector = message.selector;
                    if (message.longRunning != null && message.hasOwnProperty("longRunning"))
                        object.longRunning = $root.google.api.MethodSettings.LongRunning.toObject(message.longRunning, options);
                    return object;
                };
    
                /**
                 * Converts this MethodSettings to JSON.
                 * @function toJSON
                 * @memberof google.api.MethodSettings
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                MethodSettings.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for MethodSettings
                 * @function getTypeUrl
                 * @memberof google.api.MethodSettings
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                MethodSettings.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.api.MethodSettings";
                };
    
                MethodSettings.LongRunning = (function() {
    
                    /**
                     * Properties of a LongRunning.
                     * @memberof google.api.MethodSettings
                     * @interface ILongRunning
                     * @property {google.protobuf.IDuration|null} [initialPollDelay] LongRunning initialPollDelay
                     * @property {number|null} [pollDelayMultiplier] LongRunning pollDelayMultiplier
                     * @property {google.protobuf.IDuration|null} [maxPollDelay] LongRunning maxPollDelay
                     * @property {google.protobuf.IDuration|null} [totalPollTimeout] LongRunning totalPollTimeout
                     */
    
                    /**
                     * Constructs a new LongRunning.
                     * @memberof google.api.MethodSettings
                     * @classdesc Represents a LongRunning.
                     * @implements ILongRunning
                     * @constructor
                     * @param {google.api.MethodSettings.ILongRunning=} [properties] Properties to set
                     */
                    function LongRunning(properties) {
                        if (properties)
                            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                if (properties[keys[i]] != null)
                                    this[keys[i]] = properties[keys[i]];
                    }
    
                    /**
                     * LongRunning initialPollDelay.
                     * @member {google.protobuf.IDuration|null|undefined} initialPollDelay
                     * @memberof google.api.MethodSettings.LongRunning
                     * @instance
                     */
                    LongRunning.prototype.initialPollDelay = null;
    
                    /**
                     * LongRunning pollDelayMultiplier.
                     * @member {number} pollDelayMultiplier
                     * @memberof google.api.MethodSettings.LongRunning
                     * @instance
                     */
                    LongRunning.prototype.pollDelayMultiplier = 0;
    
                    /**
                     * LongRunning maxPollDelay.
                     * @member {google.protobuf.IDuration|null|undefined} maxPollDelay
                     * @memberof google.api.MethodSettings.LongRunning
                     * @instance
                     */
                    LongRunning.prototype.maxPollDelay = null;
    
                    /**
                     * LongRunning totalPollTimeout.
                     * @member {google.protobuf.IDuration|null|undefined} totalPollTimeout
                     * @memberof google.api.MethodSettings.LongRunning
                     * @instance
                     */
                    LongRunning.prototype.totalPollTimeout = null;
    
                    /**
                     * Creates a new LongRunning instance using the specified properties.
                     * @function create
                     * @memberof google.api.MethodSettings.LongRunning
                     * @static
                     * @param {google.api.MethodSettings.ILongRunning=} [properties] Properties to set
                     * @returns {google.api.MethodSettings.LongRunning} LongRunning instance
                     */
                    LongRunning.create = function create(properties) {
                        return new LongRunning(properties);
                    };
    
                    /**
                     * Encodes the specified LongRunning message. Does not implicitly {@link google.api.MethodSettings.LongRunning.verify|verify} messages.
                     * @function encode
                     * @memberof google.api.MethodSettings.LongRunning
                     * @static
                     * @param {google.api.MethodSettings.ILongRunning} message LongRunning message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    LongRunning.encode = function encode(message, writer) {
                        if (!writer)
                            writer = $Writer.create();
                        if (message.initialPollDelay != null && Object.hasOwnProperty.call(message, "initialPollDelay"))
                            $root.google.protobuf.Duration.encode(message.initialPollDelay, writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                        if (message.pollDelayMultiplier != null && Object.hasOwnProperty.call(message, "pollDelayMultiplier"))
                            writer.uint32(/* id 2, wireType 5 =*/21).float(message.pollDelayMultiplier);
                        if (message.maxPollDelay != null && Object.hasOwnProperty.call(message, "maxPollDelay"))
                            $root.google.protobuf.Duration.encode(message.maxPollDelay, writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();
                        if (message.totalPollTimeout != null && Object.hasOwnProperty.call(message, "totalPollTimeout"))
                            $root.google.protobuf.Duration.encode(message.totalPollTimeout, writer.uint32(/* id 4, wireType 2 =*/34).fork()).ldelim();
                        return writer;
                    };
    
                    /**
                     * Encodes the specified LongRunning message, length delimited. Does not implicitly {@link google.api.MethodSettings.LongRunning.verify|verify} messages.
                     * @function encodeDelimited
                     * @memberof google.api.MethodSettings.LongRunning
                     * @static
                     * @param {google.api.MethodSettings.ILongRunning} message LongRunning message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    LongRunning.encodeDelimited = function encodeDelimited(message, writer) {
                        return this.encode(message, writer).ldelim();
                    };
    
                    /**
                     * Decodes a LongRunning message from the specified reader or buffer.
                     * @function decode
                     * @memberof google.api.MethodSettings.LongRunning
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @param {number} [length] Message length if known beforehand
                     * @returns {google.api.MethodSettings.LongRunning} LongRunning
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    LongRunning.decode = function decode(reader, length) {
                        if (!(reader instanceof $Reader))
                            reader = $Reader.create(reader);
                        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.api.MethodSettings.LongRunning();
                        while (reader.pos < end) {
                            var tag = reader.uint32();
                            switch (tag >>> 3) {
                            case 1: {
                                    message.initialPollDelay = $root.google.protobuf.Duration.decode(reader, reader.uint32());
                                    break;
                                }
                            case 2: {
                                    message.pollDelayMultiplier = reader.float();
                                    break;
                                }
                            case 3: {
                                    message.maxPollDelay = $root.google.protobuf.Duration.decode(reader, reader.uint32());
                                    break;
                                }
                            case 4: {
                                    message.totalPollTimeout = $root.google.protobuf.Duration.decode(reader, reader.uint32());
                                    break;
                                }
                            default:
                                reader.skipType(tag & 7);
                                break;
                            }
                        }
                        return message;
                    };
    
                    /**
                     * Decodes a LongRunning message from the specified reader or buffer, length delimited.
                     * @function decodeDelimited
                     * @memberof google.api.MethodSettings.LongRunning
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @returns {google.api.MethodSettings.LongRunning} LongRunning
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    LongRunning.decodeDelimited = function decodeDelimited(reader) {
                        if (!(reader instanceof $Reader))
                            reader = new $Reader(reader);
                        return this.decode(reader, reader.uint32());
                    };
    
                    /**
                     * Verifies a LongRunning message.
                     * @function verify
                     * @memberof google.api.MethodSettings.LongRunning
                     * @static
                     * @param {Object.<string,*>} message Plain object to verify
                     * @returns {string|null} `null` if valid, otherwise the reason why it is not
                     */
                    LongRunning.verify = function verify(message) {
                        if (typeof message !== "object" || message === null)
                            return "object expected";
                        if (message.initialPollDelay != null && message.hasOwnProperty("initialPollDelay")) {
                            var error = $root.google.protobuf.Duration.verify(message.initialPollDelay);
                            if (error)
                                return "initialPollDelay." + error;
                        }
                        if (message.pollDelayMultiplier != null && message.hasOwnProperty("pollDelayMultiplier"))
                            if (typeof message.pollDelayMultiplier !== "number")
                                return "pollDelayMultiplier: number expected";
                        if (message.maxPollDelay != null && message.hasOwnProperty("maxPollDelay")) {
                            var error = $root.google.protobuf.Duration.verify(message.maxPollDelay);
                            if (error)
                                return "maxPollDelay." + error;
                        }
                        if (message.totalPollTimeout != null && message.hasOwnProperty("totalPollTimeout")) {
                            var error = $root.google.protobuf.Duration.verify(message.totalPollTimeout);
                            if (error)
                                return "totalPollTimeout." + error;
                        }
                        return null;
                    };
    
                    /**
                     * Creates a LongRunning message from a plain object. Also converts values to their respective internal types.
                     * @function fromObject
                     * @memberof google.api.MethodSettings.LongRunning
                     * @static
                     * @param {Object.<string,*>} object Plain object
                     * @returns {google.api.MethodSettings.LongRunning} LongRunning
                     */
                    LongRunning.fromObject = function fromObject(object) {
                        if (object instanceof $root.google.api.MethodSettings.LongRunning)
                            return object;
                        var message = new $root.google.api.MethodSettings.LongRunning();
                        if (object.initialPollDelay != null) {
                            if (typeof object.initialPollDelay !== "object")
                                throw TypeError(".google.api.MethodSettings.LongRunning.initialPollDelay: object expected");
                            message.initialPollDelay = $root.google.protobuf.Duration.fromObject(object.initialPollDelay);
                        }
                        if (object.pollDelayMultiplier != null)
                            message.pollDelayMultiplier = Number(object.pollDelayMultiplier);
                        if (object.maxPollDelay != null) {
                            if (typeof object.maxPollDelay !== "object")
                                throw TypeError(".google.api.MethodSettings.LongRunning.maxPollDelay: object expected");
                            message.maxPollDelay = $root.google.protobuf.Duration.fromObject(object.maxPollDelay);
                        }
                        if (object.totalPollTimeout != null) {
                            if (typeof object.totalPollTimeout !== "object")
                                throw TypeError(".google.api.MethodSettings.LongRunning.totalPollTimeout: object expected");
                            message.totalPollTimeout = $root.google.protobuf.Duration.fromObject(object.totalPollTimeout);
                        }
                        return message;
                    };
    
                    /**
                     * Creates a plain object from a LongRunning message. Also converts values to other types if specified.
                     * @function toObject
                     * @memberof google.api.MethodSettings.LongRunning
                     * @static
                     * @param {google.api.MethodSettings.LongRunning} message LongRunning
                     * @param {$protobuf.IConversionOptions} [options] Conversion options
                     * @returns {Object.<string,*>} Plain object
                     */
                    LongRunning.toObject = function toObject(message, options) {
                        if (!options)
                            options = {};
                        var object = {};
                        if (options.defaults) {
                            object.initialPollDelay = null;
                            object.pollDelayMultiplier = 0;
                            object.maxPollDelay = null;
                            object.totalPollTimeout = null;
                        }
                        if (message.initialPollDelay != null && message.hasOwnProperty("initialPollDelay"))
                            object.initialPollDelay = $root.google.protobuf.Duration.toObject(message.initialPollDelay, options);
                        if (message.pollDelayMultiplier != null && message.hasOwnProperty("pollDelayMultiplier"))
                            object.pollDelayMultiplier = options.json && !isFinite(message.pollDelayMultiplier) ? String(message.pollDelayMultiplier) : message.pollDelayMultiplier;
                        if (message.maxPollDelay != null && message.hasOwnProperty("maxPollDelay"))
                            object.maxPollDelay = $root.google.protobuf.Duration.toObject(message.maxPollDelay, options);
                        if (message.totalPollTimeout != null && message.hasOwnProperty("totalPollTimeout"))
                            object.totalPollTimeout = $root.google.protobuf.Duration.toObject(message.totalPollTimeout, options);
                        return object;
                    };
    
                    /**
                     * Converts this LongRunning to JSON.
                     * @function toJSON
                     * @memberof google.api.MethodSettings.LongRunning
                     * @instance
                     * @returns {Object.<string,*>} JSON object
                     */
                    LongRunning.prototype.toJSON = function toJSON() {
                        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                    };
    
                    /**
                     * Gets the default type url for LongRunning
                     * @function getTypeUrl
                     * @memberof google.api.MethodSettings.LongRunning
                     * @static
                     * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                     * @returns {string} The default type url
                     */
                    LongRunning.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                        if (typeUrlPrefix === undefined) {
                            typeUrlPrefix = "type.googleapis.com";
                        }
                        return typeUrlPrefix + "/google.api.MethodSettings.LongRunning";
                    };
    
                    return LongRunning;
                })();
    
                return MethodSettings;
            })();
    
            /**
             * ClientLibraryOrganization enum.
             * @name google.api.ClientLibraryOrganization
             * @enum {number}
             * @property {number} CLIENT_LIBRARY_ORGANIZATION_UNSPECIFIED=0 CLIENT_LIBRARY_ORGANIZATION_UNSPECIFIED value
             * @property {number} CLOUD=1 CLOUD value
             * @property {number} ADS=2 ADS value
             * @property {number} PHOTOS=3 PHOTOS value
             * @property {number} STREET_VIEW=4 STREET_VIEW value
             */
            api.ClientLibraryOrganization = (function() {
                var valuesById = {}, values = Object.create(valuesById);
                values[valuesById[0] = "CLIENT_LIBRARY_ORGANIZATION_UNSPECIFIED"] = 0;
                values[valuesById[1] = "CLOUD"] = 1;
                values[valuesById[2] = "ADS"] = 2;
                values[valuesById[3] = "PHOTOS"] = 3;
                values[valuesById[4] = "STREET_VIEW"] = 4;
                return values;
            })();
    
            /**
             * ClientLibraryDestination enum.
             * @name google.api.ClientLibraryDestination
             * @enum {number}
             * @property {number} CLIENT_LIBRARY_DESTINATION_UNSPECIFIED=0 CLIENT_LIBRARY_DESTINATION_UNSPECIFIED value
             * @property {number} GITHUB=10 GITHUB value
             * @property {number} PACKAGE_MANAGER=20 PACKAGE_MANAGER value
             */
            api.ClientLibraryDestination = (function() {
                var valuesById = {}, values = Object.create(valuesById);
                values[valuesById[0] = "CLIENT_LIBRARY_DESTINATION_UNSPECIFIED"] = 0;
                values[valuesById[10] = "GITHUB"] = 10;
                values[valuesById[20] = "PACKAGE_MANAGER"] = 20;
                return values;
            })();
    
            /**
             * LaunchStage enum.
             * @name google.api.LaunchStage
             * @enum {number}
             * @property {number} LAUNCH_STAGE_UNSPECIFIED=0 LAUNCH_STAGE_UNSPECIFIED value
             * @property {number} UNIMPLEMENTED=6 UNIMPLEMENTED value
             * @property {number} PRELAUNCH=7 PRELAUNCH value
             * @property {number} EARLY_ACCESS=1 EARLY_ACCESS value
             * @property {number} ALPHA=2 ALPHA value
             * @property {number} BETA=3 BETA value
             * @property {number} GA=4 GA value
             * @property {number} DEPRECATED=5 DEPRECATED value
             */
            api.LaunchStage = (function() {
                var valuesById = {}, values = Object.create(valuesById);
                values[valuesById[0] = "LAUNCH_STAGE_UNSPECIFIED"] = 0;
                values[valuesById[6] = "UNIMPLEMENTED"] = 6;
                values[valuesById[7] = "PRELAUNCH"] = 7;
                values[valuesById[1] = "EARLY_ACCESS"] = 1;
                values[valuesById[2] = "ALPHA"] = 2;
                values[valuesById[3] = "BETA"] = 3;
                values[valuesById[4] = "GA"] = 4;
                values[valuesById[5] = "DEPRECATED"] = 5;
                return values;
            })();
    
            return api;
        })();
    
        google.protobuf = (function() {
    
            /**
             * Namespace protobuf.
             * @memberof google
             * @namespace
             */
            var protobuf = {};
    
            protobuf.FileDescriptorSet = (function() {
    
                /**
                 * Properties of a FileDescriptorSet.
                 * @memberof google.protobuf
                 * @interface IFileDescriptorSet
                 * @property {Array.<google.protobuf.IFileDescriptorProto>|null} [file] FileDescriptorSet file
                 */
    
                /**
                 * Constructs a new FileDescriptorSet.
                 * @memberof google.protobuf
                 * @classdesc Represents a FileDescriptorSet.
                 * @implements IFileDescriptorSet
                 * @constructor
                 * @param {google.protobuf.IFileDescriptorSet=} [properties] Properties to set
                 */
                function FileDescriptorSet(properties) {
                    this.file = [];
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * FileDescriptorSet file.
                 * @member {Array.<google.protobuf.IFileDescriptorProto>} file
                 * @memberof google.protobuf.FileDescriptorSet
                 * @instance
                 */
                FileDescriptorSet.prototype.file = $util.emptyArray;
    
                /**
                 * Creates a new FileDescriptorSet instance using the specified properties.
                 * @function create
                 * @memberof google.protobuf.FileDescriptorSet
                 * @static
                 * @param {google.protobuf.IFileDescriptorSet=} [properties] Properties to set
                 * @returns {google.protobuf.FileDescriptorSet} FileDescriptorSet instance
                 */
                FileDescriptorSet.create = function create(properties) {
                    return new FileDescriptorSet(properties);
                };
    
                /**
                 * Encodes the specified FileDescriptorSet message. Does not implicitly {@link google.protobuf.FileDescriptorSet.verify|verify} messages.
                 * @function encode
                 * @memberof google.protobuf.FileDescriptorSet
                 * @static
                 * @param {google.protobuf.IFileDescriptorSet} message FileDescriptorSet message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                FileDescriptorSet.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.file != null && message.file.length)
                        for (var i = 0; i < message.file.length; ++i)
                            $root.google.protobuf.FileDescriptorProto.encode(message.file[i], writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                    return writer;
                };
    
                /**
                 * Encodes the specified FileDescriptorSet message, length delimited. Does not implicitly {@link google.protobuf.FileDescriptorSet.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.protobuf.FileDescriptorSet
                 * @static
                 * @param {google.protobuf.IFileDescriptorSet} message FileDescriptorSet message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                FileDescriptorSet.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a FileDescriptorSet message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.protobuf.FileDescriptorSet
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.protobuf.FileDescriptorSet} FileDescriptorSet
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                FileDescriptorSet.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.FileDescriptorSet();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1: {
                                if (!(message.file && message.file.length))
                                    message.file = [];
                                message.file.push($root.google.protobuf.FileDescriptorProto.decode(reader, reader.uint32()));
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a FileDescriptorSet message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.protobuf.FileDescriptorSet
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.protobuf.FileDescriptorSet} FileDescriptorSet
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                FileDescriptorSet.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a FileDescriptorSet message.
                 * @function verify
                 * @memberof google.protobuf.FileDescriptorSet
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                FileDescriptorSet.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.file != null && message.hasOwnProperty("file")) {
                        if (!Array.isArray(message.file))
                            return "file: array expected";
                        for (var i = 0; i < message.file.length; ++i) {
                            var error = $root.google.protobuf.FileDescriptorProto.verify(message.file[i]);
                            if (error)
                                return "file." + error;
                        }
                    }
                    return null;
                };
    
                /**
                 * Creates a FileDescriptorSet message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.protobuf.FileDescriptorSet
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.protobuf.FileDescriptorSet} FileDescriptorSet
                 */
                FileDescriptorSet.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.protobuf.FileDescriptorSet)
                        return object;
                    var message = new $root.google.protobuf.FileDescriptorSet();
                    if (object.file) {
                        if (!Array.isArray(object.file))
                            throw TypeError(".google.protobuf.FileDescriptorSet.file: array expected");
                        message.file = [];
                        for (var i = 0; i < object.file.length; ++i) {
                            if (typeof object.file[i] !== "object")
                                throw TypeError(".google.protobuf.FileDescriptorSet.file: object expected");
                            message.file[i] = $root.google.protobuf.FileDescriptorProto.fromObject(object.file[i]);
                        }
                    }
                    return message;
                };
    
                /**
                 * Creates a plain object from a FileDescriptorSet message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.protobuf.FileDescriptorSet
                 * @static
                 * @param {google.protobuf.FileDescriptorSet} message FileDescriptorSet
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                FileDescriptorSet.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.arrays || options.defaults)
                        object.file = [];
                    if (message.file && message.file.length) {
                        object.file = [];
                        for (var j = 0; j < message.file.length; ++j)
                            object.file[j] = $root.google.protobuf.FileDescriptorProto.toObject(message.file[j], options);
                    }
                    return object;
                };
    
                /**
                 * Converts this FileDescriptorSet to JSON.
                 * @function toJSON
                 * @memberof google.protobuf.FileDescriptorSet
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                FileDescriptorSet.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for FileDescriptorSet
                 * @function getTypeUrl
                 * @memberof google.protobuf.FileDescriptorSet
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                FileDescriptorSet.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.protobuf.FileDescriptorSet";
                };
    
                return FileDescriptorSet;
            })();
    
            protobuf.FileDescriptorProto = (function() {
    
                /**
                 * Properties of a FileDescriptorProto.
                 * @memberof google.protobuf
                 * @interface IFileDescriptorProto
                 * @property {string|null} [name] FileDescriptorProto name
                 * @property {string|null} ["package"] FileDescriptorProto package
                 * @property {Array.<string>|null} [dependency] FileDescriptorProto dependency
                 * @property {Array.<number>|null} [publicDependency] FileDescriptorProto publicDependency
                 * @property {Array.<number>|null} [weakDependency] FileDescriptorProto weakDependency
                 * @property {Array.<google.protobuf.IDescriptorProto>|null} [messageType] FileDescriptorProto messageType
                 * @property {Array.<google.protobuf.IEnumDescriptorProto>|null} [enumType] FileDescriptorProto enumType
                 * @property {Array.<google.protobuf.IServiceDescriptorProto>|null} [service] FileDescriptorProto service
                 * @property {Array.<google.protobuf.IFieldDescriptorProto>|null} [extension] FileDescriptorProto extension
                 * @property {google.protobuf.IFileOptions|null} [options] FileDescriptorProto options
                 * @property {google.protobuf.ISourceCodeInfo|null} [sourceCodeInfo] FileDescriptorProto sourceCodeInfo
                 * @property {string|null} [syntax] FileDescriptorProto syntax
                 * @property {string|null} [edition] FileDescriptorProto edition
                 */
    
                /**
                 * Constructs a new FileDescriptorProto.
                 * @memberof google.protobuf
                 * @classdesc Represents a FileDescriptorProto.
                 * @implements IFileDescriptorProto
                 * @constructor
                 * @param {google.protobuf.IFileDescriptorProto=} [properties] Properties to set
                 */
                function FileDescriptorProto(properties) {
                    this.dependency = [];
                    this.publicDependency = [];
                    this.weakDependency = [];
                    this.messageType = [];
                    this.enumType = [];
                    this.service = [];
                    this.extension = [];
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * FileDescriptorProto name.
                 * @member {string} name
                 * @memberof google.protobuf.FileDescriptorProto
                 * @instance
                 */
                FileDescriptorProto.prototype.name = "";
    
                /**
                 * FileDescriptorProto package.
                 * @member {string} package
                 * @memberof google.protobuf.FileDescriptorProto
                 * @instance
                 */
                FileDescriptorProto.prototype["package"] = "";
    
                /**
                 * FileDescriptorProto dependency.
                 * @member {Array.<string>} dependency
                 * @memberof google.protobuf.FileDescriptorProto
                 * @instance
                 */
                FileDescriptorProto.prototype.dependency = $util.emptyArray;
    
                /**
                 * FileDescriptorProto publicDependency.
                 * @member {Array.<number>} publicDependency
                 * @memberof google.protobuf.FileDescriptorProto
                 * @instance
                 */
                FileDescriptorProto.prototype.publicDependency = $util.emptyArray;
    
                /**
                 * FileDescriptorProto weakDependency.
                 * @member {Array.<number>} weakDependency
                 * @memberof google.protobuf.FileDescriptorProto
                 * @instance
                 */
                FileDescriptorProto.prototype.weakDependency = $util.emptyArray;
    
                /**
                 * FileDescriptorProto messageType.
                 * @member {Array.<google.protobuf.IDescriptorProto>} messageType
                 * @memberof google.protobuf.FileDescriptorProto
                 * @instance
                 */
                FileDescriptorProto.prototype.messageType = $util.emptyArray;
    
                /**
                 * FileDescriptorProto enumType.
                 * @member {Array.<google.protobuf.IEnumDescriptorProto>} enumType
                 * @memberof google.protobuf.FileDescriptorProto
                 * @instance
                 */
                FileDescriptorProto.prototype.enumType = $util.emptyArray;
    
                /**
                 * FileDescriptorProto service.
                 * @member {Array.<google.protobuf.IServiceDescriptorProto>} service
                 * @memberof google.protobuf.FileDescriptorProto
                 * @instance
                 */
                FileDescriptorProto.prototype.service = $util.emptyArray;
    
                /**
                 * FileDescriptorProto extension.
                 * @member {Array.<google.protobuf.IFieldDescriptorProto>} extension
                 * @memberof google.protobuf.FileDescriptorProto
                 * @instance
                 */
                FileDescriptorProto.prototype.extension = $util.emptyArray;
    
                /**
                 * FileDescriptorProto options.
                 * @member {google.protobuf.IFileOptions|null|undefined} options
                 * @memberof google.protobuf.FileDescriptorProto
                 * @instance
                 */
                FileDescriptorProto.prototype.options = null;
    
                /**
                 * FileDescriptorProto sourceCodeInfo.
                 * @member {google.protobuf.ISourceCodeInfo|null|undefined} sourceCodeInfo
                 * @memberof google.protobuf.FileDescriptorProto
                 * @instance
                 */
                FileDescriptorProto.prototype.sourceCodeInfo = null;
    
                /**
                 * FileDescriptorProto syntax.
                 * @member {string} syntax
                 * @memberof google.protobuf.FileDescriptorProto
                 * @instance
                 */
                FileDescriptorProto.prototype.syntax = "";
    
                /**
                 * FileDescriptorProto edition.
                 * @member {string} edition
                 * @memberof google.protobuf.FileDescriptorProto
                 * @instance
                 */
                FileDescriptorProto.prototype.edition = "";
    
                /**
                 * Creates a new FileDescriptorProto instance using the specified properties.
                 * @function create
                 * @memberof google.protobuf.FileDescriptorProto
                 * @static
                 * @param {google.protobuf.IFileDescriptorProto=} [properties] Properties to set
                 * @returns {google.protobuf.FileDescriptorProto} FileDescriptorProto instance
                 */
                FileDescriptorProto.create = function create(properties) {
                    return new FileDescriptorProto(properties);
                };
    
                /**
                 * Encodes the specified FileDescriptorProto message. Does not implicitly {@link google.protobuf.FileDescriptorProto.verify|verify} messages.
                 * @function encode
                 * @memberof google.protobuf.FileDescriptorProto
                 * @static
                 * @param {google.protobuf.IFileDescriptorProto} message FileDescriptorProto message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                FileDescriptorProto.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                        writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                    if (message["package"] != null && Object.hasOwnProperty.call(message, "package"))
                        writer.uint32(/* id 2, wireType 2 =*/18).string(message["package"]);
                    if (message.dependency != null && message.dependency.length)
                        for (var i = 0; i < message.dependency.length; ++i)
                            writer.uint32(/* id 3, wireType 2 =*/26).string(message.dependency[i]);
                    if (message.messageType != null && message.messageType.length)
                        for (var i = 0; i < message.messageType.length; ++i)
                            $root.google.protobuf.DescriptorProto.encode(message.messageType[i], writer.uint32(/* id 4, wireType 2 =*/34).fork()).ldelim();
                    if (message.enumType != null && message.enumType.length)
                        for (var i = 0; i < message.enumType.length; ++i)
                            $root.google.protobuf.EnumDescriptorProto.encode(message.enumType[i], writer.uint32(/* id 5, wireType 2 =*/42).fork()).ldelim();
                    if (message.service != null && message.service.length)
                        for (var i = 0; i < message.service.length; ++i)
                            $root.google.protobuf.ServiceDescriptorProto.encode(message.service[i], writer.uint32(/* id 6, wireType 2 =*/50).fork()).ldelim();
                    if (message.extension != null && message.extension.length)
                        for (var i = 0; i < message.extension.length; ++i)
                            $root.google.protobuf.FieldDescriptorProto.encode(message.extension[i], writer.uint32(/* id 7, wireType 2 =*/58).fork()).ldelim();
                    if (message.options != null && Object.hasOwnProperty.call(message, "options"))
                        $root.google.protobuf.FileOptions.encode(message.options, writer.uint32(/* id 8, wireType 2 =*/66).fork()).ldelim();
                    if (message.sourceCodeInfo != null && Object.hasOwnProperty.call(message, "sourceCodeInfo"))
                        $root.google.protobuf.SourceCodeInfo.encode(message.sourceCodeInfo, writer.uint32(/* id 9, wireType 2 =*/74).fork()).ldelim();
                    if (message.publicDependency != null && message.publicDependency.length)
                        for (var i = 0; i < message.publicDependency.length; ++i)
                            writer.uint32(/* id 10, wireType 0 =*/80).int32(message.publicDependency[i]);
                    if (message.weakDependency != null && message.weakDependency.length)
                        for (var i = 0; i < message.weakDependency.length; ++i)
                            writer.uint32(/* id 11, wireType 0 =*/88).int32(message.weakDependency[i]);
                    if (message.syntax != null && Object.hasOwnProperty.call(message, "syntax"))
                        writer.uint32(/* id 12, wireType 2 =*/98).string(message.syntax);
                    if (message.edition != null && Object.hasOwnProperty.call(message, "edition"))
                        writer.uint32(/* id 13, wireType 2 =*/106).string(message.edition);
                    return writer;
                };
    
                /**
                 * Encodes the specified FileDescriptorProto message, length delimited. Does not implicitly {@link google.protobuf.FileDescriptorProto.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.protobuf.FileDescriptorProto
                 * @static
                 * @param {google.protobuf.IFileDescriptorProto} message FileDescriptorProto message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                FileDescriptorProto.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a FileDescriptorProto message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.protobuf.FileDescriptorProto
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.protobuf.FileDescriptorProto} FileDescriptorProto
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                FileDescriptorProto.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.FileDescriptorProto();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1: {
                                message.name = reader.string();
                                break;
                            }
                        case 2: {
                                message["package"] = reader.string();
                                break;
                            }
                        case 3: {
                                if (!(message.dependency && message.dependency.length))
                                    message.dependency = [];
                                message.dependency.push(reader.string());
                                break;
                            }
                        case 10: {
                                if (!(message.publicDependency && message.publicDependency.length))
                                    message.publicDependency = [];
                                if ((tag & 7) === 2) {
                                    var end2 = reader.uint32() + reader.pos;
                                    while (reader.pos < end2)
                                        message.publicDependency.push(reader.int32());
                                } else
                                    message.publicDependency.push(reader.int32());
                                break;
                            }
                        case 11: {
                                if (!(message.weakDependency && message.weakDependency.length))
                                    message.weakDependency = [];
                                if ((tag & 7) === 2) {
                                    var end2 = reader.uint32() + reader.pos;
                                    while (reader.pos < end2)
                                        message.weakDependency.push(reader.int32());
                                } else
                                    message.weakDependency.push(reader.int32());
                                break;
                            }
                        case 4: {
                                if (!(message.messageType && message.messageType.length))
                                    message.messageType = [];
                                message.messageType.push($root.google.protobuf.DescriptorProto.decode(reader, reader.uint32()));
                                break;
                            }
                        case 5: {
                                if (!(message.enumType && message.enumType.length))
                                    message.enumType = [];
                                message.enumType.push($root.google.protobuf.EnumDescriptorProto.decode(reader, reader.uint32()));
                                break;
                            }
                        case 6: {
                                if (!(message.service && message.service.length))
                                    message.service = [];
                                message.service.push($root.google.protobuf.ServiceDescriptorProto.decode(reader, reader.uint32()));
                                break;
                            }
                        case 7: {
                                if (!(message.extension && message.extension.length))
                                    message.extension = [];
                                message.extension.push($root.google.protobuf.FieldDescriptorProto.decode(reader, reader.uint32()));
                                break;
                            }
                        case 8: {
                                message.options = $root.google.protobuf.FileOptions.decode(reader, reader.uint32());
                                break;
                            }
                        case 9: {
                                message.sourceCodeInfo = $root.google.protobuf.SourceCodeInfo.decode(reader, reader.uint32());
                                break;
                            }
                        case 12: {
                                message.syntax = reader.string();
                                break;
                            }
                        case 13: {
                                message.edition = reader.string();
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a FileDescriptorProto message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.protobuf.FileDescriptorProto
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.protobuf.FileDescriptorProto} FileDescriptorProto
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                FileDescriptorProto.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a FileDescriptorProto message.
                 * @function verify
                 * @memberof google.protobuf.FileDescriptorProto
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                FileDescriptorProto.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.name != null && message.hasOwnProperty("name"))
                        if (!$util.isString(message.name))
                            return "name: string expected";
                    if (message["package"] != null && message.hasOwnProperty("package"))
                        if (!$util.isString(message["package"]))
                            return "package: string expected";
                    if (message.dependency != null && message.hasOwnProperty("dependency")) {
                        if (!Array.isArray(message.dependency))
                            return "dependency: array expected";
                        for (var i = 0; i < message.dependency.length; ++i)
                            if (!$util.isString(message.dependency[i]))
                                return "dependency: string[] expected";
                    }
                    if (message.publicDependency != null && message.hasOwnProperty("publicDependency")) {
                        if (!Array.isArray(message.publicDependency))
                            return "publicDependency: array expected";
                        for (var i = 0; i < message.publicDependency.length; ++i)
                            if (!$util.isInteger(message.publicDependency[i]))
                                return "publicDependency: integer[] expected";
                    }
                    if (message.weakDependency != null && message.hasOwnProperty("weakDependency")) {
                        if (!Array.isArray(message.weakDependency))
                            return "weakDependency: array expected";
                        for (var i = 0; i < message.weakDependency.length; ++i)
                            if (!$util.isInteger(message.weakDependency[i]))
                                return "weakDependency: integer[] expected";
                    }
                    if (message.messageType != null && message.hasOwnProperty("messageType")) {
                        if (!Array.isArray(message.messageType))
                            return "messageType: array expected";
                        for (var i = 0; i < message.messageType.length; ++i) {
                            var error = $root.google.protobuf.DescriptorProto.verify(message.messageType[i]);
                            if (error)
                                return "messageType." + error;
                        }
                    }
                    if (message.enumType != null && message.hasOwnProperty("enumType")) {
                        if (!Array.isArray(message.enumType))
                            return "enumType: array expected";
                        for (var i = 0; i < message.enumType.length; ++i) {
                            var error = $root.google.protobuf.EnumDescriptorProto.verify(message.enumType[i]);
                            if (error)
                                return "enumType." + error;
                        }
                    }
                    if (message.service != null && message.hasOwnProperty("service")) {
                        if (!Array.isArray(message.service))
                            return "service: array expected";
                        for (var i = 0; i < message.service.length; ++i) {
                            var error = $root.google.protobuf.ServiceDescriptorProto.verify(message.service[i]);
                            if (error)
                                return "service." + error;
                        }
                    }
                    if (message.extension != null && message.hasOwnProperty("extension")) {
                        if (!Array.isArray(message.extension))
                            return "extension: array expected";
                        for (var i = 0; i < message.extension.length; ++i) {
                            var error = $root.google.protobuf.FieldDescriptorProto.verify(message.extension[i]);
                            if (error)
                                return "extension." + error;
                        }
                    }
                    if (message.options != null && message.hasOwnProperty("options")) {
                        var error = $root.google.protobuf.FileOptions.verify(message.options);
                        if (error)
                            return "options." + error;
                    }
                    if (message.sourceCodeInfo != null && message.hasOwnProperty("sourceCodeInfo")) {
                        var error = $root.google.protobuf.SourceCodeInfo.verify(message.sourceCodeInfo);
                        if (error)
                            return "sourceCodeInfo." + error;
                    }
                    if (message.syntax != null && message.hasOwnProperty("syntax"))
                        if (!$util.isString(message.syntax))
                            return "syntax: string expected";
                    if (message.edition != null && message.hasOwnProperty("edition"))
                        if (!$util.isString(message.edition))
                            return "edition: string expected";
                    return null;
                };
    
                /**
                 * Creates a FileDescriptorProto message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.protobuf.FileDescriptorProto
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.protobuf.FileDescriptorProto} FileDescriptorProto
                 */
                FileDescriptorProto.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.protobuf.FileDescriptorProto)
                        return object;
                    var message = new $root.google.protobuf.FileDescriptorProto();
                    if (object.name != null)
                        message.name = String(object.name);
                    if (object["package"] != null)
                        message["package"] = String(object["package"]);
                    if (object.dependency) {
                        if (!Array.isArray(object.dependency))
                            throw TypeError(".google.protobuf.FileDescriptorProto.dependency: array expected");
                        message.dependency = [];
                        for (var i = 0; i < object.dependency.length; ++i)
                            message.dependency[i] = String(object.dependency[i]);
                    }
                    if (object.publicDependency) {
                        if (!Array.isArray(object.publicDependency))
                            throw TypeError(".google.protobuf.FileDescriptorProto.publicDependency: array expected");
                        message.publicDependency = [];
                        for (var i = 0; i < object.publicDependency.length; ++i)
                            message.publicDependency[i] = object.publicDependency[i] | 0;
                    }
                    if (object.weakDependency) {
                        if (!Array.isArray(object.weakDependency))
                            throw TypeError(".google.protobuf.FileDescriptorProto.weakDependency: array expected");
                        message.weakDependency = [];
                        for (var i = 0; i < object.weakDependency.length; ++i)
                            message.weakDependency[i] = object.weakDependency[i] | 0;
                    }
                    if (object.messageType) {
                        if (!Array.isArray(object.messageType))
                            throw TypeError(".google.protobuf.FileDescriptorProto.messageType: array expected");
                        message.messageType = [];
                        for (var i = 0; i < object.messageType.length; ++i) {
                            if (typeof object.messageType[i] !== "object")
                                throw TypeError(".google.protobuf.FileDescriptorProto.messageType: object expected");
                            message.messageType[i] = $root.google.protobuf.DescriptorProto.fromObject(object.messageType[i]);
                        }
                    }
                    if (object.enumType) {
                        if (!Array.isArray(object.enumType))
                            throw TypeError(".google.protobuf.FileDescriptorProto.enumType: array expected");
                        message.enumType = [];
                        for (var i = 0; i < object.enumType.length; ++i) {
                            if (typeof object.enumType[i] !== "object")
                                throw TypeError(".google.protobuf.FileDescriptorProto.enumType: object expected");
                            message.enumType[i] = $root.google.protobuf.EnumDescriptorProto.fromObject(object.enumType[i]);
                        }
                    }
                    if (object.service) {
                        if (!Array.isArray(object.service))
                            throw TypeError(".google.protobuf.FileDescriptorProto.service: array expected");
                        message.service = [];
                        for (var i = 0; i < object.service.length; ++i) {
                            if (typeof object.service[i] !== "object")
                                throw TypeError(".google.protobuf.FileDescriptorProto.service: object expected");
                            message.service[i] = $root.google.protobuf.ServiceDescriptorProto.fromObject(object.service[i]);
                        }
                    }
                    if (object.extension) {
                        if (!Array.isArray(object.extension))
                            throw TypeError(".google.protobuf.FileDescriptorProto.extension: array expected");
                        message.extension = [];
                        for (var i = 0; i < object.extension.length; ++i) {
                            if (typeof object.extension[i] !== "object")
                                throw TypeError(".google.protobuf.FileDescriptorProto.extension: object expected");
                            message.extension[i] = $root.google.protobuf.FieldDescriptorProto.fromObject(object.extension[i]);
                        }
                    }
                    if (object.options != null) {
                        if (typeof object.options !== "object")
                            throw TypeError(".google.protobuf.FileDescriptorProto.options: object expected");
                        message.options = $root.google.protobuf.FileOptions.fromObject(object.options);
                    }
                    if (object.sourceCodeInfo != null) {
                        if (typeof object.sourceCodeInfo !== "object")
                            throw TypeError(".google.protobuf.FileDescriptorProto.sourceCodeInfo: object expected");
                        message.sourceCodeInfo = $root.google.protobuf.SourceCodeInfo.fromObject(object.sourceCodeInfo);
                    }
                    if (object.syntax != null)
                        message.syntax = String(object.syntax);
                    if (object.edition != null)
                        message.edition = String(object.edition);
                    return message;
                };
    
                /**
                 * Creates a plain object from a FileDescriptorProto message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.protobuf.FileDescriptorProto
                 * @static
                 * @param {google.protobuf.FileDescriptorProto} message FileDescriptorProto
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                FileDescriptorProto.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.arrays || options.defaults) {
                        object.dependency = [];
                        object.messageType = [];
                        object.enumType = [];
                        object.service = [];
                        object.extension = [];
                        object.publicDependency = [];
                        object.weakDependency = [];
                    }
                    if (options.defaults) {
                        object.name = "";
                        object["package"] = "";
                        object.options = null;
                        object.sourceCodeInfo = null;
                        object.syntax = "";
                        object.edition = "";
                    }
                    if (message.name != null && message.hasOwnProperty("name"))
                        object.name = message.name;
                    if (message["package"] != null && message.hasOwnProperty("package"))
                        object["package"] = message["package"];
                    if (message.dependency && message.dependency.length) {
                        object.dependency = [];
                        for (var j = 0; j < message.dependency.length; ++j)
                            object.dependency[j] = message.dependency[j];
                    }
                    if (message.messageType && message.messageType.length) {
                        object.messageType = [];
                        for (var j = 0; j < message.messageType.length; ++j)
                            object.messageType[j] = $root.google.protobuf.DescriptorProto.toObject(message.messageType[j], options);
                    }
                    if (message.enumType && message.enumType.length) {
                        object.enumType = [];
                        for (var j = 0; j < message.enumType.length; ++j)
                            object.enumType[j] = $root.google.protobuf.EnumDescriptorProto.toObject(message.enumType[j], options);
                    }
                    if (message.service && message.service.length) {
                        object.service = [];
                        for (var j = 0; j < message.service.length; ++j)
                            object.service[j] = $root.google.protobuf.ServiceDescriptorProto.toObject(message.service[j], options);
                    }
                    if (message.extension && message.extension.length) {
                        object.extension = [];
                        for (var j = 0; j < message.extension.length; ++j)
                            object.extension[j] = $root.google.protobuf.FieldDescriptorProto.toObject(message.extension[j], options);
                    }
                    if (message.options != null && message.hasOwnProperty("options"))
                        object.options = $root.google.protobuf.FileOptions.toObject(message.options, options);
                    if (message.sourceCodeInfo != null && message.hasOwnProperty("sourceCodeInfo"))
                        object.sourceCodeInfo = $root.google.protobuf.SourceCodeInfo.toObject(message.sourceCodeInfo, options);
                    if (message.publicDependency && message.publicDependency.length) {
                        object.publicDependency = [];
                        for (var j = 0; j < message.publicDependency.length; ++j)
                            object.publicDependency[j] = message.publicDependency[j];
                    }
                    if (message.weakDependency && message.weakDependency.length) {
                        object.weakDependency = [];
                        for (var j = 0; j < message.weakDependency.length; ++j)
                            object.weakDependency[j] = message.weakDependency[j];
                    }
                    if (message.syntax != null && message.hasOwnProperty("syntax"))
                        object.syntax = message.syntax;
                    if (message.edition != null && message.hasOwnProperty("edition"))
                        object.edition = message.edition;
                    return object;
                };
    
                /**
                 * Converts this FileDescriptorProto to JSON.
                 * @function toJSON
                 * @memberof google.protobuf.FileDescriptorProto
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                FileDescriptorProto.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for FileDescriptorProto
                 * @function getTypeUrl
                 * @memberof google.protobuf.FileDescriptorProto
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                FileDescriptorProto.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.protobuf.FileDescriptorProto";
                };
    
                return FileDescriptorProto;
            })();
    
            protobuf.DescriptorProto = (function() {
    
                /**
                 * Properties of a DescriptorProto.
                 * @memberof google.protobuf
                 * @interface IDescriptorProto
                 * @property {string|null} [name] DescriptorProto name
                 * @property {Array.<google.protobuf.IFieldDescriptorProto>|null} [field] DescriptorProto field
                 * @property {Array.<google.protobuf.IFieldDescriptorProto>|null} [extension] DescriptorProto extension
                 * @property {Array.<google.protobuf.IDescriptorProto>|null} [nestedType] DescriptorProto nestedType
                 * @property {Array.<google.protobuf.IEnumDescriptorProto>|null} [enumType] DescriptorProto enumType
                 * @property {Array.<google.protobuf.DescriptorProto.IExtensionRange>|null} [extensionRange] DescriptorProto extensionRange
                 * @property {Array.<google.protobuf.IOneofDescriptorProto>|null} [oneofDecl] DescriptorProto oneofDecl
                 * @property {google.protobuf.IMessageOptions|null} [options] DescriptorProto options
                 * @property {Array.<google.protobuf.DescriptorProto.IReservedRange>|null} [reservedRange] DescriptorProto reservedRange
                 * @property {Array.<string>|null} [reservedName] DescriptorProto reservedName
                 */
    
                /**
                 * Constructs a new DescriptorProto.
                 * @memberof google.protobuf
                 * @classdesc Represents a DescriptorProto.
                 * @implements IDescriptorProto
                 * @constructor
                 * @param {google.protobuf.IDescriptorProto=} [properties] Properties to set
                 */
                function DescriptorProto(properties) {
                    this.field = [];
                    this.extension = [];
                    this.nestedType = [];
                    this.enumType = [];
                    this.extensionRange = [];
                    this.oneofDecl = [];
                    this.reservedRange = [];
                    this.reservedName = [];
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * DescriptorProto name.
                 * @member {string} name
                 * @memberof google.protobuf.DescriptorProto
                 * @instance
                 */
                DescriptorProto.prototype.name = "";
    
                /**
                 * DescriptorProto field.
                 * @member {Array.<google.protobuf.IFieldDescriptorProto>} field
                 * @memberof google.protobuf.DescriptorProto
                 * @instance
                 */
                DescriptorProto.prototype.field = $util.emptyArray;
    
                /**
                 * DescriptorProto extension.
                 * @member {Array.<google.protobuf.IFieldDescriptorProto>} extension
                 * @memberof google.protobuf.DescriptorProto
                 * @instance
                 */
                DescriptorProto.prototype.extension = $util.emptyArray;
    
                /**
                 * DescriptorProto nestedType.
                 * @member {Array.<google.protobuf.IDescriptorProto>} nestedType
                 * @memberof google.protobuf.DescriptorProto
                 * @instance
                 */
                DescriptorProto.prototype.nestedType = $util.emptyArray;
    
                /**
                 * DescriptorProto enumType.
                 * @member {Array.<google.protobuf.IEnumDescriptorProto>} enumType
                 * @memberof google.protobuf.DescriptorProto
                 * @instance
                 */
                DescriptorProto.prototype.enumType = $util.emptyArray;
    
                /**
                 * DescriptorProto extensionRange.
                 * @member {Array.<google.protobuf.DescriptorProto.IExtensionRange>} extensionRange
                 * @memberof google.protobuf.DescriptorProto
                 * @instance
                 */
                DescriptorProto.prototype.extensionRange = $util.emptyArray;
    
                /**
                 * DescriptorProto oneofDecl.
                 * @member {Array.<google.protobuf.IOneofDescriptorProto>} oneofDecl
                 * @memberof google.protobuf.DescriptorProto
                 * @instance
                 */
                DescriptorProto.prototype.oneofDecl = $util.emptyArray;
    
                /**
                 * DescriptorProto options.
                 * @member {google.protobuf.IMessageOptions|null|undefined} options
                 * @memberof google.protobuf.DescriptorProto
                 * @instance
                 */
                DescriptorProto.prototype.options = null;
    
                /**
                 * DescriptorProto reservedRange.
                 * @member {Array.<google.protobuf.DescriptorProto.IReservedRange>} reservedRange
                 * @memberof google.protobuf.DescriptorProto
                 * @instance
                 */
                DescriptorProto.prototype.reservedRange = $util.emptyArray;
    
                /**
                 * DescriptorProto reservedName.
                 * @member {Array.<string>} reservedName
                 * @memberof google.protobuf.DescriptorProto
                 * @instance
                 */
                DescriptorProto.prototype.reservedName = $util.emptyArray;
    
                /**
                 * Creates a new DescriptorProto instance using the specified properties.
                 * @function create
                 * @memberof google.protobuf.DescriptorProto
                 * @static
                 * @param {google.protobuf.IDescriptorProto=} [properties] Properties to set
                 * @returns {google.protobuf.DescriptorProto} DescriptorProto instance
                 */
                DescriptorProto.create = function create(properties) {
                    return new DescriptorProto(properties);
                };
    
                /**
                 * Encodes the specified DescriptorProto message. Does not implicitly {@link google.protobuf.DescriptorProto.verify|verify} messages.
                 * @function encode
                 * @memberof google.protobuf.DescriptorProto
                 * @static
                 * @param {google.protobuf.IDescriptorProto} message DescriptorProto message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                DescriptorProto.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                        writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                    if (message.field != null && message.field.length)
                        for (var i = 0; i < message.field.length; ++i)
                            $root.google.protobuf.FieldDescriptorProto.encode(message.field[i], writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                    if (message.nestedType != null && message.nestedType.length)
                        for (var i = 0; i < message.nestedType.length; ++i)
                            $root.google.protobuf.DescriptorProto.encode(message.nestedType[i], writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();
                    if (message.enumType != null && message.enumType.length)
                        for (var i = 0; i < message.enumType.length; ++i)
                            $root.google.protobuf.EnumDescriptorProto.encode(message.enumType[i], writer.uint32(/* id 4, wireType 2 =*/34).fork()).ldelim();
                    if (message.extensionRange != null && message.extensionRange.length)
                        for (var i = 0; i < message.extensionRange.length; ++i)
                            $root.google.protobuf.DescriptorProto.ExtensionRange.encode(message.extensionRange[i], writer.uint32(/* id 5, wireType 2 =*/42).fork()).ldelim();
                    if (message.extension != null && message.extension.length)
                        for (var i = 0; i < message.extension.length; ++i)
                            $root.google.protobuf.FieldDescriptorProto.encode(message.extension[i], writer.uint32(/* id 6, wireType 2 =*/50).fork()).ldelim();
                    if (message.options != null && Object.hasOwnProperty.call(message, "options"))
                        $root.google.protobuf.MessageOptions.encode(message.options, writer.uint32(/* id 7, wireType 2 =*/58).fork()).ldelim();
                    if (message.oneofDecl != null && message.oneofDecl.length)
                        for (var i = 0; i < message.oneofDecl.length; ++i)
                            $root.google.protobuf.OneofDescriptorProto.encode(message.oneofDecl[i], writer.uint32(/* id 8, wireType 2 =*/66).fork()).ldelim();
                    if (message.reservedRange != null && message.reservedRange.length)
                        for (var i = 0; i < message.reservedRange.length; ++i)
                            $root.google.protobuf.DescriptorProto.ReservedRange.encode(message.reservedRange[i], writer.uint32(/* id 9, wireType 2 =*/74).fork()).ldelim();
                    if (message.reservedName != null && message.reservedName.length)
                        for (var i = 0; i < message.reservedName.length; ++i)
                            writer.uint32(/* id 10, wireType 2 =*/82).string(message.reservedName[i]);
                    return writer;
                };
    
                /**
                 * Encodes the specified DescriptorProto message, length delimited. Does not implicitly {@link google.protobuf.DescriptorProto.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.protobuf.DescriptorProto
                 * @static
                 * @param {google.protobuf.IDescriptorProto} message DescriptorProto message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                DescriptorProto.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a DescriptorProto message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.protobuf.DescriptorProto
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.protobuf.DescriptorProto} DescriptorProto
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                DescriptorProto.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.DescriptorProto();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1: {
                                message.name = reader.string();
                                break;
                            }
                        case 2: {
                                if (!(message.field && message.field.length))
                                    message.field = [];
                                message.field.push($root.google.protobuf.FieldDescriptorProto.decode(reader, reader.uint32()));
                                break;
                            }
                        case 6: {
                                if (!(message.extension && message.extension.length))
                                    message.extension = [];
                                message.extension.push($root.google.protobuf.FieldDescriptorProto.decode(reader, reader.uint32()));
                                break;
                            }
                        case 3: {
                                if (!(message.nestedType && message.nestedType.length))
                                    message.nestedType = [];
                                message.nestedType.push($root.google.protobuf.DescriptorProto.decode(reader, reader.uint32()));
                                break;
                            }
                        case 4: {
                                if (!(message.enumType && message.enumType.length))
                                    message.enumType = [];
                                message.enumType.push($root.google.protobuf.EnumDescriptorProto.decode(reader, reader.uint32()));
                                break;
                            }
                        case 5: {
                                if (!(message.extensionRange && message.extensionRange.length))
                                    message.extensionRange = [];
                                message.extensionRange.push($root.google.protobuf.DescriptorProto.ExtensionRange.decode(reader, reader.uint32()));
                                break;
                            }
                        case 8: {
                                if (!(message.oneofDecl && message.oneofDecl.length))
                                    message.oneofDecl = [];
                                message.oneofDecl.push($root.google.protobuf.OneofDescriptorProto.decode(reader, reader.uint32()));
                                break;
                            }
                        case 7: {
                                message.options = $root.google.protobuf.MessageOptions.decode(reader, reader.uint32());
                                break;
                            }
                        case 9: {
                                if (!(message.reservedRange && message.reservedRange.length))
                                    message.reservedRange = [];
                                message.reservedRange.push($root.google.protobuf.DescriptorProto.ReservedRange.decode(reader, reader.uint32()));
                                break;
                            }
                        case 10: {
                                if (!(message.reservedName && message.reservedName.length))
                                    message.reservedName = [];
                                message.reservedName.push(reader.string());
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a DescriptorProto message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.protobuf.DescriptorProto
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.protobuf.DescriptorProto} DescriptorProto
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                DescriptorProto.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a DescriptorProto message.
                 * @function verify
                 * @memberof google.protobuf.DescriptorProto
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                DescriptorProto.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.name != null && message.hasOwnProperty("name"))
                        if (!$util.isString(message.name))
                            return "name: string expected";
                    if (message.field != null && message.hasOwnProperty("field")) {
                        if (!Array.isArray(message.field))
                            return "field: array expected";
                        for (var i = 0; i < message.field.length; ++i) {
                            var error = $root.google.protobuf.FieldDescriptorProto.verify(message.field[i]);
                            if (error)
                                return "field." + error;
                        }
                    }
                    if (message.extension != null && message.hasOwnProperty("extension")) {
                        if (!Array.isArray(message.extension))
                            return "extension: array expected";
                        for (var i = 0; i < message.extension.length; ++i) {
                            var error = $root.google.protobuf.FieldDescriptorProto.verify(message.extension[i]);
                            if (error)
                                return "extension." + error;
                        }
                    }
                    if (message.nestedType != null && message.hasOwnProperty("nestedType")) {
                        if (!Array.isArray(message.nestedType))
                            return "nestedType: array expected";
                        for (var i = 0; i < message.nestedType.length; ++i) {
                            var error = $root.google.protobuf.DescriptorProto.verify(message.nestedType[i]);
                            if (error)
                                return "nestedType." + error;
                        }
                    }
                    if (message.enumType != null && message.hasOwnProperty("enumType")) {
                        if (!Array.isArray(message.enumType))
                            return "enumType: array expected";
                        for (var i = 0; i < message.enumType.length; ++i) {
                            var error = $root.google.protobuf.EnumDescriptorProto.verify(message.enumType[i]);
                            if (error)
                                return "enumType." + error;
                        }
                    }
                    if (message.extensionRange != null && message.hasOwnProperty("extensionRange")) {
                        if (!Array.isArray(message.extensionRange))
                            return "extensionRange: array expected";
                        for (var i = 0; i < message.extensionRange.length; ++i) {
                            var error = $root.google.protobuf.DescriptorProto.ExtensionRange.verify(message.extensionRange[i]);
                            if (error)
                                return "extensionRange." + error;
                        }
                    }
                    if (message.oneofDecl != null && message.hasOwnProperty("oneofDecl")) {
                        if (!Array.isArray(message.oneofDecl))
                            return "oneofDecl: array expected";
                        for (var i = 0; i < message.oneofDecl.length; ++i) {
                            var error = $root.google.protobuf.OneofDescriptorProto.verify(message.oneofDecl[i]);
                            if (error)
                                return "oneofDecl." + error;
                        }
                    }
                    if (message.options != null && message.hasOwnProperty("options")) {
                        var error = $root.google.protobuf.MessageOptions.verify(message.options);
                        if (error)
                            return "options." + error;
                    }
                    if (message.reservedRange != null && message.hasOwnProperty("reservedRange")) {
                        if (!Array.isArray(message.reservedRange))
                            return "reservedRange: array expected";
                        for (var i = 0; i < message.reservedRange.length; ++i) {
                            var error = $root.google.protobuf.DescriptorProto.ReservedRange.verify(message.reservedRange[i]);
                            if (error)
                                return "reservedRange." + error;
                        }
                    }
                    if (message.reservedName != null && message.hasOwnProperty("reservedName")) {
                        if (!Array.isArray(message.reservedName))
                            return "reservedName: array expected";
                        for (var i = 0; i < message.reservedName.length; ++i)
                            if (!$util.isString(message.reservedName[i]))
                                return "reservedName: string[] expected";
                    }
                    return null;
                };
    
                /**
                 * Creates a DescriptorProto message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.protobuf.DescriptorProto
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.protobuf.DescriptorProto} DescriptorProto
                 */
                DescriptorProto.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.protobuf.DescriptorProto)
                        return object;
                    var message = new $root.google.protobuf.DescriptorProto();
                    if (object.name != null)
                        message.name = String(object.name);
                    if (object.field) {
                        if (!Array.isArray(object.field))
                            throw TypeError(".google.protobuf.DescriptorProto.field: array expected");
                        message.field = [];
                        for (var i = 0; i < object.field.length; ++i) {
                            if (typeof object.field[i] !== "object")
                                throw TypeError(".google.protobuf.DescriptorProto.field: object expected");
                            message.field[i] = $root.google.protobuf.FieldDescriptorProto.fromObject(object.field[i]);
                        }
                    }
                    if (object.extension) {
                        if (!Array.isArray(object.extension))
                            throw TypeError(".google.protobuf.DescriptorProto.extension: array expected");
                        message.extension = [];
                        for (var i = 0; i < object.extension.length; ++i) {
                            if (typeof object.extension[i] !== "object")
                                throw TypeError(".google.protobuf.DescriptorProto.extension: object expected");
                            message.extension[i] = $root.google.protobuf.FieldDescriptorProto.fromObject(object.extension[i]);
                        }
                    }
                    if (object.nestedType) {
                        if (!Array.isArray(object.nestedType))
                            throw TypeError(".google.protobuf.DescriptorProto.nestedType: array expected");
                        message.nestedType = [];
                        for (var i = 0; i < object.nestedType.length; ++i) {
                            if (typeof object.nestedType[i] !== "object")
                                throw TypeError(".google.protobuf.DescriptorProto.nestedType: object expected");
                            message.nestedType[i] = $root.google.protobuf.DescriptorProto.fromObject(object.nestedType[i]);
                        }
                    }
                    if (object.enumType) {
                        if (!Array.isArray(object.enumType))
                            throw TypeError(".google.protobuf.DescriptorProto.enumType: array expected");
                        message.enumType = [];
                        for (var i = 0; i < object.enumType.length; ++i) {
                            if (typeof object.enumType[i] !== "object")
                                throw TypeError(".google.protobuf.DescriptorProto.enumType: object expected");
                            message.enumType[i] = $root.google.protobuf.EnumDescriptorProto.fromObject(object.enumType[i]);
                        }
                    }
                    if (object.extensionRange) {
                        if (!Array.isArray(object.extensionRange))
                            throw TypeError(".google.protobuf.DescriptorProto.extensionRange: array expected");
                        message.extensionRange = [];
                        for (var i = 0; i < object.extensionRange.length; ++i) {
                            if (typeof object.extensionRange[i] !== "object")
                                throw TypeError(".google.protobuf.DescriptorProto.extensionRange: object expected");
                            message.extensionRange[i] = $root.google.protobuf.DescriptorProto.ExtensionRange.fromObject(object.extensionRange[i]);
                        }
                    }
                    if (object.oneofDecl) {
                        if (!Array.isArray(object.oneofDecl))
                            throw TypeError(".google.protobuf.DescriptorProto.oneofDecl: array expected");
                        message.oneofDecl = [];
                        for (var i = 0; i < object.oneofDecl.length; ++i) {
                            if (typeof object.oneofDecl[i] !== "object")
                                throw TypeError(".google.protobuf.DescriptorProto.oneofDecl: object expected");
                            message.oneofDecl[i] = $root.google.protobuf.OneofDescriptorProto.fromObject(object.oneofDecl[i]);
                        }
                    }
                    if (object.options != null) {
                        if (typeof object.options !== "object")
                            throw TypeError(".google.protobuf.DescriptorProto.options: object expected");
                        message.options = $root.google.protobuf.MessageOptions.fromObject(object.options);
                    }
                    if (object.reservedRange) {
                        if (!Array.isArray(object.reservedRange))
                            throw TypeError(".google.protobuf.DescriptorProto.reservedRange: array expected");
                        message.reservedRange = [];
                        for (var i = 0; i < object.reservedRange.length; ++i) {
                            if (typeof object.reservedRange[i] !== "object")
                                throw TypeError(".google.protobuf.DescriptorProto.reservedRange: object expected");
                            message.reservedRange[i] = $root.google.protobuf.DescriptorProto.ReservedRange.fromObject(object.reservedRange[i]);
                        }
                    }
                    if (object.reservedName) {
                        if (!Array.isArray(object.reservedName))
                            throw TypeError(".google.protobuf.DescriptorProto.reservedName: array expected");
                        message.reservedName = [];
                        for (var i = 0; i < object.reservedName.length; ++i)
                            message.reservedName[i] = String(object.reservedName[i]);
                    }
                    return message;
                };
    
                /**
                 * Creates a plain object from a DescriptorProto message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.protobuf.DescriptorProto
                 * @static
                 * @param {google.protobuf.DescriptorProto} message DescriptorProto
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                DescriptorProto.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.arrays || options.defaults) {
                        object.field = [];
                        object.nestedType = [];
                        object.enumType = [];
                        object.extensionRange = [];
                        object.extension = [];
                        object.oneofDecl = [];
                        object.reservedRange = [];
                        object.reservedName = [];
                    }
                    if (options.defaults) {
                        object.name = "";
                        object.options = null;
                    }
                    if (message.name != null && message.hasOwnProperty("name"))
                        object.name = message.name;
                    if (message.field && message.field.length) {
                        object.field = [];
                        for (var j = 0; j < message.field.length; ++j)
                            object.field[j] = $root.google.protobuf.FieldDescriptorProto.toObject(message.field[j], options);
                    }
                    if (message.nestedType && message.nestedType.length) {
                        object.nestedType = [];
                        for (var j = 0; j < message.nestedType.length; ++j)
                            object.nestedType[j] = $root.google.protobuf.DescriptorProto.toObject(message.nestedType[j], options);
                    }
                    if (message.enumType && message.enumType.length) {
                        object.enumType = [];
                        for (var j = 0; j < message.enumType.length; ++j)
                            object.enumType[j] = $root.google.protobuf.EnumDescriptorProto.toObject(message.enumType[j], options);
                    }
                    if (message.extensionRange && message.extensionRange.length) {
                        object.extensionRange = [];
                        for (var j = 0; j < message.extensionRange.length; ++j)
                            object.extensionRange[j] = $root.google.protobuf.DescriptorProto.ExtensionRange.toObject(message.extensionRange[j], options);
                    }
                    if (message.extension && message.extension.length) {
                        object.extension = [];
                        for (var j = 0; j < message.extension.length; ++j)
                            object.extension[j] = $root.google.protobuf.FieldDescriptorProto.toObject(message.extension[j], options);
                    }
                    if (message.options != null && message.hasOwnProperty("options"))
                        object.options = $root.google.protobuf.MessageOptions.toObject(message.options, options);
                    if (message.oneofDecl && message.oneofDecl.length) {
                        object.oneofDecl = [];
                        for (var j = 0; j < message.oneofDecl.length; ++j)
                            object.oneofDecl[j] = $root.google.protobuf.OneofDescriptorProto.toObject(message.oneofDecl[j], options);
                    }
                    if (message.reservedRange && message.reservedRange.length) {
                        object.reservedRange = [];
                        for (var j = 0; j < message.reservedRange.length; ++j)
                            object.reservedRange[j] = $root.google.protobuf.DescriptorProto.ReservedRange.toObject(message.reservedRange[j], options);
                    }
                    if (message.reservedName && message.reservedName.length) {
                        object.reservedName = [];
                        for (var j = 0; j < message.reservedName.length; ++j)
                            object.reservedName[j] = message.reservedName[j];
                    }
                    return object;
                };
    
                /**
                 * Converts this DescriptorProto to JSON.
                 * @function toJSON
                 * @memberof google.protobuf.DescriptorProto
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                DescriptorProto.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for DescriptorProto
                 * @function getTypeUrl
                 * @memberof google.protobuf.DescriptorProto
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                DescriptorProto.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.protobuf.DescriptorProto";
                };
    
                DescriptorProto.ExtensionRange = (function() {
    
                    /**
                     * Properties of an ExtensionRange.
                     * @memberof google.protobuf.DescriptorProto
                     * @interface IExtensionRange
                     * @property {number|null} [start] ExtensionRange start
                     * @property {number|null} [end] ExtensionRange end
                     * @property {google.protobuf.IExtensionRangeOptions|null} [options] ExtensionRange options
                     */
    
                    /**
                     * Constructs a new ExtensionRange.
                     * @memberof google.protobuf.DescriptorProto
                     * @classdesc Represents an ExtensionRange.
                     * @implements IExtensionRange
                     * @constructor
                     * @param {google.protobuf.DescriptorProto.IExtensionRange=} [properties] Properties to set
                     */
                    function ExtensionRange(properties) {
                        if (properties)
                            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                if (properties[keys[i]] != null)
                                    this[keys[i]] = properties[keys[i]];
                    }
    
                    /**
                     * ExtensionRange start.
                     * @member {number} start
                     * @memberof google.protobuf.DescriptorProto.ExtensionRange
                     * @instance
                     */
                    ExtensionRange.prototype.start = 0;
    
                    /**
                     * ExtensionRange end.
                     * @member {number} end
                     * @memberof google.protobuf.DescriptorProto.ExtensionRange
                     * @instance
                     */
                    ExtensionRange.prototype.end = 0;
    
                    /**
                     * ExtensionRange options.
                     * @member {google.protobuf.IExtensionRangeOptions|null|undefined} options
                     * @memberof google.protobuf.DescriptorProto.ExtensionRange
                     * @instance
                     */
                    ExtensionRange.prototype.options = null;
    
                    /**
                     * Creates a new ExtensionRange instance using the specified properties.
                     * @function create
                     * @memberof google.protobuf.DescriptorProto.ExtensionRange
                     * @static
                     * @param {google.protobuf.DescriptorProto.IExtensionRange=} [properties] Properties to set
                     * @returns {google.protobuf.DescriptorProto.ExtensionRange} ExtensionRange instance
                     */
                    ExtensionRange.create = function create(properties) {
                        return new ExtensionRange(properties);
                    };
    
                    /**
                     * Encodes the specified ExtensionRange message. Does not implicitly {@link google.protobuf.DescriptorProto.ExtensionRange.verify|verify} messages.
                     * @function encode
                     * @memberof google.protobuf.DescriptorProto.ExtensionRange
                     * @static
                     * @param {google.protobuf.DescriptorProto.IExtensionRange} message ExtensionRange message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    ExtensionRange.encode = function encode(message, writer) {
                        if (!writer)
                            writer = $Writer.create();
                        if (message.start != null && Object.hasOwnProperty.call(message, "start"))
                            writer.uint32(/* id 1, wireType 0 =*/8).int32(message.start);
                        if (message.end != null && Object.hasOwnProperty.call(message, "end"))
                            writer.uint32(/* id 2, wireType 0 =*/16).int32(message.end);
                        if (message.options != null && Object.hasOwnProperty.call(message, "options"))
                            $root.google.protobuf.ExtensionRangeOptions.encode(message.options, writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();
                        return writer;
                    };
    
                    /**
                     * Encodes the specified ExtensionRange message, length delimited. Does not implicitly {@link google.protobuf.DescriptorProto.ExtensionRange.verify|verify} messages.
                     * @function encodeDelimited
                     * @memberof google.protobuf.DescriptorProto.ExtensionRange
                     * @static
                     * @param {google.protobuf.DescriptorProto.IExtensionRange} message ExtensionRange message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    ExtensionRange.encodeDelimited = function encodeDelimited(message, writer) {
                        return this.encode(message, writer).ldelim();
                    };
    
                    /**
                     * Decodes an ExtensionRange message from the specified reader or buffer.
                     * @function decode
                     * @memberof google.protobuf.DescriptorProto.ExtensionRange
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @param {number} [length] Message length if known beforehand
                     * @returns {google.protobuf.DescriptorProto.ExtensionRange} ExtensionRange
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    ExtensionRange.decode = function decode(reader, length) {
                        if (!(reader instanceof $Reader))
                            reader = $Reader.create(reader);
                        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.DescriptorProto.ExtensionRange();
                        while (reader.pos < end) {
                            var tag = reader.uint32();
                            switch (tag >>> 3) {
                            case 1: {
                                    message.start = reader.int32();
                                    break;
                                }
                            case 2: {
                                    message.end = reader.int32();
                                    break;
                                }
                            case 3: {
                                    message.options = $root.google.protobuf.ExtensionRangeOptions.decode(reader, reader.uint32());
                                    break;
                                }
                            default:
                                reader.skipType(tag & 7);
                                break;
                            }
                        }
                        return message;
                    };
    
                    /**
                     * Decodes an ExtensionRange message from the specified reader or buffer, length delimited.
                     * @function decodeDelimited
                     * @memberof google.protobuf.DescriptorProto.ExtensionRange
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @returns {google.protobuf.DescriptorProto.ExtensionRange} ExtensionRange
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    ExtensionRange.decodeDelimited = function decodeDelimited(reader) {
                        if (!(reader instanceof $Reader))
                            reader = new $Reader(reader);
                        return this.decode(reader, reader.uint32());
                    };
    
                    /**
                     * Verifies an ExtensionRange message.
                     * @function verify
                     * @memberof google.protobuf.DescriptorProto.ExtensionRange
                     * @static
                     * @param {Object.<string,*>} message Plain object to verify
                     * @returns {string|null} `null` if valid, otherwise the reason why it is not
                     */
                    ExtensionRange.verify = function verify(message) {
                        if (typeof message !== "object" || message === null)
                            return "object expected";
                        if (message.start != null && message.hasOwnProperty("start"))
                            if (!$util.isInteger(message.start))
                                return "start: integer expected";
                        if (message.end != null && message.hasOwnProperty("end"))
                            if (!$util.isInteger(message.end))
                                return "end: integer expected";
                        if (message.options != null && message.hasOwnProperty("options")) {
                            var error = $root.google.protobuf.ExtensionRangeOptions.verify(message.options);
                            if (error)
                                return "options." + error;
                        }
                        return null;
                    };
    
                    /**
                     * Creates an ExtensionRange message from a plain object. Also converts values to their respective internal types.
                     * @function fromObject
                     * @memberof google.protobuf.DescriptorProto.ExtensionRange
                     * @static
                     * @param {Object.<string,*>} object Plain object
                     * @returns {google.protobuf.DescriptorProto.ExtensionRange} ExtensionRange
                     */
                    ExtensionRange.fromObject = function fromObject(object) {
                        if (object instanceof $root.google.protobuf.DescriptorProto.ExtensionRange)
                            return object;
                        var message = new $root.google.protobuf.DescriptorProto.ExtensionRange();
                        if (object.start != null)
                            message.start = object.start | 0;
                        if (object.end != null)
                            message.end = object.end | 0;
                        if (object.options != null) {
                            if (typeof object.options !== "object")
                                throw TypeError(".google.protobuf.DescriptorProto.ExtensionRange.options: object expected");
                            message.options = $root.google.protobuf.ExtensionRangeOptions.fromObject(object.options);
                        }
                        return message;
                    };
    
                    /**
                     * Creates a plain object from an ExtensionRange message. Also converts values to other types if specified.
                     * @function toObject
                     * @memberof google.protobuf.DescriptorProto.ExtensionRange
                     * @static
                     * @param {google.protobuf.DescriptorProto.ExtensionRange} message ExtensionRange
                     * @param {$protobuf.IConversionOptions} [options] Conversion options
                     * @returns {Object.<string,*>} Plain object
                     */
                    ExtensionRange.toObject = function toObject(message, options) {
                        if (!options)
                            options = {};
                        var object = {};
                        if (options.defaults) {
                            object.start = 0;
                            object.end = 0;
                            object.options = null;
                        }
                        if (message.start != null && message.hasOwnProperty("start"))
                            object.start = message.start;
                        if (message.end != null && message.hasOwnProperty("end"))
                            object.end = message.end;
                        if (message.options != null && message.hasOwnProperty("options"))
                            object.options = $root.google.protobuf.ExtensionRangeOptions.toObject(message.options, options);
                        return object;
                    };
    
                    /**
                     * Converts this ExtensionRange to JSON.
                     * @function toJSON
                     * @memberof google.protobuf.DescriptorProto.ExtensionRange
                     * @instance
                     * @returns {Object.<string,*>} JSON object
                     */
                    ExtensionRange.prototype.toJSON = function toJSON() {
                        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                    };
    
                    /**
                     * Gets the default type url for ExtensionRange
                     * @function getTypeUrl
                     * @memberof google.protobuf.DescriptorProto.ExtensionRange
                     * @static
                     * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                     * @returns {string} The default type url
                     */
                    ExtensionRange.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                        if (typeUrlPrefix === undefined) {
                            typeUrlPrefix = "type.googleapis.com";
                        }
                        return typeUrlPrefix + "/google.protobuf.DescriptorProto.ExtensionRange";
                    };
    
                    return ExtensionRange;
                })();
    
                DescriptorProto.ReservedRange = (function() {
    
                    /**
                     * Properties of a ReservedRange.
                     * @memberof google.protobuf.DescriptorProto
                     * @interface IReservedRange
                     * @property {number|null} [start] ReservedRange start
                     * @property {number|null} [end] ReservedRange end
                     */
    
                    /**
                     * Constructs a new ReservedRange.
                     * @memberof google.protobuf.DescriptorProto
                     * @classdesc Represents a ReservedRange.
                     * @implements IReservedRange
                     * @constructor
                     * @param {google.protobuf.DescriptorProto.IReservedRange=} [properties] Properties to set
                     */
                    function ReservedRange(properties) {
                        if (properties)
                            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                if (properties[keys[i]] != null)
                                    this[keys[i]] = properties[keys[i]];
                    }
    
                    /**
                     * ReservedRange start.
                     * @member {number} start
                     * @memberof google.protobuf.DescriptorProto.ReservedRange
                     * @instance
                     */
                    ReservedRange.prototype.start = 0;
    
                    /**
                     * ReservedRange end.
                     * @member {number} end
                     * @memberof google.protobuf.DescriptorProto.ReservedRange
                     * @instance
                     */
                    ReservedRange.prototype.end = 0;
    
                    /**
                     * Creates a new ReservedRange instance using the specified properties.
                     * @function create
                     * @memberof google.protobuf.DescriptorProto.ReservedRange
                     * @static
                     * @param {google.protobuf.DescriptorProto.IReservedRange=} [properties] Properties to set
                     * @returns {google.protobuf.DescriptorProto.ReservedRange} ReservedRange instance
                     */
                    ReservedRange.create = function create(properties) {
                        return new ReservedRange(properties);
                    };
    
                    /**
                     * Encodes the specified ReservedRange message. Does not implicitly {@link google.protobuf.DescriptorProto.ReservedRange.verify|verify} messages.
                     * @function encode
                     * @memberof google.protobuf.DescriptorProto.ReservedRange
                     * @static
                     * @param {google.protobuf.DescriptorProto.IReservedRange} message ReservedRange message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    ReservedRange.encode = function encode(message, writer) {
                        if (!writer)
                            writer = $Writer.create();
                        if (message.start != null && Object.hasOwnProperty.call(message, "start"))
                            writer.uint32(/* id 1, wireType 0 =*/8).int32(message.start);
                        if (message.end != null && Object.hasOwnProperty.call(message, "end"))
                            writer.uint32(/* id 2, wireType 0 =*/16).int32(message.end);
                        return writer;
                    };
    
                    /**
                     * Encodes the specified ReservedRange message, length delimited. Does not implicitly {@link google.protobuf.DescriptorProto.ReservedRange.verify|verify} messages.
                     * @function encodeDelimited
                     * @memberof google.protobuf.DescriptorProto.ReservedRange
                     * @static
                     * @param {google.protobuf.DescriptorProto.IReservedRange} message ReservedRange message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    ReservedRange.encodeDelimited = function encodeDelimited(message, writer) {
                        return this.encode(message, writer).ldelim();
                    };
    
                    /**
                     * Decodes a ReservedRange message from the specified reader or buffer.
                     * @function decode
                     * @memberof google.protobuf.DescriptorProto.ReservedRange
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @param {number} [length] Message length if known beforehand
                     * @returns {google.protobuf.DescriptorProto.ReservedRange} ReservedRange
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    ReservedRange.decode = function decode(reader, length) {
                        if (!(reader instanceof $Reader))
                            reader = $Reader.create(reader);
                        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.DescriptorProto.ReservedRange();
                        while (reader.pos < end) {
                            var tag = reader.uint32();
                            switch (tag >>> 3) {
                            case 1: {
                                    message.start = reader.int32();
                                    break;
                                }
                            case 2: {
                                    message.end = reader.int32();
                                    break;
                                }
                            default:
                                reader.skipType(tag & 7);
                                break;
                            }
                        }
                        return message;
                    };
    
                    /**
                     * Decodes a ReservedRange message from the specified reader or buffer, length delimited.
                     * @function decodeDelimited
                     * @memberof google.protobuf.DescriptorProto.ReservedRange
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @returns {google.protobuf.DescriptorProto.ReservedRange} ReservedRange
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    ReservedRange.decodeDelimited = function decodeDelimited(reader) {
                        if (!(reader instanceof $Reader))
                            reader = new $Reader(reader);
                        return this.decode(reader, reader.uint32());
                    };
    
                    /**
                     * Verifies a ReservedRange message.
                     * @function verify
                     * @memberof google.protobuf.DescriptorProto.ReservedRange
                     * @static
                     * @param {Object.<string,*>} message Plain object to verify
                     * @returns {string|null} `null` if valid, otherwise the reason why it is not
                     */
                    ReservedRange.verify = function verify(message) {
                        if (typeof message !== "object" || message === null)
                            return "object expected";
                        if (message.start != null && message.hasOwnProperty("start"))
                            if (!$util.isInteger(message.start))
                                return "start: integer expected";
                        if (message.end != null && message.hasOwnProperty("end"))
                            if (!$util.isInteger(message.end))
                                return "end: integer expected";
                        return null;
                    };
    
                    /**
                     * Creates a ReservedRange message from a plain object. Also converts values to their respective internal types.
                     * @function fromObject
                     * @memberof google.protobuf.DescriptorProto.ReservedRange
                     * @static
                     * @param {Object.<string,*>} object Plain object
                     * @returns {google.protobuf.DescriptorProto.ReservedRange} ReservedRange
                     */
                    ReservedRange.fromObject = function fromObject(object) {
                        if (object instanceof $root.google.protobuf.DescriptorProto.ReservedRange)
                            return object;
                        var message = new $root.google.protobuf.DescriptorProto.ReservedRange();
                        if (object.start != null)
                            message.start = object.start | 0;
                        if (object.end != null)
                            message.end = object.end | 0;
                        return message;
                    };
    
                    /**
                     * Creates a plain object from a ReservedRange message. Also converts values to other types if specified.
                     * @function toObject
                     * @memberof google.protobuf.DescriptorProto.ReservedRange
                     * @static
                     * @param {google.protobuf.DescriptorProto.ReservedRange} message ReservedRange
                     * @param {$protobuf.IConversionOptions} [options] Conversion options
                     * @returns {Object.<string,*>} Plain object
                     */
                    ReservedRange.toObject = function toObject(message, options) {
                        if (!options)
                            options = {};
                        var object = {};
                        if (options.defaults) {
                            object.start = 0;
                            object.end = 0;
                        }
                        if (message.start != null && message.hasOwnProperty("start"))
                            object.start = message.start;
                        if (message.end != null && message.hasOwnProperty("end"))
                            object.end = message.end;
                        return object;
                    };
    
                    /**
                     * Converts this ReservedRange to JSON.
                     * @function toJSON
                     * @memberof google.protobuf.DescriptorProto.ReservedRange
                     * @instance
                     * @returns {Object.<string,*>} JSON object
                     */
                    ReservedRange.prototype.toJSON = function toJSON() {
                        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                    };
    
                    /**
                     * Gets the default type url for ReservedRange
                     * @function getTypeUrl
                     * @memberof google.protobuf.DescriptorProto.ReservedRange
                     * @static
                     * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                     * @returns {string} The default type url
                     */
                    ReservedRange.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                        if (typeUrlPrefix === undefined) {
                            typeUrlPrefix = "type.googleapis.com";
                        }
                        return typeUrlPrefix + "/google.protobuf.DescriptorProto.ReservedRange";
                    };
    
                    return ReservedRange;
                })();
    
                return DescriptorProto;
            })();
    
            protobuf.ExtensionRangeOptions = (function() {
    
                /**
                 * Properties of an ExtensionRangeOptions.
                 * @memberof google.protobuf
                 * @interface IExtensionRangeOptions
                 * @property {Array.<google.protobuf.IUninterpretedOption>|null} [uninterpretedOption] ExtensionRangeOptions uninterpretedOption
                 */
    
                /**
                 * Constructs a new ExtensionRangeOptions.
                 * @memberof google.protobuf
                 * @classdesc Represents an ExtensionRangeOptions.
                 * @implements IExtensionRangeOptions
                 * @constructor
                 * @param {google.protobuf.IExtensionRangeOptions=} [properties] Properties to set
                 */
                function ExtensionRangeOptions(properties) {
                    this.uninterpretedOption = [];
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * ExtensionRangeOptions uninterpretedOption.
                 * @member {Array.<google.protobuf.IUninterpretedOption>} uninterpretedOption
                 * @memberof google.protobuf.ExtensionRangeOptions
                 * @instance
                 */
                ExtensionRangeOptions.prototype.uninterpretedOption = $util.emptyArray;
    
                /**
                 * Creates a new ExtensionRangeOptions instance using the specified properties.
                 * @function create
                 * @memberof google.protobuf.ExtensionRangeOptions
                 * @static
                 * @param {google.protobuf.IExtensionRangeOptions=} [properties] Properties to set
                 * @returns {google.protobuf.ExtensionRangeOptions} ExtensionRangeOptions instance
                 */
                ExtensionRangeOptions.create = function create(properties) {
                    return new ExtensionRangeOptions(properties);
                };
    
                /**
                 * Encodes the specified ExtensionRangeOptions message. Does not implicitly {@link google.protobuf.ExtensionRangeOptions.verify|verify} messages.
                 * @function encode
                 * @memberof google.protobuf.ExtensionRangeOptions
                 * @static
                 * @param {google.protobuf.IExtensionRangeOptions} message ExtensionRangeOptions message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                ExtensionRangeOptions.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.uninterpretedOption != null && message.uninterpretedOption.length)
                        for (var i = 0; i < message.uninterpretedOption.length; ++i)
                            $root.google.protobuf.UninterpretedOption.encode(message.uninterpretedOption[i], writer.uint32(/* id 999, wireType 2 =*/7994).fork()).ldelim();
                    return writer;
                };
    
                /**
                 * Encodes the specified ExtensionRangeOptions message, length delimited. Does not implicitly {@link google.protobuf.ExtensionRangeOptions.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.protobuf.ExtensionRangeOptions
                 * @static
                 * @param {google.protobuf.IExtensionRangeOptions} message ExtensionRangeOptions message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                ExtensionRangeOptions.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes an ExtensionRangeOptions message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.protobuf.ExtensionRangeOptions
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.protobuf.ExtensionRangeOptions} ExtensionRangeOptions
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                ExtensionRangeOptions.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.ExtensionRangeOptions();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 999: {
                                if (!(message.uninterpretedOption && message.uninterpretedOption.length))
                                    message.uninterpretedOption = [];
                                message.uninterpretedOption.push($root.google.protobuf.UninterpretedOption.decode(reader, reader.uint32()));
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes an ExtensionRangeOptions message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.protobuf.ExtensionRangeOptions
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.protobuf.ExtensionRangeOptions} ExtensionRangeOptions
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                ExtensionRangeOptions.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies an ExtensionRangeOptions message.
                 * @function verify
                 * @memberof google.protobuf.ExtensionRangeOptions
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                ExtensionRangeOptions.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.uninterpretedOption != null && message.hasOwnProperty("uninterpretedOption")) {
                        if (!Array.isArray(message.uninterpretedOption))
                            return "uninterpretedOption: array expected";
                        for (var i = 0; i < message.uninterpretedOption.length; ++i) {
                            var error = $root.google.protobuf.UninterpretedOption.verify(message.uninterpretedOption[i]);
                            if (error)
                                return "uninterpretedOption." + error;
                        }
                    }
                    return null;
                };
    
                /**
                 * Creates an ExtensionRangeOptions message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.protobuf.ExtensionRangeOptions
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.protobuf.ExtensionRangeOptions} ExtensionRangeOptions
                 */
                ExtensionRangeOptions.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.protobuf.ExtensionRangeOptions)
                        return object;
                    var message = new $root.google.protobuf.ExtensionRangeOptions();
                    if (object.uninterpretedOption) {
                        if (!Array.isArray(object.uninterpretedOption))
                            throw TypeError(".google.protobuf.ExtensionRangeOptions.uninterpretedOption: array expected");
                        message.uninterpretedOption = [];
                        for (var i = 0; i < object.uninterpretedOption.length; ++i) {
                            if (typeof object.uninterpretedOption[i] !== "object")
                                throw TypeError(".google.protobuf.ExtensionRangeOptions.uninterpretedOption: object expected");
                            message.uninterpretedOption[i] = $root.google.protobuf.UninterpretedOption.fromObject(object.uninterpretedOption[i]);
                        }
                    }
                    return message;
                };
    
                /**
                 * Creates a plain object from an ExtensionRangeOptions message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.protobuf.ExtensionRangeOptions
                 * @static
                 * @param {google.protobuf.ExtensionRangeOptions} message ExtensionRangeOptions
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                ExtensionRangeOptions.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.arrays || options.defaults)
                        object.uninterpretedOption = [];
                    if (message.uninterpretedOption && message.uninterpretedOption.length) {
                        object.uninterpretedOption = [];
                        for (var j = 0; j < message.uninterpretedOption.length; ++j)
                            object.uninterpretedOption[j] = $root.google.protobuf.UninterpretedOption.toObject(message.uninterpretedOption[j], options);
                    }
                    return object;
                };
    
                /**
                 * Converts this ExtensionRangeOptions to JSON.
                 * @function toJSON
                 * @memberof google.protobuf.ExtensionRangeOptions
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                ExtensionRangeOptions.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for ExtensionRangeOptions
                 * @function getTypeUrl
                 * @memberof google.protobuf.ExtensionRangeOptions
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                ExtensionRangeOptions.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.protobuf.ExtensionRangeOptions";
                };
    
                return ExtensionRangeOptions;
            })();
    
            protobuf.FieldDescriptorProto = (function() {
    
                /**
                 * Properties of a FieldDescriptorProto.
                 * @memberof google.protobuf
                 * @interface IFieldDescriptorProto
                 * @property {string|null} [name] FieldDescriptorProto name
                 * @property {number|null} [number] FieldDescriptorProto number
                 * @property {google.protobuf.FieldDescriptorProto.Label|null} [label] FieldDescriptorProto label
                 * @property {google.protobuf.FieldDescriptorProto.Type|null} [type] FieldDescriptorProto type
                 * @property {string|null} [typeName] FieldDescriptorProto typeName
                 * @property {string|null} [extendee] FieldDescriptorProto extendee
                 * @property {string|null} [defaultValue] FieldDescriptorProto defaultValue
                 * @property {number|null} [oneofIndex] FieldDescriptorProto oneofIndex
                 * @property {string|null} [jsonName] FieldDescriptorProto jsonName
                 * @property {google.protobuf.IFieldOptions|null} [options] FieldDescriptorProto options
                 * @property {boolean|null} [proto3Optional] FieldDescriptorProto proto3Optional
                 */
    
                /**
                 * Constructs a new FieldDescriptorProto.
                 * @memberof google.protobuf
                 * @classdesc Represents a FieldDescriptorProto.
                 * @implements IFieldDescriptorProto
                 * @constructor
                 * @param {google.protobuf.IFieldDescriptorProto=} [properties] Properties to set
                 */
                function FieldDescriptorProto(properties) {
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * FieldDescriptorProto name.
                 * @member {string} name
                 * @memberof google.protobuf.FieldDescriptorProto
                 * @instance
                 */
                FieldDescriptorProto.prototype.name = "";
    
                /**
                 * FieldDescriptorProto number.
                 * @member {number} number
                 * @memberof google.protobuf.FieldDescriptorProto
                 * @instance
                 */
                FieldDescriptorProto.prototype.number = 0;
    
                /**
                 * FieldDescriptorProto label.
                 * @member {google.protobuf.FieldDescriptorProto.Label} label
                 * @memberof google.protobuf.FieldDescriptorProto
                 * @instance
                 */
                FieldDescriptorProto.prototype.label = 1;
    
                /**
                 * FieldDescriptorProto type.
                 * @member {google.protobuf.FieldDescriptorProto.Type} type
                 * @memberof google.protobuf.FieldDescriptorProto
                 * @instance
                 */
                FieldDescriptorProto.prototype.type = 1;
    
                /**
                 * FieldDescriptorProto typeName.
                 * @member {string} typeName
                 * @memberof google.protobuf.FieldDescriptorProto
                 * @instance
                 */
                FieldDescriptorProto.prototype.typeName = "";
    
                /**
                 * FieldDescriptorProto extendee.
                 * @member {string} extendee
                 * @memberof google.protobuf.FieldDescriptorProto
                 * @instance
                 */
                FieldDescriptorProto.prototype.extendee = "";
    
                /**
                 * FieldDescriptorProto defaultValue.
                 * @member {string} defaultValue
                 * @memberof google.protobuf.FieldDescriptorProto
                 * @instance
                 */
                FieldDescriptorProto.prototype.defaultValue = "";
    
                /**
                 * FieldDescriptorProto oneofIndex.
                 * @member {number} oneofIndex
                 * @memberof google.protobuf.FieldDescriptorProto
                 * @instance
                 */
                FieldDescriptorProto.prototype.oneofIndex = 0;
    
                /**
                 * FieldDescriptorProto jsonName.
                 * @member {string} jsonName
                 * @memberof google.protobuf.FieldDescriptorProto
                 * @instance
                 */
                FieldDescriptorProto.prototype.jsonName = "";
    
                /**
                 * FieldDescriptorProto options.
                 * @member {google.protobuf.IFieldOptions|null|undefined} options
                 * @memberof google.protobuf.FieldDescriptorProto
                 * @instance
                 */
                FieldDescriptorProto.prototype.options = null;
    
                /**
                 * FieldDescriptorProto proto3Optional.
                 * @member {boolean} proto3Optional
                 * @memberof google.protobuf.FieldDescriptorProto
                 * @instance
                 */
                FieldDescriptorProto.prototype.proto3Optional = false;
    
                /**
                 * Creates a new FieldDescriptorProto instance using the specified properties.
                 * @function create
                 * @memberof google.protobuf.FieldDescriptorProto
                 * @static
                 * @param {google.protobuf.IFieldDescriptorProto=} [properties] Properties to set
                 * @returns {google.protobuf.FieldDescriptorProto} FieldDescriptorProto instance
                 */
                FieldDescriptorProto.create = function create(properties) {
                    return new FieldDescriptorProto(properties);
                };
    
                /**
                 * Encodes the specified FieldDescriptorProto message. Does not implicitly {@link google.protobuf.FieldDescriptorProto.verify|verify} messages.
                 * @function encode
                 * @memberof google.protobuf.FieldDescriptorProto
                 * @static
                 * @param {google.protobuf.IFieldDescriptorProto} message FieldDescriptorProto message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                FieldDescriptorProto.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                        writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                    if (message.extendee != null && Object.hasOwnProperty.call(message, "extendee"))
                        writer.uint32(/* id 2, wireType 2 =*/18).string(message.extendee);
                    if (message.number != null && Object.hasOwnProperty.call(message, "number"))
                        writer.uint32(/* id 3, wireType 0 =*/24).int32(message.number);
                    if (message.label != null && Object.hasOwnProperty.call(message, "label"))
                        writer.uint32(/* id 4, wireType 0 =*/32).int32(message.label);
                    if (message.type != null && Object.hasOwnProperty.call(message, "type"))
                        writer.uint32(/* id 5, wireType 0 =*/40).int32(message.type);
                    if (message.typeName != null && Object.hasOwnProperty.call(message, "typeName"))
                        writer.uint32(/* id 6, wireType 2 =*/50).string(message.typeName);
                    if (message.defaultValue != null && Object.hasOwnProperty.call(message, "defaultValue"))
                        writer.uint32(/* id 7, wireType 2 =*/58).string(message.defaultValue);
                    if (message.options != null && Object.hasOwnProperty.call(message, "options"))
                        $root.google.protobuf.FieldOptions.encode(message.options, writer.uint32(/* id 8, wireType 2 =*/66).fork()).ldelim();
                    if (message.oneofIndex != null && Object.hasOwnProperty.call(message, "oneofIndex"))
                        writer.uint32(/* id 9, wireType 0 =*/72).int32(message.oneofIndex);
                    if (message.jsonName != null && Object.hasOwnProperty.call(message, "jsonName"))
                        writer.uint32(/* id 10, wireType 2 =*/82).string(message.jsonName);
                    if (message.proto3Optional != null && Object.hasOwnProperty.call(message, "proto3Optional"))
                        writer.uint32(/* id 17, wireType 0 =*/136).bool(message.proto3Optional);
                    return writer;
                };
    
                /**
                 * Encodes the specified FieldDescriptorProto message, length delimited. Does not implicitly {@link google.protobuf.FieldDescriptorProto.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.protobuf.FieldDescriptorProto
                 * @static
                 * @param {google.protobuf.IFieldDescriptorProto} message FieldDescriptorProto message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                FieldDescriptorProto.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a FieldDescriptorProto message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.protobuf.FieldDescriptorProto
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.protobuf.FieldDescriptorProto} FieldDescriptorProto
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                FieldDescriptorProto.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.FieldDescriptorProto();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1: {
                                message.name = reader.string();
                                break;
                            }
                        case 3: {
                                message.number = reader.int32();
                                break;
                            }
                        case 4: {
                                message.label = reader.int32();
                                break;
                            }
                        case 5: {
                                message.type = reader.int32();
                                break;
                            }
                        case 6: {
                                message.typeName = reader.string();
                                break;
                            }
                        case 2: {
                                message.extendee = reader.string();
                                break;
                            }
                        case 7: {
                                message.defaultValue = reader.string();
                                break;
                            }
                        case 9: {
                                message.oneofIndex = reader.int32();
                                break;
                            }
                        case 10: {
                                message.jsonName = reader.string();
                                break;
                            }
                        case 8: {
                                message.options = $root.google.protobuf.FieldOptions.decode(reader, reader.uint32());
                                break;
                            }
                        case 17: {
                                message.proto3Optional = reader.bool();
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a FieldDescriptorProto message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.protobuf.FieldDescriptorProto
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.protobuf.FieldDescriptorProto} FieldDescriptorProto
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                FieldDescriptorProto.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a FieldDescriptorProto message.
                 * @function verify
                 * @memberof google.protobuf.FieldDescriptorProto
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                FieldDescriptorProto.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.name != null && message.hasOwnProperty("name"))
                        if (!$util.isString(message.name))
                            return "name: string expected";
                    if (message.number != null && message.hasOwnProperty("number"))
                        if (!$util.isInteger(message.number))
                            return "number: integer expected";
                    if (message.label != null && message.hasOwnProperty("label"))
                        switch (message.label) {
                        default:
                            return "label: enum value expected";
                        case 1:
                        case 2:
                        case 3:
                            break;
                        }
                    if (message.type != null && message.hasOwnProperty("type"))
                        switch (message.type) {
                        default:
                            return "type: enum value expected";
                        case 1:
                        case 2:
                        case 3:
                        case 4:
                        case 5:
                        case 6:
                        case 7:
                        case 8:
                        case 9:
                        case 10:
                        case 11:
                        case 12:
                        case 13:
                        case 14:
                        case 15:
                        case 16:
                        case 17:
                        case 18:
                            break;
                        }
                    if (message.typeName != null && message.hasOwnProperty("typeName"))
                        if (!$util.isString(message.typeName))
                            return "typeName: string expected";
                    if (message.extendee != null && message.hasOwnProperty("extendee"))
                        if (!$util.isString(message.extendee))
                            return "extendee: string expected";
                    if (message.defaultValue != null && message.hasOwnProperty("defaultValue"))
                        if (!$util.isString(message.defaultValue))
                            return "defaultValue: string expected";
                    if (message.oneofIndex != null && message.hasOwnProperty("oneofIndex"))
                        if (!$util.isInteger(message.oneofIndex))
                            return "oneofIndex: integer expected";
                    if (message.jsonName != null && message.hasOwnProperty("jsonName"))
                        if (!$util.isString(message.jsonName))
                            return "jsonName: string expected";
                    if (message.options != null && message.hasOwnProperty("options")) {
                        var error = $root.google.protobuf.FieldOptions.verify(message.options);
                        if (error)
                            return "options." + error;
                    }
                    if (message.proto3Optional != null && message.hasOwnProperty("proto3Optional"))
                        if (typeof message.proto3Optional !== "boolean")
                            return "proto3Optional: boolean expected";
                    return null;
                };
    
                /**
                 * Creates a FieldDescriptorProto message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.protobuf.FieldDescriptorProto
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.protobuf.FieldDescriptorProto} FieldDescriptorProto
                 */
                FieldDescriptorProto.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.protobuf.FieldDescriptorProto)
                        return object;
                    var message = new $root.google.protobuf.FieldDescriptorProto();
                    if (object.name != null)
                        message.name = String(object.name);
                    if (object.number != null)
                        message.number = object.number | 0;
                    switch (object.label) {
                    default:
                        if (typeof object.label === "number") {
                            message.label = object.label;
                            break;
                        }
                        break;
                    case "LABEL_OPTIONAL":
                    case 1:
                        message.label = 1;
                        break;
                    case "LABEL_REQUIRED":
                    case 2:
                        message.label = 2;
                        break;
                    case "LABEL_REPEATED":
                    case 3:
                        message.label = 3;
                        break;
                    }
                    switch (object.type) {
                    default:
                        if (typeof object.type === "number") {
                            message.type = object.type;
                            break;
                        }
                        break;
                    case "TYPE_DOUBLE":
                    case 1:
                        message.type = 1;
                        break;
                    case "TYPE_FLOAT":
                    case 2:
                        message.type = 2;
                        break;
                    case "TYPE_INT64":
                    case 3:
                        message.type = 3;
                        break;
                    case "TYPE_UINT64":
                    case 4:
                        message.type = 4;
                        break;
                    case "TYPE_INT32":
                    case 5:
                        message.type = 5;
                        break;
                    case "TYPE_FIXED64":
                    case 6:
                        message.type = 6;
                        break;
                    case "TYPE_FIXED32":
                    case 7:
                        message.type = 7;
                        break;
                    case "TYPE_BOOL":
                    case 8:
                        message.type = 8;
                        break;
                    case "TYPE_STRING":
                    case 9:
                        message.type = 9;
                        break;
                    case "TYPE_GROUP":
                    case 10:
                        message.type = 10;
                        break;
                    case "TYPE_MESSAGE":
                    case 11:
                        message.type = 11;
                        break;
                    case "TYPE_BYTES":
                    case 12:
                        message.type = 12;
                        break;
                    case "TYPE_UINT32":
                    case 13:
                        message.type = 13;
                        break;
                    case "TYPE_ENUM":
                    case 14:
                        message.type = 14;
                        break;
                    case "TYPE_SFIXED32":
                    case 15:
                        message.type = 15;
                        break;
                    case "TYPE_SFIXED64":
                    case 16:
                        message.type = 16;
                        break;
                    case "TYPE_SINT32":
                    case 17:
                        message.type = 17;
                        break;
                    case "TYPE_SINT64":
                    case 18:
                        message.type = 18;
                        break;
                    }
                    if (object.typeName != null)
                        message.typeName = String(object.typeName);
                    if (object.extendee != null)
                        message.extendee = String(object.extendee);
                    if (object.defaultValue != null)
                        message.defaultValue = String(object.defaultValue);
                    if (object.oneofIndex != null)
                        message.oneofIndex = object.oneofIndex | 0;
                    if (object.jsonName != null)
                        message.jsonName = String(object.jsonName);
                    if (object.options != null) {
                        if (typeof object.options !== "object")
                            throw TypeError(".google.protobuf.FieldDescriptorProto.options: object expected");
                        message.options = $root.google.protobuf.FieldOptions.fromObject(object.options);
                    }
                    if (object.proto3Optional != null)
                        message.proto3Optional = Boolean(object.proto3Optional);
                    return message;
                };
    
                /**
                 * Creates a plain object from a FieldDescriptorProto message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.protobuf.FieldDescriptorProto
                 * @static
                 * @param {google.protobuf.FieldDescriptorProto} message FieldDescriptorProto
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                FieldDescriptorProto.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.defaults) {
                        object.name = "";
                        object.extendee = "";
                        object.number = 0;
                        object.label = options.enums === String ? "LABEL_OPTIONAL" : 1;
                        object.type = options.enums === String ? "TYPE_DOUBLE" : 1;
                        object.typeName = "";
                        object.defaultValue = "";
                        object.options = null;
                        object.oneofIndex = 0;
                        object.jsonName = "";
                        object.proto3Optional = false;
                    }
                    if (message.name != null && message.hasOwnProperty("name"))
                        object.name = message.name;
                    if (message.extendee != null && message.hasOwnProperty("extendee"))
                        object.extendee = message.extendee;
                    if (message.number != null && message.hasOwnProperty("number"))
                        object.number = message.number;
                    if (message.label != null && message.hasOwnProperty("label"))
                        object.label = options.enums === String ? $root.google.protobuf.FieldDescriptorProto.Label[message.label] === undefined ? message.label : $root.google.protobuf.FieldDescriptorProto.Label[message.label] : message.label;
                    if (message.type != null && message.hasOwnProperty("type"))
                        object.type = options.enums === String ? $root.google.protobuf.FieldDescriptorProto.Type[message.type] === undefined ? message.type : $root.google.protobuf.FieldDescriptorProto.Type[message.type] : message.type;
                    if (message.typeName != null && message.hasOwnProperty("typeName"))
                        object.typeName = message.typeName;
                    if (message.defaultValue != null && message.hasOwnProperty("defaultValue"))
                        object.defaultValue = message.defaultValue;
                    if (message.options != null && message.hasOwnProperty("options"))
                        object.options = $root.google.protobuf.FieldOptions.toObject(message.options, options);
                    if (message.oneofIndex != null && message.hasOwnProperty("oneofIndex"))
                        object.oneofIndex = message.oneofIndex;
                    if (message.jsonName != null && message.hasOwnProperty("jsonName"))
                        object.jsonName = message.jsonName;
                    if (message.proto3Optional != null && message.hasOwnProperty("proto3Optional"))
                        object.proto3Optional = message.proto3Optional;
                    return object;
                };
    
                /**
                 * Converts this FieldDescriptorProto to JSON.
                 * @function toJSON
                 * @memberof google.protobuf.FieldDescriptorProto
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                FieldDescriptorProto.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for FieldDescriptorProto
                 * @function getTypeUrl
                 * @memberof google.protobuf.FieldDescriptorProto
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                FieldDescriptorProto.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.protobuf.FieldDescriptorProto";
                };
    
                /**
                 * Type enum.
                 * @name google.protobuf.FieldDescriptorProto.Type
                 * @enum {number}
                 * @property {number} TYPE_DOUBLE=1 TYPE_DOUBLE value
                 * @property {number} TYPE_FLOAT=2 TYPE_FLOAT value
                 * @property {number} TYPE_INT64=3 TYPE_INT64 value
                 * @property {number} TYPE_UINT64=4 TYPE_UINT64 value
                 * @property {number} TYPE_INT32=5 TYPE_INT32 value
                 * @property {number} TYPE_FIXED64=6 TYPE_FIXED64 value
                 * @property {number} TYPE_FIXED32=7 TYPE_FIXED32 value
                 * @property {number} TYPE_BOOL=8 TYPE_BOOL value
                 * @property {number} TYPE_STRING=9 TYPE_STRING value
                 * @property {number} TYPE_GROUP=10 TYPE_GROUP value
                 * @property {number} TYPE_MESSAGE=11 TYPE_MESSAGE value
                 * @property {number} TYPE_BYTES=12 TYPE_BYTES value
                 * @property {number} TYPE_UINT32=13 TYPE_UINT32 value
                 * @property {number} TYPE_ENUM=14 TYPE_ENUM value
                 * @property {number} TYPE_SFIXED32=15 TYPE_SFIXED32 value
                 * @property {number} TYPE_SFIXED64=16 TYPE_SFIXED64 value
                 * @property {number} TYPE_SINT32=17 TYPE_SINT32 value
                 * @property {number} TYPE_SINT64=18 TYPE_SINT64 value
                 */
                FieldDescriptorProto.Type = (function() {
                    var valuesById = {}, values = Object.create(valuesById);
                    values[valuesById[1] = "TYPE_DOUBLE"] = 1;
                    values[valuesById[2] = "TYPE_FLOAT"] = 2;
                    values[valuesById[3] = "TYPE_INT64"] = 3;
                    values[valuesById[4] = "TYPE_UINT64"] = 4;
                    values[valuesById[5] = "TYPE_INT32"] = 5;
                    values[valuesById[6] = "TYPE_FIXED64"] = 6;
                    values[valuesById[7] = "TYPE_FIXED32"] = 7;
                    values[valuesById[8] = "TYPE_BOOL"] = 8;
                    values[valuesById[9] = "TYPE_STRING"] = 9;
                    values[valuesById[10] = "TYPE_GROUP"] = 10;
                    values[valuesById[11] = "TYPE_MESSAGE"] = 11;
                    values[valuesById[12] = "TYPE_BYTES"] = 12;
                    values[valuesById[13] = "TYPE_UINT32"] = 13;
                    values[valuesById[14] = "TYPE_ENUM"] = 14;
                    values[valuesById[15] = "TYPE_SFIXED32"] = 15;
                    values[valuesById[16] = "TYPE_SFIXED64"] = 16;
                    values[valuesById[17] = "TYPE_SINT32"] = 17;
                    values[valuesById[18] = "TYPE_SINT64"] = 18;
                    return values;
                })();
    
                /**
                 * Label enum.
                 * @name google.protobuf.FieldDescriptorProto.Label
                 * @enum {number}
                 * @property {number} LABEL_OPTIONAL=1 LABEL_OPTIONAL value
                 * @property {number} LABEL_REQUIRED=2 LABEL_REQUIRED value
                 * @property {number} LABEL_REPEATED=3 LABEL_REPEATED value
                 */
                FieldDescriptorProto.Label = (function() {
                    var valuesById = {}, values = Object.create(valuesById);
                    values[valuesById[1] = "LABEL_OPTIONAL"] = 1;
                    values[valuesById[2] = "LABEL_REQUIRED"] = 2;
                    values[valuesById[3] = "LABEL_REPEATED"] = 3;
                    return values;
                })();
    
                return FieldDescriptorProto;
            })();
    
            protobuf.OneofDescriptorProto = (function() {
    
                /**
                 * Properties of an OneofDescriptorProto.
                 * @memberof google.protobuf
                 * @interface IOneofDescriptorProto
                 * @property {string|null} [name] OneofDescriptorProto name
                 * @property {google.protobuf.IOneofOptions|null} [options] OneofDescriptorProto options
                 */
    
                /**
                 * Constructs a new OneofDescriptorProto.
                 * @memberof google.protobuf
                 * @classdesc Represents an OneofDescriptorProto.
                 * @implements IOneofDescriptorProto
                 * @constructor
                 * @param {google.protobuf.IOneofDescriptorProto=} [properties] Properties to set
                 */
                function OneofDescriptorProto(properties) {
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * OneofDescriptorProto name.
                 * @member {string} name
                 * @memberof google.protobuf.OneofDescriptorProto
                 * @instance
                 */
                OneofDescriptorProto.prototype.name = "";
    
                /**
                 * OneofDescriptorProto options.
                 * @member {google.protobuf.IOneofOptions|null|undefined} options
                 * @memberof google.protobuf.OneofDescriptorProto
                 * @instance
                 */
                OneofDescriptorProto.prototype.options = null;
    
                /**
                 * Creates a new OneofDescriptorProto instance using the specified properties.
                 * @function create
                 * @memberof google.protobuf.OneofDescriptorProto
                 * @static
                 * @param {google.protobuf.IOneofDescriptorProto=} [properties] Properties to set
                 * @returns {google.protobuf.OneofDescriptorProto} OneofDescriptorProto instance
                 */
                OneofDescriptorProto.create = function create(properties) {
                    return new OneofDescriptorProto(properties);
                };
    
                /**
                 * Encodes the specified OneofDescriptorProto message. Does not implicitly {@link google.protobuf.OneofDescriptorProto.verify|verify} messages.
                 * @function encode
                 * @memberof google.protobuf.OneofDescriptorProto
                 * @static
                 * @param {google.protobuf.IOneofDescriptorProto} message OneofDescriptorProto message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                OneofDescriptorProto.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                        writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                    if (message.options != null && Object.hasOwnProperty.call(message, "options"))
                        $root.google.protobuf.OneofOptions.encode(message.options, writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                    return writer;
                };
    
                /**
                 * Encodes the specified OneofDescriptorProto message, length delimited. Does not implicitly {@link google.protobuf.OneofDescriptorProto.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.protobuf.OneofDescriptorProto
                 * @static
                 * @param {google.protobuf.IOneofDescriptorProto} message OneofDescriptorProto message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                OneofDescriptorProto.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes an OneofDescriptorProto message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.protobuf.OneofDescriptorProto
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.protobuf.OneofDescriptorProto} OneofDescriptorProto
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                OneofDescriptorProto.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.OneofDescriptorProto();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1: {
                                message.name = reader.string();
                                break;
                            }
                        case 2: {
                                message.options = $root.google.protobuf.OneofOptions.decode(reader, reader.uint32());
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes an OneofDescriptorProto message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.protobuf.OneofDescriptorProto
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.protobuf.OneofDescriptorProto} OneofDescriptorProto
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                OneofDescriptorProto.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies an OneofDescriptorProto message.
                 * @function verify
                 * @memberof google.protobuf.OneofDescriptorProto
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                OneofDescriptorProto.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.name != null && message.hasOwnProperty("name"))
                        if (!$util.isString(message.name))
                            return "name: string expected";
                    if (message.options != null && message.hasOwnProperty("options")) {
                        var error = $root.google.protobuf.OneofOptions.verify(message.options);
                        if (error)
                            return "options." + error;
                    }
                    return null;
                };
    
                /**
                 * Creates an OneofDescriptorProto message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.protobuf.OneofDescriptorProto
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.protobuf.OneofDescriptorProto} OneofDescriptorProto
                 */
                OneofDescriptorProto.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.protobuf.OneofDescriptorProto)
                        return object;
                    var message = new $root.google.protobuf.OneofDescriptorProto();
                    if (object.name != null)
                        message.name = String(object.name);
                    if (object.options != null) {
                        if (typeof object.options !== "object")
                            throw TypeError(".google.protobuf.OneofDescriptorProto.options: object expected");
                        message.options = $root.google.protobuf.OneofOptions.fromObject(object.options);
                    }
                    return message;
                };
    
                /**
                 * Creates a plain object from an OneofDescriptorProto message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.protobuf.OneofDescriptorProto
                 * @static
                 * @param {google.protobuf.OneofDescriptorProto} message OneofDescriptorProto
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                OneofDescriptorProto.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.defaults) {
                        object.name = "";
                        object.options = null;
                    }
                    if (message.name != null && message.hasOwnProperty("name"))
                        object.name = message.name;
                    if (message.options != null && message.hasOwnProperty("options"))
                        object.options = $root.google.protobuf.OneofOptions.toObject(message.options, options);
                    return object;
                };
    
                /**
                 * Converts this OneofDescriptorProto to JSON.
                 * @function toJSON
                 * @memberof google.protobuf.OneofDescriptorProto
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                OneofDescriptorProto.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for OneofDescriptorProto
                 * @function getTypeUrl
                 * @memberof google.protobuf.OneofDescriptorProto
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                OneofDescriptorProto.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.protobuf.OneofDescriptorProto";
                };
    
                return OneofDescriptorProto;
            })();
    
            protobuf.EnumDescriptorProto = (function() {
    
                /**
                 * Properties of an EnumDescriptorProto.
                 * @memberof google.protobuf
                 * @interface IEnumDescriptorProto
                 * @property {string|null} [name] EnumDescriptorProto name
                 * @property {Array.<google.protobuf.IEnumValueDescriptorProto>|null} [value] EnumDescriptorProto value
                 * @property {google.protobuf.IEnumOptions|null} [options] EnumDescriptorProto options
                 * @property {Array.<google.protobuf.EnumDescriptorProto.IEnumReservedRange>|null} [reservedRange] EnumDescriptorProto reservedRange
                 * @property {Array.<string>|null} [reservedName] EnumDescriptorProto reservedName
                 */
    
                /**
                 * Constructs a new EnumDescriptorProto.
                 * @memberof google.protobuf
                 * @classdesc Represents an EnumDescriptorProto.
                 * @implements IEnumDescriptorProto
                 * @constructor
                 * @param {google.protobuf.IEnumDescriptorProto=} [properties] Properties to set
                 */
                function EnumDescriptorProto(properties) {
                    this.value = [];
                    this.reservedRange = [];
                    this.reservedName = [];
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * EnumDescriptorProto name.
                 * @member {string} name
                 * @memberof google.protobuf.EnumDescriptorProto
                 * @instance
                 */
                EnumDescriptorProto.prototype.name = "";
    
                /**
                 * EnumDescriptorProto value.
                 * @member {Array.<google.protobuf.IEnumValueDescriptorProto>} value
                 * @memberof google.protobuf.EnumDescriptorProto
                 * @instance
                 */
                EnumDescriptorProto.prototype.value = $util.emptyArray;
    
                /**
                 * EnumDescriptorProto options.
                 * @member {google.protobuf.IEnumOptions|null|undefined} options
                 * @memberof google.protobuf.EnumDescriptorProto
                 * @instance
                 */
                EnumDescriptorProto.prototype.options = null;
    
                /**
                 * EnumDescriptorProto reservedRange.
                 * @member {Array.<google.protobuf.EnumDescriptorProto.IEnumReservedRange>} reservedRange
                 * @memberof google.protobuf.EnumDescriptorProto
                 * @instance
                 */
                EnumDescriptorProto.prototype.reservedRange = $util.emptyArray;
    
                /**
                 * EnumDescriptorProto reservedName.
                 * @member {Array.<string>} reservedName
                 * @memberof google.protobuf.EnumDescriptorProto
                 * @instance
                 */
                EnumDescriptorProto.prototype.reservedName = $util.emptyArray;
    
                /**
                 * Creates a new EnumDescriptorProto instance using the specified properties.
                 * @function create
                 * @memberof google.protobuf.EnumDescriptorProto
                 * @static
                 * @param {google.protobuf.IEnumDescriptorProto=} [properties] Properties to set
                 * @returns {google.protobuf.EnumDescriptorProto} EnumDescriptorProto instance
                 */
                EnumDescriptorProto.create = function create(properties) {
                    return new EnumDescriptorProto(properties);
                };
    
                /**
                 * Encodes the specified EnumDescriptorProto message. Does not implicitly {@link google.protobuf.EnumDescriptorProto.verify|verify} messages.
                 * @function encode
                 * @memberof google.protobuf.EnumDescriptorProto
                 * @static
                 * @param {google.protobuf.IEnumDescriptorProto} message EnumDescriptorProto message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                EnumDescriptorProto.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                        writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                    if (message.value != null && message.value.length)
                        for (var i = 0; i < message.value.length; ++i)
                            $root.google.protobuf.EnumValueDescriptorProto.encode(message.value[i], writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                    if (message.options != null && Object.hasOwnProperty.call(message, "options"))
                        $root.google.protobuf.EnumOptions.encode(message.options, writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();
                    if (message.reservedRange != null && message.reservedRange.length)
                        for (var i = 0; i < message.reservedRange.length; ++i)
                            $root.google.protobuf.EnumDescriptorProto.EnumReservedRange.encode(message.reservedRange[i], writer.uint32(/* id 4, wireType 2 =*/34).fork()).ldelim();
                    if (message.reservedName != null && message.reservedName.length)
                        for (var i = 0; i < message.reservedName.length; ++i)
                            writer.uint32(/* id 5, wireType 2 =*/42).string(message.reservedName[i]);
                    return writer;
                };
    
                /**
                 * Encodes the specified EnumDescriptorProto message, length delimited. Does not implicitly {@link google.protobuf.EnumDescriptorProto.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.protobuf.EnumDescriptorProto
                 * @static
                 * @param {google.protobuf.IEnumDescriptorProto} message EnumDescriptorProto message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                EnumDescriptorProto.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes an EnumDescriptorProto message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.protobuf.EnumDescriptorProto
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.protobuf.EnumDescriptorProto} EnumDescriptorProto
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                EnumDescriptorProto.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.EnumDescriptorProto();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1: {
                                message.name = reader.string();
                                break;
                            }
                        case 2: {
                                if (!(message.value && message.value.length))
                                    message.value = [];
                                message.value.push($root.google.protobuf.EnumValueDescriptorProto.decode(reader, reader.uint32()));
                                break;
                            }
                        case 3: {
                                message.options = $root.google.protobuf.EnumOptions.decode(reader, reader.uint32());
                                break;
                            }
                        case 4: {
                                if (!(message.reservedRange && message.reservedRange.length))
                                    message.reservedRange = [];
                                message.reservedRange.push($root.google.protobuf.EnumDescriptorProto.EnumReservedRange.decode(reader, reader.uint32()));
                                break;
                            }
                        case 5: {
                                if (!(message.reservedName && message.reservedName.length))
                                    message.reservedName = [];
                                message.reservedName.push(reader.string());
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes an EnumDescriptorProto message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.protobuf.EnumDescriptorProto
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.protobuf.EnumDescriptorProto} EnumDescriptorProto
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                EnumDescriptorProto.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies an EnumDescriptorProto message.
                 * @function verify
                 * @memberof google.protobuf.EnumDescriptorProto
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                EnumDescriptorProto.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.name != null && message.hasOwnProperty("name"))
                        if (!$util.isString(message.name))
                            return "name: string expected";
                    if (message.value != null && message.hasOwnProperty("value")) {
                        if (!Array.isArray(message.value))
                            return "value: array expected";
                        for (var i = 0; i < message.value.length; ++i) {
                            var error = $root.google.protobuf.EnumValueDescriptorProto.verify(message.value[i]);
                            if (error)
                                return "value." + error;
                        }
                    }
                    if (message.options != null && message.hasOwnProperty("options")) {
                        var error = $root.google.protobuf.EnumOptions.verify(message.options);
                        if (error)
                            return "options." + error;
                    }
                    if (message.reservedRange != null && message.hasOwnProperty("reservedRange")) {
                        if (!Array.isArray(message.reservedRange))
                            return "reservedRange: array expected";
                        for (var i = 0; i < message.reservedRange.length; ++i) {
                            var error = $root.google.protobuf.EnumDescriptorProto.EnumReservedRange.verify(message.reservedRange[i]);
                            if (error)
                                return "reservedRange." + error;
                        }
                    }
                    if (message.reservedName != null && message.hasOwnProperty("reservedName")) {
                        if (!Array.isArray(message.reservedName))
                            return "reservedName: array expected";
                        for (var i = 0; i < message.reservedName.length; ++i)
                            if (!$util.isString(message.reservedName[i]))
                                return "reservedName: string[] expected";
                    }
                    return null;
                };
    
                /**
                 * Creates an EnumDescriptorProto message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.protobuf.EnumDescriptorProto
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.protobuf.EnumDescriptorProto} EnumDescriptorProto
                 */
                EnumDescriptorProto.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.protobuf.EnumDescriptorProto)
                        return object;
                    var message = new $root.google.protobuf.EnumDescriptorProto();
                    if (object.name != null)
                        message.name = String(object.name);
                    if (object.value) {
                        if (!Array.isArray(object.value))
                            throw TypeError(".google.protobuf.EnumDescriptorProto.value: array expected");
                        message.value = [];
                        for (var i = 0; i < object.value.length; ++i) {
                            if (typeof object.value[i] !== "object")
                                throw TypeError(".google.protobuf.EnumDescriptorProto.value: object expected");
                            message.value[i] = $root.google.protobuf.EnumValueDescriptorProto.fromObject(object.value[i]);
                        }
                    }
                    if (object.options != null) {
                        if (typeof object.options !== "object")
                            throw TypeError(".google.protobuf.EnumDescriptorProto.options: object expected");
                        message.options = $root.google.protobuf.EnumOptions.fromObject(object.options);
                    }
                    if (object.reservedRange) {
                        if (!Array.isArray(object.reservedRange))
                            throw TypeError(".google.protobuf.EnumDescriptorProto.reservedRange: array expected");
                        message.reservedRange = [];
                        for (var i = 0; i < object.reservedRange.length; ++i) {
                            if (typeof object.reservedRange[i] !== "object")
                                throw TypeError(".google.protobuf.EnumDescriptorProto.reservedRange: object expected");
                            message.reservedRange[i] = $root.google.protobuf.EnumDescriptorProto.EnumReservedRange.fromObject(object.reservedRange[i]);
                        }
                    }
                    if (object.reservedName) {
                        if (!Array.isArray(object.reservedName))
                            throw TypeError(".google.protobuf.EnumDescriptorProto.reservedName: array expected");
                        message.reservedName = [];
                        for (var i = 0; i < object.reservedName.length; ++i)
                            message.reservedName[i] = String(object.reservedName[i]);
                    }
                    return message;
                };
    
                /**
                 * Creates a plain object from an EnumDescriptorProto message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.protobuf.EnumDescriptorProto
                 * @static
                 * @param {google.protobuf.EnumDescriptorProto} message EnumDescriptorProto
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                EnumDescriptorProto.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.arrays || options.defaults) {
                        object.value = [];
                        object.reservedRange = [];
                        object.reservedName = [];
                    }
                    if (options.defaults) {
                        object.name = "";
                        object.options = null;
                    }
                    if (message.name != null && message.hasOwnProperty("name"))
                        object.name = message.name;
                    if (message.value && message.value.length) {
                        object.value = [];
                        for (var j = 0; j < message.value.length; ++j)
                            object.value[j] = $root.google.protobuf.EnumValueDescriptorProto.toObject(message.value[j], options);
                    }
                    if (message.options != null && message.hasOwnProperty("options"))
                        object.options = $root.google.protobuf.EnumOptions.toObject(message.options, options);
                    if (message.reservedRange && message.reservedRange.length) {
                        object.reservedRange = [];
                        for (var j = 0; j < message.reservedRange.length; ++j)
                            object.reservedRange[j] = $root.google.protobuf.EnumDescriptorProto.EnumReservedRange.toObject(message.reservedRange[j], options);
                    }
                    if (message.reservedName && message.reservedName.length) {
                        object.reservedName = [];
                        for (var j = 0; j < message.reservedName.length; ++j)
                            object.reservedName[j] = message.reservedName[j];
                    }
                    return object;
                };
    
                /**
                 * Converts this EnumDescriptorProto to JSON.
                 * @function toJSON
                 * @memberof google.protobuf.EnumDescriptorProto
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                EnumDescriptorProto.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for EnumDescriptorProto
                 * @function getTypeUrl
                 * @memberof google.protobuf.EnumDescriptorProto
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                EnumDescriptorProto.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.protobuf.EnumDescriptorProto";
                };
    
                EnumDescriptorProto.EnumReservedRange = (function() {
    
                    /**
                     * Properties of an EnumReservedRange.
                     * @memberof google.protobuf.EnumDescriptorProto
                     * @interface IEnumReservedRange
                     * @property {number|null} [start] EnumReservedRange start
                     * @property {number|null} [end] EnumReservedRange end
                     */
    
                    /**
                     * Constructs a new EnumReservedRange.
                     * @memberof google.protobuf.EnumDescriptorProto
                     * @classdesc Represents an EnumReservedRange.
                     * @implements IEnumReservedRange
                     * @constructor
                     * @param {google.protobuf.EnumDescriptorProto.IEnumReservedRange=} [properties] Properties to set
                     */
                    function EnumReservedRange(properties) {
                        if (properties)
                            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                if (properties[keys[i]] != null)
                                    this[keys[i]] = properties[keys[i]];
                    }
    
                    /**
                     * EnumReservedRange start.
                     * @member {number} start
                     * @memberof google.protobuf.EnumDescriptorProto.EnumReservedRange
                     * @instance
                     */
                    EnumReservedRange.prototype.start = 0;
    
                    /**
                     * EnumReservedRange end.
                     * @member {number} end
                     * @memberof google.protobuf.EnumDescriptorProto.EnumReservedRange
                     * @instance
                     */
                    EnumReservedRange.prototype.end = 0;
    
                    /**
                     * Creates a new EnumReservedRange instance using the specified properties.
                     * @function create
                     * @memberof google.protobuf.EnumDescriptorProto.EnumReservedRange
                     * @static
                     * @param {google.protobuf.EnumDescriptorProto.IEnumReservedRange=} [properties] Properties to set
                     * @returns {google.protobuf.EnumDescriptorProto.EnumReservedRange} EnumReservedRange instance
                     */
                    EnumReservedRange.create = function create(properties) {
                        return new EnumReservedRange(properties);
                    };
    
                    /**
                     * Encodes the specified EnumReservedRange message. Does not implicitly {@link google.protobuf.EnumDescriptorProto.EnumReservedRange.verify|verify} messages.
                     * @function encode
                     * @memberof google.protobuf.EnumDescriptorProto.EnumReservedRange
                     * @static
                     * @param {google.protobuf.EnumDescriptorProto.IEnumReservedRange} message EnumReservedRange message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    EnumReservedRange.encode = function encode(message, writer) {
                        if (!writer)
                            writer = $Writer.create();
                        if (message.start != null && Object.hasOwnProperty.call(message, "start"))
                            writer.uint32(/* id 1, wireType 0 =*/8).int32(message.start);
                        if (message.end != null && Object.hasOwnProperty.call(message, "end"))
                            writer.uint32(/* id 2, wireType 0 =*/16).int32(message.end);
                        return writer;
                    };
    
                    /**
                     * Encodes the specified EnumReservedRange message, length delimited. Does not implicitly {@link google.protobuf.EnumDescriptorProto.EnumReservedRange.verify|verify} messages.
                     * @function encodeDelimited
                     * @memberof google.protobuf.EnumDescriptorProto.EnumReservedRange
                     * @static
                     * @param {google.protobuf.EnumDescriptorProto.IEnumReservedRange} message EnumReservedRange message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    EnumReservedRange.encodeDelimited = function encodeDelimited(message, writer) {
                        return this.encode(message, writer).ldelim();
                    };
    
                    /**
                     * Decodes an EnumReservedRange message from the specified reader or buffer.
                     * @function decode
                     * @memberof google.protobuf.EnumDescriptorProto.EnumReservedRange
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @param {number} [length] Message length if known beforehand
                     * @returns {google.protobuf.EnumDescriptorProto.EnumReservedRange} EnumReservedRange
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    EnumReservedRange.decode = function decode(reader, length) {
                        if (!(reader instanceof $Reader))
                            reader = $Reader.create(reader);
                        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.EnumDescriptorProto.EnumReservedRange();
                        while (reader.pos < end) {
                            var tag = reader.uint32();
                            switch (tag >>> 3) {
                            case 1: {
                                    message.start = reader.int32();
                                    break;
                                }
                            case 2: {
                                    message.end = reader.int32();
                                    break;
                                }
                            default:
                                reader.skipType(tag & 7);
                                break;
                            }
                        }
                        return message;
                    };
    
                    /**
                     * Decodes an EnumReservedRange message from the specified reader or buffer, length delimited.
                     * @function decodeDelimited
                     * @memberof google.protobuf.EnumDescriptorProto.EnumReservedRange
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @returns {google.protobuf.EnumDescriptorProto.EnumReservedRange} EnumReservedRange
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    EnumReservedRange.decodeDelimited = function decodeDelimited(reader) {
                        if (!(reader instanceof $Reader))
                            reader = new $Reader(reader);
                        return this.decode(reader, reader.uint32());
                    };
    
                    /**
                     * Verifies an EnumReservedRange message.
                     * @function verify
                     * @memberof google.protobuf.EnumDescriptorProto.EnumReservedRange
                     * @static
                     * @param {Object.<string,*>} message Plain object to verify
                     * @returns {string|null} `null` if valid, otherwise the reason why it is not
                     */
                    EnumReservedRange.verify = function verify(message) {
                        if (typeof message !== "object" || message === null)
                            return "object expected";
                        if (message.start != null && message.hasOwnProperty("start"))
                            if (!$util.isInteger(message.start))
                                return "start: integer expected";
                        if (message.end != null && message.hasOwnProperty("end"))
                            if (!$util.isInteger(message.end))
                                return "end: integer expected";
                        return null;
                    };
    
                    /**
                     * Creates an EnumReservedRange message from a plain object. Also converts values to their respective internal types.
                     * @function fromObject
                     * @memberof google.protobuf.EnumDescriptorProto.EnumReservedRange
                     * @static
                     * @param {Object.<string,*>} object Plain object
                     * @returns {google.protobuf.EnumDescriptorProto.EnumReservedRange} EnumReservedRange
                     */
                    EnumReservedRange.fromObject = function fromObject(object) {
                        if (object instanceof $root.google.protobuf.EnumDescriptorProto.EnumReservedRange)
                            return object;
                        var message = new $root.google.protobuf.EnumDescriptorProto.EnumReservedRange();
                        if (object.start != null)
                            message.start = object.start | 0;
                        if (object.end != null)
                            message.end = object.end | 0;
                        return message;
                    };
    
                    /**
                     * Creates a plain object from an EnumReservedRange message. Also converts values to other types if specified.
                     * @function toObject
                     * @memberof google.protobuf.EnumDescriptorProto.EnumReservedRange
                     * @static
                     * @param {google.protobuf.EnumDescriptorProto.EnumReservedRange} message EnumReservedRange
                     * @param {$protobuf.IConversionOptions} [options] Conversion options
                     * @returns {Object.<string,*>} Plain object
                     */
                    EnumReservedRange.toObject = function toObject(message, options) {
                        if (!options)
                            options = {};
                        var object = {};
                        if (options.defaults) {
                            object.start = 0;
                            object.end = 0;
                        }
                        if (message.start != null && message.hasOwnProperty("start"))
                            object.start = message.start;
                        if (message.end != null && message.hasOwnProperty("end"))
                            object.end = message.end;
                        return object;
                    };
    
                    /**
                     * Converts this EnumReservedRange to JSON.
                     * @function toJSON
                     * @memberof google.protobuf.EnumDescriptorProto.EnumReservedRange
                     * @instance
                     * @returns {Object.<string,*>} JSON object
                     */
                    EnumReservedRange.prototype.toJSON = function toJSON() {
                        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                    };
    
                    /**
                     * Gets the default type url for EnumReservedRange
                     * @function getTypeUrl
                     * @memberof google.protobuf.EnumDescriptorProto.EnumReservedRange
                     * @static
                     * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                     * @returns {string} The default type url
                     */
                    EnumReservedRange.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                        if (typeUrlPrefix === undefined) {
                            typeUrlPrefix = "type.googleapis.com";
                        }
                        return typeUrlPrefix + "/google.protobuf.EnumDescriptorProto.EnumReservedRange";
                    };
    
                    return EnumReservedRange;
                })();
    
                return EnumDescriptorProto;
            })();
    
            protobuf.EnumValueDescriptorProto = (function() {
    
                /**
                 * Properties of an EnumValueDescriptorProto.
                 * @memberof google.protobuf
                 * @interface IEnumValueDescriptorProto
                 * @property {string|null} [name] EnumValueDescriptorProto name
                 * @property {number|null} [number] EnumValueDescriptorProto number
                 * @property {google.protobuf.IEnumValueOptions|null} [options] EnumValueDescriptorProto options
                 */
    
                /**
                 * Constructs a new EnumValueDescriptorProto.
                 * @memberof google.protobuf
                 * @classdesc Represents an EnumValueDescriptorProto.
                 * @implements IEnumValueDescriptorProto
                 * @constructor
                 * @param {google.protobuf.IEnumValueDescriptorProto=} [properties] Properties to set
                 */
                function EnumValueDescriptorProto(properties) {
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * EnumValueDescriptorProto name.
                 * @member {string} name
                 * @memberof google.protobuf.EnumValueDescriptorProto
                 * @instance
                 */
                EnumValueDescriptorProto.prototype.name = "";
    
                /**
                 * EnumValueDescriptorProto number.
                 * @member {number} number
                 * @memberof google.protobuf.EnumValueDescriptorProto
                 * @instance
                 */
                EnumValueDescriptorProto.prototype.number = 0;
    
                /**
                 * EnumValueDescriptorProto options.
                 * @member {google.protobuf.IEnumValueOptions|null|undefined} options
                 * @memberof google.protobuf.EnumValueDescriptorProto
                 * @instance
                 */
                EnumValueDescriptorProto.prototype.options = null;
    
                /**
                 * Creates a new EnumValueDescriptorProto instance using the specified properties.
                 * @function create
                 * @memberof google.protobuf.EnumValueDescriptorProto
                 * @static
                 * @param {google.protobuf.IEnumValueDescriptorProto=} [properties] Properties to set
                 * @returns {google.protobuf.EnumValueDescriptorProto} EnumValueDescriptorProto instance
                 */
                EnumValueDescriptorProto.create = function create(properties) {
                    return new EnumValueDescriptorProto(properties);
                };
    
                /**
                 * Encodes the specified EnumValueDescriptorProto message. Does not implicitly {@link google.protobuf.EnumValueDescriptorProto.verify|verify} messages.
                 * @function encode
                 * @memberof google.protobuf.EnumValueDescriptorProto
                 * @static
                 * @param {google.protobuf.IEnumValueDescriptorProto} message EnumValueDescriptorProto message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                EnumValueDescriptorProto.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                        writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                    if (message.number != null && Object.hasOwnProperty.call(message, "number"))
                        writer.uint32(/* id 2, wireType 0 =*/16).int32(message.number);
                    if (message.options != null && Object.hasOwnProperty.call(message, "options"))
                        $root.google.protobuf.EnumValueOptions.encode(message.options, writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();
                    return writer;
                };
    
                /**
                 * Encodes the specified EnumValueDescriptorProto message, length delimited. Does not implicitly {@link google.protobuf.EnumValueDescriptorProto.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.protobuf.EnumValueDescriptorProto
                 * @static
                 * @param {google.protobuf.IEnumValueDescriptorProto} message EnumValueDescriptorProto message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                EnumValueDescriptorProto.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes an EnumValueDescriptorProto message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.protobuf.EnumValueDescriptorProto
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.protobuf.EnumValueDescriptorProto} EnumValueDescriptorProto
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                EnumValueDescriptorProto.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.EnumValueDescriptorProto();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1: {
                                message.name = reader.string();
                                break;
                            }
                        case 2: {
                                message.number = reader.int32();
                                break;
                            }
                        case 3: {
                                message.options = $root.google.protobuf.EnumValueOptions.decode(reader, reader.uint32());
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes an EnumValueDescriptorProto message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.protobuf.EnumValueDescriptorProto
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.protobuf.EnumValueDescriptorProto} EnumValueDescriptorProto
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                EnumValueDescriptorProto.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies an EnumValueDescriptorProto message.
                 * @function verify
                 * @memberof google.protobuf.EnumValueDescriptorProto
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                EnumValueDescriptorProto.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.name != null && message.hasOwnProperty("name"))
                        if (!$util.isString(message.name))
                            return "name: string expected";
                    if (message.number != null && message.hasOwnProperty("number"))
                        if (!$util.isInteger(message.number))
                            return "number: integer expected";
                    if (message.options != null && message.hasOwnProperty("options")) {
                        var error = $root.google.protobuf.EnumValueOptions.verify(message.options);
                        if (error)
                            return "options." + error;
                    }
                    return null;
                };
    
                /**
                 * Creates an EnumValueDescriptorProto message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.protobuf.EnumValueDescriptorProto
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.protobuf.EnumValueDescriptorProto} EnumValueDescriptorProto
                 */
                EnumValueDescriptorProto.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.protobuf.EnumValueDescriptorProto)
                        return object;
                    var message = new $root.google.protobuf.EnumValueDescriptorProto();
                    if (object.name != null)
                        message.name = String(object.name);
                    if (object.number != null)
                        message.number = object.number | 0;
                    if (object.options != null) {
                        if (typeof object.options !== "object")
                            throw TypeError(".google.protobuf.EnumValueDescriptorProto.options: object expected");
                        message.options = $root.google.protobuf.EnumValueOptions.fromObject(object.options);
                    }
                    return message;
                };
    
                /**
                 * Creates a plain object from an EnumValueDescriptorProto message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.protobuf.EnumValueDescriptorProto
                 * @static
                 * @param {google.protobuf.EnumValueDescriptorProto} message EnumValueDescriptorProto
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                EnumValueDescriptorProto.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.defaults) {
                        object.name = "";
                        object.number = 0;
                        object.options = null;
                    }
                    if (message.name != null && message.hasOwnProperty("name"))
                        object.name = message.name;
                    if (message.number != null && message.hasOwnProperty("number"))
                        object.number = message.number;
                    if (message.options != null && message.hasOwnProperty("options"))
                        object.options = $root.google.protobuf.EnumValueOptions.toObject(message.options, options);
                    return object;
                };
    
                /**
                 * Converts this EnumValueDescriptorProto to JSON.
                 * @function toJSON
                 * @memberof google.protobuf.EnumValueDescriptorProto
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                EnumValueDescriptorProto.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for EnumValueDescriptorProto
                 * @function getTypeUrl
                 * @memberof google.protobuf.EnumValueDescriptorProto
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                EnumValueDescriptorProto.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.protobuf.EnumValueDescriptorProto";
                };
    
                return EnumValueDescriptorProto;
            })();
    
            protobuf.ServiceDescriptorProto = (function() {
    
                /**
                 * Properties of a ServiceDescriptorProto.
                 * @memberof google.protobuf
                 * @interface IServiceDescriptorProto
                 * @property {string|null} [name] ServiceDescriptorProto name
                 * @property {Array.<google.protobuf.IMethodDescriptorProto>|null} [method] ServiceDescriptorProto method
                 * @property {google.protobuf.IServiceOptions|null} [options] ServiceDescriptorProto options
                 */
    
                /**
                 * Constructs a new ServiceDescriptorProto.
                 * @memberof google.protobuf
                 * @classdesc Represents a ServiceDescriptorProto.
                 * @implements IServiceDescriptorProto
                 * @constructor
                 * @param {google.protobuf.IServiceDescriptorProto=} [properties] Properties to set
                 */
                function ServiceDescriptorProto(properties) {
                    this.method = [];
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * ServiceDescriptorProto name.
                 * @member {string} name
                 * @memberof google.protobuf.ServiceDescriptorProto
                 * @instance
                 */
                ServiceDescriptorProto.prototype.name = "";
    
                /**
                 * ServiceDescriptorProto method.
                 * @member {Array.<google.protobuf.IMethodDescriptorProto>} method
                 * @memberof google.protobuf.ServiceDescriptorProto
                 * @instance
                 */
                ServiceDescriptorProto.prototype.method = $util.emptyArray;
    
                /**
                 * ServiceDescriptorProto options.
                 * @member {google.protobuf.IServiceOptions|null|undefined} options
                 * @memberof google.protobuf.ServiceDescriptorProto
                 * @instance
                 */
                ServiceDescriptorProto.prototype.options = null;
    
                /**
                 * Creates a new ServiceDescriptorProto instance using the specified properties.
                 * @function create
                 * @memberof google.protobuf.ServiceDescriptorProto
                 * @static
                 * @param {google.protobuf.IServiceDescriptorProto=} [properties] Properties to set
                 * @returns {google.protobuf.ServiceDescriptorProto} ServiceDescriptorProto instance
                 */
                ServiceDescriptorProto.create = function create(properties) {
                    return new ServiceDescriptorProto(properties);
                };
    
                /**
                 * Encodes the specified ServiceDescriptorProto message. Does not implicitly {@link google.protobuf.ServiceDescriptorProto.verify|verify} messages.
                 * @function encode
                 * @memberof google.protobuf.ServiceDescriptorProto
                 * @static
                 * @param {google.protobuf.IServiceDescriptorProto} message ServiceDescriptorProto message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                ServiceDescriptorProto.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                        writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                    if (message.method != null && message.method.length)
                        for (var i = 0; i < message.method.length; ++i)
                            $root.google.protobuf.MethodDescriptorProto.encode(message.method[i], writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                    if (message.options != null && Object.hasOwnProperty.call(message, "options"))
                        $root.google.protobuf.ServiceOptions.encode(message.options, writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();
                    return writer;
                };
    
                /**
                 * Encodes the specified ServiceDescriptorProto message, length delimited. Does not implicitly {@link google.protobuf.ServiceDescriptorProto.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.protobuf.ServiceDescriptorProto
                 * @static
                 * @param {google.protobuf.IServiceDescriptorProto} message ServiceDescriptorProto message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                ServiceDescriptorProto.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a ServiceDescriptorProto message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.protobuf.ServiceDescriptorProto
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.protobuf.ServiceDescriptorProto} ServiceDescriptorProto
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                ServiceDescriptorProto.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.ServiceDescriptorProto();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1: {
                                message.name = reader.string();
                                break;
                            }
                        case 2: {
                                if (!(message.method && message.method.length))
                                    message.method = [];
                                message.method.push($root.google.protobuf.MethodDescriptorProto.decode(reader, reader.uint32()));
                                break;
                            }
                        case 3: {
                                message.options = $root.google.protobuf.ServiceOptions.decode(reader, reader.uint32());
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a ServiceDescriptorProto message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.protobuf.ServiceDescriptorProto
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.protobuf.ServiceDescriptorProto} ServiceDescriptorProto
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                ServiceDescriptorProto.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a ServiceDescriptorProto message.
                 * @function verify
                 * @memberof google.protobuf.ServiceDescriptorProto
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                ServiceDescriptorProto.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.name != null && message.hasOwnProperty("name"))
                        if (!$util.isString(message.name))
                            return "name: string expected";
                    if (message.method != null && message.hasOwnProperty("method")) {
                        if (!Array.isArray(message.method))
                            return "method: array expected";
                        for (var i = 0; i < message.method.length; ++i) {
                            var error = $root.google.protobuf.MethodDescriptorProto.verify(message.method[i]);
                            if (error)
                                return "method." + error;
                        }
                    }
                    if (message.options != null && message.hasOwnProperty("options")) {
                        var error = $root.google.protobuf.ServiceOptions.verify(message.options);
                        if (error)
                            return "options." + error;
                    }
                    return null;
                };
    
                /**
                 * Creates a ServiceDescriptorProto message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.protobuf.ServiceDescriptorProto
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.protobuf.ServiceDescriptorProto} ServiceDescriptorProto
                 */
                ServiceDescriptorProto.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.protobuf.ServiceDescriptorProto)
                        return object;
                    var message = new $root.google.protobuf.ServiceDescriptorProto();
                    if (object.name != null)
                        message.name = String(object.name);
                    if (object.method) {
                        if (!Array.isArray(object.method))
                            throw TypeError(".google.protobuf.ServiceDescriptorProto.method: array expected");
                        message.method = [];
                        for (var i = 0; i < object.method.length; ++i) {
                            if (typeof object.method[i] !== "object")
                                throw TypeError(".google.protobuf.ServiceDescriptorProto.method: object expected");
                            message.method[i] = $root.google.protobuf.MethodDescriptorProto.fromObject(object.method[i]);
                        }
                    }
                    if (object.options != null) {
                        if (typeof object.options !== "object")
                            throw TypeError(".google.protobuf.ServiceDescriptorProto.options: object expected");
                        message.options = $root.google.protobuf.ServiceOptions.fromObject(object.options);
                    }
                    return message;
                };
    
                /**
                 * Creates a plain object from a ServiceDescriptorProto message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.protobuf.ServiceDescriptorProto
                 * @static
                 * @param {google.protobuf.ServiceDescriptorProto} message ServiceDescriptorProto
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                ServiceDescriptorProto.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.arrays || options.defaults)
                        object.method = [];
                    if (options.defaults) {
                        object.name = "";
                        object.options = null;
                    }
                    if (message.name != null && message.hasOwnProperty("name"))
                        object.name = message.name;
                    if (message.method && message.method.length) {
                        object.method = [];
                        for (var j = 0; j < message.method.length; ++j)
                            object.method[j] = $root.google.protobuf.MethodDescriptorProto.toObject(message.method[j], options);
                    }
                    if (message.options != null && message.hasOwnProperty("options"))
                        object.options = $root.google.protobuf.ServiceOptions.toObject(message.options, options);
                    return object;
                };
    
                /**
                 * Converts this ServiceDescriptorProto to JSON.
                 * @function toJSON
                 * @memberof google.protobuf.ServiceDescriptorProto
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                ServiceDescriptorProto.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for ServiceDescriptorProto
                 * @function getTypeUrl
                 * @memberof google.protobuf.ServiceDescriptorProto
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                ServiceDescriptorProto.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.protobuf.ServiceDescriptorProto";
                };
    
                return ServiceDescriptorProto;
            })();
    
            protobuf.MethodDescriptorProto = (function() {
    
                /**
                 * Properties of a MethodDescriptorProto.
                 * @memberof google.protobuf
                 * @interface IMethodDescriptorProto
                 * @property {string|null} [name] MethodDescriptorProto name
                 * @property {string|null} [inputType] MethodDescriptorProto inputType
                 * @property {string|null} [outputType] MethodDescriptorProto outputType
                 * @property {google.protobuf.IMethodOptions|null} [options] MethodDescriptorProto options
                 * @property {boolean|null} [clientStreaming] MethodDescriptorProto clientStreaming
                 * @property {boolean|null} [serverStreaming] MethodDescriptorProto serverStreaming
                 */
    
                /**
                 * Constructs a new MethodDescriptorProto.
                 * @memberof google.protobuf
                 * @classdesc Represents a MethodDescriptorProto.
                 * @implements IMethodDescriptorProto
                 * @constructor
                 * @param {google.protobuf.IMethodDescriptorProto=} [properties] Properties to set
                 */
                function MethodDescriptorProto(properties) {
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * MethodDescriptorProto name.
                 * @member {string} name
                 * @memberof google.protobuf.MethodDescriptorProto
                 * @instance
                 */
                MethodDescriptorProto.prototype.name = "";
    
                /**
                 * MethodDescriptorProto inputType.
                 * @member {string} inputType
                 * @memberof google.protobuf.MethodDescriptorProto
                 * @instance
                 */
                MethodDescriptorProto.prototype.inputType = "";
    
                /**
                 * MethodDescriptorProto outputType.
                 * @member {string} outputType
                 * @memberof google.protobuf.MethodDescriptorProto
                 * @instance
                 */
                MethodDescriptorProto.prototype.outputType = "";
    
                /**
                 * MethodDescriptorProto options.
                 * @member {google.protobuf.IMethodOptions|null|undefined} options
                 * @memberof google.protobuf.MethodDescriptorProto
                 * @instance
                 */
                MethodDescriptorProto.prototype.options = null;
    
                /**
                 * MethodDescriptorProto clientStreaming.
                 * @member {boolean} clientStreaming
                 * @memberof google.protobuf.MethodDescriptorProto
                 * @instance
                 */
                MethodDescriptorProto.prototype.clientStreaming = false;
    
                /**
                 * MethodDescriptorProto serverStreaming.
                 * @member {boolean} serverStreaming
                 * @memberof google.protobuf.MethodDescriptorProto
                 * @instance
                 */
                MethodDescriptorProto.prototype.serverStreaming = false;
    
                /**
                 * Creates a new MethodDescriptorProto instance using the specified properties.
                 * @function create
                 * @memberof google.protobuf.MethodDescriptorProto
                 * @static
                 * @param {google.protobuf.IMethodDescriptorProto=} [properties] Properties to set
                 * @returns {google.protobuf.MethodDescriptorProto} MethodDescriptorProto instance
                 */
                MethodDescriptorProto.create = function create(properties) {
                    return new MethodDescriptorProto(properties);
                };
    
                /**
                 * Encodes the specified MethodDescriptorProto message. Does not implicitly {@link google.protobuf.MethodDescriptorProto.verify|verify} messages.
                 * @function encode
                 * @memberof google.protobuf.MethodDescriptorProto
                 * @static
                 * @param {google.protobuf.IMethodDescriptorProto} message MethodDescriptorProto message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                MethodDescriptorProto.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                        writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                    if (message.inputType != null && Object.hasOwnProperty.call(message, "inputType"))
                        writer.uint32(/* id 2, wireType 2 =*/18).string(message.inputType);
                    if (message.outputType != null && Object.hasOwnProperty.call(message, "outputType"))
                        writer.uint32(/* id 3, wireType 2 =*/26).string(message.outputType);
                    if (message.options != null && Object.hasOwnProperty.call(message, "options"))
                        $root.google.protobuf.MethodOptions.encode(message.options, writer.uint32(/* id 4, wireType 2 =*/34).fork()).ldelim();
                    if (message.clientStreaming != null && Object.hasOwnProperty.call(message, "clientStreaming"))
                        writer.uint32(/* id 5, wireType 0 =*/40).bool(message.clientStreaming);
                    if (message.serverStreaming != null && Object.hasOwnProperty.call(message, "serverStreaming"))
                        writer.uint32(/* id 6, wireType 0 =*/48).bool(message.serverStreaming);
                    return writer;
                };
    
                /**
                 * Encodes the specified MethodDescriptorProto message, length delimited. Does not implicitly {@link google.protobuf.MethodDescriptorProto.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.protobuf.MethodDescriptorProto
                 * @static
                 * @param {google.protobuf.IMethodDescriptorProto} message MethodDescriptorProto message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                MethodDescriptorProto.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a MethodDescriptorProto message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.protobuf.MethodDescriptorProto
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.protobuf.MethodDescriptorProto} MethodDescriptorProto
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                MethodDescriptorProto.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.MethodDescriptorProto();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1: {
                                message.name = reader.string();
                                break;
                            }
                        case 2: {
                                message.inputType = reader.string();
                                break;
                            }
                        case 3: {
                                message.outputType = reader.string();
                                break;
                            }
                        case 4: {
                                message.options = $root.google.protobuf.MethodOptions.decode(reader, reader.uint32());
                                break;
                            }
                        case 5: {
                                message.clientStreaming = reader.bool();
                                break;
                            }
                        case 6: {
                                message.serverStreaming = reader.bool();
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a MethodDescriptorProto message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.protobuf.MethodDescriptorProto
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.protobuf.MethodDescriptorProto} MethodDescriptorProto
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                MethodDescriptorProto.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a MethodDescriptorProto message.
                 * @function verify
                 * @memberof google.protobuf.MethodDescriptorProto
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                MethodDescriptorProto.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.name != null && message.hasOwnProperty("name"))
                        if (!$util.isString(message.name))
                            return "name: string expected";
                    if (message.inputType != null && message.hasOwnProperty("inputType"))
                        if (!$util.isString(message.inputType))
                            return "inputType: string expected";
                    if (message.outputType != null && message.hasOwnProperty("outputType"))
                        if (!$util.isString(message.outputType))
                            return "outputType: string expected";
                    if (message.options != null && message.hasOwnProperty("options")) {
                        var error = $root.google.protobuf.MethodOptions.verify(message.options);
                        if (error)
                            return "options." + error;
                    }
                    if (message.clientStreaming != null && message.hasOwnProperty("clientStreaming"))
                        if (typeof message.clientStreaming !== "boolean")
                            return "clientStreaming: boolean expected";
                    if (message.serverStreaming != null && message.hasOwnProperty("serverStreaming"))
                        if (typeof message.serverStreaming !== "boolean")
                            return "serverStreaming: boolean expected";
                    return null;
                };
    
                /**
                 * Creates a MethodDescriptorProto message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.protobuf.MethodDescriptorProto
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.protobuf.MethodDescriptorProto} MethodDescriptorProto
                 */
                MethodDescriptorProto.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.protobuf.MethodDescriptorProto)
                        return object;
                    var message = new $root.google.protobuf.MethodDescriptorProto();
                    if (object.name != null)
                        message.name = String(object.name);
                    if (object.inputType != null)
                        message.inputType = String(object.inputType);
                    if (object.outputType != null)
                        message.outputType = String(object.outputType);
                    if (object.options != null) {
                        if (typeof object.options !== "object")
                            throw TypeError(".google.protobuf.MethodDescriptorProto.options: object expected");
                        message.options = $root.google.protobuf.MethodOptions.fromObject(object.options);
                    }
                    if (object.clientStreaming != null)
                        message.clientStreaming = Boolean(object.clientStreaming);
                    if (object.serverStreaming != null)
                        message.serverStreaming = Boolean(object.serverStreaming);
                    return message;
                };
    
                /**
                 * Creates a plain object from a MethodDescriptorProto message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.protobuf.MethodDescriptorProto
                 * @static
                 * @param {google.protobuf.MethodDescriptorProto} message MethodDescriptorProto
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                MethodDescriptorProto.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.defaults) {
                        object.name = "";
                        object.inputType = "";
                        object.outputType = "";
                        object.options = null;
                        object.clientStreaming = false;
                        object.serverStreaming = false;
                    }
                    if (message.name != null && message.hasOwnProperty("name"))
                        object.name = message.name;
                    if (message.inputType != null && message.hasOwnProperty("inputType"))
                        object.inputType = message.inputType;
                    if (message.outputType != null && message.hasOwnProperty("outputType"))
                        object.outputType = message.outputType;
                    if (message.options != null && message.hasOwnProperty("options"))
                        object.options = $root.google.protobuf.MethodOptions.toObject(message.options, options);
                    if (message.clientStreaming != null && message.hasOwnProperty("clientStreaming"))
                        object.clientStreaming = message.clientStreaming;
                    if (message.serverStreaming != null && message.hasOwnProperty("serverStreaming"))
                        object.serverStreaming = message.serverStreaming;
                    return object;
                };
    
                /**
                 * Converts this MethodDescriptorProto to JSON.
                 * @function toJSON
                 * @memberof google.protobuf.MethodDescriptorProto
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                MethodDescriptorProto.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for MethodDescriptorProto
                 * @function getTypeUrl
                 * @memberof google.protobuf.MethodDescriptorProto
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                MethodDescriptorProto.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.protobuf.MethodDescriptorProto";
                };
    
                return MethodDescriptorProto;
            })();
    
            protobuf.FileOptions = (function() {
    
                /**
                 * Properties of a FileOptions.
                 * @memberof google.protobuf
                 * @interface IFileOptions
                 * @property {string|null} [javaPackage] FileOptions javaPackage
                 * @property {string|null} [javaOuterClassname] FileOptions javaOuterClassname
                 * @property {boolean|null} [javaMultipleFiles] FileOptions javaMultipleFiles
                 * @property {boolean|null} [javaGenerateEqualsAndHash] FileOptions javaGenerateEqualsAndHash
                 * @property {boolean|null} [javaStringCheckUtf8] FileOptions javaStringCheckUtf8
                 * @property {google.protobuf.FileOptions.OptimizeMode|null} [optimizeFor] FileOptions optimizeFor
                 * @property {string|null} [goPackage] FileOptions goPackage
                 * @property {boolean|null} [ccGenericServices] FileOptions ccGenericServices
                 * @property {boolean|null} [javaGenericServices] FileOptions javaGenericServices
                 * @property {boolean|null} [pyGenericServices] FileOptions pyGenericServices
                 * @property {boolean|null} [phpGenericServices] FileOptions phpGenericServices
                 * @property {boolean|null} [deprecated] FileOptions deprecated
                 * @property {boolean|null} [ccEnableArenas] FileOptions ccEnableArenas
                 * @property {string|null} [objcClassPrefix] FileOptions objcClassPrefix
                 * @property {string|null} [csharpNamespace] FileOptions csharpNamespace
                 * @property {string|null} [swiftPrefix] FileOptions swiftPrefix
                 * @property {string|null} [phpClassPrefix] FileOptions phpClassPrefix
                 * @property {string|null} [phpNamespace] FileOptions phpNamespace
                 * @property {string|null} [phpMetadataNamespace] FileOptions phpMetadataNamespace
                 * @property {string|null} [rubyPackage] FileOptions rubyPackage
                 * @property {Array.<google.protobuf.IUninterpretedOption>|null} [uninterpretedOption] FileOptions uninterpretedOption
                 * @property {Array.<google.api.IResourceDescriptor>|null} [".google.api.resourceDefinition"] FileOptions .google.api.resourceDefinition
                 */
    
                /**
                 * Constructs a new FileOptions.
                 * @memberof google.protobuf
                 * @classdesc Represents a FileOptions.
                 * @implements IFileOptions
                 * @constructor
                 * @param {google.protobuf.IFileOptions=} [properties] Properties to set
                 */
                function FileOptions(properties) {
                    this.uninterpretedOption = [];
                    this[".google.api.resourceDefinition"] = [];
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * FileOptions javaPackage.
                 * @member {string} javaPackage
                 * @memberof google.protobuf.FileOptions
                 * @instance
                 */
                FileOptions.prototype.javaPackage = "";
    
                /**
                 * FileOptions javaOuterClassname.
                 * @member {string} javaOuterClassname
                 * @memberof google.protobuf.FileOptions
                 * @instance
                 */
                FileOptions.prototype.javaOuterClassname = "";
    
                /**
                 * FileOptions javaMultipleFiles.
                 * @member {boolean} javaMultipleFiles
                 * @memberof google.protobuf.FileOptions
                 * @instance
                 */
                FileOptions.prototype.javaMultipleFiles = false;
    
                /**
                 * FileOptions javaGenerateEqualsAndHash.
                 * @member {boolean} javaGenerateEqualsAndHash
                 * @memberof google.protobuf.FileOptions
                 * @instance
                 */
                FileOptions.prototype.javaGenerateEqualsAndHash = false;
    
                /**
                 * FileOptions javaStringCheckUtf8.
                 * @member {boolean} javaStringCheckUtf8
                 * @memberof google.protobuf.FileOptions
                 * @instance
                 */
                FileOptions.prototype.javaStringCheckUtf8 = false;
    
                /**
                 * FileOptions optimizeFor.
                 * @member {google.protobuf.FileOptions.OptimizeMode} optimizeFor
                 * @memberof google.protobuf.FileOptions
                 * @instance
                 */
                FileOptions.prototype.optimizeFor = 1;
    
                /**
                 * FileOptions goPackage.
                 * @member {string} goPackage
                 * @memberof google.protobuf.FileOptions
                 * @instance
                 */
                FileOptions.prototype.goPackage = "";
    
                /**
                 * FileOptions ccGenericServices.
                 * @member {boolean} ccGenericServices
                 * @memberof google.protobuf.FileOptions
                 * @instance
                 */
                FileOptions.prototype.ccGenericServices = false;
    
                /**
                 * FileOptions javaGenericServices.
                 * @member {boolean} javaGenericServices
                 * @memberof google.protobuf.FileOptions
                 * @instance
                 */
                FileOptions.prototype.javaGenericServices = false;
    
                /**
                 * FileOptions pyGenericServices.
                 * @member {boolean} pyGenericServices
                 * @memberof google.protobuf.FileOptions
                 * @instance
                 */
                FileOptions.prototype.pyGenericServices = false;
    
                /**
                 * FileOptions phpGenericServices.
                 * @member {boolean} phpGenericServices
                 * @memberof google.protobuf.FileOptions
                 * @instance
                 */
                FileOptions.prototype.phpGenericServices = false;
    
                /**
                 * FileOptions deprecated.
                 * @member {boolean} deprecated
                 * @memberof google.protobuf.FileOptions
                 * @instance
                 */
                FileOptions.prototype.deprecated = false;
    
                /**
                 * FileOptions ccEnableArenas.
                 * @member {boolean} ccEnableArenas
                 * @memberof google.protobuf.FileOptions
                 * @instance
                 */
                FileOptions.prototype.ccEnableArenas = true;
    
                /**
                 * FileOptions objcClassPrefix.
                 * @member {string} objcClassPrefix
                 * @memberof google.protobuf.FileOptions
                 * @instance
                 */
                FileOptions.prototype.objcClassPrefix = "";
    
                /**
                 * FileOptions csharpNamespace.
                 * @member {string} csharpNamespace
                 * @memberof google.protobuf.FileOptions
                 * @instance
                 */
                FileOptions.prototype.csharpNamespace = "";
    
                /**
                 * FileOptions swiftPrefix.
                 * @member {string} swiftPrefix
                 * @memberof google.protobuf.FileOptions
                 * @instance
                 */
                FileOptions.prototype.swiftPrefix = "";
    
                /**
                 * FileOptions phpClassPrefix.
                 * @member {string} phpClassPrefix
                 * @memberof google.protobuf.FileOptions
                 * @instance
                 */
                FileOptions.prototype.phpClassPrefix = "";
    
                /**
                 * FileOptions phpNamespace.
                 * @member {string} phpNamespace
                 * @memberof google.protobuf.FileOptions
                 * @instance
                 */
                FileOptions.prototype.phpNamespace = "";
    
                /**
                 * FileOptions phpMetadataNamespace.
                 * @member {string} phpMetadataNamespace
                 * @memberof google.protobuf.FileOptions
                 * @instance
                 */
                FileOptions.prototype.phpMetadataNamespace = "";
    
                /**
                 * FileOptions rubyPackage.
                 * @member {string} rubyPackage
                 * @memberof google.protobuf.FileOptions
                 * @instance
                 */
                FileOptions.prototype.rubyPackage = "";
    
                /**
                 * FileOptions uninterpretedOption.
                 * @member {Array.<google.protobuf.IUninterpretedOption>} uninterpretedOption
                 * @memberof google.protobuf.FileOptions
                 * @instance
                 */
                FileOptions.prototype.uninterpretedOption = $util.emptyArray;
    
                /**
                 * FileOptions .google.api.resourceDefinition.
                 * @member {Array.<google.api.IResourceDescriptor>} .google.api.resourceDefinition
                 * @memberof google.protobuf.FileOptions
                 * @instance
                 */
                FileOptions.prototype[".google.api.resourceDefinition"] = $util.emptyArray;
    
                /**
                 * Creates a new FileOptions instance using the specified properties.
                 * @function create
                 * @memberof google.protobuf.FileOptions
                 * @static
                 * @param {google.protobuf.IFileOptions=} [properties] Properties to set
                 * @returns {google.protobuf.FileOptions} FileOptions instance
                 */
                FileOptions.create = function create(properties) {
                    return new FileOptions(properties);
                };
    
                /**
                 * Encodes the specified FileOptions message. Does not implicitly {@link google.protobuf.FileOptions.verify|verify} messages.
                 * @function encode
                 * @memberof google.protobuf.FileOptions
                 * @static
                 * @param {google.protobuf.IFileOptions} message FileOptions message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                FileOptions.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.javaPackage != null && Object.hasOwnProperty.call(message, "javaPackage"))
                        writer.uint32(/* id 1, wireType 2 =*/10).string(message.javaPackage);
                    if (message.javaOuterClassname != null && Object.hasOwnProperty.call(message, "javaOuterClassname"))
                        writer.uint32(/* id 8, wireType 2 =*/66).string(message.javaOuterClassname);
                    if (message.optimizeFor != null && Object.hasOwnProperty.call(message, "optimizeFor"))
                        writer.uint32(/* id 9, wireType 0 =*/72).int32(message.optimizeFor);
                    if (message.javaMultipleFiles != null && Object.hasOwnProperty.call(message, "javaMultipleFiles"))
                        writer.uint32(/* id 10, wireType 0 =*/80).bool(message.javaMultipleFiles);
                    if (message.goPackage != null && Object.hasOwnProperty.call(message, "goPackage"))
                        writer.uint32(/* id 11, wireType 2 =*/90).string(message.goPackage);
                    if (message.ccGenericServices != null && Object.hasOwnProperty.call(message, "ccGenericServices"))
                        writer.uint32(/* id 16, wireType 0 =*/128).bool(message.ccGenericServices);
                    if (message.javaGenericServices != null && Object.hasOwnProperty.call(message, "javaGenericServices"))
                        writer.uint32(/* id 17, wireType 0 =*/136).bool(message.javaGenericServices);
                    if (message.pyGenericServices != null && Object.hasOwnProperty.call(message, "pyGenericServices"))
                        writer.uint32(/* id 18, wireType 0 =*/144).bool(message.pyGenericServices);
                    if (message.javaGenerateEqualsAndHash != null && Object.hasOwnProperty.call(message, "javaGenerateEqualsAndHash"))
                        writer.uint32(/* id 20, wireType 0 =*/160).bool(message.javaGenerateEqualsAndHash);
                    if (message.deprecated != null && Object.hasOwnProperty.call(message, "deprecated"))
                        writer.uint32(/* id 23, wireType 0 =*/184).bool(message.deprecated);
                    if (message.javaStringCheckUtf8 != null && Object.hasOwnProperty.call(message, "javaStringCheckUtf8"))
                        writer.uint32(/* id 27, wireType 0 =*/216).bool(message.javaStringCheckUtf8);
                    if (message.ccEnableArenas != null && Object.hasOwnProperty.call(message, "ccEnableArenas"))
                        writer.uint32(/* id 31, wireType 0 =*/248).bool(message.ccEnableArenas);
                    if (message.objcClassPrefix != null && Object.hasOwnProperty.call(message, "objcClassPrefix"))
                        writer.uint32(/* id 36, wireType 2 =*/290).string(message.objcClassPrefix);
                    if (message.csharpNamespace != null && Object.hasOwnProperty.call(message, "csharpNamespace"))
                        writer.uint32(/* id 37, wireType 2 =*/298).string(message.csharpNamespace);
                    if (message.swiftPrefix != null && Object.hasOwnProperty.call(message, "swiftPrefix"))
                        writer.uint32(/* id 39, wireType 2 =*/314).string(message.swiftPrefix);
                    if (message.phpClassPrefix != null && Object.hasOwnProperty.call(message, "phpClassPrefix"))
                        writer.uint32(/* id 40, wireType 2 =*/322).string(message.phpClassPrefix);
                    if (message.phpNamespace != null && Object.hasOwnProperty.call(message, "phpNamespace"))
                        writer.uint32(/* id 41, wireType 2 =*/330).string(message.phpNamespace);
                    if (message.phpGenericServices != null && Object.hasOwnProperty.call(message, "phpGenericServices"))
                        writer.uint32(/* id 42, wireType 0 =*/336).bool(message.phpGenericServices);
                    if (message.phpMetadataNamespace != null && Object.hasOwnProperty.call(message, "phpMetadataNamespace"))
                        writer.uint32(/* id 44, wireType 2 =*/354).string(message.phpMetadataNamespace);
                    if (message.rubyPackage != null && Object.hasOwnProperty.call(message, "rubyPackage"))
                        writer.uint32(/* id 45, wireType 2 =*/362).string(message.rubyPackage);
                    if (message.uninterpretedOption != null && message.uninterpretedOption.length)
                        for (var i = 0; i < message.uninterpretedOption.length; ++i)
                            $root.google.protobuf.UninterpretedOption.encode(message.uninterpretedOption[i], writer.uint32(/* id 999, wireType 2 =*/7994).fork()).ldelim();
                    if (message[".google.api.resourceDefinition"] != null && message[".google.api.resourceDefinition"].length)
                        for (var i = 0; i < message[".google.api.resourceDefinition"].length; ++i)
                            $root.google.api.ResourceDescriptor.encode(message[".google.api.resourceDefinition"][i], writer.uint32(/* id 1053, wireType 2 =*/8426).fork()).ldelim();
                    return writer;
                };
    
                /**
                 * Encodes the specified FileOptions message, length delimited. Does not implicitly {@link google.protobuf.FileOptions.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.protobuf.FileOptions
                 * @static
                 * @param {google.protobuf.IFileOptions} message FileOptions message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                FileOptions.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a FileOptions message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.protobuf.FileOptions
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.protobuf.FileOptions} FileOptions
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                FileOptions.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.FileOptions();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1: {
                                message.javaPackage = reader.string();
                                break;
                            }
                        case 8: {
                                message.javaOuterClassname = reader.string();
                                break;
                            }
                        case 10: {
                                message.javaMultipleFiles = reader.bool();
                                break;
                            }
                        case 20: {
                                message.javaGenerateEqualsAndHash = reader.bool();
                                break;
                            }
                        case 27: {
                                message.javaStringCheckUtf8 = reader.bool();
                                break;
                            }
                        case 9: {
                                message.optimizeFor = reader.int32();
                                break;
                            }
                        case 11: {
                                message.goPackage = reader.string();
                                break;
                            }
                        case 16: {
                                message.ccGenericServices = reader.bool();
                                break;
                            }
                        case 17: {
                                message.javaGenericServices = reader.bool();
                                break;
                            }
                        case 18: {
                                message.pyGenericServices = reader.bool();
                                break;
                            }
                        case 42: {
                                message.phpGenericServices = reader.bool();
                                break;
                            }
                        case 23: {
                                message.deprecated = reader.bool();
                                break;
                            }
                        case 31: {
                                message.ccEnableArenas = reader.bool();
                                break;
                            }
                        case 36: {
                                message.objcClassPrefix = reader.string();
                                break;
                            }
                        case 37: {
                                message.csharpNamespace = reader.string();
                                break;
                            }
                        case 39: {
                                message.swiftPrefix = reader.string();
                                break;
                            }
                        case 40: {
                                message.phpClassPrefix = reader.string();
                                break;
                            }
                        case 41: {
                                message.phpNamespace = reader.string();
                                break;
                            }
                        case 44: {
                                message.phpMetadataNamespace = reader.string();
                                break;
                            }
                        case 45: {
                                message.rubyPackage = reader.string();
                                break;
                            }
                        case 999: {
                                if (!(message.uninterpretedOption && message.uninterpretedOption.length))
                                    message.uninterpretedOption = [];
                                message.uninterpretedOption.push($root.google.protobuf.UninterpretedOption.decode(reader, reader.uint32()));
                                break;
                            }
                        case 1053: {
                                if (!(message[".google.api.resourceDefinition"] && message[".google.api.resourceDefinition"].length))
                                    message[".google.api.resourceDefinition"] = [];
                                message[".google.api.resourceDefinition"].push($root.google.api.ResourceDescriptor.decode(reader, reader.uint32()));
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a FileOptions message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.protobuf.FileOptions
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.protobuf.FileOptions} FileOptions
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                FileOptions.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a FileOptions message.
                 * @function verify
                 * @memberof google.protobuf.FileOptions
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                FileOptions.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.javaPackage != null && message.hasOwnProperty("javaPackage"))
                        if (!$util.isString(message.javaPackage))
                            return "javaPackage: string expected";
                    if (message.javaOuterClassname != null && message.hasOwnProperty("javaOuterClassname"))
                        if (!$util.isString(message.javaOuterClassname))
                            return "javaOuterClassname: string expected";
                    if (message.javaMultipleFiles != null && message.hasOwnProperty("javaMultipleFiles"))
                        if (typeof message.javaMultipleFiles !== "boolean")
                            return "javaMultipleFiles: boolean expected";
                    if (message.javaGenerateEqualsAndHash != null && message.hasOwnProperty("javaGenerateEqualsAndHash"))
                        if (typeof message.javaGenerateEqualsAndHash !== "boolean")
                            return "javaGenerateEqualsAndHash: boolean expected";
                    if (message.javaStringCheckUtf8 != null && message.hasOwnProperty("javaStringCheckUtf8"))
                        if (typeof message.javaStringCheckUtf8 !== "boolean")
                            return "javaStringCheckUtf8: boolean expected";
                    if (message.optimizeFor != null && message.hasOwnProperty("optimizeFor"))
                        switch (message.optimizeFor) {
                        default:
                            return "optimizeFor: enum value expected";
                        case 1:
                        case 2:
                        case 3:
                            break;
                        }
                    if (message.goPackage != null && message.hasOwnProperty("goPackage"))
                        if (!$util.isString(message.goPackage))
                            return "goPackage: string expected";
                    if (message.ccGenericServices != null && message.hasOwnProperty("ccGenericServices"))
                        if (typeof message.ccGenericServices !== "boolean")
                            return "ccGenericServices: boolean expected";
                    if (message.javaGenericServices != null && message.hasOwnProperty("javaGenericServices"))
                        if (typeof message.javaGenericServices !== "boolean")
                            return "javaGenericServices: boolean expected";
                    if (message.pyGenericServices != null && message.hasOwnProperty("pyGenericServices"))
                        if (typeof message.pyGenericServices !== "boolean")
                            return "pyGenericServices: boolean expected";
                    if (message.phpGenericServices != null && message.hasOwnProperty("phpGenericServices"))
                        if (typeof message.phpGenericServices !== "boolean")
                            return "phpGenericServices: boolean expected";
                    if (message.deprecated != null && message.hasOwnProperty("deprecated"))
                        if (typeof message.deprecated !== "boolean")
                            return "deprecated: boolean expected";
                    if (message.ccEnableArenas != null && message.hasOwnProperty("ccEnableArenas"))
                        if (typeof message.ccEnableArenas !== "boolean")
                            return "ccEnableArenas: boolean expected";
                    if (message.objcClassPrefix != null && message.hasOwnProperty("objcClassPrefix"))
                        if (!$util.isString(message.objcClassPrefix))
                            return "objcClassPrefix: string expected";
                    if (message.csharpNamespace != null && message.hasOwnProperty("csharpNamespace"))
                        if (!$util.isString(message.csharpNamespace))
                            return "csharpNamespace: string expected";
                    if (message.swiftPrefix != null && message.hasOwnProperty("swiftPrefix"))
                        if (!$util.isString(message.swiftPrefix))
                            return "swiftPrefix: string expected";
                    if (message.phpClassPrefix != null && message.hasOwnProperty("phpClassPrefix"))
                        if (!$util.isString(message.phpClassPrefix))
                            return "phpClassPrefix: string expected";
                    if (message.phpNamespace != null && message.hasOwnProperty("phpNamespace"))
                        if (!$util.isString(message.phpNamespace))
                            return "phpNamespace: string expected";
                    if (message.phpMetadataNamespace != null && message.hasOwnProperty("phpMetadataNamespace"))
                        if (!$util.isString(message.phpMetadataNamespace))
                            return "phpMetadataNamespace: string expected";
                    if (message.rubyPackage != null && message.hasOwnProperty("rubyPackage"))
                        if (!$util.isString(message.rubyPackage))
                            return "rubyPackage: string expected";
                    if (message.uninterpretedOption != null && message.hasOwnProperty("uninterpretedOption")) {
                        if (!Array.isArray(message.uninterpretedOption))
                            return "uninterpretedOption: array expected";
                        for (var i = 0; i < message.uninterpretedOption.length; ++i) {
                            var error = $root.google.protobuf.UninterpretedOption.verify(message.uninterpretedOption[i]);
                            if (error)
                                return "uninterpretedOption." + error;
                        }
                    }
                    if (message[".google.api.resourceDefinition"] != null && message.hasOwnProperty(".google.api.resourceDefinition")) {
                        if (!Array.isArray(message[".google.api.resourceDefinition"]))
                            return ".google.api.resourceDefinition: array expected";
                        for (var i = 0; i < message[".google.api.resourceDefinition"].length; ++i) {
                            var error = $root.google.api.ResourceDescriptor.verify(message[".google.api.resourceDefinition"][i]);
                            if (error)
                                return ".google.api.resourceDefinition." + error;
                        }
                    }
                    return null;
                };
    
                /**
                 * Creates a FileOptions message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.protobuf.FileOptions
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.protobuf.FileOptions} FileOptions
                 */
                FileOptions.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.protobuf.FileOptions)
                        return object;
                    var message = new $root.google.protobuf.FileOptions();
                    if (object.javaPackage != null)
                        message.javaPackage = String(object.javaPackage);
                    if (object.javaOuterClassname != null)
                        message.javaOuterClassname = String(object.javaOuterClassname);
                    if (object.javaMultipleFiles != null)
                        message.javaMultipleFiles = Boolean(object.javaMultipleFiles);
                    if (object.javaGenerateEqualsAndHash != null)
                        message.javaGenerateEqualsAndHash = Boolean(object.javaGenerateEqualsAndHash);
                    if (object.javaStringCheckUtf8 != null)
                        message.javaStringCheckUtf8 = Boolean(object.javaStringCheckUtf8);
                    switch (object.optimizeFor) {
                    default:
                        if (typeof object.optimizeFor === "number") {
                            message.optimizeFor = object.optimizeFor;
                            break;
                        }
                        break;
                    case "SPEED":
                    case 1:
                        message.optimizeFor = 1;
                        break;
                    case "CODE_SIZE":
                    case 2:
                        message.optimizeFor = 2;
                        break;
                    case "LITE_RUNTIME":
                    case 3:
                        message.optimizeFor = 3;
                        break;
                    }
                    if (object.goPackage != null)
                        message.goPackage = String(object.goPackage);
                    if (object.ccGenericServices != null)
                        message.ccGenericServices = Boolean(object.ccGenericServices);
                    if (object.javaGenericServices != null)
                        message.javaGenericServices = Boolean(object.javaGenericServices);
                    if (object.pyGenericServices != null)
                        message.pyGenericServices = Boolean(object.pyGenericServices);
                    if (object.phpGenericServices != null)
                        message.phpGenericServices = Boolean(object.phpGenericServices);
                    if (object.deprecated != null)
                        message.deprecated = Boolean(object.deprecated);
                    if (object.ccEnableArenas != null)
                        message.ccEnableArenas = Boolean(object.ccEnableArenas);
                    if (object.objcClassPrefix != null)
                        message.objcClassPrefix = String(object.objcClassPrefix);
                    if (object.csharpNamespace != null)
                        message.csharpNamespace = String(object.csharpNamespace);
                    if (object.swiftPrefix != null)
                        message.swiftPrefix = String(object.swiftPrefix);
                    if (object.phpClassPrefix != null)
                        message.phpClassPrefix = String(object.phpClassPrefix);
                    if (object.phpNamespace != null)
                        message.phpNamespace = String(object.phpNamespace);
                    if (object.phpMetadataNamespace != null)
                        message.phpMetadataNamespace = String(object.phpMetadataNamespace);
                    if (object.rubyPackage != null)
                        message.rubyPackage = String(object.rubyPackage);
                    if (object.uninterpretedOption) {
                        if (!Array.isArray(object.uninterpretedOption))
                            throw TypeError(".google.protobuf.FileOptions.uninterpretedOption: array expected");
                        message.uninterpretedOption = [];
                        for (var i = 0; i < object.uninterpretedOption.length; ++i) {
                            if (typeof object.uninterpretedOption[i] !== "object")
                                throw TypeError(".google.protobuf.FileOptions.uninterpretedOption: object expected");
                            message.uninterpretedOption[i] = $root.google.protobuf.UninterpretedOption.fromObject(object.uninterpretedOption[i]);
                        }
                    }
                    if (object[".google.api.resourceDefinition"]) {
                        if (!Array.isArray(object[".google.api.resourceDefinition"]))
                            throw TypeError(".google.protobuf.FileOptions..google.api.resourceDefinition: array expected");
                        message[".google.api.resourceDefinition"] = [];
                        for (var i = 0; i < object[".google.api.resourceDefinition"].length; ++i) {
                            if (typeof object[".google.api.resourceDefinition"][i] !== "object")
                                throw TypeError(".google.protobuf.FileOptions..google.api.resourceDefinition: object expected");
                            message[".google.api.resourceDefinition"][i] = $root.google.api.ResourceDescriptor.fromObject(object[".google.api.resourceDefinition"][i]);
                        }
                    }
                    return message;
                };
    
                /**
                 * Creates a plain object from a FileOptions message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.protobuf.FileOptions
                 * @static
                 * @param {google.protobuf.FileOptions} message FileOptions
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                FileOptions.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.arrays || options.defaults) {
                        object.uninterpretedOption = [];
                        object[".google.api.resourceDefinition"] = [];
                    }
                    if (options.defaults) {
                        object.javaPackage = "";
                        object.javaOuterClassname = "";
                        object.optimizeFor = options.enums === String ? "SPEED" : 1;
                        object.javaMultipleFiles = false;
                        object.goPackage = "";
                        object.ccGenericServices = false;
                        object.javaGenericServices = false;
                        object.pyGenericServices = false;
                        object.javaGenerateEqualsAndHash = false;
                        object.deprecated = false;
                        object.javaStringCheckUtf8 = false;
                        object.ccEnableArenas = true;
                        object.objcClassPrefix = "";
                        object.csharpNamespace = "";
                        object.swiftPrefix = "";
                        object.phpClassPrefix = "";
                        object.phpNamespace = "";
                        object.phpGenericServices = false;
                        object.phpMetadataNamespace = "";
                        object.rubyPackage = "";
                    }
                    if (message.javaPackage != null && message.hasOwnProperty("javaPackage"))
                        object.javaPackage = message.javaPackage;
                    if (message.javaOuterClassname != null && message.hasOwnProperty("javaOuterClassname"))
                        object.javaOuterClassname = message.javaOuterClassname;
                    if (message.optimizeFor != null && message.hasOwnProperty("optimizeFor"))
                        object.optimizeFor = options.enums === String ? $root.google.protobuf.FileOptions.OptimizeMode[message.optimizeFor] === undefined ? message.optimizeFor : $root.google.protobuf.FileOptions.OptimizeMode[message.optimizeFor] : message.optimizeFor;
                    if (message.javaMultipleFiles != null && message.hasOwnProperty("javaMultipleFiles"))
                        object.javaMultipleFiles = message.javaMultipleFiles;
                    if (message.goPackage != null && message.hasOwnProperty("goPackage"))
                        object.goPackage = message.goPackage;
                    if (message.ccGenericServices != null && message.hasOwnProperty("ccGenericServices"))
                        object.ccGenericServices = message.ccGenericServices;
                    if (message.javaGenericServices != null && message.hasOwnProperty("javaGenericServices"))
                        object.javaGenericServices = message.javaGenericServices;
                    if (message.pyGenericServices != null && message.hasOwnProperty("pyGenericServices"))
                        object.pyGenericServices = message.pyGenericServices;
                    if (message.javaGenerateEqualsAndHash != null && message.hasOwnProperty("javaGenerateEqualsAndHash"))
                        object.javaGenerateEqualsAndHash = message.javaGenerateEqualsAndHash;
                    if (message.deprecated != null && message.hasOwnProperty("deprecated"))
                        object.deprecated = message.deprecated;
                    if (message.javaStringCheckUtf8 != null && message.hasOwnProperty("javaStringCheckUtf8"))
                        object.javaStringCheckUtf8 = message.javaStringCheckUtf8;
                    if (message.ccEnableArenas != null && message.hasOwnProperty("ccEnableArenas"))
                        object.ccEnableArenas = message.ccEnableArenas;
                    if (message.objcClassPrefix != null && message.hasOwnProperty("objcClassPrefix"))
                        object.objcClassPrefix = message.objcClassPrefix;
                    if (message.csharpNamespace != null && message.hasOwnProperty("csharpNamespace"))
                        object.csharpNamespace = message.csharpNamespace;
                    if (message.swiftPrefix != null && message.hasOwnProperty("swiftPrefix"))
                        object.swiftPrefix = message.swiftPrefix;
                    if (message.phpClassPrefix != null && message.hasOwnProperty("phpClassPrefix"))
                        object.phpClassPrefix = message.phpClassPrefix;
                    if (message.phpNamespace != null && message.hasOwnProperty("phpNamespace"))
                        object.phpNamespace = message.phpNamespace;
                    if (message.phpGenericServices != null && message.hasOwnProperty("phpGenericServices"))
                        object.phpGenericServices = message.phpGenericServices;
                    if (message.phpMetadataNamespace != null && message.hasOwnProperty("phpMetadataNamespace"))
                        object.phpMetadataNamespace = message.phpMetadataNamespace;
                    if (message.rubyPackage != null && message.hasOwnProperty("rubyPackage"))
                        object.rubyPackage = message.rubyPackage;
                    if (message.uninterpretedOption && message.uninterpretedOption.length) {
                        object.uninterpretedOption = [];
                        for (var j = 0; j < message.uninterpretedOption.length; ++j)
                            object.uninterpretedOption[j] = $root.google.protobuf.UninterpretedOption.toObject(message.uninterpretedOption[j], options);
                    }
                    if (message[".google.api.resourceDefinition"] && message[".google.api.resourceDefinition"].length) {
                        object[".google.api.resourceDefinition"] = [];
                        for (var j = 0; j < message[".google.api.resourceDefinition"].length; ++j)
                            object[".google.api.resourceDefinition"][j] = $root.google.api.ResourceDescriptor.toObject(message[".google.api.resourceDefinition"][j], options);
                    }
                    return object;
                };
    
                /**
                 * Converts this FileOptions to JSON.
                 * @function toJSON
                 * @memberof google.protobuf.FileOptions
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                FileOptions.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for FileOptions
                 * @function getTypeUrl
                 * @memberof google.protobuf.FileOptions
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                FileOptions.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.protobuf.FileOptions";
                };
    
                /**
                 * OptimizeMode enum.
                 * @name google.protobuf.FileOptions.OptimizeMode
                 * @enum {number}
                 * @property {number} SPEED=1 SPEED value
                 * @property {number} CODE_SIZE=2 CODE_SIZE value
                 * @property {number} LITE_RUNTIME=3 LITE_RUNTIME value
                 */
                FileOptions.OptimizeMode = (function() {
                    var valuesById = {}, values = Object.create(valuesById);
                    values[valuesById[1] = "SPEED"] = 1;
                    values[valuesById[2] = "CODE_SIZE"] = 2;
                    values[valuesById[3] = "LITE_RUNTIME"] = 3;
                    return values;
                })();
    
                return FileOptions;
            })();
    
            protobuf.MessageOptions = (function() {
    
                /**
                 * Properties of a MessageOptions.
                 * @memberof google.protobuf
                 * @interface IMessageOptions
                 * @property {boolean|null} [messageSetWireFormat] MessageOptions messageSetWireFormat
                 * @property {boolean|null} [noStandardDescriptorAccessor] MessageOptions noStandardDescriptorAccessor
                 * @property {boolean|null} [deprecated] MessageOptions deprecated
                 * @property {boolean|null} [mapEntry] MessageOptions mapEntry
                 * @property {boolean|null} [deprecatedLegacyJsonFieldConflicts] MessageOptions deprecatedLegacyJsonFieldConflicts
                 * @property {Array.<google.protobuf.IUninterpretedOption>|null} [uninterpretedOption] MessageOptions uninterpretedOption
                 * @property {google.api.IResourceDescriptor|null} [".google.api.resource"] MessageOptions .google.api.resource
                 */
    
                /**
                 * Constructs a new MessageOptions.
                 * @memberof google.protobuf
                 * @classdesc Represents a MessageOptions.
                 * @implements IMessageOptions
                 * @constructor
                 * @param {google.protobuf.IMessageOptions=} [properties] Properties to set
                 */
                function MessageOptions(properties) {
                    this.uninterpretedOption = [];
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * MessageOptions messageSetWireFormat.
                 * @member {boolean} messageSetWireFormat
                 * @memberof google.protobuf.MessageOptions
                 * @instance
                 */
                MessageOptions.prototype.messageSetWireFormat = false;
    
                /**
                 * MessageOptions noStandardDescriptorAccessor.
                 * @member {boolean} noStandardDescriptorAccessor
                 * @memberof google.protobuf.MessageOptions
                 * @instance
                 */
                MessageOptions.prototype.noStandardDescriptorAccessor = false;
    
                /**
                 * MessageOptions deprecated.
                 * @member {boolean} deprecated
                 * @memberof google.protobuf.MessageOptions
                 * @instance
                 */
                MessageOptions.prototype.deprecated = false;
    
                /**
                 * MessageOptions mapEntry.
                 * @member {boolean} mapEntry
                 * @memberof google.protobuf.MessageOptions
                 * @instance
                 */
                MessageOptions.prototype.mapEntry = false;
    
                /**
                 * MessageOptions deprecatedLegacyJsonFieldConflicts.
                 * @member {boolean} deprecatedLegacyJsonFieldConflicts
                 * @memberof google.protobuf.MessageOptions
                 * @instance
                 */
                MessageOptions.prototype.deprecatedLegacyJsonFieldConflicts = false;
    
                /**
                 * MessageOptions uninterpretedOption.
                 * @member {Array.<google.protobuf.IUninterpretedOption>} uninterpretedOption
                 * @memberof google.protobuf.MessageOptions
                 * @instance
                 */
                MessageOptions.prototype.uninterpretedOption = $util.emptyArray;
    
                /**
                 * MessageOptions .google.api.resource.
                 * @member {google.api.IResourceDescriptor|null|undefined} .google.api.resource
                 * @memberof google.protobuf.MessageOptions
                 * @instance
                 */
                MessageOptions.prototype[".google.api.resource"] = null;
    
                /**
                 * Creates a new MessageOptions instance using the specified properties.
                 * @function create
                 * @memberof google.protobuf.MessageOptions
                 * @static
                 * @param {google.protobuf.IMessageOptions=} [properties] Properties to set
                 * @returns {google.protobuf.MessageOptions} MessageOptions instance
                 */
                MessageOptions.create = function create(properties) {
                    return new MessageOptions(properties);
                };
    
                /**
                 * Encodes the specified MessageOptions message. Does not implicitly {@link google.protobuf.MessageOptions.verify|verify} messages.
                 * @function encode
                 * @memberof google.protobuf.MessageOptions
                 * @static
                 * @param {google.protobuf.IMessageOptions} message MessageOptions message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                MessageOptions.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.messageSetWireFormat != null && Object.hasOwnProperty.call(message, "messageSetWireFormat"))
                        writer.uint32(/* id 1, wireType 0 =*/8).bool(message.messageSetWireFormat);
                    if (message.noStandardDescriptorAccessor != null && Object.hasOwnProperty.call(message, "noStandardDescriptorAccessor"))
                        writer.uint32(/* id 2, wireType 0 =*/16).bool(message.noStandardDescriptorAccessor);
                    if (message.deprecated != null && Object.hasOwnProperty.call(message, "deprecated"))
                        writer.uint32(/* id 3, wireType 0 =*/24).bool(message.deprecated);
                    if (message.mapEntry != null && Object.hasOwnProperty.call(message, "mapEntry"))
                        writer.uint32(/* id 7, wireType 0 =*/56).bool(message.mapEntry);
                    if (message.deprecatedLegacyJsonFieldConflicts != null && Object.hasOwnProperty.call(message, "deprecatedLegacyJsonFieldConflicts"))
                        writer.uint32(/* id 11, wireType 0 =*/88).bool(message.deprecatedLegacyJsonFieldConflicts);
                    if (message.uninterpretedOption != null && message.uninterpretedOption.length)
                        for (var i = 0; i < message.uninterpretedOption.length; ++i)
                            $root.google.protobuf.UninterpretedOption.encode(message.uninterpretedOption[i], writer.uint32(/* id 999, wireType 2 =*/7994).fork()).ldelim();
                    if (message[".google.api.resource"] != null && Object.hasOwnProperty.call(message, ".google.api.resource"))
                        $root.google.api.ResourceDescriptor.encode(message[".google.api.resource"], writer.uint32(/* id 1053, wireType 2 =*/8426).fork()).ldelim();
                    return writer;
                };
    
                /**
                 * Encodes the specified MessageOptions message, length delimited. Does not implicitly {@link google.protobuf.MessageOptions.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.protobuf.MessageOptions
                 * @static
                 * @param {google.protobuf.IMessageOptions} message MessageOptions message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                MessageOptions.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a MessageOptions message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.protobuf.MessageOptions
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.protobuf.MessageOptions} MessageOptions
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                MessageOptions.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.MessageOptions();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1: {
                                message.messageSetWireFormat = reader.bool();
                                break;
                            }
                        case 2: {
                                message.noStandardDescriptorAccessor = reader.bool();
                                break;
                            }
                        case 3: {
                                message.deprecated = reader.bool();
                                break;
                            }
                        case 7: {
                                message.mapEntry = reader.bool();
                                break;
                            }
                        case 11: {
                                message.deprecatedLegacyJsonFieldConflicts = reader.bool();
                                break;
                            }
                        case 999: {
                                if (!(message.uninterpretedOption && message.uninterpretedOption.length))
                                    message.uninterpretedOption = [];
                                message.uninterpretedOption.push($root.google.protobuf.UninterpretedOption.decode(reader, reader.uint32()));
                                break;
                            }
                        case 1053: {
                                message[".google.api.resource"] = $root.google.api.ResourceDescriptor.decode(reader, reader.uint32());
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a MessageOptions message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.protobuf.MessageOptions
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.protobuf.MessageOptions} MessageOptions
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                MessageOptions.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a MessageOptions message.
                 * @function verify
                 * @memberof google.protobuf.MessageOptions
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                MessageOptions.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.messageSetWireFormat != null && message.hasOwnProperty("messageSetWireFormat"))
                        if (typeof message.messageSetWireFormat !== "boolean")
                            return "messageSetWireFormat: boolean expected";
                    if (message.noStandardDescriptorAccessor != null && message.hasOwnProperty("noStandardDescriptorAccessor"))
                        if (typeof message.noStandardDescriptorAccessor !== "boolean")
                            return "noStandardDescriptorAccessor: boolean expected";
                    if (message.deprecated != null && message.hasOwnProperty("deprecated"))
                        if (typeof message.deprecated !== "boolean")
                            return "deprecated: boolean expected";
                    if (message.mapEntry != null && message.hasOwnProperty("mapEntry"))
                        if (typeof message.mapEntry !== "boolean")
                            return "mapEntry: boolean expected";
                    if (message.deprecatedLegacyJsonFieldConflicts != null && message.hasOwnProperty("deprecatedLegacyJsonFieldConflicts"))
                        if (typeof message.deprecatedLegacyJsonFieldConflicts !== "boolean")
                            return "deprecatedLegacyJsonFieldConflicts: boolean expected";
                    if (message.uninterpretedOption != null && message.hasOwnProperty("uninterpretedOption")) {
                        if (!Array.isArray(message.uninterpretedOption))
                            return "uninterpretedOption: array expected";
                        for (var i = 0; i < message.uninterpretedOption.length; ++i) {
                            var error = $root.google.protobuf.UninterpretedOption.verify(message.uninterpretedOption[i]);
                            if (error)
                                return "uninterpretedOption." + error;
                        }
                    }
                    if (message[".google.api.resource"] != null && message.hasOwnProperty(".google.api.resource")) {
                        var error = $root.google.api.ResourceDescriptor.verify(message[".google.api.resource"]);
                        if (error)
                            return ".google.api.resource." + error;
                    }
                    return null;
                };
    
                /**
                 * Creates a MessageOptions message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.protobuf.MessageOptions
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.protobuf.MessageOptions} MessageOptions
                 */
                MessageOptions.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.protobuf.MessageOptions)
                        return object;
                    var message = new $root.google.protobuf.MessageOptions();
                    if (object.messageSetWireFormat != null)
                        message.messageSetWireFormat = Boolean(object.messageSetWireFormat);
                    if (object.noStandardDescriptorAccessor != null)
                        message.noStandardDescriptorAccessor = Boolean(object.noStandardDescriptorAccessor);
                    if (object.deprecated != null)
                        message.deprecated = Boolean(object.deprecated);
                    if (object.mapEntry != null)
                        message.mapEntry = Boolean(object.mapEntry);
                    if (object.deprecatedLegacyJsonFieldConflicts != null)
                        message.deprecatedLegacyJsonFieldConflicts = Boolean(object.deprecatedLegacyJsonFieldConflicts);
                    if (object.uninterpretedOption) {
                        if (!Array.isArray(object.uninterpretedOption))
                            throw TypeError(".google.protobuf.MessageOptions.uninterpretedOption: array expected");
                        message.uninterpretedOption = [];
                        for (var i = 0; i < object.uninterpretedOption.length; ++i) {
                            if (typeof object.uninterpretedOption[i] !== "object")
                                throw TypeError(".google.protobuf.MessageOptions.uninterpretedOption: object expected");
                            message.uninterpretedOption[i] = $root.google.protobuf.UninterpretedOption.fromObject(object.uninterpretedOption[i]);
                        }
                    }
                    if (object[".google.api.resource"] != null) {
                        if (typeof object[".google.api.resource"] !== "object")
                            throw TypeError(".google.protobuf.MessageOptions..google.api.resource: object expected");
                        message[".google.api.resource"] = $root.google.api.ResourceDescriptor.fromObject(object[".google.api.resource"]);
                    }
                    return message;
                };
    
                /**
                 * Creates a plain object from a MessageOptions message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.protobuf.MessageOptions
                 * @static
                 * @param {google.protobuf.MessageOptions} message MessageOptions
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                MessageOptions.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.arrays || options.defaults)
                        object.uninterpretedOption = [];
                    if (options.defaults) {
                        object.messageSetWireFormat = false;
                        object.noStandardDescriptorAccessor = false;
                        object.deprecated = false;
                        object.mapEntry = false;
                        object.deprecatedLegacyJsonFieldConflicts = false;
                        object[".google.api.resource"] = null;
                    }
                    if (message.messageSetWireFormat != null && message.hasOwnProperty("messageSetWireFormat"))
                        object.messageSetWireFormat = message.messageSetWireFormat;
                    if (message.noStandardDescriptorAccessor != null && message.hasOwnProperty("noStandardDescriptorAccessor"))
                        object.noStandardDescriptorAccessor = message.noStandardDescriptorAccessor;
                    if (message.deprecated != null && message.hasOwnProperty("deprecated"))
                        object.deprecated = message.deprecated;
                    if (message.mapEntry != null && message.hasOwnProperty("mapEntry"))
                        object.mapEntry = message.mapEntry;
                    if (message.deprecatedLegacyJsonFieldConflicts != null && message.hasOwnProperty("deprecatedLegacyJsonFieldConflicts"))
                        object.deprecatedLegacyJsonFieldConflicts = message.deprecatedLegacyJsonFieldConflicts;
                    if (message.uninterpretedOption && message.uninterpretedOption.length) {
                        object.uninterpretedOption = [];
                        for (var j = 0; j < message.uninterpretedOption.length; ++j)
                            object.uninterpretedOption[j] = $root.google.protobuf.UninterpretedOption.toObject(message.uninterpretedOption[j], options);
                    }
                    if (message[".google.api.resource"] != null && message.hasOwnProperty(".google.api.resource"))
                        object[".google.api.resource"] = $root.google.api.ResourceDescriptor.toObject(message[".google.api.resource"], options);
                    return object;
                };
    
                /**
                 * Converts this MessageOptions to JSON.
                 * @function toJSON
                 * @memberof google.protobuf.MessageOptions
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                MessageOptions.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for MessageOptions
                 * @function getTypeUrl
                 * @memberof google.protobuf.MessageOptions
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                MessageOptions.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.protobuf.MessageOptions";
                };
    
                return MessageOptions;
            })();
    
            protobuf.FieldOptions = (function() {
    
                /**
                 * Properties of a FieldOptions.
                 * @memberof google.protobuf
                 * @interface IFieldOptions
                 * @property {google.protobuf.FieldOptions.CType|null} [ctype] FieldOptions ctype
                 * @property {boolean|null} [packed] FieldOptions packed
                 * @property {google.protobuf.FieldOptions.JSType|null} [jstype] FieldOptions jstype
                 * @property {boolean|null} [lazy] FieldOptions lazy
                 * @property {boolean|null} [unverifiedLazy] FieldOptions unverifiedLazy
                 * @property {boolean|null} [deprecated] FieldOptions deprecated
                 * @property {boolean|null} [weak] FieldOptions weak
                 * @property {boolean|null} [debugRedact] FieldOptions debugRedact
                 * @property {google.protobuf.FieldOptions.OptionRetention|null} [retention] FieldOptions retention
                 * @property {google.protobuf.FieldOptions.OptionTargetType|null} [target] FieldOptions target
                 * @property {Array.<google.protobuf.IUninterpretedOption>|null} [uninterpretedOption] FieldOptions uninterpretedOption
                 * @property {Array.<google.api.FieldBehavior>|null} [".google.api.fieldBehavior"] FieldOptions .google.api.fieldBehavior
                 * @property {google.api.IResourceReference|null} [".google.api.resourceReference"] FieldOptions .google.api.resourceReference
                 */
    
                /**
                 * Constructs a new FieldOptions.
                 * @memberof google.protobuf
                 * @classdesc Represents a FieldOptions.
                 * @implements IFieldOptions
                 * @constructor
                 * @param {google.protobuf.IFieldOptions=} [properties] Properties to set
                 */
                function FieldOptions(properties) {
                    this.uninterpretedOption = [];
                    this[".google.api.fieldBehavior"] = [];
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * FieldOptions ctype.
                 * @member {google.protobuf.FieldOptions.CType} ctype
                 * @memberof google.protobuf.FieldOptions
                 * @instance
                 */
                FieldOptions.prototype.ctype = 0;
    
                /**
                 * FieldOptions packed.
                 * @member {boolean} packed
                 * @memberof google.protobuf.FieldOptions
                 * @instance
                 */
                FieldOptions.prototype.packed = false;
    
                /**
                 * FieldOptions jstype.
                 * @member {google.protobuf.FieldOptions.JSType} jstype
                 * @memberof google.protobuf.FieldOptions
                 * @instance
                 */
                FieldOptions.prototype.jstype = 0;
    
                /**
                 * FieldOptions lazy.
                 * @member {boolean} lazy
                 * @memberof google.protobuf.FieldOptions
                 * @instance
                 */
                FieldOptions.prototype.lazy = false;
    
                /**
                 * FieldOptions unverifiedLazy.
                 * @member {boolean} unverifiedLazy
                 * @memberof google.protobuf.FieldOptions
                 * @instance
                 */
                FieldOptions.prototype.unverifiedLazy = false;
    
                /**
                 * FieldOptions deprecated.
                 * @member {boolean} deprecated
                 * @memberof google.protobuf.FieldOptions
                 * @instance
                 */
                FieldOptions.prototype.deprecated = false;
    
                /**
                 * FieldOptions weak.
                 * @member {boolean} weak
                 * @memberof google.protobuf.FieldOptions
                 * @instance
                 */
                FieldOptions.prototype.weak = false;
    
                /**
                 * FieldOptions debugRedact.
                 * @member {boolean} debugRedact
                 * @memberof google.protobuf.FieldOptions
                 * @instance
                 */
                FieldOptions.prototype.debugRedact = false;
    
                /**
                 * FieldOptions retention.
                 * @member {google.protobuf.FieldOptions.OptionRetention} retention
                 * @memberof google.protobuf.FieldOptions
                 * @instance
                 */
                FieldOptions.prototype.retention = 0;
    
                /**
                 * FieldOptions target.
                 * @member {google.protobuf.FieldOptions.OptionTargetType} target
                 * @memberof google.protobuf.FieldOptions
                 * @instance
                 */
                FieldOptions.prototype.target = 0;
    
                /**
                 * FieldOptions uninterpretedOption.
                 * @member {Array.<google.protobuf.IUninterpretedOption>} uninterpretedOption
                 * @memberof google.protobuf.FieldOptions
                 * @instance
                 */
                FieldOptions.prototype.uninterpretedOption = $util.emptyArray;
    
                /**
                 * FieldOptions .google.api.fieldBehavior.
                 * @member {Array.<google.api.FieldBehavior>} .google.api.fieldBehavior
                 * @memberof google.protobuf.FieldOptions
                 * @instance
                 */
                FieldOptions.prototype[".google.api.fieldBehavior"] = $util.emptyArray;
    
                /**
                 * FieldOptions .google.api.resourceReference.
                 * @member {google.api.IResourceReference|null|undefined} .google.api.resourceReference
                 * @memberof google.protobuf.FieldOptions
                 * @instance
                 */
                FieldOptions.prototype[".google.api.resourceReference"] = null;
    
                /**
                 * Creates a new FieldOptions instance using the specified properties.
                 * @function create
                 * @memberof google.protobuf.FieldOptions
                 * @static
                 * @param {google.protobuf.IFieldOptions=} [properties] Properties to set
                 * @returns {google.protobuf.FieldOptions} FieldOptions instance
                 */
                FieldOptions.create = function create(properties) {
                    return new FieldOptions(properties);
                };
    
                /**
                 * Encodes the specified FieldOptions message. Does not implicitly {@link google.protobuf.FieldOptions.verify|verify} messages.
                 * @function encode
                 * @memberof google.protobuf.FieldOptions
                 * @static
                 * @param {google.protobuf.IFieldOptions} message FieldOptions message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                FieldOptions.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.ctype != null && Object.hasOwnProperty.call(message, "ctype"))
                        writer.uint32(/* id 1, wireType 0 =*/8).int32(message.ctype);
                    if (message.packed != null && Object.hasOwnProperty.call(message, "packed"))
                        writer.uint32(/* id 2, wireType 0 =*/16).bool(message.packed);
                    if (message.deprecated != null && Object.hasOwnProperty.call(message, "deprecated"))
                        writer.uint32(/* id 3, wireType 0 =*/24).bool(message.deprecated);
                    if (message.lazy != null && Object.hasOwnProperty.call(message, "lazy"))
                        writer.uint32(/* id 5, wireType 0 =*/40).bool(message.lazy);
                    if (message.jstype != null && Object.hasOwnProperty.call(message, "jstype"))
                        writer.uint32(/* id 6, wireType 0 =*/48).int32(message.jstype);
                    if (message.weak != null && Object.hasOwnProperty.call(message, "weak"))
                        writer.uint32(/* id 10, wireType 0 =*/80).bool(message.weak);
                    if (message.unverifiedLazy != null && Object.hasOwnProperty.call(message, "unverifiedLazy"))
                        writer.uint32(/* id 15, wireType 0 =*/120).bool(message.unverifiedLazy);
                    if (message.debugRedact != null && Object.hasOwnProperty.call(message, "debugRedact"))
                        writer.uint32(/* id 16, wireType 0 =*/128).bool(message.debugRedact);
                    if (message.retention != null && Object.hasOwnProperty.call(message, "retention"))
                        writer.uint32(/* id 17, wireType 0 =*/136).int32(message.retention);
                    if (message.target != null && Object.hasOwnProperty.call(message, "target"))
                        writer.uint32(/* id 18, wireType 0 =*/144).int32(message.target);
                    if (message.uninterpretedOption != null && message.uninterpretedOption.length)
                        for (var i = 0; i < message.uninterpretedOption.length; ++i)
                            $root.google.protobuf.UninterpretedOption.encode(message.uninterpretedOption[i], writer.uint32(/* id 999, wireType 2 =*/7994).fork()).ldelim();
                    if (message[".google.api.fieldBehavior"] != null && message[".google.api.fieldBehavior"].length) {
                        writer.uint32(/* id 1052, wireType 2 =*/8418).fork();
                        for (var i = 0; i < message[".google.api.fieldBehavior"].length; ++i)
                            writer.int32(message[".google.api.fieldBehavior"][i]);
                        writer.ldelim();
                    }
                    if (message[".google.api.resourceReference"] != null && Object.hasOwnProperty.call(message, ".google.api.resourceReference"))
                        $root.google.api.ResourceReference.encode(message[".google.api.resourceReference"], writer.uint32(/* id 1055, wireType 2 =*/8442).fork()).ldelim();
                    return writer;
                };
    
                /**
                 * Encodes the specified FieldOptions message, length delimited. Does not implicitly {@link google.protobuf.FieldOptions.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.protobuf.FieldOptions
                 * @static
                 * @param {google.protobuf.IFieldOptions} message FieldOptions message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                FieldOptions.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a FieldOptions message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.protobuf.FieldOptions
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.protobuf.FieldOptions} FieldOptions
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                FieldOptions.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.FieldOptions();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1: {
                                message.ctype = reader.int32();
                                break;
                            }
                        case 2: {
                                message.packed = reader.bool();
                                break;
                            }
                        case 6: {
                                message.jstype = reader.int32();
                                break;
                            }
                        case 5: {
                                message.lazy = reader.bool();
                                break;
                            }
                        case 15: {
                                message.unverifiedLazy = reader.bool();
                                break;
                            }
                        case 3: {
                                message.deprecated = reader.bool();
                                break;
                            }
                        case 10: {
                                message.weak = reader.bool();
                                break;
                            }
                        case 16: {
                                message.debugRedact = reader.bool();
                                break;
                            }
                        case 17: {
                                message.retention = reader.int32();
                                break;
                            }
                        case 18: {
                                message.target = reader.int32();
                                break;
                            }
                        case 999: {
                                if (!(message.uninterpretedOption && message.uninterpretedOption.length))
                                    message.uninterpretedOption = [];
                                message.uninterpretedOption.push($root.google.protobuf.UninterpretedOption.decode(reader, reader.uint32()));
                                break;
                            }
                        case 1052: {
                                if (!(message[".google.api.fieldBehavior"] && message[".google.api.fieldBehavior"].length))
                                    message[".google.api.fieldBehavior"] = [];
                                if ((tag & 7) === 2) {
                                    var end2 = reader.uint32() + reader.pos;
                                    while (reader.pos < end2)
                                        message[".google.api.fieldBehavior"].push(reader.int32());
                                } else
                                    message[".google.api.fieldBehavior"].push(reader.int32());
                                break;
                            }
                        case 1055: {
                                message[".google.api.resourceReference"] = $root.google.api.ResourceReference.decode(reader, reader.uint32());
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a FieldOptions message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.protobuf.FieldOptions
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.protobuf.FieldOptions} FieldOptions
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                FieldOptions.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a FieldOptions message.
                 * @function verify
                 * @memberof google.protobuf.FieldOptions
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                FieldOptions.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.ctype != null && message.hasOwnProperty("ctype"))
                        switch (message.ctype) {
                        default:
                            return "ctype: enum value expected";
                        case 0:
                        case 1:
                        case 2:
                            break;
                        }
                    if (message.packed != null && message.hasOwnProperty("packed"))
                        if (typeof message.packed !== "boolean")
                            return "packed: boolean expected";
                    if (message.jstype != null && message.hasOwnProperty("jstype"))
                        switch (message.jstype) {
                        default:
                            return "jstype: enum value expected";
                        case 0:
                        case 1:
                        case 2:
                            break;
                        }
                    if (message.lazy != null && message.hasOwnProperty("lazy"))
                        if (typeof message.lazy !== "boolean")
                            return "lazy: boolean expected";
                    if (message.unverifiedLazy != null && message.hasOwnProperty("unverifiedLazy"))
                        if (typeof message.unverifiedLazy !== "boolean")
                            return "unverifiedLazy: boolean expected";
                    if (message.deprecated != null && message.hasOwnProperty("deprecated"))
                        if (typeof message.deprecated !== "boolean")
                            return "deprecated: boolean expected";
                    if (message.weak != null && message.hasOwnProperty("weak"))
                        if (typeof message.weak !== "boolean")
                            return "weak: boolean expected";
                    if (message.debugRedact != null && message.hasOwnProperty("debugRedact"))
                        if (typeof message.debugRedact !== "boolean")
                            return "debugRedact: boolean expected";
                    if (message.retention != null && message.hasOwnProperty("retention"))
                        switch (message.retention) {
                        default:
                            return "retention: enum value expected";
                        case 0:
                        case 1:
                        case 2:
                            break;
                        }
                    if (message.target != null && message.hasOwnProperty("target"))
                        switch (message.target) {
                        default:
                            return "target: enum value expected";
                        case 0:
                        case 1:
                        case 2:
                        case 3:
                        case 4:
                        case 5:
                        case 6:
                        case 7:
                        case 8:
                        case 9:
                            break;
                        }
                    if (message.uninterpretedOption != null && message.hasOwnProperty("uninterpretedOption")) {
                        if (!Array.isArray(message.uninterpretedOption))
                            return "uninterpretedOption: array expected";
                        for (var i = 0; i < message.uninterpretedOption.length; ++i) {
                            var error = $root.google.protobuf.UninterpretedOption.verify(message.uninterpretedOption[i]);
                            if (error)
                                return "uninterpretedOption." + error;
                        }
                    }
                    if (message[".google.api.fieldBehavior"] != null && message.hasOwnProperty(".google.api.fieldBehavior")) {
                        if (!Array.isArray(message[".google.api.fieldBehavior"]))
                            return ".google.api.fieldBehavior: array expected";
                        for (var i = 0; i < message[".google.api.fieldBehavior"].length; ++i)
                            switch (message[".google.api.fieldBehavior"][i]) {
                            default:
                                return ".google.api.fieldBehavior: enum value[] expected";
                            case 0:
                            case 1:
                            case 2:
                            case 3:
                            case 4:
                            case 5:
                            case 6:
                            case 7:
                                break;
                            }
                    }
                    if (message[".google.api.resourceReference"] != null && message.hasOwnProperty(".google.api.resourceReference")) {
                        var error = $root.google.api.ResourceReference.verify(message[".google.api.resourceReference"]);
                        if (error)
                            return ".google.api.resourceReference." + error;
                    }
                    return null;
                };
    
                /**
                 * Creates a FieldOptions message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.protobuf.FieldOptions
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.protobuf.FieldOptions} FieldOptions
                 */
                FieldOptions.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.protobuf.FieldOptions)
                        return object;
                    var message = new $root.google.protobuf.FieldOptions();
                    switch (object.ctype) {
                    default:
                        if (typeof object.ctype === "number") {
                            message.ctype = object.ctype;
                            break;
                        }
                        break;
                    case "STRING":
                    case 0:
                        message.ctype = 0;
                        break;
                    case "CORD":
                    case 1:
                        message.ctype = 1;
                        break;
                    case "STRING_PIECE":
                    case 2:
                        message.ctype = 2;
                        break;
                    }
                    if (object.packed != null)
                        message.packed = Boolean(object.packed);
                    switch (object.jstype) {
                    default:
                        if (typeof object.jstype === "number") {
                            message.jstype = object.jstype;
                            break;
                        }
                        break;
                    case "JS_NORMAL":
                    case 0:
                        message.jstype = 0;
                        break;
                    case "JS_STRING":
                    case 1:
                        message.jstype = 1;
                        break;
                    case "JS_NUMBER":
                    case 2:
                        message.jstype = 2;
                        break;
                    }
                    if (object.lazy != null)
                        message.lazy = Boolean(object.lazy);
                    if (object.unverifiedLazy != null)
                        message.unverifiedLazy = Boolean(object.unverifiedLazy);
                    if (object.deprecated != null)
                        message.deprecated = Boolean(object.deprecated);
                    if (object.weak != null)
                        message.weak = Boolean(object.weak);
                    if (object.debugRedact != null)
                        message.debugRedact = Boolean(object.debugRedact);
                    switch (object.retention) {
                    default:
                        if (typeof object.retention === "number") {
                            message.retention = object.retention;
                            break;
                        }
                        break;
                    case "RETENTION_UNKNOWN":
                    case 0:
                        message.retention = 0;
                        break;
                    case "RETENTION_RUNTIME":
                    case 1:
                        message.retention = 1;
                        break;
                    case "RETENTION_SOURCE":
                    case 2:
                        message.retention = 2;
                        break;
                    }
                    switch (object.target) {
                    default:
                        if (typeof object.target === "number") {
                            message.target = object.target;
                            break;
                        }
                        break;
                    case "TARGET_TYPE_UNKNOWN":
                    case 0:
                        message.target = 0;
                        break;
                    case "TARGET_TYPE_FILE":
                    case 1:
                        message.target = 1;
                        break;
                    case "TARGET_TYPE_EXTENSION_RANGE":
                    case 2:
                        message.target = 2;
                        break;
                    case "TARGET_TYPE_MESSAGE":
                    case 3:
                        message.target = 3;
                        break;
                    case "TARGET_TYPE_FIELD":
                    case 4:
                        message.target = 4;
                        break;
                    case "TARGET_TYPE_ONEOF":
                    case 5:
                        message.target = 5;
                        break;
                    case "TARGET_TYPE_ENUM":
                    case 6:
                        message.target = 6;
                        break;
                    case "TARGET_TYPE_ENUM_ENTRY":
                    case 7:
                        message.target = 7;
                        break;
                    case "TARGET_TYPE_SERVICE":
                    case 8:
                        message.target = 8;
                        break;
                    case "TARGET_TYPE_METHOD":
                    case 9:
                        message.target = 9;
                        break;
                    }
                    if (object.uninterpretedOption) {
                        if (!Array.isArray(object.uninterpretedOption))
                            throw TypeError(".google.protobuf.FieldOptions.uninterpretedOption: array expected");
                        message.uninterpretedOption = [];
                        for (var i = 0; i < object.uninterpretedOption.length; ++i) {
                            if (typeof object.uninterpretedOption[i] !== "object")
                                throw TypeError(".google.protobuf.FieldOptions.uninterpretedOption: object expected");
                            message.uninterpretedOption[i] = $root.google.protobuf.UninterpretedOption.fromObject(object.uninterpretedOption[i]);
                        }
                    }
                    if (object[".google.api.fieldBehavior"]) {
                        if (!Array.isArray(object[".google.api.fieldBehavior"]))
                            throw TypeError(".google.protobuf.FieldOptions..google.api.fieldBehavior: array expected");
                        message[".google.api.fieldBehavior"] = [];
                        for (var i = 0; i < object[".google.api.fieldBehavior"].length; ++i)
                            switch (object[".google.api.fieldBehavior"][i]) {
                            default:
                                if (typeof object[".google.api.fieldBehavior"][i] === "number") {
                                    message[".google.api.fieldBehavior"][i] = object[".google.api.fieldBehavior"][i];
                                    break;
                                }
                            case "FIELD_BEHAVIOR_UNSPECIFIED":
                            case 0:
                                message[".google.api.fieldBehavior"][i] = 0;
                                break;
                            case "OPTIONAL":
                            case 1:
                                message[".google.api.fieldBehavior"][i] = 1;
                                break;
                            case "REQUIRED":
                            case 2:
                                message[".google.api.fieldBehavior"][i] = 2;
                                break;
                            case "OUTPUT_ONLY":
                            case 3:
                                message[".google.api.fieldBehavior"][i] = 3;
                                break;
                            case "INPUT_ONLY":
                            case 4:
                                message[".google.api.fieldBehavior"][i] = 4;
                                break;
                            case "IMMUTABLE":
                            case 5:
                                message[".google.api.fieldBehavior"][i] = 5;
                                break;
                            case "UNORDERED_LIST":
                            case 6:
                                message[".google.api.fieldBehavior"][i] = 6;
                                break;
                            case "NON_EMPTY_DEFAULT":
                            case 7:
                                message[".google.api.fieldBehavior"][i] = 7;
                                break;
                            }
                    }
                    if (object[".google.api.resourceReference"] != null) {
                        if (typeof object[".google.api.resourceReference"] !== "object")
                            throw TypeError(".google.protobuf.FieldOptions..google.api.resourceReference: object expected");
                        message[".google.api.resourceReference"] = $root.google.api.ResourceReference.fromObject(object[".google.api.resourceReference"]);
                    }
                    return message;
                };
    
                /**
                 * Creates a plain object from a FieldOptions message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.protobuf.FieldOptions
                 * @static
                 * @param {google.protobuf.FieldOptions} message FieldOptions
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                FieldOptions.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.arrays || options.defaults) {
                        object.uninterpretedOption = [];
                        object[".google.api.fieldBehavior"] = [];
                    }
                    if (options.defaults) {
                        object.ctype = options.enums === String ? "STRING" : 0;
                        object.packed = false;
                        object.deprecated = false;
                        object.lazy = false;
                        object.jstype = options.enums === String ? "JS_NORMAL" : 0;
                        object.weak = false;
                        object.unverifiedLazy = false;
                        object.debugRedact = false;
                        object.retention = options.enums === String ? "RETENTION_UNKNOWN" : 0;
                        object.target = options.enums === String ? "TARGET_TYPE_UNKNOWN" : 0;
                        object[".google.api.resourceReference"] = null;
                    }
                    if (message.ctype != null && message.hasOwnProperty("ctype"))
                        object.ctype = options.enums === String ? $root.google.protobuf.FieldOptions.CType[message.ctype] === undefined ? message.ctype : $root.google.protobuf.FieldOptions.CType[message.ctype] : message.ctype;
                    if (message.packed != null && message.hasOwnProperty("packed"))
                        object.packed = message.packed;
                    if (message.deprecated != null && message.hasOwnProperty("deprecated"))
                        object.deprecated = message.deprecated;
                    if (message.lazy != null && message.hasOwnProperty("lazy"))
                        object.lazy = message.lazy;
                    if (message.jstype != null && message.hasOwnProperty("jstype"))
                        object.jstype = options.enums === String ? $root.google.protobuf.FieldOptions.JSType[message.jstype] === undefined ? message.jstype : $root.google.protobuf.FieldOptions.JSType[message.jstype] : message.jstype;
                    if (message.weak != null && message.hasOwnProperty("weak"))
                        object.weak = message.weak;
                    if (message.unverifiedLazy != null && message.hasOwnProperty("unverifiedLazy"))
                        object.unverifiedLazy = message.unverifiedLazy;
                    if (message.debugRedact != null && message.hasOwnProperty("debugRedact"))
                        object.debugRedact = message.debugRedact;
                    if (message.retention != null && message.hasOwnProperty("retention"))
                        object.retention = options.enums === String ? $root.google.protobuf.FieldOptions.OptionRetention[message.retention] === undefined ? message.retention : $root.google.protobuf.FieldOptions.OptionRetention[message.retention] : message.retention;
                    if (message.target != null && message.hasOwnProperty("target"))
                        object.target = options.enums === String ? $root.google.protobuf.FieldOptions.OptionTargetType[message.target] === undefined ? message.target : $root.google.protobuf.FieldOptions.OptionTargetType[message.target] : message.target;
                    if (message.uninterpretedOption && message.uninterpretedOption.length) {
                        object.uninterpretedOption = [];
                        for (var j = 0; j < message.uninterpretedOption.length; ++j)
                            object.uninterpretedOption[j] = $root.google.protobuf.UninterpretedOption.toObject(message.uninterpretedOption[j], options);
                    }
                    if (message[".google.api.fieldBehavior"] && message[".google.api.fieldBehavior"].length) {
                        object[".google.api.fieldBehavior"] = [];
                        for (var j = 0; j < message[".google.api.fieldBehavior"].length; ++j)
                            object[".google.api.fieldBehavior"][j] = options.enums === String ? $root.google.api.FieldBehavior[message[".google.api.fieldBehavior"][j]] === undefined ? message[".google.api.fieldBehavior"][j] : $root.google.api.FieldBehavior[message[".google.api.fieldBehavior"][j]] : message[".google.api.fieldBehavior"][j];
                    }
                    if (message[".google.api.resourceReference"] != null && message.hasOwnProperty(".google.api.resourceReference"))
                        object[".google.api.resourceReference"] = $root.google.api.ResourceReference.toObject(message[".google.api.resourceReference"], options);
                    return object;
                };
    
                /**
                 * Converts this FieldOptions to JSON.
                 * @function toJSON
                 * @memberof google.protobuf.FieldOptions
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                FieldOptions.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for FieldOptions
                 * @function getTypeUrl
                 * @memberof google.protobuf.FieldOptions
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                FieldOptions.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.protobuf.FieldOptions";
                };
    
                /**
                 * CType enum.
                 * @name google.protobuf.FieldOptions.CType
                 * @enum {number}
                 * @property {number} STRING=0 STRING value
                 * @property {number} CORD=1 CORD value
                 * @property {number} STRING_PIECE=2 STRING_PIECE value
                 */
                FieldOptions.CType = (function() {
                    var valuesById = {}, values = Object.create(valuesById);
                    values[valuesById[0] = "STRING"] = 0;
                    values[valuesById[1] = "CORD"] = 1;
                    values[valuesById[2] = "STRING_PIECE"] = 2;
                    return values;
                })();
    
                /**
                 * JSType enum.
                 * @name google.protobuf.FieldOptions.JSType
                 * @enum {number}
                 * @property {number} JS_NORMAL=0 JS_NORMAL value
                 * @property {number} JS_STRING=1 JS_STRING value
                 * @property {number} JS_NUMBER=2 JS_NUMBER value
                 */
                FieldOptions.JSType = (function() {
                    var valuesById = {}, values = Object.create(valuesById);
                    values[valuesById[0] = "JS_NORMAL"] = 0;
                    values[valuesById[1] = "JS_STRING"] = 1;
                    values[valuesById[2] = "JS_NUMBER"] = 2;
                    return values;
                })();
    
                /**
                 * OptionRetention enum.
                 * @name google.protobuf.FieldOptions.OptionRetention
                 * @enum {number}
                 * @property {number} RETENTION_UNKNOWN=0 RETENTION_UNKNOWN value
                 * @property {number} RETENTION_RUNTIME=1 RETENTION_RUNTIME value
                 * @property {number} RETENTION_SOURCE=2 RETENTION_SOURCE value
                 */
                FieldOptions.OptionRetention = (function() {
                    var valuesById = {}, values = Object.create(valuesById);
                    values[valuesById[0] = "RETENTION_UNKNOWN"] = 0;
                    values[valuesById[1] = "RETENTION_RUNTIME"] = 1;
                    values[valuesById[2] = "RETENTION_SOURCE"] = 2;
                    return values;
                })();
    
                /**
                 * OptionTargetType enum.
                 * @name google.protobuf.FieldOptions.OptionTargetType
                 * @enum {number}
                 * @property {number} TARGET_TYPE_UNKNOWN=0 TARGET_TYPE_UNKNOWN value
                 * @property {number} TARGET_TYPE_FILE=1 TARGET_TYPE_FILE value
                 * @property {number} TARGET_TYPE_EXTENSION_RANGE=2 TARGET_TYPE_EXTENSION_RANGE value
                 * @property {number} TARGET_TYPE_MESSAGE=3 TARGET_TYPE_MESSAGE value
                 * @property {number} TARGET_TYPE_FIELD=4 TARGET_TYPE_FIELD value
                 * @property {number} TARGET_TYPE_ONEOF=5 TARGET_TYPE_ONEOF value
                 * @property {number} TARGET_TYPE_ENUM=6 TARGET_TYPE_ENUM value
                 * @property {number} TARGET_TYPE_ENUM_ENTRY=7 TARGET_TYPE_ENUM_ENTRY value
                 * @property {number} TARGET_TYPE_SERVICE=8 TARGET_TYPE_SERVICE value
                 * @property {number} TARGET_TYPE_METHOD=9 TARGET_TYPE_METHOD value
                 */
                FieldOptions.OptionTargetType = (function() {
                    var valuesById = {}, values = Object.create(valuesById);
                    values[valuesById[0] = "TARGET_TYPE_UNKNOWN"] = 0;
                    values[valuesById[1] = "TARGET_TYPE_FILE"] = 1;
                    values[valuesById[2] = "TARGET_TYPE_EXTENSION_RANGE"] = 2;
                    values[valuesById[3] = "TARGET_TYPE_MESSAGE"] = 3;
                    values[valuesById[4] = "TARGET_TYPE_FIELD"] = 4;
                    values[valuesById[5] = "TARGET_TYPE_ONEOF"] = 5;
                    values[valuesById[6] = "TARGET_TYPE_ENUM"] = 6;
                    values[valuesById[7] = "TARGET_TYPE_ENUM_ENTRY"] = 7;
                    values[valuesById[8] = "TARGET_TYPE_SERVICE"] = 8;
                    values[valuesById[9] = "TARGET_TYPE_METHOD"] = 9;
                    return values;
                })();
    
                return FieldOptions;
            })();
    
            protobuf.OneofOptions = (function() {
    
                /**
                 * Properties of an OneofOptions.
                 * @memberof google.protobuf
                 * @interface IOneofOptions
                 * @property {Array.<google.protobuf.IUninterpretedOption>|null} [uninterpretedOption] OneofOptions uninterpretedOption
                 */
    
                /**
                 * Constructs a new OneofOptions.
                 * @memberof google.protobuf
                 * @classdesc Represents an OneofOptions.
                 * @implements IOneofOptions
                 * @constructor
                 * @param {google.protobuf.IOneofOptions=} [properties] Properties to set
                 */
                function OneofOptions(properties) {
                    this.uninterpretedOption = [];
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * OneofOptions uninterpretedOption.
                 * @member {Array.<google.protobuf.IUninterpretedOption>} uninterpretedOption
                 * @memberof google.protobuf.OneofOptions
                 * @instance
                 */
                OneofOptions.prototype.uninterpretedOption = $util.emptyArray;
    
                /**
                 * Creates a new OneofOptions instance using the specified properties.
                 * @function create
                 * @memberof google.protobuf.OneofOptions
                 * @static
                 * @param {google.protobuf.IOneofOptions=} [properties] Properties to set
                 * @returns {google.protobuf.OneofOptions} OneofOptions instance
                 */
                OneofOptions.create = function create(properties) {
                    return new OneofOptions(properties);
                };
    
                /**
                 * Encodes the specified OneofOptions message. Does not implicitly {@link google.protobuf.OneofOptions.verify|verify} messages.
                 * @function encode
                 * @memberof google.protobuf.OneofOptions
                 * @static
                 * @param {google.protobuf.IOneofOptions} message OneofOptions message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                OneofOptions.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.uninterpretedOption != null && message.uninterpretedOption.length)
                        for (var i = 0; i < message.uninterpretedOption.length; ++i)
                            $root.google.protobuf.UninterpretedOption.encode(message.uninterpretedOption[i], writer.uint32(/* id 999, wireType 2 =*/7994).fork()).ldelim();
                    return writer;
                };
    
                /**
                 * Encodes the specified OneofOptions message, length delimited. Does not implicitly {@link google.protobuf.OneofOptions.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.protobuf.OneofOptions
                 * @static
                 * @param {google.protobuf.IOneofOptions} message OneofOptions message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                OneofOptions.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes an OneofOptions message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.protobuf.OneofOptions
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.protobuf.OneofOptions} OneofOptions
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                OneofOptions.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.OneofOptions();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 999: {
                                if (!(message.uninterpretedOption && message.uninterpretedOption.length))
                                    message.uninterpretedOption = [];
                                message.uninterpretedOption.push($root.google.protobuf.UninterpretedOption.decode(reader, reader.uint32()));
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes an OneofOptions message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.protobuf.OneofOptions
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.protobuf.OneofOptions} OneofOptions
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                OneofOptions.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies an OneofOptions message.
                 * @function verify
                 * @memberof google.protobuf.OneofOptions
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                OneofOptions.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.uninterpretedOption != null && message.hasOwnProperty("uninterpretedOption")) {
                        if (!Array.isArray(message.uninterpretedOption))
                            return "uninterpretedOption: array expected";
                        for (var i = 0; i < message.uninterpretedOption.length; ++i) {
                            var error = $root.google.protobuf.UninterpretedOption.verify(message.uninterpretedOption[i]);
                            if (error)
                                return "uninterpretedOption." + error;
                        }
                    }
                    return null;
                };
    
                /**
                 * Creates an OneofOptions message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.protobuf.OneofOptions
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.protobuf.OneofOptions} OneofOptions
                 */
                OneofOptions.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.protobuf.OneofOptions)
                        return object;
                    var message = new $root.google.protobuf.OneofOptions();
                    if (object.uninterpretedOption) {
                        if (!Array.isArray(object.uninterpretedOption))
                            throw TypeError(".google.protobuf.OneofOptions.uninterpretedOption: array expected");
                        message.uninterpretedOption = [];
                        for (var i = 0; i < object.uninterpretedOption.length; ++i) {
                            if (typeof object.uninterpretedOption[i] !== "object")
                                throw TypeError(".google.protobuf.OneofOptions.uninterpretedOption: object expected");
                            message.uninterpretedOption[i] = $root.google.protobuf.UninterpretedOption.fromObject(object.uninterpretedOption[i]);
                        }
                    }
                    return message;
                };
    
                /**
                 * Creates a plain object from an OneofOptions message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.protobuf.OneofOptions
                 * @static
                 * @param {google.protobuf.OneofOptions} message OneofOptions
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                OneofOptions.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.arrays || options.defaults)
                        object.uninterpretedOption = [];
                    if (message.uninterpretedOption && message.uninterpretedOption.length) {
                        object.uninterpretedOption = [];
                        for (var j = 0; j < message.uninterpretedOption.length; ++j)
                            object.uninterpretedOption[j] = $root.google.protobuf.UninterpretedOption.toObject(message.uninterpretedOption[j], options);
                    }
                    return object;
                };
    
                /**
                 * Converts this OneofOptions to JSON.
                 * @function toJSON
                 * @memberof google.protobuf.OneofOptions
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                OneofOptions.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for OneofOptions
                 * @function getTypeUrl
                 * @memberof google.protobuf.OneofOptions
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                OneofOptions.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.protobuf.OneofOptions";
                };
    
                return OneofOptions;
            })();
    
            protobuf.EnumOptions = (function() {
    
                /**
                 * Properties of an EnumOptions.
                 * @memberof google.protobuf
                 * @interface IEnumOptions
                 * @property {boolean|null} [allowAlias] EnumOptions allowAlias
                 * @property {boolean|null} [deprecated] EnumOptions deprecated
                 * @property {boolean|null} [deprecatedLegacyJsonFieldConflicts] EnumOptions deprecatedLegacyJsonFieldConflicts
                 * @property {Array.<google.protobuf.IUninterpretedOption>|null} [uninterpretedOption] EnumOptions uninterpretedOption
                 */
    
                /**
                 * Constructs a new EnumOptions.
                 * @memberof google.protobuf
                 * @classdesc Represents an EnumOptions.
                 * @implements IEnumOptions
                 * @constructor
                 * @param {google.protobuf.IEnumOptions=} [properties] Properties to set
                 */
                function EnumOptions(properties) {
                    this.uninterpretedOption = [];
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * EnumOptions allowAlias.
                 * @member {boolean} allowAlias
                 * @memberof google.protobuf.EnumOptions
                 * @instance
                 */
                EnumOptions.prototype.allowAlias = false;
    
                /**
                 * EnumOptions deprecated.
                 * @member {boolean} deprecated
                 * @memberof google.protobuf.EnumOptions
                 * @instance
                 */
                EnumOptions.prototype.deprecated = false;
    
                /**
                 * EnumOptions deprecatedLegacyJsonFieldConflicts.
                 * @member {boolean} deprecatedLegacyJsonFieldConflicts
                 * @memberof google.protobuf.EnumOptions
                 * @instance
                 */
                EnumOptions.prototype.deprecatedLegacyJsonFieldConflicts = false;
    
                /**
                 * EnumOptions uninterpretedOption.
                 * @member {Array.<google.protobuf.IUninterpretedOption>} uninterpretedOption
                 * @memberof google.protobuf.EnumOptions
                 * @instance
                 */
                EnumOptions.prototype.uninterpretedOption = $util.emptyArray;
    
                /**
                 * Creates a new EnumOptions instance using the specified properties.
                 * @function create
                 * @memberof google.protobuf.EnumOptions
                 * @static
                 * @param {google.protobuf.IEnumOptions=} [properties] Properties to set
                 * @returns {google.protobuf.EnumOptions} EnumOptions instance
                 */
                EnumOptions.create = function create(properties) {
                    return new EnumOptions(properties);
                };
    
                /**
                 * Encodes the specified EnumOptions message. Does not implicitly {@link google.protobuf.EnumOptions.verify|verify} messages.
                 * @function encode
                 * @memberof google.protobuf.EnumOptions
                 * @static
                 * @param {google.protobuf.IEnumOptions} message EnumOptions message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                EnumOptions.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.allowAlias != null && Object.hasOwnProperty.call(message, "allowAlias"))
                        writer.uint32(/* id 2, wireType 0 =*/16).bool(message.allowAlias);
                    if (message.deprecated != null && Object.hasOwnProperty.call(message, "deprecated"))
                        writer.uint32(/* id 3, wireType 0 =*/24).bool(message.deprecated);
                    if (message.deprecatedLegacyJsonFieldConflicts != null && Object.hasOwnProperty.call(message, "deprecatedLegacyJsonFieldConflicts"))
                        writer.uint32(/* id 6, wireType 0 =*/48).bool(message.deprecatedLegacyJsonFieldConflicts);
                    if (message.uninterpretedOption != null && message.uninterpretedOption.length)
                        for (var i = 0; i < message.uninterpretedOption.length; ++i)
                            $root.google.protobuf.UninterpretedOption.encode(message.uninterpretedOption[i], writer.uint32(/* id 999, wireType 2 =*/7994).fork()).ldelim();
                    return writer;
                };
    
                /**
                 * Encodes the specified EnumOptions message, length delimited. Does not implicitly {@link google.protobuf.EnumOptions.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.protobuf.EnumOptions
                 * @static
                 * @param {google.protobuf.IEnumOptions} message EnumOptions message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                EnumOptions.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes an EnumOptions message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.protobuf.EnumOptions
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.protobuf.EnumOptions} EnumOptions
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                EnumOptions.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.EnumOptions();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 2: {
                                message.allowAlias = reader.bool();
                                break;
                            }
                        case 3: {
                                message.deprecated = reader.bool();
                                break;
                            }
                        case 6: {
                                message.deprecatedLegacyJsonFieldConflicts = reader.bool();
                                break;
                            }
                        case 999: {
                                if (!(message.uninterpretedOption && message.uninterpretedOption.length))
                                    message.uninterpretedOption = [];
                                message.uninterpretedOption.push($root.google.protobuf.UninterpretedOption.decode(reader, reader.uint32()));
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes an EnumOptions message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.protobuf.EnumOptions
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.protobuf.EnumOptions} EnumOptions
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                EnumOptions.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies an EnumOptions message.
                 * @function verify
                 * @memberof google.protobuf.EnumOptions
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                EnumOptions.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.allowAlias != null && message.hasOwnProperty("allowAlias"))
                        if (typeof message.allowAlias !== "boolean")
                            return "allowAlias: boolean expected";
                    if (message.deprecated != null && message.hasOwnProperty("deprecated"))
                        if (typeof message.deprecated !== "boolean")
                            return "deprecated: boolean expected";
                    if (message.deprecatedLegacyJsonFieldConflicts != null && message.hasOwnProperty("deprecatedLegacyJsonFieldConflicts"))
                        if (typeof message.deprecatedLegacyJsonFieldConflicts !== "boolean")
                            return "deprecatedLegacyJsonFieldConflicts: boolean expected";
                    if (message.uninterpretedOption != null && message.hasOwnProperty("uninterpretedOption")) {
                        if (!Array.isArray(message.uninterpretedOption))
                            return "uninterpretedOption: array expected";
                        for (var i = 0; i < message.uninterpretedOption.length; ++i) {
                            var error = $root.google.protobuf.UninterpretedOption.verify(message.uninterpretedOption[i]);
                            if (error)
                                return "uninterpretedOption." + error;
                        }
                    }
                    return null;
                };
    
                /**
                 * Creates an EnumOptions message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.protobuf.EnumOptions
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.protobuf.EnumOptions} EnumOptions
                 */
                EnumOptions.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.protobuf.EnumOptions)
                        return object;
                    var message = new $root.google.protobuf.EnumOptions();
                    if (object.allowAlias != null)
                        message.allowAlias = Boolean(object.allowAlias);
                    if (object.deprecated != null)
                        message.deprecated = Boolean(object.deprecated);
                    if (object.deprecatedLegacyJsonFieldConflicts != null)
                        message.deprecatedLegacyJsonFieldConflicts = Boolean(object.deprecatedLegacyJsonFieldConflicts);
                    if (object.uninterpretedOption) {
                        if (!Array.isArray(object.uninterpretedOption))
                            throw TypeError(".google.protobuf.EnumOptions.uninterpretedOption: array expected");
                        message.uninterpretedOption = [];
                        for (var i = 0; i < object.uninterpretedOption.length; ++i) {
                            if (typeof object.uninterpretedOption[i] !== "object")
                                throw TypeError(".google.protobuf.EnumOptions.uninterpretedOption: object expected");
                            message.uninterpretedOption[i] = $root.google.protobuf.UninterpretedOption.fromObject(object.uninterpretedOption[i]);
                        }
                    }
                    return message;
                };
    
                /**
                 * Creates a plain object from an EnumOptions message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.protobuf.EnumOptions
                 * @static
                 * @param {google.protobuf.EnumOptions} message EnumOptions
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                EnumOptions.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.arrays || options.defaults)
                        object.uninterpretedOption = [];
                    if (options.defaults) {
                        object.allowAlias = false;
                        object.deprecated = false;
                        object.deprecatedLegacyJsonFieldConflicts = false;
                    }
                    if (message.allowAlias != null && message.hasOwnProperty("allowAlias"))
                        object.allowAlias = message.allowAlias;
                    if (message.deprecated != null && message.hasOwnProperty("deprecated"))
                        object.deprecated = message.deprecated;
                    if (message.deprecatedLegacyJsonFieldConflicts != null && message.hasOwnProperty("deprecatedLegacyJsonFieldConflicts"))
                        object.deprecatedLegacyJsonFieldConflicts = message.deprecatedLegacyJsonFieldConflicts;
                    if (message.uninterpretedOption && message.uninterpretedOption.length) {
                        object.uninterpretedOption = [];
                        for (var j = 0; j < message.uninterpretedOption.length; ++j)
                            object.uninterpretedOption[j] = $root.google.protobuf.UninterpretedOption.toObject(message.uninterpretedOption[j], options);
                    }
                    return object;
                };
    
                /**
                 * Converts this EnumOptions to JSON.
                 * @function toJSON
                 * @memberof google.protobuf.EnumOptions
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                EnumOptions.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for EnumOptions
                 * @function getTypeUrl
                 * @memberof google.protobuf.EnumOptions
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                EnumOptions.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.protobuf.EnumOptions";
                };
    
                return EnumOptions;
            })();
    
            protobuf.EnumValueOptions = (function() {
    
                /**
                 * Properties of an EnumValueOptions.
                 * @memberof google.protobuf
                 * @interface IEnumValueOptions
                 * @property {boolean|null} [deprecated] EnumValueOptions deprecated
                 * @property {Array.<google.protobuf.IUninterpretedOption>|null} [uninterpretedOption] EnumValueOptions uninterpretedOption
                 */
    
                /**
                 * Constructs a new EnumValueOptions.
                 * @memberof google.protobuf
                 * @classdesc Represents an EnumValueOptions.
                 * @implements IEnumValueOptions
                 * @constructor
                 * @param {google.protobuf.IEnumValueOptions=} [properties] Properties to set
                 */
                function EnumValueOptions(properties) {
                    this.uninterpretedOption = [];
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * EnumValueOptions deprecated.
                 * @member {boolean} deprecated
                 * @memberof google.protobuf.EnumValueOptions
                 * @instance
                 */
                EnumValueOptions.prototype.deprecated = false;
    
                /**
                 * EnumValueOptions uninterpretedOption.
                 * @member {Array.<google.protobuf.IUninterpretedOption>} uninterpretedOption
                 * @memberof google.protobuf.EnumValueOptions
                 * @instance
                 */
                EnumValueOptions.prototype.uninterpretedOption = $util.emptyArray;
    
                /**
                 * Creates a new EnumValueOptions instance using the specified properties.
                 * @function create
                 * @memberof google.protobuf.EnumValueOptions
                 * @static
                 * @param {google.protobuf.IEnumValueOptions=} [properties] Properties to set
                 * @returns {google.protobuf.EnumValueOptions} EnumValueOptions instance
                 */
                EnumValueOptions.create = function create(properties) {
                    return new EnumValueOptions(properties);
                };
    
                /**
                 * Encodes the specified EnumValueOptions message. Does not implicitly {@link google.protobuf.EnumValueOptions.verify|verify} messages.
                 * @function encode
                 * @memberof google.protobuf.EnumValueOptions
                 * @static
                 * @param {google.protobuf.IEnumValueOptions} message EnumValueOptions message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                EnumValueOptions.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.deprecated != null && Object.hasOwnProperty.call(message, "deprecated"))
                        writer.uint32(/* id 1, wireType 0 =*/8).bool(message.deprecated);
                    if (message.uninterpretedOption != null && message.uninterpretedOption.length)
                        for (var i = 0; i < message.uninterpretedOption.length; ++i)
                            $root.google.protobuf.UninterpretedOption.encode(message.uninterpretedOption[i], writer.uint32(/* id 999, wireType 2 =*/7994).fork()).ldelim();
                    return writer;
                };
    
                /**
                 * Encodes the specified EnumValueOptions message, length delimited. Does not implicitly {@link google.protobuf.EnumValueOptions.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.protobuf.EnumValueOptions
                 * @static
                 * @param {google.protobuf.IEnumValueOptions} message EnumValueOptions message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                EnumValueOptions.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes an EnumValueOptions message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.protobuf.EnumValueOptions
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.protobuf.EnumValueOptions} EnumValueOptions
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                EnumValueOptions.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.EnumValueOptions();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1: {
                                message.deprecated = reader.bool();
                                break;
                            }
                        case 999: {
                                if (!(message.uninterpretedOption && message.uninterpretedOption.length))
                                    message.uninterpretedOption = [];
                                message.uninterpretedOption.push($root.google.protobuf.UninterpretedOption.decode(reader, reader.uint32()));
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes an EnumValueOptions message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.protobuf.EnumValueOptions
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.protobuf.EnumValueOptions} EnumValueOptions
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                EnumValueOptions.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies an EnumValueOptions message.
                 * @function verify
                 * @memberof google.protobuf.EnumValueOptions
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                EnumValueOptions.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.deprecated != null && message.hasOwnProperty("deprecated"))
                        if (typeof message.deprecated !== "boolean")
                            return "deprecated: boolean expected";
                    if (message.uninterpretedOption != null && message.hasOwnProperty("uninterpretedOption")) {
                        if (!Array.isArray(message.uninterpretedOption))
                            return "uninterpretedOption: array expected";
                        for (var i = 0; i < message.uninterpretedOption.length; ++i) {
                            var error = $root.google.protobuf.UninterpretedOption.verify(message.uninterpretedOption[i]);
                            if (error)
                                return "uninterpretedOption." + error;
                        }
                    }
                    return null;
                };
    
                /**
                 * Creates an EnumValueOptions message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.protobuf.EnumValueOptions
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.protobuf.EnumValueOptions} EnumValueOptions
                 */
                EnumValueOptions.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.protobuf.EnumValueOptions)
                        return object;
                    var message = new $root.google.protobuf.EnumValueOptions();
                    if (object.deprecated != null)
                        message.deprecated = Boolean(object.deprecated);
                    if (object.uninterpretedOption) {
                        if (!Array.isArray(object.uninterpretedOption))
                            throw TypeError(".google.protobuf.EnumValueOptions.uninterpretedOption: array expected");
                        message.uninterpretedOption = [];
                        for (var i = 0; i < object.uninterpretedOption.length; ++i) {
                            if (typeof object.uninterpretedOption[i] !== "object")
                                throw TypeError(".google.protobuf.EnumValueOptions.uninterpretedOption: object expected");
                            message.uninterpretedOption[i] = $root.google.protobuf.UninterpretedOption.fromObject(object.uninterpretedOption[i]);
                        }
                    }
                    return message;
                };
    
                /**
                 * Creates a plain object from an EnumValueOptions message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.protobuf.EnumValueOptions
                 * @static
                 * @param {google.protobuf.EnumValueOptions} message EnumValueOptions
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                EnumValueOptions.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.arrays || options.defaults)
                        object.uninterpretedOption = [];
                    if (options.defaults)
                        object.deprecated = false;
                    if (message.deprecated != null && message.hasOwnProperty("deprecated"))
                        object.deprecated = message.deprecated;
                    if (message.uninterpretedOption && message.uninterpretedOption.length) {
                        object.uninterpretedOption = [];
                        for (var j = 0; j < message.uninterpretedOption.length; ++j)
                            object.uninterpretedOption[j] = $root.google.protobuf.UninterpretedOption.toObject(message.uninterpretedOption[j], options);
                    }
                    return object;
                };
    
                /**
                 * Converts this EnumValueOptions to JSON.
                 * @function toJSON
                 * @memberof google.protobuf.EnumValueOptions
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                EnumValueOptions.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for EnumValueOptions
                 * @function getTypeUrl
                 * @memberof google.protobuf.EnumValueOptions
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                EnumValueOptions.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.protobuf.EnumValueOptions";
                };
    
                return EnumValueOptions;
            })();
    
            protobuf.ServiceOptions = (function() {
    
                /**
                 * Properties of a ServiceOptions.
                 * @memberof google.protobuf
                 * @interface IServiceOptions
                 * @property {boolean|null} [deprecated] ServiceOptions deprecated
                 * @property {Array.<google.protobuf.IUninterpretedOption>|null} [uninterpretedOption] ServiceOptions uninterpretedOption
                 * @property {string|null} [".google.api.defaultHost"] ServiceOptions .google.api.defaultHost
                 * @property {string|null} [".google.api.oauthScopes"] ServiceOptions .google.api.oauthScopes
                 */
    
                /**
                 * Constructs a new ServiceOptions.
                 * @memberof google.protobuf
                 * @classdesc Represents a ServiceOptions.
                 * @implements IServiceOptions
                 * @constructor
                 * @param {google.protobuf.IServiceOptions=} [properties] Properties to set
                 */
                function ServiceOptions(properties) {
                    this.uninterpretedOption = [];
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * ServiceOptions deprecated.
                 * @member {boolean} deprecated
                 * @memberof google.protobuf.ServiceOptions
                 * @instance
                 */
                ServiceOptions.prototype.deprecated = false;
    
                /**
                 * ServiceOptions uninterpretedOption.
                 * @member {Array.<google.protobuf.IUninterpretedOption>} uninterpretedOption
                 * @memberof google.protobuf.ServiceOptions
                 * @instance
                 */
                ServiceOptions.prototype.uninterpretedOption = $util.emptyArray;
    
                /**
                 * ServiceOptions .google.api.defaultHost.
                 * @member {string} .google.api.defaultHost
                 * @memberof google.protobuf.ServiceOptions
                 * @instance
                 */
                ServiceOptions.prototype[".google.api.defaultHost"] = "";
    
                /**
                 * ServiceOptions .google.api.oauthScopes.
                 * @member {string} .google.api.oauthScopes
                 * @memberof google.protobuf.ServiceOptions
                 * @instance
                 */
                ServiceOptions.prototype[".google.api.oauthScopes"] = "";
    
                /**
                 * Creates a new ServiceOptions instance using the specified properties.
                 * @function create
                 * @memberof google.protobuf.ServiceOptions
                 * @static
                 * @param {google.protobuf.IServiceOptions=} [properties] Properties to set
                 * @returns {google.protobuf.ServiceOptions} ServiceOptions instance
                 */
                ServiceOptions.create = function create(properties) {
                    return new ServiceOptions(properties);
                };
    
                /**
                 * Encodes the specified ServiceOptions message. Does not implicitly {@link google.protobuf.ServiceOptions.verify|verify} messages.
                 * @function encode
                 * @memberof google.protobuf.ServiceOptions
                 * @static
                 * @param {google.protobuf.IServiceOptions} message ServiceOptions message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                ServiceOptions.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.deprecated != null && Object.hasOwnProperty.call(message, "deprecated"))
                        writer.uint32(/* id 33, wireType 0 =*/264).bool(message.deprecated);
                    if (message.uninterpretedOption != null && message.uninterpretedOption.length)
                        for (var i = 0; i < message.uninterpretedOption.length; ++i)
                            $root.google.protobuf.UninterpretedOption.encode(message.uninterpretedOption[i], writer.uint32(/* id 999, wireType 2 =*/7994).fork()).ldelim();
                    if (message[".google.api.defaultHost"] != null && Object.hasOwnProperty.call(message, ".google.api.defaultHost"))
                        writer.uint32(/* id 1049, wireType 2 =*/8394).string(message[".google.api.defaultHost"]);
                    if (message[".google.api.oauthScopes"] != null && Object.hasOwnProperty.call(message, ".google.api.oauthScopes"))
                        writer.uint32(/* id 1050, wireType 2 =*/8402).string(message[".google.api.oauthScopes"]);
                    return writer;
                };
    
                /**
                 * Encodes the specified ServiceOptions message, length delimited. Does not implicitly {@link google.protobuf.ServiceOptions.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.protobuf.ServiceOptions
                 * @static
                 * @param {google.protobuf.IServiceOptions} message ServiceOptions message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                ServiceOptions.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a ServiceOptions message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.protobuf.ServiceOptions
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.protobuf.ServiceOptions} ServiceOptions
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                ServiceOptions.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.ServiceOptions();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 33: {
                                message.deprecated = reader.bool();
                                break;
                            }
                        case 999: {
                                if (!(message.uninterpretedOption && message.uninterpretedOption.length))
                                    message.uninterpretedOption = [];
                                message.uninterpretedOption.push($root.google.protobuf.UninterpretedOption.decode(reader, reader.uint32()));
                                break;
                            }
                        case 1049: {
                                message[".google.api.defaultHost"] = reader.string();
                                break;
                            }
                        case 1050: {
                                message[".google.api.oauthScopes"] = reader.string();
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a ServiceOptions message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.protobuf.ServiceOptions
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.protobuf.ServiceOptions} ServiceOptions
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                ServiceOptions.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a ServiceOptions message.
                 * @function verify
                 * @memberof google.protobuf.ServiceOptions
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                ServiceOptions.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.deprecated != null && message.hasOwnProperty("deprecated"))
                        if (typeof message.deprecated !== "boolean")
                            return "deprecated: boolean expected";
                    if (message.uninterpretedOption != null && message.hasOwnProperty("uninterpretedOption")) {
                        if (!Array.isArray(message.uninterpretedOption))
                            return "uninterpretedOption: array expected";
                        for (var i = 0; i < message.uninterpretedOption.length; ++i) {
                            var error = $root.google.protobuf.UninterpretedOption.verify(message.uninterpretedOption[i]);
                            if (error)
                                return "uninterpretedOption." + error;
                        }
                    }
                    if (message[".google.api.defaultHost"] != null && message.hasOwnProperty(".google.api.defaultHost"))
                        if (!$util.isString(message[".google.api.defaultHost"]))
                            return ".google.api.defaultHost: string expected";
                    if (message[".google.api.oauthScopes"] != null && message.hasOwnProperty(".google.api.oauthScopes"))
                        if (!$util.isString(message[".google.api.oauthScopes"]))
                            return ".google.api.oauthScopes: string expected";
                    return null;
                };
    
                /**
                 * Creates a ServiceOptions message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.protobuf.ServiceOptions
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.protobuf.ServiceOptions} ServiceOptions
                 */
                ServiceOptions.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.protobuf.ServiceOptions)
                        return object;
                    var message = new $root.google.protobuf.ServiceOptions();
                    if (object.deprecated != null)
                        message.deprecated = Boolean(object.deprecated);
                    if (object.uninterpretedOption) {
                        if (!Array.isArray(object.uninterpretedOption))
                            throw TypeError(".google.protobuf.ServiceOptions.uninterpretedOption: array expected");
                        message.uninterpretedOption = [];
                        for (var i = 0; i < object.uninterpretedOption.length; ++i) {
                            if (typeof object.uninterpretedOption[i] !== "object")
                                throw TypeError(".google.protobuf.ServiceOptions.uninterpretedOption: object expected");
                            message.uninterpretedOption[i] = $root.google.protobuf.UninterpretedOption.fromObject(object.uninterpretedOption[i]);
                        }
                    }
                    if (object[".google.api.defaultHost"] != null)
                        message[".google.api.defaultHost"] = String(object[".google.api.defaultHost"]);
                    if (object[".google.api.oauthScopes"] != null)
                        message[".google.api.oauthScopes"] = String(object[".google.api.oauthScopes"]);
                    return message;
                };
    
                /**
                 * Creates a plain object from a ServiceOptions message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.protobuf.ServiceOptions
                 * @static
                 * @param {google.protobuf.ServiceOptions} message ServiceOptions
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                ServiceOptions.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.arrays || options.defaults)
                        object.uninterpretedOption = [];
                    if (options.defaults) {
                        object.deprecated = false;
                        object[".google.api.defaultHost"] = "";
                        object[".google.api.oauthScopes"] = "";
                    }
                    if (message.deprecated != null && message.hasOwnProperty("deprecated"))
                        object.deprecated = message.deprecated;
                    if (message.uninterpretedOption && message.uninterpretedOption.length) {
                        object.uninterpretedOption = [];
                        for (var j = 0; j < message.uninterpretedOption.length; ++j)
                            object.uninterpretedOption[j] = $root.google.protobuf.UninterpretedOption.toObject(message.uninterpretedOption[j], options);
                    }
                    if (message[".google.api.defaultHost"] != null && message.hasOwnProperty(".google.api.defaultHost"))
                        object[".google.api.defaultHost"] = message[".google.api.defaultHost"];
                    if (message[".google.api.oauthScopes"] != null && message.hasOwnProperty(".google.api.oauthScopes"))
                        object[".google.api.oauthScopes"] = message[".google.api.oauthScopes"];
                    return object;
                };
    
                /**
                 * Converts this ServiceOptions to JSON.
                 * @function toJSON
                 * @memberof google.protobuf.ServiceOptions
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                ServiceOptions.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for ServiceOptions
                 * @function getTypeUrl
                 * @memberof google.protobuf.ServiceOptions
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                ServiceOptions.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.protobuf.ServiceOptions";
                };
    
                return ServiceOptions;
            })();
    
            protobuf.MethodOptions = (function() {
    
                /**
                 * Properties of a MethodOptions.
                 * @memberof google.protobuf
                 * @interface IMethodOptions
                 * @property {boolean|null} [deprecated] MethodOptions deprecated
                 * @property {google.protobuf.MethodOptions.IdempotencyLevel|null} [idempotencyLevel] MethodOptions idempotencyLevel
                 * @property {Array.<google.protobuf.IUninterpretedOption>|null} [uninterpretedOption] MethodOptions uninterpretedOption
                 * @property {google.api.IHttpRule|null} [".google.api.http"] MethodOptions .google.api.http
                 * @property {Array.<string>|null} [".google.api.methodSignature"] MethodOptions .google.api.methodSignature
                 * @property {google.longrunning.IOperationInfo|null} [".google.longrunning.operationInfo"] MethodOptions .google.longrunning.operationInfo
                 */
    
                /**
                 * Constructs a new MethodOptions.
                 * @memberof google.protobuf
                 * @classdesc Represents a MethodOptions.
                 * @implements IMethodOptions
                 * @constructor
                 * @param {google.protobuf.IMethodOptions=} [properties] Properties to set
                 */
                function MethodOptions(properties) {
                    this.uninterpretedOption = [];
                    this[".google.api.methodSignature"] = [];
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * MethodOptions deprecated.
                 * @member {boolean} deprecated
                 * @memberof google.protobuf.MethodOptions
                 * @instance
                 */
                MethodOptions.prototype.deprecated = false;
    
                /**
                 * MethodOptions idempotencyLevel.
                 * @member {google.protobuf.MethodOptions.IdempotencyLevel} idempotencyLevel
                 * @memberof google.protobuf.MethodOptions
                 * @instance
                 */
                MethodOptions.prototype.idempotencyLevel = 0;
    
                /**
                 * MethodOptions uninterpretedOption.
                 * @member {Array.<google.protobuf.IUninterpretedOption>} uninterpretedOption
                 * @memberof google.protobuf.MethodOptions
                 * @instance
                 */
                MethodOptions.prototype.uninterpretedOption = $util.emptyArray;
    
                /**
                 * MethodOptions .google.api.http.
                 * @member {google.api.IHttpRule|null|undefined} .google.api.http
                 * @memberof google.protobuf.MethodOptions
                 * @instance
                 */
                MethodOptions.prototype[".google.api.http"] = null;
    
                /**
                 * MethodOptions .google.api.methodSignature.
                 * @member {Array.<string>} .google.api.methodSignature
                 * @memberof google.protobuf.MethodOptions
                 * @instance
                 */
                MethodOptions.prototype[".google.api.methodSignature"] = $util.emptyArray;
    
                /**
                 * MethodOptions .google.longrunning.operationInfo.
                 * @member {google.longrunning.IOperationInfo|null|undefined} .google.longrunning.operationInfo
                 * @memberof google.protobuf.MethodOptions
                 * @instance
                 */
                MethodOptions.prototype[".google.longrunning.operationInfo"] = null;
    
                /**
                 * Creates a new MethodOptions instance using the specified properties.
                 * @function create
                 * @memberof google.protobuf.MethodOptions
                 * @static
                 * @param {google.protobuf.IMethodOptions=} [properties] Properties to set
                 * @returns {google.protobuf.MethodOptions} MethodOptions instance
                 */
                MethodOptions.create = function create(properties) {
                    return new MethodOptions(properties);
                };
    
                /**
                 * Encodes the specified MethodOptions message. Does not implicitly {@link google.protobuf.MethodOptions.verify|verify} messages.
                 * @function encode
                 * @memberof google.protobuf.MethodOptions
                 * @static
                 * @param {google.protobuf.IMethodOptions} message MethodOptions message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                MethodOptions.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.deprecated != null && Object.hasOwnProperty.call(message, "deprecated"))
                        writer.uint32(/* id 33, wireType 0 =*/264).bool(message.deprecated);
                    if (message.idempotencyLevel != null && Object.hasOwnProperty.call(message, "idempotencyLevel"))
                        writer.uint32(/* id 34, wireType 0 =*/272).int32(message.idempotencyLevel);
                    if (message.uninterpretedOption != null && message.uninterpretedOption.length)
                        for (var i = 0; i < message.uninterpretedOption.length; ++i)
                            $root.google.protobuf.UninterpretedOption.encode(message.uninterpretedOption[i], writer.uint32(/* id 999, wireType 2 =*/7994).fork()).ldelim();
                    if (message[".google.longrunning.operationInfo"] != null && Object.hasOwnProperty.call(message, ".google.longrunning.operationInfo"))
                        $root.google.longrunning.OperationInfo.encode(message[".google.longrunning.operationInfo"], writer.uint32(/* id 1049, wireType 2 =*/8394).fork()).ldelim();
                    if (message[".google.api.methodSignature"] != null && message[".google.api.methodSignature"].length)
                        for (var i = 0; i < message[".google.api.methodSignature"].length; ++i)
                            writer.uint32(/* id 1051, wireType 2 =*/8410).string(message[".google.api.methodSignature"][i]);
                    if (message[".google.api.http"] != null && Object.hasOwnProperty.call(message, ".google.api.http"))
                        $root.google.api.HttpRule.encode(message[".google.api.http"], writer.uint32(/* id 72295728, wireType 2 =*/578365826).fork()).ldelim();
                    return writer;
                };
    
                /**
                 * Encodes the specified MethodOptions message, length delimited. Does not implicitly {@link google.protobuf.MethodOptions.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.protobuf.MethodOptions
                 * @static
                 * @param {google.protobuf.IMethodOptions} message MethodOptions message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                MethodOptions.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a MethodOptions message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.protobuf.MethodOptions
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.protobuf.MethodOptions} MethodOptions
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                MethodOptions.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.MethodOptions();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 33: {
                                message.deprecated = reader.bool();
                                break;
                            }
                        case 34: {
                                message.idempotencyLevel = reader.int32();
                                break;
                            }
                        case 999: {
                                if (!(message.uninterpretedOption && message.uninterpretedOption.length))
                                    message.uninterpretedOption = [];
                                message.uninterpretedOption.push($root.google.protobuf.UninterpretedOption.decode(reader, reader.uint32()));
                                break;
                            }
                        case 72295728: {
                                message[".google.api.http"] = $root.google.api.HttpRule.decode(reader, reader.uint32());
                                break;
                            }
                        case 1051: {
                                if (!(message[".google.api.methodSignature"] && message[".google.api.methodSignature"].length))
                                    message[".google.api.methodSignature"] = [];
                                message[".google.api.methodSignature"].push(reader.string());
                                break;
                            }
                        case 1049: {
                                message[".google.longrunning.operationInfo"] = $root.google.longrunning.OperationInfo.decode(reader, reader.uint32());
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a MethodOptions message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.protobuf.MethodOptions
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.protobuf.MethodOptions} MethodOptions
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                MethodOptions.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a MethodOptions message.
                 * @function verify
                 * @memberof google.protobuf.MethodOptions
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                MethodOptions.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.deprecated != null && message.hasOwnProperty("deprecated"))
                        if (typeof message.deprecated !== "boolean")
                            return "deprecated: boolean expected";
                    if (message.idempotencyLevel != null && message.hasOwnProperty("idempotencyLevel"))
                        switch (message.idempotencyLevel) {
                        default:
                            return "idempotencyLevel: enum value expected";
                        case 0:
                        case 1:
                        case 2:
                            break;
                        }
                    if (message.uninterpretedOption != null && message.hasOwnProperty("uninterpretedOption")) {
                        if (!Array.isArray(message.uninterpretedOption))
                            return "uninterpretedOption: array expected";
                        for (var i = 0; i < message.uninterpretedOption.length; ++i) {
                            var error = $root.google.protobuf.UninterpretedOption.verify(message.uninterpretedOption[i]);
                            if (error)
                                return "uninterpretedOption." + error;
                        }
                    }
                    if (message[".google.api.http"] != null && message.hasOwnProperty(".google.api.http")) {
                        var error = $root.google.api.HttpRule.verify(message[".google.api.http"]);
                        if (error)
                            return ".google.api.http." + error;
                    }
                    if (message[".google.api.methodSignature"] != null && message.hasOwnProperty(".google.api.methodSignature")) {
                        if (!Array.isArray(message[".google.api.methodSignature"]))
                            return ".google.api.methodSignature: array expected";
                        for (var i = 0; i < message[".google.api.methodSignature"].length; ++i)
                            if (!$util.isString(message[".google.api.methodSignature"][i]))
                                return ".google.api.methodSignature: string[] expected";
                    }
                    if (message[".google.longrunning.operationInfo"] != null && message.hasOwnProperty(".google.longrunning.operationInfo")) {
                        var error = $root.google.longrunning.OperationInfo.verify(message[".google.longrunning.operationInfo"]);
                        if (error)
                            return ".google.longrunning.operationInfo." + error;
                    }
                    return null;
                };
    
                /**
                 * Creates a MethodOptions message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.protobuf.MethodOptions
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.protobuf.MethodOptions} MethodOptions
                 */
                MethodOptions.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.protobuf.MethodOptions)
                        return object;
                    var message = new $root.google.protobuf.MethodOptions();
                    if (object.deprecated != null)
                        message.deprecated = Boolean(object.deprecated);
                    switch (object.idempotencyLevel) {
                    default:
                        if (typeof object.idempotencyLevel === "number") {
                            message.idempotencyLevel = object.idempotencyLevel;
                            break;
                        }
                        break;
                    case "IDEMPOTENCY_UNKNOWN":
                    case 0:
                        message.idempotencyLevel = 0;
                        break;
                    case "NO_SIDE_EFFECTS":
                    case 1:
                        message.idempotencyLevel = 1;
                        break;
                    case "IDEMPOTENT":
                    case 2:
                        message.idempotencyLevel = 2;
                        break;
                    }
                    if (object.uninterpretedOption) {
                        if (!Array.isArray(object.uninterpretedOption))
                            throw TypeError(".google.protobuf.MethodOptions.uninterpretedOption: array expected");
                        message.uninterpretedOption = [];
                        for (var i = 0; i < object.uninterpretedOption.length; ++i) {
                            if (typeof object.uninterpretedOption[i] !== "object")
                                throw TypeError(".google.protobuf.MethodOptions.uninterpretedOption: object expected");
                            message.uninterpretedOption[i] = $root.google.protobuf.UninterpretedOption.fromObject(object.uninterpretedOption[i]);
                        }
                    }
                    if (object[".google.api.http"] != null) {
                        if (typeof object[".google.api.http"] !== "object")
                            throw TypeError(".google.protobuf.MethodOptions..google.api.http: object expected");
                        message[".google.api.http"] = $root.google.api.HttpRule.fromObject(object[".google.api.http"]);
                    }
                    if (object[".google.api.methodSignature"]) {
                        if (!Array.isArray(object[".google.api.methodSignature"]))
                            throw TypeError(".google.protobuf.MethodOptions..google.api.methodSignature: array expected");
                        message[".google.api.methodSignature"] = [];
                        for (var i = 0; i < object[".google.api.methodSignature"].length; ++i)
                            message[".google.api.methodSignature"][i] = String(object[".google.api.methodSignature"][i]);
                    }
                    if (object[".google.longrunning.operationInfo"] != null) {
                        if (typeof object[".google.longrunning.operationInfo"] !== "object")
                            throw TypeError(".google.protobuf.MethodOptions..google.longrunning.operationInfo: object expected");
                        message[".google.longrunning.operationInfo"] = $root.google.longrunning.OperationInfo.fromObject(object[".google.longrunning.operationInfo"]);
                    }
                    return message;
                };
    
                /**
                 * Creates a plain object from a MethodOptions message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.protobuf.MethodOptions
                 * @static
                 * @param {google.protobuf.MethodOptions} message MethodOptions
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                MethodOptions.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.arrays || options.defaults) {
                        object.uninterpretedOption = [];
                        object[".google.api.methodSignature"] = [];
                    }
                    if (options.defaults) {
                        object.deprecated = false;
                        object.idempotencyLevel = options.enums === String ? "IDEMPOTENCY_UNKNOWN" : 0;
                        object[".google.longrunning.operationInfo"] = null;
                        object[".google.api.http"] = null;
                    }
                    if (message.deprecated != null && message.hasOwnProperty("deprecated"))
                        object.deprecated = message.deprecated;
                    if (message.idempotencyLevel != null && message.hasOwnProperty("idempotencyLevel"))
                        object.idempotencyLevel = options.enums === String ? $root.google.protobuf.MethodOptions.IdempotencyLevel[message.idempotencyLevel] === undefined ? message.idempotencyLevel : $root.google.protobuf.MethodOptions.IdempotencyLevel[message.idempotencyLevel] : message.idempotencyLevel;
                    if (message.uninterpretedOption && message.uninterpretedOption.length) {
                        object.uninterpretedOption = [];
                        for (var j = 0; j < message.uninterpretedOption.length; ++j)
                            object.uninterpretedOption[j] = $root.google.protobuf.UninterpretedOption.toObject(message.uninterpretedOption[j], options);
                    }
                    if (message[".google.longrunning.operationInfo"] != null && message.hasOwnProperty(".google.longrunning.operationInfo"))
                        object[".google.longrunning.operationInfo"] = $root.google.longrunning.OperationInfo.toObject(message[".google.longrunning.operationInfo"], options);
                    if (message[".google.api.methodSignature"] && message[".google.api.methodSignature"].length) {
                        object[".google.api.methodSignature"] = [];
                        for (var j = 0; j < message[".google.api.methodSignature"].length; ++j)
                            object[".google.api.methodSignature"][j] = message[".google.api.methodSignature"][j];
                    }
                    if (message[".google.api.http"] != null && message.hasOwnProperty(".google.api.http"))
                        object[".google.api.http"] = $root.google.api.HttpRule.toObject(message[".google.api.http"], options);
                    return object;
                };
    
                /**
                 * Converts this MethodOptions to JSON.
                 * @function toJSON
                 * @memberof google.protobuf.MethodOptions
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                MethodOptions.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for MethodOptions
                 * @function getTypeUrl
                 * @memberof google.protobuf.MethodOptions
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                MethodOptions.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.protobuf.MethodOptions";
                };
    
                /**
                 * IdempotencyLevel enum.
                 * @name google.protobuf.MethodOptions.IdempotencyLevel
                 * @enum {number}
                 * @property {number} IDEMPOTENCY_UNKNOWN=0 IDEMPOTENCY_UNKNOWN value
                 * @property {number} NO_SIDE_EFFECTS=1 NO_SIDE_EFFECTS value
                 * @property {number} IDEMPOTENT=2 IDEMPOTENT value
                 */
                MethodOptions.IdempotencyLevel = (function() {
                    var valuesById = {}, values = Object.create(valuesById);
                    values[valuesById[0] = "IDEMPOTENCY_UNKNOWN"] = 0;
                    values[valuesById[1] = "NO_SIDE_EFFECTS"] = 1;
                    values[valuesById[2] = "IDEMPOTENT"] = 2;
                    return values;
                })();
    
                return MethodOptions;
            })();
    
            protobuf.UninterpretedOption = (function() {
    
                /**
                 * Properties of an UninterpretedOption.
                 * @memberof google.protobuf
                 * @interface IUninterpretedOption
                 * @property {Array.<google.protobuf.UninterpretedOption.INamePart>|null} [name] UninterpretedOption name
                 * @property {string|null} [identifierValue] UninterpretedOption identifierValue
                 * @property {number|Long|null} [positiveIntValue] UninterpretedOption positiveIntValue
                 * @property {number|Long|null} [negativeIntValue] UninterpretedOption negativeIntValue
                 * @property {number|null} [doubleValue] UninterpretedOption doubleValue
                 * @property {Uint8Array|null} [stringValue] UninterpretedOption stringValue
                 * @property {string|null} [aggregateValue] UninterpretedOption aggregateValue
                 */
    
                /**
                 * Constructs a new UninterpretedOption.
                 * @memberof google.protobuf
                 * @classdesc Represents an UninterpretedOption.
                 * @implements IUninterpretedOption
                 * @constructor
                 * @param {google.protobuf.IUninterpretedOption=} [properties] Properties to set
                 */
                function UninterpretedOption(properties) {
                    this.name = [];
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * UninterpretedOption name.
                 * @member {Array.<google.protobuf.UninterpretedOption.INamePart>} name
                 * @memberof google.protobuf.UninterpretedOption
                 * @instance
                 */
                UninterpretedOption.prototype.name = $util.emptyArray;
    
                /**
                 * UninterpretedOption identifierValue.
                 * @member {string} identifierValue
                 * @memberof google.protobuf.UninterpretedOption
                 * @instance
                 */
                UninterpretedOption.prototype.identifierValue = "";
    
                /**
                 * UninterpretedOption positiveIntValue.
                 * @member {number|Long} positiveIntValue
                 * @memberof google.protobuf.UninterpretedOption
                 * @instance
                 */
                UninterpretedOption.prototype.positiveIntValue = $util.Long ? $util.Long.fromBits(0,0,true) : 0;
    
                /**
                 * UninterpretedOption negativeIntValue.
                 * @member {number|Long} negativeIntValue
                 * @memberof google.protobuf.UninterpretedOption
                 * @instance
                 */
                UninterpretedOption.prototype.negativeIntValue = $util.Long ? $util.Long.fromBits(0,0,false) : 0;
    
                /**
                 * UninterpretedOption doubleValue.
                 * @member {number} doubleValue
                 * @memberof google.protobuf.UninterpretedOption
                 * @instance
                 */
                UninterpretedOption.prototype.doubleValue = 0;
    
                /**
                 * UninterpretedOption stringValue.
                 * @member {Uint8Array} stringValue
                 * @memberof google.protobuf.UninterpretedOption
                 * @instance
                 */
                UninterpretedOption.prototype.stringValue = $util.newBuffer([]);
    
                /**
                 * UninterpretedOption aggregateValue.
                 * @member {string} aggregateValue
                 * @memberof google.protobuf.UninterpretedOption
                 * @instance
                 */
                UninterpretedOption.prototype.aggregateValue = "";
    
                /**
                 * Creates a new UninterpretedOption instance using the specified properties.
                 * @function create
                 * @memberof google.protobuf.UninterpretedOption
                 * @static
                 * @param {google.protobuf.IUninterpretedOption=} [properties] Properties to set
                 * @returns {google.protobuf.UninterpretedOption} UninterpretedOption instance
                 */
                UninterpretedOption.create = function create(properties) {
                    return new UninterpretedOption(properties);
                };
    
                /**
                 * Encodes the specified UninterpretedOption message. Does not implicitly {@link google.protobuf.UninterpretedOption.verify|verify} messages.
                 * @function encode
                 * @memberof google.protobuf.UninterpretedOption
                 * @static
                 * @param {google.protobuf.IUninterpretedOption} message UninterpretedOption message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                UninterpretedOption.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.name != null && message.name.length)
                        for (var i = 0; i < message.name.length; ++i)
                            $root.google.protobuf.UninterpretedOption.NamePart.encode(message.name[i], writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                    if (message.identifierValue != null && Object.hasOwnProperty.call(message, "identifierValue"))
                        writer.uint32(/* id 3, wireType 2 =*/26).string(message.identifierValue);
                    if (message.positiveIntValue != null && Object.hasOwnProperty.call(message, "positiveIntValue"))
                        writer.uint32(/* id 4, wireType 0 =*/32).uint64(message.positiveIntValue);
                    if (message.negativeIntValue != null && Object.hasOwnProperty.call(message, "negativeIntValue"))
                        writer.uint32(/* id 5, wireType 0 =*/40).int64(message.negativeIntValue);
                    if (message.doubleValue != null && Object.hasOwnProperty.call(message, "doubleValue"))
                        writer.uint32(/* id 6, wireType 1 =*/49).double(message.doubleValue);
                    if (message.stringValue != null && Object.hasOwnProperty.call(message, "stringValue"))
                        writer.uint32(/* id 7, wireType 2 =*/58).bytes(message.stringValue);
                    if (message.aggregateValue != null && Object.hasOwnProperty.call(message, "aggregateValue"))
                        writer.uint32(/* id 8, wireType 2 =*/66).string(message.aggregateValue);
                    return writer;
                };
    
                /**
                 * Encodes the specified UninterpretedOption message, length delimited. Does not implicitly {@link google.protobuf.UninterpretedOption.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.protobuf.UninterpretedOption
                 * @static
                 * @param {google.protobuf.IUninterpretedOption} message UninterpretedOption message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                UninterpretedOption.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes an UninterpretedOption message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.protobuf.UninterpretedOption
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.protobuf.UninterpretedOption} UninterpretedOption
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                UninterpretedOption.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.UninterpretedOption();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 2: {
                                if (!(message.name && message.name.length))
                                    message.name = [];
                                message.name.push($root.google.protobuf.UninterpretedOption.NamePart.decode(reader, reader.uint32()));
                                break;
                            }
                        case 3: {
                                message.identifierValue = reader.string();
                                break;
                            }
                        case 4: {
                                message.positiveIntValue = reader.uint64();
                                break;
                            }
                        case 5: {
                                message.negativeIntValue = reader.int64();
                                break;
                            }
                        case 6: {
                                message.doubleValue = reader.double();
                                break;
                            }
                        case 7: {
                                message.stringValue = reader.bytes();
                                break;
                            }
                        case 8: {
                                message.aggregateValue = reader.string();
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes an UninterpretedOption message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.protobuf.UninterpretedOption
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.protobuf.UninterpretedOption} UninterpretedOption
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                UninterpretedOption.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies an UninterpretedOption message.
                 * @function verify
                 * @memberof google.protobuf.UninterpretedOption
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                UninterpretedOption.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.name != null && message.hasOwnProperty("name")) {
                        if (!Array.isArray(message.name))
                            return "name: array expected";
                        for (var i = 0; i < message.name.length; ++i) {
                            var error = $root.google.protobuf.UninterpretedOption.NamePart.verify(message.name[i]);
                            if (error)
                                return "name." + error;
                        }
                    }
                    if (message.identifierValue != null && message.hasOwnProperty("identifierValue"))
                        if (!$util.isString(message.identifierValue))
                            return "identifierValue: string expected";
                    if (message.positiveIntValue != null && message.hasOwnProperty("positiveIntValue"))
                        if (!$util.isInteger(message.positiveIntValue) && !(message.positiveIntValue && $util.isInteger(message.positiveIntValue.low) && $util.isInteger(message.positiveIntValue.high)))
                            return "positiveIntValue: integer|Long expected";
                    if (message.negativeIntValue != null && message.hasOwnProperty("negativeIntValue"))
                        if (!$util.isInteger(message.negativeIntValue) && !(message.negativeIntValue && $util.isInteger(message.negativeIntValue.low) && $util.isInteger(message.negativeIntValue.high)))
                            return "negativeIntValue: integer|Long expected";
                    if (message.doubleValue != null && message.hasOwnProperty("doubleValue"))
                        if (typeof message.doubleValue !== "number")
                            return "doubleValue: number expected";
                    if (message.stringValue != null && message.hasOwnProperty("stringValue"))
                        if (!(message.stringValue && typeof message.stringValue.length === "number" || $util.isString(message.stringValue)))
                            return "stringValue: buffer expected";
                    if (message.aggregateValue != null && message.hasOwnProperty("aggregateValue"))
                        if (!$util.isString(message.aggregateValue))
                            return "aggregateValue: string expected";
                    return null;
                };
    
                /**
                 * Creates an UninterpretedOption message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.protobuf.UninterpretedOption
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.protobuf.UninterpretedOption} UninterpretedOption
                 */
                UninterpretedOption.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.protobuf.UninterpretedOption)
                        return object;
                    var message = new $root.google.protobuf.UninterpretedOption();
                    if (object.name) {
                        if (!Array.isArray(object.name))
                            throw TypeError(".google.protobuf.UninterpretedOption.name: array expected");
                        message.name = [];
                        for (var i = 0; i < object.name.length; ++i) {
                            if (typeof object.name[i] !== "object")
                                throw TypeError(".google.protobuf.UninterpretedOption.name: object expected");
                            message.name[i] = $root.google.protobuf.UninterpretedOption.NamePart.fromObject(object.name[i]);
                        }
                    }
                    if (object.identifierValue != null)
                        message.identifierValue = String(object.identifierValue);
                    if (object.positiveIntValue != null)
                        if ($util.Long)
                            (message.positiveIntValue = $util.Long.fromValue(object.positiveIntValue)).unsigned = true;
                        else if (typeof object.positiveIntValue === "string")
                            message.positiveIntValue = parseInt(object.positiveIntValue, 10);
                        else if (typeof object.positiveIntValue === "number")
                            message.positiveIntValue = object.positiveIntValue;
                        else if (typeof object.positiveIntValue === "object")
                            message.positiveIntValue = new $util.LongBits(object.positiveIntValue.low >>> 0, object.positiveIntValue.high >>> 0).toNumber(true);
                    if (object.negativeIntValue != null)
                        if ($util.Long)
                            (message.negativeIntValue = $util.Long.fromValue(object.negativeIntValue)).unsigned = false;
                        else if (typeof object.negativeIntValue === "string")
                            message.negativeIntValue = parseInt(object.negativeIntValue, 10);
                        else if (typeof object.negativeIntValue === "number")
                            message.negativeIntValue = object.negativeIntValue;
                        else if (typeof object.negativeIntValue === "object")
                            message.negativeIntValue = new $util.LongBits(object.negativeIntValue.low >>> 0, object.negativeIntValue.high >>> 0).toNumber();
                    if (object.doubleValue != null)
                        message.doubleValue = Number(object.doubleValue);
                    if (object.stringValue != null)
                        if (typeof object.stringValue === "string")
                            $util.base64.decode(object.stringValue, message.stringValue = $util.newBuffer($util.base64.length(object.stringValue)), 0);
                        else if (object.stringValue.length >= 0)
                            message.stringValue = object.stringValue;
                    if (object.aggregateValue != null)
                        message.aggregateValue = String(object.aggregateValue);
                    return message;
                };
    
                /**
                 * Creates a plain object from an UninterpretedOption message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.protobuf.UninterpretedOption
                 * @static
                 * @param {google.protobuf.UninterpretedOption} message UninterpretedOption
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                UninterpretedOption.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.arrays || options.defaults)
                        object.name = [];
                    if (options.defaults) {
                        object.identifierValue = "";
                        if ($util.Long) {
                            var long = new $util.Long(0, 0, true);
                            object.positiveIntValue = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                        } else
                            object.positiveIntValue = options.longs === String ? "0" : 0;
                        if ($util.Long) {
                            var long = new $util.Long(0, 0, false);
                            object.negativeIntValue = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                        } else
                            object.negativeIntValue = options.longs === String ? "0" : 0;
                        object.doubleValue = 0;
                        if (options.bytes === String)
                            object.stringValue = "";
                        else {
                            object.stringValue = [];
                            if (options.bytes !== Array)
                                object.stringValue = $util.newBuffer(object.stringValue);
                        }
                        object.aggregateValue = "";
                    }
                    if (message.name && message.name.length) {
                        object.name = [];
                        for (var j = 0; j < message.name.length; ++j)
                            object.name[j] = $root.google.protobuf.UninterpretedOption.NamePart.toObject(message.name[j], options);
                    }
                    if (message.identifierValue != null && message.hasOwnProperty("identifierValue"))
                        object.identifierValue = message.identifierValue;
                    if (message.positiveIntValue != null && message.hasOwnProperty("positiveIntValue"))
                        if (typeof message.positiveIntValue === "number")
                            object.positiveIntValue = options.longs === String ? String(message.positiveIntValue) : message.positiveIntValue;
                        else
                            object.positiveIntValue = options.longs === String ? $util.Long.prototype.toString.call(message.positiveIntValue) : options.longs === Number ? new $util.LongBits(message.positiveIntValue.low >>> 0, message.positiveIntValue.high >>> 0).toNumber(true) : message.positiveIntValue;
                    if (message.negativeIntValue != null && message.hasOwnProperty("negativeIntValue"))
                        if (typeof message.negativeIntValue === "number")
                            object.negativeIntValue = options.longs === String ? String(message.negativeIntValue) : message.negativeIntValue;
                        else
                            object.negativeIntValue = options.longs === String ? $util.Long.prototype.toString.call(message.negativeIntValue) : options.longs === Number ? new $util.LongBits(message.negativeIntValue.low >>> 0, message.negativeIntValue.high >>> 0).toNumber() : message.negativeIntValue;
                    if (message.doubleValue != null && message.hasOwnProperty("doubleValue"))
                        object.doubleValue = options.json && !isFinite(message.doubleValue) ? String(message.doubleValue) : message.doubleValue;
                    if (message.stringValue != null && message.hasOwnProperty("stringValue"))
                        object.stringValue = options.bytes === String ? $util.base64.encode(message.stringValue, 0, message.stringValue.length) : options.bytes === Array ? Array.prototype.slice.call(message.stringValue) : message.stringValue;
                    if (message.aggregateValue != null && message.hasOwnProperty("aggregateValue"))
                        object.aggregateValue = message.aggregateValue;
                    return object;
                };
    
                /**
                 * Converts this UninterpretedOption to JSON.
                 * @function toJSON
                 * @memberof google.protobuf.UninterpretedOption
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                UninterpretedOption.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for UninterpretedOption
                 * @function getTypeUrl
                 * @memberof google.protobuf.UninterpretedOption
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                UninterpretedOption.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.protobuf.UninterpretedOption";
                };
    
                UninterpretedOption.NamePart = (function() {
    
                    /**
                     * Properties of a NamePart.
                     * @memberof google.protobuf.UninterpretedOption
                     * @interface INamePart
                     * @property {string} namePart NamePart namePart
                     * @property {boolean} isExtension NamePart isExtension
                     */
    
                    /**
                     * Constructs a new NamePart.
                     * @memberof google.protobuf.UninterpretedOption
                     * @classdesc Represents a NamePart.
                     * @implements INamePart
                     * @constructor
                     * @param {google.protobuf.UninterpretedOption.INamePart=} [properties] Properties to set
                     */
                    function NamePart(properties) {
                        if (properties)
                            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                if (properties[keys[i]] != null)
                                    this[keys[i]] = properties[keys[i]];
                    }
    
                    /**
                     * NamePart namePart.
                     * @member {string} namePart
                     * @memberof google.protobuf.UninterpretedOption.NamePart
                     * @instance
                     */
                    NamePart.prototype.namePart = "";
    
                    /**
                     * NamePart isExtension.
                     * @member {boolean} isExtension
                     * @memberof google.protobuf.UninterpretedOption.NamePart
                     * @instance
                     */
                    NamePart.prototype.isExtension = false;
    
                    /**
                     * Creates a new NamePart instance using the specified properties.
                     * @function create
                     * @memberof google.protobuf.UninterpretedOption.NamePart
                     * @static
                     * @param {google.protobuf.UninterpretedOption.INamePart=} [properties] Properties to set
                     * @returns {google.protobuf.UninterpretedOption.NamePart} NamePart instance
                     */
                    NamePart.create = function create(properties) {
                        return new NamePart(properties);
                    };
    
                    /**
                     * Encodes the specified NamePart message. Does not implicitly {@link google.protobuf.UninterpretedOption.NamePart.verify|verify} messages.
                     * @function encode
                     * @memberof google.protobuf.UninterpretedOption.NamePart
                     * @static
                     * @param {google.protobuf.UninterpretedOption.INamePart} message NamePart message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    NamePart.encode = function encode(message, writer) {
                        if (!writer)
                            writer = $Writer.create();
                        writer.uint32(/* id 1, wireType 2 =*/10).string(message.namePart);
                        writer.uint32(/* id 2, wireType 0 =*/16).bool(message.isExtension);
                        return writer;
                    };
    
                    /**
                     * Encodes the specified NamePart message, length delimited. Does not implicitly {@link google.protobuf.UninterpretedOption.NamePart.verify|verify} messages.
                     * @function encodeDelimited
                     * @memberof google.protobuf.UninterpretedOption.NamePart
                     * @static
                     * @param {google.protobuf.UninterpretedOption.INamePart} message NamePart message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    NamePart.encodeDelimited = function encodeDelimited(message, writer) {
                        return this.encode(message, writer).ldelim();
                    };
    
                    /**
                     * Decodes a NamePart message from the specified reader or buffer.
                     * @function decode
                     * @memberof google.protobuf.UninterpretedOption.NamePart
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @param {number} [length] Message length if known beforehand
                     * @returns {google.protobuf.UninterpretedOption.NamePart} NamePart
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    NamePart.decode = function decode(reader, length) {
                        if (!(reader instanceof $Reader))
                            reader = $Reader.create(reader);
                        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.UninterpretedOption.NamePart();
                        while (reader.pos < end) {
                            var tag = reader.uint32();
                            switch (tag >>> 3) {
                            case 1: {
                                    message.namePart = reader.string();
                                    break;
                                }
                            case 2: {
                                    message.isExtension = reader.bool();
                                    break;
                                }
                            default:
                                reader.skipType(tag & 7);
                                break;
                            }
                        }
                        if (!message.hasOwnProperty("namePart"))
                            throw $util.ProtocolError("missing required 'namePart'", { instance: message });
                        if (!message.hasOwnProperty("isExtension"))
                            throw $util.ProtocolError("missing required 'isExtension'", { instance: message });
                        return message;
                    };
    
                    /**
                     * Decodes a NamePart message from the specified reader or buffer, length delimited.
                     * @function decodeDelimited
                     * @memberof google.protobuf.UninterpretedOption.NamePart
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @returns {google.protobuf.UninterpretedOption.NamePart} NamePart
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    NamePart.decodeDelimited = function decodeDelimited(reader) {
                        if (!(reader instanceof $Reader))
                            reader = new $Reader(reader);
                        return this.decode(reader, reader.uint32());
                    };
    
                    /**
                     * Verifies a NamePart message.
                     * @function verify
                     * @memberof google.protobuf.UninterpretedOption.NamePart
                     * @static
                     * @param {Object.<string,*>} message Plain object to verify
                     * @returns {string|null} `null` if valid, otherwise the reason why it is not
                     */
                    NamePart.verify = function verify(message) {
                        if (typeof message !== "object" || message === null)
                            return "object expected";
                        if (!$util.isString(message.namePart))
                            return "namePart: string expected";
                        if (typeof message.isExtension !== "boolean")
                            return "isExtension: boolean expected";
                        return null;
                    };
    
                    /**
                     * Creates a NamePart message from a plain object. Also converts values to their respective internal types.
                     * @function fromObject
                     * @memberof google.protobuf.UninterpretedOption.NamePart
                     * @static
                     * @param {Object.<string,*>} object Plain object
                     * @returns {google.protobuf.UninterpretedOption.NamePart} NamePart
                     */
                    NamePart.fromObject = function fromObject(object) {
                        if (object instanceof $root.google.protobuf.UninterpretedOption.NamePart)
                            return object;
                        var message = new $root.google.protobuf.UninterpretedOption.NamePart();
                        if (object.namePart != null)
                            message.namePart = String(object.namePart);
                        if (object.isExtension != null)
                            message.isExtension = Boolean(object.isExtension);
                        return message;
                    };
    
                    /**
                     * Creates a plain object from a NamePart message. Also converts values to other types if specified.
                     * @function toObject
                     * @memberof google.protobuf.UninterpretedOption.NamePart
                     * @static
                     * @param {google.protobuf.UninterpretedOption.NamePart} message NamePart
                     * @param {$protobuf.IConversionOptions} [options] Conversion options
                     * @returns {Object.<string,*>} Plain object
                     */
                    NamePart.toObject = function toObject(message, options) {
                        if (!options)
                            options = {};
                        var object = {};
                        if (options.defaults) {
                            object.namePart = "";
                            object.isExtension = false;
                        }
                        if (message.namePart != null && message.hasOwnProperty("namePart"))
                            object.namePart = message.namePart;
                        if (message.isExtension != null && message.hasOwnProperty("isExtension"))
                            object.isExtension = message.isExtension;
                        return object;
                    };
    
                    /**
                     * Converts this NamePart to JSON.
                     * @function toJSON
                     * @memberof google.protobuf.UninterpretedOption.NamePart
                     * @instance
                     * @returns {Object.<string,*>} JSON object
                     */
                    NamePart.prototype.toJSON = function toJSON() {
                        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                    };
    
                    /**
                     * Gets the default type url for NamePart
                     * @function getTypeUrl
                     * @memberof google.protobuf.UninterpretedOption.NamePart
                     * @static
                     * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                     * @returns {string} The default type url
                     */
                    NamePart.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                        if (typeUrlPrefix === undefined) {
                            typeUrlPrefix = "type.googleapis.com";
                        }
                        return typeUrlPrefix + "/google.protobuf.UninterpretedOption.NamePart";
                    };
    
                    return NamePart;
                })();
    
                return UninterpretedOption;
            })();
    
            protobuf.SourceCodeInfo = (function() {
    
                /**
                 * Properties of a SourceCodeInfo.
                 * @memberof google.protobuf
                 * @interface ISourceCodeInfo
                 * @property {Array.<google.protobuf.SourceCodeInfo.ILocation>|null} [location] SourceCodeInfo location
                 */
    
                /**
                 * Constructs a new SourceCodeInfo.
                 * @memberof google.protobuf
                 * @classdesc Represents a SourceCodeInfo.
                 * @implements ISourceCodeInfo
                 * @constructor
                 * @param {google.protobuf.ISourceCodeInfo=} [properties] Properties to set
                 */
                function SourceCodeInfo(properties) {
                    this.location = [];
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * SourceCodeInfo location.
                 * @member {Array.<google.protobuf.SourceCodeInfo.ILocation>} location
                 * @memberof google.protobuf.SourceCodeInfo
                 * @instance
                 */
                SourceCodeInfo.prototype.location = $util.emptyArray;
    
                /**
                 * Creates a new SourceCodeInfo instance using the specified properties.
                 * @function create
                 * @memberof google.protobuf.SourceCodeInfo
                 * @static
                 * @param {google.protobuf.ISourceCodeInfo=} [properties] Properties to set
                 * @returns {google.protobuf.SourceCodeInfo} SourceCodeInfo instance
                 */
                SourceCodeInfo.create = function create(properties) {
                    return new SourceCodeInfo(properties);
                };
    
                /**
                 * Encodes the specified SourceCodeInfo message. Does not implicitly {@link google.protobuf.SourceCodeInfo.verify|verify} messages.
                 * @function encode
                 * @memberof google.protobuf.SourceCodeInfo
                 * @static
                 * @param {google.protobuf.ISourceCodeInfo} message SourceCodeInfo message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                SourceCodeInfo.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.location != null && message.location.length)
                        for (var i = 0; i < message.location.length; ++i)
                            $root.google.protobuf.SourceCodeInfo.Location.encode(message.location[i], writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                    return writer;
                };
    
                /**
                 * Encodes the specified SourceCodeInfo message, length delimited. Does not implicitly {@link google.protobuf.SourceCodeInfo.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.protobuf.SourceCodeInfo
                 * @static
                 * @param {google.protobuf.ISourceCodeInfo} message SourceCodeInfo message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                SourceCodeInfo.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a SourceCodeInfo message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.protobuf.SourceCodeInfo
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.protobuf.SourceCodeInfo} SourceCodeInfo
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                SourceCodeInfo.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.SourceCodeInfo();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1: {
                                if (!(message.location && message.location.length))
                                    message.location = [];
                                message.location.push($root.google.protobuf.SourceCodeInfo.Location.decode(reader, reader.uint32()));
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a SourceCodeInfo message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.protobuf.SourceCodeInfo
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.protobuf.SourceCodeInfo} SourceCodeInfo
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                SourceCodeInfo.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a SourceCodeInfo message.
                 * @function verify
                 * @memberof google.protobuf.SourceCodeInfo
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                SourceCodeInfo.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.location != null && message.hasOwnProperty("location")) {
                        if (!Array.isArray(message.location))
                            return "location: array expected";
                        for (var i = 0; i < message.location.length; ++i) {
                            var error = $root.google.protobuf.SourceCodeInfo.Location.verify(message.location[i]);
                            if (error)
                                return "location." + error;
                        }
                    }
                    return null;
                };
    
                /**
                 * Creates a SourceCodeInfo message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.protobuf.SourceCodeInfo
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.protobuf.SourceCodeInfo} SourceCodeInfo
                 */
                SourceCodeInfo.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.protobuf.SourceCodeInfo)
                        return object;
                    var message = new $root.google.protobuf.SourceCodeInfo();
                    if (object.location) {
                        if (!Array.isArray(object.location))
                            throw TypeError(".google.protobuf.SourceCodeInfo.location: array expected");
                        message.location = [];
                        for (var i = 0; i < object.location.length; ++i) {
                            if (typeof object.location[i] !== "object")
                                throw TypeError(".google.protobuf.SourceCodeInfo.location: object expected");
                            message.location[i] = $root.google.protobuf.SourceCodeInfo.Location.fromObject(object.location[i]);
                        }
                    }
                    return message;
                };
    
                /**
                 * Creates a plain object from a SourceCodeInfo message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.protobuf.SourceCodeInfo
                 * @static
                 * @param {google.protobuf.SourceCodeInfo} message SourceCodeInfo
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                SourceCodeInfo.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.arrays || options.defaults)
                        object.location = [];
                    if (message.location && message.location.length) {
                        object.location = [];
                        for (var j = 0; j < message.location.length; ++j)
                            object.location[j] = $root.google.protobuf.SourceCodeInfo.Location.toObject(message.location[j], options);
                    }
                    return object;
                };
    
                /**
                 * Converts this SourceCodeInfo to JSON.
                 * @function toJSON
                 * @memberof google.protobuf.SourceCodeInfo
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                SourceCodeInfo.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for SourceCodeInfo
                 * @function getTypeUrl
                 * @memberof google.protobuf.SourceCodeInfo
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                SourceCodeInfo.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.protobuf.SourceCodeInfo";
                };
    
                SourceCodeInfo.Location = (function() {
    
                    /**
                     * Properties of a Location.
                     * @memberof google.protobuf.SourceCodeInfo
                     * @interface ILocation
                     * @property {Array.<number>|null} [path] Location path
                     * @property {Array.<number>|null} [span] Location span
                     * @property {string|null} [leadingComments] Location leadingComments
                     * @property {string|null} [trailingComments] Location trailingComments
                     * @property {Array.<string>|null} [leadingDetachedComments] Location leadingDetachedComments
                     */
    
                    /**
                     * Constructs a new Location.
                     * @memberof google.protobuf.SourceCodeInfo
                     * @classdesc Represents a Location.
                     * @implements ILocation
                     * @constructor
                     * @param {google.protobuf.SourceCodeInfo.ILocation=} [properties] Properties to set
                     */
                    function Location(properties) {
                        this.path = [];
                        this.span = [];
                        this.leadingDetachedComments = [];
                        if (properties)
                            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                if (properties[keys[i]] != null)
                                    this[keys[i]] = properties[keys[i]];
                    }
    
                    /**
                     * Location path.
                     * @member {Array.<number>} path
                     * @memberof google.protobuf.SourceCodeInfo.Location
                     * @instance
                     */
                    Location.prototype.path = $util.emptyArray;
    
                    /**
                     * Location span.
                     * @member {Array.<number>} span
                     * @memberof google.protobuf.SourceCodeInfo.Location
                     * @instance
                     */
                    Location.prototype.span = $util.emptyArray;
    
                    /**
                     * Location leadingComments.
                     * @member {string} leadingComments
                     * @memberof google.protobuf.SourceCodeInfo.Location
                     * @instance
                     */
                    Location.prototype.leadingComments = "";
    
                    /**
                     * Location trailingComments.
                     * @member {string} trailingComments
                     * @memberof google.protobuf.SourceCodeInfo.Location
                     * @instance
                     */
                    Location.prototype.trailingComments = "";
    
                    /**
                     * Location leadingDetachedComments.
                     * @member {Array.<string>} leadingDetachedComments
                     * @memberof google.protobuf.SourceCodeInfo.Location
                     * @instance
                     */
                    Location.prototype.leadingDetachedComments = $util.emptyArray;
    
                    /**
                     * Creates a new Location instance using the specified properties.
                     * @function create
                     * @memberof google.protobuf.SourceCodeInfo.Location
                     * @static
                     * @param {google.protobuf.SourceCodeInfo.ILocation=} [properties] Properties to set
                     * @returns {google.protobuf.SourceCodeInfo.Location} Location instance
                     */
                    Location.create = function create(properties) {
                        return new Location(properties);
                    };
    
                    /**
                     * Encodes the specified Location message. Does not implicitly {@link google.protobuf.SourceCodeInfo.Location.verify|verify} messages.
                     * @function encode
                     * @memberof google.protobuf.SourceCodeInfo.Location
                     * @static
                     * @param {google.protobuf.SourceCodeInfo.ILocation} message Location message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    Location.encode = function encode(message, writer) {
                        if (!writer)
                            writer = $Writer.create();
                        if (message.path != null && message.path.length) {
                            writer.uint32(/* id 1, wireType 2 =*/10).fork();
                            for (var i = 0; i < message.path.length; ++i)
                                writer.int32(message.path[i]);
                            writer.ldelim();
                        }
                        if (message.span != null && message.span.length) {
                            writer.uint32(/* id 2, wireType 2 =*/18).fork();
                            for (var i = 0; i < message.span.length; ++i)
                                writer.int32(message.span[i]);
                            writer.ldelim();
                        }
                        if (message.leadingComments != null && Object.hasOwnProperty.call(message, "leadingComments"))
                            writer.uint32(/* id 3, wireType 2 =*/26).string(message.leadingComments);
                        if (message.trailingComments != null && Object.hasOwnProperty.call(message, "trailingComments"))
                            writer.uint32(/* id 4, wireType 2 =*/34).string(message.trailingComments);
                        if (message.leadingDetachedComments != null && message.leadingDetachedComments.length)
                            for (var i = 0; i < message.leadingDetachedComments.length; ++i)
                                writer.uint32(/* id 6, wireType 2 =*/50).string(message.leadingDetachedComments[i]);
                        return writer;
                    };
    
                    /**
                     * Encodes the specified Location message, length delimited. Does not implicitly {@link google.protobuf.SourceCodeInfo.Location.verify|verify} messages.
                     * @function encodeDelimited
                     * @memberof google.protobuf.SourceCodeInfo.Location
                     * @static
                     * @param {google.protobuf.SourceCodeInfo.ILocation} message Location message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    Location.encodeDelimited = function encodeDelimited(message, writer) {
                        return this.encode(message, writer).ldelim();
                    };
    
                    /**
                     * Decodes a Location message from the specified reader or buffer.
                     * @function decode
                     * @memberof google.protobuf.SourceCodeInfo.Location
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @param {number} [length] Message length if known beforehand
                     * @returns {google.protobuf.SourceCodeInfo.Location} Location
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    Location.decode = function decode(reader, length) {
                        if (!(reader instanceof $Reader))
                            reader = $Reader.create(reader);
                        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.SourceCodeInfo.Location();
                        while (reader.pos < end) {
                            var tag = reader.uint32();
                            switch (tag >>> 3) {
                            case 1: {
                                    if (!(message.path && message.path.length))
                                        message.path = [];
                                    if ((tag & 7) === 2) {
                                        var end2 = reader.uint32() + reader.pos;
                                        while (reader.pos < end2)
                                            message.path.push(reader.int32());
                                    } else
                                        message.path.push(reader.int32());
                                    break;
                                }
                            case 2: {
                                    if (!(message.span && message.span.length))
                                        message.span = [];
                                    if ((tag & 7) === 2) {
                                        var end2 = reader.uint32() + reader.pos;
                                        while (reader.pos < end2)
                                            message.span.push(reader.int32());
                                    } else
                                        message.span.push(reader.int32());
                                    break;
                                }
                            case 3: {
                                    message.leadingComments = reader.string();
                                    break;
                                }
                            case 4: {
                                    message.trailingComments = reader.string();
                                    break;
                                }
                            case 6: {
                                    if (!(message.leadingDetachedComments && message.leadingDetachedComments.length))
                                        message.leadingDetachedComments = [];
                                    message.leadingDetachedComments.push(reader.string());
                                    break;
                                }
                            default:
                                reader.skipType(tag & 7);
                                break;
                            }
                        }
                        return message;
                    };
    
                    /**
                     * Decodes a Location message from the specified reader or buffer, length delimited.
                     * @function decodeDelimited
                     * @memberof google.protobuf.SourceCodeInfo.Location
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @returns {google.protobuf.SourceCodeInfo.Location} Location
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    Location.decodeDelimited = function decodeDelimited(reader) {
                        if (!(reader instanceof $Reader))
                            reader = new $Reader(reader);
                        return this.decode(reader, reader.uint32());
                    };
    
                    /**
                     * Verifies a Location message.
                     * @function verify
                     * @memberof google.protobuf.SourceCodeInfo.Location
                     * @static
                     * @param {Object.<string,*>} message Plain object to verify
                     * @returns {string|null} `null` if valid, otherwise the reason why it is not
                     */
                    Location.verify = function verify(message) {
                        if (typeof message !== "object" || message === null)
                            return "object expected";
                        if (message.path != null && message.hasOwnProperty("path")) {
                            if (!Array.isArray(message.path))
                                return "path: array expected";
                            for (var i = 0; i < message.path.length; ++i)
                                if (!$util.isInteger(message.path[i]))
                                    return "path: integer[] expected";
                        }
                        if (message.span != null && message.hasOwnProperty("span")) {
                            if (!Array.isArray(message.span))
                                return "span: array expected";
                            for (var i = 0; i < message.span.length; ++i)
                                if (!$util.isInteger(message.span[i]))
                                    return "span: integer[] expected";
                        }
                        if (message.leadingComments != null && message.hasOwnProperty("leadingComments"))
                            if (!$util.isString(message.leadingComments))
                                return "leadingComments: string expected";
                        if (message.trailingComments != null && message.hasOwnProperty("trailingComments"))
                            if (!$util.isString(message.trailingComments))
                                return "trailingComments: string expected";
                        if (message.leadingDetachedComments != null && message.hasOwnProperty("leadingDetachedComments")) {
                            if (!Array.isArray(message.leadingDetachedComments))
                                return "leadingDetachedComments: array expected";
                            for (var i = 0; i < message.leadingDetachedComments.length; ++i)
                                if (!$util.isString(message.leadingDetachedComments[i]))
                                    return "leadingDetachedComments: string[] expected";
                        }
                        return null;
                    };
    
                    /**
                     * Creates a Location message from a plain object. Also converts values to their respective internal types.
                     * @function fromObject
                     * @memberof google.protobuf.SourceCodeInfo.Location
                     * @static
                     * @param {Object.<string,*>} object Plain object
                     * @returns {google.protobuf.SourceCodeInfo.Location} Location
                     */
                    Location.fromObject = function fromObject(object) {
                        if (object instanceof $root.google.protobuf.SourceCodeInfo.Location)
                            return object;
                        var message = new $root.google.protobuf.SourceCodeInfo.Location();
                        if (object.path) {
                            if (!Array.isArray(object.path))
                                throw TypeError(".google.protobuf.SourceCodeInfo.Location.path: array expected");
                            message.path = [];
                            for (var i = 0; i < object.path.length; ++i)
                                message.path[i] = object.path[i] | 0;
                        }
                        if (object.span) {
                            if (!Array.isArray(object.span))
                                throw TypeError(".google.protobuf.SourceCodeInfo.Location.span: array expected");
                            message.span = [];
                            for (var i = 0; i < object.span.length; ++i)
                                message.span[i] = object.span[i] | 0;
                        }
                        if (object.leadingComments != null)
                            message.leadingComments = String(object.leadingComments);
                        if (object.trailingComments != null)
                            message.trailingComments = String(object.trailingComments);
                        if (object.leadingDetachedComments) {
                            if (!Array.isArray(object.leadingDetachedComments))
                                throw TypeError(".google.protobuf.SourceCodeInfo.Location.leadingDetachedComments: array expected");
                            message.leadingDetachedComments = [];
                            for (var i = 0; i < object.leadingDetachedComments.length; ++i)
                                message.leadingDetachedComments[i] = String(object.leadingDetachedComments[i]);
                        }
                        return message;
                    };
    
                    /**
                     * Creates a plain object from a Location message. Also converts values to other types if specified.
                     * @function toObject
                     * @memberof google.protobuf.SourceCodeInfo.Location
                     * @static
                     * @param {google.protobuf.SourceCodeInfo.Location} message Location
                     * @param {$protobuf.IConversionOptions} [options] Conversion options
                     * @returns {Object.<string,*>} Plain object
                     */
                    Location.toObject = function toObject(message, options) {
                        if (!options)
                            options = {};
                        var object = {};
                        if (options.arrays || options.defaults) {
                            object.path = [];
                            object.span = [];
                            object.leadingDetachedComments = [];
                        }
                        if (options.defaults) {
                            object.leadingComments = "";
                            object.trailingComments = "";
                        }
                        if (message.path && message.path.length) {
                            object.path = [];
                            for (var j = 0; j < message.path.length; ++j)
                                object.path[j] = message.path[j];
                        }
                        if (message.span && message.span.length) {
                            object.span = [];
                            for (var j = 0; j < message.span.length; ++j)
                                object.span[j] = message.span[j];
                        }
                        if (message.leadingComments != null && message.hasOwnProperty("leadingComments"))
                            object.leadingComments = message.leadingComments;
                        if (message.trailingComments != null && message.hasOwnProperty("trailingComments"))
                            object.trailingComments = message.trailingComments;
                        if (message.leadingDetachedComments && message.leadingDetachedComments.length) {
                            object.leadingDetachedComments = [];
                            for (var j = 0; j < message.leadingDetachedComments.length; ++j)
                                object.leadingDetachedComments[j] = message.leadingDetachedComments[j];
                        }
                        return object;
                    };
    
                    /**
                     * Converts this Location to JSON.
                     * @function toJSON
                     * @memberof google.protobuf.SourceCodeInfo.Location
                     * @instance
                     * @returns {Object.<string,*>} JSON object
                     */
                    Location.prototype.toJSON = function toJSON() {
                        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                    };
    
                    /**
                     * Gets the default type url for Location
                     * @function getTypeUrl
                     * @memberof google.protobuf.SourceCodeInfo.Location
                     * @static
                     * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                     * @returns {string} The default type url
                     */
                    Location.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                        if (typeUrlPrefix === undefined) {
                            typeUrlPrefix = "type.googleapis.com";
                        }
                        return typeUrlPrefix + "/google.protobuf.SourceCodeInfo.Location";
                    };
    
                    return Location;
                })();
    
                return SourceCodeInfo;
            })();
    
            protobuf.GeneratedCodeInfo = (function() {
    
                /**
                 * Properties of a GeneratedCodeInfo.
                 * @memberof google.protobuf
                 * @interface IGeneratedCodeInfo
                 * @property {Array.<google.protobuf.GeneratedCodeInfo.IAnnotation>|null} [annotation] GeneratedCodeInfo annotation
                 */
    
                /**
                 * Constructs a new GeneratedCodeInfo.
                 * @memberof google.protobuf
                 * @classdesc Represents a GeneratedCodeInfo.
                 * @implements IGeneratedCodeInfo
                 * @constructor
                 * @param {google.protobuf.IGeneratedCodeInfo=} [properties] Properties to set
                 */
                function GeneratedCodeInfo(properties) {
                    this.annotation = [];
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * GeneratedCodeInfo annotation.
                 * @member {Array.<google.protobuf.GeneratedCodeInfo.IAnnotation>} annotation
                 * @memberof google.protobuf.GeneratedCodeInfo
                 * @instance
                 */
                GeneratedCodeInfo.prototype.annotation = $util.emptyArray;
    
                /**
                 * Creates a new GeneratedCodeInfo instance using the specified properties.
                 * @function create
                 * @memberof google.protobuf.GeneratedCodeInfo
                 * @static
                 * @param {google.protobuf.IGeneratedCodeInfo=} [properties] Properties to set
                 * @returns {google.protobuf.GeneratedCodeInfo} GeneratedCodeInfo instance
                 */
                GeneratedCodeInfo.create = function create(properties) {
                    return new GeneratedCodeInfo(properties);
                };
    
                /**
                 * Encodes the specified GeneratedCodeInfo message. Does not implicitly {@link google.protobuf.GeneratedCodeInfo.verify|verify} messages.
                 * @function encode
                 * @memberof google.protobuf.GeneratedCodeInfo
                 * @static
                 * @param {google.protobuf.IGeneratedCodeInfo} message GeneratedCodeInfo message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                GeneratedCodeInfo.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.annotation != null && message.annotation.length)
                        for (var i = 0; i < message.annotation.length; ++i)
                            $root.google.protobuf.GeneratedCodeInfo.Annotation.encode(message.annotation[i], writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                    return writer;
                };
    
                /**
                 * Encodes the specified GeneratedCodeInfo message, length delimited. Does not implicitly {@link google.protobuf.GeneratedCodeInfo.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.protobuf.GeneratedCodeInfo
                 * @static
                 * @param {google.protobuf.IGeneratedCodeInfo} message GeneratedCodeInfo message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                GeneratedCodeInfo.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a GeneratedCodeInfo message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.protobuf.GeneratedCodeInfo
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.protobuf.GeneratedCodeInfo} GeneratedCodeInfo
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                GeneratedCodeInfo.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.GeneratedCodeInfo();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1: {
                                if (!(message.annotation && message.annotation.length))
                                    message.annotation = [];
                                message.annotation.push($root.google.protobuf.GeneratedCodeInfo.Annotation.decode(reader, reader.uint32()));
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a GeneratedCodeInfo message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.protobuf.GeneratedCodeInfo
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.protobuf.GeneratedCodeInfo} GeneratedCodeInfo
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                GeneratedCodeInfo.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a GeneratedCodeInfo message.
                 * @function verify
                 * @memberof google.protobuf.GeneratedCodeInfo
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                GeneratedCodeInfo.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.annotation != null && message.hasOwnProperty("annotation")) {
                        if (!Array.isArray(message.annotation))
                            return "annotation: array expected";
                        for (var i = 0; i < message.annotation.length; ++i) {
                            var error = $root.google.protobuf.GeneratedCodeInfo.Annotation.verify(message.annotation[i]);
                            if (error)
                                return "annotation." + error;
                        }
                    }
                    return null;
                };
    
                /**
                 * Creates a GeneratedCodeInfo message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.protobuf.GeneratedCodeInfo
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.protobuf.GeneratedCodeInfo} GeneratedCodeInfo
                 */
                GeneratedCodeInfo.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.protobuf.GeneratedCodeInfo)
                        return object;
                    var message = new $root.google.protobuf.GeneratedCodeInfo();
                    if (object.annotation) {
                        if (!Array.isArray(object.annotation))
                            throw TypeError(".google.protobuf.GeneratedCodeInfo.annotation: array expected");
                        message.annotation = [];
                        for (var i = 0; i < object.annotation.length; ++i) {
                            if (typeof object.annotation[i] !== "object")
                                throw TypeError(".google.protobuf.GeneratedCodeInfo.annotation: object expected");
                            message.annotation[i] = $root.google.protobuf.GeneratedCodeInfo.Annotation.fromObject(object.annotation[i]);
                        }
                    }
                    return message;
                };
    
                /**
                 * Creates a plain object from a GeneratedCodeInfo message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.protobuf.GeneratedCodeInfo
                 * @static
                 * @param {google.protobuf.GeneratedCodeInfo} message GeneratedCodeInfo
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                GeneratedCodeInfo.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.arrays || options.defaults)
                        object.annotation = [];
                    if (message.annotation && message.annotation.length) {
                        object.annotation = [];
                        for (var j = 0; j < message.annotation.length; ++j)
                            object.annotation[j] = $root.google.protobuf.GeneratedCodeInfo.Annotation.toObject(message.annotation[j], options);
                    }
                    return object;
                };
    
                /**
                 * Converts this GeneratedCodeInfo to JSON.
                 * @function toJSON
                 * @memberof google.protobuf.GeneratedCodeInfo
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                GeneratedCodeInfo.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for GeneratedCodeInfo
                 * @function getTypeUrl
                 * @memberof google.protobuf.GeneratedCodeInfo
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                GeneratedCodeInfo.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.protobuf.GeneratedCodeInfo";
                };
    
                GeneratedCodeInfo.Annotation = (function() {
    
                    /**
                     * Properties of an Annotation.
                     * @memberof google.protobuf.GeneratedCodeInfo
                     * @interface IAnnotation
                     * @property {Array.<number>|null} [path] Annotation path
                     * @property {string|null} [sourceFile] Annotation sourceFile
                     * @property {number|null} [begin] Annotation begin
                     * @property {number|null} [end] Annotation end
                     * @property {google.protobuf.GeneratedCodeInfo.Annotation.Semantic|null} [semantic] Annotation semantic
                     */
    
                    /**
                     * Constructs a new Annotation.
                     * @memberof google.protobuf.GeneratedCodeInfo
                     * @classdesc Represents an Annotation.
                     * @implements IAnnotation
                     * @constructor
                     * @param {google.protobuf.GeneratedCodeInfo.IAnnotation=} [properties] Properties to set
                     */
                    function Annotation(properties) {
                        this.path = [];
                        if (properties)
                            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                if (properties[keys[i]] != null)
                                    this[keys[i]] = properties[keys[i]];
                    }
    
                    /**
                     * Annotation path.
                     * @member {Array.<number>} path
                     * @memberof google.protobuf.GeneratedCodeInfo.Annotation
                     * @instance
                     */
                    Annotation.prototype.path = $util.emptyArray;
    
                    /**
                     * Annotation sourceFile.
                     * @member {string} sourceFile
                     * @memberof google.protobuf.GeneratedCodeInfo.Annotation
                     * @instance
                     */
                    Annotation.prototype.sourceFile = "";
    
                    /**
                     * Annotation begin.
                     * @member {number} begin
                     * @memberof google.protobuf.GeneratedCodeInfo.Annotation
                     * @instance
                     */
                    Annotation.prototype.begin = 0;
    
                    /**
                     * Annotation end.
                     * @member {number} end
                     * @memberof google.protobuf.GeneratedCodeInfo.Annotation
                     * @instance
                     */
                    Annotation.prototype.end = 0;
    
                    /**
                     * Annotation semantic.
                     * @member {google.protobuf.GeneratedCodeInfo.Annotation.Semantic} semantic
                     * @memberof google.protobuf.GeneratedCodeInfo.Annotation
                     * @instance
                     */
                    Annotation.prototype.semantic = 0;
    
                    /**
                     * Creates a new Annotation instance using the specified properties.
                     * @function create
                     * @memberof google.protobuf.GeneratedCodeInfo.Annotation
                     * @static
                     * @param {google.protobuf.GeneratedCodeInfo.IAnnotation=} [properties] Properties to set
                     * @returns {google.protobuf.GeneratedCodeInfo.Annotation} Annotation instance
                     */
                    Annotation.create = function create(properties) {
                        return new Annotation(properties);
                    };
    
                    /**
                     * Encodes the specified Annotation message. Does not implicitly {@link google.protobuf.GeneratedCodeInfo.Annotation.verify|verify} messages.
                     * @function encode
                     * @memberof google.protobuf.GeneratedCodeInfo.Annotation
                     * @static
                     * @param {google.protobuf.GeneratedCodeInfo.IAnnotation} message Annotation message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    Annotation.encode = function encode(message, writer) {
                        if (!writer)
                            writer = $Writer.create();
                        if (message.path != null && message.path.length) {
                            writer.uint32(/* id 1, wireType 2 =*/10).fork();
                            for (var i = 0; i < message.path.length; ++i)
                                writer.int32(message.path[i]);
                            writer.ldelim();
                        }
                        if (message.sourceFile != null && Object.hasOwnProperty.call(message, "sourceFile"))
                            writer.uint32(/* id 2, wireType 2 =*/18).string(message.sourceFile);
                        if (message.begin != null && Object.hasOwnProperty.call(message, "begin"))
                            writer.uint32(/* id 3, wireType 0 =*/24).int32(message.begin);
                        if (message.end != null && Object.hasOwnProperty.call(message, "end"))
                            writer.uint32(/* id 4, wireType 0 =*/32).int32(message.end);
                        if (message.semantic != null && Object.hasOwnProperty.call(message, "semantic"))
                            writer.uint32(/* id 5, wireType 0 =*/40).int32(message.semantic);
                        return writer;
                    };
    
                    /**
                     * Encodes the specified Annotation message, length delimited. Does not implicitly {@link google.protobuf.GeneratedCodeInfo.Annotation.verify|verify} messages.
                     * @function encodeDelimited
                     * @memberof google.protobuf.GeneratedCodeInfo.Annotation
                     * @static
                     * @param {google.protobuf.GeneratedCodeInfo.IAnnotation} message Annotation message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    Annotation.encodeDelimited = function encodeDelimited(message, writer) {
                        return this.encode(message, writer).ldelim();
                    };
    
                    /**
                     * Decodes an Annotation message from the specified reader or buffer.
                     * @function decode
                     * @memberof google.protobuf.GeneratedCodeInfo.Annotation
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @param {number} [length] Message length if known beforehand
                     * @returns {google.protobuf.GeneratedCodeInfo.Annotation} Annotation
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    Annotation.decode = function decode(reader, length) {
                        if (!(reader instanceof $Reader))
                            reader = $Reader.create(reader);
                        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.GeneratedCodeInfo.Annotation();
                        while (reader.pos < end) {
                            var tag = reader.uint32();
                            switch (tag >>> 3) {
                            case 1: {
                                    if (!(message.path && message.path.length))
                                        message.path = [];
                                    if ((tag & 7) === 2) {
                                        var end2 = reader.uint32() + reader.pos;
                                        while (reader.pos < end2)
                                            message.path.push(reader.int32());
                                    } else
                                        message.path.push(reader.int32());
                                    break;
                                }
                            case 2: {
                                    message.sourceFile = reader.string();
                                    break;
                                }
                            case 3: {
                                    message.begin = reader.int32();
                                    break;
                                }
                            case 4: {
                                    message.end = reader.int32();
                                    break;
                                }
                            case 5: {
                                    message.semantic = reader.int32();
                                    break;
                                }
                            default:
                                reader.skipType(tag & 7);
                                break;
                            }
                        }
                        return message;
                    };
    
                    /**
                     * Decodes an Annotation message from the specified reader or buffer, length delimited.
                     * @function decodeDelimited
                     * @memberof google.protobuf.GeneratedCodeInfo.Annotation
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @returns {google.protobuf.GeneratedCodeInfo.Annotation} Annotation
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    Annotation.decodeDelimited = function decodeDelimited(reader) {
                        if (!(reader instanceof $Reader))
                            reader = new $Reader(reader);
                        return this.decode(reader, reader.uint32());
                    };
    
                    /**
                     * Verifies an Annotation message.
                     * @function verify
                     * @memberof google.protobuf.GeneratedCodeInfo.Annotation
                     * @static
                     * @param {Object.<string,*>} message Plain object to verify
                     * @returns {string|null} `null` if valid, otherwise the reason why it is not
                     */
                    Annotation.verify = function verify(message) {
                        if (typeof message !== "object" || message === null)
                            return "object expected";
                        if (message.path != null && message.hasOwnProperty("path")) {
                            if (!Array.isArray(message.path))
                                return "path: array expected";
                            for (var i = 0; i < message.path.length; ++i)
                                if (!$util.isInteger(message.path[i]))
                                    return "path: integer[] expected";
                        }
                        if (message.sourceFile != null && message.hasOwnProperty("sourceFile"))
                            if (!$util.isString(message.sourceFile))
                                return "sourceFile: string expected";
                        if (message.begin != null && message.hasOwnProperty("begin"))
                            if (!$util.isInteger(message.begin))
                                return "begin: integer expected";
                        if (message.end != null && message.hasOwnProperty("end"))
                            if (!$util.isInteger(message.end))
                                return "end: integer expected";
                        if (message.semantic != null && message.hasOwnProperty("semantic"))
                            switch (message.semantic) {
                            default:
                                return "semantic: enum value expected";
                            case 0:
                            case 1:
                            case 2:
                                break;
                            }
                        return null;
                    };
    
                    /**
                     * Creates an Annotation message from a plain object. Also converts values to their respective internal types.
                     * @function fromObject
                     * @memberof google.protobuf.GeneratedCodeInfo.Annotation
                     * @static
                     * @param {Object.<string,*>} object Plain object
                     * @returns {google.protobuf.GeneratedCodeInfo.Annotation} Annotation
                     */
                    Annotation.fromObject = function fromObject(object) {
                        if (object instanceof $root.google.protobuf.GeneratedCodeInfo.Annotation)
                            return object;
                        var message = new $root.google.protobuf.GeneratedCodeInfo.Annotation();
                        if (object.path) {
                            if (!Array.isArray(object.path))
                                throw TypeError(".google.protobuf.GeneratedCodeInfo.Annotation.path: array expected");
                            message.path = [];
                            for (var i = 0; i < object.path.length; ++i)
                                message.path[i] = object.path[i] | 0;
                        }
                        if (object.sourceFile != null)
                            message.sourceFile = String(object.sourceFile);
                        if (object.begin != null)
                            message.begin = object.begin | 0;
                        if (object.end != null)
                            message.end = object.end | 0;
                        switch (object.semantic) {
                        default:
                            if (typeof object.semantic === "number") {
                                message.semantic = object.semantic;
                                break;
                            }
                            break;
                        case "NONE":
                        case 0:
                            message.semantic = 0;
                            break;
                        case "SET":
                        case 1:
                            message.semantic = 1;
                            break;
                        case "ALIAS":
                        case 2:
                            message.semantic = 2;
                            break;
                        }
                        return message;
                    };
    
                    /**
                     * Creates a plain object from an Annotation message. Also converts values to other types if specified.
                     * @function toObject
                     * @memberof google.protobuf.GeneratedCodeInfo.Annotation
                     * @static
                     * @param {google.protobuf.GeneratedCodeInfo.Annotation} message Annotation
                     * @param {$protobuf.IConversionOptions} [options] Conversion options
                     * @returns {Object.<string,*>} Plain object
                     */
                    Annotation.toObject = function toObject(message, options) {
                        if (!options)
                            options = {};
                        var object = {};
                        if (options.arrays || options.defaults)
                            object.path = [];
                        if (options.defaults) {
                            object.sourceFile = "";
                            object.begin = 0;
                            object.end = 0;
                            object.semantic = options.enums === String ? "NONE" : 0;
                        }
                        if (message.path && message.path.length) {
                            object.path = [];
                            for (var j = 0; j < message.path.length; ++j)
                                object.path[j] = message.path[j];
                        }
                        if (message.sourceFile != null && message.hasOwnProperty("sourceFile"))
                            object.sourceFile = message.sourceFile;
                        if (message.begin != null && message.hasOwnProperty("begin"))
                            object.begin = message.begin;
                        if (message.end != null && message.hasOwnProperty("end"))
                            object.end = message.end;
                        if (message.semantic != null && message.hasOwnProperty("semantic"))
                            object.semantic = options.enums === String ? $root.google.protobuf.GeneratedCodeInfo.Annotation.Semantic[message.semantic] === undefined ? message.semantic : $root.google.protobuf.GeneratedCodeInfo.Annotation.Semantic[message.semantic] : message.semantic;
                        return object;
                    };
    
                    /**
                     * Converts this Annotation to JSON.
                     * @function toJSON
                     * @memberof google.protobuf.GeneratedCodeInfo.Annotation
                     * @instance
                     * @returns {Object.<string,*>} JSON object
                     */
                    Annotation.prototype.toJSON = function toJSON() {
                        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                    };
    
                    /**
                     * Gets the default type url for Annotation
                     * @function getTypeUrl
                     * @memberof google.protobuf.GeneratedCodeInfo.Annotation
                     * @static
                     * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                     * @returns {string} The default type url
                     */
                    Annotation.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                        if (typeUrlPrefix === undefined) {
                            typeUrlPrefix = "type.googleapis.com";
                        }
                        return typeUrlPrefix + "/google.protobuf.GeneratedCodeInfo.Annotation";
                    };
    
                    /**
                     * Semantic enum.
                     * @name google.protobuf.GeneratedCodeInfo.Annotation.Semantic
                     * @enum {number}
                     * @property {number} NONE=0 NONE value
                     * @property {number} SET=1 SET value
                     * @property {number} ALIAS=2 ALIAS value
                     */
                    Annotation.Semantic = (function() {
                        var valuesById = {}, values = Object.create(valuesById);
                        values[valuesById[0] = "NONE"] = 0;
                        values[valuesById[1] = "SET"] = 1;
                        values[valuesById[2] = "ALIAS"] = 2;
                        return values;
                    })();
    
                    return Annotation;
                })();
    
                return GeneratedCodeInfo;
            })();
    
            protobuf.Timestamp = (function() {
    
                /**
                 * Properties of a Timestamp.
                 * @memberof google.protobuf
                 * @interface ITimestamp
                 * @property {number|Long|null} [seconds] Timestamp seconds
                 * @property {number|null} [nanos] Timestamp nanos
                 */
    
                /**
                 * Constructs a new Timestamp.
                 * @memberof google.protobuf
                 * @classdesc Represents a Timestamp.
                 * @implements ITimestamp
                 * @constructor
                 * @param {google.protobuf.ITimestamp=} [properties] Properties to set
                 */
                function Timestamp(properties) {
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * Timestamp seconds.
                 * @member {number|Long} seconds
                 * @memberof google.protobuf.Timestamp
                 * @instance
                 */
                Timestamp.prototype.seconds = $util.Long ? $util.Long.fromBits(0,0,false) : 0;
    
                /**
                 * Timestamp nanos.
                 * @member {number} nanos
                 * @memberof google.protobuf.Timestamp
                 * @instance
                 */
                Timestamp.prototype.nanos = 0;
    
                /**
                 * Creates a new Timestamp instance using the specified properties.
                 * @function create
                 * @memberof google.protobuf.Timestamp
                 * @static
                 * @param {google.protobuf.ITimestamp=} [properties] Properties to set
                 * @returns {google.protobuf.Timestamp} Timestamp instance
                 */
                Timestamp.create = function create(properties) {
                    return new Timestamp(properties);
                };
    
                /**
                 * Encodes the specified Timestamp message. Does not implicitly {@link google.protobuf.Timestamp.verify|verify} messages.
                 * @function encode
                 * @memberof google.protobuf.Timestamp
                 * @static
                 * @param {google.protobuf.ITimestamp} message Timestamp message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                Timestamp.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.seconds != null && Object.hasOwnProperty.call(message, "seconds"))
                        writer.uint32(/* id 1, wireType 0 =*/8).int64(message.seconds);
                    if (message.nanos != null && Object.hasOwnProperty.call(message, "nanos"))
                        writer.uint32(/* id 2, wireType 0 =*/16).int32(message.nanos);
                    return writer;
                };
    
                /**
                 * Encodes the specified Timestamp message, length delimited. Does not implicitly {@link google.protobuf.Timestamp.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.protobuf.Timestamp
                 * @static
                 * @param {google.protobuf.ITimestamp} message Timestamp message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                Timestamp.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a Timestamp message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.protobuf.Timestamp
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.protobuf.Timestamp} Timestamp
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                Timestamp.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.Timestamp();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1: {
                                message.seconds = reader.int64();
                                break;
                            }
                        case 2: {
                                message.nanos = reader.int32();
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a Timestamp message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.protobuf.Timestamp
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.protobuf.Timestamp} Timestamp
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                Timestamp.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a Timestamp message.
                 * @function verify
                 * @memberof google.protobuf.Timestamp
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                Timestamp.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.seconds != null && message.hasOwnProperty("seconds"))
                        if (!$util.isInteger(message.seconds) && !(message.seconds && $util.isInteger(message.seconds.low) && $util.isInteger(message.seconds.high)))
                            return "seconds: integer|Long expected";
                    if (message.nanos != null && message.hasOwnProperty("nanos"))
                        if (!$util.isInteger(message.nanos))
                            return "nanos: integer expected";
                    return null;
                };
    
                /**
                 * Creates a Timestamp message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.protobuf.Timestamp
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.protobuf.Timestamp} Timestamp
                 */
                Timestamp.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.protobuf.Timestamp)
                        return object;
                    var message = new $root.google.protobuf.Timestamp();
                    if (object.seconds != null)
                        if ($util.Long)
                            (message.seconds = $util.Long.fromValue(object.seconds)).unsigned = false;
                        else if (typeof object.seconds === "string")
                            message.seconds = parseInt(object.seconds, 10);
                        else if (typeof object.seconds === "number")
                            message.seconds = object.seconds;
                        else if (typeof object.seconds === "object")
                            message.seconds = new $util.LongBits(object.seconds.low >>> 0, object.seconds.high >>> 0).toNumber();
                    if (object.nanos != null)
                        message.nanos = object.nanos | 0;
                    return message;
                };
    
                /**
                 * Creates a plain object from a Timestamp message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.protobuf.Timestamp
                 * @static
                 * @param {google.protobuf.Timestamp} message Timestamp
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                Timestamp.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.defaults) {
                        if ($util.Long) {
                            var long = new $util.Long(0, 0, false);
                            object.seconds = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                        } else
                            object.seconds = options.longs === String ? "0" : 0;
                        object.nanos = 0;
                    }
                    if (message.seconds != null && message.hasOwnProperty("seconds"))
                        if (typeof message.seconds === "number")
                            object.seconds = options.longs === String ? String(message.seconds) : message.seconds;
                        else
                            object.seconds = options.longs === String ? $util.Long.prototype.toString.call(message.seconds) : options.longs === Number ? new $util.LongBits(message.seconds.low >>> 0, message.seconds.high >>> 0).toNumber() : message.seconds;
                    if (message.nanos != null && message.hasOwnProperty("nanos"))
                        object.nanos = message.nanos;
                    return object;
                };
    
                /**
                 * Converts this Timestamp to JSON.
                 * @function toJSON
                 * @memberof google.protobuf.Timestamp
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                Timestamp.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for Timestamp
                 * @function getTypeUrl
                 * @memberof google.protobuf.Timestamp
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                Timestamp.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.protobuf.Timestamp";
                };
    
                return Timestamp;
            })();
    
            protobuf.Duration = (function() {
    
                /**
                 * Properties of a Duration.
                 * @memberof google.protobuf
                 * @interface IDuration
                 * @property {number|Long|null} [seconds] Duration seconds
                 * @property {number|null} [nanos] Duration nanos
                 */
    
                /**
                 * Constructs a new Duration.
                 * @memberof google.protobuf
                 * @classdesc Represents a Duration.
                 * @implements IDuration
                 * @constructor
                 * @param {google.protobuf.IDuration=} [properties] Properties to set
                 */
                function Duration(properties) {
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * Duration seconds.
                 * @member {number|Long} seconds
                 * @memberof google.protobuf.Duration
                 * @instance
                 */
                Duration.prototype.seconds = $util.Long ? $util.Long.fromBits(0,0,false) : 0;
    
                /**
                 * Duration nanos.
                 * @member {number} nanos
                 * @memberof google.protobuf.Duration
                 * @instance
                 */
                Duration.prototype.nanos = 0;
    
                /**
                 * Creates a new Duration instance using the specified properties.
                 * @function create
                 * @memberof google.protobuf.Duration
                 * @static
                 * @param {google.protobuf.IDuration=} [properties] Properties to set
                 * @returns {google.protobuf.Duration} Duration instance
                 */
                Duration.create = function create(properties) {
                    return new Duration(properties);
                };
    
                /**
                 * Encodes the specified Duration message. Does not implicitly {@link google.protobuf.Duration.verify|verify} messages.
                 * @function encode
                 * @memberof google.protobuf.Duration
                 * @static
                 * @param {google.protobuf.IDuration} message Duration message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                Duration.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.seconds != null && Object.hasOwnProperty.call(message, "seconds"))
                        writer.uint32(/* id 1, wireType 0 =*/8).int64(message.seconds);
                    if (message.nanos != null && Object.hasOwnProperty.call(message, "nanos"))
                        writer.uint32(/* id 2, wireType 0 =*/16).int32(message.nanos);
                    return writer;
                };
    
                /**
                 * Encodes the specified Duration message, length delimited. Does not implicitly {@link google.protobuf.Duration.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.protobuf.Duration
                 * @static
                 * @param {google.protobuf.IDuration} message Duration message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                Duration.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a Duration message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.protobuf.Duration
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.protobuf.Duration} Duration
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                Duration.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.Duration();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1: {
                                message.seconds = reader.int64();
                                break;
                            }
                        case 2: {
                                message.nanos = reader.int32();
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a Duration message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.protobuf.Duration
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.protobuf.Duration} Duration
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                Duration.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a Duration message.
                 * @function verify
                 * @memberof google.protobuf.Duration
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                Duration.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.seconds != null && message.hasOwnProperty("seconds"))
                        if (!$util.isInteger(message.seconds) && !(message.seconds && $util.isInteger(message.seconds.low) && $util.isInteger(message.seconds.high)))
                            return "seconds: integer|Long expected";
                    if (message.nanos != null && message.hasOwnProperty("nanos"))
                        if (!$util.isInteger(message.nanos))
                            return "nanos: integer expected";
                    return null;
                };
    
                /**
                 * Creates a Duration message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.protobuf.Duration
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.protobuf.Duration} Duration
                 */
                Duration.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.protobuf.Duration)
                        return object;
                    var message = new $root.google.protobuf.Duration();
                    if (object.seconds != null)
                        if ($util.Long)
                            (message.seconds = $util.Long.fromValue(object.seconds)).unsigned = false;
                        else if (typeof object.seconds === "string")
                            message.seconds = parseInt(object.seconds, 10);
                        else if (typeof object.seconds === "number")
                            message.seconds = object.seconds;
                        else if (typeof object.seconds === "object")
                            message.seconds = new $util.LongBits(object.seconds.low >>> 0, object.seconds.high >>> 0).toNumber();
                    if (object.nanos != null)
                        message.nanos = object.nanos | 0;
                    return message;
                };
    
                /**
                 * Creates a plain object from a Duration message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.protobuf.Duration
                 * @static
                 * @param {google.protobuf.Duration} message Duration
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                Duration.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.defaults) {
                        if ($util.Long) {
                            var long = new $util.Long(0, 0, false);
                            object.seconds = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                        } else
                            object.seconds = options.longs === String ? "0" : 0;
                        object.nanos = 0;
                    }
                    if (message.seconds != null && message.hasOwnProperty("seconds"))
                        if (typeof message.seconds === "number")
                            object.seconds = options.longs === String ? String(message.seconds) : message.seconds;
                        else
                            object.seconds = options.longs === String ? $util.Long.prototype.toString.call(message.seconds) : options.longs === Number ? new $util.LongBits(message.seconds.low >>> 0, message.seconds.high >>> 0).toNumber() : message.seconds;
                    if (message.nanos != null && message.hasOwnProperty("nanos"))
                        object.nanos = message.nanos;
                    return object;
                };
    
                /**
                 * Converts this Duration to JSON.
                 * @function toJSON
                 * @memberof google.protobuf.Duration
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                Duration.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for Duration
                 * @function getTypeUrl
                 * @memberof google.protobuf.Duration
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                Duration.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.protobuf.Duration";
                };
    
                return Duration;
            })();
    
            protobuf.Any = (function() {
    
                /**
                 * Properties of an Any.
                 * @memberof google.protobuf
                 * @interface IAny
                 * @property {string|null} [type_url] Any type_url
                 * @property {Uint8Array|null} [value] Any value
                 */
    
                /**
                 * Constructs a new Any.
                 * @memberof google.protobuf
                 * @classdesc Represents an Any.
                 * @implements IAny
                 * @constructor
                 * @param {google.protobuf.IAny=} [properties] Properties to set
                 */
                function Any(properties) {
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * Any type_url.
                 * @member {string} type_url
                 * @memberof google.protobuf.Any
                 * @instance
                 */
                Any.prototype.type_url = "";
    
                /**
                 * Any value.
                 * @member {Uint8Array} value
                 * @memberof google.protobuf.Any
                 * @instance
                 */
                Any.prototype.value = $util.newBuffer([]);
    
                /**
                 * Creates a new Any instance using the specified properties.
                 * @function create
                 * @memberof google.protobuf.Any
                 * @static
                 * @param {google.protobuf.IAny=} [properties] Properties to set
                 * @returns {google.protobuf.Any} Any instance
                 */
                Any.create = function create(properties) {
                    return new Any(properties);
                };
    
                /**
                 * Encodes the specified Any message. Does not implicitly {@link google.protobuf.Any.verify|verify} messages.
                 * @function encode
                 * @memberof google.protobuf.Any
                 * @static
                 * @param {google.protobuf.IAny} message Any message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                Any.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.type_url != null && Object.hasOwnProperty.call(message, "type_url"))
                        writer.uint32(/* id 1, wireType 2 =*/10).string(message.type_url);
                    if (message.value != null && Object.hasOwnProperty.call(message, "value"))
                        writer.uint32(/* id 2, wireType 2 =*/18).bytes(message.value);
                    return writer;
                };
    
                /**
                 * Encodes the specified Any message, length delimited. Does not implicitly {@link google.protobuf.Any.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.protobuf.Any
                 * @static
                 * @param {google.protobuf.IAny} message Any message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                Any.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes an Any message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.protobuf.Any
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.protobuf.Any} Any
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                Any.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.Any();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1: {
                                message.type_url = reader.string();
                                break;
                            }
                        case 2: {
                                message.value = reader.bytes();
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes an Any message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.protobuf.Any
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.protobuf.Any} Any
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                Any.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies an Any message.
                 * @function verify
                 * @memberof google.protobuf.Any
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                Any.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.type_url != null && message.hasOwnProperty("type_url"))
                        if (!$util.isString(message.type_url))
                            return "type_url: string expected";
                    if (message.value != null && message.hasOwnProperty("value"))
                        if (!(message.value && typeof message.value.length === "number" || $util.isString(message.value)))
                            return "value: buffer expected";
                    return null;
                };
    
                /**
                 * Creates an Any message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.protobuf.Any
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.protobuf.Any} Any
                 */
                Any.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.protobuf.Any)
                        return object;
                    var message = new $root.google.protobuf.Any();
                    if (object.type_url != null)
                        message.type_url = String(object.type_url);
                    if (object.value != null)
                        if (typeof object.value === "string")
                            $util.base64.decode(object.value, message.value = $util.newBuffer($util.base64.length(object.value)), 0);
                        else if (object.value.length >= 0)
                            message.value = object.value;
                    return message;
                };
    
                /**
                 * Creates a plain object from an Any message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.protobuf.Any
                 * @static
                 * @param {google.protobuf.Any} message Any
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                Any.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.defaults) {
                        object.type_url = "";
                        if (options.bytes === String)
                            object.value = "";
                        else {
                            object.value = [];
                            if (options.bytes !== Array)
                                object.value = $util.newBuffer(object.value);
                        }
                    }
                    if (message.type_url != null && message.hasOwnProperty("type_url"))
                        object.type_url = message.type_url;
                    if (message.value != null && message.hasOwnProperty("value"))
                        object.value = options.bytes === String ? $util.base64.encode(message.value, 0, message.value.length) : options.bytes === Array ? Array.prototype.slice.call(message.value) : message.value;
                    return object;
                };
    
                /**
                 * Converts this Any to JSON.
                 * @function toJSON
                 * @memberof google.protobuf.Any
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                Any.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for Any
                 * @function getTypeUrl
                 * @memberof google.protobuf.Any
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                Any.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.protobuf.Any";
                };
    
                return Any;
            })();
    
            protobuf.Empty = (function() {
    
                /**
                 * Properties of an Empty.
                 * @memberof google.protobuf
                 * @interface IEmpty
                 */
    
                /**
                 * Constructs a new Empty.
                 * @memberof google.protobuf
                 * @classdesc Represents an Empty.
                 * @implements IEmpty
                 * @constructor
                 * @param {google.protobuf.IEmpty=} [properties] Properties to set
                 */
                function Empty(properties) {
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * Creates a new Empty instance using the specified properties.
                 * @function create
                 * @memberof google.protobuf.Empty
                 * @static
                 * @param {google.protobuf.IEmpty=} [properties] Properties to set
                 * @returns {google.protobuf.Empty} Empty instance
                 */
                Empty.create = function create(properties) {
                    return new Empty(properties);
                };
    
                /**
                 * Encodes the specified Empty message. Does not implicitly {@link google.protobuf.Empty.verify|verify} messages.
                 * @function encode
                 * @memberof google.protobuf.Empty
                 * @static
                 * @param {google.protobuf.IEmpty} message Empty message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                Empty.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    return writer;
                };
    
                /**
                 * Encodes the specified Empty message, length delimited. Does not implicitly {@link google.protobuf.Empty.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.protobuf.Empty
                 * @static
                 * @param {google.protobuf.IEmpty} message Empty message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                Empty.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes an Empty message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.protobuf.Empty
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.protobuf.Empty} Empty
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                Empty.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.Empty();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes an Empty message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.protobuf.Empty
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.protobuf.Empty} Empty
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                Empty.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies an Empty message.
                 * @function verify
                 * @memberof google.protobuf.Empty
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                Empty.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    return null;
                };
    
                /**
                 * Creates an Empty message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.protobuf.Empty
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.protobuf.Empty} Empty
                 */
                Empty.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.protobuf.Empty)
                        return object;
                    return new $root.google.protobuf.Empty();
                };
    
                /**
                 * Creates a plain object from an Empty message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.protobuf.Empty
                 * @static
                 * @param {google.protobuf.Empty} message Empty
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                Empty.toObject = function toObject() {
                    return {};
                };
    
                /**
                 * Converts this Empty to JSON.
                 * @function toJSON
                 * @memberof google.protobuf.Empty
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                Empty.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for Empty
                 * @function getTypeUrl
                 * @memberof google.protobuf.Empty
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                Empty.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.protobuf.Empty";
                };
    
                return Empty;
            })();
    
            protobuf.FieldMask = (function() {
    
                /**
                 * Properties of a FieldMask.
                 * @memberof google.protobuf
                 * @interface IFieldMask
                 * @property {Array.<string>|null} [paths] FieldMask paths
                 */
    
                /**
                 * Constructs a new FieldMask.
                 * @memberof google.protobuf
                 * @classdesc Represents a FieldMask.
                 * @implements IFieldMask
                 * @constructor
                 * @param {google.protobuf.IFieldMask=} [properties] Properties to set
                 */
                function FieldMask(properties) {
                    this.paths = [];
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * FieldMask paths.
                 * @member {Array.<string>} paths
                 * @memberof google.protobuf.FieldMask
                 * @instance
                 */
                FieldMask.prototype.paths = $util.emptyArray;
    
                /**
                 * Creates a new FieldMask instance using the specified properties.
                 * @function create
                 * @memberof google.protobuf.FieldMask
                 * @static
                 * @param {google.protobuf.IFieldMask=} [properties] Properties to set
                 * @returns {google.protobuf.FieldMask} FieldMask instance
                 */
                FieldMask.create = function create(properties) {
                    return new FieldMask(properties);
                };
    
                /**
                 * Encodes the specified FieldMask message. Does not implicitly {@link google.protobuf.FieldMask.verify|verify} messages.
                 * @function encode
                 * @memberof google.protobuf.FieldMask
                 * @static
                 * @param {google.protobuf.IFieldMask} message FieldMask message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                FieldMask.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.paths != null && message.paths.length)
                        for (var i = 0; i < message.paths.length; ++i)
                            writer.uint32(/* id 1, wireType 2 =*/10).string(message.paths[i]);
                    return writer;
                };
    
                /**
                 * Encodes the specified FieldMask message, length delimited. Does not implicitly {@link google.protobuf.FieldMask.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.protobuf.FieldMask
                 * @static
                 * @param {google.protobuf.IFieldMask} message FieldMask message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                FieldMask.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a FieldMask message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.protobuf.FieldMask
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.protobuf.FieldMask} FieldMask
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                FieldMask.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.FieldMask();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1: {
                                if (!(message.paths && message.paths.length))
                                    message.paths = [];
                                message.paths.push(reader.string());
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a FieldMask message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.protobuf.FieldMask
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.protobuf.FieldMask} FieldMask
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                FieldMask.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a FieldMask message.
                 * @function verify
                 * @memberof google.protobuf.FieldMask
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                FieldMask.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.paths != null && message.hasOwnProperty("paths")) {
                        if (!Array.isArray(message.paths))
                            return "paths: array expected";
                        for (var i = 0; i < message.paths.length; ++i)
                            if (!$util.isString(message.paths[i]))
                                return "paths: string[] expected";
                    }
                    return null;
                };
    
                /**
                 * Creates a FieldMask message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.protobuf.FieldMask
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.protobuf.FieldMask} FieldMask
                 */
                FieldMask.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.protobuf.FieldMask)
                        return object;
                    var message = new $root.google.protobuf.FieldMask();
                    if (object.paths) {
                        if (!Array.isArray(object.paths))
                            throw TypeError(".google.protobuf.FieldMask.paths: array expected");
                        message.paths = [];
                        for (var i = 0; i < object.paths.length; ++i)
                            message.paths[i] = String(object.paths[i]);
                    }
                    return message;
                };
    
                /**
                 * Creates a plain object from a FieldMask message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.protobuf.FieldMask
                 * @static
                 * @param {google.protobuf.FieldMask} message FieldMask
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                FieldMask.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.arrays || options.defaults)
                        object.paths = [];
                    if (message.paths && message.paths.length) {
                        object.paths = [];
                        for (var j = 0; j < message.paths.length; ++j)
                            object.paths[j] = message.paths[j];
                    }
                    return object;
                };
    
                /**
                 * Converts this FieldMask to JSON.
                 * @function toJSON
                 * @memberof google.protobuf.FieldMask
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                FieldMask.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for FieldMask
                 * @function getTypeUrl
                 * @memberof google.protobuf.FieldMask
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                FieldMask.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.protobuf.FieldMask";
                };
    
                return FieldMask;
            })();
    
            return protobuf;
        })();
    
        google.longrunning = (function() {
    
            /**
             * Namespace longrunning.
             * @memberof google
             * @namespace
             */
            var longrunning = {};
    
            longrunning.Operations = (function() {
    
                /**
                 * Constructs a new Operations service.
                 * @memberof google.longrunning
                 * @classdesc Represents an Operations
                 * @extends $protobuf.rpc.Service
                 * @constructor
                 * @param {$protobuf.RPCImpl} rpcImpl RPC implementation
                 * @param {boolean} [requestDelimited=false] Whether requests are length-delimited
                 * @param {boolean} [responseDelimited=false] Whether responses are length-delimited
                 */
                function Operations(rpcImpl, requestDelimited, responseDelimited) {
                    $protobuf.rpc.Service.call(this, rpcImpl, requestDelimited, responseDelimited);
                }
    
                (Operations.prototype = Object.create($protobuf.rpc.Service.prototype)).constructor = Operations;
    
                /**
                 * Creates new Operations service using the specified rpc implementation.
                 * @function create
                 * @memberof google.longrunning.Operations
                 * @static
                 * @param {$protobuf.RPCImpl} rpcImpl RPC implementation
                 * @param {boolean} [requestDelimited=false] Whether requests are length-delimited
                 * @param {boolean} [responseDelimited=false] Whether responses are length-delimited
                 * @returns {Operations} RPC service. Useful where requests and/or responses are streamed.
                 */
                Operations.create = function create(rpcImpl, requestDelimited, responseDelimited) {
                    return new this(rpcImpl, requestDelimited, responseDelimited);
                };
    
                /**
                 * Callback as used by {@link google.longrunning.Operations|listOperations}.
                 * @memberof google.longrunning.Operations
                 * @typedef ListOperationsCallback
                 * @type {function}
                 * @param {Error|null} error Error, if any
                 * @param {google.longrunning.ListOperationsResponse} [response] ListOperationsResponse
                 */
    
                /**
                 * Calls ListOperations.
                 * @function listOperations
                 * @memberof google.longrunning.Operations
                 * @instance
                 * @param {google.longrunning.IListOperationsRequest} request ListOperationsRequest message or plain object
                 * @param {google.longrunning.Operations.ListOperationsCallback} callback Node-style callback called with the error, if any, and ListOperationsResponse
                 * @returns {undefined}
                 * @variation 1
                 */
                Object.defineProperty(Operations.prototype.listOperations = function listOperations(request, callback) {
                    return this.rpcCall(listOperations, $root.google.longrunning.ListOperationsRequest, $root.google.longrunning.ListOperationsResponse, request, callback);
                }, "name", { value: "ListOperations" });
    
                /**
                 * Calls ListOperations.
                 * @function listOperations
                 * @memberof google.longrunning.Operations
                 * @instance
                 * @param {google.longrunning.IListOperationsRequest} request ListOperationsRequest message or plain object
                 * @returns {Promise<google.longrunning.ListOperationsResponse>} Promise
                 * @variation 2
                 */
    
                /**
                 * Callback as used by {@link google.longrunning.Operations|getOperation}.
                 * @memberof google.longrunning.Operations
                 * @typedef GetOperationCallback
                 * @type {function}
                 * @param {Error|null} error Error, if any
                 * @param {google.longrunning.Operation} [response] Operation
                 */
    
                /**
                 * Calls GetOperation.
                 * @function getOperation
                 * @memberof google.longrunning.Operations
                 * @instance
                 * @param {google.longrunning.IGetOperationRequest} request GetOperationRequest message or plain object
                 * @param {google.longrunning.Operations.GetOperationCallback} callback Node-style callback called with the error, if any, and Operation
                 * @returns {undefined}
                 * @variation 1
                 */
                Object.defineProperty(Operations.prototype.getOperation = function getOperation(request, callback) {
                    return this.rpcCall(getOperation, $root.google.longrunning.GetOperationRequest, $root.google.longrunning.Operation, request, callback);
                }, "name", { value: "GetOperation" });
    
                /**
                 * Calls GetOperation.
                 * @function getOperation
                 * @memberof google.longrunning.Operations
                 * @instance
                 * @param {google.longrunning.IGetOperationRequest} request GetOperationRequest message or plain object
                 * @returns {Promise<google.longrunning.Operation>} Promise
                 * @variation 2
                 */
    
                /**
                 * Callback as used by {@link google.longrunning.Operations|deleteOperation}.
                 * @memberof google.longrunning.Operations
                 * @typedef DeleteOperationCallback
                 * @type {function}
                 * @param {Error|null} error Error, if any
                 * @param {google.protobuf.Empty} [response] Empty
                 */
    
                /**
                 * Calls DeleteOperation.
                 * @function deleteOperation
                 * @memberof google.longrunning.Operations
                 * @instance
                 * @param {google.longrunning.IDeleteOperationRequest} request DeleteOperationRequest message or plain object
                 * @param {google.longrunning.Operations.DeleteOperationCallback} callback Node-style callback called with the error, if any, and Empty
                 * @returns {undefined}
                 * @variation 1
                 */
                Object.defineProperty(Operations.prototype.deleteOperation = function deleteOperation(request, callback) {
                    return this.rpcCall(deleteOperation, $root.google.longrunning.DeleteOperationRequest, $root.google.protobuf.Empty, request, callback);
                }, "name", { value: "DeleteOperation" });
    
                /**
                 * Calls DeleteOperation.
                 * @function deleteOperation
                 * @memberof google.longrunning.Operations
                 * @instance
                 * @param {google.longrunning.IDeleteOperationRequest} request DeleteOperationRequest message or plain object
                 * @returns {Promise<google.protobuf.Empty>} Promise
                 * @variation 2
                 */
    
                /**
                 * Callback as used by {@link google.longrunning.Operations|cancelOperation}.
                 * @memberof google.longrunning.Operations
                 * @typedef CancelOperationCallback
                 * @type {function}
                 * @param {Error|null} error Error, if any
                 * @param {google.protobuf.Empty} [response] Empty
                 */
    
                /**
                 * Calls CancelOperation.
                 * @function cancelOperation
                 * @memberof google.longrunning.Operations
                 * @instance
                 * @param {google.longrunning.ICancelOperationRequest} request CancelOperationRequest message or plain object
                 * @param {google.longrunning.Operations.CancelOperationCallback} callback Node-style callback called with the error, if any, and Empty
                 * @returns {undefined}
                 * @variation 1
                 */
                Object.defineProperty(Operations.prototype.cancelOperation = function cancelOperation(request, callback) {
                    return this.rpcCall(cancelOperation, $root.google.longrunning.CancelOperationRequest, $root.google.protobuf.Empty, request, callback);
                }, "name", { value: "CancelOperation" });
    
                /**
                 * Calls CancelOperation.
                 * @function cancelOperation
                 * @memberof google.longrunning.Operations
                 * @instance
                 * @param {google.longrunning.ICancelOperationRequest} request CancelOperationRequest message or plain object
                 * @returns {Promise<google.protobuf.Empty>} Promise
                 * @variation 2
                 */
    
                /**
                 * Callback as used by {@link google.longrunning.Operations|waitOperation}.
                 * @memberof google.longrunning.Operations
                 * @typedef WaitOperationCallback
                 * @type {function}
                 * @param {Error|null} error Error, if any
                 * @param {google.longrunning.Operation} [response] Operation
                 */
    
                /**
                 * Calls WaitOperation.
                 * @function waitOperation
                 * @memberof google.longrunning.Operations
                 * @instance
                 * @param {google.longrunning.IWaitOperationRequest} request WaitOperationRequest message or plain object
                 * @param {google.longrunning.Operations.WaitOperationCallback} callback Node-style callback called with the error, if any, and Operation
                 * @returns {undefined}
                 * @variation 1
                 */
                Object.defineProperty(Operations.prototype.waitOperation = function waitOperation(request, callback) {
                    return this.rpcCall(waitOperation, $root.google.longrunning.WaitOperationRequest, $root.google.longrunning.Operation, request, callback);
                }, "name", { value: "WaitOperation" });
    
                /**
                 * Calls WaitOperation.
                 * @function waitOperation
                 * @memberof google.longrunning.Operations
                 * @instance
                 * @param {google.longrunning.IWaitOperationRequest} request WaitOperationRequest message or plain object
                 * @returns {Promise<google.longrunning.Operation>} Promise
                 * @variation 2
                 */
    
                return Operations;
            })();
    
            longrunning.Operation = (function() {
    
                /**
                 * Properties of an Operation.
                 * @memberof google.longrunning
                 * @interface IOperation
                 * @property {string|null} [name] Operation name
                 * @property {google.protobuf.IAny|null} [metadata] Operation metadata
                 * @property {boolean|null} [done] Operation done
                 * @property {google.rpc.IStatus|null} [error] Operation error
                 * @property {google.protobuf.IAny|null} [response] Operation response
                 */
    
                /**
                 * Constructs a new Operation.
                 * @memberof google.longrunning
                 * @classdesc Represents an Operation.
                 * @implements IOperation
                 * @constructor
                 * @param {google.longrunning.IOperation=} [properties] Properties to set
                 */
                function Operation(properties) {
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * Operation name.
                 * @member {string} name
                 * @memberof google.longrunning.Operation
                 * @instance
                 */
                Operation.prototype.name = "";
    
                /**
                 * Operation metadata.
                 * @member {google.protobuf.IAny|null|undefined} metadata
                 * @memberof google.longrunning.Operation
                 * @instance
                 */
                Operation.prototype.metadata = null;
    
                /**
                 * Operation done.
                 * @member {boolean} done
                 * @memberof google.longrunning.Operation
                 * @instance
                 */
                Operation.prototype.done = false;
    
                /**
                 * Operation error.
                 * @member {google.rpc.IStatus|null|undefined} error
                 * @memberof google.longrunning.Operation
                 * @instance
                 */
                Operation.prototype.error = null;
    
                /**
                 * Operation response.
                 * @member {google.protobuf.IAny|null|undefined} response
                 * @memberof google.longrunning.Operation
                 * @instance
                 */
                Operation.prototype.response = null;
    
                // OneOf field names bound to virtual getters and setters
                var $oneOfFields;
    
                /**
                 * Operation result.
                 * @member {"error"|"response"|undefined} result
                 * @memberof google.longrunning.Operation
                 * @instance
                 */
                Object.defineProperty(Operation.prototype, "result", {
                    get: $util.oneOfGetter($oneOfFields = ["error", "response"]),
                    set: $util.oneOfSetter($oneOfFields)
                });
    
                /**
                 * Creates a new Operation instance using the specified properties.
                 * @function create
                 * @memberof google.longrunning.Operation
                 * @static
                 * @param {google.longrunning.IOperation=} [properties] Properties to set
                 * @returns {google.longrunning.Operation} Operation instance
                 */
                Operation.create = function create(properties) {
                    return new Operation(properties);
                };
    
                /**
                 * Encodes the specified Operation message. Does not implicitly {@link google.longrunning.Operation.verify|verify} messages.
                 * @function encode
                 * @memberof google.longrunning.Operation
                 * @static
                 * @param {google.longrunning.IOperation} message Operation message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                Operation.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                        writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                    if (message.metadata != null && Object.hasOwnProperty.call(message, "metadata"))
                        $root.google.protobuf.Any.encode(message.metadata, writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                    if (message.done != null && Object.hasOwnProperty.call(message, "done"))
                        writer.uint32(/* id 3, wireType 0 =*/24).bool(message.done);
                    if (message.error != null && Object.hasOwnProperty.call(message, "error"))
                        $root.google.rpc.Status.encode(message.error, writer.uint32(/* id 4, wireType 2 =*/34).fork()).ldelim();
                    if (message.response != null && Object.hasOwnProperty.call(message, "response"))
                        $root.google.protobuf.Any.encode(message.response, writer.uint32(/* id 5, wireType 2 =*/42).fork()).ldelim();
                    return writer;
                };
    
                /**
                 * Encodes the specified Operation message, length delimited. Does not implicitly {@link google.longrunning.Operation.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.longrunning.Operation
                 * @static
                 * @param {google.longrunning.IOperation} message Operation message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                Operation.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes an Operation message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.longrunning.Operation
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.longrunning.Operation} Operation
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                Operation.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.longrunning.Operation();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1: {
                                message.name = reader.string();
                                break;
                            }
                        case 2: {
                                message.metadata = $root.google.protobuf.Any.decode(reader, reader.uint32());
                                break;
                            }
                        case 3: {
                                message.done = reader.bool();
                                break;
                            }
                        case 4: {
                                message.error = $root.google.rpc.Status.decode(reader, reader.uint32());
                                break;
                            }
                        case 5: {
                                message.response = $root.google.protobuf.Any.decode(reader, reader.uint32());
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes an Operation message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.longrunning.Operation
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.longrunning.Operation} Operation
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                Operation.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies an Operation message.
                 * @function verify
                 * @memberof google.longrunning.Operation
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                Operation.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    var properties = {};
                    if (message.name != null && message.hasOwnProperty("name"))
                        if (!$util.isString(message.name))
                            return "name: string expected";
                    if (message.metadata != null && message.hasOwnProperty("metadata")) {
                        var error = $root.google.protobuf.Any.verify(message.metadata);
                        if (error)
                            return "metadata." + error;
                    }
                    if (message.done != null && message.hasOwnProperty("done"))
                        if (typeof message.done !== "boolean")
                            return "done: boolean expected";
                    if (message.error != null && message.hasOwnProperty("error")) {
                        properties.result = 1;
                        {
                            var error = $root.google.rpc.Status.verify(message.error);
                            if (error)
                                return "error." + error;
                        }
                    }
                    if (message.response != null && message.hasOwnProperty("response")) {
                        if (properties.result === 1)
                            return "result: multiple values";
                        properties.result = 1;
                        {
                            var error = $root.google.protobuf.Any.verify(message.response);
                            if (error)
                                return "response." + error;
                        }
                    }
                    return null;
                };
    
                /**
                 * Creates an Operation message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.longrunning.Operation
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.longrunning.Operation} Operation
                 */
                Operation.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.longrunning.Operation)
                        return object;
                    var message = new $root.google.longrunning.Operation();
                    if (object.name != null)
                        message.name = String(object.name);
                    if (object.metadata != null) {
                        if (typeof object.metadata !== "object")
                            throw TypeError(".google.longrunning.Operation.metadata: object expected");
                        message.metadata = $root.google.protobuf.Any.fromObject(object.metadata);
                    }
                    if (object.done != null)
                        message.done = Boolean(object.done);
                    if (object.error != null) {
                        if (typeof object.error !== "object")
                            throw TypeError(".google.longrunning.Operation.error: object expected");
                        message.error = $root.google.rpc.Status.fromObject(object.error);
                    }
                    if (object.response != null) {
                        if (typeof object.response !== "object")
                            throw TypeError(".google.longrunning.Operation.response: object expected");
                        message.response = $root.google.protobuf.Any.fromObject(object.response);
                    }
                    return message;
                };
    
                /**
                 * Creates a plain object from an Operation message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.longrunning.Operation
                 * @static
                 * @param {google.longrunning.Operation} message Operation
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                Operation.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.defaults) {
                        object.name = "";
                        object.metadata = null;
                        object.done = false;
                    }
                    if (message.name != null && message.hasOwnProperty("name"))
                        object.name = message.name;
                    if (message.metadata != null && message.hasOwnProperty("metadata"))
                        object.metadata = $root.google.protobuf.Any.toObject(message.metadata, options);
                    if (message.done != null && message.hasOwnProperty("done"))
                        object.done = message.done;
                    if (message.error != null && message.hasOwnProperty("error")) {
                        object.error = $root.google.rpc.Status.toObject(message.error, options);
                        if (options.oneofs)
                            object.result = "error";
                    }
                    if (message.response != null && message.hasOwnProperty("response")) {
                        object.response = $root.google.protobuf.Any.toObject(message.response, options);
                        if (options.oneofs)
                            object.result = "response";
                    }
                    return object;
                };
    
                /**
                 * Converts this Operation to JSON.
                 * @function toJSON
                 * @memberof google.longrunning.Operation
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                Operation.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for Operation
                 * @function getTypeUrl
                 * @memberof google.longrunning.Operation
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                Operation.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.longrunning.Operation";
                };
    
                return Operation;
            })();
    
            longrunning.GetOperationRequest = (function() {
    
                /**
                 * Properties of a GetOperationRequest.
                 * @memberof google.longrunning
                 * @interface IGetOperationRequest
                 * @property {string|null} [name] GetOperationRequest name
                 */
    
                /**
                 * Constructs a new GetOperationRequest.
                 * @memberof google.longrunning
                 * @classdesc Represents a GetOperationRequest.
                 * @implements IGetOperationRequest
                 * @constructor
                 * @param {google.longrunning.IGetOperationRequest=} [properties] Properties to set
                 */
                function GetOperationRequest(properties) {
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * GetOperationRequest name.
                 * @member {string} name
                 * @memberof google.longrunning.GetOperationRequest
                 * @instance
                 */
                GetOperationRequest.prototype.name = "";
    
                /**
                 * Creates a new GetOperationRequest instance using the specified properties.
                 * @function create
                 * @memberof google.longrunning.GetOperationRequest
                 * @static
                 * @param {google.longrunning.IGetOperationRequest=} [properties] Properties to set
                 * @returns {google.longrunning.GetOperationRequest} GetOperationRequest instance
                 */
                GetOperationRequest.create = function create(properties) {
                    return new GetOperationRequest(properties);
                };
    
                /**
                 * Encodes the specified GetOperationRequest message. Does not implicitly {@link google.longrunning.GetOperationRequest.verify|verify} messages.
                 * @function encode
                 * @memberof google.longrunning.GetOperationRequest
                 * @static
                 * @param {google.longrunning.IGetOperationRequest} message GetOperationRequest message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                GetOperationRequest.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                        writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                    return writer;
                };
    
                /**
                 * Encodes the specified GetOperationRequest message, length delimited. Does not implicitly {@link google.longrunning.GetOperationRequest.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.longrunning.GetOperationRequest
                 * @static
                 * @param {google.longrunning.IGetOperationRequest} message GetOperationRequest message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                GetOperationRequest.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a GetOperationRequest message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.longrunning.GetOperationRequest
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.longrunning.GetOperationRequest} GetOperationRequest
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                GetOperationRequest.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.longrunning.GetOperationRequest();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1: {
                                message.name = reader.string();
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a GetOperationRequest message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.longrunning.GetOperationRequest
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.longrunning.GetOperationRequest} GetOperationRequest
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                GetOperationRequest.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a GetOperationRequest message.
                 * @function verify
                 * @memberof google.longrunning.GetOperationRequest
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                GetOperationRequest.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.name != null && message.hasOwnProperty("name"))
                        if (!$util.isString(message.name))
                            return "name: string expected";
                    return null;
                };
    
                /**
                 * Creates a GetOperationRequest message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.longrunning.GetOperationRequest
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.longrunning.GetOperationRequest} GetOperationRequest
                 */
                GetOperationRequest.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.longrunning.GetOperationRequest)
                        return object;
                    var message = new $root.google.longrunning.GetOperationRequest();
                    if (object.name != null)
                        message.name = String(object.name);
                    return message;
                };
    
                /**
                 * Creates a plain object from a GetOperationRequest message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.longrunning.GetOperationRequest
                 * @static
                 * @param {google.longrunning.GetOperationRequest} message GetOperationRequest
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                GetOperationRequest.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.defaults)
                        object.name = "";
                    if (message.name != null && message.hasOwnProperty("name"))
                        object.name = message.name;
                    return object;
                };
    
                /**
                 * Converts this GetOperationRequest to JSON.
                 * @function toJSON
                 * @memberof google.longrunning.GetOperationRequest
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                GetOperationRequest.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for GetOperationRequest
                 * @function getTypeUrl
                 * @memberof google.longrunning.GetOperationRequest
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                GetOperationRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.longrunning.GetOperationRequest";
                };
    
                return GetOperationRequest;
            })();
    
            longrunning.ListOperationsRequest = (function() {
    
                /**
                 * Properties of a ListOperationsRequest.
                 * @memberof google.longrunning
                 * @interface IListOperationsRequest
                 * @property {string|null} [name] ListOperationsRequest name
                 * @property {string|null} [filter] ListOperationsRequest filter
                 * @property {number|null} [pageSize] ListOperationsRequest pageSize
                 * @property {string|null} [pageToken] ListOperationsRequest pageToken
                 */
    
                /**
                 * Constructs a new ListOperationsRequest.
                 * @memberof google.longrunning
                 * @classdesc Represents a ListOperationsRequest.
                 * @implements IListOperationsRequest
                 * @constructor
                 * @param {google.longrunning.IListOperationsRequest=} [properties] Properties to set
                 */
                function ListOperationsRequest(properties) {
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * ListOperationsRequest name.
                 * @member {string} name
                 * @memberof google.longrunning.ListOperationsRequest
                 * @instance
                 */
                ListOperationsRequest.prototype.name = "";
    
                /**
                 * ListOperationsRequest filter.
                 * @member {string} filter
                 * @memberof google.longrunning.ListOperationsRequest
                 * @instance
                 */
                ListOperationsRequest.prototype.filter = "";
    
                /**
                 * ListOperationsRequest pageSize.
                 * @member {number} pageSize
                 * @memberof google.longrunning.ListOperationsRequest
                 * @instance
                 */
                ListOperationsRequest.prototype.pageSize = 0;
    
                /**
                 * ListOperationsRequest pageToken.
                 * @member {string} pageToken
                 * @memberof google.longrunning.ListOperationsRequest
                 * @instance
                 */
                ListOperationsRequest.prototype.pageToken = "";
    
                /**
                 * Creates a new ListOperationsRequest instance using the specified properties.
                 * @function create
                 * @memberof google.longrunning.ListOperationsRequest
                 * @static
                 * @param {google.longrunning.IListOperationsRequest=} [properties] Properties to set
                 * @returns {google.longrunning.ListOperationsRequest} ListOperationsRequest instance
                 */
                ListOperationsRequest.create = function create(properties) {
                    return new ListOperationsRequest(properties);
                };
    
                /**
                 * Encodes the specified ListOperationsRequest message. Does not implicitly {@link google.longrunning.ListOperationsRequest.verify|verify} messages.
                 * @function encode
                 * @memberof google.longrunning.ListOperationsRequest
                 * @static
                 * @param {google.longrunning.IListOperationsRequest} message ListOperationsRequest message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                ListOperationsRequest.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.filter != null && Object.hasOwnProperty.call(message, "filter"))
                        writer.uint32(/* id 1, wireType 2 =*/10).string(message.filter);
                    if (message.pageSize != null && Object.hasOwnProperty.call(message, "pageSize"))
                        writer.uint32(/* id 2, wireType 0 =*/16).int32(message.pageSize);
                    if (message.pageToken != null && Object.hasOwnProperty.call(message, "pageToken"))
                        writer.uint32(/* id 3, wireType 2 =*/26).string(message.pageToken);
                    if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                        writer.uint32(/* id 4, wireType 2 =*/34).string(message.name);
                    return writer;
                };
    
                /**
                 * Encodes the specified ListOperationsRequest message, length delimited. Does not implicitly {@link google.longrunning.ListOperationsRequest.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.longrunning.ListOperationsRequest
                 * @static
                 * @param {google.longrunning.IListOperationsRequest} message ListOperationsRequest message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                ListOperationsRequest.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a ListOperationsRequest message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.longrunning.ListOperationsRequest
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.longrunning.ListOperationsRequest} ListOperationsRequest
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                ListOperationsRequest.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.longrunning.ListOperationsRequest();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 4: {
                                message.name = reader.string();
                                break;
                            }
                        case 1: {
                                message.filter = reader.string();
                                break;
                            }
                        case 2: {
                                message.pageSize = reader.int32();
                                break;
                            }
                        case 3: {
                                message.pageToken = reader.string();
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a ListOperationsRequest message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.longrunning.ListOperationsRequest
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.longrunning.ListOperationsRequest} ListOperationsRequest
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                ListOperationsRequest.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a ListOperationsRequest message.
                 * @function verify
                 * @memberof google.longrunning.ListOperationsRequest
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                ListOperationsRequest.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.name != null && message.hasOwnProperty("name"))
                        if (!$util.isString(message.name))
                            return "name: string expected";
                    if (message.filter != null && message.hasOwnProperty("filter"))
                        if (!$util.isString(message.filter))
                            return "filter: string expected";
                    if (message.pageSize != null && message.hasOwnProperty("pageSize"))
                        if (!$util.isInteger(message.pageSize))
                            return "pageSize: integer expected";
                    if (message.pageToken != null && message.hasOwnProperty("pageToken"))
                        if (!$util.isString(message.pageToken))
                            return "pageToken: string expected";
                    return null;
                };
    
                /**
                 * Creates a ListOperationsRequest message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.longrunning.ListOperationsRequest
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.longrunning.ListOperationsRequest} ListOperationsRequest
                 */
                ListOperationsRequest.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.longrunning.ListOperationsRequest)
                        return object;
                    var message = new $root.google.longrunning.ListOperationsRequest();
                    if (object.name != null)
                        message.name = String(object.name);
                    if (object.filter != null)
                        message.filter = String(object.filter);
                    if (object.pageSize != null)
                        message.pageSize = object.pageSize | 0;
                    if (object.pageToken != null)
                        message.pageToken = String(object.pageToken);
                    return message;
                };
    
                /**
                 * Creates a plain object from a ListOperationsRequest message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.longrunning.ListOperationsRequest
                 * @static
                 * @param {google.longrunning.ListOperationsRequest} message ListOperationsRequest
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                ListOperationsRequest.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.defaults) {
                        object.filter = "";
                        object.pageSize = 0;
                        object.pageToken = "";
                        object.name = "";
                    }
                    if (message.filter != null && message.hasOwnProperty("filter"))
                        object.filter = message.filter;
                    if (message.pageSize != null && message.hasOwnProperty("pageSize"))
                        object.pageSize = message.pageSize;
                    if (message.pageToken != null && message.hasOwnProperty("pageToken"))
                        object.pageToken = message.pageToken;
                    if (message.name != null && message.hasOwnProperty("name"))
                        object.name = message.name;
                    return object;
                };
    
                /**
                 * Converts this ListOperationsRequest to JSON.
                 * @function toJSON
                 * @memberof google.longrunning.ListOperationsRequest
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                ListOperationsRequest.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for ListOperationsRequest
                 * @function getTypeUrl
                 * @memberof google.longrunning.ListOperationsRequest
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                ListOperationsRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.longrunning.ListOperationsRequest";
                };
    
                return ListOperationsRequest;
            })();
    
            longrunning.ListOperationsResponse = (function() {
    
                /**
                 * Properties of a ListOperationsResponse.
                 * @memberof google.longrunning
                 * @interface IListOperationsResponse
                 * @property {Array.<google.longrunning.IOperation>|null} [operations] ListOperationsResponse operations
                 * @property {string|null} [nextPageToken] ListOperationsResponse nextPageToken
                 */
    
                /**
                 * Constructs a new ListOperationsResponse.
                 * @memberof google.longrunning
                 * @classdesc Represents a ListOperationsResponse.
                 * @implements IListOperationsResponse
                 * @constructor
                 * @param {google.longrunning.IListOperationsResponse=} [properties] Properties to set
                 */
                function ListOperationsResponse(properties) {
                    this.operations = [];
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * ListOperationsResponse operations.
                 * @member {Array.<google.longrunning.IOperation>} operations
                 * @memberof google.longrunning.ListOperationsResponse
                 * @instance
                 */
                ListOperationsResponse.prototype.operations = $util.emptyArray;
    
                /**
                 * ListOperationsResponse nextPageToken.
                 * @member {string} nextPageToken
                 * @memberof google.longrunning.ListOperationsResponse
                 * @instance
                 */
                ListOperationsResponse.prototype.nextPageToken = "";
    
                /**
                 * Creates a new ListOperationsResponse instance using the specified properties.
                 * @function create
                 * @memberof google.longrunning.ListOperationsResponse
                 * @static
                 * @param {google.longrunning.IListOperationsResponse=} [properties] Properties to set
                 * @returns {google.longrunning.ListOperationsResponse} ListOperationsResponse instance
                 */
                ListOperationsResponse.create = function create(properties) {
                    return new ListOperationsResponse(properties);
                };
    
                /**
                 * Encodes the specified ListOperationsResponse message. Does not implicitly {@link google.longrunning.ListOperationsResponse.verify|verify} messages.
                 * @function encode
                 * @memberof google.longrunning.ListOperationsResponse
                 * @static
                 * @param {google.longrunning.IListOperationsResponse} message ListOperationsResponse message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                ListOperationsResponse.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.operations != null && message.operations.length)
                        for (var i = 0; i < message.operations.length; ++i)
                            $root.google.longrunning.Operation.encode(message.operations[i], writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                    if (message.nextPageToken != null && Object.hasOwnProperty.call(message, "nextPageToken"))
                        writer.uint32(/* id 2, wireType 2 =*/18).string(message.nextPageToken);
                    return writer;
                };
    
                /**
                 * Encodes the specified ListOperationsResponse message, length delimited. Does not implicitly {@link google.longrunning.ListOperationsResponse.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.longrunning.ListOperationsResponse
                 * @static
                 * @param {google.longrunning.IListOperationsResponse} message ListOperationsResponse message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                ListOperationsResponse.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a ListOperationsResponse message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.longrunning.ListOperationsResponse
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.longrunning.ListOperationsResponse} ListOperationsResponse
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                ListOperationsResponse.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.longrunning.ListOperationsResponse();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1: {
                                if (!(message.operations && message.operations.length))
                                    message.operations = [];
                                message.operations.push($root.google.longrunning.Operation.decode(reader, reader.uint32()));
                                break;
                            }
                        case 2: {
                                message.nextPageToken = reader.string();
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a ListOperationsResponse message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.longrunning.ListOperationsResponse
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.longrunning.ListOperationsResponse} ListOperationsResponse
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                ListOperationsResponse.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a ListOperationsResponse message.
                 * @function verify
                 * @memberof google.longrunning.ListOperationsResponse
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                ListOperationsResponse.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.operations != null && message.hasOwnProperty("operations")) {
                        if (!Array.isArray(message.operations))
                            return "operations: array expected";
                        for (var i = 0; i < message.operations.length; ++i) {
                            var error = $root.google.longrunning.Operation.verify(message.operations[i]);
                            if (error)
                                return "operations." + error;
                        }
                    }
                    if (message.nextPageToken != null && message.hasOwnProperty("nextPageToken"))
                        if (!$util.isString(message.nextPageToken))
                            return "nextPageToken: string expected";
                    return null;
                };
    
                /**
                 * Creates a ListOperationsResponse message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.longrunning.ListOperationsResponse
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.longrunning.ListOperationsResponse} ListOperationsResponse
                 */
                ListOperationsResponse.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.longrunning.ListOperationsResponse)
                        return object;
                    var message = new $root.google.longrunning.ListOperationsResponse();
                    if (object.operations) {
                        if (!Array.isArray(object.operations))
                            throw TypeError(".google.longrunning.ListOperationsResponse.operations: array expected");
                        message.operations = [];
                        for (var i = 0; i < object.operations.length; ++i) {
                            if (typeof object.operations[i] !== "object")
                                throw TypeError(".google.longrunning.ListOperationsResponse.operations: object expected");
                            message.operations[i] = $root.google.longrunning.Operation.fromObject(object.operations[i]);
                        }
                    }
                    if (object.nextPageToken != null)
                        message.nextPageToken = String(object.nextPageToken);
                    return message;
                };
    
                /**
                 * Creates a plain object from a ListOperationsResponse message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.longrunning.ListOperationsResponse
                 * @static
                 * @param {google.longrunning.ListOperationsResponse} message ListOperationsResponse
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                ListOperationsResponse.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.arrays || options.defaults)
                        object.operations = [];
                    if (options.defaults)
                        object.nextPageToken = "";
                    if (message.operations && message.operations.length) {
                        object.operations = [];
                        for (var j = 0; j < message.operations.length; ++j)
                            object.operations[j] = $root.google.longrunning.Operation.toObject(message.operations[j], options);
                    }
                    if (message.nextPageToken != null && message.hasOwnProperty("nextPageToken"))
                        object.nextPageToken = message.nextPageToken;
                    return object;
                };
    
                /**
                 * Converts this ListOperationsResponse to JSON.
                 * @function toJSON
                 * @memberof google.longrunning.ListOperationsResponse
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                ListOperationsResponse.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for ListOperationsResponse
                 * @function getTypeUrl
                 * @memberof google.longrunning.ListOperationsResponse
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                ListOperationsResponse.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.longrunning.ListOperationsResponse";
                };
    
                return ListOperationsResponse;
            })();
    
            longrunning.CancelOperationRequest = (function() {
    
                /**
                 * Properties of a CancelOperationRequest.
                 * @memberof google.longrunning
                 * @interface ICancelOperationRequest
                 * @property {string|null} [name] CancelOperationRequest name
                 */
    
                /**
                 * Constructs a new CancelOperationRequest.
                 * @memberof google.longrunning
                 * @classdesc Represents a CancelOperationRequest.
                 * @implements ICancelOperationRequest
                 * @constructor
                 * @param {google.longrunning.ICancelOperationRequest=} [properties] Properties to set
                 */
                function CancelOperationRequest(properties) {
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * CancelOperationRequest name.
                 * @member {string} name
                 * @memberof google.longrunning.CancelOperationRequest
                 * @instance
                 */
                CancelOperationRequest.prototype.name = "";
    
                /**
                 * Creates a new CancelOperationRequest instance using the specified properties.
                 * @function create
                 * @memberof google.longrunning.CancelOperationRequest
                 * @static
                 * @param {google.longrunning.ICancelOperationRequest=} [properties] Properties to set
                 * @returns {google.longrunning.CancelOperationRequest} CancelOperationRequest instance
                 */
                CancelOperationRequest.create = function create(properties) {
                    return new CancelOperationRequest(properties);
                };
    
                /**
                 * Encodes the specified CancelOperationRequest message. Does not implicitly {@link google.longrunning.CancelOperationRequest.verify|verify} messages.
                 * @function encode
                 * @memberof google.longrunning.CancelOperationRequest
                 * @static
                 * @param {google.longrunning.ICancelOperationRequest} message CancelOperationRequest message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                CancelOperationRequest.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                        writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                    return writer;
                };
    
                /**
                 * Encodes the specified CancelOperationRequest message, length delimited. Does not implicitly {@link google.longrunning.CancelOperationRequest.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.longrunning.CancelOperationRequest
                 * @static
                 * @param {google.longrunning.ICancelOperationRequest} message CancelOperationRequest message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                CancelOperationRequest.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a CancelOperationRequest message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.longrunning.CancelOperationRequest
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.longrunning.CancelOperationRequest} CancelOperationRequest
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                CancelOperationRequest.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.longrunning.CancelOperationRequest();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1: {
                                message.name = reader.string();
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a CancelOperationRequest message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.longrunning.CancelOperationRequest
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.longrunning.CancelOperationRequest} CancelOperationRequest
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                CancelOperationRequest.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a CancelOperationRequest message.
                 * @function verify
                 * @memberof google.longrunning.CancelOperationRequest
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                CancelOperationRequest.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.name != null && message.hasOwnProperty("name"))
                        if (!$util.isString(message.name))
                            return "name: string expected";
                    return null;
                };
    
                /**
                 * Creates a CancelOperationRequest message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.longrunning.CancelOperationRequest
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.longrunning.CancelOperationRequest} CancelOperationRequest
                 */
                CancelOperationRequest.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.longrunning.CancelOperationRequest)
                        return object;
                    var message = new $root.google.longrunning.CancelOperationRequest();
                    if (object.name != null)
                        message.name = String(object.name);
                    return message;
                };
    
                /**
                 * Creates a plain object from a CancelOperationRequest message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.longrunning.CancelOperationRequest
                 * @static
                 * @param {google.longrunning.CancelOperationRequest} message CancelOperationRequest
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                CancelOperationRequest.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.defaults)
                        object.name = "";
                    if (message.name != null && message.hasOwnProperty("name"))
                        object.name = message.name;
                    return object;
                };
    
                /**
                 * Converts this CancelOperationRequest to JSON.
                 * @function toJSON
                 * @memberof google.longrunning.CancelOperationRequest
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                CancelOperationRequest.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for CancelOperationRequest
                 * @function getTypeUrl
                 * @memberof google.longrunning.CancelOperationRequest
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                CancelOperationRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.longrunning.CancelOperationRequest";
                };
    
                return CancelOperationRequest;
            })();
    
            longrunning.DeleteOperationRequest = (function() {
    
                /**
                 * Properties of a DeleteOperationRequest.
                 * @memberof google.longrunning
                 * @interface IDeleteOperationRequest
                 * @property {string|null} [name] DeleteOperationRequest name
                 */
    
                /**
                 * Constructs a new DeleteOperationRequest.
                 * @memberof google.longrunning
                 * @classdesc Represents a DeleteOperationRequest.
                 * @implements IDeleteOperationRequest
                 * @constructor
                 * @param {google.longrunning.IDeleteOperationRequest=} [properties] Properties to set
                 */
                function DeleteOperationRequest(properties) {
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * DeleteOperationRequest name.
                 * @member {string} name
                 * @memberof google.longrunning.DeleteOperationRequest
                 * @instance
                 */
                DeleteOperationRequest.prototype.name = "";
    
                /**
                 * Creates a new DeleteOperationRequest instance using the specified properties.
                 * @function create
                 * @memberof google.longrunning.DeleteOperationRequest
                 * @static
                 * @param {google.longrunning.IDeleteOperationRequest=} [properties] Properties to set
                 * @returns {google.longrunning.DeleteOperationRequest} DeleteOperationRequest instance
                 */
                DeleteOperationRequest.create = function create(properties) {
                    return new DeleteOperationRequest(properties);
                };
    
                /**
                 * Encodes the specified DeleteOperationRequest message. Does not implicitly {@link google.longrunning.DeleteOperationRequest.verify|verify} messages.
                 * @function encode
                 * @memberof google.longrunning.DeleteOperationRequest
                 * @static
                 * @param {google.longrunning.IDeleteOperationRequest} message DeleteOperationRequest message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                DeleteOperationRequest.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                        writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                    return writer;
                };
    
                /**
                 * Encodes the specified DeleteOperationRequest message, length delimited. Does not implicitly {@link google.longrunning.DeleteOperationRequest.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.longrunning.DeleteOperationRequest
                 * @static
                 * @param {google.longrunning.IDeleteOperationRequest} message DeleteOperationRequest message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                DeleteOperationRequest.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a DeleteOperationRequest message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.longrunning.DeleteOperationRequest
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.longrunning.DeleteOperationRequest} DeleteOperationRequest
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                DeleteOperationRequest.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.longrunning.DeleteOperationRequest();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1: {
                                message.name = reader.string();
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a DeleteOperationRequest message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.longrunning.DeleteOperationRequest
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.longrunning.DeleteOperationRequest} DeleteOperationRequest
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                DeleteOperationRequest.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a DeleteOperationRequest message.
                 * @function verify
                 * @memberof google.longrunning.DeleteOperationRequest
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                DeleteOperationRequest.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.name != null && message.hasOwnProperty("name"))
                        if (!$util.isString(message.name))
                            return "name: string expected";
                    return null;
                };
    
                /**
                 * Creates a DeleteOperationRequest message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.longrunning.DeleteOperationRequest
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.longrunning.DeleteOperationRequest} DeleteOperationRequest
                 */
                DeleteOperationRequest.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.longrunning.DeleteOperationRequest)
                        return object;
                    var message = new $root.google.longrunning.DeleteOperationRequest();
                    if (object.name != null)
                        message.name = String(object.name);
                    return message;
                };
    
                /**
                 * Creates a plain object from a DeleteOperationRequest message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.longrunning.DeleteOperationRequest
                 * @static
                 * @param {google.longrunning.DeleteOperationRequest} message DeleteOperationRequest
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                DeleteOperationRequest.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.defaults)
                        object.name = "";
                    if (message.name != null && message.hasOwnProperty("name"))
                        object.name = message.name;
                    return object;
                };
    
                /**
                 * Converts this DeleteOperationRequest to JSON.
                 * @function toJSON
                 * @memberof google.longrunning.DeleteOperationRequest
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                DeleteOperationRequest.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for DeleteOperationRequest
                 * @function getTypeUrl
                 * @memberof google.longrunning.DeleteOperationRequest
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                DeleteOperationRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.longrunning.DeleteOperationRequest";
                };
    
                return DeleteOperationRequest;
            })();
    
            longrunning.WaitOperationRequest = (function() {
    
                /**
                 * Properties of a WaitOperationRequest.
                 * @memberof google.longrunning
                 * @interface IWaitOperationRequest
                 * @property {string|null} [name] WaitOperationRequest name
                 * @property {google.protobuf.IDuration|null} [timeout] WaitOperationRequest timeout
                 */
    
                /**
                 * Constructs a new WaitOperationRequest.
                 * @memberof google.longrunning
                 * @classdesc Represents a WaitOperationRequest.
                 * @implements IWaitOperationRequest
                 * @constructor
                 * @param {google.longrunning.IWaitOperationRequest=} [properties] Properties to set
                 */
                function WaitOperationRequest(properties) {
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * WaitOperationRequest name.
                 * @member {string} name
                 * @memberof google.longrunning.WaitOperationRequest
                 * @instance
                 */
                WaitOperationRequest.prototype.name = "";
    
                /**
                 * WaitOperationRequest timeout.
                 * @member {google.protobuf.IDuration|null|undefined} timeout
                 * @memberof google.longrunning.WaitOperationRequest
                 * @instance
                 */
                WaitOperationRequest.prototype.timeout = null;
    
                /**
                 * Creates a new WaitOperationRequest instance using the specified properties.
                 * @function create
                 * @memberof google.longrunning.WaitOperationRequest
                 * @static
                 * @param {google.longrunning.IWaitOperationRequest=} [properties] Properties to set
                 * @returns {google.longrunning.WaitOperationRequest} WaitOperationRequest instance
                 */
                WaitOperationRequest.create = function create(properties) {
                    return new WaitOperationRequest(properties);
                };
    
                /**
                 * Encodes the specified WaitOperationRequest message. Does not implicitly {@link google.longrunning.WaitOperationRequest.verify|verify} messages.
                 * @function encode
                 * @memberof google.longrunning.WaitOperationRequest
                 * @static
                 * @param {google.longrunning.IWaitOperationRequest} message WaitOperationRequest message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                WaitOperationRequest.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                        writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                    if (message.timeout != null && Object.hasOwnProperty.call(message, "timeout"))
                        $root.google.protobuf.Duration.encode(message.timeout, writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                    return writer;
                };
    
                /**
                 * Encodes the specified WaitOperationRequest message, length delimited. Does not implicitly {@link google.longrunning.WaitOperationRequest.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.longrunning.WaitOperationRequest
                 * @static
                 * @param {google.longrunning.IWaitOperationRequest} message WaitOperationRequest message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                WaitOperationRequest.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a WaitOperationRequest message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.longrunning.WaitOperationRequest
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.longrunning.WaitOperationRequest} WaitOperationRequest
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                WaitOperationRequest.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.longrunning.WaitOperationRequest();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1: {
                                message.name = reader.string();
                                break;
                            }
                        case 2: {
                                message.timeout = $root.google.protobuf.Duration.decode(reader, reader.uint32());
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a WaitOperationRequest message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.longrunning.WaitOperationRequest
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.longrunning.WaitOperationRequest} WaitOperationRequest
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                WaitOperationRequest.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a WaitOperationRequest message.
                 * @function verify
                 * @memberof google.longrunning.WaitOperationRequest
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                WaitOperationRequest.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.name != null && message.hasOwnProperty("name"))
                        if (!$util.isString(message.name))
                            return "name: string expected";
                    if (message.timeout != null && message.hasOwnProperty("timeout")) {
                        var error = $root.google.protobuf.Duration.verify(message.timeout);
                        if (error)
                            return "timeout." + error;
                    }
                    return null;
                };
    
                /**
                 * Creates a WaitOperationRequest message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.longrunning.WaitOperationRequest
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.longrunning.WaitOperationRequest} WaitOperationRequest
                 */
                WaitOperationRequest.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.longrunning.WaitOperationRequest)
                        return object;
                    var message = new $root.google.longrunning.WaitOperationRequest();
                    if (object.name != null)
                        message.name = String(object.name);
                    if (object.timeout != null) {
                        if (typeof object.timeout !== "object")
                            throw TypeError(".google.longrunning.WaitOperationRequest.timeout: object expected");
                        message.timeout = $root.google.protobuf.Duration.fromObject(object.timeout);
                    }
                    return message;
                };
    
                /**
                 * Creates a plain object from a WaitOperationRequest message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.longrunning.WaitOperationRequest
                 * @static
                 * @param {google.longrunning.WaitOperationRequest} message WaitOperationRequest
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                WaitOperationRequest.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.defaults) {
                        object.name = "";
                        object.timeout = null;
                    }
                    if (message.name != null && message.hasOwnProperty("name"))
                        object.name = message.name;
                    if (message.timeout != null && message.hasOwnProperty("timeout"))
                        object.timeout = $root.google.protobuf.Duration.toObject(message.timeout, options);
                    return object;
                };
    
                /**
                 * Converts this WaitOperationRequest to JSON.
                 * @function toJSON
                 * @memberof google.longrunning.WaitOperationRequest
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                WaitOperationRequest.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for WaitOperationRequest
                 * @function getTypeUrl
                 * @memberof google.longrunning.WaitOperationRequest
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                WaitOperationRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.longrunning.WaitOperationRequest";
                };
    
                return WaitOperationRequest;
            })();
    
            longrunning.OperationInfo = (function() {
    
                /**
                 * Properties of an OperationInfo.
                 * @memberof google.longrunning
                 * @interface IOperationInfo
                 * @property {string|null} [responseType] OperationInfo responseType
                 * @property {string|null} [metadataType] OperationInfo metadataType
                 */
    
                /**
                 * Constructs a new OperationInfo.
                 * @memberof google.longrunning
                 * @classdesc Represents an OperationInfo.
                 * @implements IOperationInfo
                 * @constructor
                 * @param {google.longrunning.IOperationInfo=} [properties] Properties to set
                 */
                function OperationInfo(properties) {
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * OperationInfo responseType.
                 * @member {string} responseType
                 * @memberof google.longrunning.OperationInfo
                 * @instance
                 */
                OperationInfo.prototype.responseType = "";
    
                /**
                 * OperationInfo metadataType.
                 * @member {string} metadataType
                 * @memberof google.longrunning.OperationInfo
                 * @instance
                 */
                OperationInfo.prototype.metadataType = "";
    
                /**
                 * Creates a new OperationInfo instance using the specified properties.
                 * @function create
                 * @memberof google.longrunning.OperationInfo
                 * @static
                 * @param {google.longrunning.IOperationInfo=} [properties] Properties to set
                 * @returns {google.longrunning.OperationInfo} OperationInfo instance
                 */
                OperationInfo.create = function create(properties) {
                    return new OperationInfo(properties);
                };
    
                /**
                 * Encodes the specified OperationInfo message. Does not implicitly {@link google.longrunning.OperationInfo.verify|verify} messages.
                 * @function encode
                 * @memberof google.longrunning.OperationInfo
                 * @static
                 * @param {google.longrunning.IOperationInfo} message OperationInfo message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                OperationInfo.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.responseType != null && Object.hasOwnProperty.call(message, "responseType"))
                        writer.uint32(/* id 1, wireType 2 =*/10).string(message.responseType);
                    if (message.metadataType != null && Object.hasOwnProperty.call(message, "metadataType"))
                        writer.uint32(/* id 2, wireType 2 =*/18).string(message.metadataType);
                    return writer;
                };
    
                /**
                 * Encodes the specified OperationInfo message, length delimited. Does not implicitly {@link google.longrunning.OperationInfo.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.longrunning.OperationInfo
                 * @static
                 * @param {google.longrunning.IOperationInfo} message OperationInfo message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                OperationInfo.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes an OperationInfo message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.longrunning.OperationInfo
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.longrunning.OperationInfo} OperationInfo
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                OperationInfo.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.longrunning.OperationInfo();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1: {
                                message.responseType = reader.string();
                                break;
                            }
                        case 2: {
                                message.metadataType = reader.string();
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes an OperationInfo message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.longrunning.OperationInfo
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.longrunning.OperationInfo} OperationInfo
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                OperationInfo.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies an OperationInfo message.
                 * @function verify
                 * @memberof google.longrunning.OperationInfo
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                OperationInfo.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.responseType != null && message.hasOwnProperty("responseType"))
                        if (!$util.isString(message.responseType))
                            return "responseType: string expected";
                    if (message.metadataType != null && message.hasOwnProperty("metadataType"))
                        if (!$util.isString(message.metadataType))
                            return "metadataType: string expected";
                    return null;
                };
    
                /**
                 * Creates an OperationInfo message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.longrunning.OperationInfo
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.longrunning.OperationInfo} OperationInfo
                 */
                OperationInfo.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.longrunning.OperationInfo)
                        return object;
                    var message = new $root.google.longrunning.OperationInfo();
                    if (object.responseType != null)
                        message.responseType = String(object.responseType);
                    if (object.metadataType != null)
                        message.metadataType = String(object.metadataType);
                    return message;
                };
    
                /**
                 * Creates a plain object from an OperationInfo message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.longrunning.OperationInfo
                 * @static
                 * @param {google.longrunning.OperationInfo} message OperationInfo
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                OperationInfo.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.defaults) {
                        object.responseType = "";
                        object.metadataType = "";
                    }
                    if (message.responseType != null && message.hasOwnProperty("responseType"))
                        object.responseType = message.responseType;
                    if (message.metadataType != null && message.hasOwnProperty("metadataType"))
                        object.metadataType = message.metadataType;
                    return object;
                };
    
                /**
                 * Converts this OperationInfo to JSON.
                 * @function toJSON
                 * @memberof google.longrunning.OperationInfo
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                OperationInfo.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for OperationInfo
                 * @function getTypeUrl
                 * @memberof google.longrunning.OperationInfo
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                OperationInfo.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.longrunning.OperationInfo";
                };
    
                return OperationInfo;
            })();
    
            return longrunning;
        })();
    
        google.rpc = (function() {
    
            /**
             * Namespace rpc.
             * @memberof google
             * @namespace
             */
            var rpc = {};
    
            rpc.Status = (function() {
    
                /**
                 * Properties of a Status.
                 * @memberof google.rpc
                 * @interface IStatus
                 * @property {number|null} [code] Status code
                 * @property {string|null} [message] Status message
                 * @property {Array.<google.protobuf.IAny>|null} [details] Status details
                 */
    
                /**
                 * Constructs a new Status.
                 * @memberof google.rpc
                 * @classdesc Represents a Status.
                 * @implements IStatus
                 * @constructor
                 * @param {google.rpc.IStatus=} [properties] Properties to set
                 */
                function Status(properties) {
                    this.details = [];
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * Status code.
                 * @member {number} code
                 * @memberof google.rpc.Status
                 * @instance
                 */
                Status.prototype.code = 0;
    
                /**
                 * Status message.
                 * @member {string} message
                 * @memberof google.rpc.Status
                 * @instance
                 */
                Status.prototype.message = "";
    
                /**
                 * Status details.
                 * @member {Array.<google.protobuf.IAny>} details
                 * @memberof google.rpc.Status
                 * @instance
                 */
                Status.prototype.details = $util.emptyArray;
    
                /**
                 * Creates a new Status instance using the specified properties.
                 * @function create
                 * @memberof google.rpc.Status
                 * @static
                 * @param {google.rpc.IStatus=} [properties] Properties to set
                 * @returns {google.rpc.Status} Status instance
                 */
                Status.create = function create(properties) {
                    return new Status(properties);
                };
    
                /**
                 * Encodes the specified Status message. Does not implicitly {@link google.rpc.Status.verify|verify} messages.
                 * @function encode
                 * @memberof google.rpc.Status
                 * @static
                 * @param {google.rpc.IStatus} message Status message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                Status.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.code != null && Object.hasOwnProperty.call(message, "code"))
                        writer.uint32(/* id 1, wireType 0 =*/8).int32(message.code);
                    if (message.message != null && Object.hasOwnProperty.call(message, "message"))
                        writer.uint32(/* id 2, wireType 2 =*/18).string(message.message);
                    if (message.details != null && message.details.length)
                        for (var i = 0; i < message.details.length; ++i)
                            $root.google.protobuf.Any.encode(message.details[i], writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();
                    return writer;
                };
    
                /**
                 * Encodes the specified Status message, length delimited. Does not implicitly {@link google.rpc.Status.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.rpc.Status
                 * @static
                 * @param {google.rpc.IStatus} message Status message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                Status.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a Status message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.rpc.Status
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.rpc.Status} Status
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                Status.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.rpc.Status();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1: {
                                message.code = reader.int32();
                                break;
                            }
                        case 2: {
                                message.message = reader.string();
                                break;
                            }
                        case 3: {
                                if (!(message.details && message.details.length))
                                    message.details = [];
                                message.details.push($root.google.protobuf.Any.decode(reader, reader.uint32()));
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a Status message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.rpc.Status
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.rpc.Status} Status
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                Status.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a Status message.
                 * @function verify
                 * @memberof google.rpc.Status
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                Status.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.code != null && message.hasOwnProperty("code"))
                        if (!$util.isInteger(message.code))
                            return "code: integer expected";
                    if (message.message != null && message.hasOwnProperty("message"))
                        if (!$util.isString(message.message))
                            return "message: string expected";
                    if (message.details != null && message.hasOwnProperty("details")) {
                        if (!Array.isArray(message.details))
                            return "details: array expected";
                        for (var i = 0; i < message.details.length; ++i) {
                            var error = $root.google.protobuf.Any.verify(message.details[i]);
                            if (error)
                                return "details." + error;
                        }
                    }
                    return null;
                };
    
                /**
                 * Creates a Status message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.rpc.Status
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.rpc.Status} Status
                 */
                Status.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.rpc.Status)
                        return object;
                    var message = new $root.google.rpc.Status();
                    if (object.code != null)
                        message.code = object.code | 0;
                    if (object.message != null)
                        message.message = String(object.message);
                    if (object.details) {
                        if (!Array.isArray(object.details))
                            throw TypeError(".google.rpc.Status.details: array expected");
                        message.details = [];
                        for (var i = 0; i < object.details.length; ++i) {
                            if (typeof object.details[i] !== "object")
                                throw TypeError(".google.rpc.Status.details: object expected");
                            message.details[i] = $root.google.protobuf.Any.fromObject(object.details[i]);
                        }
                    }
                    return message;
                };
    
                /**
                 * Creates a plain object from a Status message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.rpc.Status
                 * @static
                 * @param {google.rpc.Status} message Status
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                Status.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.arrays || options.defaults)
                        object.details = [];
                    if (options.defaults) {
                        object.code = 0;
                        object.message = "";
                    }
                    if (message.code != null && message.hasOwnProperty("code"))
                        object.code = message.code;
                    if (message.message != null && message.hasOwnProperty("message"))
                        object.message = message.message;
                    if (message.details && message.details.length) {
                        object.details = [];
                        for (var j = 0; j < message.details.length; ++j)
                            object.details[j] = $root.google.protobuf.Any.toObject(message.details[j], options);
                    }
                    return object;
                };
    
                /**
                 * Converts this Status to JSON.
                 * @function toJSON
                 * @memberof google.rpc.Status
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                Status.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for Status
                 * @function getTypeUrl
                 * @memberof google.rpc.Status
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                Status.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.rpc.Status";
                };
    
                return Status;
            })();
    
            return rpc;
        })();
    
        return google;
    })();

    return $root;
});
