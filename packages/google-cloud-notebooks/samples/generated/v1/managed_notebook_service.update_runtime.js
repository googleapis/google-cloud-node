// Copyright 2023 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     https://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
// ** This file is automatically generated by gapic-generator-typescript. **
// ** https://github.com/googleapis/gapic-generator-typescript **
// ** All changes to this file may be overwritten. **



'use strict';

function main(runtime, updateMask) {
  // [START notebooks_v1_generated_ManagedNotebookService_UpdateRuntime_async]
  /**
   * This snippet has been automatically generated and should be regarded as a code template only.
   * It will require modifications to work.
   * It may require correct/in-range values for request initialization.
   * TODO(developer): Uncomment these variables before running the sample.
   */
  /**
   *  Required. The Runtime to be updated.
   */
  // const runtime = {}
  /**
   *  Required. Specifies the path, relative to `Runtime`, of
   *  the field to update. For example, to change the software configuration
   *  kernels, the `update_mask` parameter would be
   *  specified as `software_config.kernels`,
   *  and the `PATCH` request body would specify the new value, as follows:
   *      {
   *        "software_config":{
   *          "kernels": {
   *             'repository':
   *             'gcr.io/deeplearning-platform-release/pytorch-gpu', 'tag':
   *             'latest' },
   *          }
   *      }
   *  Currently, only the following fields can be updated:
   *  - `software_config.kernels`
   *  - `software_config.post_startup_script`
   *  - `software_config.custom_gpu_driver_path`
   *  - `software_config.idle_shutdown`
   *  - `software_config.idle_shutdown_timeout`
   *  - `software_config.disable_terminal`
   */
  // const updateMask = {}
  /**
   *  Idempotent request UUID.
   */
  // const requestId = 'abc123'

  // Imports the Notebooks library
  const {ManagedNotebookServiceClient} = require('@google-cloud/notebooks').v1;

  // Instantiates a client
  const notebooksClient = new ManagedNotebookServiceClient();

  async function callUpdateRuntime() {
    // Construct request
    const request = {
      runtime,
      updateMask,
    };

    // Run request
    const [operation] = await notebooksClient.updateRuntime(request);
    const [response] = await operation.promise();
    console.log(response);
  }

  callUpdateRuntime();
  // [END notebooks_v1_generated_ManagedNotebookService_UpdateRuntime_async]
}

process.on('unhandledRejection', err => {
  console.error(err.message);
  process.exitCode = 1;
});
main(...process.argv.slice(2));
