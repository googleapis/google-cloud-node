// Copyright 2023 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     https://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
// ** This file is automatically generated by synthtool. **
// ** https://github.com/googleapis/synthtool **
// ** All changes to this file may be overwritten. **

import * as v1 from './v1';
import * as v1small from './v1small';

const AcceleratorTypesClient = v1.AcceleratorTypesClient;
type AcceleratorTypesClient = v1.AcceleratorTypesClient;
const AddressesClient = v1.AddressesClient;
type AddressesClient = v1.AddressesClient;
const AutoscalersClient = v1.AutoscalersClient;
type AutoscalersClient = v1.AutoscalersClient;
const BackendBucketsClient = v1.BackendBucketsClient;
type BackendBucketsClient = v1.BackendBucketsClient;
const BackendServicesClient = v1.BackendServicesClient;
type BackendServicesClient = v1.BackendServicesClient;
const DisksClient = v1.DisksClient;
type DisksClient = v1.DisksClient;
const DiskTypesClient = v1.DiskTypesClient;
type DiskTypesClient = v1.DiskTypesClient;
const ExternalVpnGatewaysClient = v1.ExternalVpnGatewaysClient;
type ExternalVpnGatewaysClient = v1.ExternalVpnGatewaysClient;
const FirewallPoliciesClient = v1.FirewallPoliciesClient;
type FirewallPoliciesClient = v1.FirewallPoliciesClient;
const FirewallsClient = v1.FirewallsClient;
type FirewallsClient = v1.FirewallsClient;
const ForwardingRulesClient = v1.ForwardingRulesClient;
type ForwardingRulesClient = v1.ForwardingRulesClient;
const GlobalAddressesClient = v1.GlobalAddressesClient;
type GlobalAddressesClient = v1.GlobalAddressesClient;
const GlobalForwardingRulesClient = v1.GlobalForwardingRulesClient;
type GlobalForwardingRulesClient = v1.GlobalForwardingRulesClient;
const GlobalNetworkEndpointGroupsClient = v1.GlobalNetworkEndpointGroupsClient;
type GlobalNetworkEndpointGroupsClient = v1.GlobalNetworkEndpointGroupsClient;
const GlobalOperationsClient = v1.GlobalOperationsClient;
type GlobalOperationsClient = v1.GlobalOperationsClient;
const GlobalOrganizationOperationsClient =
  v1.GlobalOrganizationOperationsClient;
type GlobalOrganizationOperationsClient = v1.GlobalOrganizationOperationsClient;
const GlobalPublicDelegatedPrefixesClient =
  v1.GlobalPublicDelegatedPrefixesClient;
type GlobalPublicDelegatedPrefixesClient =
  v1.GlobalPublicDelegatedPrefixesClient;
const HealthChecksClient = v1.HealthChecksClient;
type HealthChecksClient = v1.HealthChecksClient;
const ImageFamilyViewsClient = v1.ImageFamilyViewsClient;
type ImageFamilyViewsClient = v1.ImageFamilyViewsClient;
const ImagesClient = v1.ImagesClient;
type ImagesClient = v1.ImagesClient;
const InstanceGroupManagersClient = v1.InstanceGroupManagersClient;
type InstanceGroupManagersClient = v1.InstanceGroupManagersClient;
const InstanceGroupsClient = v1.InstanceGroupsClient;
type InstanceGroupsClient = v1.InstanceGroupsClient;
const InstancesClient = v1.InstancesClient;
type InstancesClient = v1.InstancesClient;
const InstanceTemplatesClient = v1.InstanceTemplatesClient;
type InstanceTemplatesClient = v1.InstanceTemplatesClient;
const InterconnectAttachmentsClient = v1.InterconnectAttachmentsClient;
type InterconnectAttachmentsClient = v1.InterconnectAttachmentsClient;
const InterconnectLocationsClient = v1.InterconnectLocationsClient;
type InterconnectLocationsClient = v1.InterconnectLocationsClient;
const InterconnectsClient = v1.InterconnectsClient;
type InterconnectsClient = v1.InterconnectsClient;
const LicenseCodesClient = v1.LicenseCodesClient;
type LicenseCodesClient = v1.LicenseCodesClient;
const LicensesClient = v1.LicensesClient;
type LicensesClient = v1.LicensesClient;
const MachineImagesClient = v1.MachineImagesClient;
type MachineImagesClient = v1.MachineImagesClient;
const MachineTypesClient = v1.MachineTypesClient;
type MachineTypesClient = v1.MachineTypesClient;
const NetworkAttachmentsClient = v1.NetworkAttachmentsClient;
type NetworkAttachmentsClient = v1.NetworkAttachmentsClient;
const NetworkEdgeSecurityServicesClient = v1.NetworkEdgeSecurityServicesClient;
type NetworkEdgeSecurityServicesClient = v1.NetworkEdgeSecurityServicesClient;
const NetworkEndpointGroupsClient = v1.NetworkEndpointGroupsClient;
type NetworkEndpointGroupsClient = v1.NetworkEndpointGroupsClient;
const NetworkFirewallPoliciesClient = v1.NetworkFirewallPoliciesClient;
type NetworkFirewallPoliciesClient = v1.NetworkFirewallPoliciesClient;
const NetworksClient = v1.NetworksClient;
type NetworksClient = v1.NetworksClient;
const NodeGroupsClient = v1.NodeGroupsClient;
type NodeGroupsClient = v1.NodeGroupsClient;
const NodeTemplatesClient = v1.NodeTemplatesClient;
type NodeTemplatesClient = v1.NodeTemplatesClient;
const NodeTypesClient = v1.NodeTypesClient;
type NodeTypesClient = v1.NodeTypesClient;
const PacketMirroringsClient = v1.PacketMirroringsClient;
type PacketMirroringsClient = v1.PacketMirroringsClient;
const ProjectsClient = v1.ProjectsClient;
type ProjectsClient = v1.ProjectsClient;
const PublicAdvertisedPrefixesClient = v1.PublicAdvertisedPrefixesClient;
type PublicAdvertisedPrefixesClient = v1.PublicAdvertisedPrefixesClient;
const PublicDelegatedPrefixesClient = v1.PublicDelegatedPrefixesClient;
type PublicDelegatedPrefixesClient = v1.PublicDelegatedPrefixesClient;
const RegionAutoscalersClient = v1.RegionAutoscalersClient;
type RegionAutoscalersClient = v1.RegionAutoscalersClient;
const RegionBackendServicesClient = v1.RegionBackendServicesClient;
type RegionBackendServicesClient = v1.RegionBackendServicesClient;
const RegionCommitmentsClient = v1.RegionCommitmentsClient;
type RegionCommitmentsClient = v1.RegionCommitmentsClient;
const RegionDisksClient = v1.RegionDisksClient;
type RegionDisksClient = v1.RegionDisksClient;
const RegionDiskTypesClient = v1.RegionDiskTypesClient;
type RegionDiskTypesClient = v1.RegionDiskTypesClient;
const RegionHealthChecksClient = v1.RegionHealthChecksClient;
type RegionHealthChecksClient = v1.RegionHealthChecksClient;
const RegionHealthCheckServicesClient = v1.RegionHealthCheckServicesClient;
type RegionHealthCheckServicesClient = v1.RegionHealthCheckServicesClient;
const RegionInstanceGroupManagersClient = v1.RegionInstanceGroupManagersClient;
type RegionInstanceGroupManagersClient = v1.RegionInstanceGroupManagersClient;
const RegionInstanceGroupsClient = v1.RegionInstanceGroupsClient;
type RegionInstanceGroupsClient = v1.RegionInstanceGroupsClient;
const RegionInstancesClient = v1.RegionInstancesClient;
type RegionInstancesClient = v1.RegionInstancesClient;
const RegionNetworkEndpointGroupsClient = v1.RegionNetworkEndpointGroupsClient;
type RegionNetworkEndpointGroupsClient = v1.RegionNetworkEndpointGroupsClient;
const RegionNetworkFirewallPoliciesClient =
  v1.RegionNetworkFirewallPoliciesClient;
type RegionNetworkFirewallPoliciesClient =
  v1.RegionNetworkFirewallPoliciesClient;
const RegionNotificationEndpointsClient = v1.RegionNotificationEndpointsClient;
type RegionNotificationEndpointsClient = v1.RegionNotificationEndpointsClient;
const RegionOperationsClient = v1.RegionOperationsClient;
type RegionOperationsClient = v1.RegionOperationsClient;
const RegionsClient = v1.RegionsClient;
type RegionsClient = v1.RegionsClient;
const RegionSecurityPoliciesClient = v1.RegionSecurityPoliciesClient;
type RegionSecurityPoliciesClient = v1.RegionSecurityPoliciesClient;
const RegionSslCertificatesClient = v1.RegionSslCertificatesClient;
type RegionSslCertificatesClient = v1.RegionSslCertificatesClient;
const RegionSslPoliciesClient = v1.RegionSslPoliciesClient;
type RegionSslPoliciesClient = v1.RegionSslPoliciesClient;
const RegionTargetHttpProxiesClient = v1.RegionTargetHttpProxiesClient;
type RegionTargetHttpProxiesClient = v1.RegionTargetHttpProxiesClient;
const RegionTargetHttpsProxiesClient = v1.RegionTargetHttpsProxiesClient;
type RegionTargetHttpsProxiesClient = v1.RegionTargetHttpsProxiesClient;
const RegionTargetTcpProxiesClient = v1.RegionTargetTcpProxiesClient;
type RegionTargetTcpProxiesClient = v1.RegionTargetTcpProxiesClient;
const RegionUrlMapsClient = v1.RegionUrlMapsClient;
type RegionUrlMapsClient = v1.RegionUrlMapsClient;
const ReservationsClient = v1.ReservationsClient;
type ReservationsClient = v1.ReservationsClient;
const ResourcePoliciesClient = v1.ResourcePoliciesClient;
type ResourcePoliciesClient = v1.ResourcePoliciesClient;
const RoutersClient = v1.RoutersClient;
type RoutersClient = v1.RoutersClient;
const RoutesClient = v1.RoutesClient;
type RoutesClient = v1.RoutesClient;
const SecurityPoliciesClient = v1.SecurityPoliciesClient;
type SecurityPoliciesClient = v1.SecurityPoliciesClient;
const ServiceAttachmentsClient = v1.ServiceAttachmentsClient;
type ServiceAttachmentsClient = v1.ServiceAttachmentsClient;
const SnapshotsClient = v1.SnapshotsClient;
type SnapshotsClient = v1.SnapshotsClient;
const SslCertificatesClient = v1.SslCertificatesClient;
type SslCertificatesClient = v1.SslCertificatesClient;
const SslPoliciesClient = v1.SslPoliciesClient;
type SslPoliciesClient = v1.SslPoliciesClient;
const SubnetworksClient = v1.SubnetworksClient;
type SubnetworksClient = v1.SubnetworksClient;
const TargetGrpcProxiesClient = v1.TargetGrpcProxiesClient;
type TargetGrpcProxiesClient = v1.TargetGrpcProxiesClient;
const TargetHttpProxiesClient = v1.TargetHttpProxiesClient;
type TargetHttpProxiesClient = v1.TargetHttpProxiesClient;
const TargetHttpsProxiesClient = v1.TargetHttpsProxiesClient;
type TargetHttpsProxiesClient = v1.TargetHttpsProxiesClient;
const TargetInstancesClient = v1.TargetInstancesClient;
type TargetInstancesClient = v1.TargetInstancesClient;
const TargetPoolsClient = v1.TargetPoolsClient;
type TargetPoolsClient = v1.TargetPoolsClient;
const TargetSslProxiesClient = v1.TargetSslProxiesClient;
type TargetSslProxiesClient = v1.TargetSslProxiesClient;
const TargetTcpProxiesClient = v1.TargetTcpProxiesClient;
type TargetTcpProxiesClient = v1.TargetTcpProxiesClient;
const TargetVpnGatewaysClient = v1.TargetVpnGatewaysClient;
type TargetVpnGatewaysClient = v1.TargetVpnGatewaysClient;
const UrlMapsClient = v1.UrlMapsClient;
type UrlMapsClient = v1.UrlMapsClient;
const VpnGatewaysClient = v1.VpnGatewaysClient;
type VpnGatewaysClient = v1.VpnGatewaysClient;
const VpnTunnelsClient = v1.VpnTunnelsClient;
type VpnTunnelsClient = v1.VpnTunnelsClient;
const ZoneOperationsClient = v1.ZoneOperationsClient;
type ZoneOperationsClient = v1.ZoneOperationsClient;
const ZonesClient = v1.ZonesClient;
type ZonesClient = v1.ZonesClient;

export {
  v1,
  v1small,
  AcceleratorTypesClient,
  AddressesClient,
  AutoscalersClient,
  BackendBucketsClient,
  BackendServicesClient,
  DisksClient,
  DiskTypesClient,
  ExternalVpnGatewaysClient,
  FirewallPoliciesClient,
  FirewallsClient,
  ForwardingRulesClient,
  GlobalAddressesClient,
  GlobalForwardingRulesClient,
  GlobalNetworkEndpointGroupsClient,
  GlobalOperationsClient,
  GlobalOrganizationOperationsClient,
  GlobalPublicDelegatedPrefixesClient,
  HealthChecksClient,
  ImageFamilyViewsClient,
  ImagesClient,
  InstanceGroupManagersClient,
  InstanceGroupsClient,
  InstancesClient,
  InstanceTemplatesClient,
  InterconnectAttachmentsClient,
  InterconnectLocationsClient,
  InterconnectsClient,
  LicenseCodesClient,
  LicensesClient,
  MachineImagesClient,
  MachineTypesClient,
  NetworkAttachmentsClient,
  NetworkEdgeSecurityServicesClient,
  NetworkEndpointGroupsClient,
  NetworkFirewallPoliciesClient,
  NetworksClient,
  NodeGroupsClient,
  NodeTemplatesClient,
  NodeTypesClient,
  PacketMirroringsClient,
  ProjectsClient,
  PublicAdvertisedPrefixesClient,
  PublicDelegatedPrefixesClient,
  RegionAutoscalersClient,
  RegionBackendServicesClient,
  RegionCommitmentsClient,
  RegionDisksClient,
  RegionDiskTypesClient,
  RegionHealthChecksClient,
  RegionHealthCheckServicesClient,
  RegionInstanceGroupManagersClient,
  RegionInstanceGroupsClient,
  RegionInstancesClient,
  RegionNetworkEndpointGroupsClient,
  RegionNetworkFirewallPoliciesClient,
  RegionNotificationEndpointsClient,
  RegionOperationsClient,
  RegionsClient,
  RegionSecurityPoliciesClient,
  RegionSslCertificatesClient,
  RegionSslPoliciesClient,
  RegionTargetHttpProxiesClient,
  RegionTargetHttpsProxiesClient,
  RegionTargetTcpProxiesClient,
  RegionUrlMapsClient,
  ReservationsClient,
  ResourcePoliciesClient,
  RoutersClient,
  RoutesClient,
  SecurityPoliciesClient,
  ServiceAttachmentsClient,
  SnapshotsClient,
  SslCertificatesClient,
  SslPoliciesClient,
  SubnetworksClient,
  TargetGrpcProxiesClient,
  TargetHttpProxiesClient,
  TargetHttpsProxiesClient,
  TargetInstancesClient,
  TargetPoolsClient,
  TargetSslProxiesClient,
  TargetTcpProxiesClient,
  TargetVpnGatewaysClient,
  UrlMapsClient,
  VpnGatewaysClient,
  VpnTunnelsClient,
  ZoneOperationsClient,
  ZonesClient,
};
export default {
  v1,
  v1small,
  AcceleratorTypesClient,
  AddressesClient,
  AutoscalersClient,
  BackendBucketsClient,
  BackendServicesClient,
  DisksClient,
  DiskTypesClient,
  ExternalVpnGatewaysClient,
  FirewallPoliciesClient,
  FirewallsClient,
  ForwardingRulesClient,
  GlobalAddressesClient,
  GlobalForwardingRulesClient,
  GlobalNetworkEndpointGroupsClient,
  GlobalOperationsClient,
  GlobalOrganizationOperationsClient,
  GlobalPublicDelegatedPrefixesClient,
  HealthChecksClient,
  ImageFamilyViewsClient,
  ImagesClient,
  InstanceGroupManagersClient,
  InstanceGroupsClient,
  InstancesClient,
  InstanceTemplatesClient,
  InterconnectAttachmentsClient,
  InterconnectLocationsClient,
  InterconnectsClient,
  LicenseCodesClient,
  LicensesClient,
  MachineImagesClient,
  MachineTypesClient,
  NetworkAttachmentsClient,
  NetworkEdgeSecurityServicesClient,
  NetworkEndpointGroupsClient,
  NetworkFirewallPoliciesClient,
  NetworksClient,
  NodeGroupsClient,
  NodeTemplatesClient,
  NodeTypesClient,
  PacketMirroringsClient,
  ProjectsClient,
  PublicAdvertisedPrefixesClient,
  PublicDelegatedPrefixesClient,
  RegionAutoscalersClient,
  RegionBackendServicesClient,
  RegionCommitmentsClient,
  RegionDisksClient,
  RegionDiskTypesClient,
  RegionHealthChecksClient,
  RegionHealthCheckServicesClient,
  RegionInstanceGroupManagersClient,
  RegionInstanceGroupsClient,
  RegionInstancesClient,
  RegionNetworkEndpointGroupsClient,
  RegionNetworkFirewallPoliciesClient,
  RegionNotificationEndpointsClient,
  RegionOperationsClient,
  RegionsClient,
  RegionSecurityPoliciesClient,
  RegionSslCertificatesClient,
  RegionSslPoliciesClient,
  RegionTargetHttpProxiesClient,
  RegionTargetHttpsProxiesClient,
  RegionTargetTcpProxiesClient,
  RegionUrlMapsClient,
  ReservationsClient,
  ResourcePoliciesClient,
  RoutersClient,
  RoutesClient,
  SecurityPoliciesClient,
  ServiceAttachmentsClient,
  SnapshotsClient,
  SslCertificatesClient,
  SslPoliciesClient,
  SubnetworksClient,
  TargetGrpcProxiesClient,
  TargetHttpProxiesClient,
  TargetHttpsProxiesClient,
  TargetInstancesClient,
  TargetPoolsClient,
  TargetSslProxiesClient,
  TargetTcpProxiesClient,
  TargetVpnGatewaysClient,
  UrlMapsClient,
  VpnGatewaysClient,
  VpnTunnelsClient,
  ZoneOperationsClient,
  ZonesClient,
};
import * as protos from '../protos/protos';
export {protos};
