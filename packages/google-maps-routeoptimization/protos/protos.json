{
  "nested": {
    "google": {
      "nested": {
        "maps": {
          "nested": {
            "routeoptimization": {
              "nested": {
                "v1": {
                  "options": {
                    "csharp_namespace": "Google.Maps.RouteOptimization.V1",
                    "go_package": "cloud.google.com/go/maps/routeoptimization/apiv1/routeoptimizationpb;routeoptimizationpb",
                    "java_multiple_files": true,
                    "java_outer_classname": "RouteOptimizationServiceProto",
                    "java_package": "com.google.maps.routeoptimization.v1",
                    "php_namespace": "Google\\Maps\\RouteOptimization\\V1",
                    "ruby_package": "Google::Maps::RouteOptimization::V1"
                  },
                  "nested": {
                    "RouteOptimization": {
                      "options": {
                        "(google.api.default_host)": "routeoptimization.googleapis.com",
                        "(google.api.oauth_scopes)": "https://www.googleapis.com/auth/cloud-platform"
                      },
                      "methods": {
                        "OptimizeTours": {
                          "requestType": "OptimizeToursRequest",
                          "responseType": "OptimizeToursResponse",
                          "options": {
                            "(google.api.http).post": "/v1/{parent=projects/*/locations/*}:optimizeTours",
                            "(google.api.http).body": "*",
                            "(google.api.http).additional_bindings.post": "/v1/{parent=projects/*}:optimizeTours",
                            "(google.api.http).additional_bindings.body": "*"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "post": "/v1/{parent=projects/*/locations/*}:optimizeTours",
                                "body": "*",
                                "additional_bindings": {
                                  "post": "/v1/{parent=projects/*}:optimizeTours",
                                  "body": "*"
                                }
                              }
                            }
                          ]
                        },
                        "BatchOptimizeTours": {
                          "requestType": "BatchOptimizeToursRequest",
                          "responseType": "google.longrunning.Operation",
                          "options": {
                            "(google.api.http).post": "/v1/{parent=projects/*/locations/*}:batchOptimizeTours",
                            "(google.api.http).body": "*",
                            "(google.api.http).additional_bindings.post": "/v1/{parent=projects/*}:batchOptimizeTours",
                            "(google.api.http).additional_bindings.body": "*",
                            "(google.longrunning.operation_info).response_type": "BatchOptimizeToursResponse",
                            "(google.longrunning.operation_info).metadata_type": "BatchOptimizeToursMetadata"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "post": "/v1/{parent=projects/*/locations/*}:batchOptimizeTours",
                                "body": "*",
                                "additional_bindings": {
                                  "post": "/v1/{parent=projects/*}:batchOptimizeTours",
                                  "body": "*"
                                }
                              }
                            },
                            {
                              "(google.longrunning.operation_info)": {
                                "response_type": "BatchOptimizeToursResponse",
                                "metadata_type": "BatchOptimizeToursMetadata"
                              }
                            }
                          ]
                        }
                      }
                    },
                    "BatchOptimizeToursRequest": {
                      "fields": {
                        "parent": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        },
                        "modelConfigs": {
                          "rule": "repeated",
                          "type": "AsyncModelConfig",
                          "id": 2,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        }
                      },
                      "nested": {
                        "AsyncModelConfig": {
                          "fields": {
                            "displayName": {
                              "type": "string",
                              "id": 1,
                              "options": {
                                "(google.api.field_behavior)": "OPTIONAL"
                              }
                            },
                            "inputConfig": {
                              "type": "InputConfig",
                              "id": 2,
                              "options": {
                                "(google.api.field_behavior)": "REQUIRED"
                              }
                            },
                            "outputConfig": {
                              "type": "OutputConfig",
                              "id": 3,
                              "options": {
                                "(google.api.field_behavior)": "REQUIRED"
                              }
                            }
                          }
                        }
                      }
                    },
                    "BatchOptimizeToursResponse": {
                      "fields": {}
                    },
                    "BatchOptimizeToursMetadata": {
                      "fields": {}
                    },
                    "OptimizeToursRequest": {
                      "oneofs": {
                        "_geodesicMetersPerSecond": {
                          "oneof": [
                            "geodesicMetersPerSecond"
                          ]
                        },
                        "_maxValidationErrors": {
                          "oneof": [
                            "maxValidationErrors"
                          ]
                        }
                      },
                      "fields": {
                        "parent": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        },
                        "timeout": {
                          "type": "google.protobuf.Duration",
                          "id": 2
                        },
                        "model": {
                          "type": "ShipmentModel",
                          "id": 3
                        },
                        "solvingMode": {
                          "type": "SolvingMode",
                          "id": 4
                        },
                        "searchMode": {
                          "type": "SearchMode",
                          "id": 6
                        },
                        "injectedFirstSolutionRoutes": {
                          "rule": "repeated",
                          "type": "ShipmentRoute",
                          "id": 7
                        },
                        "injectedSolutionConstraint": {
                          "type": "InjectedSolutionConstraint",
                          "id": 8
                        },
                        "refreshDetailsRoutes": {
                          "rule": "repeated",
                          "type": "ShipmentRoute",
                          "id": 9
                        },
                        "interpretInjectedSolutionsUsingLabels": {
                          "type": "bool",
                          "id": 10
                        },
                        "considerRoadTraffic": {
                          "type": "bool",
                          "id": 11
                        },
                        "populatePolylines": {
                          "type": "bool",
                          "id": 12
                        },
                        "populateTransitionPolylines": {
                          "type": "bool",
                          "id": 13
                        },
                        "allowLargeDeadlineDespiteInterruptionRisk": {
                          "type": "bool",
                          "id": 14
                        },
                        "useGeodesicDistances": {
                          "type": "bool",
                          "id": 15
                        },
                        "geodesicMetersPerSecond": {
                          "type": "double",
                          "id": 16,
                          "options": {
                            "proto3_optional": true
                          }
                        },
                        "maxValidationErrors": {
                          "type": "int32",
                          "id": 5,
                          "options": {
                            "proto3_optional": true
                          }
                        },
                        "label": {
                          "type": "string",
                          "id": 17
                        }
                      },
                      "nested": {
                        "SolvingMode": {
                          "values": {
                            "DEFAULT_SOLVE": 0,
                            "VALIDATE_ONLY": 1,
                            "DETECT_SOME_INFEASIBLE_SHIPMENTS": 2
                          }
                        },
                        "SearchMode": {
                          "values": {
                            "SEARCH_MODE_UNSPECIFIED": 0,
                            "RETURN_FAST": 1,
                            "CONSUME_ALL_AVAILABLE_TIME": 2
                          }
                        }
                      }
                    },
                    "OptimizeToursResponse": {
                      "fields": {
                        "routes": {
                          "rule": "repeated",
                          "type": "ShipmentRoute",
                          "id": 1
                        },
                        "requestLabel": {
                          "type": "string",
                          "id": 3
                        },
                        "skippedShipments": {
                          "rule": "repeated",
                          "type": "SkippedShipment",
                          "id": 4
                        },
                        "validationErrors": {
                          "rule": "repeated",
                          "type": "OptimizeToursValidationError",
                          "id": 5
                        },
                        "metrics": {
                          "type": "Metrics",
                          "id": 6
                        }
                      },
                      "nested": {
                        "Metrics": {
                          "fields": {
                            "aggregatedRouteMetrics": {
                              "type": "AggregatedMetrics",
                              "id": 1
                            },
                            "skippedMandatoryShipmentCount": {
                              "type": "int32",
                              "id": 2
                            },
                            "usedVehicleCount": {
                              "type": "int32",
                              "id": 3
                            },
                            "earliestVehicleStartTime": {
                              "type": "google.protobuf.Timestamp",
                              "id": 4
                            },
                            "latestVehicleEndTime": {
                              "type": "google.protobuf.Timestamp",
                              "id": 5
                            },
                            "costs": {
                              "keyType": "string",
                              "type": "double",
                              "id": 10
                            },
                            "totalCost": {
                              "type": "double",
                              "id": 6
                            }
                          }
                        }
                      }
                    },
                    "ShipmentModel": {
                      "oneofs": {
                        "_maxActiveVehicles": {
                          "oneof": [
                            "maxActiveVehicles"
                          ]
                        }
                      },
                      "fields": {
                        "shipments": {
                          "rule": "repeated",
                          "type": "Shipment",
                          "id": 1
                        },
                        "vehicles": {
                          "rule": "repeated",
                          "type": "Vehicle",
                          "id": 2
                        },
                        "maxActiveVehicles": {
                          "type": "int32",
                          "id": 4,
                          "options": {
                            "proto3_optional": true
                          }
                        },
                        "globalStartTime": {
                          "type": "google.protobuf.Timestamp",
                          "id": 5
                        },
                        "globalEndTime": {
                          "type": "google.protobuf.Timestamp",
                          "id": 6
                        },
                        "globalDurationCostPerHour": {
                          "type": "double",
                          "id": 7
                        },
                        "durationDistanceMatrices": {
                          "rule": "repeated",
                          "type": "DurationDistanceMatrix",
                          "id": 8
                        },
                        "durationDistanceMatrixSrcTags": {
                          "rule": "repeated",
                          "type": "string",
                          "id": 9
                        },
                        "durationDistanceMatrixDstTags": {
                          "rule": "repeated",
                          "type": "string",
                          "id": 10
                        },
                        "transitionAttributes": {
                          "rule": "repeated",
                          "type": "TransitionAttributes",
                          "id": 11
                        },
                        "shipmentTypeIncompatibilities": {
                          "rule": "repeated",
                          "type": "ShipmentTypeIncompatibility",
                          "id": 12
                        },
                        "shipmentTypeRequirements": {
                          "rule": "repeated",
                          "type": "ShipmentTypeRequirement",
                          "id": 13
                        },
                        "precedenceRules": {
                          "rule": "repeated",
                          "type": "PrecedenceRule",
                          "id": 14
                        }
                      },
                      "nested": {
                        "DurationDistanceMatrix": {
                          "fields": {
                            "rows": {
                              "rule": "repeated",
                              "type": "Row",
                              "id": 1
                            },
                            "vehicleStartTag": {
                              "type": "string",
                              "id": 2
                            }
                          },
                          "nested": {
                            "Row": {
                              "fields": {
                                "durations": {
                                  "rule": "repeated",
                                  "type": "google.protobuf.Duration",
                                  "id": 1
                                },
                                "meters": {
                                  "rule": "repeated",
                                  "type": "double",
                                  "id": 2
                                }
                              }
                            }
                          }
                        },
                        "PrecedenceRule": {
                          "oneofs": {
                            "_firstIndex": {
                              "oneof": [
                                "firstIndex"
                              ]
                            },
                            "_secondIndex": {
                              "oneof": [
                                "secondIndex"
                              ]
                            }
                          },
                          "fields": {
                            "firstIndex": {
                              "type": "int32",
                              "id": 1,
                              "options": {
                                "proto3_optional": true
                              }
                            },
                            "firstIsDelivery": {
                              "type": "bool",
                              "id": 3
                            },
                            "secondIndex": {
                              "type": "int32",
                              "id": 2,
                              "options": {
                                "proto3_optional": true
                              }
                            },
                            "secondIsDelivery": {
                              "type": "bool",
                              "id": 4
                            },
                            "offsetDuration": {
                              "type": "google.protobuf.Duration",
                              "id": 5
                            }
                          }
                        }
                      }
                    },
                    "Shipment": {
                      "oneofs": {
                        "_penaltyCost": {
                          "oneof": [
                            "penaltyCost"
                          ]
                        },
                        "_pickupToDeliveryRelativeDetourLimit": {
                          "oneof": [
                            "pickupToDeliveryRelativeDetourLimit"
                          ]
                        }
                      },
                      "fields": {
                        "displayName": {
                          "type": "string",
                          "id": 16
                        },
                        "pickups": {
                          "rule": "repeated",
                          "type": "VisitRequest",
                          "id": 1
                        },
                        "deliveries": {
                          "rule": "repeated",
                          "type": "VisitRequest",
                          "id": 2
                        },
                        "loadDemands": {
                          "keyType": "string",
                          "type": "Load",
                          "id": 14
                        },
                        "penaltyCost": {
                          "type": "double",
                          "id": 4,
                          "options": {
                            "proto3_optional": true
                          }
                        },
                        "allowedVehicleIndices": {
                          "rule": "repeated",
                          "type": "int32",
                          "id": 5
                        },
                        "costsPerVehicle": {
                          "rule": "repeated",
                          "type": "double",
                          "id": 6
                        },
                        "costsPerVehicleIndices": {
                          "rule": "repeated",
                          "type": "int32",
                          "id": 7
                        },
                        "pickupToDeliveryRelativeDetourLimit": {
                          "type": "double",
                          "id": 8,
                          "options": {
                            "proto3_optional": true
                          }
                        },
                        "pickupToDeliveryAbsoluteDetourLimit": {
                          "type": "google.protobuf.Duration",
                          "id": 9
                        },
                        "pickupToDeliveryTimeLimit": {
                          "type": "google.protobuf.Duration",
                          "id": 10
                        },
                        "shipmentType": {
                          "type": "string",
                          "id": 11
                        },
                        "label": {
                          "type": "string",
                          "id": 12
                        },
                        "ignore": {
                          "type": "bool",
                          "id": 13
                        }
                      },
                      "nested": {
                        "VisitRequest": {
                          "fields": {
                            "arrivalLocation": {
                              "type": "google.type.LatLng",
                              "id": 1
                            },
                            "arrivalWaypoint": {
                              "type": "Waypoint",
                              "id": 2
                            },
                            "departureLocation": {
                              "type": "google.type.LatLng",
                              "id": 3
                            },
                            "departureWaypoint": {
                              "type": "Waypoint",
                              "id": 4
                            },
                            "tags": {
                              "rule": "repeated",
                              "type": "string",
                              "id": 5
                            },
                            "timeWindows": {
                              "rule": "repeated",
                              "type": "TimeWindow",
                              "id": 6
                            },
                            "duration": {
                              "type": "google.protobuf.Duration",
                              "id": 7
                            },
                            "cost": {
                              "type": "double",
                              "id": 8
                            },
                            "loadDemands": {
                              "keyType": "string",
                              "type": "Load",
                              "id": 12
                            },
                            "visitTypes": {
                              "rule": "repeated",
                              "type": "string",
                              "id": 10
                            },
                            "label": {
                              "type": "string",
                              "id": 11
                            }
                          }
                        },
                        "Load": {
                          "fields": {
                            "amount": {
                              "type": "int64",
                              "id": 2
                            }
                          }
                        }
                      }
                    },
                    "ShipmentTypeIncompatibility": {
                      "fields": {
                        "types": {
                          "rule": "repeated",
                          "type": "string",
                          "id": 1
                        },
                        "incompatibilityMode": {
                          "type": "IncompatibilityMode",
                          "id": 2
                        }
                      },
                      "nested": {
                        "IncompatibilityMode": {
                          "values": {
                            "INCOMPATIBILITY_MODE_UNSPECIFIED": 0,
                            "NOT_PERFORMED_BY_SAME_VEHICLE": 1,
                            "NOT_IN_SAME_VEHICLE_SIMULTANEOUSLY": 2
                          }
                        }
                      }
                    },
                    "ShipmentTypeRequirement": {
                      "fields": {
                        "requiredShipmentTypeAlternatives": {
                          "rule": "repeated",
                          "type": "string",
                          "id": 1
                        },
                        "dependentShipmentTypes": {
                          "rule": "repeated",
                          "type": "string",
                          "id": 2
                        },
                        "requirementMode": {
                          "type": "RequirementMode",
                          "id": 3
                        }
                      },
                      "nested": {
                        "RequirementMode": {
                          "values": {
                            "REQUIREMENT_MODE_UNSPECIFIED": 0,
                            "PERFORMED_BY_SAME_VEHICLE": 1,
                            "IN_SAME_VEHICLE_AT_PICKUP_TIME": 2,
                            "IN_SAME_VEHICLE_AT_DELIVERY_TIME": 3
                          }
                        }
                      }
                    },
                    "Vehicle": {
                      "oneofs": {
                        "_travelDurationMultiple": {
                          "oneof": [
                            "travelDurationMultiple"
                          ]
                        }
                      },
                      "fields": {
                        "displayName": {
                          "type": "string",
                          "id": 32
                        },
                        "travelMode": {
                          "type": "TravelMode",
                          "id": 1
                        },
                        "startLocation": {
                          "type": "google.type.LatLng",
                          "id": 3
                        },
                        "startWaypoint": {
                          "type": "Waypoint",
                          "id": 4
                        },
                        "endLocation": {
                          "type": "google.type.LatLng",
                          "id": 5
                        },
                        "endWaypoint": {
                          "type": "Waypoint",
                          "id": 6
                        },
                        "startTags": {
                          "rule": "repeated",
                          "type": "string",
                          "id": 7
                        },
                        "endTags": {
                          "rule": "repeated",
                          "type": "string",
                          "id": 8
                        },
                        "startTimeWindows": {
                          "rule": "repeated",
                          "type": "TimeWindow",
                          "id": 9
                        },
                        "endTimeWindows": {
                          "rule": "repeated",
                          "type": "TimeWindow",
                          "id": 10
                        },
                        "travelDurationMultiple": {
                          "type": "double",
                          "id": 11,
                          "options": {
                            "proto3_optional": true
                          }
                        },
                        "unloadingPolicy": {
                          "type": "UnloadingPolicy",
                          "id": 12
                        },
                        "loadLimits": {
                          "keyType": "string",
                          "type": "LoadLimit",
                          "id": 30
                        },
                        "costPerHour": {
                          "type": "double",
                          "id": 16
                        },
                        "costPerTraveledHour": {
                          "type": "double",
                          "id": 17
                        },
                        "costPerKilometer": {
                          "type": "double",
                          "id": 18
                        },
                        "fixedCost": {
                          "type": "double",
                          "id": 19
                        },
                        "usedIfRouteIsEmpty": {
                          "type": "bool",
                          "id": 20
                        },
                        "routeDurationLimit": {
                          "type": "DurationLimit",
                          "id": 21
                        },
                        "travelDurationLimit": {
                          "type": "DurationLimit",
                          "id": 22
                        },
                        "routeDistanceLimit": {
                          "type": "DistanceLimit",
                          "id": 23
                        },
                        "extraVisitDurationForVisitType": {
                          "keyType": "string",
                          "type": "google.protobuf.Duration",
                          "id": 24
                        },
                        "breakRule": {
                          "type": "BreakRule",
                          "id": 25
                        },
                        "label": {
                          "type": "string",
                          "id": 27
                        },
                        "ignore": {
                          "type": "bool",
                          "id": 28
                        }
                      },
                      "nested": {
                        "TravelMode": {
                          "values": {
                            "TRAVEL_MODE_UNSPECIFIED": 0,
                            "DRIVING": 1,
                            "WALKING": 2
                          }
                        },
                        "UnloadingPolicy": {
                          "values": {
                            "UNLOADING_POLICY_UNSPECIFIED": 0,
                            "LAST_IN_FIRST_OUT": 1,
                            "FIRST_IN_FIRST_OUT": 2
                          }
                        },
                        "LoadLimit": {
                          "oneofs": {
                            "_maxLoad": {
                              "oneof": [
                                "maxLoad"
                              ]
                            }
                          },
                          "fields": {
                            "maxLoad": {
                              "type": "int64",
                              "id": 1,
                              "options": {
                                "proto3_optional": true
                              }
                            },
                            "softMaxLoad": {
                              "type": "int64",
                              "id": 2
                            },
                            "costPerUnitAboveSoftMax": {
                              "type": "double",
                              "id": 3
                            },
                            "startLoadInterval": {
                              "type": "Interval",
                              "id": 4
                            },
                            "endLoadInterval": {
                              "type": "Interval",
                              "id": 5
                            }
                          },
                          "nested": {
                            "Interval": {
                              "oneofs": {
                                "_max": {
                                  "oneof": [
                                    "max"
                                  ]
                                }
                              },
                              "fields": {
                                "min": {
                                  "type": "int64",
                                  "id": 1
                                },
                                "max": {
                                  "type": "int64",
                                  "id": 2,
                                  "options": {
                                    "proto3_optional": true
                                  }
                                }
                              }
                            }
                          }
                        },
                        "DurationLimit": {
                          "oneofs": {
                            "_costPerHourAfterSoftMax": {
                              "oneof": [
                                "costPerHourAfterSoftMax"
                              ]
                            },
                            "_costPerSquareHourAfterQuadraticSoftMax": {
                              "oneof": [
                                "costPerSquareHourAfterQuadraticSoftMax"
                              ]
                            }
                          },
                          "fields": {
                            "maxDuration": {
                              "type": "google.protobuf.Duration",
                              "id": 1
                            },
                            "softMaxDuration": {
                              "type": "google.protobuf.Duration",
                              "id": 2
                            },
                            "costPerHourAfterSoftMax": {
                              "type": "double",
                              "id": 3,
                              "options": {
                                "proto3_optional": true
                              }
                            },
                            "quadraticSoftMaxDuration": {
                              "type": "google.protobuf.Duration",
                              "id": 4
                            },
                            "costPerSquareHourAfterQuadraticSoftMax": {
                              "type": "double",
                              "id": 5,
                              "options": {
                                "proto3_optional": true
                              }
                            }
                          }
                        }
                      }
                    },
                    "TimeWindow": {
                      "oneofs": {
                        "_costPerHourBeforeSoftStartTime": {
                          "oneof": [
                            "costPerHourBeforeSoftStartTime"
                          ]
                        },
                        "_costPerHourAfterSoftEndTime": {
                          "oneof": [
                            "costPerHourAfterSoftEndTime"
                          ]
                        }
                      },
                      "fields": {
                        "startTime": {
                          "type": "google.protobuf.Timestamp",
                          "id": 1
                        },
                        "endTime": {
                          "type": "google.protobuf.Timestamp",
                          "id": 2
                        },
                        "softStartTime": {
                          "type": "google.protobuf.Timestamp",
                          "id": 3
                        },
                        "softEndTime": {
                          "type": "google.protobuf.Timestamp",
                          "id": 4
                        },
                        "costPerHourBeforeSoftStartTime": {
                          "type": "double",
                          "id": 5,
                          "options": {
                            "proto3_optional": true
                          }
                        },
                        "costPerHourAfterSoftEndTime": {
                          "type": "double",
                          "id": 6,
                          "options": {
                            "proto3_optional": true
                          }
                        }
                      }
                    },
                    "DistanceLimit": {
                      "oneofs": {
                        "_maxMeters": {
                          "oneof": [
                            "maxMeters"
                          ]
                        },
                        "_softMaxMeters": {
                          "oneof": [
                            "softMaxMeters"
                          ]
                        },
                        "_costPerKilometerAboveSoftMax": {
                          "oneof": [
                            "costPerKilometerAboveSoftMax"
                          ]
                        }
                      },
                      "fields": {
                        "maxMeters": {
                          "type": "int64",
                          "id": 1,
                          "options": {
                            "proto3_optional": true
                          }
                        },
                        "softMaxMeters": {
                          "type": "int64",
                          "id": 2,
                          "options": {
                            "proto3_optional": true
                          }
                        },
                        "costPerKilometerAboveSoftMax": {
                          "type": "double",
                          "id": 3,
                          "options": {
                            "proto3_optional": true
                          }
                        }
                      }
                    },
                    "TransitionAttributes": {
                      "fields": {
                        "srcTag": {
                          "type": "string",
                          "id": 1
                        },
                        "excludedSrcTag": {
                          "type": "string",
                          "id": 2
                        },
                        "dstTag": {
                          "type": "string",
                          "id": 3
                        },
                        "excludedDstTag": {
                          "type": "string",
                          "id": 4
                        },
                        "cost": {
                          "type": "double",
                          "id": 5
                        },
                        "costPerKilometer": {
                          "type": "double",
                          "id": 6
                        },
                        "distanceLimit": {
                          "type": "DistanceLimit",
                          "id": 7
                        },
                        "delay": {
                          "type": "google.protobuf.Duration",
                          "id": 8
                        }
                      }
                    },
                    "Waypoint": {
                      "oneofs": {
                        "locationType": {
                          "oneof": [
                            "location",
                            "placeId"
                          ]
                        }
                      },
                      "fields": {
                        "location": {
                          "type": "Location",
                          "id": 1
                        },
                        "placeId": {
                          "type": "string",
                          "id": 2
                        },
                        "sideOfRoad": {
                          "type": "bool",
                          "id": 3,
                          "options": {
                            "(google.api.field_behavior)": "OPTIONAL"
                          }
                        }
                      }
                    },
                    "Location": {
                      "oneofs": {
                        "_heading": {
                          "oneof": [
                            "heading"
                          ]
                        }
                      },
                      "fields": {
                        "latLng": {
                          "type": "google.type.LatLng",
                          "id": 1
                        },
                        "heading": {
                          "type": "int32",
                          "id": 2,
                          "options": {
                            "proto3_optional": true
                          }
                        }
                      }
                    },
                    "BreakRule": {
                      "fields": {
                        "breakRequests": {
                          "rule": "repeated",
                          "type": "BreakRequest",
                          "id": 1
                        },
                        "frequencyConstraints": {
                          "rule": "repeated",
                          "type": "FrequencyConstraint",
                          "id": 2
                        }
                      },
                      "nested": {
                        "BreakRequest": {
                          "fields": {
                            "earliestStartTime": {
                              "type": "google.protobuf.Timestamp",
                              "id": 1,
                              "options": {
                                "(google.api.field_behavior)": "REQUIRED"
                              }
                            },
                            "latestStartTime": {
                              "type": "google.protobuf.Timestamp",
                              "id": 2,
                              "options": {
                                "(google.api.field_behavior)": "REQUIRED"
                              }
                            },
                            "minDuration": {
                              "type": "google.protobuf.Duration",
                              "id": 3,
                              "options": {
                                "(google.api.field_behavior)": "REQUIRED"
                              }
                            }
                          }
                        },
                        "FrequencyConstraint": {
                          "fields": {
                            "minBreakDuration": {
                              "type": "google.protobuf.Duration",
                              "id": 1,
                              "options": {
                                "(google.api.field_behavior)": "REQUIRED"
                              }
                            },
                            "maxInterBreakDuration": {
                              "type": "google.protobuf.Duration",
                              "id": 2,
                              "options": {
                                "(google.api.field_behavior)": "REQUIRED"
                              }
                            }
                          }
                        }
                      }
                    },
                    "ShipmentRoute": {
                      "fields": {
                        "vehicleIndex": {
                          "type": "int32",
                          "id": 1
                        },
                        "vehicleLabel": {
                          "type": "string",
                          "id": 2
                        },
                        "vehicleStartTime": {
                          "type": "google.protobuf.Timestamp",
                          "id": 5
                        },
                        "vehicleEndTime": {
                          "type": "google.protobuf.Timestamp",
                          "id": 6
                        },
                        "visits": {
                          "rule": "repeated",
                          "type": "Visit",
                          "id": 7
                        },
                        "transitions": {
                          "rule": "repeated",
                          "type": "Transition",
                          "id": 8
                        },
                        "hasTrafficInfeasibilities": {
                          "type": "bool",
                          "id": 9
                        },
                        "routePolyline": {
                          "type": "EncodedPolyline",
                          "id": 10
                        },
                        "breaks": {
                          "rule": "repeated",
                          "type": "Break",
                          "id": 11
                        },
                        "metrics": {
                          "type": "AggregatedMetrics",
                          "id": 12
                        },
                        "routeCosts": {
                          "keyType": "string",
                          "type": "double",
                          "id": 17
                        },
                        "routeTotalCost": {
                          "type": "double",
                          "id": 18
                        }
                      },
                      "nested": {
                        "Visit": {
                          "fields": {
                            "shipmentIndex": {
                              "type": "int32",
                              "id": 1
                            },
                            "isPickup": {
                              "type": "bool",
                              "id": 2
                            },
                            "visitRequestIndex": {
                              "type": "int32",
                              "id": 3
                            },
                            "startTime": {
                              "type": "google.protobuf.Timestamp",
                              "id": 4
                            },
                            "loadDemands": {
                              "keyType": "string",
                              "type": "Shipment.Load",
                              "id": 11
                            },
                            "detour": {
                              "type": "google.protobuf.Duration",
                              "id": 6
                            },
                            "shipmentLabel": {
                              "type": "string",
                              "id": 7
                            },
                            "visitLabel": {
                              "type": "string",
                              "id": 8
                            }
                          }
                        },
                        "Transition": {
                          "fields": {
                            "travelDuration": {
                              "type": "google.protobuf.Duration",
                              "id": 1
                            },
                            "travelDistanceMeters": {
                              "type": "double",
                              "id": 2
                            },
                            "trafficInfoUnavailable": {
                              "type": "bool",
                              "id": 3
                            },
                            "delayDuration": {
                              "type": "google.protobuf.Duration",
                              "id": 4
                            },
                            "breakDuration": {
                              "type": "google.protobuf.Duration",
                              "id": 5
                            },
                            "waitDuration": {
                              "type": "google.protobuf.Duration",
                              "id": 6
                            },
                            "totalDuration": {
                              "type": "google.protobuf.Duration",
                              "id": 7
                            },
                            "startTime": {
                              "type": "google.protobuf.Timestamp",
                              "id": 8
                            },
                            "routePolyline": {
                              "type": "EncodedPolyline",
                              "id": 9
                            },
                            "vehicleLoads": {
                              "keyType": "string",
                              "type": "VehicleLoad",
                              "id": 11
                            }
                          }
                        },
                        "VehicleLoad": {
                          "fields": {
                            "amount": {
                              "type": "int64",
                              "id": 1
                            }
                          }
                        },
                        "EncodedPolyline": {
                          "fields": {
                            "points": {
                              "type": "string",
                              "id": 1
                            }
                          }
                        },
                        "Break": {
                          "fields": {
                            "startTime": {
                              "type": "google.protobuf.Timestamp",
                              "id": 1
                            },
                            "duration": {
                              "type": "google.protobuf.Duration",
                              "id": 2
                            }
                          }
                        }
                      }
                    },
                    "SkippedShipment": {
                      "fields": {
                        "index": {
                          "type": "int32",
                          "id": 1
                        },
                        "label": {
                          "type": "string",
                          "id": 2
                        },
                        "reasons": {
                          "rule": "repeated",
                          "type": "Reason",
                          "id": 3
                        }
                      },
                      "nested": {
                        "Reason": {
                          "oneofs": {
                            "_exampleVehicleIndex": {
                              "oneof": [
                                "exampleVehicleIndex"
                              ]
                            }
                          },
                          "fields": {
                            "code": {
                              "type": "Code",
                              "id": 1
                            },
                            "exampleVehicleIndex": {
                              "type": "int32",
                              "id": 2,
                              "options": {
                                "proto3_optional": true
                              }
                            },
                            "exampleExceededCapacityType": {
                              "type": "string",
                              "id": 3
                            }
                          },
                          "nested": {
                            "Code": {
                              "values": {
                                "CODE_UNSPECIFIED": 0,
                                "NO_VEHICLE": 1,
                                "DEMAND_EXCEEDS_VEHICLE_CAPACITY": 2,
                                "CANNOT_BE_PERFORMED_WITHIN_VEHICLE_DISTANCE_LIMIT": 3,
                                "CANNOT_BE_PERFORMED_WITHIN_VEHICLE_DURATION_LIMIT": 4,
                                "CANNOT_BE_PERFORMED_WITHIN_VEHICLE_TRAVEL_DURATION_LIMIT": 5,
                                "CANNOT_BE_PERFORMED_WITHIN_VEHICLE_TIME_WINDOWS": 6,
                                "VEHICLE_NOT_ALLOWED": 7
                              }
                            }
                          }
                        }
                      }
                    },
                    "AggregatedMetrics": {
                      "fields": {
                        "performedShipmentCount": {
                          "type": "int32",
                          "id": 1
                        },
                        "travelDuration": {
                          "type": "google.protobuf.Duration",
                          "id": 2
                        },
                        "waitDuration": {
                          "type": "google.protobuf.Duration",
                          "id": 3
                        },
                        "delayDuration": {
                          "type": "google.protobuf.Duration",
                          "id": 4
                        },
                        "breakDuration": {
                          "type": "google.protobuf.Duration",
                          "id": 5
                        },
                        "visitDuration": {
                          "type": "google.protobuf.Duration",
                          "id": 6
                        },
                        "totalDuration": {
                          "type": "google.protobuf.Duration",
                          "id": 7
                        },
                        "travelDistanceMeters": {
                          "type": "double",
                          "id": 8
                        },
                        "maxLoads": {
                          "keyType": "string",
                          "type": "ShipmentRoute.VehicleLoad",
                          "id": 9
                        }
                      }
                    },
                    "InjectedSolutionConstraint": {
                      "fields": {
                        "routes": {
                          "rule": "repeated",
                          "type": "ShipmentRoute",
                          "id": 1
                        },
                        "skippedShipments": {
                          "rule": "repeated",
                          "type": "SkippedShipment",
                          "id": 2
                        },
                        "constraintRelaxations": {
                          "rule": "repeated",
                          "type": "ConstraintRelaxation",
                          "id": 3
                        }
                      },
                      "nested": {
                        "ConstraintRelaxation": {
                          "fields": {
                            "relaxations": {
                              "rule": "repeated",
                              "type": "Relaxation",
                              "id": 1
                            },
                            "vehicleIndices": {
                              "rule": "repeated",
                              "type": "int32",
                              "id": 2
                            }
                          },
                          "nested": {
                            "Relaxation": {
                              "fields": {
                                "level": {
                                  "type": "Level",
                                  "id": 1
                                },
                                "thresholdTime": {
                                  "type": "google.protobuf.Timestamp",
                                  "id": 2
                                },
                                "thresholdVisitCount": {
                                  "type": "int32",
                                  "id": 3
                                }
                              },
                              "nested": {
                                "Level": {
                                  "values": {
                                    "LEVEL_UNSPECIFIED": 0,
                                    "RELAX_VISIT_TIMES_AFTER_THRESHOLD": 1,
                                    "RELAX_VISIT_TIMES_AND_SEQUENCE_AFTER_THRESHOLD": 2,
                                    "RELAX_ALL_AFTER_THRESHOLD": 3
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    },
                    "OptimizeToursValidationError": {
                      "fields": {
                        "code": {
                          "type": "int32",
                          "id": 1
                        },
                        "displayName": {
                          "type": "string",
                          "id": 2
                        },
                        "fields": {
                          "rule": "repeated",
                          "type": "FieldReference",
                          "id": 3
                        },
                        "errorMessage": {
                          "type": "string",
                          "id": 4
                        },
                        "offendingValues": {
                          "type": "string",
                          "id": 5
                        }
                      },
                      "nested": {
                        "FieldReference": {
                          "oneofs": {
                            "indexOrKey": {
                              "oneof": [
                                "index",
                                "key"
                              ]
                            }
                          },
                          "fields": {
                            "name": {
                              "type": "string",
                              "id": 1
                            },
                            "index": {
                              "type": "int32",
                              "id": 2
                            },
                            "key": {
                              "type": "string",
                              "id": 4
                            },
                            "subField": {
                              "type": "FieldReference",
                              "id": 3
                            }
                          }
                        }
                      }
                    },
                    "InputConfig": {
                      "oneofs": {
                        "source": {
                          "oneof": [
                            "gcsSource"
                          ]
                        }
                      },
                      "fields": {
                        "gcsSource": {
                          "type": "GcsSource",
                          "id": 1
                        },
                        "dataFormat": {
                          "type": "DataFormat",
                          "id": 2,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        }
                      }
                    },
                    "OutputConfig": {
                      "oneofs": {
                        "destination": {
                          "oneof": [
                            "gcsDestination"
                          ]
                        }
                      },
                      "fields": {
                        "gcsDestination": {
                          "type": "GcsDestination",
                          "id": 1
                        },
                        "dataFormat": {
                          "type": "DataFormat",
                          "id": 2,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        }
                      }
                    },
                    "GcsSource": {
                      "fields": {
                        "uri": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        }
                      }
                    },
                    "GcsDestination": {
                      "fields": {
                        "uri": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        }
                      }
                    },
                    "DataFormat": {
                      "values": {
                        "DATA_FORMAT_UNSPECIFIED": 0,
                        "JSON": 1,
                        "PROTO_TEXT": 2
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "api": {
          "options": {
            "go_package": "google.golang.org/genproto/googleapis/api/annotations;annotations",
            "java_multiple_files": true,
            "java_outer_classname": "FieldBehaviorProto",
            "java_package": "com.google.api",
            "objc_class_prefix": "GAPI",
            "cc_enable_arenas": true
          },
          "nested": {
            "http": {
              "type": "HttpRule",
              "id": 72295728,
              "extend": "google.protobuf.MethodOptions"
            },
            "Http": {
              "fields": {
                "rules": {
                  "rule": "repeated",
                  "type": "HttpRule",
                  "id": 1
                },
                "fullyDecodeReservedExpansion": {
                  "type": "bool",
                  "id": 2
                }
              }
            },
            "HttpRule": {
              "oneofs": {
                "pattern": {
                  "oneof": [
                    "get",
                    "put",
                    "post",
                    "delete",
                    "patch",
                    "custom"
                  ]
                }
              },
              "fields": {
                "selector": {
                  "type": "string",
                  "id": 1
                },
                "get": {
                  "type": "string",
                  "id": 2
                },
                "put": {
                  "type": "string",
                  "id": 3
                },
                "post": {
                  "type": "string",
                  "id": 4
                },
                "delete": {
                  "type": "string",
                  "id": 5
                },
                "patch": {
                  "type": "string",
                  "id": 6
                },
                "custom": {
                  "type": "CustomHttpPattern",
                  "id": 8
                },
                "body": {
                  "type": "string",
                  "id": 7
                },
                "responseBody": {
                  "type": "string",
                  "id": 12
                },
                "additionalBindings": {
                  "rule": "repeated",
                  "type": "HttpRule",
                  "id": 11
                }
              }
            },
            "CustomHttpPattern": {
              "fields": {
                "kind": {
                  "type": "string",
                  "id": 1
                },
                "path": {
                  "type": "string",
                  "id": 2
                }
              }
            },
            "methodSignature": {
              "rule": "repeated",
              "type": "string",
              "id": 1051,
              "extend": "google.protobuf.MethodOptions"
            },
            "defaultHost": {
              "type": "string",
              "id": 1049,
              "extend": "google.protobuf.ServiceOptions"
            },
            "oauthScopes": {
              "type": "string",
              "id": 1050,
              "extend": "google.protobuf.ServiceOptions"
            },
            "CommonLanguageSettings": {
              "fields": {
                "referenceDocsUri": {
                  "type": "string",
                  "id": 1,
                  "options": {
                    "deprecated": true
                  }
                },
                "destinations": {
                  "rule": "repeated",
                  "type": "ClientLibraryDestination",
                  "id": 2
                }
              }
            },
            "ClientLibrarySettings": {
              "fields": {
                "version": {
                  "type": "string",
                  "id": 1
                },
                "launchStage": {
                  "type": "LaunchStage",
                  "id": 2
                },
                "restNumericEnums": {
                  "type": "bool",
                  "id": 3
                },
                "javaSettings": {
                  "type": "JavaSettings",
                  "id": 21
                },
                "cppSettings": {
                  "type": "CppSettings",
                  "id": 22
                },
                "phpSettings": {
                  "type": "PhpSettings",
                  "id": 23
                },
                "pythonSettings": {
                  "type": "PythonSettings",
                  "id": 24
                },
                "nodeSettings": {
                  "type": "NodeSettings",
                  "id": 25
                },
                "dotnetSettings": {
                  "type": "DotnetSettings",
                  "id": 26
                },
                "rubySettings": {
                  "type": "RubySettings",
                  "id": 27
                },
                "goSettings": {
                  "type": "GoSettings",
                  "id": 28
                }
              }
            },
            "Publishing": {
              "fields": {
                "methodSettings": {
                  "rule": "repeated",
                  "type": "MethodSettings",
                  "id": 2
                },
                "newIssueUri": {
                  "type": "string",
                  "id": 101
                },
                "documentationUri": {
                  "type": "string",
                  "id": 102
                },
                "apiShortName": {
                  "type": "string",
                  "id": 103
                },
                "githubLabel": {
                  "type": "string",
                  "id": 104
                },
                "codeownerGithubTeams": {
                  "rule": "repeated",
                  "type": "string",
                  "id": 105
                },
                "docTagPrefix": {
                  "type": "string",
                  "id": 106
                },
                "organization": {
                  "type": "ClientLibraryOrganization",
                  "id": 107
                },
                "librarySettings": {
                  "rule": "repeated",
                  "type": "ClientLibrarySettings",
                  "id": 109
                },
                "protoReferenceDocumentationUri": {
                  "type": "string",
                  "id": 110
                }
              }
            },
            "JavaSettings": {
              "fields": {
                "libraryPackage": {
                  "type": "string",
                  "id": 1
                },
                "serviceClassNames": {
                  "keyType": "string",
                  "type": "string",
                  "id": 2
                },
                "common": {
                  "type": "CommonLanguageSettings",
                  "id": 3
                }
              }
            },
            "CppSettings": {
              "fields": {
                "common": {
                  "type": "CommonLanguageSettings",
                  "id": 1
                }
              }
            },
            "PhpSettings": {
              "fields": {
                "common": {
                  "type": "CommonLanguageSettings",
                  "id": 1
                }
              }
            },
            "PythonSettings": {
              "fields": {
                "common": {
                  "type": "CommonLanguageSettings",
                  "id": 1
                }
              }
            },
            "NodeSettings": {
              "fields": {
                "common": {
                  "type": "CommonLanguageSettings",
                  "id": 1
                }
              }
            },
            "DotnetSettings": {
              "fields": {
                "common": {
                  "type": "CommonLanguageSettings",
                  "id": 1
                },
                "renamedServices": {
                  "keyType": "string",
                  "type": "string",
                  "id": 2
                },
                "renamedResources": {
                  "keyType": "string",
                  "type": "string",
                  "id": 3
                },
                "ignoredResources": {
                  "rule": "repeated",
                  "type": "string",
                  "id": 4
                },
                "forcedNamespaceAliases": {
                  "rule": "repeated",
                  "type": "string",
                  "id": 5
                },
                "handwrittenSignatures": {
                  "rule": "repeated",
                  "type": "string",
                  "id": 6
                }
              }
            },
            "RubySettings": {
              "fields": {
                "common": {
                  "type": "CommonLanguageSettings",
                  "id": 1
                }
              }
            },
            "GoSettings": {
              "fields": {
                "common": {
                  "type": "CommonLanguageSettings",
                  "id": 1
                }
              }
            },
            "MethodSettings": {
              "fields": {
                "selector": {
                  "type": "string",
                  "id": 1
                },
                "longRunning": {
                  "type": "LongRunning",
                  "id": 2
                },
                "autoPopulatedFields": {
                  "rule": "repeated",
                  "type": "string",
                  "id": 3
                }
              },
              "nested": {
                "LongRunning": {
                  "fields": {
                    "initialPollDelay": {
                      "type": "google.protobuf.Duration",
                      "id": 1
                    },
                    "pollDelayMultiplier": {
                      "type": "float",
                      "id": 2
                    },
                    "maxPollDelay": {
                      "type": "google.protobuf.Duration",
                      "id": 3
                    },
                    "totalPollTimeout": {
                      "type": "google.protobuf.Duration",
                      "id": 4
                    }
                  }
                }
              }
            },
            "ClientLibraryOrganization": {
              "values": {
                "CLIENT_LIBRARY_ORGANIZATION_UNSPECIFIED": 0,
                "CLOUD": 1,
                "ADS": 2,
                "PHOTOS": 3,
                "STREET_VIEW": 4,
                "SHOPPING": 5,
                "GEO": 6,
                "GENERATIVE_AI": 7
              }
            },
            "ClientLibraryDestination": {
              "values": {
                "CLIENT_LIBRARY_DESTINATION_UNSPECIFIED": 0,
                "GITHUB": 10,
                "PACKAGE_MANAGER": 20
              }
            },
            "LaunchStage": {
              "values": {
                "LAUNCH_STAGE_UNSPECIFIED": 0,
                "UNIMPLEMENTED": 6,
                "PRELAUNCH": 7,
                "EARLY_ACCESS": 1,
                "ALPHA": 2,
                "BETA": 3,
                "GA": 4,
                "DEPRECATED": 5
              }
            },
            "fieldBehavior": {
              "rule": "repeated",
              "type": "google.api.FieldBehavior",
              "id": 1052,
              "extend": "google.protobuf.FieldOptions"
            },
            "FieldBehavior": {
              "values": {
                "FIELD_BEHAVIOR_UNSPECIFIED": 0,
                "OPTIONAL": 1,
                "REQUIRED": 2,
                "OUTPUT_ONLY": 3,
                "INPUT_ONLY": 4,
                "IMMUTABLE": 5,
                "UNORDERED_LIST": 6,
                "NON_EMPTY_DEFAULT": 7,
                "IDENTIFIER": 8
              }
            }
          }
        },
        "protobuf": {
          "options": {
            "go_package": "google.golang.org/protobuf/types/descriptorpb",
            "java_package": "com.google.protobuf",
            "java_outer_classname": "DescriptorProtos",
            "csharp_namespace": "Google.Protobuf.Reflection",
            "objc_class_prefix": "GPB",
            "cc_enable_arenas": true,
            "optimize_for": "SPEED"
          },
          "nested": {
            "FileDescriptorSet": {
              "fields": {
                "file": {
                  "rule": "repeated",
                  "type": "FileDescriptorProto",
                  "id": 1
                }
              }
            },
            "Edition": {
              "values": {
                "EDITION_UNKNOWN": 0,
                "EDITION_PROTO2": 998,
                "EDITION_PROTO3": 999,
                "EDITION_2023": 1000,
                "EDITION_2024": 1001,
                "EDITION_1_TEST_ONLY": 1,
                "EDITION_2_TEST_ONLY": 2,
                "EDITION_99997_TEST_ONLY": 99997,
                "EDITION_99998_TEST_ONLY": 99998,
                "EDITION_99999_TEST_ONLY": 99999,
                "EDITION_MAX": 2147483647
              }
            },
            "FileDescriptorProto": {
              "fields": {
                "name": {
                  "type": "string",
                  "id": 1
                },
                "package": {
                  "type": "string",
                  "id": 2
                },
                "dependency": {
                  "rule": "repeated",
                  "type": "string",
                  "id": 3
                },
                "publicDependency": {
                  "rule": "repeated",
                  "type": "int32",
                  "id": 10,
                  "options": {
                    "packed": false
                  }
                },
                "weakDependency": {
                  "rule": "repeated",
                  "type": "int32",
                  "id": 11,
                  "options": {
                    "packed": false
                  }
                },
                "messageType": {
                  "rule": "repeated",
                  "type": "DescriptorProto",
                  "id": 4
                },
                "enumType": {
                  "rule": "repeated",
                  "type": "EnumDescriptorProto",
                  "id": 5
                },
                "service": {
                  "rule": "repeated",
                  "type": "ServiceDescriptorProto",
                  "id": 6
                },
                "extension": {
                  "rule": "repeated",
                  "type": "FieldDescriptorProto",
                  "id": 7
                },
                "options": {
                  "type": "FileOptions",
                  "id": 8
                },
                "sourceCodeInfo": {
                  "type": "SourceCodeInfo",
                  "id": 9
                },
                "syntax": {
                  "type": "string",
                  "id": 12
                },
                "edition": {
                  "type": "Edition",
                  "id": 14
                }
              }
            },
            "DescriptorProto": {
              "fields": {
                "name": {
                  "type": "string",
                  "id": 1
                },
                "field": {
                  "rule": "repeated",
                  "type": "FieldDescriptorProto",
                  "id": 2
                },
                "extension": {
                  "rule": "repeated",
                  "type": "FieldDescriptorProto",
                  "id": 6
                },
                "nestedType": {
                  "rule": "repeated",
                  "type": "DescriptorProto",
                  "id": 3
                },
                "enumType": {
                  "rule": "repeated",
                  "type": "EnumDescriptorProto",
                  "id": 4
                },
                "extensionRange": {
                  "rule": "repeated",
                  "type": "ExtensionRange",
                  "id": 5
                },
                "oneofDecl": {
                  "rule": "repeated",
                  "type": "OneofDescriptorProto",
                  "id": 8
                },
                "options": {
                  "type": "MessageOptions",
                  "id": 7
                },
                "reservedRange": {
                  "rule": "repeated",
                  "type": "ReservedRange",
                  "id": 9
                },
                "reservedName": {
                  "rule": "repeated",
                  "type": "string",
                  "id": 10
                }
              },
              "nested": {
                "ExtensionRange": {
                  "fields": {
                    "start": {
                      "type": "int32",
                      "id": 1
                    },
                    "end": {
                      "type": "int32",
                      "id": 2
                    },
                    "options": {
                      "type": "ExtensionRangeOptions",
                      "id": 3
                    }
                  }
                },
                "ReservedRange": {
                  "fields": {
                    "start": {
                      "type": "int32",
                      "id": 1
                    },
                    "end": {
                      "type": "int32",
                      "id": 2
                    }
                  }
                }
              }
            },
            "ExtensionRangeOptions": {
              "fields": {
                "uninterpretedOption": {
                  "rule": "repeated",
                  "type": "UninterpretedOption",
                  "id": 999
                },
                "declaration": {
                  "rule": "repeated",
                  "type": "Declaration",
                  "id": 2,
                  "options": {
                    "retention": "RETENTION_SOURCE"
                  }
                },
                "features": {
                  "type": "FeatureSet",
                  "id": 50
                },
                "verification": {
                  "type": "VerificationState",
                  "id": 3,
                  "options": {
                    "default": "UNVERIFIED",
                    "retention": "RETENTION_SOURCE"
                  }
                }
              },
              "extensions": [
                [
                  1000,
                  536870911
                ]
              ],
              "nested": {
                "Declaration": {
                  "fields": {
                    "number": {
                      "type": "int32",
                      "id": 1
                    },
                    "fullName": {
                      "type": "string",
                      "id": 2
                    },
                    "type": {
                      "type": "string",
                      "id": 3
                    },
                    "reserved": {
                      "type": "bool",
                      "id": 5
                    },
                    "repeated": {
                      "type": "bool",
                      "id": 6
                    }
                  },
                  "reserved": [
                    [
                      4,
                      4
                    ]
                  ]
                },
                "VerificationState": {
                  "values": {
                    "DECLARATION": 0,
                    "UNVERIFIED": 1
                  }
                }
              }
            },
            "FieldDescriptorProto": {
              "fields": {
                "name": {
                  "type": "string",
                  "id": 1
                },
                "number": {
                  "type": "int32",
                  "id": 3
                },
                "label": {
                  "type": "Label",
                  "id": 4
                },
                "type": {
                  "type": "Type",
                  "id": 5
                },
                "typeName": {
                  "type": "string",
                  "id": 6
                },
                "extendee": {
                  "type": "string",
                  "id": 2
                },
                "defaultValue": {
                  "type": "string",
                  "id": 7
                },
                "oneofIndex": {
                  "type": "int32",
                  "id": 9
                },
                "jsonName": {
                  "type": "string",
                  "id": 10
                },
                "options": {
                  "type": "FieldOptions",
                  "id": 8
                },
                "proto3Optional": {
                  "type": "bool",
                  "id": 17
                }
              },
              "nested": {
                "Type": {
                  "values": {
                    "TYPE_DOUBLE": 1,
                    "TYPE_FLOAT": 2,
                    "TYPE_INT64": 3,
                    "TYPE_UINT64": 4,
                    "TYPE_INT32": 5,
                    "TYPE_FIXED64": 6,
                    "TYPE_FIXED32": 7,
                    "TYPE_BOOL": 8,
                    "TYPE_STRING": 9,
                    "TYPE_GROUP": 10,
                    "TYPE_MESSAGE": 11,
                    "TYPE_BYTES": 12,
                    "TYPE_UINT32": 13,
                    "TYPE_ENUM": 14,
                    "TYPE_SFIXED32": 15,
                    "TYPE_SFIXED64": 16,
                    "TYPE_SINT32": 17,
                    "TYPE_SINT64": 18
                  }
                },
                "Label": {
                  "values": {
                    "LABEL_OPTIONAL": 1,
                    "LABEL_REPEATED": 3,
                    "LABEL_REQUIRED": 2
                  }
                }
              }
            },
            "OneofDescriptorProto": {
              "fields": {
                "name": {
                  "type": "string",
                  "id": 1
                },
                "options": {
                  "type": "OneofOptions",
                  "id": 2
                }
              }
            },
            "EnumDescriptorProto": {
              "fields": {
                "name": {
                  "type": "string",
                  "id": 1
                },
                "value": {
                  "rule": "repeated",
                  "type": "EnumValueDescriptorProto",
                  "id": 2
                },
                "options": {
                  "type": "EnumOptions",
                  "id": 3
                },
                "reservedRange": {
                  "rule": "repeated",
                  "type": "EnumReservedRange",
                  "id": 4
                },
                "reservedName": {
                  "rule": "repeated",
                  "type": "string",
                  "id": 5
                }
              },
              "nested": {
                "EnumReservedRange": {
                  "fields": {
                    "start": {
                      "type": "int32",
                      "id": 1
                    },
                    "end": {
                      "type": "int32",
                      "id": 2
                    }
                  }
                }
              }
            },
            "EnumValueDescriptorProto": {
              "fields": {
                "name": {
                  "type": "string",
                  "id": 1
                },
                "number": {
                  "type": "int32",
                  "id": 2
                },
                "options": {
                  "type": "EnumValueOptions",
                  "id": 3
                }
              }
            },
            "ServiceDescriptorProto": {
              "fields": {
                "name": {
                  "type": "string",
                  "id": 1
                },
                "method": {
                  "rule": "repeated",
                  "type": "MethodDescriptorProto",
                  "id": 2
                },
                "options": {
                  "type": "ServiceOptions",
                  "id": 3
                }
              }
            },
            "MethodDescriptorProto": {
              "fields": {
                "name": {
                  "type": "string",
                  "id": 1
                },
                "inputType": {
                  "type": "string",
                  "id": 2
                },
                "outputType": {
                  "type": "string",
                  "id": 3
                },
                "options": {
                  "type": "MethodOptions",
                  "id": 4
                },
                "clientStreaming": {
                  "type": "bool",
                  "id": 5,
                  "options": {
                    "default": false
                  }
                },
                "serverStreaming": {
                  "type": "bool",
                  "id": 6,
                  "options": {
                    "default": false
                  }
                }
              }
            },
            "FileOptions": {
              "fields": {
                "javaPackage": {
                  "type": "string",
                  "id": 1
                },
                "javaOuterClassname": {
                  "type": "string",
                  "id": 8
                },
                "javaMultipleFiles": {
                  "type": "bool",
                  "id": 10,
                  "options": {
                    "default": false
                  }
                },
                "javaGenerateEqualsAndHash": {
                  "type": "bool",
                  "id": 20,
                  "options": {
                    "deprecated": true
                  }
                },
                "javaStringCheckUtf8": {
                  "type": "bool",
                  "id": 27,
                  "options": {
                    "default": false
                  }
                },
                "optimizeFor": {
                  "type": "OptimizeMode",
                  "id": 9,
                  "options": {
                    "default": "SPEED"
                  }
                },
                "goPackage": {
                  "type": "string",
                  "id": 11
                },
                "ccGenericServices": {
                  "type": "bool",
                  "id": 16,
                  "options": {
                    "default": false
                  }
                },
                "javaGenericServices": {
                  "type": "bool",
                  "id": 17,
                  "options": {
                    "default": false
                  }
                },
                "pyGenericServices": {
                  "type": "bool",
                  "id": 18,
                  "options": {
                    "default": false
                  }
                },
                "deprecated": {
                  "type": "bool",
                  "id": 23,
                  "options": {
                    "default": false
                  }
                },
                "ccEnableArenas": {
                  "type": "bool",
                  "id": 31,
                  "options": {
                    "default": true
                  }
                },
                "objcClassPrefix": {
                  "type": "string",
                  "id": 36
                },
                "csharpNamespace": {
                  "type": "string",
                  "id": 37
                },
                "swiftPrefix": {
                  "type": "string",
                  "id": 39
                },
                "phpClassPrefix": {
                  "type": "string",
                  "id": 40
                },
                "phpNamespace": {
                  "type": "string",
                  "id": 41
                },
                "phpMetadataNamespace": {
                  "type": "string",
                  "id": 44
                },
                "rubyPackage": {
                  "type": "string",
                  "id": 45
                },
                "features": {
                  "type": "FeatureSet",
                  "id": 50
                },
                "uninterpretedOption": {
                  "rule": "repeated",
                  "type": "UninterpretedOption",
                  "id": 999
                }
              },
              "extensions": [
                [
                  1000,
                  536870911
                ]
              ],
              "reserved": [
                [
                  42,
                  42
                ],
                [
                  38,
                  38
                ]
              ],
              "nested": {
                "OptimizeMode": {
                  "values": {
                    "SPEED": 1,
                    "CODE_SIZE": 2,
                    "LITE_RUNTIME": 3
                  }
                }
              }
            },
            "MessageOptions": {
              "fields": {
                "messageSetWireFormat": {
                  "type": "bool",
                  "id": 1,
                  "options": {
                    "default": false
                  }
                },
                "noStandardDescriptorAccessor": {
                  "type": "bool",
                  "id": 2,
                  "options": {
                    "default": false
                  }
                },
                "deprecated": {
                  "type": "bool",
                  "id": 3,
                  "options": {
                    "default": false
                  }
                },
                "mapEntry": {
                  "type": "bool",
                  "id": 7
                },
                "deprecatedLegacyJsonFieldConflicts": {
                  "type": "bool",
                  "id": 11,
                  "options": {
                    "deprecated": true
                  }
                },
                "features": {
                  "type": "FeatureSet",
                  "id": 12
                },
                "uninterpretedOption": {
                  "rule": "repeated",
                  "type": "UninterpretedOption",
                  "id": 999
                }
              },
              "extensions": [
                [
                  1000,
                  536870911
                ]
              ],
              "reserved": [
                [
                  4,
                  4
                ],
                [
                  5,
                  5
                ],
                [
                  6,
                  6
                ],
                [
                  8,
                  8
                ],
                [
                  9,
                  9
                ]
              ]
            },
            "FieldOptions": {
              "fields": {
                "ctype": {
                  "type": "CType",
                  "id": 1,
                  "options": {
                    "default": "STRING"
                  }
                },
                "packed": {
                  "type": "bool",
                  "id": 2
                },
                "jstype": {
                  "type": "JSType",
                  "id": 6,
                  "options": {
                    "default": "JS_NORMAL"
                  }
                },
                "lazy": {
                  "type": "bool",
                  "id": 5,
                  "options": {
                    "default": false
                  }
                },
                "unverifiedLazy": {
                  "type": "bool",
                  "id": 15,
                  "options": {
                    "default": false
                  }
                },
                "deprecated": {
                  "type": "bool",
                  "id": 3,
                  "options": {
                    "default": false
                  }
                },
                "weak": {
                  "type": "bool",
                  "id": 10,
                  "options": {
                    "default": false
                  }
                },
                "debugRedact": {
                  "type": "bool",
                  "id": 16,
                  "options": {
                    "default": false
                  }
                },
                "retention": {
                  "type": "OptionRetention",
                  "id": 17
                },
                "targets": {
                  "rule": "repeated",
                  "type": "OptionTargetType",
                  "id": 19,
                  "options": {
                    "packed": false
                  }
                },
                "editionDefaults": {
                  "rule": "repeated",
                  "type": "EditionDefault",
                  "id": 20
                },
                "features": {
                  "type": "FeatureSet",
                  "id": 21
                },
                "uninterpretedOption": {
                  "rule": "repeated",
                  "type": "UninterpretedOption",
                  "id": 999
                }
              },
              "extensions": [
                [
                  1000,
                  536870911
                ]
              ],
              "reserved": [
                [
                  4,
                  4
                ],
                [
                  18,
                  18
                ]
              ],
              "nested": {
                "CType": {
                  "values": {
                    "STRING": 0,
                    "CORD": 1,
                    "STRING_PIECE": 2
                  }
                },
                "JSType": {
                  "values": {
                    "JS_NORMAL": 0,
                    "JS_STRING": 1,
                    "JS_NUMBER": 2
                  }
                },
                "OptionRetention": {
                  "values": {
                    "RETENTION_UNKNOWN": 0,
                    "RETENTION_RUNTIME": 1,
                    "RETENTION_SOURCE": 2
                  }
                },
                "OptionTargetType": {
                  "values": {
                    "TARGET_TYPE_UNKNOWN": 0,
                    "TARGET_TYPE_FILE": 1,
                    "TARGET_TYPE_EXTENSION_RANGE": 2,
                    "TARGET_TYPE_MESSAGE": 3,
                    "TARGET_TYPE_FIELD": 4,
                    "TARGET_TYPE_ONEOF": 5,
                    "TARGET_TYPE_ENUM": 6,
                    "TARGET_TYPE_ENUM_ENTRY": 7,
                    "TARGET_TYPE_SERVICE": 8,
                    "TARGET_TYPE_METHOD": 9
                  }
                },
                "EditionDefault": {
                  "fields": {
                    "edition": {
                      "type": "Edition",
                      "id": 3
                    },
                    "value": {
                      "type": "string",
                      "id": 2
                    }
                  }
                }
              }
            },
            "OneofOptions": {
              "fields": {
                "features": {
                  "type": "FeatureSet",
                  "id": 1
                },
                "uninterpretedOption": {
                  "rule": "repeated",
                  "type": "UninterpretedOption",
                  "id": 999
                }
              },
              "extensions": [
                [
                  1000,
                  536870911
                ]
              ]
            },
            "EnumOptions": {
              "fields": {
                "allowAlias": {
                  "type": "bool",
                  "id": 2
                },
                "deprecated": {
                  "type": "bool",
                  "id": 3,
                  "options": {
                    "default": false
                  }
                },
                "deprecatedLegacyJsonFieldConflicts": {
                  "type": "bool",
                  "id": 6,
                  "options": {
                    "deprecated": true
                  }
                },
                "features": {
                  "type": "FeatureSet",
                  "id": 7
                },
                "uninterpretedOption": {
                  "rule": "repeated",
                  "type": "UninterpretedOption",
                  "id": 999
                }
              },
              "extensions": [
                [
                  1000,
                  536870911
                ]
              ],
              "reserved": [
                [
                  5,
                  5
                ]
              ]
            },
            "EnumValueOptions": {
              "fields": {
                "deprecated": {
                  "type": "bool",
                  "id": 1,
                  "options": {
                    "default": false
                  }
                },
                "features": {
                  "type": "FeatureSet",
                  "id": 2
                },
                "debugRedact": {
                  "type": "bool",
                  "id": 3,
                  "options": {
                    "default": false
                  }
                },
                "uninterpretedOption": {
                  "rule": "repeated",
                  "type": "UninterpretedOption",
                  "id": 999
                }
              },
              "extensions": [
                [
                  1000,
                  536870911
                ]
              ]
            },
            "ServiceOptions": {
              "fields": {
                "features": {
                  "type": "FeatureSet",
                  "id": 34
                },
                "deprecated": {
                  "type": "bool",
                  "id": 33,
                  "options": {
                    "default": false
                  }
                },
                "uninterpretedOption": {
                  "rule": "repeated",
                  "type": "UninterpretedOption",
                  "id": 999
                }
              },
              "extensions": [
                [
                  1000,
                  536870911
                ]
              ]
            },
            "MethodOptions": {
              "fields": {
                "deprecated": {
                  "type": "bool",
                  "id": 33,
                  "options": {
                    "default": false
                  }
                },
                "idempotencyLevel": {
                  "type": "IdempotencyLevel",
                  "id": 34,
                  "options": {
                    "default": "IDEMPOTENCY_UNKNOWN"
                  }
                },
                "features": {
                  "type": "FeatureSet",
                  "id": 35
                },
                "uninterpretedOption": {
                  "rule": "repeated",
                  "type": "UninterpretedOption",
                  "id": 999
                }
              },
              "extensions": [
                [
                  1000,
                  536870911
                ]
              ],
              "nested": {
                "IdempotencyLevel": {
                  "values": {
                    "IDEMPOTENCY_UNKNOWN": 0,
                    "NO_SIDE_EFFECTS": 1,
                    "IDEMPOTENT": 2
                  }
                }
              }
            },
            "UninterpretedOption": {
              "fields": {
                "name": {
                  "rule": "repeated",
                  "type": "NamePart",
                  "id": 2
                },
                "identifierValue": {
                  "type": "string",
                  "id": 3
                },
                "positiveIntValue": {
                  "type": "uint64",
                  "id": 4
                },
                "negativeIntValue": {
                  "type": "int64",
                  "id": 5
                },
                "doubleValue": {
                  "type": "double",
                  "id": 6
                },
                "stringValue": {
                  "type": "bytes",
                  "id": 7
                },
                "aggregateValue": {
                  "type": "string",
                  "id": 8
                }
              },
              "nested": {
                "NamePart": {
                  "fields": {
                    "namePart": {
                      "rule": "required",
                      "type": "string",
                      "id": 1
                    },
                    "isExtension": {
                      "rule": "required",
                      "type": "bool",
                      "id": 2
                    }
                  }
                }
              }
            },
            "FeatureSet": {
              "fields": {
                "fieldPresence": {
                  "type": "FieldPresence",
                  "id": 1,
                  "options": {
                    "retention": "RETENTION_RUNTIME",
                    "targets": "TARGET_TYPE_FILE",
                    "edition_defaults.edition": "EDITION_2023",
                    "edition_defaults.value": "EXPLICIT"
                  }
                },
                "enumType": {
                  "type": "EnumType",
                  "id": 2,
                  "options": {
                    "retention": "RETENTION_RUNTIME",
                    "targets": "TARGET_TYPE_FILE",
                    "edition_defaults.edition": "EDITION_PROTO3",
                    "edition_defaults.value": "OPEN"
                  }
                },
                "repeatedFieldEncoding": {
                  "type": "RepeatedFieldEncoding",
                  "id": 3,
                  "options": {
                    "retention": "RETENTION_RUNTIME",
                    "targets": "TARGET_TYPE_FILE",
                    "edition_defaults.edition": "EDITION_PROTO3",
                    "edition_defaults.value": "PACKED"
                  }
                },
                "utf8Validation": {
                  "type": "Utf8Validation",
                  "id": 4,
                  "options": {
                    "retention": "RETENTION_RUNTIME",
                    "targets": "TARGET_TYPE_FILE",
                    "edition_defaults.edition": "EDITION_PROTO3",
                    "edition_defaults.value": "VERIFY"
                  }
                },
                "messageEncoding": {
                  "type": "MessageEncoding",
                  "id": 5,
                  "options": {
                    "retention": "RETENTION_RUNTIME",
                    "targets": "TARGET_TYPE_FILE",
                    "edition_defaults.edition": "EDITION_PROTO2",
                    "edition_defaults.value": "LENGTH_PREFIXED"
                  }
                },
                "jsonFormat": {
                  "type": "JsonFormat",
                  "id": 6,
                  "options": {
                    "retention": "RETENTION_RUNTIME",
                    "targets": "TARGET_TYPE_FILE",
                    "edition_defaults.edition": "EDITION_PROTO3",
                    "edition_defaults.value": "ALLOW"
                  }
                }
              },
              "extensions": [
                [
                  1000,
                  1000
                ],
                [
                  1001,
                  1001
                ],
                [
                  9995,
                  9999
                ]
              ],
              "reserved": [
                [
                  999,
                  999
                ]
              ],
              "nested": {
                "FieldPresence": {
                  "values": {
                    "FIELD_PRESENCE_UNKNOWN": 0,
                    "EXPLICIT": 1,
                    "IMPLICIT": 2,
                    "LEGACY_REQUIRED": 3
                  }
                },
                "EnumType": {
                  "values": {
                    "ENUM_TYPE_UNKNOWN": 0,
                    "OPEN": 1,
                    "CLOSED": 2
                  }
                },
                "RepeatedFieldEncoding": {
                  "values": {
                    "REPEATED_FIELD_ENCODING_UNKNOWN": 0,
                    "PACKED": 1,
                    "EXPANDED": 2
                  }
                },
                "Utf8Validation": {
                  "values": {
                    "UTF8_VALIDATION_UNKNOWN": 0,
                    "VERIFY": 2,
                    "NONE": 3
                  }
                },
                "MessageEncoding": {
                  "values": {
                    "MESSAGE_ENCODING_UNKNOWN": 0,
                    "LENGTH_PREFIXED": 1,
                    "DELIMITED": 2
                  }
                },
                "JsonFormat": {
                  "values": {
                    "JSON_FORMAT_UNKNOWN": 0,
                    "ALLOW": 1,
                    "LEGACY_BEST_EFFORT": 2
                  }
                }
              }
            },
            "FeatureSetDefaults": {
              "fields": {
                "defaults": {
                  "rule": "repeated",
                  "type": "FeatureSetEditionDefault",
                  "id": 1
                },
                "minimumEdition": {
                  "type": "Edition",
                  "id": 4
                },
                "maximumEdition": {
                  "type": "Edition",
                  "id": 5
                }
              },
              "nested": {
                "FeatureSetEditionDefault": {
                  "fields": {
                    "edition": {
                      "type": "Edition",
                      "id": 3
                    },
                    "features": {
                      "type": "FeatureSet",
                      "id": 2
                    }
                  }
                }
              }
            },
            "SourceCodeInfo": {
              "fields": {
                "location": {
                  "rule": "repeated",
                  "type": "Location",
                  "id": 1
                }
              },
              "nested": {
                "Location": {
                  "fields": {
                    "path": {
                      "rule": "repeated",
                      "type": "int32",
                      "id": 1
                    },
                    "span": {
                      "rule": "repeated",
                      "type": "int32",
                      "id": 2
                    },
                    "leadingComments": {
                      "type": "string",
                      "id": 3
                    },
                    "trailingComments": {
                      "type": "string",
                      "id": 4
                    },
                    "leadingDetachedComments": {
                      "rule": "repeated",
                      "type": "string",
                      "id": 6
                    }
                  }
                }
              }
            },
            "GeneratedCodeInfo": {
              "fields": {
                "annotation": {
                  "rule": "repeated",
                  "type": "Annotation",
                  "id": 1
                }
              },
              "nested": {
                "Annotation": {
                  "fields": {
                    "path": {
                      "rule": "repeated",
                      "type": "int32",
                      "id": 1
                    },
                    "sourceFile": {
                      "type": "string",
                      "id": 2
                    },
                    "begin": {
                      "type": "int32",
                      "id": 3
                    },
                    "end": {
                      "type": "int32",
                      "id": 4
                    },
                    "semantic": {
                      "type": "Semantic",
                      "id": 5
                    }
                  },
                  "nested": {
                    "Semantic": {
                      "values": {
                        "NONE": 0,
                        "SET": 1,
                        "ALIAS": 2
                      }
                    }
                  }
                }
              }
            },
            "Duration": {
              "fields": {
                "seconds": {
                  "type": "int64",
                  "id": 1
                },
                "nanos": {
                  "type": "int32",
                  "id": 2
                }
              }
            },
            "Any": {
              "fields": {
                "type_url": {
                  "type": "string",
                  "id": 1
                },
                "value": {
                  "type": "bytes",
                  "id": 2
                }
              }
            },
            "Empty": {
              "fields": {}
            },
            "Timestamp": {
              "fields": {
                "seconds": {
                  "type": "int64",
                  "id": 1
                },
                "nanos": {
                  "type": "int32",
                  "id": 2
                }
              }
            }
          }
        },
        "longrunning": {
          "options": {
            "cc_enable_arenas": true,
            "csharp_namespace": "Google.LongRunning",
            "go_package": "cloud.google.com/go/longrunning/autogen/longrunningpb;longrunningpb",
            "java_multiple_files": true,
            "java_outer_classname": "OperationsProto",
            "java_package": "com.google.longrunning",
            "php_namespace": "Google\\LongRunning"
          },
          "nested": {
            "operationInfo": {
              "type": "google.longrunning.OperationInfo",
              "id": 1049,
              "extend": "google.protobuf.MethodOptions"
            },
            "Operations": {
              "options": {
                "(google.api.default_host)": "longrunning.googleapis.com"
              },
              "methods": {
                "ListOperations": {
                  "requestType": "ListOperationsRequest",
                  "responseType": "ListOperationsResponse",
                  "options": {
                    "(google.api.http).get": "/v1/{name=operations}",
                    "(google.api.method_signature)": "name,filter"
                  },
                  "parsedOptions": [
                    {
                      "(google.api.http)": {
                        "get": "/v1/{name=operations}"
                      }
                    },
                    {
                      "(google.api.method_signature)": "name,filter"
                    }
                  ]
                },
                "GetOperation": {
                  "requestType": "GetOperationRequest",
                  "responseType": "Operation",
                  "options": {
                    "(google.api.http).get": "/v1/{name=operations/**}",
                    "(google.api.method_signature)": "name"
                  },
                  "parsedOptions": [
                    {
                      "(google.api.http)": {
                        "get": "/v1/{name=operations/**}"
                      }
                    },
                    {
                      "(google.api.method_signature)": "name"
                    }
                  ]
                },
                "DeleteOperation": {
                  "requestType": "DeleteOperationRequest",
                  "responseType": "google.protobuf.Empty",
                  "options": {
                    "(google.api.http).delete": "/v1/{name=operations/**}",
                    "(google.api.method_signature)": "name"
                  },
                  "parsedOptions": [
                    {
                      "(google.api.http)": {
                        "delete": "/v1/{name=operations/**}"
                      }
                    },
                    {
                      "(google.api.method_signature)": "name"
                    }
                  ]
                },
                "CancelOperation": {
                  "requestType": "CancelOperationRequest",
                  "responseType": "google.protobuf.Empty",
                  "options": {
                    "(google.api.http).post": "/v1/{name=operations/**}:cancel",
                    "(google.api.http).body": "*",
                    "(google.api.method_signature)": "name"
                  },
                  "parsedOptions": [
                    {
                      "(google.api.http)": {
                        "post": "/v1/{name=operations/**}:cancel",
                        "body": "*"
                      }
                    },
                    {
                      "(google.api.method_signature)": "name"
                    }
                  ]
                },
                "WaitOperation": {
                  "requestType": "WaitOperationRequest",
                  "responseType": "Operation"
                }
              }
            },
            "Operation": {
              "oneofs": {
                "result": {
                  "oneof": [
                    "error",
                    "response"
                  ]
                }
              },
              "fields": {
                "name": {
                  "type": "string",
                  "id": 1
                },
                "metadata": {
                  "type": "google.protobuf.Any",
                  "id": 2
                },
                "done": {
                  "type": "bool",
                  "id": 3
                },
                "error": {
                  "type": "google.rpc.Status",
                  "id": 4
                },
                "response": {
                  "type": "google.protobuf.Any",
                  "id": 5
                }
              }
            },
            "GetOperationRequest": {
              "fields": {
                "name": {
                  "type": "string",
                  "id": 1
                }
              }
            },
            "ListOperationsRequest": {
              "fields": {
                "name": {
                  "type": "string",
                  "id": 4
                },
                "filter": {
                  "type": "string",
                  "id": 1
                },
                "pageSize": {
                  "type": "int32",
                  "id": 2
                },
                "pageToken": {
                  "type": "string",
                  "id": 3
                }
              }
            },
            "ListOperationsResponse": {
              "fields": {
                "operations": {
                  "rule": "repeated",
                  "type": "Operation",
                  "id": 1
                },
                "nextPageToken": {
                  "type": "string",
                  "id": 2
                }
              }
            },
            "CancelOperationRequest": {
              "fields": {
                "name": {
                  "type": "string",
                  "id": 1
                }
              }
            },
            "DeleteOperationRequest": {
              "fields": {
                "name": {
                  "type": "string",
                  "id": 1
                }
              }
            },
            "WaitOperationRequest": {
              "fields": {
                "name": {
                  "type": "string",
                  "id": 1
                },
                "timeout": {
                  "type": "google.protobuf.Duration",
                  "id": 2
                }
              }
            },
            "OperationInfo": {
              "fields": {
                "responseType": {
                  "type": "string",
                  "id": 1
                },
                "metadataType": {
                  "type": "string",
                  "id": 2
                }
              }
            }
          }
        },
        "rpc": {
          "options": {
            "cc_enable_arenas": true,
            "go_package": "google.golang.org/genproto/googleapis/rpc/status;status",
            "java_multiple_files": true,
            "java_outer_classname": "StatusProto",
            "java_package": "com.google.rpc",
            "objc_class_prefix": "RPC"
          },
          "nested": {
            "Status": {
              "fields": {
                "code": {
                  "type": "int32",
                  "id": 1
                },
                "message": {
                  "type": "string",
                  "id": 2
                },
                "details": {
                  "rule": "repeated",
                  "type": "google.protobuf.Any",
                  "id": 3
                }
              }
            }
          }
        },
        "type": {
          "options": {
            "cc_enable_arenas": true,
            "go_package": "google.golang.org/genproto/googleapis/type/latlng;latlng",
            "java_multiple_files": true,
            "java_outer_classname": "LatLngProto",
            "java_package": "com.google.type",
            "objc_class_prefix": "GTP"
          },
          "nested": {
            "LatLng": {
              "fields": {
                "latitude": {
                  "type": "double",
                  "id": 1
                },
                "longitude": {
                  "type": "double",
                  "id": 2
                }
              }
            }
          }
        }
      }
    }
  }
}