// Copyright 2023 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

/*eslint-disable block-scoped-var, id-length, no-control-regex, no-magic-numbers, no-prototype-builtins, no-redeclare, no-shadow, no-var, sort-vars*/
(function(global, factory) { /* global define, require, module */

    /* AMD */ if (typeof define === 'function' && define.amd)
        define(["protobufjs/minimal"], factory);

    /* CommonJS */ else if (typeof require === 'function' && typeof module === 'object' && module && module.exports)
        module.exports = factory(require("google-gax/build/src/protobuf").protobufMinimal);

})(this, function($protobuf) {
    "use strict";

    // Common aliases
    var $Reader = $protobuf.Reader, $Writer = $protobuf.Writer, $util = $protobuf.util;
    
    // Exported root namespace
    var $root = $protobuf.roots._google_cloud_binary_authorization_protos || ($protobuf.roots._google_cloud_binary_authorization_protos = {});
    
    $root.google = (function() {
    
        /**
         * Namespace google.
         * @exports google
         * @namespace
         */
        var google = {};
    
        google.cloud = (function() {
    
            /**
             * Namespace cloud.
             * @memberof google
             * @namespace
             */
            var cloud = {};
    
            cloud.binaryauthorization = (function() {
    
                /**
                 * Namespace binaryauthorization.
                 * @memberof google.cloud
                 * @namespace
                 */
                var binaryauthorization = {};
    
                binaryauthorization.v1 = (function() {
    
                    /**
                     * Namespace v1.
                     * @memberof google.cloud.binaryauthorization
                     * @namespace
                     */
                    var v1 = {};
    
                    v1.Policy = (function() {
    
                        /**
                         * Properties of a Policy.
                         * @memberof google.cloud.binaryauthorization.v1
                         * @interface IPolicy
                         * @property {string|null} [name] Policy name
                         * @property {string|null} [description] Policy description
                         * @property {google.cloud.binaryauthorization.v1.Policy.GlobalPolicyEvaluationMode|null} [globalPolicyEvaluationMode] Policy globalPolicyEvaluationMode
                         * @property {Array.<google.cloud.binaryauthorization.v1.IAdmissionWhitelistPattern>|null} [admissionWhitelistPatterns] Policy admissionWhitelistPatterns
                         * @property {Object.<string,google.cloud.binaryauthorization.v1.IAdmissionRule>|null} [clusterAdmissionRules] Policy clusterAdmissionRules
                         * @property {Object.<string,google.cloud.binaryauthorization.v1.IAdmissionRule>|null} [kubernetesNamespaceAdmissionRules] Policy kubernetesNamespaceAdmissionRules
                         * @property {Object.<string,google.cloud.binaryauthorization.v1.IAdmissionRule>|null} [kubernetesServiceAccountAdmissionRules] Policy kubernetesServiceAccountAdmissionRules
                         * @property {Object.<string,google.cloud.binaryauthorization.v1.IAdmissionRule>|null} [istioServiceIdentityAdmissionRules] Policy istioServiceIdentityAdmissionRules
                         * @property {google.cloud.binaryauthorization.v1.IAdmissionRule|null} [defaultAdmissionRule] Policy defaultAdmissionRule
                         * @property {google.protobuf.ITimestamp|null} [updateTime] Policy updateTime
                         */
    
                        /**
                         * Constructs a new Policy.
                         * @memberof google.cloud.binaryauthorization.v1
                         * @classdesc Represents a Policy.
                         * @implements IPolicy
                         * @constructor
                         * @param {google.cloud.binaryauthorization.v1.IPolicy=} [properties] Properties to set
                         */
                        function Policy(properties) {
                            this.admissionWhitelistPatterns = [];
                            this.clusterAdmissionRules = {};
                            this.kubernetesNamespaceAdmissionRules = {};
                            this.kubernetesServiceAccountAdmissionRules = {};
                            this.istioServiceIdentityAdmissionRules = {};
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * Policy name.
                         * @member {string} name
                         * @memberof google.cloud.binaryauthorization.v1.Policy
                         * @instance
                         */
                        Policy.prototype.name = "";
    
                        /**
                         * Policy description.
                         * @member {string} description
                         * @memberof google.cloud.binaryauthorization.v1.Policy
                         * @instance
                         */
                        Policy.prototype.description = "";
    
                        /**
                         * Policy globalPolicyEvaluationMode.
                         * @member {google.cloud.binaryauthorization.v1.Policy.GlobalPolicyEvaluationMode} globalPolicyEvaluationMode
                         * @memberof google.cloud.binaryauthorization.v1.Policy
                         * @instance
                         */
                        Policy.prototype.globalPolicyEvaluationMode = 0;
    
                        /**
                         * Policy admissionWhitelistPatterns.
                         * @member {Array.<google.cloud.binaryauthorization.v1.IAdmissionWhitelistPattern>} admissionWhitelistPatterns
                         * @memberof google.cloud.binaryauthorization.v1.Policy
                         * @instance
                         */
                        Policy.prototype.admissionWhitelistPatterns = $util.emptyArray;
    
                        /**
                         * Policy clusterAdmissionRules.
                         * @member {Object.<string,google.cloud.binaryauthorization.v1.IAdmissionRule>} clusterAdmissionRules
                         * @memberof google.cloud.binaryauthorization.v1.Policy
                         * @instance
                         */
                        Policy.prototype.clusterAdmissionRules = $util.emptyObject;
    
                        /**
                         * Policy kubernetesNamespaceAdmissionRules.
                         * @member {Object.<string,google.cloud.binaryauthorization.v1.IAdmissionRule>} kubernetesNamespaceAdmissionRules
                         * @memberof google.cloud.binaryauthorization.v1.Policy
                         * @instance
                         */
                        Policy.prototype.kubernetesNamespaceAdmissionRules = $util.emptyObject;
    
                        /**
                         * Policy kubernetesServiceAccountAdmissionRules.
                         * @member {Object.<string,google.cloud.binaryauthorization.v1.IAdmissionRule>} kubernetesServiceAccountAdmissionRules
                         * @memberof google.cloud.binaryauthorization.v1.Policy
                         * @instance
                         */
                        Policy.prototype.kubernetesServiceAccountAdmissionRules = $util.emptyObject;
    
                        /**
                         * Policy istioServiceIdentityAdmissionRules.
                         * @member {Object.<string,google.cloud.binaryauthorization.v1.IAdmissionRule>} istioServiceIdentityAdmissionRules
                         * @memberof google.cloud.binaryauthorization.v1.Policy
                         * @instance
                         */
                        Policy.prototype.istioServiceIdentityAdmissionRules = $util.emptyObject;
    
                        /**
                         * Policy defaultAdmissionRule.
                         * @member {google.cloud.binaryauthorization.v1.IAdmissionRule|null|undefined} defaultAdmissionRule
                         * @memberof google.cloud.binaryauthorization.v1.Policy
                         * @instance
                         */
                        Policy.prototype.defaultAdmissionRule = null;
    
                        /**
                         * Policy updateTime.
                         * @member {google.protobuf.ITimestamp|null|undefined} updateTime
                         * @memberof google.cloud.binaryauthorization.v1.Policy
                         * @instance
                         */
                        Policy.prototype.updateTime = null;
    
                        /**
                         * Creates a new Policy instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.binaryauthorization.v1.Policy
                         * @static
                         * @param {google.cloud.binaryauthorization.v1.IPolicy=} [properties] Properties to set
                         * @returns {google.cloud.binaryauthorization.v1.Policy} Policy instance
                         */
                        Policy.create = function create(properties) {
                            return new Policy(properties);
                        };
    
                        /**
                         * Encodes the specified Policy message. Does not implicitly {@link google.cloud.binaryauthorization.v1.Policy.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.binaryauthorization.v1.Policy
                         * @static
                         * @param {google.cloud.binaryauthorization.v1.IPolicy} message Policy message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        Policy.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                            if (message.admissionWhitelistPatterns != null && message.admissionWhitelistPatterns.length)
                                for (var i = 0; i < message.admissionWhitelistPatterns.length; ++i)
                                    $root.google.cloud.binaryauthorization.v1.AdmissionWhitelistPattern.encode(message.admissionWhitelistPatterns[i], writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                            if (message.clusterAdmissionRules != null && Object.hasOwnProperty.call(message, "clusterAdmissionRules"))
                                for (var keys = Object.keys(message.clusterAdmissionRules), i = 0; i < keys.length; ++i) {
                                    writer.uint32(/* id 3, wireType 2 =*/26).fork().uint32(/* id 1, wireType 2 =*/10).string(keys[i]);
                                    $root.google.cloud.binaryauthorization.v1.AdmissionRule.encode(message.clusterAdmissionRules[keys[i]], writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim().ldelim();
                                }
                            if (message.defaultAdmissionRule != null && Object.hasOwnProperty.call(message, "defaultAdmissionRule"))
                                $root.google.cloud.binaryauthorization.v1.AdmissionRule.encode(message.defaultAdmissionRule, writer.uint32(/* id 4, wireType 2 =*/34).fork()).ldelim();
                            if (message.updateTime != null && Object.hasOwnProperty.call(message, "updateTime"))
                                $root.google.protobuf.Timestamp.encode(message.updateTime, writer.uint32(/* id 5, wireType 2 =*/42).fork()).ldelim();
                            if (message.description != null && Object.hasOwnProperty.call(message, "description"))
                                writer.uint32(/* id 6, wireType 2 =*/50).string(message.description);
                            if (message.globalPolicyEvaluationMode != null && Object.hasOwnProperty.call(message, "globalPolicyEvaluationMode"))
                                writer.uint32(/* id 7, wireType 0 =*/56).int32(message.globalPolicyEvaluationMode);
                            if (message.kubernetesServiceAccountAdmissionRules != null && Object.hasOwnProperty.call(message, "kubernetesServiceAccountAdmissionRules"))
                                for (var keys = Object.keys(message.kubernetesServiceAccountAdmissionRules), i = 0; i < keys.length; ++i) {
                                    writer.uint32(/* id 8, wireType 2 =*/66).fork().uint32(/* id 1, wireType 2 =*/10).string(keys[i]);
                                    $root.google.cloud.binaryauthorization.v1.AdmissionRule.encode(message.kubernetesServiceAccountAdmissionRules[keys[i]], writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim().ldelim();
                                }
                            if (message.istioServiceIdentityAdmissionRules != null && Object.hasOwnProperty.call(message, "istioServiceIdentityAdmissionRules"))
                                for (var keys = Object.keys(message.istioServiceIdentityAdmissionRules), i = 0; i < keys.length; ++i) {
                                    writer.uint32(/* id 9, wireType 2 =*/74).fork().uint32(/* id 1, wireType 2 =*/10).string(keys[i]);
                                    $root.google.cloud.binaryauthorization.v1.AdmissionRule.encode(message.istioServiceIdentityAdmissionRules[keys[i]], writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim().ldelim();
                                }
                            if (message.kubernetesNamespaceAdmissionRules != null && Object.hasOwnProperty.call(message, "kubernetesNamespaceAdmissionRules"))
                                for (var keys = Object.keys(message.kubernetesNamespaceAdmissionRules), i = 0; i < keys.length; ++i) {
                                    writer.uint32(/* id 10, wireType 2 =*/82).fork().uint32(/* id 1, wireType 2 =*/10).string(keys[i]);
                                    $root.google.cloud.binaryauthorization.v1.AdmissionRule.encode(message.kubernetesNamespaceAdmissionRules[keys[i]], writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim().ldelim();
                                }
                            return writer;
                        };
    
                        /**
                         * Encodes the specified Policy message, length delimited. Does not implicitly {@link google.cloud.binaryauthorization.v1.Policy.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.binaryauthorization.v1.Policy
                         * @static
                         * @param {google.cloud.binaryauthorization.v1.IPolicy} message Policy message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        Policy.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a Policy message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.binaryauthorization.v1.Policy
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.binaryauthorization.v1.Policy} Policy
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        Policy.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.binaryauthorization.v1.Policy(), key, value;
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.name = reader.string();
                                        break;
                                    }
                                case 6: {
                                        message.description = reader.string();
                                        break;
                                    }
                                case 7: {
                                        message.globalPolicyEvaluationMode = reader.int32();
                                        break;
                                    }
                                case 2: {
                                        if (!(message.admissionWhitelistPatterns && message.admissionWhitelistPatterns.length))
                                            message.admissionWhitelistPatterns = [];
                                        message.admissionWhitelistPatterns.push($root.google.cloud.binaryauthorization.v1.AdmissionWhitelistPattern.decode(reader, reader.uint32()));
                                        break;
                                    }
                                case 3: {
                                        if (message.clusterAdmissionRules === $util.emptyObject)
                                            message.clusterAdmissionRules = {};
                                        var end2 = reader.uint32() + reader.pos;
                                        key = "";
                                        value = null;
                                        while (reader.pos < end2) {
                                            var tag2 = reader.uint32();
                                            switch (tag2 >>> 3) {
                                            case 1:
                                                key = reader.string();
                                                break;
                                            case 2:
                                                value = $root.google.cloud.binaryauthorization.v1.AdmissionRule.decode(reader, reader.uint32());
                                                break;
                                            default:
                                                reader.skipType(tag2 & 7);
                                                break;
                                            }
                                        }
                                        message.clusterAdmissionRules[key] = value;
                                        break;
                                    }
                                case 10: {
                                        if (message.kubernetesNamespaceAdmissionRules === $util.emptyObject)
                                            message.kubernetesNamespaceAdmissionRules = {};
                                        var end2 = reader.uint32() + reader.pos;
                                        key = "";
                                        value = null;
                                        while (reader.pos < end2) {
                                            var tag2 = reader.uint32();
                                            switch (tag2 >>> 3) {
                                            case 1:
                                                key = reader.string();
                                                break;
                                            case 2:
                                                value = $root.google.cloud.binaryauthorization.v1.AdmissionRule.decode(reader, reader.uint32());
                                                break;
                                            default:
                                                reader.skipType(tag2 & 7);
                                                break;
                                            }
                                        }
                                        message.kubernetesNamespaceAdmissionRules[key] = value;
                                        break;
                                    }
                                case 8: {
                                        if (message.kubernetesServiceAccountAdmissionRules === $util.emptyObject)
                                            message.kubernetesServiceAccountAdmissionRules = {};
                                        var end2 = reader.uint32() + reader.pos;
                                        key = "";
                                        value = null;
                                        while (reader.pos < end2) {
                                            var tag2 = reader.uint32();
                                            switch (tag2 >>> 3) {
                                            case 1:
                                                key = reader.string();
                                                break;
                                            case 2:
                                                value = $root.google.cloud.binaryauthorization.v1.AdmissionRule.decode(reader, reader.uint32());
                                                break;
                                            default:
                                                reader.skipType(tag2 & 7);
                                                break;
                                            }
                                        }
                                        message.kubernetesServiceAccountAdmissionRules[key] = value;
                                        break;
                                    }
                                case 9: {
                                        if (message.istioServiceIdentityAdmissionRules === $util.emptyObject)
                                            message.istioServiceIdentityAdmissionRules = {};
                                        var end2 = reader.uint32() + reader.pos;
                                        key = "";
                                        value = null;
                                        while (reader.pos < end2) {
                                            var tag2 = reader.uint32();
                                            switch (tag2 >>> 3) {
                                            case 1:
                                                key = reader.string();
                                                break;
                                            case 2:
                                                value = $root.google.cloud.binaryauthorization.v1.AdmissionRule.decode(reader, reader.uint32());
                                                break;
                                            default:
                                                reader.skipType(tag2 & 7);
                                                break;
                                            }
                                        }
                                        message.istioServiceIdentityAdmissionRules[key] = value;
                                        break;
                                    }
                                case 4: {
                                        message.defaultAdmissionRule = $root.google.cloud.binaryauthorization.v1.AdmissionRule.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 5: {
                                        message.updateTime = $root.google.protobuf.Timestamp.decode(reader, reader.uint32());
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a Policy message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.binaryauthorization.v1.Policy
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.binaryauthorization.v1.Policy} Policy
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        Policy.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a Policy message.
                         * @function verify
                         * @memberof google.cloud.binaryauthorization.v1.Policy
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        Policy.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.name != null && message.hasOwnProperty("name"))
                                if (!$util.isString(message.name))
                                    return "name: string expected";
                            if (message.description != null && message.hasOwnProperty("description"))
                                if (!$util.isString(message.description))
                                    return "description: string expected";
                            if (message.globalPolicyEvaluationMode != null && message.hasOwnProperty("globalPolicyEvaluationMode"))
                                switch (message.globalPolicyEvaluationMode) {
                                default:
                                    return "globalPolicyEvaluationMode: enum value expected";
                                case 0:
                                case 1:
                                case 2:
                                    break;
                                }
                            if (message.admissionWhitelistPatterns != null && message.hasOwnProperty("admissionWhitelistPatterns")) {
                                if (!Array.isArray(message.admissionWhitelistPatterns))
                                    return "admissionWhitelistPatterns: array expected";
                                for (var i = 0; i < message.admissionWhitelistPatterns.length; ++i) {
                                    var error = $root.google.cloud.binaryauthorization.v1.AdmissionWhitelistPattern.verify(message.admissionWhitelistPatterns[i]);
                                    if (error)
                                        return "admissionWhitelistPatterns." + error;
                                }
                            }
                            if (message.clusterAdmissionRules != null && message.hasOwnProperty("clusterAdmissionRules")) {
                                if (!$util.isObject(message.clusterAdmissionRules))
                                    return "clusterAdmissionRules: object expected";
                                var key = Object.keys(message.clusterAdmissionRules);
                                for (var i = 0; i < key.length; ++i) {
                                    var error = $root.google.cloud.binaryauthorization.v1.AdmissionRule.verify(message.clusterAdmissionRules[key[i]]);
                                    if (error)
                                        return "clusterAdmissionRules." + error;
                                }
                            }
                            if (message.kubernetesNamespaceAdmissionRules != null && message.hasOwnProperty("kubernetesNamespaceAdmissionRules")) {
                                if (!$util.isObject(message.kubernetesNamespaceAdmissionRules))
                                    return "kubernetesNamespaceAdmissionRules: object expected";
                                var key = Object.keys(message.kubernetesNamespaceAdmissionRules);
                                for (var i = 0; i < key.length; ++i) {
                                    var error = $root.google.cloud.binaryauthorization.v1.AdmissionRule.verify(message.kubernetesNamespaceAdmissionRules[key[i]]);
                                    if (error)
                                        return "kubernetesNamespaceAdmissionRules." + error;
                                }
                            }
                            if (message.kubernetesServiceAccountAdmissionRules != null && message.hasOwnProperty("kubernetesServiceAccountAdmissionRules")) {
                                if (!$util.isObject(message.kubernetesServiceAccountAdmissionRules))
                                    return "kubernetesServiceAccountAdmissionRules: object expected";
                                var key = Object.keys(message.kubernetesServiceAccountAdmissionRules);
                                for (var i = 0; i < key.length; ++i) {
                                    var error = $root.google.cloud.binaryauthorization.v1.AdmissionRule.verify(message.kubernetesServiceAccountAdmissionRules[key[i]]);
                                    if (error)
                                        return "kubernetesServiceAccountAdmissionRules." + error;
                                }
                            }
                            if (message.istioServiceIdentityAdmissionRules != null && message.hasOwnProperty("istioServiceIdentityAdmissionRules")) {
                                if (!$util.isObject(message.istioServiceIdentityAdmissionRules))
                                    return "istioServiceIdentityAdmissionRules: object expected";
                                var key = Object.keys(message.istioServiceIdentityAdmissionRules);
                                for (var i = 0; i < key.length; ++i) {
                                    var error = $root.google.cloud.binaryauthorization.v1.AdmissionRule.verify(message.istioServiceIdentityAdmissionRules[key[i]]);
                                    if (error)
                                        return "istioServiceIdentityAdmissionRules." + error;
                                }
                            }
                            if (message.defaultAdmissionRule != null && message.hasOwnProperty("defaultAdmissionRule")) {
                                var error = $root.google.cloud.binaryauthorization.v1.AdmissionRule.verify(message.defaultAdmissionRule);
                                if (error)
                                    return "defaultAdmissionRule." + error;
                            }
                            if (message.updateTime != null && message.hasOwnProperty("updateTime")) {
                                var error = $root.google.protobuf.Timestamp.verify(message.updateTime);
                                if (error)
                                    return "updateTime." + error;
                            }
                            return null;
                        };
    
                        /**
                         * Creates a Policy message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.binaryauthorization.v1.Policy
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.binaryauthorization.v1.Policy} Policy
                         */
                        Policy.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.binaryauthorization.v1.Policy)
                                return object;
                            var message = new $root.google.cloud.binaryauthorization.v1.Policy();
                            if (object.name != null)
                                message.name = String(object.name);
                            if (object.description != null)
                                message.description = String(object.description);
                            switch (object.globalPolicyEvaluationMode) {
                            default:
                                if (typeof object.globalPolicyEvaluationMode === "number") {
                                    message.globalPolicyEvaluationMode = object.globalPolicyEvaluationMode;
                                    break;
                                }
                                break;
                            case "GLOBAL_POLICY_EVALUATION_MODE_UNSPECIFIED":
                            case 0:
                                message.globalPolicyEvaluationMode = 0;
                                break;
                            case "ENABLE":
                            case 1:
                                message.globalPolicyEvaluationMode = 1;
                                break;
                            case "DISABLE":
                            case 2:
                                message.globalPolicyEvaluationMode = 2;
                                break;
                            }
                            if (object.admissionWhitelistPatterns) {
                                if (!Array.isArray(object.admissionWhitelistPatterns))
                                    throw TypeError(".google.cloud.binaryauthorization.v1.Policy.admissionWhitelistPatterns: array expected");
                                message.admissionWhitelistPatterns = [];
                                for (var i = 0; i < object.admissionWhitelistPatterns.length; ++i) {
                                    if (typeof object.admissionWhitelistPatterns[i] !== "object")
                                        throw TypeError(".google.cloud.binaryauthorization.v1.Policy.admissionWhitelistPatterns: object expected");
                                    message.admissionWhitelistPatterns[i] = $root.google.cloud.binaryauthorization.v1.AdmissionWhitelistPattern.fromObject(object.admissionWhitelistPatterns[i]);
                                }
                            }
                            if (object.clusterAdmissionRules) {
                                if (typeof object.clusterAdmissionRules !== "object")
                                    throw TypeError(".google.cloud.binaryauthorization.v1.Policy.clusterAdmissionRules: object expected");
                                message.clusterAdmissionRules = {};
                                for (var keys = Object.keys(object.clusterAdmissionRules), i = 0; i < keys.length; ++i) {
                                    if (typeof object.clusterAdmissionRules[keys[i]] !== "object")
                                        throw TypeError(".google.cloud.binaryauthorization.v1.Policy.clusterAdmissionRules: object expected");
                                    message.clusterAdmissionRules[keys[i]] = $root.google.cloud.binaryauthorization.v1.AdmissionRule.fromObject(object.clusterAdmissionRules[keys[i]]);
                                }
                            }
                            if (object.kubernetesNamespaceAdmissionRules) {
                                if (typeof object.kubernetesNamespaceAdmissionRules !== "object")
                                    throw TypeError(".google.cloud.binaryauthorization.v1.Policy.kubernetesNamespaceAdmissionRules: object expected");
                                message.kubernetesNamespaceAdmissionRules = {};
                                for (var keys = Object.keys(object.kubernetesNamespaceAdmissionRules), i = 0; i < keys.length; ++i) {
                                    if (typeof object.kubernetesNamespaceAdmissionRules[keys[i]] !== "object")
                                        throw TypeError(".google.cloud.binaryauthorization.v1.Policy.kubernetesNamespaceAdmissionRules: object expected");
                                    message.kubernetesNamespaceAdmissionRules[keys[i]] = $root.google.cloud.binaryauthorization.v1.AdmissionRule.fromObject(object.kubernetesNamespaceAdmissionRules[keys[i]]);
                                }
                            }
                            if (object.kubernetesServiceAccountAdmissionRules) {
                                if (typeof object.kubernetesServiceAccountAdmissionRules !== "object")
                                    throw TypeError(".google.cloud.binaryauthorization.v1.Policy.kubernetesServiceAccountAdmissionRules: object expected");
                                message.kubernetesServiceAccountAdmissionRules = {};
                                for (var keys = Object.keys(object.kubernetesServiceAccountAdmissionRules), i = 0; i < keys.length; ++i) {
                                    if (typeof object.kubernetesServiceAccountAdmissionRules[keys[i]] !== "object")
                                        throw TypeError(".google.cloud.binaryauthorization.v1.Policy.kubernetesServiceAccountAdmissionRules: object expected");
                                    message.kubernetesServiceAccountAdmissionRules[keys[i]] = $root.google.cloud.binaryauthorization.v1.AdmissionRule.fromObject(object.kubernetesServiceAccountAdmissionRules[keys[i]]);
                                }
                            }
                            if (object.istioServiceIdentityAdmissionRules) {
                                if (typeof object.istioServiceIdentityAdmissionRules !== "object")
                                    throw TypeError(".google.cloud.binaryauthorization.v1.Policy.istioServiceIdentityAdmissionRules: object expected");
                                message.istioServiceIdentityAdmissionRules = {};
                                for (var keys = Object.keys(object.istioServiceIdentityAdmissionRules), i = 0; i < keys.length; ++i) {
                                    if (typeof object.istioServiceIdentityAdmissionRules[keys[i]] !== "object")
                                        throw TypeError(".google.cloud.binaryauthorization.v1.Policy.istioServiceIdentityAdmissionRules: object expected");
                                    message.istioServiceIdentityAdmissionRules[keys[i]] = $root.google.cloud.binaryauthorization.v1.AdmissionRule.fromObject(object.istioServiceIdentityAdmissionRules[keys[i]]);
                                }
                            }
                            if (object.defaultAdmissionRule != null) {
                                if (typeof object.defaultAdmissionRule !== "object")
                                    throw TypeError(".google.cloud.binaryauthorization.v1.Policy.defaultAdmissionRule: object expected");
                                message.defaultAdmissionRule = $root.google.cloud.binaryauthorization.v1.AdmissionRule.fromObject(object.defaultAdmissionRule);
                            }
                            if (object.updateTime != null) {
                                if (typeof object.updateTime !== "object")
                                    throw TypeError(".google.cloud.binaryauthorization.v1.Policy.updateTime: object expected");
                                message.updateTime = $root.google.protobuf.Timestamp.fromObject(object.updateTime);
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a Policy message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.binaryauthorization.v1.Policy
                         * @static
                         * @param {google.cloud.binaryauthorization.v1.Policy} message Policy
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        Policy.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.arrays || options.defaults)
                                object.admissionWhitelistPatterns = [];
                            if (options.objects || options.defaults) {
                                object.clusterAdmissionRules = {};
                                object.kubernetesServiceAccountAdmissionRules = {};
                                object.istioServiceIdentityAdmissionRules = {};
                                object.kubernetesNamespaceAdmissionRules = {};
                            }
                            if (options.defaults) {
                                object.name = "";
                                object.defaultAdmissionRule = null;
                                object.updateTime = null;
                                object.description = "";
                                object.globalPolicyEvaluationMode = options.enums === String ? "GLOBAL_POLICY_EVALUATION_MODE_UNSPECIFIED" : 0;
                            }
                            if (message.name != null && message.hasOwnProperty("name"))
                                object.name = message.name;
                            if (message.admissionWhitelistPatterns && message.admissionWhitelistPatterns.length) {
                                object.admissionWhitelistPatterns = [];
                                for (var j = 0; j < message.admissionWhitelistPatterns.length; ++j)
                                    object.admissionWhitelistPatterns[j] = $root.google.cloud.binaryauthorization.v1.AdmissionWhitelistPattern.toObject(message.admissionWhitelistPatterns[j], options);
                            }
                            var keys2;
                            if (message.clusterAdmissionRules && (keys2 = Object.keys(message.clusterAdmissionRules)).length) {
                                object.clusterAdmissionRules = {};
                                for (var j = 0; j < keys2.length; ++j)
                                    object.clusterAdmissionRules[keys2[j]] = $root.google.cloud.binaryauthorization.v1.AdmissionRule.toObject(message.clusterAdmissionRules[keys2[j]], options);
                            }
                            if (message.defaultAdmissionRule != null && message.hasOwnProperty("defaultAdmissionRule"))
                                object.defaultAdmissionRule = $root.google.cloud.binaryauthorization.v1.AdmissionRule.toObject(message.defaultAdmissionRule, options);
                            if (message.updateTime != null && message.hasOwnProperty("updateTime"))
                                object.updateTime = $root.google.protobuf.Timestamp.toObject(message.updateTime, options);
                            if (message.description != null && message.hasOwnProperty("description"))
                                object.description = message.description;
                            if (message.globalPolicyEvaluationMode != null && message.hasOwnProperty("globalPolicyEvaluationMode"))
                                object.globalPolicyEvaluationMode = options.enums === String ? $root.google.cloud.binaryauthorization.v1.Policy.GlobalPolicyEvaluationMode[message.globalPolicyEvaluationMode] === undefined ? message.globalPolicyEvaluationMode : $root.google.cloud.binaryauthorization.v1.Policy.GlobalPolicyEvaluationMode[message.globalPolicyEvaluationMode] : message.globalPolicyEvaluationMode;
                            if (message.kubernetesServiceAccountAdmissionRules && (keys2 = Object.keys(message.kubernetesServiceAccountAdmissionRules)).length) {
                                object.kubernetesServiceAccountAdmissionRules = {};
                                for (var j = 0; j < keys2.length; ++j)
                                    object.kubernetesServiceAccountAdmissionRules[keys2[j]] = $root.google.cloud.binaryauthorization.v1.AdmissionRule.toObject(message.kubernetesServiceAccountAdmissionRules[keys2[j]], options);
                            }
                            if (message.istioServiceIdentityAdmissionRules && (keys2 = Object.keys(message.istioServiceIdentityAdmissionRules)).length) {
                                object.istioServiceIdentityAdmissionRules = {};
                                for (var j = 0; j < keys2.length; ++j)
                                    object.istioServiceIdentityAdmissionRules[keys2[j]] = $root.google.cloud.binaryauthorization.v1.AdmissionRule.toObject(message.istioServiceIdentityAdmissionRules[keys2[j]], options);
                            }
                            if (message.kubernetesNamespaceAdmissionRules && (keys2 = Object.keys(message.kubernetesNamespaceAdmissionRules)).length) {
                                object.kubernetesNamespaceAdmissionRules = {};
                                for (var j = 0; j < keys2.length; ++j)
                                    object.kubernetesNamespaceAdmissionRules[keys2[j]] = $root.google.cloud.binaryauthorization.v1.AdmissionRule.toObject(message.kubernetesNamespaceAdmissionRules[keys2[j]], options);
                            }
                            return object;
                        };
    
                        /**
                         * Converts this Policy to JSON.
                         * @function toJSON
                         * @memberof google.cloud.binaryauthorization.v1.Policy
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        Policy.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for Policy
                         * @function getTypeUrl
                         * @memberof google.cloud.binaryauthorization.v1.Policy
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        Policy.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.binaryauthorization.v1.Policy";
                        };
    
                        /**
                         * GlobalPolicyEvaluationMode enum.
                         * @name google.cloud.binaryauthorization.v1.Policy.GlobalPolicyEvaluationMode
                         * @enum {number}
                         * @property {number} GLOBAL_POLICY_EVALUATION_MODE_UNSPECIFIED=0 GLOBAL_POLICY_EVALUATION_MODE_UNSPECIFIED value
                         * @property {number} ENABLE=1 ENABLE value
                         * @property {number} DISABLE=2 DISABLE value
                         */
                        Policy.GlobalPolicyEvaluationMode = (function() {
                            var valuesById = {}, values = Object.create(valuesById);
                            values[valuesById[0] = "GLOBAL_POLICY_EVALUATION_MODE_UNSPECIFIED"] = 0;
                            values[valuesById[1] = "ENABLE"] = 1;
                            values[valuesById[2] = "DISABLE"] = 2;
                            return values;
                        })();
    
                        return Policy;
                    })();
    
                    v1.AdmissionWhitelistPattern = (function() {
    
                        /**
                         * Properties of an AdmissionWhitelistPattern.
                         * @memberof google.cloud.binaryauthorization.v1
                         * @interface IAdmissionWhitelistPattern
                         * @property {string|null} [namePattern] AdmissionWhitelistPattern namePattern
                         */
    
                        /**
                         * Constructs a new AdmissionWhitelistPattern.
                         * @memberof google.cloud.binaryauthorization.v1
                         * @classdesc Represents an AdmissionWhitelistPattern.
                         * @implements IAdmissionWhitelistPattern
                         * @constructor
                         * @param {google.cloud.binaryauthorization.v1.IAdmissionWhitelistPattern=} [properties] Properties to set
                         */
                        function AdmissionWhitelistPattern(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * AdmissionWhitelistPattern namePattern.
                         * @member {string} namePattern
                         * @memberof google.cloud.binaryauthorization.v1.AdmissionWhitelistPattern
                         * @instance
                         */
                        AdmissionWhitelistPattern.prototype.namePattern = "";
    
                        /**
                         * Creates a new AdmissionWhitelistPattern instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.binaryauthorization.v1.AdmissionWhitelistPattern
                         * @static
                         * @param {google.cloud.binaryauthorization.v1.IAdmissionWhitelistPattern=} [properties] Properties to set
                         * @returns {google.cloud.binaryauthorization.v1.AdmissionWhitelistPattern} AdmissionWhitelistPattern instance
                         */
                        AdmissionWhitelistPattern.create = function create(properties) {
                            return new AdmissionWhitelistPattern(properties);
                        };
    
                        /**
                         * Encodes the specified AdmissionWhitelistPattern message. Does not implicitly {@link google.cloud.binaryauthorization.v1.AdmissionWhitelistPattern.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.binaryauthorization.v1.AdmissionWhitelistPattern
                         * @static
                         * @param {google.cloud.binaryauthorization.v1.IAdmissionWhitelistPattern} message AdmissionWhitelistPattern message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        AdmissionWhitelistPattern.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.namePattern != null && Object.hasOwnProperty.call(message, "namePattern"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.namePattern);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified AdmissionWhitelistPattern message, length delimited. Does not implicitly {@link google.cloud.binaryauthorization.v1.AdmissionWhitelistPattern.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.binaryauthorization.v1.AdmissionWhitelistPattern
                         * @static
                         * @param {google.cloud.binaryauthorization.v1.IAdmissionWhitelistPattern} message AdmissionWhitelistPattern message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        AdmissionWhitelistPattern.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes an AdmissionWhitelistPattern message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.binaryauthorization.v1.AdmissionWhitelistPattern
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.binaryauthorization.v1.AdmissionWhitelistPattern} AdmissionWhitelistPattern
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        AdmissionWhitelistPattern.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.binaryauthorization.v1.AdmissionWhitelistPattern();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.namePattern = reader.string();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes an AdmissionWhitelistPattern message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.binaryauthorization.v1.AdmissionWhitelistPattern
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.binaryauthorization.v1.AdmissionWhitelistPattern} AdmissionWhitelistPattern
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        AdmissionWhitelistPattern.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies an AdmissionWhitelistPattern message.
                         * @function verify
                         * @memberof google.cloud.binaryauthorization.v1.AdmissionWhitelistPattern
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        AdmissionWhitelistPattern.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.namePattern != null && message.hasOwnProperty("namePattern"))
                                if (!$util.isString(message.namePattern))
                                    return "namePattern: string expected";
                            return null;
                        };
    
                        /**
                         * Creates an AdmissionWhitelistPattern message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.binaryauthorization.v1.AdmissionWhitelistPattern
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.binaryauthorization.v1.AdmissionWhitelistPattern} AdmissionWhitelistPattern
                         */
                        AdmissionWhitelistPattern.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.binaryauthorization.v1.AdmissionWhitelistPattern)
                                return object;
                            var message = new $root.google.cloud.binaryauthorization.v1.AdmissionWhitelistPattern();
                            if (object.namePattern != null)
                                message.namePattern = String(object.namePattern);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from an AdmissionWhitelistPattern message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.binaryauthorization.v1.AdmissionWhitelistPattern
                         * @static
                         * @param {google.cloud.binaryauthorization.v1.AdmissionWhitelistPattern} message AdmissionWhitelistPattern
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        AdmissionWhitelistPattern.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults)
                                object.namePattern = "";
                            if (message.namePattern != null && message.hasOwnProperty("namePattern"))
                                object.namePattern = message.namePattern;
                            return object;
                        };
    
                        /**
                         * Converts this AdmissionWhitelistPattern to JSON.
                         * @function toJSON
                         * @memberof google.cloud.binaryauthorization.v1.AdmissionWhitelistPattern
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        AdmissionWhitelistPattern.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for AdmissionWhitelistPattern
                         * @function getTypeUrl
                         * @memberof google.cloud.binaryauthorization.v1.AdmissionWhitelistPattern
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        AdmissionWhitelistPattern.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.binaryauthorization.v1.AdmissionWhitelistPattern";
                        };
    
                        return AdmissionWhitelistPattern;
                    })();
    
                    v1.AdmissionRule = (function() {
    
                        /**
                         * Properties of an AdmissionRule.
                         * @memberof google.cloud.binaryauthorization.v1
                         * @interface IAdmissionRule
                         * @property {google.cloud.binaryauthorization.v1.AdmissionRule.EvaluationMode|null} [evaluationMode] AdmissionRule evaluationMode
                         * @property {Array.<string>|null} [requireAttestationsBy] AdmissionRule requireAttestationsBy
                         * @property {google.cloud.binaryauthorization.v1.AdmissionRule.EnforcementMode|null} [enforcementMode] AdmissionRule enforcementMode
                         */
    
                        /**
                         * Constructs a new AdmissionRule.
                         * @memberof google.cloud.binaryauthorization.v1
                         * @classdesc Represents an AdmissionRule.
                         * @implements IAdmissionRule
                         * @constructor
                         * @param {google.cloud.binaryauthorization.v1.IAdmissionRule=} [properties] Properties to set
                         */
                        function AdmissionRule(properties) {
                            this.requireAttestationsBy = [];
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * AdmissionRule evaluationMode.
                         * @member {google.cloud.binaryauthorization.v1.AdmissionRule.EvaluationMode} evaluationMode
                         * @memberof google.cloud.binaryauthorization.v1.AdmissionRule
                         * @instance
                         */
                        AdmissionRule.prototype.evaluationMode = 0;
    
                        /**
                         * AdmissionRule requireAttestationsBy.
                         * @member {Array.<string>} requireAttestationsBy
                         * @memberof google.cloud.binaryauthorization.v1.AdmissionRule
                         * @instance
                         */
                        AdmissionRule.prototype.requireAttestationsBy = $util.emptyArray;
    
                        /**
                         * AdmissionRule enforcementMode.
                         * @member {google.cloud.binaryauthorization.v1.AdmissionRule.EnforcementMode} enforcementMode
                         * @memberof google.cloud.binaryauthorization.v1.AdmissionRule
                         * @instance
                         */
                        AdmissionRule.prototype.enforcementMode = 0;
    
                        /**
                         * Creates a new AdmissionRule instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.binaryauthorization.v1.AdmissionRule
                         * @static
                         * @param {google.cloud.binaryauthorization.v1.IAdmissionRule=} [properties] Properties to set
                         * @returns {google.cloud.binaryauthorization.v1.AdmissionRule} AdmissionRule instance
                         */
                        AdmissionRule.create = function create(properties) {
                            return new AdmissionRule(properties);
                        };
    
                        /**
                         * Encodes the specified AdmissionRule message. Does not implicitly {@link google.cloud.binaryauthorization.v1.AdmissionRule.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.binaryauthorization.v1.AdmissionRule
                         * @static
                         * @param {google.cloud.binaryauthorization.v1.IAdmissionRule} message AdmissionRule message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        AdmissionRule.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.evaluationMode != null && Object.hasOwnProperty.call(message, "evaluationMode"))
                                writer.uint32(/* id 1, wireType 0 =*/8).int32(message.evaluationMode);
                            if (message.requireAttestationsBy != null && message.requireAttestationsBy.length)
                                for (var i = 0; i < message.requireAttestationsBy.length; ++i)
                                    writer.uint32(/* id 2, wireType 2 =*/18).string(message.requireAttestationsBy[i]);
                            if (message.enforcementMode != null && Object.hasOwnProperty.call(message, "enforcementMode"))
                                writer.uint32(/* id 3, wireType 0 =*/24).int32(message.enforcementMode);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified AdmissionRule message, length delimited. Does not implicitly {@link google.cloud.binaryauthorization.v1.AdmissionRule.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.binaryauthorization.v1.AdmissionRule
                         * @static
                         * @param {google.cloud.binaryauthorization.v1.IAdmissionRule} message AdmissionRule message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        AdmissionRule.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes an AdmissionRule message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.binaryauthorization.v1.AdmissionRule
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.binaryauthorization.v1.AdmissionRule} AdmissionRule
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        AdmissionRule.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.binaryauthorization.v1.AdmissionRule();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.evaluationMode = reader.int32();
                                        break;
                                    }
                                case 2: {
                                        if (!(message.requireAttestationsBy && message.requireAttestationsBy.length))
                                            message.requireAttestationsBy = [];
                                        message.requireAttestationsBy.push(reader.string());
                                        break;
                                    }
                                case 3: {
                                        message.enforcementMode = reader.int32();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes an AdmissionRule message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.binaryauthorization.v1.AdmissionRule
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.binaryauthorization.v1.AdmissionRule} AdmissionRule
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        AdmissionRule.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies an AdmissionRule message.
                         * @function verify
                         * @memberof google.cloud.binaryauthorization.v1.AdmissionRule
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        AdmissionRule.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.evaluationMode != null && message.hasOwnProperty("evaluationMode"))
                                switch (message.evaluationMode) {
                                default:
                                    return "evaluationMode: enum value expected";
                                case 0:
                                case 1:
                                case 2:
                                case 3:
                                    break;
                                }
                            if (message.requireAttestationsBy != null && message.hasOwnProperty("requireAttestationsBy")) {
                                if (!Array.isArray(message.requireAttestationsBy))
                                    return "requireAttestationsBy: array expected";
                                for (var i = 0; i < message.requireAttestationsBy.length; ++i)
                                    if (!$util.isString(message.requireAttestationsBy[i]))
                                        return "requireAttestationsBy: string[] expected";
                            }
                            if (message.enforcementMode != null && message.hasOwnProperty("enforcementMode"))
                                switch (message.enforcementMode) {
                                default:
                                    return "enforcementMode: enum value expected";
                                case 0:
                                case 1:
                                case 2:
                                    break;
                                }
                            return null;
                        };
    
                        /**
                         * Creates an AdmissionRule message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.binaryauthorization.v1.AdmissionRule
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.binaryauthorization.v1.AdmissionRule} AdmissionRule
                         */
                        AdmissionRule.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.binaryauthorization.v1.AdmissionRule)
                                return object;
                            var message = new $root.google.cloud.binaryauthorization.v1.AdmissionRule();
                            switch (object.evaluationMode) {
                            default:
                                if (typeof object.evaluationMode === "number") {
                                    message.evaluationMode = object.evaluationMode;
                                    break;
                                }
                                break;
                            case "EVALUATION_MODE_UNSPECIFIED":
                            case 0:
                                message.evaluationMode = 0;
                                break;
                            case "ALWAYS_ALLOW":
                            case 1:
                                message.evaluationMode = 1;
                                break;
                            case "REQUIRE_ATTESTATION":
                            case 2:
                                message.evaluationMode = 2;
                                break;
                            case "ALWAYS_DENY":
                            case 3:
                                message.evaluationMode = 3;
                                break;
                            }
                            if (object.requireAttestationsBy) {
                                if (!Array.isArray(object.requireAttestationsBy))
                                    throw TypeError(".google.cloud.binaryauthorization.v1.AdmissionRule.requireAttestationsBy: array expected");
                                message.requireAttestationsBy = [];
                                for (var i = 0; i < object.requireAttestationsBy.length; ++i)
                                    message.requireAttestationsBy[i] = String(object.requireAttestationsBy[i]);
                            }
                            switch (object.enforcementMode) {
                            default:
                                if (typeof object.enforcementMode === "number") {
                                    message.enforcementMode = object.enforcementMode;
                                    break;
                                }
                                break;
                            case "ENFORCEMENT_MODE_UNSPECIFIED":
                            case 0:
                                message.enforcementMode = 0;
                                break;
                            case "ENFORCED_BLOCK_AND_AUDIT_LOG":
                            case 1:
                                message.enforcementMode = 1;
                                break;
                            case "DRYRUN_AUDIT_LOG_ONLY":
                            case 2:
                                message.enforcementMode = 2;
                                break;
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from an AdmissionRule message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.binaryauthorization.v1.AdmissionRule
                         * @static
                         * @param {google.cloud.binaryauthorization.v1.AdmissionRule} message AdmissionRule
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        AdmissionRule.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.arrays || options.defaults)
                                object.requireAttestationsBy = [];
                            if (options.defaults) {
                                object.evaluationMode = options.enums === String ? "EVALUATION_MODE_UNSPECIFIED" : 0;
                                object.enforcementMode = options.enums === String ? "ENFORCEMENT_MODE_UNSPECIFIED" : 0;
                            }
                            if (message.evaluationMode != null && message.hasOwnProperty("evaluationMode"))
                                object.evaluationMode = options.enums === String ? $root.google.cloud.binaryauthorization.v1.AdmissionRule.EvaluationMode[message.evaluationMode] === undefined ? message.evaluationMode : $root.google.cloud.binaryauthorization.v1.AdmissionRule.EvaluationMode[message.evaluationMode] : message.evaluationMode;
                            if (message.requireAttestationsBy && message.requireAttestationsBy.length) {
                                object.requireAttestationsBy = [];
                                for (var j = 0; j < message.requireAttestationsBy.length; ++j)
                                    object.requireAttestationsBy[j] = message.requireAttestationsBy[j];
                            }
                            if (message.enforcementMode != null && message.hasOwnProperty("enforcementMode"))
                                object.enforcementMode = options.enums === String ? $root.google.cloud.binaryauthorization.v1.AdmissionRule.EnforcementMode[message.enforcementMode] === undefined ? message.enforcementMode : $root.google.cloud.binaryauthorization.v1.AdmissionRule.EnforcementMode[message.enforcementMode] : message.enforcementMode;
                            return object;
                        };
    
                        /**
                         * Converts this AdmissionRule to JSON.
                         * @function toJSON
                         * @memberof google.cloud.binaryauthorization.v1.AdmissionRule
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        AdmissionRule.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for AdmissionRule
                         * @function getTypeUrl
                         * @memberof google.cloud.binaryauthorization.v1.AdmissionRule
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        AdmissionRule.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.binaryauthorization.v1.AdmissionRule";
                        };
    
                        /**
                         * EvaluationMode enum.
                         * @name google.cloud.binaryauthorization.v1.AdmissionRule.EvaluationMode
                         * @enum {number}
                         * @property {number} EVALUATION_MODE_UNSPECIFIED=0 EVALUATION_MODE_UNSPECIFIED value
                         * @property {number} ALWAYS_ALLOW=1 ALWAYS_ALLOW value
                         * @property {number} REQUIRE_ATTESTATION=2 REQUIRE_ATTESTATION value
                         * @property {number} ALWAYS_DENY=3 ALWAYS_DENY value
                         */
                        AdmissionRule.EvaluationMode = (function() {
                            var valuesById = {}, values = Object.create(valuesById);
                            values[valuesById[0] = "EVALUATION_MODE_UNSPECIFIED"] = 0;
                            values[valuesById[1] = "ALWAYS_ALLOW"] = 1;
                            values[valuesById[2] = "REQUIRE_ATTESTATION"] = 2;
                            values[valuesById[3] = "ALWAYS_DENY"] = 3;
                            return values;
                        })();
    
                        /**
                         * EnforcementMode enum.
                         * @name google.cloud.binaryauthorization.v1.AdmissionRule.EnforcementMode
                         * @enum {number}
                         * @property {number} ENFORCEMENT_MODE_UNSPECIFIED=0 ENFORCEMENT_MODE_UNSPECIFIED value
                         * @property {number} ENFORCED_BLOCK_AND_AUDIT_LOG=1 ENFORCED_BLOCK_AND_AUDIT_LOG value
                         * @property {number} DRYRUN_AUDIT_LOG_ONLY=2 DRYRUN_AUDIT_LOG_ONLY value
                         */
                        AdmissionRule.EnforcementMode = (function() {
                            var valuesById = {}, values = Object.create(valuesById);
                            values[valuesById[0] = "ENFORCEMENT_MODE_UNSPECIFIED"] = 0;
                            values[valuesById[1] = "ENFORCED_BLOCK_AND_AUDIT_LOG"] = 1;
                            values[valuesById[2] = "DRYRUN_AUDIT_LOG_ONLY"] = 2;
                            return values;
                        })();
    
                        return AdmissionRule;
                    })();
    
                    v1.Attestor = (function() {
    
                        /**
                         * Properties of an Attestor.
                         * @memberof google.cloud.binaryauthorization.v1
                         * @interface IAttestor
                         * @property {string|null} [name] Attestor name
                         * @property {string|null} [description] Attestor description
                         * @property {google.cloud.binaryauthorization.v1.IUserOwnedGrafeasNote|null} [userOwnedGrafeasNote] Attestor userOwnedGrafeasNote
                         * @property {google.protobuf.ITimestamp|null} [updateTime] Attestor updateTime
                         */
    
                        /**
                         * Constructs a new Attestor.
                         * @memberof google.cloud.binaryauthorization.v1
                         * @classdesc Represents an Attestor.
                         * @implements IAttestor
                         * @constructor
                         * @param {google.cloud.binaryauthorization.v1.IAttestor=} [properties] Properties to set
                         */
                        function Attestor(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * Attestor name.
                         * @member {string} name
                         * @memberof google.cloud.binaryauthorization.v1.Attestor
                         * @instance
                         */
                        Attestor.prototype.name = "";
    
                        /**
                         * Attestor description.
                         * @member {string} description
                         * @memberof google.cloud.binaryauthorization.v1.Attestor
                         * @instance
                         */
                        Attestor.prototype.description = "";
    
                        /**
                         * Attestor userOwnedGrafeasNote.
                         * @member {google.cloud.binaryauthorization.v1.IUserOwnedGrafeasNote|null|undefined} userOwnedGrafeasNote
                         * @memberof google.cloud.binaryauthorization.v1.Attestor
                         * @instance
                         */
                        Attestor.prototype.userOwnedGrafeasNote = null;
    
                        /**
                         * Attestor updateTime.
                         * @member {google.protobuf.ITimestamp|null|undefined} updateTime
                         * @memberof google.cloud.binaryauthorization.v1.Attestor
                         * @instance
                         */
                        Attestor.prototype.updateTime = null;
    
                        // OneOf field names bound to virtual getters and setters
                        var $oneOfFields;
    
                        /**
                         * Attestor attestorType.
                         * @member {"userOwnedGrafeasNote"|undefined} attestorType
                         * @memberof google.cloud.binaryauthorization.v1.Attestor
                         * @instance
                         */
                        Object.defineProperty(Attestor.prototype, "attestorType", {
                            get: $util.oneOfGetter($oneOfFields = ["userOwnedGrafeasNote"]),
                            set: $util.oneOfSetter($oneOfFields)
                        });
    
                        /**
                         * Creates a new Attestor instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.binaryauthorization.v1.Attestor
                         * @static
                         * @param {google.cloud.binaryauthorization.v1.IAttestor=} [properties] Properties to set
                         * @returns {google.cloud.binaryauthorization.v1.Attestor} Attestor instance
                         */
                        Attestor.create = function create(properties) {
                            return new Attestor(properties);
                        };
    
                        /**
                         * Encodes the specified Attestor message. Does not implicitly {@link google.cloud.binaryauthorization.v1.Attestor.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.binaryauthorization.v1.Attestor
                         * @static
                         * @param {google.cloud.binaryauthorization.v1.IAttestor} message Attestor message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        Attestor.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                            if (message.userOwnedGrafeasNote != null && Object.hasOwnProperty.call(message, "userOwnedGrafeasNote"))
                                $root.google.cloud.binaryauthorization.v1.UserOwnedGrafeasNote.encode(message.userOwnedGrafeasNote, writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();
                            if (message.updateTime != null && Object.hasOwnProperty.call(message, "updateTime"))
                                $root.google.protobuf.Timestamp.encode(message.updateTime, writer.uint32(/* id 4, wireType 2 =*/34).fork()).ldelim();
                            if (message.description != null && Object.hasOwnProperty.call(message, "description"))
                                writer.uint32(/* id 6, wireType 2 =*/50).string(message.description);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified Attestor message, length delimited. Does not implicitly {@link google.cloud.binaryauthorization.v1.Attestor.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.binaryauthorization.v1.Attestor
                         * @static
                         * @param {google.cloud.binaryauthorization.v1.IAttestor} message Attestor message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        Attestor.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes an Attestor message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.binaryauthorization.v1.Attestor
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.binaryauthorization.v1.Attestor} Attestor
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        Attestor.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.binaryauthorization.v1.Attestor();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.name = reader.string();
                                        break;
                                    }
                                case 6: {
                                        message.description = reader.string();
                                        break;
                                    }
                                case 3: {
                                        message.userOwnedGrafeasNote = $root.google.cloud.binaryauthorization.v1.UserOwnedGrafeasNote.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 4: {
                                        message.updateTime = $root.google.protobuf.Timestamp.decode(reader, reader.uint32());
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes an Attestor message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.binaryauthorization.v1.Attestor
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.binaryauthorization.v1.Attestor} Attestor
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        Attestor.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies an Attestor message.
                         * @function verify
                         * @memberof google.cloud.binaryauthorization.v1.Attestor
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        Attestor.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            var properties = {};
                            if (message.name != null && message.hasOwnProperty("name"))
                                if (!$util.isString(message.name))
                                    return "name: string expected";
                            if (message.description != null && message.hasOwnProperty("description"))
                                if (!$util.isString(message.description))
                                    return "description: string expected";
                            if (message.userOwnedGrafeasNote != null && message.hasOwnProperty("userOwnedGrafeasNote")) {
                                properties.attestorType = 1;
                                {
                                    var error = $root.google.cloud.binaryauthorization.v1.UserOwnedGrafeasNote.verify(message.userOwnedGrafeasNote);
                                    if (error)
                                        return "userOwnedGrafeasNote." + error;
                                }
                            }
                            if (message.updateTime != null && message.hasOwnProperty("updateTime")) {
                                var error = $root.google.protobuf.Timestamp.verify(message.updateTime);
                                if (error)
                                    return "updateTime." + error;
                            }
                            return null;
                        };
    
                        /**
                         * Creates an Attestor message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.binaryauthorization.v1.Attestor
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.binaryauthorization.v1.Attestor} Attestor
                         */
                        Attestor.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.binaryauthorization.v1.Attestor)
                                return object;
                            var message = new $root.google.cloud.binaryauthorization.v1.Attestor();
                            if (object.name != null)
                                message.name = String(object.name);
                            if (object.description != null)
                                message.description = String(object.description);
                            if (object.userOwnedGrafeasNote != null) {
                                if (typeof object.userOwnedGrafeasNote !== "object")
                                    throw TypeError(".google.cloud.binaryauthorization.v1.Attestor.userOwnedGrafeasNote: object expected");
                                message.userOwnedGrafeasNote = $root.google.cloud.binaryauthorization.v1.UserOwnedGrafeasNote.fromObject(object.userOwnedGrafeasNote);
                            }
                            if (object.updateTime != null) {
                                if (typeof object.updateTime !== "object")
                                    throw TypeError(".google.cloud.binaryauthorization.v1.Attestor.updateTime: object expected");
                                message.updateTime = $root.google.protobuf.Timestamp.fromObject(object.updateTime);
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from an Attestor message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.binaryauthorization.v1.Attestor
                         * @static
                         * @param {google.cloud.binaryauthorization.v1.Attestor} message Attestor
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        Attestor.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.name = "";
                                object.updateTime = null;
                                object.description = "";
                            }
                            if (message.name != null && message.hasOwnProperty("name"))
                                object.name = message.name;
                            if (message.userOwnedGrafeasNote != null && message.hasOwnProperty("userOwnedGrafeasNote")) {
                                object.userOwnedGrafeasNote = $root.google.cloud.binaryauthorization.v1.UserOwnedGrafeasNote.toObject(message.userOwnedGrafeasNote, options);
                                if (options.oneofs)
                                    object.attestorType = "userOwnedGrafeasNote";
                            }
                            if (message.updateTime != null && message.hasOwnProperty("updateTime"))
                                object.updateTime = $root.google.protobuf.Timestamp.toObject(message.updateTime, options);
                            if (message.description != null && message.hasOwnProperty("description"))
                                object.description = message.description;
                            return object;
                        };
    
                        /**
                         * Converts this Attestor to JSON.
                         * @function toJSON
                         * @memberof google.cloud.binaryauthorization.v1.Attestor
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        Attestor.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for Attestor
                         * @function getTypeUrl
                         * @memberof google.cloud.binaryauthorization.v1.Attestor
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        Attestor.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.binaryauthorization.v1.Attestor";
                        };
    
                        return Attestor;
                    })();
    
                    v1.UserOwnedGrafeasNote = (function() {
    
                        /**
                         * Properties of a UserOwnedGrafeasNote.
                         * @memberof google.cloud.binaryauthorization.v1
                         * @interface IUserOwnedGrafeasNote
                         * @property {string|null} [noteReference] UserOwnedGrafeasNote noteReference
                         * @property {Array.<google.cloud.binaryauthorization.v1.IAttestorPublicKey>|null} [publicKeys] UserOwnedGrafeasNote publicKeys
                         * @property {string|null} [delegationServiceAccountEmail] UserOwnedGrafeasNote delegationServiceAccountEmail
                         */
    
                        /**
                         * Constructs a new UserOwnedGrafeasNote.
                         * @memberof google.cloud.binaryauthorization.v1
                         * @classdesc Represents a UserOwnedGrafeasNote.
                         * @implements IUserOwnedGrafeasNote
                         * @constructor
                         * @param {google.cloud.binaryauthorization.v1.IUserOwnedGrafeasNote=} [properties] Properties to set
                         */
                        function UserOwnedGrafeasNote(properties) {
                            this.publicKeys = [];
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * UserOwnedGrafeasNote noteReference.
                         * @member {string} noteReference
                         * @memberof google.cloud.binaryauthorization.v1.UserOwnedGrafeasNote
                         * @instance
                         */
                        UserOwnedGrafeasNote.prototype.noteReference = "";
    
                        /**
                         * UserOwnedGrafeasNote publicKeys.
                         * @member {Array.<google.cloud.binaryauthorization.v1.IAttestorPublicKey>} publicKeys
                         * @memberof google.cloud.binaryauthorization.v1.UserOwnedGrafeasNote
                         * @instance
                         */
                        UserOwnedGrafeasNote.prototype.publicKeys = $util.emptyArray;
    
                        /**
                         * UserOwnedGrafeasNote delegationServiceAccountEmail.
                         * @member {string} delegationServiceAccountEmail
                         * @memberof google.cloud.binaryauthorization.v1.UserOwnedGrafeasNote
                         * @instance
                         */
                        UserOwnedGrafeasNote.prototype.delegationServiceAccountEmail = "";
    
                        /**
                         * Creates a new UserOwnedGrafeasNote instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.binaryauthorization.v1.UserOwnedGrafeasNote
                         * @static
                         * @param {google.cloud.binaryauthorization.v1.IUserOwnedGrafeasNote=} [properties] Properties to set
                         * @returns {google.cloud.binaryauthorization.v1.UserOwnedGrafeasNote} UserOwnedGrafeasNote instance
                         */
                        UserOwnedGrafeasNote.create = function create(properties) {
                            return new UserOwnedGrafeasNote(properties);
                        };
    
                        /**
                         * Encodes the specified UserOwnedGrafeasNote message. Does not implicitly {@link google.cloud.binaryauthorization.v1.UserOwnedGrafeasNote.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.binaryauthorization.v1.UserOwnedGrafeasNote
                         * @static
                         * @param {google.cloud.binaryauthorization.v1.IUserOwnedGrafeasNote} message UserOwnedGrafeasNote message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        UserOwnedGrafeasNote.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.noteReference != null && Object.hasOwnProperty.call(message, "noteReference"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.noteReference);
                            if (message.publicKeys != null && message.publicKeys.length)
                                for (var i = 0; i < message.publicKeys.length; ++i)
                                    $root.google.cloud.binaryauthorization.v1.AttestorPublicKey.encode(message.publicKeys[i], writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                            if (message.delegationServiceAccountEmail != null && Object.hasOwnProperty.call(message, "delegationServiceAccountEmail"))
                                writer.uint32(/* id 3, wireType 2 =*/26).string(message.delegationServiceAccountEmail);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified UserOwnedGrafeasNote message, length delimited. Does not implicitly {@link google.cloud.binaryauthorization.v1.UserOwnedGrafeasNote.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.binaryauthorization.v1.UserOwnedGrafeasNote
                         * @static
                         * @param {google.cloud.binaryauthorization.v1.IUserOwnedGrafeasNote} message UserOwnedGrafeasNote message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        UserOwnedGrafeasNote.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a UserOwnedGrafeasNote message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.binaryauthorization.v1.UserOwnedGrafeasNote
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.binaryauthorization.v1.UserOwnedGrafeasNote} UserOwnedGrafeasNote
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        UserOwnedGrafeasNote.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.binaryauthorization.v1.UserOwnedGrafeasNote();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.noteReference = reader.string();
                                        break;
                                    }
                                case 2: {
                                        if (!(message.publicKeys && message.publicKeys.length))
                                            message.publicKeys = [];
                                        message.publicKeys.push($root.google.cloud.binaryauthorization.v1.AttestorPublicKey.decode(reader, reader.uint32()));
                                        break;
                                    }
                                case 3: {
                                        message.delegationServiceAccountEmail = reader.string();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a UserOwnedGrafeasNote message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.binaryauthorization.v1.UserOwnedGrafeasNote
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.binaryauthorization.v1.UserOwnedGrafeasNote} UserOwnedGrafeasNote
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        UserOwnedGrafeasNote.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a UserOwnedGrafeasNote message.
                         * @function verify
                         * @memberof google.cloud.binaryauthorization.v1.UserOwnedGrafeasNote
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        UserOwnedGrafeasNote.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.noteReference != null && message.hasOwnProperty("noteReference"))
                                if (!$util.isString(message.noteReference))
                                    return "noteReference: string expected";
                            if (message.publicKeys != null && message.hasOwnProperty("publicKeys")) {
                                if (!Array.isArray(message.publicKeys))
                                    return "publicKeys: array expected";
                                for (var i = 0; i < message.publicKeys.length; ++i) {
                                    var error = $root.google.cloud.binaryauthorization.v1.AttestorPublicKey.verify(message.publicKeys[i]);
                                    if (error)
                                        return "publicKeys." + error;
                                }
                            }
                            if (message.delegationServiceAccountEmail != null && message.hasOwnProperty("delegationServiceAccountEmail"))
                                if (!$util.isString(message.delegationServiceAccountEmail))
                                    return "delegationServiceAccountEmail: string expected";
                            return null;
                        };
    
                        /**
                         * Creates a UserOwnedGrafeasNote message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.binaryauthorization.v1.UserOwnedGrafeasNote
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.binaryauthorization.v1.UserOwnedGrafeasNote} UserOwnedGrafeasNote
                         */
                        UserOwnedGrafeasNote.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.binaryauthorization.v1.UserOwnedGrafeasNote)
                                return object;
                            var message = new $root.google.cloud.binaryauthorization.v1.UserOwnedGrafeasNote();
                            if (object.noteReference != null)
                                message.noteReference = String(object.noteReference);
                            if (object.publicKeys) {
                                if (!Array.isArray(object.publicKeys))
                                    throw TypeError(".google.cloud.binaryauthorization.v1.UserOwnedGrafeasNote.publicKeys: array expected");
                                message.publicKeys = [];
                                for (var i = 0; i < object.publicKeys.length; ++i) {
                                    if (typeof object.publicKeys[i] !== "object")
                                        throw TypeError(".google.cloud.binaryauthorization.v1.UserOwnedGrafeasNote.publicKeys: object expected");
                                    message.publicKeys[i] = $root.google.cloud.binaryauthorization.v1.AttestorPublicKey.fromObject(object.publicKeys[i]);
                                }
                            }
                            if (object.delegationServiceAccountEmail != null)
                                message.delegationServiceAccountEmail = String(object.delegationServiceAccountEmail);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a UserOwnedGrafeasNote message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.binaryauthorization.v1.UserOwnedGrafeasNote
                         * @static
                         * @param {google.cloud.binaryauthorization.v1.UserOwnedGrafeasNote} message UserOwnedGrafeasNote
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        UserOwnedGrafeasNote.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.arrays || options.defaults)
                                object.publicKeys = [];
                            if (options.defaults) {
                                object.noteReference = "";
                                object.delegationServiceAccountEmail = "";
                            }
                            if (message.noteReference != null && message.hasOwnProperty("noteReference"))
                                object.noteReference = message.noteReference;
                            if (message.publicKeys && message.publicKeys.length) {
                                object.publicKeys = [];
                                for (var j = 0; j < message.publicKeys.length; ++j)
                                    object.publicKeys[j] = $root.google.cloud.binaryauthorization.v1.AttestorPublicKey.toObject(message.publicKeys[j], options);
                            }
                            if (message.delegationServiceAccountEmail != null && message.hasOwnProperty("delegationServiceAccountEmail"))
                                object.delegationServiceAccountEmail = message.delegationServiceAccountEmail;
                            return object;
                        };
    
                        /**
                         * Converts this UserOwnedGrafeasNote to JSON.
                         * @function toJSON
                         * @memberof google.cloud.binaryauthorization.v1.UserOwnedGrafeasNote
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        UserOwnedGrafeasNote.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for UserOwnedGrafeasNote
                         * @function getTypeUrl
                         * @memberof google.cloud.binaryauthorization.v1.UserOwnedGrafeasNote
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        UserOwnedGrafeasNote.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.binaryauthorization.v1.UserOwnedGrafeasNote";
                        };
    
                        return UserOwnedGrafeasNote;
                    })();
    
                    v1.PkixPublicKey = (function() {
    
                        /**
                         * Properties of a PkixPublicKey.
                         * @memberof google.cloud.binaryauthorization.v1
                         * @interface IPkixPublicKey
                         * @property {string|null} [publicKeyPem] PkixPublicKey publicKeyPem
                         * @property {google.cloud.binaryauthorization.v1.PkixPublicKey.SignatureAlgorithm|null} [signatureAlgorithm] PkixPublicKey signatureAlgorithm
                         */
    
                        /**
                         * Constructs a new PkixPublicKey.
                         * @memberof google.cloud.binaryauthorization.v1
                         * @classdesc Represents a PkixPublicKey.
                         * @implements IPkixPublicKey
                         * @constructor
                         * @param {google.cloud.binaryauthorization.v1.IPkixPublicKey=} [properties] Properties to set
                         */
                        function PkixPublicKey(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * PkixPublicKey publicKeyPem.
                         * @member {string} publicKeyPem
                         * @memberof google.cloud.binaryauthorization.v1.PkixPublicKey
                         * @instance
                         */
                        PkixPublicKey.prototype.publicKeyPem = "";
    
                        /**
                         * PkixPublicKey signatureAlgorithm.
                         * @member {google.cloud.binaryauthorization.v1.PkixPublicKey.SignatureAlgorithm} signatureAlgorithm
                         * @memberof google.cloud.binaryauthorization.v1.PkixPublicKey
                         * @instance
                         */
                        PkixPublicKey.prototype.signatureAlgorithm = 0;
    
                        /**
                         * Creates a new PkixPublicKey instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.binaryauthorization.v1.PkixPublicKey
                         * @static
                         * @param {google.cloud.binaryauthorization.v1.IPkixPublicKey=} [properties] Properties to set
                         * @returns {google.cloud.binaryauthorization.v1.PkixPublicKey} PkixPublicKey instance
                         */
                        PkixPublicKey.create = function create(properties) {
                            return new PkixPublicKey(properties);
                        };
    
                        /**
                         * Encodes the specified PkixPublicKey message. Does not implicitly {@link google.cloud.binaryauthorization.v1.PkixPublicKey.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.binaryauthorization.v1.PkixPublicKey
                         * @static
                         * @param {google.cloud.binaryauthorization.v1.IPkixPublicKey} message PkixPublicKey message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        PkixPublicKey.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.publicKeyPem != null && Object.hasOwnProperty.call(message, "publicKeyPem"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.publicKeyPem);
                            if (message.signatureAlgorithm != null && Object.hasOwnProperty.call(message, "signatureAlgorithm"))
                                writer.uint32(/* id 2, wireType 0 =*/16).int32(message.signatureAlgorithm);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified PkixPublicKey message, length delimited. Does not implicitly {@link google.cloud.binaryauthorization.v1.PkixPublicKey.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.binaryauthorization.v1.PkixPublicKey
                         * @static
                         * @param {google.cloud.binaryauthorization.v1.IPkixPublicKey} message PkixPublicKey message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        PkixPublicKey.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a PkixPublicKey message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.binaryauthorization.v1.PkixPublicKey
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.binaryauthorization.v1.PkixPublicKey} PkixPublicKey
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        PkixPublicKey.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.binaryauthorization.v1.PkixPublicKey();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.publicKeyPem = reader.string();
                                        break;
                                    }
                                case 2: {
                                        message.signatureAlgorithm = reader.int32();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a PkixPublicKey message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.binaryauthorization.v1.PkixPublicKey
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.binaryauthorization.v1.PkixPublicKey} PkixPublicKey
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        PkixPublicKey.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a PkixPublicKey message.
                         * @function verify
                         * @memberof google.cloud.binaryauthorization.v1.PkixPublicKey
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        PkixPublicKey.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.publicKeyPem != null && message.hasOwnProperty("publicKeyPem"))
                                if (!$util.isString(message.publicKeyPem))
                                    return "publicKeyPem: string expected";
                            if (message.signatureAlgorithm != null && message.hasOwnProperty("signatureAlgorithm"))
                                switch (message.signatureAlgorithm) {
                                default:
                                    return "signatureAlgorithm: enum value expected";
                                case 0:
                                case 1:
                                case 2:
                                case 3:
                                case 4:
                                case 5:
                                case 6:
                                case 7:
                                case 8:
                                case 9:
                                case 9:
                                case 10:
                                case 10:
                                case 11:
                                case 11:
                                    break;
                                }
                            return null;
                        };
    
                        /**
                         * Creates a PkixPublicKey message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.binaryauthorization.v1.PkixPublicKey
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.binaryauthorization.v1.PkixPublicKey} PkixPublicKey
                         */
                        PkixPublicKey.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.binaryauthorization.v1.PkixPublicKey)
                                return object;
                            var message = new $root.google.cloud.binaryauthorization.v1.PkixPublicKey();
                            if (object.publicKeyPem != null)
                                message.publicKeyPem = String(object.publicKeyPem);
                            switch (object.signatureAlgorithm) {
                            default:
                                if (typeof object.signatureAlgorithm === "number") {
                                    message.signatureAlgorithm = object.signatureAlgorithm;
                                    break;
                                }
                                break;
                            case "SIGNATURE_ALGORITHM_UNSPECIFIED":
                            case 0:
                                message.signatureAlgorithm = 0;
                                break;
                            case "RSA_PSS_2048_SHA256":
                            case 1:
                                message.signatureAlgorithm = 1;
                                break;
                            case "RSA_PSS_3072_SHA256":
                            case 2:
                                message.signatureAlgorithm = 2;
                                break;
                            case "RSA_PSS_4096_SHA256":
                            case 3:
                                message.signatureAlgorithm = 3;
                                break;
                            case "RSA_PSS_4096_SHA512":
                            case 4:
                                message.signatureAlgorithm = 4;
                                break;
                            case "RSA_SIGN_PKCS1_2048_SHA256":
                            case 5:
                                message.signatureAlgorithm = 5;
                                break;
                            case "RSA_SIGN_PKCS1_3072_SHA256":
                            case 6:
                                message.signatureAlgorithm = 6;
                                break;
                            case "RSA_SIGN_PKCS1_4096_SHA256":
                            case 7:
                                message.signatureAlgorithm = 7;
                                break;
                            case "RSA_SIGN_PKCS1_4096_SHA512":
                            case 8:
                                message.signatureAlgorithm = 8;
                                break;
                            case "ECDSA_P256_SHA256":
                            case 9:
                                message.signatureAlgorithm = 9;
                                break;
                            case "EC_SIGN_P256_SHA256":
                            case 9:
                                message.signatureAlgorithm = 9;
                                break;
                            case "ECDSA_P384_SHA384":
                            case 10:
                                message.signatureAlgorithm = 10;
                                break;
                            case "EC_SIGN_P384_SHA384":
                            case 10:
                                message.signatureAlgorithm = 10;
                                break;
                            case "ECDSA_P521_SHA512":
                            case 11:
                                message.signatureAlgorithm = 11;
                                break;
                            case "EC_SIGN_P521_SHA512":
                            case 11:
                                message.signatureAlgorithm = 11;
                                break;
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a PkixPublicKey message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.binaryauthorization.v1.PkixPublicKey
                         * @static
                         * @param {google.cloud.binaryauthorization.v1.PkixPublicKey} message PkixPublicKey
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        PkixPublicKey.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.publicKeyPem = "";
                                object.signatureAlgorithm = options.enums === String ? "SIGNATURE_ALGORITHM_UNSPECIFIED" : 0;
                            }
                            if (message.publicKeyPem != null && message.hasOwnProperty("publicKeyPem"))
                                object.publicKeyPem = message.publicKeyPem;
                            if (message.signatureAlgorithm != null && message.hasOwnProperty("signatureAlgorithm"))
                                object.signatureAlgorithm = options.enums === String ? $root.google.cloud.binaryauthorization.v1.PkixPublicKey.SignatureAlgorithm[message.signatureAlgorithm] === undefined ? message.signatureAlgorithm : $root.google.cloud.binaryauthorization.v1.PkixPublicKey.SignatureAlgorithm[message.signatureAlgorithm] : message.signatureAlgorithm;
                            return object;
                        };
    
                        /**
                         * Converts this PkixPublicKey to JSON.
                         * @function toJSON
                         * @memberof google.cloud.binaryauthorization.v1.PkixPublicKey
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        PkixPublicKey.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for PkixPublicKey
                         * @function getTypeUrl
                         * @memberof google.cloud.binaryauthorization.v1.PkixPublicKey
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        PkixPublicKey.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.binaryauthorization.v1.PkixPublicKey";
                        };
    
                        /**
                         * SignatureAlgorithm enum.
                         * @name google.cloud.binaryauthorization.v1.PkixPublicKey.SignatureAlgorithm
                         * @enum {number}
                         * @property {number} SIGNATURE_ALGORITHM_UNSPECIFIED=0 SIGNATURE_ALGORITHM_UNSPECIFIED value
                         * @property {number} RSA_PSS_2048_SHA256=1 RSA_PSS_2048_SHA256 value
                         * @property {number} RSA_PSS_3072_SHA256=2 RSA_PSS_3072_SHA256 value
                         * @property {number} RSA_PSS_4096_SHA256=3 RSA_PSS_4096_SHA256 value
                         * @property {number} RSA_PSS_4096_SHA512=4 RSA_PSS_4096_SHA512 value
                         * @property {number} RSA_SIGN_PKCS1_2048_SHA256=5 RSA_SIGN_PKCS1_2048_SHA256 value
                         * @property {number} RSA_SIGN_PKCS1_3072_SHA256=6 RSA_SIGN_PKCS1_3072_SHA256 value
                         * @property {number} RSA_SIGN_PKCS1_4096_SHA256=7 RSA_SIGN_PKCS1_4096_SHA256 value
                         * @property {number} RSA_SIGN_PKCS1_4096_SHA512=8 RSA_SIGN_PKCS1_4096_SHA512 value
                         * @property {number} ECDSA_P256_SHA256=9 ECDSA_P256_SHA256 value
                         * @property {number} EC_SIGN_P256_SHA256=9 EC_SIGN_P256_SHA256 value
                         * @property {number} ECDSA_P384_SHA384=10 ECDSA_P384_SHA384 value
                         * @property {number} EC_SIGN_P384_SHA384=10 EC_SIGN_P384_SHA384 value
                         * @property {number} ECDSA_P521_SHA512=11 ECDSA_P521_SHA512 value
                         * @property {number} EC_SIGN_P521_SHA512=11 EC_SIGN_P521_SHA512 value
                         */
                        PkixPublicKey.SignatureAlgorithm = (function() {
                            var valuesById = {}, values = Object.create(valuesById);
                            values[valuesById[0] = "SIGNATURE_ALGORITHM_UNSPECIFIED"] = 0;
                            values[valuesById[1] = "RSA_PSS_2048_SHA256"] = 1;
                            values[valuesById[2] = "RSA_PSS_3072_SHA256"] = 2;
                            values[valuesById[3] = "RSA_PSS_4096_SHA256"] = 3;
                            values[valuesById[4] = "RSA_PSS_4096_SHA512"] = 4;
                            values[valuesById[5] = "RSA_SIGN_PKCS1_2048_SHA256"] = 5;
                            values[valuesById[6] = "RSA_SIGN_PKCS1_3072_SHA256"] = 6;
                            values[valuesById[7] = "RSA_SIGN_PKCS1_4096_SHA256"] = 7;
                            values[valuesById[8] = "RSA_SIGN_PKCS1_4096_SHA512"] = 8;
                            values[valuesById[9] = "ECDSA_P256_SHA256"] = 9;
                            values["EC_SIGN_P256_SHA256"] = 9;
                            values[valuesById[10] = "ECDSA_P384_SHA384"] = 10;
                            values["EC_SIGN_P384_SHA384"] = 10;
                            values[valuesById[11] = "ECDSA_P521_SHA512"] = 11;
                            values["EC_SIGN_P521_SHA512"] = 11;
                            return values;
                        })();
    
                        return PkixPublicKey;
                    })();
    
                    v1.AttestorPublicKey = (function() {
    
                        /**
                         * Properties of an AttestorPublicKey.
                         * @memberof google.cloud.binaryauthorization.v1
                         * @interface IAttestorPublicKey
                         * @property {string|null} [comment] AttestorPublicKey comment
                         * @property {string|null} [id] AttestorPublicKey id
                         * @property {string|null} [asciiArmoredPgpPublicKey] AttestorPublicKey asciiArmoredPgpPublicKey
                         * @property {google.cloud.binaryauthorization.v1.IPkixPublicKey|null} [pkixPublicKey] AttestorPublicKey pkixPublicKey
                         */
    
                        /**
                         * Constructs a new AttestorPublicKey.
                         * @memberof google.cloud.binaryauthorization.v1
                         * @classdesc Represents an AttestorPublicKey.
                         * @implements IAttestorPublicKey
                         * @constructor
                         * @param {google.cloud.binaryauthorization.v1.IAttestorPublicKey=} [properties] Properties to set
                         */
                        function AttestorPublicKey(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * AttestorPublicKey comment.
                         * @member {string} comment
                         * @memberof google.cloud.binaryauthorization.v1.AttestorPublicKey
                         * @instance
                         */
                        AttestorPublicKey.prototype.comment = "";
    
                        /**
                         * AttestorPublicKey id.
                         * @member {string} id
                         * @memberof google.cloud.binaryauthorization.v1.AttestorPublicKey
                         * @instance
                         */
                        AttestorPublicKey.prototype.id = "";
    
                        /**
                         * AttestorPublicKey asciiArmoredPgpPublicKey.
                         * @member {string|null|undefined} asciiArmoredPgpPublicKey
                         * @memberof google.cloud.binaryauthorization.v1.AttestorPublicKey
                         * @instance
                         */
                        AttestorPublicKey.prototype.asciiArmoredPgpPublicKey = null;
    
                        /**
                         * AttestorPublicKey pkixPublicKey.
                         * @member {google.cloud.binaryauthorization.v1.IPkixPublicKey|null|undefined} pkixPublicKey
                         * @memberof google.cloud.binaryauthorization.v1.AttestorPublicKey
                         * @instance
                         */
                        AttestorPublicKey.prototype.pkixPublicKey = null;
    
                        // OneOf field names bound to virtual getters and setters
                        var $oneOfFields;
    
                        /**
                         * AttestorPublicKey publicKey.
                         * @member {"asciiArmoredPgpPublicKey"|"pkixPublicKey"|undefined} publicKey
                         * @memberof google.cloud.binaryauthorization.v1.AttestorPublicKey
                         * @instance
                         */
                        Object.defineProperty(AttestorPublicKey.prototype, "publicKey", {
                            get: $util.oneOfGetter($oneOfFields = ["asciiArmoredPgpPublicKey", "pkixPublicKey"]),
                            set: $util.oneOfSetter($oneOfFields)
                        });
    
                        /**
                         * Creates a new AttestorPublicKey instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.binaryauthorization.v1.AttestorPublicKey
                         * @static
                         * @param {google.cloud.binaryauthorization.v1.IAttestorPublicKey=} [properties] Properties to set
                         * @returns {google.cloud.binaryauthorization.v1.AttestorPublicKey} AttestorPublicKey instance
                         */
                        AttestorPublicKey.create = function create(properties) {
                            return new AttestorPublicKey(properties);
                        };
    
                        /**
                         * Encodes the specified AttestorPublicKey message. Does not implicitly {@link google.cloud.binaryauthorization.v1.AttestorPublicKey.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.binaryauthorization.v1.AttestorPublicKey
                         * @static
                         * @param {google.cloud.binaryauthorization.v1.IAttestorPublicKey} message AttestorPublicKey message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        AttestorPublicKey.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.comment != null && Object.hasOwnProperty.call(message, "comment"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.comment);
                            if (message.id != null && Object.hasOwnProperty.call(message, "id"))
                                writer.uint32(/* id 2, wireType 2 =*/18).string(message.id);
                            if (message.asciiArmoredPgpPublicKey != null && Object.hasOwnProperty.call(message, "asciiArmoredPgpPublicKey"))
                                writer.uint32(/* id 3, wireType 2 =*/26).string(message.asciiArmoredPgpPublicKey);
                            if (message.pkixPublicKey != null && Object.hasOwnProperty.call(message, "pkixPublicKey"))
                                $root.google.cloud.binaryauthorization.v1.PkixPublicKey.encode(message.pkixPublicKey, writer.uint32(/* id 5, wireType 2 =*/42).fork()).ldelim();
                            return writer;
                        };
    
                        /**
                         * Encodes the specified AttestorPublicKey message, length delimited. Does not implicitly {@link google.cloud.binaryauthorization.v1.AttestorPublicKey.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.binaryauthorization.v1.AttestorPublicKey
                         * @static
                         * @param {google.cloud.binaryauthorization.v1.IAttestorPublicKey} message AttestorPublicKey message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        AttestorPublicKey.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes an AttestorPublicKey message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.binaryauthorization.v1.AttestorPublicKey
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.binaryauthorization.v1.AttestorPublicKey} AttestorPublicKey
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        AttestorPublicKey.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.binaryauthorization.v1.AttestorPublicKey();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.comment = reader.string();
                                        break;
                                    }
                                case 2: {
                                        message.id = reader.string();
                                        break;
                                    }
                                case 3: {
                                        message.asciiArmoredPgpPublicKey = reader.string();
                                        break;
                                    }
                                case 5: {
                                        message.pkixPublicKey = $root.google.cloud.binaryauthorization.v1.PkixPublicKey.decode(reader, reader.uint32());
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes an AttestorPublicKey message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.binaryauthorization.v1.AttestorPublicKey
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.binaryauthorization.v1.AttestorPublicKey} AttestorPublicKey
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        AttestorPublicKey.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies an AttestorPublicKey message.
                         * @function verify
                         * @memberof google.cloud.binaryauthorization.v1.AttestorPublicKey
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        AttestorPublicKey.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            var properties = {};
                            if (message.comment != null && message.hasOwnProperty("comment"))
                                if (!$util.isString(message.comment))
                                    return "comment: string expected";
                            if (message.id != null && message.hasOwnProperty("id"))
                                if (!$util.isString(message.id))
                                    return "id: string expected";
                            if (message.asciiArmoredPgpPublicKey != null && message.hasOwnProperty("asciiArmoredPgpPublicKey")) {
                                properties.publicKey = 1;
                                if (!$util.isString(message.asciiArmoredPgpPublicKey))
                                    return "asciiArmoredPgpPublicKey: string expected";
                            }
                            if (message.pkixPublicKey != null && message.hasOwnProperty("pkixPublicKey")) {
                                if (properties.publicKey === 1)
                                    return "publicKey: multiple values";
                                properties.publicKey = 1;
                                {
                                    var error = $root.google.cloud.binaryauthorization.v1.PkixPublicKey.verify(message.pkixPublicKey);
                                    if (error)
                                        return "pkixPublicKey." + error;
                                }
                            }
                            return null;
                        };
    
                        /**
                         * Creates an AttestorPublicKey message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.binaryauthorization.v1.AttestorPublicKey
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.binaryauthorization.v1.AttestorPublicKey} AttestorPublicKey
                         */
                        AttestorPublicKey.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.binaryauthorization.v1.AttestorPublicKey)
                                return object;
                            var message = new $root.google.cloud.binaryauthorization.v1.AttestorPublicKey();
                            if (object.comment != null)
                                message.comment = String(object.comment);
                            if (object.id != null)
                                message.id = String(object.id);
                            if (object.asciiArmoredPgpPublicKey != null)
                                message.asciiArmoredPgpPublicKey = String(object.asciiArmoredPgpPublicKey);
                            if (object.pkixPublicKey != null) {
                                if (typeof object.pkixPublicKey !== "object")
                                    throw TypeError(".google.cloud.binaryauthorization.v1.AttestorPublicKey.pkixPublicKey: object expected");
                                message.pkixPublicKey = $root.google.cloud.binaryauthorization.v1.PkixPublicKey.fromObject(object.pkixPublicKey);
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from an AttestorPublicKey message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.binaryauthorization.v1.AttestorPublicKey
                         * @static
                         * @param {google.cloud.binaryauthorization.v1.AttestorPublicKey} message AttestorPublicKey
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        AttestorPublicKey.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.comment = "";
                                object.id = "";
                            }
                            if (message.comment != null && message.hasOwnProperty("comment"))
                                object.comment = message.comment;
                            if (message.id != null && message.hasOwnProperty("id"))
                                object.id = message.id;
                            if (message.asciiArmoredPgpPublicKey != null && message.hasOwnProperty("asciiArmoredPgpPublicKey")) {
                                object.asciiArmoredPgpPublicKey = message.asciiArmoredPgpPublicKey;
                                if (options.oneofs)
                                    object.publicKey = "asciiArmoredPgpPublicKey";
                            }
                            if (message.pkixPublicKey != null && message.hasOwnProperty("pkixPublicKey")) {
                                object.pkixPublicKey = $root.google.cloud.binaryauthorization.v1.PkixPublicKey.toObject(message.pkixPublicKey, options);
                                if (options.oneofs)
                                    object.publicKey = "pkixPublicKey";
                            }
                            return object;
                        };
    
                        /**
                         * Converts this AttestorPublicKey to JSON.
                         * @function toJSON
                         * @memberof google.cloud.binaryauthorization.v1.AttestorPublicKey
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        AttestorPublicKey.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for AttestorPublicKey
                         * @function getTypeUrl
                         * @memberof google.cloud.binaryauthorization.v1.AttestorPublicKey
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        AttestorPublicKey.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.binaryauthorization.v1.AttestorPublicKey";
                        };
    
                        return AttestorPublicKey;
                    })();
    
                    v1.BinauthzManagementServiceV1 = (function() {
    
                        /**
                         * Constructs a new BinauthzManagementServiceV1 service.
                         * @memberof google.cloud.binaryauthorization.v1
                         * @classdesc Represents a BinauthzManagementServiceV1
                         * @extends $protobuf.rpc.Service
                         * @constructor
                         * @param {$protobuf.RPCImpl} rpcImpl RPC implementation
                         * @param {boolean} [requestDelimited=false] Whether requests are length-delimited
                         * @param {boolean} [responseDelimited=false] Whether responses are length-delimited
                         */
                        function BinauthzManagementServiceV1(rpcImpl, requestDelimited, responseDelimited) {
                            $protobuf.rpc.Service.call(this, rpcImpl, requestDelimited, responseDelimited);
                        }
    
                        (BinauthzManagementServiceV1.prototype = Object.create($protobuf.rpc.Service.prototype)).constructor = BinauthzManagementServiceV1;
    
                        /**
                         * Creates new BinauthzManagementServiceV1 service using the specified rpc implementation.
                         * @function create
                         * @memberof google.cloud.binaryauthorization.v1.BinauthzManagementServiceV1
                         * @static
                         * @param {$protobuf.RPCImpl} rpcImpl RPC implementation
                         * @param {boolean} [requestDelimited=false] Whether requests are length-delimited
                         * @param {boolean} [responseDelimited=false] Whether responses are length-delimited
                         * @returns {BinauthzManagementServiceV1} RPC service. Useful where requests and/or responses are streamed.
                         */
                        BinauthzManagementServiceV1.create = function create(rpcImpl, requestDelimited, responseDelimited) {
                            return new this(rpcImpl, requestDelimited, responseDelimited);
                        };
    
                        /**
                         * Callback as used by {@link google.cloud.binaryauthorization.v1.BinauthzManagementServiceV1|getPolicy}.
                         * @memberof google.cloud.binaryauthorization.v1.BinauthzManagementServiceV1
                         * @typedef GetPolicyCallback
                         * @type {function}
                         * @param {Error|null} error Error, if any
                         * @param {google.cloud.binaryauthorization.v1.Policy} [response] Policy
                         */
    
                        /**
                         * Calls GetPolicy.
                         * @function getPolicy
                         * @memberof google.cloud.binaryauthorization.v1.BinauthzManagementServiceV1
                         * @instance
                         * @param {google.cloud.binaryauthorization.v1.IGetPolicyRequest} request GetPolicyRequest message or plain object
                         * @param {google.cloud.binaryauthorization.v1.BinauthzManagementServiceV1.GetPolicyCallback} callback Node-style callback called with the error, if any, and Policy
                         * @returns {undefined}
                         * @variation 1
                         */
                        Object.defineProperty(BinauthzManagementServiceV1.prototype.getPolicy = function getPolicy(request, callback) {
                            return this.rpcCall(getPolicy, $root.google.cloud.binaryauthorization.v1.GetPolicyRequest, $root.google.cloud.binaryauthorization.v1.Policy, request, callback);
                        }, "name", { value: "GetPolicy" });
    
                        /**
                         * Calls GetPolicy.
                         * @function getPolicy
                         * @memberof google.cloud.binaryauthorization.v1.BinauthzManagementServiceV1
                         * @instance
                         * @param {google.cloud.binaryauthorization.v1.IGetPolicyRequest} request GetPolicyRequest message or plain object
                         * @returns {Promise<google.cloud.binaryauthorization.v1.Policy>} Promise
                         * @variation 2
                         */
    
                        /**
                         * Callback as used by {@link google.cloud.binaryauthorization.v1.BinauthzManagementServiceV1|updatePolicy}.
                         * @memberof google.cloud.binaryauthorization.v1.BinauthzManagementServiceV1
                         * @typedef UpdatePolicyCallback
                         * @type {function}
                         * @param {Error|null} error Error, if any
                         * @param {google.cloud.binaryauthorization.v1.Policy} [response] Policy
                         */
    
                        /**
                         * Calls UpdatePolicy.
                         * @function updatePolicy
                         * @memberof google.cloud.binaryauthorization.v1.BinauthzManagementServiceV1
                         * @instance
                         * @param {google.cloud.binaryauthorization.v1.IUpdatePolicyRequest} request UpdatePolicyRequest message or plain object
                         * @param {google.cloud.binaryauthorization.v1.BinauthzManagementServiceV1.UpdatePolicyCallback} callback Node-style callback called with the error, if any, and Policy
                         * @returns {undefined}
                         * @variation 1
                         */
                        Object.defineProperty(BinauthzManagementServiceV1.prototype.updatePolicy = function updatePolicy(request, callback) {
                            return this.rpcCall(updatePolicy, $root.google.cloud.binaryauthorization.v1.UpdatePolicyRequest, $root.google.cloud.binaryauthorization.v1.Policy, request, callback);
                        }, "name", { value: "UpdatePolicy" });
    
                        /**
                         * Calls UpdatePolicy.
                         * @function updatePolicy
                         * @memberof google.cloud.binaryauthorization.v1.BinauthzManagementServiceV1
                         * @instance
                         * @param {google.cloud.binaryauthorization.v1.IUpdatePolicyRequest} request UpdatePolicyRequest message or plain object
                         * @returns {Promise<google.cloud.binaryauthorization.v1.Policy>} Promise
                         * @variation 2
                         */
    
                        /**
                         * Callback as used by {@link google.cloud.binaryauthorization.v1.BinauthzManagementServiceV1|createAttestor}.
                         * @memberof google.cloud.binaryauthorization.v1.BinauthzManagementServiceV1
                         * @typedef CreateAttestorCallback
                         * @type {function}
                         * @param {Error|null} error Error, if any
                         * @param {google.cloud.binaryauthorization.v1.Attestor} [response] Attestor
                         */
    
                        /**
                         * Calls CreateAttestor.
                         * @function createAttestor
                         * @memberof google.cloud.binaryauthorization.v1.BinauthzManagementServiceV1
                         * @instance
                         * @param {google.cloud.binaryauthorization.v1.ICreateAttestorRequest} request CreateAttestorRequest message or plain object
                         * @param {google.cloud.binaryauthorization.v1.BinauthzManagementServiceV1.CreateAttestorCallback} callback Node-style callback called with the error, if any, and Attestor
                         * @returns {undefined}
                         * @variation 1
                         */
                        Object.defineProperty(BinauthzManagementServiceV1.prototype.createAttestor = function createAttestor(request, callback) {
                            return this.rpcCall(createAttestor, $root.google.cloud.binaryauthorization.v1.CreateAttestorRequest, $root.google.cloud.binaryauthorization.v1.Attestor, request, callback);
                        }, "name", { value: "CreateAttestor" });
    
                        /**
                         * Calls CreateAttestor.
                         * @function createAttestor
                         * @memberof google.cloud.binaryauthorization.v1.BinauthzManagementServiceV1
                         * @instance
                         * @param {google.cloud.binaryauthorization.v1.ICreateAttestorRequest} request CreateAttestorRequest message or plain object
                         * @returns {Promise<google.cloud.binaryauthorization.v1.Attestor>} Promise
                         * @variation 2
                         */
    
                        /**
                         * Callback as used by {@link google.cloud.binaryauthorization.v1.BinauthzManagementServiceV1|getAttestor}.
                         * @memberof google.cloud.binaryauthorization.v1.BinauthzManagementServiceV1
                         * @typedef GetAttestorCallback
                         * @type {function}
                         * @param {Error|null} error Error, if any
                         * @param {google.cloud.binaryauthorization.v1.Attestor} [response] Attestor
                         */
    
                        /**
                         * Calls GetAttestor.
                         * @function getAttestor
                         * @memberof google.cloud.binaryauthorization.v1.BinauthzManagementServiceV1
                         * @instance
                         * @param {google.cloud.binaryauthorization.v1.IGetAttestorRequest} request GetAttestorRequest message or plain object
                         * @param {google.cloud.binaryauthorization.v1.BinauthzManagementServiceV1.GetAttestorCallback} callback Node-style callback called with the error, if any, and Attestor
                         * @returns {undefined}
                         * @variation 1
                         */
                        Object.defineProperty(BinauthzManagementServiceV1.prototype.getAttestor = function getAttestor(request, callback) {
                            return this.rpcCall(getAttestor, $root.google.cloud.binaryauthorization.v1.GetAttestorRequest, $root.google.cloud.binaryauthorization.v1.Attestor, request, callback);
                        }, "name", { value: "GetAttestor" });
    
                        /**
                         * Calls GetAttestor.
                         * @function getAttestor
                         * @memberof google.cloud.binaryauthorization.v1.BinauthzManagementServiceV1
                         * @instance
                         * @param {google.cloud.binaryauthorization.v1.IGetAttestorRequest} request GetAttestorRequest message or plain object
                         * @returns {Promise<google.cloud.binaryauthorization.v1.Attestor>} Promise
                         * @variation 2
                         */
    
                        /**
                         * Callback as used by {@link google.cloud.binaryauthorization.v1.BinauthzManagementServiceV1|updateAttestor}.
                         * @memberof google.cloud.binaryauthorization.v1.BinauthzManagementServiceV1
                         * @typedef UpdateAttestorCallback
                         * @type {function}
                         * @param {Error|null} error Error, if any
                         * @param {google.cloud.binaryauthorization.v1.Attestor} [response] Attestor
                         */
    
                        /**
                         * Calls UpdateAttestor.
                         * @function updateAttestor
                         * @memberof google.cloud.binaryauthorization.v1.BinauthzManagementServiceV1
                         * @instance
                         * @param {google.cloud.binaryauthorization.v1.IUpdateAttestorRequest} request UpdateAttestorRequest message or plain object
                         * @param {google.cloud.binaryauthorization.v1.BinauthzManagementServiceV1.UpdateAttestorCallback} callback Node-style callback called with the error, if any, and Attestor
                         * @returns {undefined}
                         * @variation 1
                         */
                        Object.defineProperty(BinauthzManagementServiceV1.prototype.updateAttestor = function updateAttestor(request, callback) {
                            return this.rpcCall(updateAttestor, $root.google.cloud.binaryauthorization.v1.UpdateAttestorRequest, $root.google.cloud.binaryauthorization.v1.Attestor, request, callback);
                        }, "name", { value: "UpdateAttestor" });
    
                        /**
                         * Calls UpdateAttestor.
                         * @function updateAttestor
                         * @memberof google.cloud.binaryauthorization.v1.BinauthzManagementServiceV1
                         * @instance
                         * @param {google.cloud.binaryauthorization.v1.IUpdateAttestorRequest} request UpdateAttestorRequest message or plain object
                         * @returns {Promise<google.cloud.binaryauthorization.v1.Attestor>} Promise
                         * @variation 2
                         */
    
                        /**
                         * Callback as used by {@link google.cloud.binaryauthorization.v1.BinauthzManagementServiceV1|listAttestors}.
                         * @memberof google.cloud.binaryauthorization.v1.BinauthzManagementServiceV1
                         * @typedef ListAttestorsCallback
                         * @type {function}
                         * @param {Error|null} error Error, if any
                         * @param {google.cloud.binaryauthorization.v1.ListAttestorsResponse} [response] ListAttestorsResponse
                         */
    
                        /**
                         * Calls ListAttestors.
                         * @function listAttestors
                         * @memberof google.cloud.binaryauthorization.v1.BinauthzManagementServiceV1
                         * @instance
                         * @param {google.cloud.binaryauthorization.v1.IListAttestorsRequest} request ListAttestorsRequest message or plain object
                         * @param {google.cloud.binaryauthorization.v1.BinauthzManagementServiceV1.ListAttestorsCallback} callback Node-style callback called with the error, if any, and ListAttestorsResponse
                         * @returns {undefined}
                         * @variation 1
                         */
                        Object.defineProperty(BinauthzManagementServiceV1.prototype.listAttestors = function listAttestors(request, callback) {
                            return this.rpcCall(listAttestors, $root.google.cloud.binaryauthorization.v1.ListAttestorsRequest, $root.google.cloud.binaryauthorization.v1.ListAttestorsResponse, request, callback);
                        }, "name", { value: "ListAttestors" });
    
                        /**
                         * Calls ListAttestors.
                         * @function listAttestors
                         * @memberof google.cloud.binaryauthorization.v1.BinauthzManagementServiceV1
                         * @instance
                         * @param {google.cloud.binaryauthorization.v1.IListAttestorsRequest} request ListAttestorsRequest message or plain object
                         * @returns {Promise<google.cloud.binaryauthorization.v1.ListAttestorsResponse>} Promise
                         * @variation 2
                         */
    
                        /**
                         * Callback as used by {@link google.cloud.binaryauthorization.v1.BinauthzManagementServiceV1|deleteAttestor}.
                         * @memberof google.cloud.binaryauthorization.v1.BinauthzManagementServiceV1
                         * @typedef DeleteAttestorCallback
                         * @type {function}
                         * @param {Error|null} error Error, if any
                         * @param {google.protobuf.Empty} [response] Empty
                         */
    
                        /**
                         * Calls DeleteAttestor.
                         * @function deleteAttestor
                         * @memberof google.cloud.binaryauthorization.v1.BinauthzManagementServiceV1
                         * @instance
                         * @param {google.cloud.binaryauthorization.v1.IDeleteAttestorRequest} request DeleteAttestorRequest message or plain object
                         * @param {google.cloud.binaryauthorization.v1.BinauthzManagementServiceV1.DeleteAttestorCallback} callback Node-style callback called with the error, if any, and Empty
                         * @returns {undefined}
                         * @variation 1
                         */
                        Object.defineProperty(BinauthzManagementServiceV1.prototype.deleteAttestor = function deleteAttestor(request, callback) {
                            return this.rpcCall(deleteAttestor, $root.google.cloud.binaryauthorization.v1.DeleteAttestorRequest, $root.google.protobuf.Empty, request, callback);
                        }, "name", { value: "DeleteAttestor" });
    
                        /**
                         * Calls DeleteAttestor.
                         * @function deleteAttestor
                         * @memberof google.cloud.binaryauthorization.v1.BinauthzManagementServiceV1
                         * @instance
                         * @param {google.cloud.binaryauthorization.v1.IDeleteAttestorRequest} request DeleteAttestorRequest message or plain object
                         * @returns {Promise<google.protobuf.Empty>} Promise
                         * @variation 2
                         */
    
                        return BinauthzManagementServiceV1;
                    })();
    
                    v1.SystemPolicyV1 = (function() {
    
                        /**
                         * Constructs a new SystemPolicyV1 service.
                         * @memberof google.cloud.binaryauthorization.v1
                         * @classdesc Represents a SystemPolicyV1
                         * @extends $protobuf.rpc.Service
                         * @constructor
                         * @param {$protobuf.RPCImpl} rpcImpl RPC implementation
                         * @param {boolean} [requestDelimited=false] Whether requests are length-delimited
                         * @param {boolean} [responseDelimited=false] Whether responses are length-delimited
                         */
                        function SystemPolicyV1(rpcImpl, requestDelimited, responseDelimited) {
                            $protobuf.rpc.Service.call(this, rpcImpl, requestDelimited, responseDelimited);
                        }
    
                        (SystemPolicyV1.prototype = Object.create($protobuf.rpc.Service.prototype)).constructor = SystemPolicyV1;
    
                        /**
                         * Creates new SystemPolicyV1 service using the specified rpc implementation.
                         * @function create
                         * @memberof google.cloud.binaryauthorization.v1.SystemPolicyV1
                         * @static
                         * @param {$protobuf.RPCImpl} rpcImpl RPC implementation
                         * @param {boolean} [requestDelimited=false] Whether requests are length-delimited
                         * @param {boolean} [responseDelimited=false] Whether responses are length-delimited
                         * @returns {SystemPolicyV1} RPC service. Useful where requests and/or responses are streamed.
                         */
                        SystemPolicyV1.create = function create(rpcImpl, requestDelimited, responseDelimited) {
                            return new this(rpcImpl, requestDelimited, responseDelimited);
                        };
    
                        /**
                         * Callback as used by {@link google.cloud.binaryauthorization.v1.SystemPolicyV1|getSystemPolicy}.
                         * @memberof google.cloud.binaryauthorization.v1.SystemPolicyV1
                         * @typedef GetSystemPolicyCallback
                         * @type {function}
                         * @param {Error|null} error Error, if any
                         * @param {google.cloud.binaryauthorization.v1.Policy} [response] Policy
                         */
    
                        /**
                         * Calls GetSystemPolicy.
                         * @function getSystemPolicy
                         * @memberof google.cloud.binaryauthorization.v1.SystemPolicyV1
                         * @instance
                         * @param {google.cloud.binaryauthorization.v1.IGetSystemPolicyRequest} request GetSystemPolicyRequest message or plain object
                         * @param {google.cloud.binaryauthorization.v1.SystemPolicyV1.GetSystemPolicyCallback} callback Node-style callback called with the error, if any, and Policy
                         * @returns {undefined}
                         * @variation 1
                         */
                        Object.defineProperty(SystemPolicyV1.prototype.getSystemPolicy = function getSystemPolicy(request, callback) {
                            return this.rpcCall(getSystemPolicy, $root.google.cloud.binaryauthorization.v1.GetSystemPolicyRequest, $root.google.cloud.binaryauthorization.v1.Policy, request, callback);
                        }, "name", { value: "GetSystemPolicy" });
    
                        /**
                         * Calls GetSystemPolicy.
                         * @function getSystemPolicy
                         * @memberof google.cloud.binaryauthorization.v1.SystemPolicyV1
                         * @instance
                         * @param {google.cloud.binaryauthorization.v1.IGetSystemPolicyRequest} request GetSystemPolicyRequest message or plain object
                         * @returns {Promise<google.cloud.binaryauthorization.v1.Policy>} Promise
                         * @variation 2
                         */
    
                        return SystemPolicyV1;
                    })();
    
                    v1.ValidationHelperV1 = (function() {
    
                        /**
                         * Constructs a new ValidationHelperV1 service.
                         * @memberof google.cloud.binaryauthorization.v1
                         * @classdesc Represents a ValidationHelperV1
                         * @extends $protobuf.rpc.Service
                         * @constructor
                         * @param {$protobuf.RPCImpl} rpcImpl RPC implementation
                         * @param {boolean} [requestDelimited=false] Whether requests are length-delimited
                         * @param {boolean} [responseDelimited=false] Whether responses are length-delimited
                         */
                        function ValidationHelperV1(rpcImpl, requestDelimited, responseDelimited) {
                            $protobuf.rpc.Service.call(this, rpcImpl, requestDelimited, responseDelimited);
                        }
    
                        (ValidationHelperV1.prototype = Object.create($protobuf.rpc.Service.prototype)).constructor = ValidationHelperV1;
    
                        /**
                         * Creates new ValidationHelperV1 service using the specified rpc implementation.
                         * @function create
                         * @memberof google.cloud.binaryauthorization.v1.ValidationHelperV1
                         * @static
                         * @param {$protobuf.RPCImpl} rpcImpl RPC implementation
                         * @param {boolean} [requestDelimited=false] Whether requests are length-delimited
                         * @param {boolean} [responseDelimited=false] Whether responses are length-delimited
                         * @returns {ValidationHelperV1} RPC service. Useful where requests and/or responses are streamed.
                         */
                        ValidationHelperV1.create = function create(rpcImpl, requestDelimited, responseDelimited) {
                            return new this(rpcImpl, requestDelimited, responseDelimited);
                        };
    
                        /**
                         * Callback as used by {@link google.cloud.binaryauthorization.v1.ValidationHelperV1|validateAttestationOccurrence}.
                         * @memberof google.cloud.binaryauthorization.v1.ValidationHelperV1
                         * @typedef ValidateAttestationOccurrenceCallback
                         * @type {function}
                         * @param {Error|null} error Error, if any
                         * @param {google.cloud.binaryauthorization.v1.ValidateAttestationOccurrenceResponse} [response] ValidateAttestationOccurrenceResponse
                         */
    
                        /**
                         * Calls ValidateAttestationOccurrence.
                         * @function validateAttestationOccurrence
                         * @memberof google.cloud.binaryauthorization.v1.ValidationHelperV1
                         * @instance
                         * @param {google.cloud.binaryauthorization.v1.IValidateAttestationOccurrenceRequest} request ValidateAttestationOccurrenceRequest message or plain object
                         * @param {google.cloud.binaryauthorization.v1.ValidationHelperV1.ValidateAttestationOccurrenceCallback} callback Node-style callback called with the error, if any, and ValidateAttestationOccurrenceResponse
                         * @returns {undefined}
                         * @variation 1
                         */
                        Object.defineProperty(ValidationHelperV1.prototype.validateAttestationOccurrence = function validateAttestationOccurrence(request, callback) {
                            return this.rpcCall(validateAttestationOccurrence, $root.google.cloud.binaryauthorization.v1.ValidateAttestationOccurrenceRequest, $root.google.cloud.binaryauthorization.v1.ValidateAttestationOccurrenceResponse, request, callback);
                        }, "name", { value: "ValidateAttestationOccurrence" });
    
                        /**
                         * Calls ValidateAttestationOccurrence.
                         * @function validateAttestationOccurrence
                         * @memberof google.cloud.binaryauthorization.v1.ValidationHelperV1
                         * @instance
                         * @param {google.cloud.binaryauthorization.v1.IValidateAttestationOccurrenceRequest} request ValidateAttestationOccurrenceRequest message or plain object
                         * @returns {Promise<google.cloud.binaryauthorization.v1.ValidateAttestationOccurrenceResponse>} Promise
                         * @variation 2
                         */
    
                        return ValidationHelperV1;
                    })();
    
                    v1.GetPolicyRequest = (function() {
    
                        /**
                         * Properties of a GetPolicyRequest.
                         * @memberof google.cloud.binaryauthorization.v1
                         * @interface IGetPolicyRequest
                         * @property {string|null} [name] GetPolicyRequest name
                         */
    
                        /**
                         * Constructs a new GetPolicyRequest.
                         * @memberof google.cloud.binaryauthorization.v1
                         * @classdesc Represents a GetPolicyRequest.
                         * @implements IGetPolicyRequest
                         * @constructor
                         * @param {google.cloud.binaryauthorization.v1.IGetPolicyRequest=} [properties] Properties to set
                         */
                        function GetPolicyRequest(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * GetPolicyRequest name.
                         * @member {string} name
                         * @memberof google.cloud.binaryauthorization.v1.GetPolicyRequest
                         * @instance
                         */
                        GetPolicyRequest.prototype.name = "";
    
                        /**
                         * Creates a new GetPolicyRequest instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.binaryauthorization.v1.GetPolicyRequest
                         * @static
                         * @param {google.cloud.binaryauthorization.v1.IGetPolicyRequest=} [properties] Properties to set
                         * @returns {google.cloud.binaryauthorization.v1.GetPolicyRequest} GetPolicyRequest instance
                         */
                        GetPolicyRequest.create = function create(properties) {
                            return new GetPolicyRequest(properties);
                        };
    
                        /**
                         * Encodes the specified GetPolicyRequest message. Does not implicitly {@link google.cloud.binaryauthorization.v1.GetPolicyRequest.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.binaryauthorization.v1.GetPolicyRequest
                         * @static
                         * @param {google.cloud.binaryauthorization.v1.IGetPolicyRequest} message GetPolicyRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        GetPolicyRequest.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified GetPolicyRequest message, length delimited. Does not implicitly {@link google.cloud.binaryauthorization.v1.GetPolicyRequest.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.binaryauthorization.v1.GetPolicyRequest
                         * @static
                         * @param {google.cloud.binaryauthorization.v1.IGetPolicyRequest} message GetPolicyRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        GetPolicyRequest.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a GetPolicyRequest message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.binaryauthorization.v1.GetPolicyRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.binaryauthorization.v1.GetPolicyRequest} GetPolicyRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        GetPolicyRequest.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.binaryauthorization.v1.GetPolicyRequest();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.name = reader.string();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a GetPolicyRequest message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.binaryauthorization.v1.GetPolicyRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.binaryauthorization.v1.GetPolicyRequest} GetPolicyRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        GetPolicyRequest.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a GetPolicyRequest message.
                         * @function verify
                         * @memberof google.cloud.binaryauthorization.v1.GetPolicyRequest
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        GetPolicyRequest.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.name != null && message.hasOwnProperty("name"))
                                if (!$util.isString(message.name))
                                    return "name: string expected";
                            return null;
                        };
    
                        /**
                         * Creates a GetPolicyRequest message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.binaryauthorization.v1.GetPolicyRequest
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.binaryauthorization.v1.GetPolicyRequest} GetPolicyRequest
                         */
                        GetPolicyRequest.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.binaryauthorization.v1.GetPolicyRequest)
                                return object;
                            var message = new $root.google.cloud.binaryauthorization.v1.GetPolicyRequest();
                            if (object.name != null)
                                message.name = String(object.name);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a GetPolicyRequest message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.binaryauthorization.v1.GetPolicyRequest
                         * @static
                         * @param {google.cloud.binaryauthorization.v1.GetPolicyRequest} message GetPolicyRequest
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        GetPolicyRequest.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults)
                                object.name = "";
                            if (message.name != null && message.hasOwnProperty("name"))
                                object.name = message.name;
                            return object;
                        };
    
                        /**
                         * Converts this GetPolicyRequest to JSON.
                         * @function toJSON
                         * @memberof google.cloud.binaryauthorization.v1.GetPolicyRequest
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        GetPolicyRequest.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for GetPolicyRequest
                         * @function getTypeUrl
                         * @memberof google.cloud.binaryauthorization.v1.GetPolicyRequest
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        GetPolicyRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.binaryauthorization.v1.GetPolicyRequest";
                        };
    
                        return GetPolicyRequest;
                    })();
    
                    v1.UpdatePolicyRequest = (function() {
    
                        /**
                         * Properties of an UpdatePolicyRequest.
                         * @memberof google.cloud.binaryauthorization.v1
                         * @interface IUpdatePolicyRequest
                         * @property {google.cloud.binaryauthorization.v1.IPolicy|null} [policy] UpdatePolicyRequest policy
                         */
    
                        /**
                         * Constructs a new UpdatePolicyRequest.
                         * @memberof google.cloud.binaryauthorization.v1
                         * @classdesc Represents an UpdatePolicyRequest.
                         * @implements IUpdatePolicyRequest
                         * @constructor
                         * @param {google.cloud.binaryauthorization.v1.IUpdatePolicyRequest=} [properties] Properties to set
                         */
                        function UpdatePolicyRequest(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * UpdatePolicyRequest policy.
                         * @member {google.cloud.binaryauthorization.v1.IPolicy|null|undefined} policy
                         * @memberof google.cloud.binaryauthorization.v1.UpdatePolicyRequest
                         * @instance
                         */
                        UpdatePolicyRequest.prototype.policy = null;
    
                        /**
                         * Creates a new UpdatePolicyRequest instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.binaryauthorization.v1.UpdatePolicyRequest
                         * @static
                         * @param {google.cloud.binaryauthorization.v1.IUpdatePolicyRequest=} [properties] Properties to set
                         * @returns {google.cloud.binaryauthorization.v1.UpdatePolicyRequest} UpdatePolicyRequest instance
                         */
                        UpdatePolicyRequest.create = function create(properties) {
                            return new UpdatePolicyRequest(properties);
                        };
    
                        /**
                         * Encodes the specified UpdatePolicyRequest message. Does not implicitly {@link google.cloud.binaryauthorization.v1.UpdatePolicyRequest.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.binaryauthorization.v1.UpdatePolicyRequest
                         * @static
                         * @param {google.cloud.binaryauthorization.v1.IUpdatePolicyRequest} message UpdatePolicyRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        UpdatePolicyRequest.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.policy != null && Object.hasOwnProperty.call(message, "policy"))
                                $root.google.cloud.binaryauthorization.v1.Policy.encode(message.policy, writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                            return writer;
                        };
    
                        /**
                         * Encodes the specified UpdatePolicyRequest message, length delimited. Does not implicitly {@link google.cloud.binaryauthorization.v1.UpdatePolicyRequest.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.binaryauthorization.v1.UpdatePolicyRequest
                         * @static
                         * @param {google.cloud.binaryauthorization.v1.IUpdatePolicyRequest} message UpdatePolicyRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        UpdatePolicyRequest.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes an UpdatePolicyRequest message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.binaryauthorization.v1.UpdatePolicyRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.binaryauthorization.v1.UpdatePolicyRequest} UpdatePolicyRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        UpdatePolicyRequest.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.binaryauthorization.v1.UpdatePolicyRequest();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.policy = $root.google.cloud.binaryauthorization.v1.Policy.decode(reader, reader.uint32());
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes an UpdatePolicyRequest message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.binaryauthorization.v1.UpdatePolicyRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.binaryauthorization.v1.UpdatePolicyRequest} UpdatePolicyRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        UpdatePolicyRequest.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies an UpdatePolicyRequest message.
                         * @function verify
                         * @memberof google.cloud.binaryauthorization.v1.UpdatePolicyRequest
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        UpdatePolicyRequest.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.policy != null && message.hasOwnProperty("policy")) {
                                var error = $root.google.cloud.binaryauthorization.v1.Policy.verify(message.policy);
                                if (error)
                                    return "policy." + error;
                            }
                            return null;
                        };
    
                        /**
                         * Creates an UpdatePolicyRequest message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.binaryauthorization.v1.UpdatePolicyRequest
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.binaryauthorization.v1.UpdatePolicyRequest} UpdatePolicyRequest
                         */
                        UpdatePolicyRequest.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.binaryauthorization.v1.UpdatePolicyRequest)
                                return object;
                            var message = new $root.google.cloud.binaryauthorization.v1.UpdatePolicyRequest();
                            if (object.policy != null) {
                                if (typeof object.policy !== "object")
                                    throw TypeError(".google.cloud.binaryauthorization.v1.UpdatePolicyRequest.policy: object expected");
                                message.policy = $root.google.cloud.binaryauthorization.v1.Policy.fromObject(object.policy);
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from an UpdatePolicyRequest message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.binaryauthorization.v1.UpdatePolicyRequest
                         * @static
                         * @param {google.cloud.binaryauthorization.v1.UpdatePolicyRequest} message UpdatePolicyRequest
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        UpdatePolicyRequest.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults)
                                object.policy = null;
                            if (message.policy != null && message.hasOwnProperty("policy"))
                                object.policy = $root.google.cloud.binaryauthorization.v1.Policy.toObject(message.policy, options);
                            return object;
                        };
    
                        /**
                         * Converts this UpdatePolicyRequest to JSON.
                         * @function toJSON
                         * @memberof google.cloud.binaryauthorization.v1.UpdatePolicyRequest
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        UpdatePolicyRequest.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for UpdatePolicyRequest
                         * @function getTypeUrl
                         * @memberof google.cloud.binaryauthorization.v1.UpdatePolicyRequest
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        UpdatePolicyRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.binaryauthorization.v1.UpdatePolicyRequest";
                        };
    
                        return UpdatePolicyRequest;
                    })();
    
                    v1.CreateAttestorRequest = (function() {
    
                        /**
                         * Properties of a CreateAttestorRequest.
                         * @memberof google.cloud.binaryauthorization.v1
                         * @interface ICreateAttestorRequest
                         * @property {string|null} [parent] CreateAttestorRequest parent
                         * @property {string|null} [attestorId] CreateAttestorRequest attestorId
                         * @property {google.cloud.binaryauthorization.v1.IAttestor|null} [attestor] CreateAttestorRequest attestor
                         */
    
                        /**
                         * Constructs a new CreateAttestorRequest.
                         * @memberof google.cloud.binaryauthorization.v1
                         * @classdesc Represents a CreateAttestorRequest.
                         * @implements ICreateAttestorRequest
                         * @constructor
                         * @param {google.cloud.binaryauthorization.v1.ICreateAttestorRequest=} [properties] Properties to set
                         */
                        function CreateAttestorRequest(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * CreateAttestorRequest parent.
                         * @member {string} parent
                         * @memberof google.cloud.binaryauthorization.v1.CreateAttestorRequest
                         * @instance
                         */
                        CreateAttestorRequest.prototype.parent = "";
    
                        /**
                         * CreateAttestorRequest attestorId.
                         * @member {string} attestorId
                         * @memberof google.cloud.binaryauthorization.v1.CreateAttestorRequest
                         * @instance
                         */
                        CreateAttestorRequest.prototype.attestorId = "";
    
                        /**
                         * CreateAttestorRequest attestor.
                         * @member {google.cloud.binaryauthorization.v1.IAttestor|null|undefined} attestor
                         * @memberof google.cloud.binaryauthorization.v1.CreateAttestorRequest
                         * @instance
                         */
                        CreateAttestorRequest.prototype.attestor = null;
    
                        /**
                         * Creates a new CreateAttestorRequest instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.binaryauthorization.v1.CreateAttestorRequest
                         * @static
                         * @param {google.cloud.binaryauthorization.v1.ICreateAttestorRequest=} [properties] Properties to set
                         * @returns {google.cloud.binaryauthorization.v1.CreateAttestorRequest} CreateAttestorRequest instance
                         */
                        CreateAttestorRequest.create = function create(properties) {
                            return new CreateAttestorRequest(properties);
                        };
    
                        /**
                         * Encodes the specified CreateAttestorRequest message. Does not implicitly {@link google.cloud.binaryauthorization.v1.CreateAttestorRequest.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.binaryauthorization.v1.CreateAttestorRequest
                         * @static
                         * @param {google.cloud.binaryauthorization.v1.ICreateAttestorRequest} message CreateAttestorRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        CreateAttestorRequest.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.parent != null && Object.hasOwnProperty.call(message, "parent"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.parent);
                            if (message.attestorId != null && Object.hasOwnProperty.call(message, "attestorId"))
                                writer.uint32(/* id 2, wireType 2 =*/18).string(message.attestorId);
                            if (message.attestor != null && Object.hasOwnProperty.call(message, "attestor"))
                                $root.google.cloud.binaryauthorization.v1.Attestor.encode(message.attestor, writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();
                            return writer;
                        };
    
                        /**
                         * Encodes the specified CreateAttestorRequest message, length delimited. Does not implicitly {@link google.cloud.binaryauthorization.v1.CreateAttestorRequest.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.binaryauthorization.v1.CreateAttestorRequest
                         * @static
                         * @param {google.cloud.binaryauthorization.v1.ICreateAttestorRequest} message CreateAttestorRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        CreateAttestorRequest.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a CreateAttestorRequest message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.binaryauthorization.v1.CreateAttestorRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.binaryauthorization.v1.CreateAttestorRequest} CreateAttestorRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        CreateAttestorRequest.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.binaryauthorization.v1.CreateAttestorRequest();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.parent = reader.string();
                                        break;
                                    }
                                case 2: {
                                        message.attestorId = reader.string();
                                        break;
                                    }
                                case 3: {
                                        message.attestor = $root.google.cloud.binaryauthorization.v1.Attestor.decode(reader, reader.uint32());
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a CreateAttestorRequest message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.binaryauthorization.v1.CreateAttestorRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.binaryauthorization.v1.CreateAttestorRequest} CreateAttestorRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        CreateAttestorRequest.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a CreateAttestorRequest message.
                         * @function verify
                         * @memberof google.cloud.binaryauthorization.v1.CreateAttestorRequest
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        CreateAttestorRequest.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.parent != null && message.hasOwnProperty("parent"))
                                if (!$util.isString(message.parent))
                                    return "parent: string expected";
                            if (message.attestorId != null && message.hasOwnProperty("attestorId"))
                                if (!$util.isString(message.attestorId))
                                    return "attestorId: string expected";
                            if (message.attestor != null && message.hasOwnProperty("attestor")) {
                                var error = $root.google.cloud.binaryauthorization.v1.Attestor.verify(message.attestor);
                                if (error)
                                    return "attestor." + error;
                            }
                            return null;
                        };
    
                        /**
                         * Creates a CreateAttestorRequest message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.binaryauthorization.v1.CreateAttestorRequest
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.binaryauthorization.v1.CreateAttestorRequest} CreateAttestorRequest
                         */
                        CreateAttestorRequest.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.binaryauthorization.v1.CreateAttestorRequest)
                                return object;
                            var message = new $root.google.cloud.binaryauthorization.v1.CreateAttestorRequest();
                            if (object.parent != null)
                                message.parent = String(object.parent);
                            if (object.attestorId != null)
                                message.attestorId = String(object.attestorId);
                            if (object.attestor != null) {
                                if (typeof object.attestor !== "object")
                                    throw TypeError(".google.cloud.binaryauthorization.v1.CreateAttestorRequest.attestor: object expected");
                                message.attestor = $root.google.cloud.binaryauthorization.v1.Attestor.fromObject(object.attestor);
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a CreateAttestorRequest message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.binaryauthorization.v1.CreateAttestorRequest
                         * @static
                         * @param {google.cloud.binaryauthorization.v1.CreateAttestorRequest} message CreateAttestorRequest
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        CreateAttestorRequest.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.parent = "";
                                object.attestorId = "";
                                object.attestor = null;
                            }
                            if (message.parent != null && message.hasOwnProperty("parent"))
                                object.parent = message.parent;
                            if (message.attestorId != null && message.hasOwnProperty("attestorId"))
                                object.attestorId = message.attestorId;
                            if (message.attestor != null && message.hasOwnProperty("attestor"))
                                object.attestor = $root.google.cloud.binaryauthorization.v1.Attestor.toObject(message.attestor, options);
                            return object;
                        };
    
                        /**
                         * Converts this CreateAttestorRequest to JSON.
                         * @function toJSON
                         * @memberof google.cloud.binaryauthorization.v1.CreateAttestorRequest
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        CreateAttestorRequest.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for CreateAttestorRequest
                         * @function getTypeUrl
                         * @memberof google.cloud.binaryauthorization.v1.CreateAttestorRequest
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        CreateAttestorRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.binaryauthorization.v1.CreateAttestorRequest";
                        };
    
                        return CreateAttestorRequest;
                    })();
    
                    v1.GetAttestorRequest = (function() {
    
                        /**
                         * Properties of a GetAttestorRequest.
                         * @memberof google.cloud.binaryauthorization.v1
                         * @interface IGetAttestorRequest
                         * @property {string|null} [name] GetAttestorRequest name
                         */
    
                        /**
                         * Constructs a new GetAttestorRequest.
                         * @memberof google.cloud.binaryauthorization.v1
                         * @classdesc Represents a GetAttestorRequest.
                         * @implements IGetAttestorRequest
                         * @constructor
                         * @param {google.cloud.binaryauthorization.v1.IGetAttestorRequest=} [properties] Properties to set
                         */
                        function GetAttestorRequest(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * GetAttestorRequest name.
                         * @member {string} name
                         * @memberof google.cloud.binaryauthorization.v1.GetAttestorRequest
                         * @instance
                         */
                        GetAttestorRequest.prototype.name = "";
    
                        /**
                         * Creates a new GetAttestorRequest instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.binaryauthorization.v1.GetAttestorRequest
                         * @static
                         * @param {google.cloud.binaryauthorization.v1.IGetAttestorRequest=} [properties] Properties to set
                         * @returns {google.cloud.binaryauthorization.v1.GetAttestorRequest} GetAttestorRequest instance
                         */
                        GetAttestorRequest.create = function create(properties) {
                            return new GetAttestorRequest(properties);
                        };
    
                        /**
                         * Encodes the specified GetAttestorRequest message. Does not implicitly {@link google.cloud.binaryauthorization.v1.GetAttestorRequest.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.binaryauthorization.v1.GetAttestorRequest
                         * @static
                         * @param {google.cloud.binaryauthorization.v1.IGetAttestorRequest} message GetAttestorRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        GetAttestorRequest.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified GetAttestorRequest message, length delimited. Does not implicitly {@link google.cloud.binaryauthorization.v1.GetAttestorRequest.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.binaryauthorization.v1.GetAttestorRequest
                         * @static
                         * @param {google.cloud.binaryauthorization.v1.IGetAttestorRequest} message GetAttestorRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        GetAttestorRequest.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a GetAttestorRequest message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.binaryauthorization.v1.GetAttestorRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.binaryauthorization.v1.GetAttestorRequest} GetAttestorRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        GetAttestorRequest.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.binaryauthorization.v1.GetAttestorRequest();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.name = reader.string();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a GetAttestorRequest message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.binaryauthorization.v1.GetAttestorRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.binaryauthorization.v1.GetAttestorRequest} GetAttestorRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        GetAttestorRequest.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a GetAttestorRequest message.
                         * @function verify
                         * @memberof google.cloud.binaryauthorization.v1.GetAttestorRequest
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        GetAttestorRequest.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.name != null && message.hasOwnProperty("name"))
                                if (!$util.isString(message.name))
                                    return "name: string expected";
                            return null;
                        };
    
                        /**
                         * Creates a GetAttestorRequest message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.binaryauthorization.v1.GetAttestorRequest
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.binaryauthorization.v1.GetAttestorRequest} GetAttestorRequest
                         */
                        GetAttestorRequest.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.binaryauthorization.v1.GetAttestorRequest)
                                return object;
                            var message = new $root.google.cloud.binaryauthorization.v1.GetAttestorRequest();
                            if (object.name != null)
                                message.name = String(object.name);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a GetAttestorRequest message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.binaryauthorization.v1.GetAttestorRequest
                         * @static
                         * @param {google.cloud.binaryauthorization.v1.GetAttestorRequest} message GetAttestorRequest
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        GetAttestorRequest.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults)
                                object.name = "";
                            if (message.name != null && message.hasOwnProperty("name"))
                                object.name = message.name;
                            return object;
                        };
    
                        /**
                         * Converts this GetAttestorRequest to JSON.
                         * @function toJSON
                         * @memberof google.cloud.binaryauthorization.v1.GetAttestorRequest
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        GetAttestorRequest.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for GetAttestorRequest
                         * @function getTypeUrl
                         * @memberof google.cloud.binaryauthorization.v1.GetAttestorRequest
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        GetAttestorRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.binaryauthorization.v1.GetAttestorRequest";
                        };
    
                        return GetAttestorRequest;
                    })();
    
                    v1.UpdateAttestorRequest = (function() {
    
                        /**
                         * Properties of an UpdateAttestorRequest.
                         * @memberof google.cloud.binaryauthorization.v1
                         * @interface IUpdateAttestorRequest
                         * @property {google.cloud.binaryauthorization.v1.IAttestor|null} [attestor] UpdateAttestorRequest attestor
                         */
    
                        /**
                         * Constructs a new UpdateAttestorRequest.
                         * @memberof google.cloud.binaryauthorization.v1
                         * @classdesc Represents an UpdateAttestorRequest.
                         * @implements IUpdateAttestorRequest
                         * @constructor
                         * @param {google.cloud.binaryauthorization.v1.IUpdateAttestorRequest=} [properties] Properties to set
                         */
                        function UpdateAttestorRequest(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * UpdateAttestorRequest attestor.
                         * @member {google.cloud.binaryauthorization.v1.IAttestor|null|undefined} attestor
                         * @memberof google.cloud.binaryauthorization.v1.UpdateAttestorRequest
                         * @instance
                         */
                        UpdateAttestorRequest.prototype.attestor = null;
    
                        /**
                         * Creates a new UpdateAttestorRequest instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.binaryauthorization.v1.UpdateAttestorRequest
                         * @static
                         * @param {google.cloud.binaryauthorization.v1.IUpdateAttestorRequest=} [properties] Properties to set
                         * @returns {google.cloud.binaryauthorization.v1.UpdateAttestorRequest} UpdateAttestorRequest instance
                         */
                        UpdateAttestorRequest.create = function create(properties) {
                            return new UpdateAttestorRequest(properties);
                        };
    
                        /**
                         * Encodes the specified UpdateAttestorRequest message. Does not implicitly {@link google.cloud.binaryauthorization.v1.UpdateAttestorRequest.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.binaryauthorization.v1.UpdateAttestorRequest
                         * @static
                         * @param {google.cloud.binaryauthorization.v1.IUpdateAttestorRequest} message UpdateAttestorRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        UpdateAttestorRequest.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.attestor != null && Object.hasOwnProperty.call(message, "attestor"))
                                $root.google.cloud.binaryauthorization.v1.Attestor.encode(message.attestor, writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                            return writer;
                        };
    
                        /**
                         * Encodes the specified UpdateAttestorRequest message, length delimited. Does not implicitly {@link google.cloud.binaryauthorization.v1.UpdateAttestorRequest.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.binaryauthorization.v1.UpdateAttestorRequest
                         * @static
                         * @param {google.cloud.binaryauthorization.v1.IUpdateAttestorRequest} message UpdateAttestorRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        UpdateAttestorRequest.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes an UpdateAttestorRequest message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.binaryauthorization.v1.UpdateAttestorRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.binaryauthorization.v1.UpdateAttestorRequest} UpdateAttestorRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        UpdateAttestorRequest.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.binaryauthorization.v1.UpdateAttestorRequest();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.attestor = $root.google.cloud.binaryauthorization.v1.Attestor.decode(reader, reader.uint32());
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes an UpdateAttestorRequest message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.binaryauthorization.v1.UpdateAttestorRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.binaryauthorization.v1.UpdateAttestorRequest} UpdateAttestorRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        UpdateAttestorRequest.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies an UpdateAttestorRequest message.
                         * @function verify
                         * @memberof google.cloud.binaryauthorization.v1.UpdateAttestorRequest
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        UpdateAttestorRequest.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.attestor != null && message.hasOwnProperty("attestor")) {
                                var error = $root.google.cloud.binaryauthorization.v1.Attestor.verify(message.attestor);
                                if (error)
                                    return "attestor." + error;
                            }
                            return null;
                        };
    
                        /**
                         * Creates an UpdateAttestorRequest message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.binaryauthorization.v1.UpdateAttestorRequest
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.binaryauthorization.v1.UpdateAttestorRequest} UpdateAttestorRequest
                         */
                        UpdateAttestorRequest.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.binaryauthorization.v1.UpdateAttestorRequest)
                                return object;
                            var message = new $root.google.cloud.binaryauthorization.v1.UpdateAttestorRequest();
                            if (object.attestor != null) {
                                if (typeof object.attestor !== "object")
                                    throw TypeError(".google.cloud.binaryauthorization.v1.UpdateAttestorRequest.attestor: object expected");
                                message.attestor = $root.google.cloud.binaryauthorization.v1.Attestor.fromObject(object.attestor);
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from an UpdateAttestorRequest message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.binaryauthorization.v1.UpdateAttestorRequest
                         * @static
                         * @param {google.cloud.binaryauthorization.v1.UpdateAttestorRequest} message UpdateAttestorRequest
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        UpdateAttestorRequest.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults)
                                object.attestor = null;
                            if (message.attestor != null && message.hasOwnProperty("attestor"))
                                object.attestor = $root.google.cloud.binaryauthorization.v1.Attestor.toObject(message.attestor, options);
                            return object;
                        };
    
                        /**
                         * Converts this UpdateAttestorRequest to JSON.
                         * @function toJSON
                         * @memberof google.cloud.binaryauthorization.v1.UpdateAttestorRequest
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        UpdateAttestorRequest.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for UpdateAttestorRequest
                         * @function getTypeUrl
                         * @memberof google.cloud.binaryauthorization.v1.UpdateAttestorRequest
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        UpdateAttestorRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.binaryauthorization.v1.UpdateAttestorRequest";
                        };
    
                        return UpdateAttestorRequest;
                    })();
    
                    v1.ListAttestorsRequest = (function() {
    
                        /**
                         * Properties of a ListAttestorsRequest.
                         * @memberof google.cloud.binaryauthorization.v1
                         * @interface IListAttestorsRequest
                         * @property {string|null} [parent] ListAttestorsRequest parent
                         * @property {number|null} [pageSize] ListAttestorsRequest pageSize
                         * @property {string|null} [pageToken] ListAttestorsRequest pageToken
                         */
    
                        /**
                         * Constructs a new ListAttestorsRequest.
                         * @memberof google.cloud.binaryauthorization.v1
                         * @classdesc Represents a ListAttestorsRequest.
                         * @implements IListAttestorsRequest
                         * @constructor
                         * @param {google.cloud.binaryauthorization.v1.IListAttestorsRequest=} [properties] Properties to set
                         */
                        function ListAttestorsRequest(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * ListAttestorsRequest parent.
                         * @member {string} parent
                         * @memberof google.cloud.binaryauthorization.v1.ListAttestorsRequest
                         * @instance
                         */
                        ListAttestorsRequest.prototype.parent = "";
    
                        /**
                         * ListAttestorsRequest pageSize.
                         * @member {number} pageSize
                         * @memberof google.cloud.binaryauthorization.v1.ListAttestorsRequest
                         * @instance
                         */
                        ListAttestorsRequest.prototype.pageSize = 0;
    
                        /**
                         * ListAttestorsRequest pageToken.
                         * @member {string} pageToken
                         * @memberof google.cloud.binaryauthorization.v1.ListAttestorsRequest
                         * @instance
                         */
                        ListAttestorsRequest.prototype.pageToken = "";
    
                        /**
                         * Creates a new ListAttestorsRequest instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.binaryauthorization.v1.ListAttestorsRequest
                         * @static
                         * @param {google.cloud.binaryauthorization.v1.IListAttestorsRequest=} [properties] Properties to set
                         * @returns {google.cloud.binaryauthorization.v1.ListAttestorsRequest} ListAttestorsRequest instance
                         */
                        ListAttestorsRequest.create = function create(properties) {
                            return new ListAttestorsRequest(properties);
                        };
    
                        /**
                         * Encodes the specified ListAttestorsRequest message. Does not implicitly {@link google.cloud.binaryauthorization.v1.ListAttestorsRequest.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.binaryauthorization.v1.ListAttestorsRequest
                         * @static
                         * @param {google.cloud.binaryauthorization.v1.IListAttestorsRequest} message ListAttestorsRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        ListAttestorsRequest.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.parent != null && Object.hasOwnProperty.call(message, "parent"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.parent);
                            if (message.pageSize != null && Object.hasOwnProperty.call(message, "pageSize"))
                                writer.uint32(/* id 2, wireType 0 =*/16).int32(message.pageSize);
                            if (message.pageToken != null && Object.hasOwnProperty.call(message, "pageToken"))
                                writer.uint32(/* id 3, wireType 2 =*/26).string(message.pageToken);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified ListAttestorsRequest message, length delimited. Does not implicitly {@link google.cloud.binaryauthorization.v1.ListAttestorsRequest.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.binaryauthorization.v1.ListAttestorsRequest
                         * @static
                         * @param {google.cloud.binaryauthorization.v1.IListAttestorsRequest} message ListAttestorsRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        ListAttestorsRequest.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a ListAttestorsRequest message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.binaryauthorization.v1.ListAttestorsRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.binaryauthorization.v1.ListAttestorsRequest} ListAttestorsRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        ListAttestorsRequest.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.binaryauthorization.v1.ListAttestorsRequest();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.parent = reader.string();
                                        break;
                                    }
                                case 2: {
                                        message.pageSize = reader.int32();
                                        break;
                                    }
                                case 3: {
                                        message.pageToken = reader.string();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a ListAttestorsRequest message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.binaryauthorization.v1.ListAttestorsRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.binaryauthorization.v1.ListAttestorsRequest} ListAttestorsRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        ListAttestorsRequest.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a ListAttestorsRequest message.
                         * @function verify
                         * @memberof google.cloud.binaryauthorization.v1.ListAttestorsRequest
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        ListAttestorsRequest.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.parent != null && message.hasOwnProperty("parent"))
                                if (!$util.isString(message.parent))
                                    return "parent: string expected";
                            if (message.pageSize != null && message.hasOwnProperty("pageSize"))
                                if (!$util.isInteger(message.pageSize))
                                    return "pageSize: integer expected";
                            if (message.pageToken != null && message.hasOwnProperty("pageToken"))
                                if (!$util.isString(message.pageToken))
                                    return "pageToken: string expected";
                            return null;
                        };
    
                        /**
                         * Creates a ListAttestorsRequest message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.binaryauthorization.v1.ListAttestorsRequest
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.binaryauthorization.v1.ListAttestorsRequest} ListAttestorsRequest
                         */
                        ListAttestorsRequest.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.binaryauthorization.v1.ListAttestorsRequest)
                                return object;
                            var message = new $root.google.cloud.binaryauthorization.v1.ListAttestorsRequest();
                            if (object.parent != null)
                                message.parent = String(object.parent);
                            if (object.pageSize != null)
                                message.pageSize = object.pageSize | 0;
                            if (object.pageToken != null)
                                message.pageToken = String(object.pageToken);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a ListAttestorsRequest message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.binaryauthorization.v1.ListAttestorsRequest
                         * @static
                         * @param {google.cloud.binaryauthorization.v1.ListAttestorsRequest} message ListAttestorsRequest
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        ListAttestorsRequest.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.parent = "";
                                object.pageSize = 0;
                                object.pageToken = "";
                            }
                            if (message.parent != null && message.hasOwnProperty("parent"))
                                object.parent = message.parent;
                            if (message.pageSize != null && message.hasOwnProperty("pageSize"))
                                object.pageSize = message.pageSize;
                            if (message.pageToken != null && message.hasOwnProperty("pageToken"))
                                object.pageToken = message.pageToken;
                            return object;
                        };
    
                        /**
                         * Converts this ListAttestorsRequest to JSON.
                         * @function toJSON
                         * @memberof google.cloud.binaryauthorization.v1.ListAttestorsRequest
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        ListAttestorsRequest.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for ListAttestorsRequest
                         * @function getTypeUrl
                         * @memberof google.cloud.binaryauthorization.v1.ListAttestorsRequest
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        ListAttestorsRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.binaryauthorization.v1.ListAttestorsRequest";
                        };
    
                        return ListAttestorsRequest;
                    })();
    
                    v1.ListAttestorsResponse = (function() {
    
                        /**
                         * Properties of a ListAttestorsResponse.
                         * @memberof google.cloud.binaryauthorization.v1
                         * @interface IListAttestorsResponse
                         * @property {Array.<google.cloud.binaryauthorization.v1.IAttestor>|null} [attestors] ListAttestorsResponse attestors
                         * @property {string|null} [nextPageToken] ListAttestorsResponse nextPageToken
                         */
    
                        /**
                         * Constructs a new ListAttestorsResponse.
                         * @memberof google.cloud.binaryauthorization.v1
                         * @classdesc Represents a ListAttestorsResponse.
                         * @implements IListAttestorsResponse
                         * @constructor
                         * @param {google.cloud.binaryauthorization.v1.IListAttestorsResponse=} [properties] Properties to set
                         */
                        function ListAttestorsResponse(properties) {
                            this.attestors = [];
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * ListAttestorsResponse attestors.
                         * @member {Array.<google.cloud.binaryauthorization.v1.IAttestor>} attestors
                         * @memberof google.cloud.binaryauthorization.v1.ListAttestorsResponse
                         * @instance
                         */
                        ListAttestorsResponse.prototype.attestors = $util.emptyArray;
    
                        /**
                         * ListAttestorsResponse nextPageToken.
                         * @member {string} nextPageToken
                         * @memberof google.cloud.binaryauthorization.v1.ListAttestorsResponse
                         * @instance
                         */
                        ListAttestorsResponse.prototype.nextPageToken = "";
    
                        /**
                         * Creates a new ListAttestorsResponse instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.binaryauthorization.v1.ListAttestorsResponse
                         * @static
                         * @param {google.cloud.binaryauthorization.v1.IListAttestorsResponse=} [properties] Properties to set
                         * @returns {google.cloud.binaryauthorization.v1.ListAttestorsResponse} ListAttestorsResponse instance
                         */
                        ListAttestorsResponse.create = function create(properties) {
                            return new ListAttestorsResponse(properties);
                        };
    
                        /**
                         * Encodes the specified ListAttestorsResponse message. Does not implicitly {@link google.cloud.binaryauthorization.v1.ListAttestorsResponse.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.binaryauthorization.v1.ListAttestorsResponse
                         * @static
                         * @param {google.cloud.binaryauthorization.v1.IListAttestorsResponse} message ListAttestorsResponse message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        ListAttestorsResponse.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.attestors != null && message.attestors.length)
                                for (var i = 0; i < message.attestors.length; ++i)
                                    $root.google.cloud.binaryauthorization.v1.Attestor.encode(message.attestors[i], writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                            if (message.nextPageToken != null && Object.hasOwnProperty.call(message, "nextPageToken"))
                                writer.uint32(/* id 2, wireType 2 =*/18).string(message.nextPageToken);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified ListAttestorsResponse message, length delimited. Does not implicitly {@link google.cloud.binaryauthorization.v1.ListAttestorsResponse.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.binaryauthorization.v1.ListAttestorsResponse
                         * @static
                         * @param {google.cloud.binaryauthorization.v1.IListAttestorsResponse} message ListAttestorsResponse message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        ListAttestorsResponse.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a ListAttestorsResponse message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.binaryauthorization.v1.ListAttestorsResponse
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.binaryauthorization.v1.ListAttestorsResponse} ListAttestorsResponse
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        ListAttestorsResponse.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.binaryauthorization.v1.ListAttestorsResponse();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        if (!(message.attestors && message.attestors.length))
                                            message.attestors = [];
                                        message.attestors.push($root.google.cloud.binaryauthorization.v1.Attestor.decode(reader, reader.uint32()));
                                        break;
                                    }
                                case 2: {
                                        message.nextPageToken = reader.string();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a ListAttestorsResponse message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.binaryauthorization.v1.ListAttestorsResponse
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.binaryauthorization.v1.ListAttestorsResponse} ListAttestorsResponse
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        ListAttestorsResponse.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a ListAttestorsResponse message.
                         * @function verify
                         * @memberof google.cloud.binaryauthorization.v1.ListAttestorsResponse
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        ListAttestorsResponse.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.attestors != null && message.hasOwnProperty("attestors")) {
                                if (!Array.isArray(message.attestors))
                                    return "attestors: array expected";
                                for (var i = 0; i < message.attestors.length; ++i) {
                                    var error = $root.google.cloud.binaryauthorization.v1.Attestor.verify(message.attestors[i]);
                                    if (error)
                                        return "attestors." + error;
                                }
                            }
                            if (message.nextPageToken != null && message.hasOwnProperty("nextPageToken"))
                                if (!$util.isString(message.nextPageToken))
                                    return "nextPageToken: string expected";
                            return null;
                        };
    
                        /**
                         * Creates a ListAttestorsResponse message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.binaryauthorization.v1.ListAttestorsResponse
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.binaryauthorization.v1.ListAttestorsResponse} ListAttestorsResponse
                         */
                        ListAttestorsResponse.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.binaryauthorization.v1.ListAttestorsResponse)
                                return object;
                            var message = new $root.google.cloud.binaryauthorization.v1.ListAttestorsResponse();
                            if (object.attestors) {
                                if (!Array.isArray(object.attestors))
                                    throw TypeError(".google.cloud.binaryauthorization.v1.ListAttestorsResponse.attestors: array expected");
                                message.attestors = [];
                                for (var i = 0; i < object.attestors.length; ++i) {
                                    if (typeof object.attestors[i] !== "object")
                                        throw TypeError(".google.cloud.binaryauthorization.v1.ListAttestorsResponse.attestors: object expected");
                                    message.attestors[i] = $root.google.cloud.binaryauthorization.v1.Attestor.fromObject(object.attestors[i]);
                                }
                            }
                            if (object.nextPageToken != null)
                                message.nextPageToken = String(object.nextPageToken);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a ListAttestorsResponse message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.binaryauthorization.v1.ListAttestorsResponse
                         * @static
                         * @param {google.cloud.binaryauthorization.v1.ListAttestorsResponse} message ListAttestorsResponse
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        ListAttestorsResponse.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.arrays || options.defaults)
                                object.attestors = [];
                            if (options.defaults)
                                object.nextPageToken = "";
                            if (message.attestors && message.attestors.length) {
                                object.attestors = [];
                                for (var j = 0; j < message.attestors.length; ++j)
                                    object.attestors[j] = $root.google.cloud.binaryauthorization.v1.Attestor.toObject(message.attestors[j], options);
                            }
                            if (message.nextPageToken != null && message.hasOwnProperty("nextPageToken"))
                                object.nextPageToken = message.nextPageToken;
                            return object;
                        };
    
                        /**
                         * Converts this ListAttestorsResponse to JSON.
                         * @function toJSON
                         * @memberof google.cloud.binaryauthorization.v1.ListAttestorsResponse
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        ListAttestorsResponse.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for ListAttestorsResponse
                         * @function getTypeUrl
                         * @memberof google.cloud.binaryauthorization.v1.ListAttestorsResponse
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        ListAttestorsResponse.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.binaryauthorization.v1.ListAttestorsResponse";
                        };
    
                        return ListAttestorsResponse;
                    })();
    
                    v1.DeleteAttestorRequest = (function() {
    
                        /**
                         * Properties of a DeleteAttestorRequest.
                         * @memberof google.cloud.binaryauthorization.v1
                         * @interface IDeleteAttestorRequest
                         * @property {string|null} [name] DeleteAttestorRequest name
                         */
    
                        /**
                         * Constructs a new DeleteAttestorRequest.
                         * @memberof google.cloud.binaryauthorization.v1
                         * @classdesc Represents a DeleteAttestorRequest.
                         * @implements IDeleteAttestorRequest
                         * @constructor
                         * @param {google.cloud.binaryauthorization.v1.IDeleteAttestorRequest=} [properties] Properties to set
                         */
                        function DeleteAttestorRequest(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * DeleteAttestorRequest name.
                         * @member {string} name
                         * @memberof google.cloud.binaryauthorization.v1.DeleteAttestorRequest
                         * @instance
                         */
                        DeleteAttestorRequest.prototype.name = "";
    
                        /**
                         * Creates a new DeleteAttestorRequest instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.binaryauthorization.v1.DeleteAttestorRequest
                         * @static
                         * @param {google.cloud.binaryauthorization.v1.IDeleteAttestorRequest=} [properties] Properties to set
                         * @returns {google.cloud.binaryauthorization.v1.DeleteAttestorRequest} DeleteAttestorRequest instance
                         */
                        DeleteAttestorRequest.create = function create(properties) {
                            return new DeleteAttestorRequest(properties);
                        };
    
                        /**
                         * Encodes the specified DeleteAttestorRequest message. Does not implicitly {@link google.cloud.binaryauthorization.v1.DeleteAttestorRequest.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.binaryauthorization.v1.DeleteAttestorRequest
                         * @static
                         * @param {google.cloud.binaryauthorization.v1.IDeleteAttestorRequest} message DeleteAttestorRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        DeleteAttestorRequest.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified DeleteAttestorRequest message, length delimited. Does not implicitly {@link google.cloud.binaryauthorization.v1.DeleteAttestorRequest.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.binaryauthorization.v1.DeleteAttestorRequest
                         * @static
                         * @param {google.cloud.binaryauthorization.v1.IDeleteAttestorRequest} message DeleteAttestorRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        DeleteAttestorRequest.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a DeleteAttestorRequest message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.binaryauthorization.v1.DeleteAttestorRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.binaryauthorization.v1.DeleteAttestorRequest} DeleteAttestorRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        DeleteAttestorRequest.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.binaryauthorization.v1.DeleteAttestorRequest();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.name = reader.string();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a DeleteAttestorRequest message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.binaryauthorization.v1.DeleteAttestorRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.binaryauthorization.v1.DeleteAttestorRequest} DeleteAttestorRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        DeleteAttestorRequest.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a DeleteAttestorRequest message.
                         * @function verify
                         * @memberof google.cloud.binaryauthorization.v1.DeleteAttestorRequest
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        DeleteAttestorRequest.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.name != null && message.hasOwnProperty("name"))
                                if (!$util.isString(message.name))
                                    return "name: string expected";
                            return null;
                        };
    
                        /**
                         * Creates a DeleteAttestorRequest message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.binaryauthorization.v1.DeleteAttestorRequest
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.binaryauthorization.v1.DeleteAttestorRequest} DeleteAttestorRequest
                         */
                        DeleteAttestorRequest.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.binaryauthorization.v1.DeleteAttestorRequest)
                                return object;
                            var message = new $root.google.cloud.binaryauthorization.v1.DeleteAttestorRequest();
                            if (object.name != null)
                                message.name = String(object.name);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a DeleteAttestorRequest message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.binaryauthorization.v1.DeleteAttestorRequest
                         * @static
                         * @param {google.cloud.binaryauthorization.v1.DeleteAttestorRequest} message DeleteAttestorRequest
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        DeleteAttestorRequest.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults)
                                object.name = "";
                            if (message.name != null && message.hasOwnProperty("name"))
                                object.name = message.name;
                            return object;
                        };
    
                        /**
                         * Converts this DeleteAttestorRequest to JSON.
                         * @function toJSON
                         * @memberof google.cloud.binaryauthorization.v1.DeleteAttestorRequest
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        DeleteAttestorRequest.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for DeleteAttestorRequest
                         * @function getTypeUrl
                         * @memberof google.cloud.binaryauthorization.v1.DeleteAttestorRequest
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        DeleteAttestorRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.binaryauthorization.v1.DeleteAttestorRequest";
                        };
    
                        return DeleteAttestorRequest;
                    })();
    
                    v1.GetSystemPolicyRequest = (function() {
    
                        /**
                         * Properties of a GetSystemPolicyRequest.
                         * @memberof google.cloud.binaryauthorization.v1
                         * @interface IGetSystemPolicyRequest
                         * @property {string|null} [name] GetSystemPolicyRequest name
                         */
    
                        /**
                         * Constructs a new GetSystemPolicyRequest.
                         * @memberof google.cloud.binaryauthorization.v1
                         * @classdesc Represents a GetSystemPolicyRequest.
                         * @implements IGetSystemPolicyRequest
                         * @constructor
                         * @param {google.cloud.binaryauthorization.v1.IGetSystemPolicyRequest=} [properties] Properties to set
                         */
                        function GetSystemPolicyRequest(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * GetSystemPolicyRequest name.
                         * @member {string} name
                         * @memberof google.cloud.binaryauthorization.v1.GetSystemPolicyRequest
                         * @instance
                         */
                        GetSystemPolicyRequest.prototype.name = "";
    
                        /**
                         * Creates a new GetSystemPolicyRequest instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.binaryauthorization.v1.GetSystemPolicyRequest
                         * @static
                         * @param {google.cloud.binaryauthorization.v1.IGetSystemPolicyRequest=} [properties] Properties to set
                         * @returns {google.cloud.binaryauthorization.v1.GetSystemPolicyRequest} GetSystemPolicyRequest instance
                         */
                        GetSystemPolicyRequest.create = function create(properties) {
                            return new GetSystemPolicyRequest(properties);
                        };
    
                        /**
                         * Encodes the specified GetSystemPolicyRequest message. Does not implicitly {@link google.cloud.binaryauthorization.v1.GetSystemPolicyRequest.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.binaryauthorization.v1.GetSystemPolicyRequest
                         * @static
                         * @param {google.cloud.binaryauthorization.v1.IGetSystemPolicyRequest} message GetSystemPolicyRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        GetSystemPolicyRequest.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified GetSystemPolicyRequest message, length delimited. Does not implicitly {@link google.cloud.binaryauthorization.v1.GetSystemPolicyRequest.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.binaryauthorization.v1.GetSystemPolicyRequest
                         * @static
                         * @param {google.cloud.binaryauthorization.v1.IGetSystemPolicyRequest} message GetSystemPolicyRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        GetSystemPolicyRequest.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a GetSystemPolicyRequest message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.binaryauthorization.v1.GetSystemPolicyRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.binaryauthorization.v1.GetSystemPolicyRequest} GetSystemPolicyRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        GetSystemPolicyRequest.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.binaryauthorization.v1.GetSystemPolicyRequest();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.name = reader.string();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a GetSystemPolicyRequest message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.binaryauthorization.v1.GetSystemPolicyRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.binaryauthorization.v1.GetSystemPolicyRequest} GetSystemPolicyRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        GetSystemPolicyRequest.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a GetSystemPolicyRequest message.
                         * @function verify
                         * @memberof google.cloud.binaryauthorization.v1.GetSystemPolicyRequest
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        GetSystemPolicyRequest.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.name != null && message.hasOwnProperty("name"))
                                if (!$util.isString(message.name))
                                    return "name: string expected";
                            return null;
                        };
    
                        /**
                         * Creates a GetSystemPolicyRequest message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.binaryauthorization.v1.GetSystemPolicyRequest
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.binaryauthorization.v1.GetSystemPolicyRequest} GetSystemPolicyRequest
                         */
                        GetSystemPolicyRequest.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.binaryauthorization.v1.GetSystemPolicyRequest)
                                return object;
                            var message = new $root.google.cloud.binaryauthorization.v1.GetSystemPolicyRequest();
                            if (object.name != null)
                                message.name = String(object.name);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a GetSystemPolicyRequest message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.binaryauthorization.v1.GetSystemPolicyRequest
                         * @static
                         * @param {google.cloud.binaryauthorization.v1.GetSystemPolicyRequest} message GetSystemPolicyRequest
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        GetSystemPolicyRequest.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults)
                                object.name = "";
                            if (message.name != null && message.hasOwnProperty("name"))
                                object.name = message.name;
                            return object;
                        };
    
                        /**
                         * Converts this GetSystemPolicyRequest to JSON.
                         * @function toJSON
                         * @memberof google.cloud.binaryauthorization.v1.GetSystemPolicyRequest
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        GetSystemPolicyRequest.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for GetSystemPolicyRequest
                         * @function getTypeUrl
                         * @memberof google.cloud.binaryauthorization.v1.GetSystemPolicyRequest
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        GetSystemPolicyRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.binaryauthorization.v1.GetSystemPolicyRequest";
                        };
    
                        return GetSystemPolicyRequest;
                    })();
    
                    v1.ValidateAttestationOccurrenceRequest = (function() {
    
                        /**
                         * Properties of a ValidateAttestationOccurrenceRequest.
                         * @memberof google.cloud.binaryauthorization.v1
                         * @interface IValidateAttestationOccurrenceRequest
                         * @property {string|null} [attestor] ValidateAttestationOccurrenceRequest attestor
                         * @property {grafeas.v1.IAttestationOccurrence|null} [attestation] ValidateAttestationOccurrenceRequest attestation
                         * @property {string|null} [occurrenceNote] ValidateAttestationOccurrenceRequest occurrenceNote
                         * @property {string|null} [occurrenceResourceUri] ValidateAttestationOccurrenceRequest occurrenceResourceUri
                         */
    
                        /**
                         * Constructs a new ValidateAttestationOccurrenceRequest.
                         * @memberof google.cloud.binaryauthorization.v1
                         * @classdesc Represents a ValidateAttestationOccurrenceRequest.
                         * @implements IValidateAttestationOccurrenceRequest
                         * @constructor
                         * @param {google.cloud.binaryauthorization.v1.IValidateAttestationOccurrenceRequest=} [properties] Properties to set
                         */
                        function ValidateAttestationOccurrenceRequest(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * ValidateAttestationOccurrenceRequest attestor.
                         * @member {string} attestor
                         * @memberof google.cloud.binaryauthorization.v1.ValidateAttestationOccurrenceRequest
                         * @instance
                         */
                        ValidateAttestationOccurrenceRequest.prototype.attestor = "";
    
                        /**
                         * ValidateAttestationOccurrenceRequest attestation.
                         * @member {grafeas.v1.IAttestationOccurrence|null|undefined} attestation
                         * @memberof google.cloud.binaryauthorization.v1.ValidateAttestationOccurrenceRequest
                         * @instance
                         */
                        ValidateAttestationOccurrenceRequest.prototype.attestation = null;
    
                        /**
                         * ValidateAttestationOccurrenceRequest occurrenceNote.
                         * @member {string} occurrenceNote
                         * @memberof google.cloud.binaryauthorization.v1.ValidateAttestationOccurrenceRequest
                         * @instance
                         */
                        ValidateAttestationOccurrenceRequest.prototype.occurrenceNote = "";
    
                        /**
                         * ValidateAttestationOccurrenceRequest occurrenceResourceUri.
                         * @member {string} occurrenceResourceUri
                         * @memberof google.cloud.binaryauthorization.v1.ValidateAttestationOccurrenceRequest
                         * @instance
                         */
                        ValidateAttestationOccurrenceRequest.prototype.occurrenceResourceUri = "";
    
                        /**
                         * Creates a new ValidateAttestationOccurrenceRequest instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.binaryauthorization.v1.ValidateAttestationOccurrenceRequest
                         * @static
                         * @param {google.cloud.binaryauthorization.v1.IValidateAttestationOccurrenceRequest=} [properties] Properties to set
                         * @returns {google.cloud.binaryauthorization.v1.ValidateAttestationOccurrenceRequest} ValidateAttestationOccurrenceRequest instance
                         */
                        ValidateAttestationOccurrenceRequest.create = function create(properties) {
                            return new ValidateAttestationOccurrenceRequest(properties);
                        };
    
                        /**
                         * Encodes the specified ValidateAttestationOccurrenceRequest message. Does not implicitly {@link google.cloud.binaryauthorization.v1.ValidateAttestationOccurrenceRequest.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.binaryauthorization.v1.ValidateAttestationOccurrenceRequest
                         * @static
                         * @param {google.cloud.binaryauthorization.v1.IValidateAttestationOccurrenceRequest} message ValidateAttestationOccurrenceRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        ValidateAttestationOccurrenceRequest.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.attestor != null && Object.hasOwnProperty.call(message, "attestor"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.attestor);
                            if (message.attestation != null && Object.hasOwnProperty.call(message, "attestation"))
                                $root.grafeas.v1.AttestationOccurrence.encode(message.attestation, writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                            if (message.occurrenceNote != null && Object.hasOwnProperty.call(message, "occurrenceNote"))
                                writer.uint32(/* id 3, wireType 2 =*/26).string(message.occurrenceNote);
                            if (message.occurrenceResourceUri != null && Object.hasOwnProperty.call(message, "occurrenceResourceUri"))
                                writer.uint32(/* id 4, wireType 2 =*/34).string(message.occurrenceResourceUri);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified ValidateAttestationOccurrenceRequest message, length delimited. Does not implicitly {@link google.cloud.binaryauthorization.v1.ValidateAttestationOccurrenceRequest.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.binaryauthorization.v1.ValidateAttestationOccurrenceRequest
                         * @static
                         * @param {google.cloud.binaryauthorization.v1.IValidateAttestationOccurrenceRequest} message ValidateAttestationOccurrenceRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        ValidateAttestationOccurrenceRequest.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a ValidateAttestationOccurrenceRequest message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.binaryauthorization.v1.ValidateAttestationOccurrenceRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.binaryauthorization.v1.ValidateAttestationOccurrenceRequest} ValidateAttestationOccurrenceRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        ValidateAttestationOccurrenceRequest.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.binaryauthorization.v1.ValidateAttestationOccurrenceRequest();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.attestor = reader.string();
                                        break;
                                    }
                                case 2: {
                                        message.attestation = $root.grafeas.v1.AttestationOccurrence.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 3: {
                                        message.occurrenceNote = reader.string();
                                        break;
                                    }
                                case 4: {
                                        message.occurrenceResourceUri = reader.string();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a ValidateAttestationOccurrenceRequest message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.binaryauthorization.v1.ValidateAttestationOccurrenceRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.binaryauthorization.v1.ValidateAttestationOccurrenceRequest} ValidateAttestationOccurrenceRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        ValidateAttestationOccurrenceRequest.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a ValidateAttestationOccurrenceRequest message.
                         * @function verify
                         * @memberof google.cloud.binaryauthorization.v1.ValidateAttestationOccurrenceRequest
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        ValidateAttestationOccurrenceRequest.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.attestor != null && message.hasOwnProperty("attestor"))
                                if (!$util.isString(message.attestor))
                                    return "attestor: string expected";
                            if (message.attestation != null && message.hasOwnProperty("attestation")) {
                                var error = $root.grafeas.v1.AttestationOccurrence.verify(message.attestation);
                                if (error)
                                    return "attestation." + error;
                            }
                            if (message.occurrenceNote != null && message.hasOwnProperty("occurrenceNote"))
                                if (!$util.isString(message.occurrenceNote))
                                    return "occurrenceNote: string expected";
                            if (message.occurrenceResourceUri != null && message.hasOwnProperty("occurrenceResourceUri"))
                                if (!$util.isString(message.occurrenceResourceUri))
                                    return "occurrenceResourceUri: string expected";
                            return null;
                        };
    
                        /**
                         * Creates a ValidateAttestationOccurrenceRequest message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.binaryauthorization.v1.ValidateAttestationOccurrenceRequest
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.binaryauthorization.v1.ValidateAttestationOccurrenceRequest} ValidateAttestationOccurrenceRequest
                         */
                        ValidateAttestationOccurrenceRequest.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.binaryauthorization.v1.ValidateAttestationOccurrenceRequest)
                                return object;
                            var message = new $root.google.cloud.binaryauthorization.v1.ValidateAttestationOccurrenceRequest();
                            if (object.attestor != null)
                                message.attestor = String(object.attestor);
                            if (object.attestation != null) {
                                if (typeof object.attestation !== "object")
                                    throw TypeError(".google.cloud.binaryauthorization.v1.ValidateAttestationOccurrenceRequest.attestation: object expected");
                                message.attestation = $root.grafeas.v1.AttestationOccurrence.fromObject(object.attestation);
                            }
                            if (object.occurrenceNote != null)
                                message.occurrenceNote = String(object.occurrenceNote);
                            if (object.occurrenceResourceUri != null)
                                message.occurrenceResourceUri = String(object.occurrenceResourceUri);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a ValidateAttestationOccurrenceRequest message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.binaryauthorization.v1.ValidateAttestationOccurrenceRequest
                         * @static
                         * @param {google.cloud.binaryauthorization.v1.ValidateAttestationOccurrenceRequest} message ValidateAttestationOccurrenceRequest
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        ValidateAttestationOccurrenceRequest.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.attestor = "";
                                object.attestation = null;
                                object.occurrenceNote = "";
                                object.occurrenceResourceUri = "";
                            }
                            if (message.attestor != null && message.hasOwnProperty("attestor"))
                                object.attestor = message.attestor;
                            if (message.attestation != null && message.hasOwnProperty("attestation"))
                                object.attestation = $root.grafeas.v1.AttestationOccurrence.toObject(message.attestation, options);
                            if (message.occurrenceNote != null && message.hasOwnProperty("occurrenceNote"))
                                object.occurrenceNote = message.occurrenceNote;
                            if (message.occurrenceResourceUri != null && message.hasOwnProperty("occurrenceResourceUri"))
                                object.occurrenceResourceUri = message.occurrenceResourceUri;
                            return object;
                        };
    
                        /**
                         * Converts this ValidateAttestationOccurrenceRequest to JSON.
                         * @function toJSON
                         * @memberof google.cloud.binaryauthorization.v1.ValidateAttestationOccurrenceRequest
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        ValidateAttestationOccurrenceRequest.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for ValidateAttestationOccurrenceRequest
                         * @function getTypeUrl
                         * @memberof google.cloud.binaryauthorization.v1.ValidateAttestationOccurrenceRequest
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        ValidateAttestationOccurrenceRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.binaryauthorization.v1.ValidateAttestationOccurrenceRequest";
                        };
    
                        return ValidateAttestationOccurrenceRequest;
                    })();
    
                    v1.ValidateAttestationOccurrenceResponse = (function() {
    
                        /**
                         * Properties of a ValidateAttestationOccurrenceResponse.
                         * @memberof google.cloud.binaryauthorization.v1
                         * @interface IValidateAttestationOccurrenceResponse
                         * @property {google.cloud.binaryauthorization.v1.ValidateAttestationOccurrenceResponse.Result|null} [result] ValidateAttestationOccurrenceResponse result
                         * @property {string|null} [denialReason] ValidateAttestationOccurrenceResponse denialReason
                         */
    
                        /**
                         * Constructs a new ValidateAttestationOccurrenceResponse.
                         * @memberof google.cloud.binaryauthorization.v1
                         * @classdesc Represents a ValidateAttestationOccurrenceResponse.
                         * @implements IValidateAttestationOccurrenceResponse
                         * @constructor
                         * @param {google.cloud.binaryauthorization.v1.IValidateAttestationOccurrenceResponse=} [properties] Properties to set
                         */
                        function ValidateAttestationOccurrenceResponse(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * ValidateAttestationOccurrenceResponse result.
                         * @member {google.cloud.binaryauthorization.v1.ValidateAttestationOccurrenceResponse.Result} result
                         * @memberof google.cloud.binaryauthorization.v1.ValidateAttestationOccurrenceResponse
                         * @instance
                         */
                        ValidateAttestationOccurrenceResponse.prototype.result = 0;
    
                        /**
                         * ValidateAttestationOccurrenceResponse denialReason.
                         * @member {string} denialReason
                         * @memberof google.cloud.binaryauthorization.v1.ValidateAttestationOccurrenceResponse
                         * @instance
                         */
                        ValidateAttestationOccurrenceResponse.prototype.denialReason = "";
    
                        /**
                         * Creates a new ValidateAttestationOccurrenceResponse instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.binaryauthorization.v1.ValidateAttestationOccurrenceResponse
                         * @static
                         * @param {google.cloud.binaryauthorization.v1.IValidateAttestationOccurrenceResponse=} [properties] Properties to set
                         * @returns {google.cloud.binaryauthorization.v1.ValidateAttestationOccurrenceResponse} ValidateAttestationOccurrenceResponse instance
                         */
                        ValidateAttestationOccurrenceResponse.create = function create(properties) {
                            return new ValidateAttestationOccurrenceResponse(properties);
                        };
    
                        /**
                         * Encodes the specified ValidateAttestationOccurrenceResponse message. Does not implicitly {@link google.cloud.binaryauthorization.v1.ValidateAttestationOccurrenceResponse.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.binaryauthorization.v1.ValidateAttestationOccurrenceResponse
                         * @static
                         * @param {google.cloud.binaryauthorization.v1.IValidateAttestationOccurrenceResponse} message ValidateAttestationOccurrenceResponse message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        ValidateAttestationOccurrenceResponse.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.result != null && Object.hasOwnProperty.call(message, "result"))
                                writer.uint32(/* id 1, wireType 0 =*/8).int32(message.result);
                            if (message.denialReason != null && Object.hasOwnProperty.call(message, "denialReason"))
                                writer.uint32(/* id 2, wireType 2 =*/18).string(message.denialReason);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified ValidateAttestationOccurrenceResponse message, length delimited. Does not implicitly {@link google.cloud.binaryauthorization.v1.ValidateAttestationOccurrenceResponse.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.binaryauthorization.v1.ValidateAttestationOccurrenceResponse
                         * @static
                         * @param {google.cloud.binaryauthorization.v1.IValidateAttestationOccurrenceResponse} message ValidateAttestationOccurrenceResponse message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        ValidateAttestationOccurrenceResponse.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a ValidateAttestationOccurrenceResponse message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.binaryauthorization.v1.ValidateAttestationOccurrenceResponse
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.binaryauthorization.v1.ValidateAttestationOccurrenceResponse} ValidateAttestationOccurrenceResponse
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        ValidateAttestationOccurrenceResponse.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.binaryauthorization.v1.ValidateAttestationOccurrenceResponse();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.result = reader.int32();
                                        break;
                                    }
                                case 2: {
                                        message.denialReason = reader.string();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a ValidateAttestationOccurrenceResponse message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.binaryauthorization.v1.ValidateAttestationOccurrenceResponse
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.binaryauthorization.v1.ValidateAttestationOccurrenceResponse} ValidateAttestationOccurrenceResponse
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        ValidateAttestationOccurrenceResponse.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a ValidateAttestationOccurrenceResponse message.
                         * @function verify
                         * @memberof google.cloud.binaryauthorization.v1.ValidateAttestationOccurrenceResponse
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        ValidateAttestationOccurrenceResponse.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.result != null && message.hasOwnProperty("result"))
                                switch (message.result) {
                                default:
                                    return "result: enum value expected";
                                case 0:
                                case 1:
                                case 2:
                                    break;
                                }
                            if (message.denialReason != null && message.hasOwnProperty("denialReason"))
                                if (!$util.isString(message.denialReason))
                                    return "denialReason: string expected";
                            return null;
                        };
    
                        /**
                         * Creates a ValidateAttestationOccurrenceResponse message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.binaryauthorization.v1.ValidateAttestationOccurrenceResponse
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.binaryauthorization.v1.ValidateAttestationOccurrenceResponse} ValidateAttestationOccurrenceResponse
                         */
                        ValidateAttestationOccurrenceResponse.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.binaryauthorization.v1.ValidateAttestationOccurrenceResponse)
                                return object;
                            var message = new $root.google.cloud.binaryauthorization.v1.ValidateAttestationOccurrenceResponse();
                            switch (object.result) {
                            default:
                                if (typeof object.result === "number") {
                                    message.result = object.result;
                                    break;
                                }
                                break;
                            case "RESULT_UNSPECIFIED":
                            case 0:
                                message.result = 0;
                                break;
                            case "VERIFIED":
                            case 1:
                                message.result = 1;
                                break;
                            case "ATTESTATION_NOT_VERIFIABLE":
                            case 2:
                                message.result = 2;
                                break;
                            }
                            if (object.denialReason != null)
                                message.denialReason = String(object.denialReason);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a ValidateAttestationOccurrenceResponse message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.binaryauthorization.v1.ValidateAttestationOccurrenceResponse
                         * @static
                         * @param {google.cloud.binaryauthorization.v1.ValidateAttestationOccurrenceResponse} message ValidateAttestationOccurrenceResponse
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        ValidateAttestationOccurrenceResponse.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.result = options.enums === String ? "RESULT_UNSPECIFIED" : 0;
                                object.denialReason = "";
                            }
                            if (message.result != null && message.hasOwnProperty("result"))
                                object.result = options.enums === String ? $root.google.cloud.binaryauthorization.v1.ValidateAttestationOccurrenceResponse.Result[message.result] === undefined ? message.result : $root.google.cloud.binaryauthorization.v1.ValidateAttestationOccurrenceResponse.Result[message.result] : message.result;
                            if (message.denialReason != null && message.hasOwnProperty("denialReason"))
                                object.denialReason = message.denialReason;
                            return object;
                        };
    
                        /**
                         * Converts this ValidateAttestationOccurrenceResponse to JSON.
                         * @function toJSON
                         * @memberof google.cloud.binaryauthorization.v1.ValidateAttestationOccurrenceResponse
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        ValidateAttestationOccurrenceResponse.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for ValidateAttestationOccurrenceResponse
                         * @function getTypeUrl
                         * @memberof google.cloud.binaryauthorization.v1.ValidateAttestationOccurrenceResponse
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        ValidateAttestationOccurrenceResponse.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.binaryauthorization.v1.ValidateAttestationOccurrenceResponse";
                        };
    
                        /**
                         * Result enum.
                         * @name google.cloud.binaryauthorization.v1.ValidateAttestationOccurrenceResponse.Result
                         * @enum {number}
                         * @property {number} RESULT_UNSPECIFIED=0 RESULT_UNSPECIFIED value
                         * @property {number} VERIFIED=1 VERIFIED value
                         * @property {number} ATTESTATION_NOT_VERIFIABLE=2 ATTESTATION_NOT_VERIFIABLE value
                         */
                        ValidateAttestationOccurrenceResponse.Result = (function() {
                            var valuesById = {}, values = Object.create(valuesById);
                            values[valuesById[0] = "RESULT_UNSPECIFIED"] = 0;
                            values[valuesById[1] = "VERIFIED"] = 1;
                            values[valuesById[2] = "ATTESTATION_NOT_VERIFIABLE"] = 2;
                            return values;
                        })();
    
                        return ValidateAttestationOccurrenceResponse;
                    })();
    
                    return v1;
                })();
    
                binaryauthorization.v1beta1 = (function() {
    
                    /**
                     * Namespace v1beta1.
                     * @memberof google.cloud.binaryauthorization
                     * @namespace
                     */
                    var v1beta1 = {};
    
                    v1beta1.ContinuousValidationEvent = (function() {
    
                        /**
                         * Properties of a ContinuousValidationEvent.
                         * @memberof google.cloud.binaryauthorization.v1beta1
                         * @interface IContinuousValidationEvent
                         * @property {google.cloud.binaryauthorization.v1beta1.ContinuousValidationEvent.IContinuousValidationPodEvent|null} [podEvent] ContinuousValidationEvent podEvent
                         * @property {google.cloud.binaryauthorization.v1beta1.ContinuousValidationEvent.IUnsupportedPolicyEvent|null} [unsupportedPolicyEvent] ContinuousValidationEvent unsupportedPolicyEvent
                         */
    
                        /**
                         * Constructs a new ContinuousValidationEvent.
                         * @memberof google.cloud.binaryauthorization.v1beta1
                         * @classdesc Represents a ContinuousValidationEvent.
                         * @implements IContinuousValidationEvent
                         * @constructor
                         * @param {google.cloud.binaryauthorization.v1beta1.IContinuousValidationEvent=} [properties] Properties to set
                         */
                        function ContinuousValidationEvent(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * ContinuousValidationEvent podEvent.
                         * @member {google.cloud.binaryauthorization.v1beta1.ContinuousValidationEvent.IContinuousValidationPodEvent|null|undefined} podEvent
                         * @memberof google.cloud.binaryauthorization.v1beta1.ContinuousValidationEvent
                         * @instance
                         */
                        ContinuousValidationEvent.prototype.podEvent = null;
    
                        /**
                         * ContinuousValidationEvent unsupportedPolicyEvent.
                         * @member {google.cloud.binaryauthorization.v1beta1.ContinuousValidationEvent.IUnsupportedPolicyEvent|null|undefined} unsupportedPolicyEvent
                         * @memberof google.cloud.binaryauthorization.v1beta1.ContinuousValidationEvent
                         * @instance
                         */
                        ContinuousValidationEvent.prototype.unsupportedPolicyEvent = null;
    
                        // OneOf field names bound to virtual getters and setters
                        var $oneOfFields;
    
                        /**
                         * ContinuousValidationEvent eventType.
                         * @member {"podEvent"|"unsupportedPolicyEvent"|undefined} eventType
                         * @memberof google.cloud.binaryauthorization.v1beta1.ContinuousValidationEvent
                         * @instance
                         */
                        Object.defineProperty(ContinuousValidationEvent.prototype, "eventType", {
                            get: $util.oneOfGetter($oneOfFields = ["podEvent", "unsupportedPolicyEvent"]),
                            set: $util.oneOfSetter($oneOfFields)
                        });
    
                        /**
                         * Creates a new ContinuousValidationEvent instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.binaryauthorization.v1beta1.ContinuousValidationEvent
                         * @static
                         * @param {google.cloud.binaryauthorization.v1beta1.IContinuousValidationEvent=} [properties] Properties to set
                         * @returns {google.cloud.binaryauthorization.v1beta1.ContinuousValidationEvent} ContinuousValidationEvent instance
                         */
                        ContinuousValidationEvent.create = function create(properties) {
                            return new ContinuousValidationEvent(properties);
                        };
    
                        /**
                         * Encodes the specified ContinuousValidationEvent message. Does not implicitly {@link google.cloud.binaryauthorization.v1beta1.ContinuousValidationEvent.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.binaryauthorization.v1beta1.ContinuousValidationEvent
                         * @static
                         * @param {google.cloud.binaryauthorization.v1beta1.IContinuousValidationEvent} message ContinuousValidationEvent message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        ContinuousValidationEvent.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.podEvent != null && Object.hasOwnProperty.call(message, "podEvent"))
                                $root.google.cloud.binaryauthorization.v1beta1.ContinuousValidationEvent.ContinuousValidationPodEvent.encode(message.podEvent, writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                            if (message.unsupportedPolicyEvent != null && Object.hasOwnProperty.call(message, "unsupportedPolicyEvent"))
                                $root.google.cloud.binaryauthorization.v1beta1.ContinuousValidationEvent.UnsupportedPolicyEvent.encode(message.unsupportedPolicyEvent, writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                            return writer;
                        };
    
                        /**
                         * Encodes the specified ContinuousValidationEvent message, length delimited. Does not implicitly {@link google.cloud.binaryauthorization.v1beta1.ContinuousValidationEvent.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.binaryauthorization.v1beta1.ContinuousValidationEvent
                         * @static
                         * @param {google.cloud.binaryauthorization.v1beta1.IContinuousValidationEvent} message ContinuousValidationEvent message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        ContinuousValidationEvent.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a ContinuousValidationEvent message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.binaryauthorization.v1beta1.ContinuousValidationEvent
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.binaryauthorization.v1beta1.ContinuousValidationEvent} ContinuousValidationEvent
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        ContinuousValidationEvent.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.binaryauthorization.v1beta1.ContinuousValidationEvent();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.podEvent = $root.google.cloud.binaryauthorization.v1beta1.ContinuousValidationEvent.ContinuousValidationPodEvent.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 2: {
                                        message.unsupportedPolicyEvent = $root.google.cloud.binaryauthorization.v1beta1.ContinuousValidationEvent.UnsupportedPolicyEvent.decode(reader, reader.uint32());
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a ContinuousValidationEvent message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.binaryauthorization.v1beta1.ContinuousValidationEvent
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.binaryauthorization.v1beta1.ContinuousValidationEvent} ContinuousValidationEvent
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        ContinuousValidationEvent.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a ContinuousValidationEvent message.
                         * @function verify
                         * @memberof google.cloud.binaryauthorization.v1beta1.ContinuousValidationEvent
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        ContinuousValidationEvent.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            var properties = {};
                            if (message.podEvent != null && message.hasOwnProperty("podEvent")) {
                                properties.eventType = 1;
                                {
                                    var error = $root.google.cloud.binaryauthorization.v1beta1.ContinuousValidationEvent.ContinuousValidationPodEvent.verify(message.podEvent);
                                    if (error)
                                        return "podEvent." + error;
                                }
                            }
                            if (message.unsupportedPolicyEvent != null && message.hasOwnProperty("unsupportedPolicyEvent")) {
                                if (properties.eventType === 1)
                                    return "eventType: multiple values";
                                properties.eventType = 1;
                                {
                                    var error = $root.google.cloud.binaryauthorization.v1beta1.ContinuousValidationEvent.UnsupportedPolicyEvent.verify(message.unsupportedPolicyEvent);
                                    if (error)
                                        return "unsupportedPolicyEvent." + error;
                                }
                            }
                            return null;
                        };
    
                        /**
                         * Creates a ContinuousValidationEvent message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.binaryauthorization.v1beta1.ContinuousValidationEvent
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.binaryauthorization.v1beta1.ContinuousValidationEvent} ContinuousValidationEvent
                         */
                        ContinuousValidationEvent.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.binaryauthorization.v1beta1.ContinuousValidationEvent)
                                return object;
                            var message = new $root.google.cloud.binaryauthorization.v1beta1.ContinuousValidationEvent();
                            if (object.podEvent != null) {
                                if (typeof object.podEvent !== "object")
                                    throw TypeError(".google.cloud.binaryauthorization.v1beta1.ContinuousValidationEvent.podEvent: object expected");
                                message.podEvent = $root.google.cloud.binaryauthorization.v1beta1.ContinuousValidationEvent.ContinuousValidationPodEvent.fromObject(object.podEvent);
                            }
                            if (object.unsupportedPolicyEvent != null) {
                                if (typeof object.unsupportedPolicyEvent !== "object")
                                    throw TypeError(".google.cloud.binaryauthorization.v1beta1.ContinuousValidationEvent.unsupportedPolicyEvent: object expected");
                                message.unsupportedPolicyEvent = $root.google.cloud.binaryauthorization.v1beta1.ContinuousValidationEvent.UnsupportedPolicyEvent.fromObject(object.unsupportedPolicyEvent);
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a ContinuousValidationEvent message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.binaryauthorization.v1beta1.ContinuousValidationEvent
                         * @static
                         * @param {google.cloud.binaryauthorization.v1beta1.ContinuousValidationEvent} message ContinuousValidationEvent
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        ContinuousValidationEvent.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (message.podEvent != null && message.hasOwnProperty("podEvent")) {
                                object.podEvent = $root.google.cloud.binaryauthorization.v1beta1.ContinuousValidationEvent.ContinuousValidationPodEvent.toObject(message.podEvent, options);
                                if (options.oneofs)
                                    object.eventType = "podEvent";
                            }
                            if (message.unsupportedPolicyEvent != null && message.hasOwnProperty("unsupportedPolicyEvent")) {
                                object.unsupportedPolicyEvent = $root.google.cloud.binaryauthorization.v1beta1.ContinuousValidationEvent.UnsupportedPolicyEvent.toObject(message.unsupportedPolicyEvent, options);
                                if (options.oneofs)
                                    object.eventType = "unsupportedPolicyEvent";
                            }
                            return object;
                        };
    
                        /**
                         * Converts this ContinuousValidationEvent to JSON.
                         * @function toJSON
                         * @memberof google.cloud.binaryauthorization.v1beta1.ContinuousValidationEvent
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        ContinuousValidationEvent.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for ContinuousValidationEvent
                         * @function getTypeUrl
                         * @memberof google.cloud.binaryauthorization.v1beta1.ContinuousValidationEvent
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        ContinuousValidationEvent.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.binaryauthorization.v1beta1.ContinuousValidationEvent";
                        };
    
                        ContinuousValidationEvent.ContinuousValidationPodEvent = (function() {
    
                            /**
                             * Properties of a ContinuousValidationPodEvent.
                             * @memberof google.cloud.binaryauthorization.v1beta1.ContinuousValidationEvent
                             * @interface IContinuousValidationPodEvent
                             * @property {string|null} [podNamespace] ContinuousValidationPodEvent podNamespace
                             * @property {string|null} [pod] ContinuousValidationPodEvent pod
                             * @property {google.protobuf.ITimestamp|null} [deployTime] ContinuousValidationPodEvent deployTime
                             * @property {google.protobuf.ITimestamp|null} [endTime] ContinuousValidationPodEvent endTime
                             * @property {google.cloud.binaryauthorization.v1beta1.ContinuousValidationEvent.ContinuousValidationPodEvent.PolicyConformanceVerdict|null} [verdict] ContinuousValidationPodEvent verdict
                             * @property {Array.<google.cloud.binaryauthorization.v1beta1.ContinuousValidationEvent.ContinuousValidationPodEvent.IImageDetails>|null} [images] ContinuousValidationPodEvent images
                             */
    
                            /**
                             * Constructs a new ContinuousValidationPodEvent.
                             * @memberof google.cloud.binaryauthorization.v1beta1.ContinuousValidationEvent
                             * @classdesc Represents a ContinuousValidationPodEvent.
                             * @implements IContinuousValidationPodEvent
                             * @constructor
                             * @param {google.cloud.binaryauthorization.v1beta1.ContinuousValidationEvent.IContinuousValidationPodEvent=} [properties] Properties to set
                             */
                            function ContinuousValidationPodEvent(properties) {
                                this.images = [];
                                if (properties)
                                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                        if (properties[keys[i]] != null)
                                            this[keys[i]] = properties[keys[i]];
                            }
    
                            /**
                             * ContinuousValidationPodEvent podNamespace.
                             * @member {string} podNamespace
                             * @memberof google.cloud.binaryauthorization.v1beta1.ContinuousValidationEvent.ContinuousValidationPodEvent
                             * @instance
                             */
                            ContinuousValidationPodEvent.prototype.podNamespace = "";
    
                            /**
                             * ContinuousValidationPodEvent pod.
                             * @member {string} pod
                             * @memberof google.cloud.binaryauthorization.v1beta1.ContinuousValidationEvent.ContinuousValidationPodEvent
                             * @instance
                             */
                            ContinuousValidationPodEvent.prototype.pod = "";
    
                            /**
                             * ContinuousValidationPodEvent deployTime.
                             * @member {google.protobuf.ITimestamp|null|undefined} deployTime
                             * @memberof google.cloud.binaryauthorization.v1beta1.ContinuousValidationEvent.ContinuousValidationPodEvent
                             * @instance
                             */
                            ContinuousValidationPodEvent.prototype.deployTime = null;
    
                            /**
                             * ContinuousValidationPodEvent endTime.
                             * @member {google.protobuf.ITimestamp|null|undefined} endTime
                             * @memberof google.cloud.binaryauthorization.v1beta1.ContinuousValidationEvent.ContinuousValidationPodEvent
                             * @instance
                             */
                            ContinuousValidationPodEvent.prototype.endTime = null;
    
                            /**
                             * ContinuousValidationPodEvent verdict.
                             * @member {google.cloud.binaryauthorization.v1beta1.ContinuousValidationEvent.ContinuousValidationPodEvent.PolicyConformanceVerdict} verdict
                             * @memberof google.cloud.binaryauthorization.v1beta1.ContinuousValidationEvent.ContinuousValidationPodEvent
                             * @instance
                             */
                            ContinuousValidationPodEvent.prototype.verdict = 0;
    
                            /**
                             * ContinuousValidationPodEvent images.
                             * @member {Array.<google.cloud.binaryauthorization.v1beta1.ContinuousValidationEvent.ContinuousValidationPodEvent.IImageDetails>} images
                             * @memberof google.cloud.binaryauthorization.v1beta1.ContinuousValidationEvent.ContinuousValidationPodEvent
                             * @instance
                             */
                            ContinuousValidationPodEvent.prototype.images = $util.emptyArray;
    
                            /**
                             * Creates a new ContinuousValidationPodEvent instance using the specified properties.
                             * @function create
                             * @memberof google.cloud.binaryauthorization.v1beta1.ContinuousValidationEvent.ContinuousValidationPodEvent
                             * @static
                             * @param {google.cloud.binaryauthorization.v1beta1.ContinuousValidationEvent.IContinuousValidationPodEvent=} [properties] Properties to set
                             * @returns {google.cloud.binaryauthorization.v1beta1.ContinuousValidationEvent.ContinuousValidationPodEvent} ContinuousValidationPodEvent instance
                             */
                            ContinuousValidationPodEvent.create = function create(properties) {
                                return new ContinuousValidationPodEvent(properties);
                            };
    
                            /**
                             * Encodes the specified ContinuousValidationPodEvent message. Does not implicitly {@link google.cloud.binaryauthorization.v1beta1.ContinuousValidationEvent.ContinuousValidationPodEvent.verify|verify} messages.
                             * @function encode
                             * @memberof google.cloud.binaryauthorization.v1beta1.ContinuousValidationEvent.ContinuousValidationPodEvent
                             * @static
                             * @param {google.cloud.binaryauthorization.v1beta1.ContinuousValidationEvent.IContinuousValidationPodEvent} message ContinuousValidationPodEvent message or plain object to encode
                             * @param {$protobuf.Writer} [writer] Writer to encode to
                             * @returns {$protobuf.Writer} Writer
                             */
                            ContinuousValidationPodEvent.encode = function encode(message, writer) {
                                if (!writer)
                                    writer = $Writer.create();
                                if (message.pod != null && Object.hasOwnProperty.call(message, "pod"))
                                    writer.uint32(/* id 1, wireType 2 =*/10).string(message.pod);
                                if (message.deployTime != null && Object.hasOwnProperty.call(message, "deployTime"))
                                    $root.google.protobuf.Timestamp.encode(message.deployTime, writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                                if (message.endTime != null && Object.hasOwnProperty.call(message, "endTime"))
                                    $root.google.protobuf.Timestamp.encode(message.endTime, writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();
                                if (message.verdict != null && Object.hasOwnProperty.call(message, "verdict"))
                                    writer.uint32(/* id 4, wireType 0 =*/32).int32(message.verdict);
                                if (message.images != null && message.images.length)
                                    for (var i = 0; i < message.images.length; ++i)
                                        $root.google.cloud.binaryauthorization.v1beta1.ContinuousValidationEvent.ContinuousValidationPodEvent.ImageDetails.encode(message.images[i], writer.uint32(/* id 5, wireType 2 =*/42).fork()).ldelim();
                                if (message.podNamespace != null && Object.hasOwnProperty.call(message, "podNamespace"))
                                    writer.uint32(/* id 7, wireType 2 =*/58).string(message.podNamespace);
                                return writer;
                            };
    
                            /**
                             * Encodes the specified ContinuousValidationPodEvent message, length delimited. Does not implicitly {@link google.cloud.binaryauthorization.v1beta1.ContinuousValidationEvent.ContinuousValidationPodEvent.verify|verify} messages.
                             * @function encodeDelimited
                             * @memberof google.cloud.binaryauthorization.v1beta1.ContinuousValidationEvent.ContinuousValidationPodEvent
                             * @static
                             * @param {google.cloud.binaryauthorization.v1beta1.ContinuousValidationEvent.IContinuousValidationPodEvent} message ContinuousValidationPodEvent message or plain object to encode
                             * @param {$protobuf.Writer} [writer] Writer to encode to
                             * @returns {$protobuf.Writer} Writer
                             */
                            ContinuousValidationPodEvent.encodeDelimited = function encodeDelimited(message, writer) {
                                return this.encode(message, writer).ldelim();
                            };
    
                            /**
                             * Decodes a ContinuousValidationPodEvent message from the specified reader or buffer.
                             * @function decode
                             * @memberof google.cloud.binaryauthorization.v1beta1.ContinuousValidationEvent.ContinuousValidationPodEvent
                             * @static
                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                             * @param {number} [length] Message length if known beforehand
                             * @returns {google.cloud.binaryauthorization.v1beta1.ContinuousValidationEvent.ContinuousValidationPodEvent} ContinuousValidationPodEvent
                             * @throws {Error} If the payload is not a reader or valid buffer
                             * @throws {$protobuf.util.ProtocolError} If required fields are missing
                             */
                            ContinuousValidationPodEvent.decode = function decode(reader, length) {
                                if (!(reader instanceof $Reader))
                                    reader = $Reader.create(reader);
                                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.binaryauthorization.v1beta1.ContinuousValidationEvent.ContinuousValidationPodEvent();
                                while (reader.pos < end) {
                                    var tag = reader.uint32();
                                    switch (tag >>> 3) {
                                    case 7: {
                                            message.podNamespace = reader.string();
                                            break;
                                        }
                                    case 1: {
                                            message.pod = reader.string();
                                            break;
                                        }
                                    case 2: {
                                            message.deployTime = $root.google.protobuf.Timestamp.decode(reader, reader.uint32());
                                            break;
                                        }
                                    case 3: {
                                            message.endTime = $root.google.protobuf.Timestamp.decode(reader, reader.uint32());
                                            break;
                                        }
                                    case 4: {
                                            message.verdict = reader.int32();
                                            break;
                                        }
                                    case 5: {
                                            if (!(message.images && message.images.length))
                                                message.images = [];
                                            message.images.push($root.google.cloud.binaryauthorization.v1beta1.ContinuousValidationEvent.ContinuousValidationPodEvent.ImageDetails.decode(reader, reader.uint32()));
                                            break;
                                        }
                                    default:
                                        reader.skipType(tag & 7);
                                        break;
                                    }
                                }
                                return message;
                            };
    
                            /**
                             * Decodes a ContinuousValidationPodEvent message from the specified reader or buffer, length delimited.
                             * @function decodeDelimited
                             * @memberof google.cloud.binaryauthorization.v1beta1.ContinuousValidationEvent.ContinuousValidationPodEvent
                             * @static
                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                             * @returns {google.cloud.binaryauthorization.v1beta1.ContinuousValidationEvent.ContinuousValidationPodEvent} ContinuousValidationPodEvent
                             * @throws {Error} If the payload is not a reader or valid buffer
                             * @throws {$protobuf.util.ProtocolError} If required fields are missing
                             */
                            ContinuousValidationPodEvent.decodeDelimited = function decodeDelimited(reader) {
                                if (!(reader instanceof $Reader))
                                    reader = new $Reader(reader);
                                return this.decode(reader, reader.uint32());
                            };
    
                            /**
                             * Verifies a ContinuousValidationPodEvent message.
                             * @function verify
                             * @memberof google.cloud.binaryauthorization.v1beta1.ContinuousValidationEvent.ContinuousValidationPodEvent
                             * @static
                             * @param {Object.<string,*>} message Plain object to verify
                             * @returns {string|null} `null` if valid, otherwise the reason why it is not
                             */
                            ContinuousValidationPodEvent.verify = function verify(message) {
                                if (typeof message !== "object" || message === null)
                                    return "object expected";
                                if (message.podNamespace != null && message.hasOwnProperty("podNamespace"))
                                    if (!$util.isString(message.podNamespace))
                                        return "podNamespace: string expected";
                                if (message.pod != null && message.hasOwnProperty("pod"))
                                    if (!$util.isString(message.pod))
                                        return "pod: string expected";
                                if (message.deployTime != null && message.hasOwnProperty("deployTime")) {
                                    var error = $root.google.protobuf.Timestamp.verify(message.deployTime);
                                    if (error)
                                        return "deployTime." + error;
                                }
                                if (message.endTime != null && message.hasOwnProperty("endTime")) {
                                    var error = $root.google.protobuf.Timestamp.verify(message.endTime);
                                    if (error)
                                        return "endTime." + error;
                                }
                                if (message.verdict != null && message.hasOwnProperty("verdict"))
                                    switch (message.verdict) {
                                    default:
                                        return "verdict: enum value expected";
                                    case 0:
                                    case 1:
                                        break;
                                    }
                                if (message.images != null && message.hasOwnProperty("images")) {
                                    if (!Array.isArray(message.images))
                                        return "images: array expected";
                                    for (var i = 0; i < message.images.length; ++i) {
                                        var error = $root.google.cloud.binaryauthorization.v1beta1.ContinuousValidationEvent.ContinuousValidationPodEvent.ImageDetails.verify(message.images[i]);
                                        if (error)
                                            return "images." + error;
                                    }
                                }
                                return null;
                            };
    
                            /**
                             * Creates a ContinuousValidationPodEvent message from a plain object. Also converts values to their respective internal types.
                             * @function fromObject
                             * @memberof google.cloud.binaryauthorization.v1beta1.ContinuousValidationEvent.ContinuousValidationPodEvent
                             * @static
                             * @param {Object.<string,*>} object Plain object
                             * @returns {google.cloud.binaryauthorization.v1beta1.ContinuousValidationEvent.ContinuousValidationPodEvent} ContinuousValidationPodEvent
                             */
                            ContinuousValidationPodEvent.fromObject = function fromObject(object) {
                                if (object instanceof $root.google.cloud.binaryauthorization.v1beta1.ContinuousValidationEvent.ContinuousValidationPodEvent)
                                    return object;
                                var message = new $root.google.cloud.binaryauthorization.v1beta1.ContinuousValidationEvent.ContinuousValidationPodEvent();
                                if (object.podNamespace != null)
                                    message.podNamespace = String(object.podNamespace);
                                if (object.pod != null)
                                    message.pod = String(object.pod);
                                if (object.deployTime != null) {
                                    if (typeof object.deployTime !== "object")
                                        throw TypeError(".google.cloud.binaryauthorization.v1beta1.ContinuousValidationEvent.ContinuousValidationPodEvent.deployTime: object expected");
                                    message.deployTime = $root.google.protobuf.Timestamp.fromObject(object.deployTime);
                                }
                                if (object.endTime != null) {
                                    if (typeof object.endTime !== "object")
                                        throw TypeError(".google.cloud.binaryauthorization.v1beta1.ContinuousValidationEvent.ContinuousValidationPodEvent.endTime: object expected");
                                    message.endTime = $root.google.protobuf.Timestamp.fromObject(object.endTime);
                                }
                                switch (object.verdict) {
                                default:
                                    if (typeof object.verdict === "number") {
                                        message.verdict = object.verdict;
                                        break;
                                    }
                                    break;
                                case "POLICY_CONFORMANCE_VERDICT_UNSPECIFIED":
                                case 0:
                                    message.verdict = 0;
                                    break;
                                case "VIOLATES_POLICY":
                                case 1:
                                    message.verdict = 1;
                                    break;
                                }
                                if (object.images) {
                                    if (!Array.isArray(object.images))
                                        throw TypeError(".google.cloud.binaryauthorization.v1beta1.ContinuousValidationEvent.ContinuousValidationPodEvent.images: array expected");
                                    message.images = [];
                                    for (var i = 0; i < object.images.length; ++i) {
                                        if (typeof object.images[i] !== "object")
                                            throw TypeError(".google.cloud.binaryauthorization.v1beta1.ContinuousValidationEvent.ContinuousValidationPodEvent.images: object expected");
                                        message.images[i] = $root.google.cloud.binaryauthorization.v1beta1.ContinuousValidationEvent.ContinuousValidationPodEvent.ImageDetails.fromObject(object.images[i]);
                                    }
                                }
                                return message;
                            };
    
                            /**
                             * Creates a plain object from a ContinuousValidationPodEvent message. Also converts values to other types if specified.
                             * @function toObject
                             * @memberof google.cloud.binaryauthorization.v1beta1.ContinuousValidationEvent.ContinuousValidationPodEvent
                             * @static
                             * @param {google.cloud.binaryauthorization.v1beta1.ContinuousValidationEvent.ContinuousValidationPodEvent} message ContinuousValidationPodEvent
                             * @param {$protobuf.IConversionOptions} [options] Conversion options
                             * @returns {Object.<string,*>} Plain object
                             */
                            ContinuousValidationPodEvent.toObject = function toObject(message, options) {
                                if (!options)
                                    options = {};
                                var object = {};
                                if (options.arrays || options.defaults)
                                    object.images = [];
                                if (options.defaults) {
                                    object.pod = "";
                                    object.deployTime = null;
                                    object.endTime = null;
                                    object.verdict = options.enums === String ? "POLICY_CONFORMANCE_VERDICT_UNSPECIFIED" : 0;
                                    object.podNamespace = "";
                                }
                                if (message.pod != null && message.hasOwnProperty("pod"))
                                    object.pod = message.pod;
                                if (message.deployTime != null && message.hasOwnProperty("deployTime"))
                                    object.deployTime = $root.google.protobuf.Timestamp.toObject(message.deployTime, options);
                                if (message.endTime != null && message.hasOwnProperty("endTime"))
                                    object.endTime = $root.google.protobuf.Timestamp.toObject(message.endTime, options);
                                if (message.verdict != null && message.hasOwnProperty("verdict"))
                                    object.verdict = options.enums === String ? $root.google.cloud.binaryauthorization.v1beta1.ContinuousValidationEvent.ContinuousValidationPodEvent.PolicyConformanceVerdict[message.verdict] === undefined ? message.verdict : $root.google.cloud.binaryauthorization.v1beta1.ContinuousValidationEvent.ContinuousValidationPodEvent.PolicyConformanceVerdict[message.verdict] : message.verdict;
                                if (message.images && message.images.length) {
                                    object.images = [];
                                    for (var j = 0; j < message.images.length; ++j)
                                        object.images[j] = $root.google.cloud.binaryauthorization.v1beta1.ContinuousValidationEvent.ContinuousValidationPodEvent.ImageDetails.toObject(message.images[j], options);
                                }
                                if (message.podNamespace != null && message.hasOwnProperty("podNamespace"))
                                    object.podNamespace = message.podNamespace;
                                return object;
                            };
    
                            /**
                             * Converts this ContinuousValidationPodEvent to JSON.
                             * @function toJSON
                             * @memberof google.cloud.binaryauthorization.v1beta1.ContinuousValidationEvent.ContinuousValidationPodEvent
                             * @instance
                             * @returns {Object.<string,*>} JSON object
                             */
                            ContinuousValidationPodEvent.prototype.toJSON = function toJSON() {
                                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                            };
    
                            /**
                             * Gets the default type url for ContinuousValidationPodEvent
                             * @function getTypeUrl
                             * @memberof google.cloud.binaryauthorization.v1beta1.ContinuousValidationEvent.ContinuousValidationPodEvent
                             * @static
                             * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                             * @returns {string} The default type url
                             */
                            ContinuousValidationPodEvent.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                                if (typeUrlPrefix === undefined) {
                                    typeUrlPrefix = "type.googleapis.com";
                                }
                                return typeUrlPrefix + "/google.cloud.binaryauthorization.v1beta1.ContinuousValidationEvent.ContinuousValidationPodEvent";
                            };
    
                            /**
                             * PolicyConformanceVerdict enum.
                             * @name google.cloud.binaryauthorization.v1beta1.ContinuousValidationEvent.ContinuousValidationPodEvent.PolicyConformanceVerdict
                             * @enum {number}
                             * @property {number} POLICY_CONFORMANCE_VERDICT_UNSPECIFIED=0 POLICY_CONFORMANCE_VERDICT_UNSPECIFIED value
                             * @property {number} VIOLATES_POLICY=1 VIOLATES_POLICY value
                             */
                            ContinuousValidationPodEvent.PolicyConformanceVerdict = (function() {
                                var valuesById = {}, values = Object.create(valuesById);
                                values[valuesById[0] = "POLICY_CONFORMANCE_VERDICT_UNSPECIFIED"] = 0;
                                values[valuesById[1] = "VIOLATES_POLICY"] = 1;
                                return values;
                            })();
    
                            ContinuousValidationPodEvent.ImageDetails = (function() {
    
                                /**
                                 * Properties of an ImageDetails.
                                 * @memberof google.cloud.binaryauthorization.v1beta1.ContinuousValidationEvent.ContinuousValidationPodEvent
                                 * @interface IImageDetails
                                 * @property {string|null} [image] ImageDetails image
                                 * @property {google.cloud.binaryauthorization.v1beta1.ContinuousValidationEvent.ContinuousValidationPodEvent.ImageDetails.AuditResult|null} [result] ImageDetails result
                                 * @property {string|null} [description] ImageDetails description
                                 */
    
                                /**
                                 * Constructs a new ImageDetails.
                                 * @memberof google.cloud.binaryauthorization.v1beta1.ContinuousValidationEvent.ContinuousValidationPodEvent
                                 * @classdesc Represents an ImageDetails.
                                 * @implements IImageDetails
                                 * @constructor
                                 * @param {google.cloud.binaryauthorization.v1beta1.ContinuousValidationEvent.ContinuousValidationPodEvent.IImageDetails=} [properties] Properties to set
                                 */
                                function ImageDetails(properties) {
                                    if (properties)
                                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                            if (properties[keys[i]] != null)
                                                this[keys[i]] = properties[keys[i]];
                                }
    
                                /**
                                 * ImageDetails image.
                                 * @member {string} image
                                 * @memberof google.cloud.binaryauthorization.v1beta1.ContinuousValidationEvent.ContinuousValidationPodEvent.ImageDetails
                                 * @instance
                                 */
                                ImageDetails.prototype.image = "";
    
                                /**
                                 * ImageDetails result.
                                 * @member {google.cloud.binaryauthorization.v1beta1.ContinuousValidationEvent.ContinuousValidationPodEvent.ImageDetails.AuditResult} result
                                 * @memberof google.cloud.binaryauthorization.v1beta1.ContinuousValidationEvent.ContinuousValidationPodEvent.ImageDetails
                                 * @instance
                                 */
                                ImageDetails.prototype.result = 0;
    
                                /**
                                 * ImageDetails description.
                                 * @member {string} description
                                 * @memberof google.cloud.binaryauthorization.v1beta1.ContinuousValidationEvent.ContinuousValidationPodEvent.ImageDetails
                                 * @instance
                                 */
                                ImageDetails.prototype.description = "";
    
                                /**
                                 * Creates a new ImageDetails instance using the specified properties.
                                 * @function create
                                 * @memberof google.cloud.binaryauthorization.v1beta1.ContinuousValidationEvent.ContinuousValidationPodEvent.ImageDetails
                                 * @static
                                 * @param {google.cloud.binaryauthorization.v1beta1.ContinuousValidationEvent.ContinuousValidationPodEvent.IImageDetails=} [properties] Properties to set
                                 * @returns {google.cloud.binaryauthorization.v1beta1.ContinuousValidationEvent.ContinuousValidationPodEvent.ImageDetails} ImageDetails instance
                                 */
                                ImageDetails.create = function create(properties) {
                                    return new ImageDetails(properties);
                                };
    
                                /**
                                 * Encodes the specified ImageDetails message. Does not implicitly {@link google.cloud.binaryauthorization.v1beta1.ContinuousValidationEvent.ContinuousValidationPodEvent.ImageDetails.verify|verify} messages.
                                 * @function encode
                                 * @memberof google.cloud.binaryauthorization.v1beta1.ContinuousValidationEvent.ContinuousValidationPodEvent.ImageDetails
                                 * @static
                                 * @param {google.cloud.binaryauthorization.v1beta1.ContinuousValidationEvent.ContinuousValidationPodEvent.IImageDetails} message ImageDetails message or plain object to encode
                                 * @param {$protobuf.Writer} [writer] Writer to encode to
                                 * @returns {$protobuf.Writer} Writer
                                 */
                                ImageDetails.encode = function encode(message, writer) {
                                    if (!writer)
                                        writer = $Writer.create();
                                    if (message.image != null && Object.hasOwnProperty.call(message, "image"))
                                        writer.uint32(/* id 1, wireType 2 =*/10).string(message.image);
                                    if (message.result != null && Object.hasOwnProperty.call(message, "result"))
                                        writer.uint32(/* id 2, wireType 0 =*/16).int32(message.result);
                                    if (message.description != null && Object.hasOwnProperty.call(message, "description"))
                                        writer.uint32(/* id 3, wireType 2 =*/26).string(message.description);
                                    return writer;
                                };
    
                                /**
                                 * Encodes the specified ImageDetails message, length delimited. Does not implicitly {@link google.cloud.binaryauthorization.v1beta1.ContinuousValidationEvent.ContinuousValidationPodEvent.ImageDetails.verify|verify} messages.
                                 * @function encodeDelimited
                                 * @memberof google.cloud.binaryauthorization.v1beta1.ContinuousValidationEvent.ContinuousValidationPodEvent.ImageDetails
                                 * @static
                                 * @param {google.cloud.binaryauthorization.v1beta1.ContinuousValidationEvent.ContinuousValidationPodEvent.IImageDetails} message ImageDetails message or plain object to encode
                                 * @param {$protobuf.Writer} [writer] Writer to encode to
                                 * @returns {$protobuf.Writer} Writer
                                 */
                                ImageDetails.encodeDelimited = function encodeDelimited(message, writer) {
                                    return this.encode(message, writer).ldelim();
                                };
    
                                /**
                                 * Decodes an ImageDetails message from the specified reader or buffer.
                                 * @function decode
                                 * @memberof google.cloud.binaryauthorization.v1beta1.ContinuousValidationEvent.ContinuousValidationPodEvent.ImageDetails
                                 * @static
                                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                                 * @param {number} [length] Message length if known beforehand
                                 * @returns {google.cloud.binaryauthorization.v1beta1.ContinuousValidationEvent.ContinuousValidationPodEvent.ImageDetails} ImageDetails
                                 * @throws {Error} If the payload is not a reader or valid buffer
                                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                                 */
                                ImageDetails.decode = function decode(reader, length) {
                                    if (!(reader instanceof $Reader))
                                        reader = $Reader.create(reader);
                                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.binaryauthorization.v1beta1.ContinuousValidationEvent.ContinuousValidationPodEvent.ImageDetails();
                                    while (reader.pos < end) {
                                        var tag = reader.uint32();
                                        switch (tag >>> 3) {
                                        case 1: {
                                                message.image = reader.string();
                                                break;
                                            }
                                        case 2: {
                                                message.result = reader.int32();
                                                break;
                                            }
                                        case 3: {
                                                message.description = reader.string();
                                                break;
                                            }
                                        default:
                                            reader.skipType(tag & 7);
                                            break;
                                        }
                                    }
                                    return message;
                                };
    
                                /**
                                 * Decodes an ImageDetails message from the specified reader or buffer, length delimited.
                                 * @function decodeDelimited
                                 * @memberof google.cloud.binaryauthorization.v1beta1.ContinuousValidationEvent.ContinuousValidationPodEvent.ImageDetails
                                 * @static
                                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                                 * @returns {google.cloud.binaryauthorization.v1beta1.ContinuousValidationEvent.ContinuousValidationPodEvent.ImageDetails} ImageDetails
                                 * @throws {Error} If the payload is not a reader or valid buffer
                                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                                 */
                                ImageDetails.decodeDelimited = function decodeDelimited(reader) {
                                    if (!(reader instanceof $Reader))
                                        reader = new $Reader(reader);
                                    return this.decode(reader, reader.uint32());
                                };
    
                                /**
                                 * Verifies an ImageDetails message.
                                 * @function verify
                                 * @memberof google.cloud.binaryauthorization.v1beta1.ContinuousValidationEvent.ContinuousValidationPodEvent.ImageDetails
                                 * @static
                                 * @param {Object.<string,*>} message Plain object to verify
                                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                                 */
                                ImageDetails.verify = function verify(message) {
                                    if (typeof message !== "object" || message === null)
                                        return "object expected";
                                    if (message.image != null && message.hasOwnProperty("image"))
                                        if (!$util.isString(message.image))
                                            return "image: string expected";
                                    if (message.result != null && message.hasOwnProperty("result"))
                                        switch (message.result) {
                                        default:
                                            return "result: enum value expected";
                                        case 0:
                                        case 1:
                                        case 2:
                                            break;
                                        }
                                    if (message.description != null && message.hasOwnProperty("description"))
                                        if (!$util.isString(message.description))
                                            return "description: string expected";
                                    return null;
                                };
    
                                /**
                                 * Creates an ImageDetails message from a plain object. Also converts values to their respective internal types.
                                 * @function fromObject
                                 * @memberof google.cloud.binaryauthorization.v1beta1.ContinuousValidationEvent.ContinuousValidationPodEvent.ImageDetails
                                 * @static
                                 * @param {Object.<string,*>} object Plain object
                                 * @returns {google.cloud.binaryauthorization.v1beta1.ContinuousValidationEvent.ContinuousValidationPodEvent.ImageDetails} ImageDetails
                                 */
                                ImageDetails.fromObject = function fromObject(object) {
                                    if (object instanceof $root.google.cloud.binaryauthorization.v1beta1.ContinuousValidationEvent.ContinuousValidationPodEvent.ImageDetails)
                                        return object;
                                    var message = new $root.google.cloud.binaryauthorization.v1beta1.ContinuousValidationEvent.ContinuousValidationPodEvent.ImageDetails();
                                    if (object.image != null)
                                        message.image = String(object.image);
                                    switch (object.result) {
                                    default:
                                        if (typeof object.result === "number") {
                                            message.result = object.result;
                                            break;
                                        }
                                        break;
                                    case "AUDIT_RESULT_UNSPECIFIED":
                                    case 0:
                                        message.result = 0;
                                        break;
                                    case "ALLOW":
                                    case 1:
                                        message.result = 1;
                                        break;
                                    case "DENY":
                                    case 2:
                                        message.result = 2;
                                        break;
                                    }
                                    if (object.description != null)
                                        message.description = String(object.description);
                                    return message;
                                };
    
                                /**
                                 * Creates a plain object from an ImageDetails message. Also converts values to other types if specified.
                                 * @function toObject
                                 * @memberof google.cloud.binaryauthorization.v1beta1.ContinuousValidationEvent.ContinuousValidationPodEvent.ImageDetails
                                 * @static
                                 * @param {google.cloud.binaryauthorization.v1beta1.ContinuousValidationEvent.ContinuousValidationPodEvent.ImageDetails} message ImageDetails
                                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                                 * @returns {Object.<string,*>} Plain object
                                 */
                                ImageDetails.toObject = function toObject(message, options) {
                                    if (!options)
                                        options = {};
                                    var object = {};
                                    if (options.defaults) {
                                        object.image = "";
                                        object.result = options.enums === String ? "AUDIT_RESULT_UNSPECIFIED" : 0;
                                        object.description = "";
                                    }
                                    if (message.image != null && message.hasOwnProperty("image"))
                                        object.image = message.image;
                                    if (message.result != null && message.hasOwnProperty("result"))
                                        object.result = options.enums === String ? $root.google.cloud.binaryauthorization.v1beta1.ContinuousValidationEvent.ContinuousValidationPodEvent.ImageDetails.AuditResult[message.result] === undefined ? message.result : $root.google.cloud.binaryauthorization.v1beta1.ContinuousValidationEvent.ContinuousValidationPodEvent.ImageDetails.AuditResult[message.result] : message.result;
                                    if (message.description != null && message.hasOwnProperty("description"))
                                        object.description = message.description;
                                    return object;
                                };
    
                                /**
                                 * Converts this ImageDetails to JSON.
                                 * @function toJSON
                                 * @memberof google.cloud.binaryauthorization.v1beta1.ContinuousValidationEvent.ContinuousValidationPodEvent.ImageDetails
                                 * @instance
                                 * @returns {Object.<string,*>} JSON object
                                 */
                                ImageDetails.prototype.toJSON = function toJSON() {
                                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                                };
    
                                /**
                                 * Gets the default type url for ImageDetails
                                 * @function getTypeUrl
                                 * @memberof google.cloud.binaryauthorization.v1beta1.ContinuousValidationEvent.ContinuousValidationPodEvent.ImageDetails
                                 * @static
                                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                                 * @returns {string} The default type url
                                 */
                                ImageDetails.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                                    if (typeUrlPrefix === undefined) {
                                        typeUrlPrefix = "type.googleapis.com";
                                    }
                                    return typeUrlPrefix + "/google.cloud.binaryauthorization.v1beta1.ContinuousValidationEvent.ContinuousValidationPodEvent.ImageDetails";
                                };
    
                                /**
                                 * AuditResult enum.
                                 * @name google.cloud.binaryauthorization.v1beta1.ContinuousValidationEvent.ContinuousValidationPodEvent.ImageDetails.AuditResult
                                 * @enum {number}
                                 * @property {number} AUDIT_RESULT_UNSPECIFIED=0 AUDIT_RESULT_UNSPECIFIED value
                                 * @property {number} ALLOW=1 ALLOW value
                                 * @property {number} DENY=2 DENY value
                                 */
                                ImageDetails.AuditResult = (function() {
                                    var valuesById = {}, values = Object.create(valuesById);
                                    values[valuesById[0] = "AUDIT_RESULT_UNSPECIFIED"] = 0;
                                    values[valuesById[1] = "ALLOW"] = 1;
                                    values[valuesById[2] = "DENY"] = 2;
                                    return values;
                                })();
    
                                return ImageDetails;
                            })();
    
                            return ContinuousValidationPodEvent;
                        })();
    
                        ContinuousValidationEvent.UnsupportedPolicyEvent = (function() {
    
                            /**
                             * Properties of an UnsupportedPolicyEvent.
                             * @memberof google.cloud.binaryauthorization.v1beta1.ContinuousValidationEvent
                             * @interface IUnsupportedPolicyEvent
                             * @property {string|null} [description] UnsupportedPolicyEvent description
                             */
    
                            /**
                             * Constructs a new UnsupportedPolicyEvent.
                             * @memberof google.cloud.binaryauthorization.v1beta1.ContinuousValidationEvent
                             * @classdesc Represents an UnsupportedPolicyEvent.
                             * @implements IUnsupportedPolicyEvent
                             * @constructor
                             * @param {google.cloud.binaryauthorization.v1beta1.ContinuousValidationEvent.IUnsupportedPolicyEvent=} [properties] Properties to set
                             */
                            function UnsupportedPolicyEvent(properties) {
                                if (properties)
                                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                        if (properties[keys[i]] != null)
                                            this[keys[i]] = properties[keys[i]];
                            }
    
                            /**
                             * UnsupportedPolicyEvent description.
                             * @member {string} description
                             * @memberof google.cloud.binaryauthorization.v1beta1.ContinuousValidationEvent.UnsupportedPolicyEvent
                             * @instance
                             */
                            UnsupportedPolicyEvent.prototype.description = "";
    
                            /**
                             * Creates a new UnsupportedPolicyEvent instance using the specified properties.
                             * @function create
                             * @memberof google.cloud.binaryauthorization.v1beta1.ContinuousValidationEvent.UnsupportedPolicyEvent
                             * @static
                             * @param {google.cloud.binaryauthorization.v1beta1.ContinuousValidationEvent.IUnsupportedPolicyEvent=} [properties] Properties to set
                             * @returns {google.cloud.binaryauthorization.v1beta1.ContinuousValidationEvent.UnsupportedPolicyEvent} UnsupportedPolicyEvent instance
                             */
                            UnsupportedPolicyEvent.create = function create(properties) {
                                return new UnsupportedPolicyEvent(properties);
                            };
    
                            /**
                             * Encodes the specified UnsupportedPolicyEvent message. Does not implicitly {@link google.cloud.binaryauthorization.v1beta1.ContinuousValidationEvent.UnsupportedPolicyEvent.verify|verify} messages.
                             * @function encode
                             * @memberof google.cloud.binaryauthorization.v1beta1.ContinuousValidationEvent.UnsupportedPolicyEvent
                             * @static
                             * @param {google.cloud.binaryauthorization.v1beta1.ContinuousValidationEvent.IUnsupportedPolicyEvent} message UnsupportedPolicyEvent message or plain object to encode
                             * @param {$protobuf.Writer} [writer] Writer to encode to
                             * @returns {$protobuf.Writer} Writer
                             */
                            UnsupportedPolicyEvent.encode = function encode(message, writer) {
                                if (!writer)
                                    writer = $Writer.create();
                                if (message.description != null && Object.hasOwnProperty.call(message, "description"))
                                    writer.uint32(/* id 1, wireType 2 =*/10).string(message.description);
                                return writer;
                            };
    
                            /**
                             * Encodes the specified UnsupportedPolicyEvent message, length delimited. Does not implicitly {@link google.cloud.binaryauthorization.v1beta1.ContinuousValidationEvent.UnsupportedPolicyEvent.verify|verify} messages.
                             * @function encodeDelimited
                             * @memberof google.cloud.binaryauthorization.v1beta1.ContinuousValidationEvent.UnsupportedPolicyEvent
                             * @static
                             * @param {google.cloud.binaryauthorization.v1beta1.ContinuousValidationEvent.IUnsupportedPolicyEvent} message UnsupportedPolicyEvent message or plain object to encode
                             * @param {$protobuf.Writer} [writer] Writer to encode to
                             * @returns {$protobuf.Writer} Writer
                             */
                            UnsupportedPolicyEvent.encodeDelimited = function encodeDelimited(message, writer) {
                                return this.encode(message, writer).ldelim();
                            };
    
                            /**
                             * Decodes an UnsupportedPolicyEvent message from the specified reader or buffer.
                             * @function decode
                             * @memberof google.cloud.binaryauthorization.v1beta1.ContinuousValidationEvent.UnsupportedPolicyEvent
                             * @static
                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                             * @param {number} [length] Message length if known beforehand
                             * @returns {google.cloud.binaryauthorization.v1beta1.ContinuousValidationEvent.UnsupportedPolicyEvent} UnsupportedPolicyEvent
                             * @throws {Error} If the payload is not a reader or valid buffer
                             * @throws {$protobuf.util.ProtocolError} If required fields are missing
                             */
                            UnsupportedPolicyEvent.decode = function decode(reader, length) {
                                if (!(reader instanceof $Reader))
                                    reader = $Reader.create(reader);
                                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.binaryauthorization.v1beta1.ContinuousValidationEvent.UnsupportedPolicyEvent();
                                while (reader.pos < end) {
                                    var tag = reader.uint32();
                                    switch (tag >>> 3) {
                                    case 1: {
                                            message.description = reader.string();
                                            break;
                                        }
                                    default:
                                        reader.skipType(tag & 7);
                                        break;
                                    }
                                }
                                return message;
                            };
    
                            /**
                             * Decodes an UnsupportedPolicyEvent message from the specified reader or buffer, length delimited.
                             * @function decodeDelimited
                             * @memberof google.cloud.binaryauthorization.v1beta1.ContinuousValidationEvent.UnsupportedPolicyEvent
                             * @static
                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                             * @returns {google.cloud.binaryauthorization.v1beta1.ContinuousValidationEvent.UnsupportedPolicyEvent} UnsupportedPolicyEvent
                             * @throws {Error} If the payload is not a reader or valid buffer
                             * @throws {$protobuf.util.ProtocolError} If required fields are missing
                             */
                            UnsupportedPolicyEvent.decodeDelimited = function decodeDelimited(reader) {
                                if (!(reader instanceof $Reader))
                                    reader = new $Reader(reader);
                                return this.decode(reader, reader.uint32());
                            };
    
                            /**
                             * Verifies an UnsupportedPolicyEvent message.
                             * @function verify
                             * @memberof google.cloud.binaryauthorization.v1beta1.ContinuousValidationEvent.UnsupportedPolicyEvent
                             * @static
                             * @param {Object.<string,*>} message Plain object to verify
                             * @returns {string|null} `null` if valid, otherwise the reason why it is not
                             */
                            UnsupportedPolicyEvent.verify = function verify(message) {
                                if (typeof message !== "object" || message === null)
                                    return "object expected";
                                if (message.description != null && message.hasOwnProperty("description"))
                                    if (!$util.isString(message.description))
                                        return "description: string expected";
                                return null;
                            };
    
                            /**
                             * Creates an UnsupportedPolicyEvent message from a plain object. Also converts values to their respective internal types.
                             * @function fromObject
                             * @memberof google.cloud.binaryauthorization.v1beta1.ContinuousValidationEvent.UnsupportedPolicyEvent
                             * @static
                             * @param {Object.<string,*>} object Plain object
                             * @returns {google.cloud.binaryauthorization.v1beta1.ContinuousValidationEvent.UnsupportedPolicyEvent} UnsupportedPolicyEvent
                             */
                            UnsupportedPolicyEvent.fromObject = function fromObject(object) {
                                if (object instanceof $root.google.cloud.binaryauthorization.v1beta1.ContinuousValidationEvent.UnsupportedPolicyEvent)
                                    return object;
                                var message = new $root.google.cloud.binaryauthorization.v1beta1.ContinuousValidationEvent.UnsupportedPolicyEvent();
                                if (object.description != null)
                                    message.description = String(object.description);
                                return message;
                            };
    
                            /**
                             * Creates a plain object from an UnsupportedPolicyEvent message. Also converts values to other types if specified.
                             * @function toObject
                             * @memberof google.cloud.binaryauthorization.v1beta1.ContinuousValidationEvent.UnsupportedPolicyEvent
                             * @static
                             * @param {google.cloud.binaryauthorization.v1beta1.ContinuousValidationEvent.UnsupportedPolicyEvent} message UnsupportedPolicyEvent
                             * @param {$protobuf.IConversionOptions} [options] Conversion options
                             * @returns {Object.<string,*>} Plain object
                             */
                            UnsupportedPolicyEvent.toObject = function toObject(message, options) {
                                if (!options)
                                    options = {};
                                var object = {};
                                if (options.defaults)
                                    object.description = "";
                                if (message.description != null && message.hasOwnProperty("description"))
                                    object.description = message.description;
                                return object;
                            };
    
                            /**
                             * Converts this UnsupportedPolicyEvent to JSON.
                             * @function toJSON
                             * @memberof google.cloud.binaryauthorization.v1beta1.ContinuousValidationEvent.UnsupportedPolicyEvent
                             * @instance
                             * @returns {Object.<string,*>} JSON object
                             */
                            UnsupportedPolicyEvent.prototype.toJSON = function toJSON() {
                                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                            };
    
                            /**
                             * Gets the default type url for UnsupportedPolicyEvent
                             * @function getTypeUrl
                             * @memberof google.cloud.binaryauthorization.v1beta1.ContinuousValidationEvent.UnsupportedPolicyEvent
                             * @static
                             * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                             * @returns {string} The default type url
                             */
                            UnsupportedPolicyEvent.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                                if (typeUrlPrefix === undefined) {
                                    typeUrlPrefix = "type.googleapis.com";
                                }
                                return typeUrlPrefix + "/google.cloud.binaryauthorization.v1beta1.ContinuousValidationEvent.UnsupportedPolicyEvent";
                            };
    
                            return UnsupportedPolicyEvent;
                        })();
    
                        return ContinuousValidationEvent;
                    })();
    
                    v1beta1.Policy = (function() {
    
                        /**
                         * Properties of a Policy.
                         * @memberof google.cloud.binaryauthorization.v1beta1
                         * @interface IPolicy
                         * @property {string|null} [name] Policy name
                         * @property {string|null} [description] Policy description
                         * @property {google.cloud.binaryauthorization.v1beta1.Policy.GlobalPolicyEvaluationMode|null} [globalPolicyEvaluationMode] Policy globalPolicyEvaluationMode
                         * @property {Array.<google.cloud.binaryauthorization.v1beta1.IAdmissionWhitelistPattern>|null} [admissionWhitelistPatterns] Policy admissionWhitelistPatterns
                         * @property {Object.<string,google.cloud.binaryauthorization.v1beta1.IAdmissionRule>|null} [clusterAdmissionRules] Policy clusterAdmissionRules
                         * @property {Object.<string,google.cloud.binaryauthorization.v1beta1.IAdmissionRule>|null} [kubernetesNamespaceAdmissionRules] Policy kubernetesNamespaceAdmissionRules
                         * @property {Object.<string,google.cloud.binaryauthorization.v1beta1.IAdmissionRule>|null} [kubernetesServiceAccountAdmissionRules] Policy kubernetesServiceAccountAdmissionRules
                         * @property {Object.<string,google.cloud.binaryauthorization.v1beta1.IAdmissionRule>|null} [istioServiceIdentityAdmissionRules] Policy istioServiceIdentityAdmissionRules
                         * @property {google.cloud.binaryauthorization.v1beta1.IAdmissionRule|null} [defaultAdmissionRule] Policy defaultAdmissionRule
                         * @property {google.protobuf.ITimestamp|null} [updateTime] Policy updateTime
                         */
    
                        /**
                         * Constructs a new Policy.
                         * @memberof google.cloud.binaryauthorization.v1beta1
                         * @classdesc Represents a Policy.
                         * @implements IPolicy
                         * @constructor
                         * @param {google.cloud.binaryauthorization.v1beta1.IPolicy=} [properties] Properties to set
                         */
                        function Policy(properties) {
                            this.admissionWhitelistPatterns = [];
                            this.clusterAdmissionRules = {};
                            this.kubernetesNamespaceAdmissionRules = {};
                            this.kubernetesServiceAccountAdmissionRules = {};
                            this.istioServiceIdentityAdmissionRules = {};
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * Policy name.
                         * @member {string} name
                         * @memberof google.cloud.binaryauthorization.v1beta1.Policy
                         * @instance
                         */
                        Policy.prototype.name = "";
    
                        /**
                         * Policy description.
                         * @member {string} description
                         * @memberof google.cloud.binaryauthorization.v1beta1.Policy
                         * @instance
                         */
                        Policy.prototype.description = "";
    
                        /**
                         * Policy globalPolicyEvaluationMode.
                         * @member {google.cloud.binaryauthorization.v1beta1.Policy.GlobalPolicyEvaluationMode} globalPolicyEvaluationMode
                         * @memberof google.cloud.binaryauthorization.v1beta1.Policy
                         * @instance
                         */
                        Policy.prototype.globalPolicyEvaluationMode = 0;
    
                        /**
                         * Policy admissionWhitelistPatterns.
                         * @member {Array.<google.cloud.binaryauthorization.v1beta1.IAdmissionWhitelistPattern>} admissionWhitelistPatterns
                         * @memberof google.cloud.binaryauthorization.v1beta1.Policy
                         * @instance
                         */
                        Policy.prototype.admissionWhitelistPatterns = $util.emptyArray;
    
                        /**
                         * Policy clusterAdmissionRules.
                         * @member {Object.<string,google.cloud.binaryauthorization.v1beta1.IAdmissionRule>} clusterAdmissionRules
                         * @memberof google.cloud.binaryauthorization.v1beta1.Policy
                         * @instance
                         */
                        Policy.prototype.clusterAdmissionRules = $util.emptyObject;
    
                        /**
                         * Policy kubernetesNamespaceAdmissionRules.
                         * @member {Object.<string,google.cloud.binaryauthorization.v1beta1.IAdmissionRule>} kubernetesNamespaceAdmissionRules
                         * @memberof google.cloud.binaryauthorization.v1beta1.Policy
                         * @instance
                         */
                        Policy.prototype.kubernetesNamespaceAdmissionRules = $util.emptyObject;
    
                        /**
                         * Policy kubernetesServiceAccountAdmissionRules.
                         * @member {Object.<string,google.cloud.binaryauthorization.v1beta1.IAdmissionRule>} kubernetesServiceAccountAdmissionRules
                         * @memberof google.cloud.binaryauthorization.v1beta1.Policy
                         * @instance
                         */
                        Policy.prototype.kubernetesServiceAccountAdmissionRules = $util.emptyObject;
    
                        /**
                         * Policy istioServiceIdentityAdmissionRules.
                         * @member {Object.<string,google.cloud.binaryauthorization.v1beta1.IAdmissionRule>} istioServiceIdentityAdmissionRules
                         * @memberof google.cloud.binaryauthorization.v1beta1.Policy
                         * @instance
                         */
                        Policy.prototype.istioServiceIdentityAdmissionRules = $util.emptyObject;
    
                        /**
                         * Policy defaultAdmissionRule.
                         * @member {google.cloud.binaryauthorization.v1beta1.IAdmissionRule|null|undefined} defaultAdmissionRule
                         * @memberof google.cloud.binaryauthorization.v1beta1.Policy
                         * @instance
                         */
                        Policy.prototype.defaultAdmissionRule = null;
    
                        /**
                         * Policy updateTime.
                         * @member {google.protobuf.ITimestamp|null|undefined} updateTime
                         * @memberof google.cloud.binaryauthorization.v1beta1.Policy
                         * @instance
                         */
                        Policy.prototype.updateTime = null;
    
                        /**
                         * Creates a new Policy instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.binaryauthorization.v1beta1.Policy
                         * @static
                         * @param {google.cloud.binaryauthorization.v1beta1.IPolicy=} [properties] Properties to set
                         * @returns {google.cloud.binaryauthorization.v1beta1.Policy} Policy instance
                         */
                        Policy.create = function create(properties) {
                            return new Policy(properties);
                        };
    
                        /**
                         * Encodes the specified Policy message. Does not implicitly {@link google.cloud.binaryauthorization.v1beta1.Policy.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.binaryauthorization.v1beta1.Policy
                         * @static
                         * @param {google.cloud.binaryauthorization.v1beta1.IPolicy} message Policy message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        Policy.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                            if (message.admissionWhitelistPatterns != null && message.admissionWhitelistPatterns.length)
                                for (var i = 0; i < message.admissionWhitelistPatterns.length; ++i)
                                    $root.google.cloud.binaryauthorization.v1beta1.AdmissionWhitelistPattern.encode(message.admissionWhitelistPatterns[i], writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                            if (message.clusterAdmissionRules != null && Object.hasOwnProperty.call(message, "clusterAdmissionRules"))
                                for (var keys = Object.keys(message.clusterAdmissionRules), i = 0; i < keys.length; ++i) {
                                    writer.uint32(/* id 3, wireType 2 =*/26).fork().uint32(/* id 1, wireType 2 =*/10).string(keys[i]);
                                    $root.google.cloud.binaryauthorization.v1beta1.AdmissionRule.encode(message.clusterAdmissionRules[keys[i]], writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim().ldelim();
                                }
                            if (message.defaultAdmissionRule != null && Object.hasOwnProperty.call(message, "defaultAdmissionRule"))
                                $root.google.cloud.binaryauthorization.v1beta1.AdmissionRule.encode(message.defaultAdmissionRule, writer.uint32(/* id 4, wireType 2 =*/34).fork()).ldelim();
                            if (message.updateTime != null && Object.hasOwnProperty.call(message, "updateTime"))
                                $root.google.protobuf.Timestamp.encode(message.updateTime, writer.uint32(/* id 5, wireType 2 =*/42).fork()).ldelim();
                            if (message.description != null && Object.hasOwnProperty.call(message, "description"))
                                writer.uint32(/* id 6, wireType 2 =*/50).string(message.description);
                            if (message.globalPolicyEvaluationMode != null && Object.hasOwnProperty.call(message, "globalPolicyEvaluationMode"))
                                writer.uint32(/* id 7, wireType 0 =*/56).int32(message.globalPolicyEvaluationMode);
                            if (message.kubernetesServiceAccountAdmissionRules != null && Object.hasOwnProperty.call(message, "kubernetesServiceAccountAdmissionRules"))
                                for (var keys = Object.keys(message.kubernetesServiceAccountAdmissionRules), i = 0; i < keys.length; ++i) {
                                    writer.uint32(/* id 8, wireType 2 =*/66).fork().uint32(/* id 1, wireType 2 =*/10).string(keys[i]);
                                    $root.google.cloud.binaryauthorization.v1beta1.AdmissionRule.encode(message.kubernetesServiceAccountAdmissionRules[keys[i]], writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim().ldelim();
                                }
                            if (message.istioServiceIdentityAdmissionRules != null && Object.hasOwnProperty.call(message, "istioServiceIdentityAdmissionRules"))
                                for (var keys = Object.keys(message.istioServiceIdentityAdmissionRules), i = 0; i < keys.length; ++i) {
                                    writer.uint32(/* id 9, wireType 2 =*/74).fork().uint32(/* id 1, wireType 2 =*/10).string(keys[i]);
                                    $root.google.cloud.binaryauthorization.v1beta1.AdmissionRule.encode(message.istioServiceIdentityAdmissionRules[keys[i]], writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim().ldelim();
                                }
                            if (message.kubernetesNamespaceAdmissionRules != null && Object.hasOwnProperty.call(message, "kubernetesNamespaceAdmissionRules"))
                                for (var keys = Object.keys(message.kubernetesNamespaceAdmissionRules), i = 0; i < keys.length; ++i) {
                                    writer.uint32(/* id 10, wireType 2 =*/82).fork().uint32(/* id 1, wireType 2 =*/10).string(keys[i]);
                                    $root.google.cloud.binaryauthorization.v1beta1.AdmissionRule.encode(message.kubernetesNamespaceAdmissionRules[keys[i]], writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim().ldelim();
                                }
                            return writer;
                        };
    
                        /**
                         * Encodes the specified Policy message, length delimited. Does not implicitly {@link google.cloud.binaryauthorization.v1beta1.Policy.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.binaryauthorization.v1beta1.Policy
                         * @static
                         * @param {google.cloud.binaryauthorization.v1beta1.IPolicy} message Policy message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        Policy.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a Policy message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.binaryauthorization.v1beta1.Policy
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.binaryauthorization.v1beta1.Policy} Policy
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        Policy.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.binaryauthorization.v1beta1.Policy(), key, value;
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.name = reader.string();
                                        break;
                                    }
                                case 6: {
                                        message.description = reader.string();
                                        break;
                                    }
                                case 7: {
                                        message.globalPolicyEvaluationMode = reader.int32();
                                        break;
                                    }
                                case 2: {
                                        if (!(message.admissionWhitelistPatterns && message.admissionWhitelistPatterns.length))
                                            message.admissionWhitelistPatterns = [];
                                        message.admissionWhitelistPatterns.push($root.google.cloud.binaryauthorization.v1beta1.AdmissionWhitelistPattern.decode(reader, reader.uint32()));
                                        break;
                                    }
                                case 3: {
                                        if (message.clusterAdmissionRules === $util.emptyObject)
                                            message.clusterAdmissionRules = {};
                                        var end2 = reader.uint32() + reader.pos;
                                        key = "";
                                        value = null;
                                        while (reader.pos < end2) {
                                            var tag2 = reader.uint32();
                                            switch (tag2 >>> 3) {
                                            case 1:
                                                key = reader.string();
                                                break;
                                            case 2:
                                                value = $root.google.cloud.binaryauthorization.v1beta1.AdmissionRule.decode(reader, reader.uint32());
                                                break;
                                            default:
                                                reader.skipType(tag2 & 7);
                                                break;
                                            }
                                        }
                                        message.clusterAdmissionRules[key] = value;
                                        break;
                                    }
                                case 10: {
                                        if (message.kubernetesNamespaceAdmissionRules === $util.emptyObject)
                                            message.kubernetesNamespaceAdmissionRules = {};
                                        var end2 = reader.uint32() + reader.pos;
                                        key = "";
                                        value = null;
                                        while (reader.pos < end2) {
                                            var tag2 = reader.uint32();
                                            switch (tag2 >>> 3) {
                                            case 1:
                                                key = reader.string();
                                                break;
                                            case 2:
                                                value = $root.google.cloud.binaryauthorization.v1beta1.AdmissionRule.decode(reader, reader.uint32());
                                                break;
                                            default:
                                                reader.skipType(tag2 & 7);
                                                break;
                                            }
                                        }
                                        message.kubernetesNamespaceAdmissionRules[key] = value;
                                        break;
                                    }
                                case 8: {
                                        if (message.kubernetesServiceAccountAdmissionRules === $util.emptyObject)
                                            message.kubernetesServiceAccountAdmissionRules = {};
                                        var end2 = reader.uint32() + reader.pos;
                                        key = "";
                                        value = null;
                                        while (reader.pos < end2) {
                                            var tag2 = reader.uint32();
                                            switch (tag2 >>> 3) {
                                            case 1:
                                                key = reader.string();
                                                break;
                                            case 2:
                                                value = $root.google.cloud.binaryauthorization.v1beta1.AdmissionRule.decode(reader, reader.uint32());
                                                break;
                                            default:
                                                reader.skipType(tag2 & 7);
                                                break;
                                            }
                                        }
                                        message.kubernetesServiceAccountAdmissionRules[key] = value;
                                        break;
                                    }
                                case 9: {
                                        if (message.istioServiceIdentityAdmissionRules === $util.emptyObject)
                                            message.istioServiceIdentityAdmissionRules = {};
                                        var end2 = reader.uint32() + reader.pos;
                                        key = "";
                                        value = null;
                                        while (reader.pos < end2) {
                                            var tag2 = reader.uint32();
                                            switch (tag2 >>> 3) {
                                            case 1:
                                                key = reader.string();
                                                break;
                                            case 2:
                                                value = $root.google.cloud.binaryauthorization.v1beta1.AdmissionRule.decode(reader, reader.uint32());
                                                break;
                                            default:
                                                reader.skipType(tag2 & 7);
                                                break;
                                            }
                                        }
                                        message.istioServiceIdentityAdmissionRules[key] = value;
                                        break;
                                    }
                                case 4: {
                                        message.defaultAdmissionRule = $root.google.cloud.binaryauthorization.v1beta1.AdmissionRule.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 5: {
                                        message.updateTime = $root.google.protobuf.Timestamp.decode(reader, reader.uint32());
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a Policy message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.binaryauthorization.v1beta1.Policy
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.binaryauthorization.v1beta1.Policy} Policy
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        Policy.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a Policy message.
                         * @function verify
                         * @memberof google.cloud.binaryauthorization.v1beta1.Policy
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        Policy.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.name != null && message.hasOwnProperty("name"))
                                if (!$util.isString(message.name))
                                    return "name: string expected";
                            if (message.description != null && message.hasOwnProperty("description"))
                                if (!$util.isString(message.description))
                                    return "description: string expected";
                            if (message.globalPolicyEvaluationMode != null && message.hasOwnProperty("globalPolicyEvaluationMode"))
                                switch (message.globalPolicyEvaluationMode) {
                                default:
                                    return "globalPolicyEvaluationMode: enum value expected";
                                case 0:
                                case 1:
                                case 2:
                                    break;
                                }
                            if (message.admissionWhitelistPatterns != null && message.hasOwnProperty("admissionWhitelistPatterns")) {
                                if (!Array.isArray(message.admissionWhitelistPatterns))
                                    return "admissionWhitelistPatterns: array expected";
                                for (var i = 0; i < message.admissionWhitelistPatterns.length; ++i) {
                                    var error = $root.google.cloud.binaryauthorization.v1beta1.AdmissionWhitelistPattern.verify(message.admissionWhitelistPatterns[i]);
                                    if (error)
                                        return "admissionWhitelistPatterns." + error;
                                }
                            }
                            if (message.clusterAdmissionRules != null && message.hasOwnProperty("clusterAdmissionRules")) {
                                if (!$util.isObject(message.clusterAdmissionRules))
                                    return "clusterAdmissionRules: object expected";
                                var key = Object.keys(message.clusterAdmissionRules);
                                for (var i = 0; i < key.length; ++i) {
                                    var error = $root.google.cloud.binaryauthorization.v1beta1.AdmissionRule.verify(message.clusterAdmissionRules[key[i]]);
                                    if (error)
                                        return "clusterAdmissionRules." + error;
                                }
                            }
                            if (message.kubernetesNamespaceAdmissionRules != null && message.hasOwnProperty("kubernetesNamespaceAdmissionRules")) {
                                if (!$util.isObject(message.kubernetesNamespaceAdmissionRules))
                                    return "kubernetesNamespaceAdmissionRules: object expected";
                                var key = Object.keys(message.kubernetesNamespaceAdmissionRules);
                                for (var i = 0; i < key.length; ++i) {
                                    var error = $root.google.cloud.binaryauthorization.v1beta1.AdmissionRule.verify(message.kubernetesNamespaceAdmissionRules[key[i]]);
                                    if (error)
                                        return "kubernetesNamespaceAdmissionRules." + error;
                                }
                            }
                            if (message.kubernetesServiceAccountAdmissionRules != null && message.hasOwnProperty("kubernetesServiceAccountAdmissionRules")) {
                                if (!$util.isObject(message.kubernetesServiceAccountAdmissionRules))
                                    return "kubernetesServiceAccountAdmissionRules: object expected";
                                var key = Object.keys(message.kubernetesServiceAccountAdmissionRules);
                                for (var i = 0; i < key.length; ++i) {
                                    var error = $root.google.cloud.binaryauthorization.v1beta1.AdmissionRule.verify(message.kubernetesServiceAccountAdmissionRules[key[i]]);
                                    if (error)
                                        return "kubernetesServiceAccountAdmissionRules." + error;
                                }
                            }
                            if (message.istioServiceIdentityAdmissionRules != null && message.hasOwnProperty("istioServiceIdentityAdmissionRules")) {
                                if (!$util.isObject(message.istioServiceIdentityAdmissionRules))
                                    return "istioServiceIdentityAdmissionRules: object expected";
                                var key = Object.keys(message.istioServiceIdentityAdmissionRules);
                                for (var i = 0; i < key.length; ++i) {
                                    var error = $root.google.cloud.binaryauthorization.v1beta1.AdmissionRule.verify(message.istioServiceIdentityAdmissionRules[key[i]]);
                                    if (error)
                                        return "istioServiceIdentityAdmissionRules." + error;
                                }
                            }
                            if (message.defaultAdmissionRule != null && message.hasOwnProperty("defaultAdmissionRule")) {
                                var error = $root.google.cloud.binaryauthorization.v1beta1.AdmissionRule.verify(message.defaultAdmissionRule);
                                if (error)
                                    return "defaultAdmissionRule." + error;
                            }
                            if (message.updateTime != null && message.hasOwnProperty("updateTime")) {
                                var error = $root.google.protobuf.Timestamp.verify(message.updateTime);
                                if (error)
                                    return "updateTime." + error;
                            }
                            return null;
                        };
    
                        /**
                         * Creates a Policy message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.binaryauthorization.v1beta1.Policy
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.binaryauthorization.v1beta1.Policy} Policy
                         */
                        Policy.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.binaryauthorization.v1beta1.Policy)
                                return object;
                            var message = new $root.google.cloud.binaryauthorization.v1beta1.Policy();
                            if (object.name != null)
                                message.name = String(object.name);
                            if (object.description != null)
                                message.description = String(object.description);
                            switch (object.globalPolicyEvaluationMode) {
                            default:
                                if (typeof object.globalPolicyEvaluationMode === "number") {
                                    message.globalPolicyEvaluationMode = object.globalPolicyEvaluationMode;
                                    break;
                                }
                                break;
                            case "GLOBAL_POLICY_EVALUATION_MODE_UNSPECIFIED":
                            case 0:
                                message.globalPolicyEvaluationMode = 0;
                                break;
                            case "ENABLE":
                            case 1:
                                message.globalPolicyEvaluationMode = 1;
                                break;
                            case "DISABLE":
                            case 2:
                                message.globalPolicyEvaluationMode = 2;
                                break;
                            }
                            if (object.admissionWhitelistPatterns) {
                                if (!Array.isArray(object.admissionWhitelistPatterns))
                                    throw TypeError(".google.cloud.binaryauthorization.v1beta1.Policy.admissionWhitelistPatterns: array expected");
                                message.admissionWhitelistPatterns = [];
                                for (var i = 0; i < object.admissionWhitelistPatterns.length; ++i) {
                                    if (typeof object.admissionWhitelistPatterns[i] !== "object")
                                        throw TypeError(".google.cloud.binaryauthorization.v1beta1.Policy.admissionWhitelistPatterns: object expected");
                                    message.admissionWhitelistPatterns[i] = $root.google.cloud.binaryauthorization.v1beta1.AdmissionWhitelistPattern.fromObject(object.admissionWhitelistPatterns[i]);
                                }
                            }
                            if (object.clusterAdmissionRules) {
                                if (typeof object.clusterAdmissionRules !== "object")
                                    throw TypeError(".google.cloud.binaryauthorization.v1beta1.Policy.clusterAdmissionRules: object expected");
                                message.clusterAdmissionRules = {};
                                for (var keys = Object.keys(object.clusterAdmissionRules), i = 0; i < keys.length; ++i) {
                                    if (typeof object.clusterAdmissionRules[keys[i]] !== "object")
                                        throw TypeError(".google.cloud.binaryauthorization.v1beta1.Policy.clusterAdmissionRules: object expected");
                                    message.clusterAdmissionRules[keys[i]] = $root.google.cloud.binaryauthorization.v1beta1.AdmissionRule.fromObject(object.clusterAdmissionRules[keys[i]]);
                                }
                            }
                            if (object.kubernetesNamespaceAdmissionRules) {
                                if (typeof object.kubernetesNamespaceAdmissionRules !== "object")
                                    throw TypeError(".google.cloud.binaryauthorization.v1beta1.Policy.kubernetesNamespaceAdmissionRules: object expected");
                                message.kubernetesNamespaceAdmissionRules = {};
                                for (var keys = Object.keys(object.kubernetesNamespaceAdmissionRules), i = 0; i < keys.length; ++i) {
                                    if (typeof object.kubernetesNamespaceAdmissionRules[keys[i]] !== "object")
                                        throw TypeError(".google.cloud.binaryauthorization.v1beta1.Policy.kubernetesNamespaceAdmissionRules: object expected");
                                    message.kubernetesNamespaceAdmissionRules[keys[i]] = $root.google.cloud.binaryauthorization.v1beta1.AdmissionRule.fromObject(object.kubernetesNamespaceAdmissionRules[keys[i]]);
                                }
                            }
                            if (object.kubernetesServiceAccountAdmissionRules) {
                                if (typeof object.kubernetesServiceAccountAdmissionRules !== "object")
                                    throw TypeError(".google.cloud.binaryauthorization.v1beta1.Policy.kubernetesServiceAccountAdmissionRules: object expected");
                                message.kubernetesServiceAccountAdmissionRules = {};
                                for (var keys = Object.keys(object.kubernetesServiceAccountAdmissionRules), i = 0; i < keys.length; ++i) {
                                    if (typeof object.kubernetesServiceAccountAdmissionRules[keys[i]] !== "object")
                                        throw TypeError(".google.cloud.binaryauthorization.v1beta1.Policy.kubernetesServiceAccountAdmissionRules: object expected");
                                    message.kubernetesServiceAccountAdmissionRules[keys[i]] = $root.google.cloud.binaryauthorization.v1beta1.AdmissionRule.fromObject(object.kubernetesServiceAccountAdmissionRules[keys[i]]);
                                }
                            }
                            if (object.istioServiceIdentityAdmissionRules) {
                                if (typeof object.istioServiceIdentityAdmissionRules !== "object")
                                    throw TypeError(".google.cloud.binaryauthorization.v1beta1.Policy.istioServiceIdentityAdmissionRules: object expected");
                                message.istioServiceIdentityAdmissionRules = {};
                                for (var keys = Object.keys(object.istioServiceIdentityAdmissionRules), i = 0; i < keys.length; ++i) {
                                    if (typeof object.istioServiceIdentityAdmissionRules[keys[i]] !== "object")
                                        throw TypeError(".google.cloud.binaryauthorization.v1beta1.Policy.istioServiceIdentityAdmissionRules: object expected");
                                    message.istioServiceIdentityAdmissionRules[keys[i]] = $root.google.cloud.binaryauthorization.v1beta1.AdmissionRule.fromObject(object.istioServiceIdentityAdmissionRules[keys[i]]);
                                }
                            }
                            if (object.defaultAdmissionRule != null) {
                                if (typeof object.defaultAdmissionRule !== "object")
                                    throw TypeError(".google.cloud.binaryauthorization.v1beta1.Policy.defaultAdmissionRule: object expected");
                                message.defaultAdmissionRule = $root.google.cloud.binaryauthorization.v1beta1.AdmissionRule.fromObject(object.defaultAdmissionRule);
                            }
                            if (object.updateTime != null) {
                                if (typeof object.updateTime !== "object")
                                    throw TypeError(".google.cloud.binaryauthorization.v1beta1.Policy.updateTime: object expected");
                                message.updateTime = $root.google.protobuf.Timestamp.fromObject(object.updateTime);
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a Policy message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.binaryauthorization.v1beta1.Policy
                         * @static
                         * @param {google.cloud.binaryauthorization.v1beta1.Policy} message Policy
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        Policy.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.arrays || options.defaults)
                                object.admissionWhitelistPatterns = [];
                            if (options.objects || options.defaults) {
                                object.clusterAdmissionRules = {};
                                object.kubernetesServiceAccountAdmissionRules = {};
                                object.istioServiceIdentityAdmissionRules = {};
                                object.kubernetesNamespaceAdmissionRules = {};
                            }
                            if (options.defaults) {
                                object.name = "";
                                object.defaultAdmissionRule = null;
                                object.updateTime = null;
                                object.description = "";
                                object.globalPolicyEvaluationMode = options.enums === String ? "GLOBAL_POLICY_EVALUATION_MODE_UNSPECIFIED" : 0;
                            }
                            if (message.name != null && message.hasOwnProperty("name"))
                                object.name = message.name;
                            if (message.admissionWhitelistPatterns && message.admissionWhitelistPatterns.length) {
                                object.admissionWhitelistPatterns = [];
                                for (var j = 0; j < message.admissionWhitelistPatterns.length; ++j)
                                    object.admissionWhitelistPatterns[j] = $root.google.cloud.binaryauthorization.v1beta1.AdmissionWhitelistPattern.toObject(message.admissionWhitelistPatterns[j], options);
                            }
                            var keys2;
                            if (message.clusterAdmissionRules && (keys2 = Object.keys(message.clusterAdmissionRules)).length) {
                                object.clusterAdmissionRules = {};
                                for (var j = 0; j < keys2.length; ++j)
                                    object.clusterAdmissionRules[keys2[j]] = $root.google.cloud.binaryauthorization.v1beta1.AdmissionRule.toObject(message.clusterAdmissionRules[keys2[j]], options);
                            }
                            if (message.defaultAdmissionRule != null && message.hasOwnProperty("defaultAdmissionRule"))
                                object.defaultAdmissionRule = $root.google.cloud.binaryauthorization.v1beta1.AdmissionRule.toObject(message.defaultAdmissionRule, options);
                            if (message.updateTime != null && message.hasOwnProperty("updateTime"))
                                object.updateTime = $root.google.protobuf.Timestamp.toObject(message.updateTime, options);
                            if (message.description != null && message.hasOwnProperty("description"))
                                object.description = message.description;
                            if (message.globalPolicyEvaluationMode != null && message.hasOwnProperty("globalPolicyEvaluationMode"))
                                object.globalPolicyEvaluationMode = options.enums === String ? $root.google.cloud.binaryauthorization.v1beta1.Policy.GlobalPolicyEvaluationMode[message.globalPolicyEvaluationMode] === undefined ? message.globalPolicyEvaluationMode : $root.google.cloud.binaryauthorization.v1beta1.Policy.GlobalPolicyEvaluationMode[message.globalPolicyEvaluationMode] : message.globalPolicyEvaluationMode;
                            if (message.kubernetesServiceAccountAdmissionRules && (keys2 = Object.keys(message.kubernetesServiceAccountAdmissionRules)).length) {
                                object.kubernetesServiceAccountAdmissionRules = {};
                                for (var j = 0; j < keys2.length; ++j)
                                    object.kubernetesServiceAccountAdmissionRules[keys2[j]] = $root.google.cloud.binaryauthorization.v1beta1.AdmissionRule.toObject(message.kubernetesServiceAccountAdmissionRules[keys2[j]], options);
                            }
                            if (message.istioServiceIdentityAdmissionRules && (keys2 = Object.keys(message.istioServiceIdentityAdmissionRules)).length) {
                                object.istioServiceIdentityAdmissionRules = {};
                                for (var j = 0; j < keys2.length; ++j)
                                    object.istioServiceIdentityAdmissionRules[keys2[j]] = $root.google.cloud.binaryauthorization.v1beta1.AdmissionRule.toObject(message.istioServiceIdentityAdmissionRules[keys2[j]], options);
                            }
                            if (message.kubernetesNamespaceAdmissionRules && (keys2 = Object.keys(message.kubernetesNamespaceAdmissionRules)).length) {
                                object.kubernetesNamespaceAdmissionRules = {};
                                for (var j = 0; j < keys2.length; ++j)
                                    object.kubernetesNamespaceAdmissionRules[keys2[j]] = $root.google.cloud.binaryauthorization.v1beta1.AdmissionRule.toObject(message.kubernetesNamespaceAdmissionRules[keys2[j]], options);
                            }
                            return object;
                        };
    
                        /**
                         * Converts this Policy to JSON.
                         * @function toJSON
                         * @memberof google.cloud.binaryauthorization.v1beta1.Policy
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        Policy.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for Policy
                         * @function getTypeUrl
                         * @memberof google.cloud.binaryauthorization.v1beta1.Policy
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        Policy.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.binaryauthorization.v1beta1.Policy";
                        };
    
                        /**
                         * GlobalPolicyEvaluationMode enum.
                         * @name google.cloud.binaryauthorization.v1beta1.Policy.GlobalPolicyEvaluationMode
                         * @enum {number}
                         * @property {number} GLOBAL_POLICY_EVALUATION_MODE_UNSPECIFIED=0 GLOBAL_POLICY_EVALUATION_MODE_UNSPECIFIED value
                         * @property {number} ENABLE=1 ENABLE value
                         * @property {number} DISABLE=2 DISABLE value
                         */
                        Policy.GlobalPolicyEvaluationMode = (function() {
                            var valuesById = {}, values = Object.create(valuesById);
                            values[valuesById[0] = "GLOBAL_POLICY_EVALUATION_MODE_UNSPECIFIED"] = 0;
                            values[valuesById[1] = "ENABLE"] = 1;
                            values[valuesById[2] = "DISABLE"] = 2;
                            return values;
                        })();
    
                        return Policy;
                    })();
    
                    v1beta1.AdmissionWhitelistPattern = (function() {
    
                        /**
                         * Properties of an AdmissionWhitelistPattern.
                         * @memberof google.cloud.binaryauthorization.v1beta1
                         * @interface IAdmissionWhitelistPattern
                         * @property {string|null} [namePattern] AdmissionWhitelistPattern namePattern
                         */
    
                        /**
                         * Constructs a new AdmissionWhitelistPattern.
                         * @memberof google.cloud.binaryauthorization.v1beta1
                         * @classdesc Represents an AdmissionWhitelistPattern.
                         * @implements IAdmissionWhitelistPattern
                         * @constructor
                         * @param {google.cloud.binaryauthorization.v1beta1.IAdmissionWhitelistPattern=} [properties] Properties to set
                         */
                        function AdmissionWhitelistPattern(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * AdmissionWhitelistPattern namePattern.
                         * @member {string} namePattern
                         * @memberof google.cloud.binaryauthorization.v1beta1.AdmissionWhitelistPattern
                         * @instance
                         */
                        AdmissionWhitelistPattern.prototype.namePattern = "";
    
                        /**
                         * Creates a new AdmissionWhitelistPattern instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.binaryauthorization.v1beta1.AdmissionWhitelistPattern
                         * @static
                         * @param {google.cloud.binaryauthorization.v1beta1.IAdmissionWhitelistPattern=} [properties] Properties to set
                         * @returns {google.cloud.binaryauthorization.v1beta1.AdmissionWhitelistPattern} AdmissionWhitelistPattern instance
                         */
                        AdmissionWhitelistPattern.create = function create(properties) {
                            return new AdmissionWhitelistPattern(properties);
                        };
    
                        /**
                         * Encodes the specified AdmissionWhitelistPattern message. Does not implicitly {@link google.cloud.binaryauthorization.v1beta1.AdmissionWhitelistPattern.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.binaryauthorization.v1beta1.AdmissionWhitelistPattern
                         * @static
                         * @param {google.cloud.binaryauthorization.v1beta1.IAdmissionWhitelistPattern} message AdmissionWhitelistPattern message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        AdmissionWhitelistPattern.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.namePattern != null && Object.hasOwnProperty.call(message, "namePattern"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.namePattern);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified AdmissionWhitelistPattern message, length delimited. Does not implicitly {@link google.cloud.binaryauthorization.v1beta1.AdmissionWhitelistPattern.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.binaryauthorization.v1beta1.AdmissionWhitelistPattern
                         * @static
                         * @param {google.cloud.binaryauthorization.v1beta1.IAdmissionWhitelistPattern} message AdmissionWhitelistPattern message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        AdmissionWhitelistPattern.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes an AdmissionWhitelistPattern message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.binaryauthorization.v1beta1.AdmissionWhitelistPattern
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.binaryauthorization.v1beta1.AdmissionWhitelistPattern} AdmissionWhitelistPattern
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        AdmissionWhitelistPattern.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.binaryauthorization.v1beta1.AdmissionWhitelistPattern();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.namePattern = reader.string();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes an AdmissionWhitelistPattern message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.binaryauthorization.v1beta1.AdmissionWhitelistPattern
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.binaryauthorization.v1beta1.AdmissionWhitelistPattern} AdmissionWhitelistPattern
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        AdmissionWhitelistPattern.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies an AdmissionWhitelistPattern message.
                         * @function verify
                         * @memberof google.cloud.binaryauthorization.v1beta1.AdmissionWhitelistPattern
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        AdmissionWhitelistPattern.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.namePattern != null && message.hasOwnProperty("namePattern"))
                                if (!$util.isString(message.namePattern))
                                    return "namePattern: string expected";
                            return null;
                        };
    
                        /**
                         * Creates an AdmissionWhitelistPattern message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.binaryauthorization.v1beta1.AdmissionWhitelistPattern
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.binaryauthorization.v1beta1.AdmissionWhitelistPattern} AdmissionWhitelistPattern
                         */
                        AdmissionWhitelistPattern.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.binaryauthorization.v1beta1.AdmissionWhitelistPattern)
                                return object;
                            var message = new $root.google.cloud.binaryauthorization.v1beta1.AdmissionWhitelistPattern();
                            if (object.namePattern != null)
                                message.namePattern = String(object.namePattern);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from an AdmissionWhitelistPattern message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.binaryauthorization.v1beta1.AdmissionWhitelistPattern
                         * @static
                         * @param {google.cloud.binaryauthorization.v1beta1.AdmissionWhitelistPattern} message AdmissionWhitelistPattern
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        AdmissionWhitelistPattern.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults)
                                object.namePattern = "";
                            if (message.namePattern != null && message.hasOwnProperty("namePattern"))
                                object.namePattern = message.namePattern;
                            return object;
                        };
    
                        /**
                         * Converts this AdmissionWhitelistPattern to JSON.
                         * @function toJSON
                         * @memberof google.cloud.binaryauthorization.v1beta1.AdmissionWhitelistPattern
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        AdmissionWhitelistPattern.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for AdmissionWhitelistPattern
                         * @function getTypeUrl
                         * @memberof google.cloud.binaryauthorization.v1beta1.AdmissionWhitelistPattern
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        AdmissionWhitelistPattern.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.binaryauthorization.v1beta1.AdmissionWhitelistPattern";
                        };
    
                        return AdmissionWhitelistPattern;
                    })();
    
                    v1beta1.AdmissionRule = (function() {
    
                        /**
                         * Properties of an AdmissionRule.
                         * @memberof google.cloud.binaryauthorization.v1beta1
                         * @interface IAdmissionRule
                         * @property {google.cloud.binaryauthorization.v1beta1.AdmissionRule.EvaluationMode|null} [evaluationMode] AdmissionRule evaluationMode
                         * @property {Array.<string>|null} [requireAttestationsBy] AdmissionRule requireAttestationsBy
                         * @property {google.cloud.binaryauthorization.v1beta1.AdmissionRule.EnforcementMode|null} [enforcementMode] AdmissionRule enforcementMode
                         */
    
                        /**
                         * Constructs a new AdmissionRule.
                         * @memberof google.cloud.binaryauthorization.v1beta1
                         * @classdesc Represents an AdmissionRule.
                         * @implements IAdmissionRule
                         * @constructor
                         * @param {google.cloud.binaryauthorization.v1beta1.IAdmissionRule=} [properties] Properties to set
                         */
                        function AdmissionRule(properties) {
                            this.requireAttestationsBy = [];
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * AdmissionRule evaluationMode.
                         * @member {google.cloud.binaryauthorization.v1beta1.AdmissionRule.EvaluationMode} evaluationMode
                         * @memberof google.cloud.binaryauthorization.v1beta1.AdmissionRule
                         * @instance
                         */
                        AdmissionRule.prototype.evaluationMode = 0;
    
                        /**
                         * AdmissionRule requireAttestationsBy.
                         * @member {Array.<string>} requireAttestationsBy
                         * @memberof google.cloud.binaryauthorization.v1beta1.AdmissionRule
                         * @instance
                         */
                        AdmissionRule.prototype.requireAttestationsBy = $util.emptyArray;
    
                        /**
                         * AdmissionRule enforcementMode.
                         * @member {google.cloud.binaryauthorization.v1beta1.AdmissionRule.EnforcementMode} enforcementMode
                         * @memberof google.cloud.binaryauthorization.v1beta1.AdmissionRule
                         * @instance
                         */
                        AdmissionRule.prototype.enforcementMode = 0;
    
                        /**
                         * Creates a new AdmissionRule instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.binaryauthorization.v1beta1.AdmissionRule
                         * @static
                         * @param {google.cloud.binaryauthorization.v1beta1.IAdmissionRule=} [properties] Properties to set
                         * @returns {google.cloud.binaryauthorization.v1beta1.AdmissionRule} AdmissionRule instance
                         */
                        AdmissionRule.create = function create(properties) {
                            return new AdmissionRule(properties);
                        };
    
                        /**
                         * Encodes the specified AdmissionRule message. Does not implicitly {@link google.cloud.binaryauthorization.v1beta1.AdmissionRule.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.binaryauthorization.v1beta1.AdmissionRule
                         * @static
                         * @param {google.cloud.binaryauthorization.v1beta1.IAdmissionRule} message AdmissionRule message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        AdmissionRule.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.evaluationMode != null && Object.hasOwnProperty.call(message, "evaluationMode"))
                                writer.uint32(/* id 1, wireType 0 =*/8).int32(message.evaluationMode);
                            if (message.requireAttestationsBy != null && message.requireAttestationsBy.length)
                                for (var i = 0; i < message.requireAttestationsBy.length; ++i)
                                    writer.uint32(/* id 2, wireType 2 =*/18).string(message.requireAttestationsBy[i]);
                            if (message.enforcementMode != null && Object.hasOwnProperty.call(message, "enforcementMode"))
                                writer.uint32(/* id 3, wireType 0 =*/24).int32(message.enforcementMode);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified AdmissionRule message, length delimited. Does not implicitly {@link google.cloud.binaryauthorization.v1beta1.AdmissionRule.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.binaryauthorization.v1beta1.AdmissionRule
                         * @static
                         * @param {google.cloud.binaryauthorization.v1beta1.IAdmissionRule} message AdmissionRule message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        AdmissionRule.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes an AdmissionRule message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.binaryauthorization.v1beta1.AdmissionRule
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.binaryauthorization.v1beta1.AdmissionRule} AdmissionRule
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        AdmissionRule.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.binaryauthorization.v1beta1.AdmissionRule();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.evaluationMode = reader.int32();
                                        break;
                                    }
                                case 2: {
                                        if (!(message.requireAttestationsBy && message.requireAttestationsBy.length))
                                            message.requireAttestationsBy = [];
                                        message.requireAttestationsBy.push(reader.string());
                                        break;
                                    }
                                case 3: {
                                        message.enforcementMode = reader.int32();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes an AdmissionRule message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.binaryauthorization.v1beta1.AdmissionRule
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.binaryauthorization.v1beta1.AdmissionRule} AdmissionRule
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        AdmissionRule.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies an AdmissionRule message.
                         * @function verify
                         * @memberof google.cloud.binaryauthorization.v1beta1.AdmissionRule
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        AdmissionRule.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.evaluationMode != null && message.hasOwnProperty("evaluationMode"))
                                switch (message.evaluationMode) {
                                default:
                                    return "evaluationMode: enum value expected";
                                case 0:
                                case 1:
                                case 2:
                                case 3:
                                    break;
                                }
                            if (message.requireAttestationsBy != null && message.hasOwnProperty("requireAttestationsBy")) {
                                if (!Array.isArray(message.requireAttestationsBy))
                                    return "requireAttestationsBy: array expected";
                                for (var i = 0; i < message.requireAttestationsBy.length; ++i)
                                    if (!$util.isString(message.requireAttestationsBy[i]))
                                        return "requireAttestationsBy: string[] expected";
                            }
                            if (message.enforcementMode != null && message.hasOwnProperty("enforcementMode"))
                                switch (message.enforcementMode) {
                                default:
                                    return "enforcementMode: enum value expected";
                                case 0:
                                case 1:
                                case 2:
                                    break;
                                }
                            return null;
                        };
    
                        /**
                         * Creates an AdmissionRule message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.binaryauthorization.v1beta1.AdmissionRule
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.binaryauthorization.v1beta1.AdmissionRule} AdmissionRule
                         */
                        AdmissionRule.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.binaryauthorization.v1beta1.AdmissionRule)
                                return object;
                            var message = new $root.google.cloud.binaryauthorization.v1beta1.AdmissionRule();
                            switch (object.evaluationMode) {
                            default:
                                if (typeof object.evaluationMode === "number") {
                                    message.evaluationMode = object.evaluationMode;
                                    break;
                                }
                                break;
                            case "EVALUATION_MODE_UNSPECIFIED":
                            case 0:
                                message.evaluationMode = 0;
                                break;
                            case "ALWAYS_ALLOW":
                            case 1:
                                message.evaluationMode = 1;
                                break;
                            case "REQUIRE_ATTESTATION":
                            case 2:
                                message.evaluationMode = 2;
                                break;
                            case "ALWAYS_DENY":
                            case 3:
                                message.evaluationMode = 3;
                                break;
                            }
                            if (object.requireAttestationsBy) {
                                if (!Array.isArray(object.requireAttestationsBy))
                                    throw TypeError(".google.cloud.binaryauthorization.v1beta1.AdmissionRule.requireAttestationsBy: array expected");
                                message.requireAttestationsBy = [];
                                for (var i = 0; i < object.requireAttestationsBy.length; ++i)
                                    message.requireAttestationsBy[i] = String(object.requireAttestationsBy[i]);
                            }
                            switch (object.enforcementMode) {
                            default:
                                if (typeof object.enforcementMode === "number") {
                                    message.enforcementMode = object.enforcementMode;
                                    break;
                                }
                                break;
                            case "ENFORCEMENT_MODE_UNSPECIFIED":
                            case 0:
                                message.enforcementMode = 0;
                                break;
                            case "ENFORCED_BLOCK_AND_AUDIT_LOG":
                            case 1:
                                message.enforcementMode = 1;
                                break;
                            case "DRYRUN_AUDIT_LOG_ONLY":
                            case 2:
                                message.enforcementMode = 2;
                                break;
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from an AdmissionRule message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.binaryauthorization.v1beta1.AdmissionRule
                         * @static
                         * @param {google.cloud.binaryauthorization.v1beta1.AdmissionRule} message AdmissionRule
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        AdmissionRule.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.arrays || options.defaults)
                                object.requireAttestationsBy = [];
                            if (options.defaults) {
                                object.evaluationMode = options.enums === String ? "EVALUATION_MODE_UNSPECIFIED" : 0;
                                object.enforcementMode = options.enums === String ? "ENFORCEMENT_MODE_UNSPECIFIED" : 0;
                            }
                            if (message.evaluationMode != null && message.hasOwnProperty("evaluationMode"))
                                object.evaluationMode = options.enums === String ? $root.google.cloud.binaryauthorization.v1beta1.AdmissionRule.EvaluationMode[message.evaluationMode] === undefined ? message.evaluationMode : $root.google.cloud.binaryauthorization.v1beta1.AdmissionRule.EvaluationMode[message.evaluationMode] : message.evaluationMode;
                            if (message.requireAttestationsBy && message.requireAttestationsBy.length) {
                                object.requireAttestationsBy = [];
                                for (var j = 0; j < message.requireAttestationsBy.length; ++j)
                                    object.requireAttestationsBy[j] = message.requireAttestationsBy[j];
                            }
                            if (message.enforcementMode != null && message.hasOwnProperty("enforcementMode"))
                                object.enforcementMode = options.enums === String ? $root.google.cloud.binaryauthorization.v1beta1.AdmissionRule.EnforcementMode[message.enforcementMode] === undefined ? message.enforcementMode : $root.google.cloud.binaryauthorization.v1beta1.AdmissionRule.EnforcementMode[message.enforcementMode] : message.enforcementMode;
                            return object;
                        };
    
                        /**
                         * Converts this AdmissionRule to JSON.
                         * @function toJSON
                         * @memberof google.cloud.binaryauthorization.v1beta1.AdmissionRule
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        AdmissionRule.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for AdmissionRule
                         * @function getTypeUrl
                         * @memberof google.cloud.binaryauthorization.v1beta1.AdmissionRule
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        AdmissionRule.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.binaryauthorization.v1beta1.AdmissionRule";
                        };
    
                        /**
                         * EvaluationMode enum.
                         * @name google.cloud.binaryauthorization.v1beta1.AdmissionRule.EvaluationMode
                         * @enum {number}
                         * @property {number} EVALUATION_MODE_UNSPECIFIED=0 EVALUATION_MODE_UNSPECIFIED value
                         * @property {number} ALWAYS_ALLOW=1 ALWAYS_ALLOW value
                         * @property {number} REQUIRE_ATTESTATION=2 REQUIRE_ATTESTATION value
                         * @property {number} ALWAYS_DENY=3 ALWAYS_DENY value
                         */
                        AdmissionRule.EvaluationMode = (function() {
                            var valuesById = {}, values = Object.create(valuesById);
                            values[valuesById[0] = "EVALUATION_MODE_UNSPECIFIED"] = 0;
                            values[valuesById[1] = "ALWAYS_ALLOW"] = 1;
                            values[valuesById[2] = "REQUIRE_ATTESTATION"] = 2;
                            values[valuesById[3] = "ALWAYS_DENY"] = 3;
                            return values;
                        })();
    
                        /**
                         * EnforcementMode enum.
                         * @name google.cloud.binaryauthorization.v1beta1.AdmissionRule.EnforcementMode
                         * @enum {number}
                         * @property {number} ENFORCEMENT_MODE_UNSPECIFIED=0 ENFORCEMENT_MODE_UNSPECIFIED value
                         * @property {number} ENFORCED_BLOCK_AND_AUDIT_LOG=1 ENFORCED_BLOCK_AND_AUDIT_LOG value
                         * @property {number} DRYRUN_AUDIT_LOG_ONLY=2 DRYRUN_AUDIT_LOG_ONLY value
                         */
                        AdmissionRule.EnforcementMode = (function() {
                            var valuesById = {}, values = Object.create(valuesById);
                            values[valuesById[0] = "ENFORCEMENT_MODE_UNSPECIFIED"] = 0;
                            values[valuesById[1] = "ENFORCED_BLOCK_AND_AUDIT_LOG"] = 1;
                            values[valuesById[2] = "DRYRUN_AUDIT_LOG_ONLY"] = 2;
                            return values;
                        })();
    
                        return AdmissionRule;
                    })();
    
                    v1beta1.Attestor = (function() {
    
                        /**
                         * Properties of an Attestor.
                         * @memberof google.cloud.binaryauthorization.v1beta1
                         * @interface IAttestor
                         * @property {string|null} [name] Attestor name
                         * @property {string|null} [description] Attestor description
                         * @property {google.cloud.binaryauthorization.v1beta1.IUserOwnedDrydockNote|null} [userOwnedDrydockNote] Attestor userOwnedDrydockNote
                         * @property {google.protobuf.ITimestamp|null} [updateTime] Attestor updateTime
                         */
    
                        /**
                         * Constructs a new Attestor.
                         * @memberof google.cloud.binaryauthorization.v1beta1
                         * @classdesc Represents an Attestor.
                         * @implements IAttestor
                         * @constructor
                         * @param {google.cloud.binaryauthorization.v1beta1.IAttestor=} [properties] Properties to set
                         */
                        function Attestor(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * Attestor name.
                         * @member {string} name
                         * @memberof google.cloud.binaryauthorization.v1beta1.Attestor
                         * @instance
                         */
                        Attestor.prototype.name = "";
    
                        /**
                         * Attestor description.
                         * @member {string} description
                         * @memberof google.cloud.binaryauthorization.v1beta1.Attestor
                         * @instance
                         */
                        Attestor.prototype.description = "";
    
                        /**
                         * Attestor userOwnedDrydockNote.
                         * @member {google.cloud.binaryauthorization.v1beta1.IUserOwnedDrydockNote|null|undefined} userOwnedDrydockNote
                         * @memberof google.cloud.binaryauthorization.v1beta1.Attestor
                         * @instance
                         */
                        Attestor.prototype.userOwnedDrydockNote = null;
    
                        /**
                         * Attestor updateTime.
                         * @member {google.protobuf.ITimestamp|null|undefined} updateTime
                         * @memberof google.cloud.binaryauthorization.v1beta1.Attestor
                         * @instance
                         */
                        Attestor.prototype.updateTime = null;
    
                        // OneOf field names bound to virtual getters and setters
                        var $oneOfFields;
    
                        /**
                         * Attestor attestorType.
                         * @member {"userOwnedDrydockNote"|undefined} attestorType
                         * @memberof google.cloud.binaryauthorization.v1beta1.Attestor
                         * @instance
                         */
                        Object.defineProperty(Attestor.prototype, "attestorType", {
                            get: $util.oneOfGetter($oneOfFields = ["userOwnedDrydockNote"]),
                            set: $util.oneOfSetter($oneOfFields)
                        });
    
                        /**
                         * Creates a new Attestor instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.binaryauthorization.v1beta1.Attestor
                         * @static
                         * @param {google.cloud.binaryauthorization.v1beta1.IAttestor=} [properties] Properties to set
                         * @returns {google.cloud.binaryauthorization.v1beta1.Attestor} Attestor instance
                         */
                        Attestor.create = function create(properties) {
                            return new Attestor(properties);
                        };
    
                        /**
                         * Encodes the specified Attestor message. Does not implicitly {@link google.cloud.binaryauthorization.v1beta1.Attestor.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.binaryauthorization.v1beta1.Attestor
                         * @static
                         * @param {google.cloud.binaryauthorization.v1beta1.IAttestor} message Attestor message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        Attestor.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                            if (message.userOwnedDrydockNote != null && Object.hasOwnProperty.call(message, "userOwnedDrydockNote"))
                                $root.google.cloud.binaryauthorization.v1beta1.UserOwnedDrydockNote.encode(message.userOwnedDrydockNote, writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();
                            if (message.updateTime != null && Object.hasOwnProperty.call(message, "updateTime"))
                                $root.google.protobuf.Timestamp.encode(message.updateTime, writer.uint32(/* id 4, wireType 2 =*/34).fork()).ldelim();
                            if (message.description != null && Object.hasOwnProperty.call(message, "description"))
                                writer.uint32(/* id 6, wireType 2 =*/50).string(message.description);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified Attestor message, length delimited. Does not implicitly {@link google.cloud.binaryauthorization.v1beta1.Attestor.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.binaryauthorization.v1beta1.Attestor
                         * @static
                         * @param {google.cloud.binaryauthorization.v1beta1.IAttestor} message Attestor message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        Attestor.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes an Attestor message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.binaryauthorization.v1beta1.Attestor
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.binaryauthorization.v1beta1.Attestor} Attestor
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        Attestor.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.binaryauthorization.v1beta1.Attestor();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.name = reader.string();
                                        break;
                                    }
                                case 6: {
                                        message.description = reader.string();
                                        break;
                                    }
                                case 3: {
                                        message.userOwnedDrydockNote = $root.google.cloud.binaryauthorization.v1beta1.UserOwnedDrydockNote.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 4: {
                                        message.updateTime = $root.google.protobuf.Timestamp.decode(reader, reader.uint32());
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes an Attestor message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.binaryauthorization.v1beta1.Attestor
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.binaryauthorization.v1beta1.Attestor} Attestor
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        Attestor.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies an Attestor message.
                         * @function verify
                         * @memberof google.cloud.binaryauthorization.v1beta1.Attestor
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        Attestor.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            var properties = {};
                            if (message.name != null && message.hasOwnProperty("name"))
                                if (!$util.isString(message.name))
                                    return "name: string expected";
                            if (message.description != null && message.hasOwnProperty("description"))
                                if (!$util.isString(message.description))
                                    return "description: string expected";
                            if (message.userOwnedDrydockNote != null && message.hasOwnProperty("userOwnedDrydockNote")) {
                                properties.attestorType = 1;
                                {
                                    var error = $root.google.cloud.binaryauthorization.v1beta1.UserOwnedDrydockNote.verify(message.userOwnedDrydockNote);
                                    if (error)
                                        return "userOwnedDrydockNote." + error;
                                }
                            }
                            if (message.updateTime != null && message.hasOwnProperty("updateTime")) {
                                var error = $root.google.protobuf.Timestamp.verify(message.updateTime);
                                if (error)
                                    return "updateTime." + error;
                            }
                            return null;
                        };
    
                        /**
                         * Creates an Attestor message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.binaryauthorization.v1beta1.Attestor
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.binaryauthorization.v1beta1.Attestor} Attestor
                         */
                        Attestor.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.binaryauthorization.v1beta1.Attestor)
                                return object;
                            var message = new $root.google.cloud.binaryauthorization.v1beta1.Attestor();
                            if (object.name != null)
                                message.name = String(object.name);
                            if (object.description != null)
                                message.description = String(object.description);
                            if (object.userOwnedDrydockNote != null) {
                                if (typeof object.userOwnedDrydockNote !== "object")
                                    throw TypeError(".google.cloud.binaryauthorization.v1beta1.Attestor.userOwnedDrydockNote: object expected");
                                message.userOwnedDrydockNote = $root.google.cloud.binaryauthorization.v1beta1.UserOwnedDrydockNote.fromObject(object.userOwnedDrydockNote);
                            }
                            if (object.updateTime != null) {
                                if (typeof object.updateTime !== "object")
                                    throw TypeError(".google.cloud.binaryauthorization.v1beta1.Attestor.updateTime: object expected");
                                message.updateTime = $root.google.protobuf.Timestamp.fromObject(object.updateTime);
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from an Attestor message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.binaryauthorization.v1beta1.Attestor
                         * @static
                         * @param {google.cloud.binaryauthorization.v1beta1.Attestor} message Attestor
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        Attestor.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.name = "";
                                object.updateTime = null;
                                object.description = "";
                            }
                            if (message.name != null && message.hasOwnProperty("name"))
                                object.name = message.name;
                            if (message.userOwnedDrydockNote != null && message.hasOwnProperty("userOwnedDrydockNote")) {
                                object.userOwnedDrydockNote = $root.google.cloud.binaryauthorization.v1beta1.UserOwnedDrydockNote.toObject(message.userOwnedDrydockNote, options);
                                if (options.oneofs)
                                    object.attestorType = "userOwnedDrydockNote";
                            }
                            if (message.updateTime != null && message.hasOwnProperty("updateTime"))
                                object.updateTime = $root.google.protobuf.Timestamp.toObject(message.updateTime, options);
                            if (message.description != null && message.hasOwnProperty("description"))
                                object.description = message.description;
                            return object;
                        };
    
                        /**
                         * Converts this Attestor to JSON.
                         * @function toJSON
                         * @memberof google.cloud.binaryauthorization.v1beta1.Attestor
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        Attestor.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for Attestor
                         * @function getTypeUrl
                         * @memberof google.cloud.binaryauthorization.v1beta1.Attestor
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        Attestor.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.binaryauthorization.v1beta1.Attestor";
                        };
    
                        return Attestor;
                    })();
    
                    v1beta1.UserOwnedDrydockNote = (function() {
    
                        /**
                         * Properties of a UserOwnedDrydockNote.
                         * @memberof google.cloud.binaryauthorization.v1beta1
                         * @interface IUserOwnedDrydockNote
                         * @property {string|null} [noteReference] UserOwnedDrydockNote noteReference
                         * @property {Array.<google.cloud.binaryauthorization.v1beta1.IAttestorPublicKey>|null} [publicKeys] UserOwnedDrydockNote publicKeys
                         * @property {string|null} [delegationServiceAccountEmail] UserOwnedDrydockNote delegationServiceAccountEmail
                         */
    
                        /**
                         * Constructs a new UserOwnedDrydockNote.
                         * @memberof google.cloud.binaryauthorization.v1beta1
                         * @classdesc Represents a UserOwnedDrydockNote.
                         * @implements IUserOwnedDrydockNote
                         * @constructor
                         * @param {google.cloud.binaryauthorization.v1beta1.IUserOwnedDrydockNote=} [properties] Properties to set
                         */
                        function UserOwnedDrydockNote(properties) {
                            this.publicKeys = [];
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * UserOwnedDrydockNote noteReference.
                         * @member {string} noteReference
                         * @memberof google.cloud.binaryauthorization.v1beta1.UserOwnedDrydockNote
                         * @instance
                         */
                        UserOwnedDrydockNote.prototype.noteReference = "";
    
                        /**
                         * UserOwnedDrydockNote publicKeys.
                         * @member {Array.<google.cloud.binaryauthorization.v1beta1.IAttestorPublicKey>} publicKeys
                         * @memberof google.cloud.binaryauthorization.v1beta1.UserOwnedDrydockNote
                         * @instance
                         */
                        UserOwnedDrydockNote.prototype.publicKeys = $util.emptyArray;
    
                        /**
                         * UserOwnedDrydockNote delegationServiceAccountEmail.
                         * @member {string} delegationServiceAccountEmail
                         * @memberof google.cloud.binaryauthorization.v1beta1.UserOwnedDrydockNote
                         * @instance
                         */
                        UserOwnedDrydockNote.prototype.delegationServiceAccountEmail = "";
    
                        /**
                         * Creates a new UserOwnedDrydockNote instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.binaryauthorization.v1beta1.UserOwnedDrydockNote
                         * @static
                         * @param {google.cloud.binaryauthorization.v1beta1.IUserOwnedDrydockNote=} [properties] Properties to set
                         * @returns {google.cloud.binaryauthorization.v1beta1.UserOwnedDrydockNote} UserOwnedDrydockNote instance
                         */
                        UserOwnedDrydockNote.create = function create(properties) {
                            return new UserOwnedDrydockNote(properties);
                        };
    
                        /**
                         * Encodes the specified UserOwnedDrydockNote message. Does not implicitly {@link google.cloud.binaryauthorization.v1beta1.UserOwnedDrydockNote.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.binaryauthorization.v1beta1.UserOwnedDrydockNote
                         * @static
                         * @param {google.cloud.binaryauthorization.v1beta1.IUserOwnedDrydockNote} message UserOwnedDrydockNote message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        UserOwnedDrydockNote.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.noteReference != null && Object.hasOwnProperty.call(message, "noteReference"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.noteReference);
                            if (message.publicKeys != null && message.publicKeys.length)
                                for (var i = 0; i < message.publicKeys.length; ++i)
                                    $root.google.cloud.binaryauthorization.v1beta1.AttestorPublicKey.encode(message.publicKeys[i], writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                            if (message.delegationServiceAccountEmail != null && Object.hasOwnProperty.call(message, "delegationServiceAccountEmail"))
                                writer.uint32(/* id 3, wireType 2 =*/26).string(message.delegationServiceAccountEmail);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified UserOwnedDrydockNote message, length delimited. Does not implicitly {@link google.cloud.binaryauthorization.v1beta1.UserOwnedDrydockNote.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.binaryauthorization.v1beta1.UserOwnedDrydockNote
                         * @static
                         * @param {google.cloud.binaryauthorization.v1beta1.IUserOwnedDrydockNote} message UserOwnedDrydockNote message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        UserOwnedDrydockNote.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a UserOwnedDrydockNote message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.binaryauthorization.v1beta1.UserOwnedDrydockNote
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.binaryauthorization.v1beta1.UserOwnedDrydockNote} UserOwnedDrydockNote
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        UserOwnedDrydockNote.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.binaryauthorization.v1beta1.UserOwnedDrydockNote();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.noteReference = reader.string();
                                        break;
                                    }
                                case 2: {
                                        if (!(message.publicKeys && message.publicKeys.length))
                                            message.publicKeys = [];
                                        message.publicKeys.push($root.google.cloud.binaryauthorization.v1beta1.AttestorPublicKey.decode(reader, reader.uint32()));
                                        break;
                                    }
                                case 3: {
                                        message.delegationServiceAccountEmail = reader.string();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a UserOwnedDrydockNote message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.binaryauthorization.v1beta1.UserOwnedDrydockNote
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.binaryauthorization.v1beta1.UserOwnedDrydockNote} UserOwnedDrydockNote
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        UserOwnedDrydockNote.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a UserOwnedDrydockNote message.
                         * @function verify
                         * @memberof google.cloud.binaryauthorization.v1beta1.UserOwnedDrydockNote
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        UserOwnedDrydockNote.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.noteReference != null && message.hasOwnProperty("noteReference"))
                                if (!$util.isString(message.noteReference))
                                    return "noteReference: string expected";
                            if (message.publicKeys != null && message.hasOwnProperty("publicKeys")) {
                                if (!Array.isArray(message.publicKeys))
                                    return "publicKeys: array expected";
                                for (var i = 0; i < message.publicKeys.length; ++i) {
                                    var error = $root.google.cloud.binaryauthorization.v1beta1.AttestorPublicKey.verify(message.publicKeys[i]);
                                    if (error)
                                        return "publicKeys." + error;
                                }
                            }
                            if (message.delegationServiceAccountEmail != null && message.hasOwnProperty("delegationServiceAccountEmail"))
                                if (!$util.isString(message.delegationServiceAccountEmail))
                                    return "delegationServiceAccountEmail: string expected";
                            return null;
                        };
    
                        /**
                         * Creates a UserOwnedDrydockNote message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.binaryauthorization.v1beta1.UserOwnedDrydockNote
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.binaryauthorization.v1beta1.UserOwnedDrydockNote} UserOwnedDrydockNote
                         */
                        UserOwnedDrydockNote.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.binaryauthorization.v1beta1.UserOwnedDrydockNote)
                                return object;
                            var message = new $root.google.cloud.binaryauthorization.v1beta1.UserOwnedDrydockNote();
                            if (object.noteReference != null)
                                message.noteReference = String(object.noteReference);
                            if (object.publicKeys) {
                                if (!Array.isArray(object.publicKeys))
                                    throw TypeError(".google.cloud.binaryauthorization.v1beta1.UserOwnedDrydockNote.publicKeys: array expected");
                                message.publicKeys = [];
                                for (var i = 0; i < object.publicKeys.length; ++i) {
                                    if (typeof object.publicKeys[i] !== "object")
                                        throw TypeError(".google.cloud.binaryauthorization.v1beta1.UserOwnedDrydockNote.publicKeys: object expected");
                                    message.publicKeys[i] = $root.google.cloud.binaryauthorization.v1beta1.AttestorPublicKey.fromObject(object.publicKeys[i]);
                                }
                            }
                            if (object.delegationServiceAccountEmail != null)
                                message.delegationServiceAccountEmail = String(object.delegationServiceAccountEmail);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a UserOwnedDrydockNote message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.binaryauthorization.v1beta1.UserOwnedDrydockNote
                         * @static
                         * @param {google.cloud.binaryauthorization.v1beta1.UserOwnedDrydockNote} message UserOwnedDrydockNote
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        UserOwnedDrydockNote.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.arrays || options.defaults)
                                object.publicKeys = [];
                            if (options.defaults) {
                                object.noteReference = "";
                                object.delegationServiceAccountEmail = "";
                            }
                            if (message.noteReference != null && message.hasOwnProperty("noteReference"))
                                object.noteReference = message.noteReference;
                            if (message.publicKeys && message.publicKeys.length) {
                                object.publicKeys = [];
                                for (var j = 0; j < message.publicKeys.length; ++j)
                                    object.publicKeys[j] = $root.google.cloud.binaryauthorization.v1beta1.AttestorPublicKey.toObject(message.publicKeys[j], options);
                            }
                            if (message.delegationServiceAccountEmail != null && message.hasOwnProperty("delegationServiceAccountEmail"))
                                object.delegationServiceAccountEmail = message.delegationServiceAccountEmail;
                            return object;
                        };
    
                        /**
                         * Converts this UserOwnedDrydockNote to JSON.
                         * @function toJSON
                         * @memberof google.cloud.binaryauthorization.v1beta1.UserOwnedDrydockNote
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        UserOwnedDrydockNote.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for UserOwnedDrydockNote
                         * @function getTypeUrl
                         * @memberof google.cloud.binaryauthorization.v1beta1.UserOwnedDrydockNote
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        UserOwnedDrydockNote.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.binaryauthorization.v1beta1.UserOwnedDrydockNote";
                        };
    
                        return UserOwnedDrydockNote;
                    })();
    
                    v1beta1.PkixPublicKey = (function() {
    
                        /**
                         * Properties of a PkixPublicKey.
                         * @memberof google.cloud.binaryauthorization.v1beta1
                         * @interface IPkixPublicKey
                         * @property {string|null} [publicKeyPem] PkixPublicKey publicKeyPem
                         * @property {google.cloud.binaryauthorization.v1beta1.PkixPublicKey.SignatureAlgorithm|null} [signatureAlgorithm] PkixPublicKey signatureAlgorithm
                         */
    
                        /**
                         * Constructs a new PkixPublicKey.
                         * @memberof google.cloud.binaryauthorization.v1beta1
                         * @classdesc Represents a PkixPublicKey.
                         * @implements IPkixPublicKey
                         * @constructor
                         * @param {google.cloud.binaryauthorization.v1beta1.IPkixPublicKey=} [properties] Properties to set
                         */
                        function PkixPublicKey(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * PkixPublicKey publicKeyPem.
                         * @member {string} publicKeyPem
                         * @memberof google.cloud.binaryauthorization.v1beta1.PkixPublicKey
                         * @instance
                         */
                        PkixPublicKey.prototype.publicKeyPem = "";
    
                        /**
                         * PkixPublicKey signatureAlgorithm.
                         * @member {google.cloud.binaryauthorization.v1beta1.PkixPublicKey.SignatureAlgorithm} signatureAlgorithm
                         * @memberof google.cloud.binaryauthorization.v1beta1.PkixPublicKey
                         * @instance
                         */
                        PkixPublicKey.prototype.signatureAlgorithm = 0;
    
                        /**
                         * Creates a new PkixPublicKey instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.binaryauthorization.v1beta1.PkixPublicKey
                         * @static
                         * @param {google.cloud.binaryauthorization.v1beta1.IPkixPublicKey=} [properties] Properties to set
                         * @returns {google.cloud.binaryauthorization.v1beta1.PkixPublicKey} PkixPublicKey instance
                         */
                        PkixPublicKey.create = function create(properties) {
                            return new PkixPublicKey(properties);
                        };
    
                        /**
                         * Encodes the specified PkixPublicKey message. Does not implicitly {@link google.cloud.binaryauthorization.v1beta1.PkixPublicKey.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.binaryauthorization.v1beta1.PkixPublicKey
                         * @static
                         * @param {google.cloud.binaryauthorization.v1beta1.IPkixPublicKey} message PkixPublicKey message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        PkixPublicKey.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.publicKeyPem != null && Object.hasOwnProperty.call(message, "publicKeyPem"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.publicKeyPem);
                            if (message.signatureAlgorithm != null && Object.hasOwnProperty.call(message, "signatureAlgorithm"))
                                writer.uint32(/* id 2, wireType 0 =*/16).int32(message.signatureAlgorithm);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified PkixPublicKey message, length delimited. Does not implicitly {@link google.cloud.binaryauthorization.v1beta1.PkixPublicKey.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.binaryauthorization.v1beta1.PkixPublicKey
                         * @static
                         * @param {google.cloud.binaryauthorization.v1beta1.IPkixPublicKey} message PkixPublicKey message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        PkixPublicKey.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a PkixPublicKey message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.binaryauthorization.v1beta1.PkixPublicKey
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.binaryauthorization.v1beta1.PkixPublicKey} PkixPublicKey
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        PkixPublicKey.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.binaryauthorization.v1beta1.PkixPublicKey();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.publicKeyPem = reader.string();
                                        break;
                                    }
                                case 2: {
                                        message.signatureAlgorithm = reader.int32();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a PkixPublicKey message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.binaryauthorization.v1beta1.PkixPublicKey
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.binaryauthorization.v1beta1.PkixPublicKey} PkixPublicKey
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        PkixPublicKey.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a PkixPublicKey message.
                         * @function verify
                         * @memberof google.cloud.binaryauthorization.v1beta1.PkixPublicKey
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        PkixPublicKey.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.publicKeyPem != null && message.hasOwnProperty("publicKeyPem"))
                                if (!$util.isString(message.publicKeyPem))
                                    return "publicKeyPem: string expected";
                            if (message.signatureAlgorithm != null && message.hasOwnProperty("signatureAlgorithm"))
                                switch (message.signatureAlgorithm) {
                                default:
                                    return "signatureAlgorithm: enum value expected";
                                case 0:
                                case 1:
                                case 2:
                                case 3:
                                case 4:
                                case 5:
                                case 6:
                                case 7:
                                case 8:
                                case 9:
                                case 9:
                                case 10:
                                case 10:
                                case 11:
                                case 11:
                                    break;
                                }
                            return null;
                        };
    
                        /**
                         * Creates a PkixPublicKey message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.binaryauthorization.v1beta1.PkixPublicKey
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.binaryauthorization.v1beta1.PkixPublicKey} PkixPublicKey
                         */
                        PkixPublicKey.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.binaryauthorization.v1beta1.PkixPublicKey)
                                return object;
                            var message = new $root.google.cloud.binaryauthorization.v1beta1.PkixPublicKey();
                            if (object.publicKeyPem != null)
                                message.publicKeyPem = String(object.publicKeyPem);
                            switch (object.signatureAlgorithm) {
                            default:
                                if (typeof object.signatureAlgorithm === "number") {
                                    message.signatureAlgorithm = object.signatureAlgorithm;
                                    break;
                                }
                                break;
                            case "SIGNATURE_ALGORITHM_UNSPECIFIED":
                            case 0:
                                message.signatureAlgorithm = 0;
                                break;
                            case "RSA_PSS_2048_SHA256":
                            case 1:
                                message.signatureAlgorithm = 1;
                                break;
                            case "RSA_PSS_3072_SHA256":
                            case 2:
                                message.signatureAlgorithm = 2;
                                break;
                            case "RSA_PSS_4096_SHA256":
                            case 3:
                                message.signatureAlgorithm = 3;
                                break;
                            case "RSA_PSS_4096_SHA512":
                            case 4:
                                message.signatureAlgorithm = 4;
                                break;
                            case "RSA_SIGN_PKCS1_2048_SHA256":
                            case 5:
                                message.signatureAlgorithm = 5;
                                break;
                            case "RSA_SIGN_PKCS1_3072_SHA256":
                            case 6:
                                message.signatureAlgorithm = 6;
                                break;
                            case "RSA_SIGN_PKCS1_4096_SHA256":
                            case 7:
                                message.signatureAlgorithm = 7;
                                break;
                            case "RSA_SIGN_PKCS1_4096_SHA512":
                            case 8:
                                message.signatureAlgorithm = 8;
                                break;
                            case "ECDSA_P256_SHA256":
                            case 9:
                                message.signatureAlgorithm = 9;
                                break;
                            case "EC_SIGN_P256_SHA256":
                            case 9:
                                message.signatureAlgorithm = 9;
                                break;
                            case "ECDSA_P384_SHA384":
                            case 10:
                                message.signatureAlgorithm = 10;
                                break;
                            case "EC_SIGN_P384_SHA384":
                            case 10:
                                message.signatureAlgorithm = 10;
                                break;
                            case "ECDSA_P521_SHA512":
                            case 11:
                                message.signatureAlgorithm = 11;
                                break;
                            case "EC_SIGN_P521_SHA512":
                            case 11:
                                message.signatureAlgorithm = 11;
                                break;
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a PkixPublicKey message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.binaryauthorization.v1beta1.PkixPublicKey
                         * @static
                         * @param {google.cloud.binaryauthorization.v1beta1.PkixPublicKey} message PkixPublicKey
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        PkixPublicKey.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.publicKeyPem = "";
                                object.signatureAlgorithm = options.enums === String ? "SIGNATURE_ALGORITHM_UNSPECIFIED" : 0;
                            }
                            if (message.publicKeyPem != null && message.hasOwnProperty("publicKeyPem"))
                                object.publicKeyPem = message.publicKeyPem;
                            if (message.signatureAlgorithm != null && message.hasOwnProperty("signatureAlgorithm"))
                                object.signatureAlgorithm = options.enums === String ? $root.google.cloud.binaryauthorization.v1beta1.PkixPublicKey.SignatureAlgorithm[message.signatureAlgorithm] === undefined ? message.signatureAlgorithm : $root.google.cloud.binaryauthorization.v1beta1.PkixPublicKey.SignatureAlgorithm[message.signatureAlgorithm] : message.signatureAlgorithm;
                            return object;
                        };
    
                        /**
                         * Converts this PkixPublicKey to JSON.
                         * @function toJSON
                         * @memberof google.cloud.binaryauthorization.v1beta1.PkixPublicKey
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        PkixPublicKey.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for PkixPublicKey
                         * @function getTypeUrl
                         * @memberof google.cloud.binaryauthorization.v1beta1.PkixPublicKey
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        PkixPublicKey.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.binaryauthorization.v1beta1.PkixPublicKey";
                        };
    
                        /**
                         * SignatureAlgorithm enum.
                         * @name google.cloud.binaryauthorization.v1beta1.PkixPublicKey.SignatureAlgorithm
                         * @enum {number}
                         * @property {number} SIGNATURE_ALGORITHM_UNSPECIFIED=0 SIGNATURE_ALGORITHM_UNSPECIFIED value
                         * @property {number} RSA_PSS_2048_SHA256=1 RSA_PSS_2048_SHA256 value
                         * @property {number} RSA_PSS_3072_SHA256=2 RSA_PSS_3072_SHA256 value
                         * @property {number} RSA_PSS_4096_SHA256=3 RSA_PSS_4096_SHA256 value
                         * @property {number} RSA_PSS_4096_SHA512=4 RSA_PSS_4096_SHA512 value
                         * @property {number} RSA_SIGN_PKCS1_2048_SHA256=5 RSA_SIGN_PKCS1_2048_SHA256 value
                         * @property {number} RSA_SIGN_PKCS1_3072_SHA256=6 RSA_SIGN_PKCS1_3072_SHA256 value
                         * @property {number} RSA_SIGN_PKCS1_4096_SHA256=7 RSA_SIGN_PKCS1_4096_SHA256 value
                         * @property {number} RSA_SIGN_PKCS1_4096_SHA512=8 RSA_SIGN_PKCS1_4096_SHA512 value
                         * @property {number} ECDSA_P256_SHA256=9 ECDSA_P256_SHA256 value
                         * @property {number} EC_SIGN_P256_SHA256=9 EC_SIGN_P256_SHA256 value
                         * @property {number} ECDSA_P384_SHA384=10 ECDSA_P384_SHA384 value
                         * @property {number} EC_SIGN_P384_SHA384=10 EC_SIGN_P384_SHA384 value
                         * @property {number} ECDSA_P521_SHA512=11 ECDSA_P521_SHA512 value
                         * @property {number} EC_SIGN_P521_SHA512=11 EC_SIGN_P521_SHA512 value
                         */
                        PkixPublicKey.SignatureAlgorithm = (function() {
                            var valuesById = {}, values = Object.create(valuesById);
                            values[valuesById[0] = "SIGNATURE_ALGORITHM_UNSPECIFIED"] = 0;
                            values[valuesById[1] = "RSA_PSS_2048_SHA256"] = 1;
                            values[valuesById[2] = "RSA_PSS_3072_SHA256"] = 2;
                            values[valuesById[3] = "RSA_PSS_4096_SHA256"] = 3;
                            values[valuesById[4] = "RSA_PSS_4096_SHA512"] = 4;
                            values[valuesById[5] = "RSA_SIGN_PKCS1_2048_SHA256"] = 5;
                            values[valuesById[6] = "RSA_SIGN_PKCS1_3072_SHA256"] = 6;
                            values[valuesById[7] = "RSA_SIGN_PKCS1_4096_SHA256"] = 7;
                            values[valuesById[8] = "RSA_SIGN_PKCS1_4096_SHA512"] = 8;
                            values[valuesById[9] = "ECDSA_P256_SHA256"] = 9;
                            values["EC_SIGN_P256_SHA256"] = 9;
                            values[valuesById[10] = "ECDSA_P384_SHA384"] = 10;
                            values["EC_SIGN_P384_SHA384"] = 10;
                            values[valuesById[11] = "ECDSA_P521_SHA512"] = 11;
                            values["EC_SIGN_P521_SHA512"] = 11;
                            return values;
                        })();
    
                        return PkixPublicKey;
                    })();
    
                    v1beta1.AttestorPublicKey = (function() {
    
                        /**
                         * Properties of an AttestorPublicKey.
                         * @memberof google.cloud.binaryauthorization.v1beta1
                         * @interface IAttestorPublicKey
                         * @property {string|null} [comment] AttestorPublicKey comment
                         * @property {string|null} [id] AttestorPublicKey id
                         * @property {string|null} [asciiArmoredPgpPublicKey] AttestorPublicKey asciiArmoredPgpPublicKey
                         * @property {google.cloud.binaryauthorization.v1beta1.IPkixPublicKey|null} [pkixPublicKey] AttestorPublicKey pkixPublicKey
                         */
    
                        /**
                         * Constructs a new AttestorPublicKey.
                         * @memberof google.cloud.binaryauthorization.v1beta1
                         * @classdesc Represents an AttestorPublicKey.
                         * @implements IAttestorPublicKey
                         * @constructor
                         * @param {google.cloud.binaryauthorization.v1beta1.IAttestorPublicKey=} [properties] Properties to set
                         */
                        function AttestorPublicKey(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * AttestorPublicKey comment.
                         * @member {string} comment
                         * @memberof google.cloud.binaryauthorization.v1beta1.AttestorPublicKey
                         * @instance
                         */
                        AttestorPublicKey.prototype.comment = "";
    
                        /**
                         * AttestorPublicKey id.
                         * @member {string} id
                         * @memberof google.cloud.binaryauthorization.v1beta1.AttestorPublicKey
                         * @instance
                         */
                        AttestorPublicKey.prototype.id = "";
    
                        /**
                         * AttestorPublicKey asciiArmoredPgpPublicKey.
                         * @member {string|null|undefined} asciiArmoredPgpPublicKey
                         * @memberof google.cloud.binaryauthorization.v1beta1.AttestorPublicKey
                         * @instance
                         */
                        AttestorPublicKey.prototype.asciiArmoredPgpPublicKey = null;
    
                        /**
                         * AttestorPublicKey pkixPublicKey.
                         * @member {google.cloud.binaryauthorization.v1beta1.IPkixPublicKey|null|undefined} pkixPublicKey
                         * @memberof google.cloud.binaryauthorization.v1beta1.AttestorPublicKey
                         * @instance
                         */
                        AttestorPublicKey.prototype.pkixPublicKey = null;
    
                        // OneOf field names bound to virtual getters and setters
                        var $oneOfFields;
    
                        /**
                         * AttestorPublicKey publicKey.
                         * @member {"asciiArmoredPgpPublicKey"|"pkixPublicKey"|undefined} publicKey
                         * @memberof google.cloud.binaryauthorization.v1beta1.AttestorPublicKey
                         * @instance
                         */
                        Object.defineProperty(AttestorPublicKey.prototype, "publicKey", {
                            get: $util.oneOfGetter($oneOfFields = ["asciiArmoredPgpPublicKey", "pkixPublicKey"]),
                            set: $util.oneOfSetter($oneOfFields)
                        });
    
                        /**
                         * Creates a new AttestorPublicKey instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.binaryauthorization.v1beta1.AttestorPublicKey
                         * @static
                         * @param {google.cloud.binaryauthorization.v1beta1.IAttestorPublicKey=} [properties] Properties to set
                         * @returns {google.cloud.binaryauthorization.v1beta1.AttestorPublicKey} AttestorPublicKey instance
                         */
                        AttestorPublicKey.create = function create(properties) {
                            return new AttestorPublicKey(properties);
                        };
    
                        /**
                         * Encodes the specified AttestorPublicKey message. Does not implicitly {@link google.cloud.binaryauthorization.v1beta1.AttestorPublicKey.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.binaryauthorization.v1beta1.AttestorPublicKey
                         * @static
                         * @param {google.cloud.binaryauthorization.v1beta1.IAttestorPublicKey} message AttestorPublicKey message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        AttestorPublicKey.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.comment != null && Object.hasOwnProperty.call(message, "comment"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.comment);
                            if (message.id != null && Object.hasOwnProperty.call(message, "id"))
                                writer.uint32(/* id 2, wireType 2 =*/18).string(message.id);
                            if (message.asciiArmoredPgpPublicKey != null && Object.hasOwnProperty.call(message, "asciiArmoredPgpPublicKey"))
                                writer.uint32(/* id 3, wireType 2 =*/26).string(message.asciiArmoredPgpPublicKey);
                            if (message.pkixPublicKey != null && Object.hasOwnProperty.call(message, "pkixPublicKey"))
                                $root.google.cloud.binaryauthorization.v1beta1.PkixPublicKey.encode(message.pkixPublicKey, writer.uint32(/* id 5, wireType 2 =*/42).fork()).ldelim();
                            return writer;
                        };
    
                        /**
                         * Encodes the specified AttestorPublicKey message, length delimited. Does not implicitly {@link google.cloud.binaryauthorization.v1beta1.AttestorPublicKey.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.binaryauthorization.v1beta1.AttestorPublicKey
                         * @static
                         * @param {google.cloud.binaryauthorization.v1beta1.IAttestorPublicKey} message AttestorPublicKey message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        AttestorPublicKey.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes an AttestorPublicKey message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.binaryauthorization.v1beta1.AttestorPublicKey
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.binaryauthorization.v1beta1.AttestorPublicKey} AttestorPublicKey
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        AttestorPublicKey.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.binaryauthorization.v1beta1.AttestorPublicKey();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.comment = reader.string();
                                        break;
                                    }
                                case 2: {
                                        message.id = reader.string();
                                        break;
                                    }
                                case 3: {
                                        message.asciiArmoredPgpPublicKey = reader.string();
                                        break;
                                    }
                                case 5: {
                                        message.pkixPublicKey = $root.google.cloud.binaryauthorization.v1beta1.PkixPublicKey.decode(reader, reader.uint32());
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes an AttestorPublicKey message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.binaryauthorization.v1beta1.AttestorPublicKey
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.binaryauthorization.v1beta1.AttestorPublicKey} AttestorPublicKey
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        AttestorPublicKey.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies an AttestorPublicKey message.
                         * @function verify
                         * @memberof google.cloud.binaryauthorization.v1beta1.AttestorPublicKey
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        AttestorPublicKey.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            var properties = {};
                            if (message.comment != null && message.hasOwnProperty("comment"))
                                if (!$util.isString(message.comment))
                                    return "comment: string expected";
                            if (message.id != null && message.hasOwnProperty("id"))
                                if (!$util.isString(message.id))
                                    return "id: string expected";
                            if (message.asciiArmoredPgpPublicKey != null && message.hasOwnProperty("asciiArmoredPgpPublicKey")) {
                                properties.publicKey = 1;
                                if (!$util.isString(message.asciiArmoredPgpPublicKey))
                                    return "asciiArmoredPgpPublicKey: string expected";
                            }
                            if (message.pkixPublicKey != null && message.hasOwnProperty("pkixPublicKey")) {
                                if (properties.publicKey === 1)
                                    return "publicKey: multiple values";
                                properties.publicKey = 1;
                                {
                                    var error = $root.google.cloud.binaryauthorization.v1beta1.PkixPublicKey.verify(message.pkixPublicKey);
                                    if (error)
                                        return "pkixPublicKey." + error;
                                }
                            }
                            return null;
                        };
    
                        /**
                         * Creates an AttestorPublicKey message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.binaryauthorization.v1beta1.AttestorPublicKey
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.binaryauthorization.v1beta1.AttestorPublicKey} AttestorPublicKey
                         */
                        AttestorPublicKey.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.binaryauthorization.v1beta1.AttestorPublicKey)
                                return object;
                            var message = new $root.google.cloud.binaryauthorization.v1beta1.AttestorPublicKey();
                            if (object.comment != null)
                                message.comment = String(object.comment);
                            if (object.id != null)
                                message.id = String(object.id);
                            if (object.asciiArmoredPgpPublicKey != null)
                                message.asciiArmoredPgpPublicKey = String(object.asciiArmoredPgpPublicKey);
                            if (object.pkixPublicKey != null) {
                                if (typeof object.pkixPublicKey !== "object")
                                    throw TypeError(".google.cloud.binaryauthorization.v1beta1.AttestorPublicKey.pkixPublicKey: object expected");
                                message.pkixPublicKey = $root.google.cloud.binaryauthorization.v1beta1.PkixPublicKey.fromObject(object.pkixPublicKey);
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from an AttestorPublicKey message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.binaryauthorization.v1beta1.AttestorPublicKey
                         * @static
                         * @param {google.cloud.binaryauthorization.v1beta1.AttestorPublicKey} message AttestorPublicKey
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        AttestorPublicKey.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.comment = "";
                                object.id = "";
                            }
                            if (message.comment != null && message.hasOwnProperty("comment"))
                                object.comment = message.comment;
                            if (message.id != null && message.hasOwnProperty("id"))
                                object.id = message.id;
                            if (message.asciiArmoredPgpPublicKey != null && message.hasOwnProperty("asciiArmoredPgpPublicKey")) {
                                object.asciiArmoredPgpPublicKey = message.asciiArmoredPgpPublicKey;
                                if (options.oneofs)
                                    object.publicKey = "asciiArmoredPgpPublicKey";
                            }
                            if (message.pkixPublicKey != null && message.hasOwnProperty("pkixPublicKey")) {
                                object.pkixPublicKey = $root.google.cloud.binaryauthorization.v1beta1.PkixPublicKey.toObject(message.pkixPublicKey, options);
                                if (options.oneofs)
                                    object.publicKey = "pkixPublicKey";
                            }
                            return object;
                        };
    
                        /**
                         * Converts this AttestorPublicKey to JSON.
                         * @function toJSON
                         * @memberof google.cloud.binaryauthorization.v1beta1.AttestorPublicKey
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        AttestorPublicKey.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for AttestorPublicKey
                         * @function getTypeUrl
                         * @memberof google.cloud.binaryauthorization.v1beta1.AttestorPublicKey
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        AttestorPublicKey.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.binaryauthorization.v1beta1.AttestorPublicKey";
                        };
    
                        return AttestorPublicKey;
                    })();
    
                    v1beta1.BinauthzManagementServiceV1Beta1 = (function() {
    
                        /**
                         * Constructs a new BinauthzManagementServiceV1Beta1 service.
                         * @memberof google.cloud.binaryauthorization.v1beta1
                         * @classdesc Represents a BinauthzManagementServiceV1Beta1
                         * @extends $protobuf.rpc.Service
                         * @constructor
                         * @param {$protobuf.RPCImpl} rpcImpl RPC implementation
                         * @param {boolean} [requestDelimited=false] Whether requests are length-delimited
                         * @param {boolean} [responseDelimited=false] Whether responses are length-delimited
                         */
                        function BinauthzManagementServiceV1Beta1(rpcImpl, requestDelimited, responseDelimited) {
                            $protobuf.rpc.Service.call(this, rpcImpl, requestDelimited, responseDelimited);
                        }
    
                        (BinauthzManagementServiceV1Beta1.prototype = Object.create($protobuf.rpc.Service.prototype)).constructor = BinauthzManagementServiceV1Beta1;
    
                        /**
                         * Creates new BinauthzManagementServiceV1Beta1 service using the specified rpc implementation.
                         * @function create
                         * @memberof google.cloud.binaryauthorization.v1beta1.BinauthzManagementServiceV1Beta1
                         * @static
                         * @param {$protobuf.RPCImpl} rpcImpl RPC implementation
                         * @param {boolean} [requestDelimited=false] Whether requests are length-delimited
                         * @param {boolean} [responseDelimited=false] Whether responses are length-delimited
                         * @returns {BinauthzManagementServiceV1Beta1} RPC service. Useful where requests and/or responses are streamed.
                         */
                        BinauthzManagementServiceV1Beta1.create = function create(rpcImpl, requestDelimited, responseDelimited) {
                            return new this(rpcImpl, requestDelimited, responseDelimited);
                        };
    
                        /**
                         * Callback as used by {@link google.cloud.binaryauthorization.v1beta1.BinauthzManagementServiceV1Beta1|getPolicy}.
                         * @memberof google.cloud.binaryauthorization.v1beta1.BinauthzManagementServiceV1Beta1
                         * @typedef GetPolicyCallback
                         * @type {function}
                         * @param {Error|null} error Error, if any
                         * @param {google.cloud.binaryauthorization.v1beta1.Policy} [response] Policy
                         */
    
                        /**
                         * Calls GetPolicy.
                         * @function getPolicy
                         * @memberof google.cloud.binaryauthorization.v1beta1.BinauthzManagementServiceV1Beta1
                         * @instance
                         * @param {google.cloud.binaryauthorization.v1beta1.IGetPolicyRequest} request GetPolicyRequest message or plain object
                         * @param {google.cloud.binaryauthorization.v1beta1.BinauthzManagementServiceV1Beta1.GetPolicyCallback} callback Node-style callback called with the error, if any, and Policy
                         * @returns {undefined}
                         * @variation 1
                         */
                        Object.defineProperty(BinauthzManagementServiceV1Beta1.prototype.getPolicy = function getPolicy(request, callback) {
                            return this.rpcCall(getPolicy, $root.google.cloud.binaryauthorization.v1beta1.GetPolicyRequest, $root.google.cloud.binaryauthorization.v1beta1.Policy, request, callback);
                        }, "name", { value: "GetPolicy" });
    
                        /**
                         * Calls GetPolicy.
                         * @function getPolicy
                         * @memberof google.cloud.binaryauthorization.v1beta1.BinauthzManagementServiceV1Beta1
                         * @instance
                         * @param {google.cloud.binaryauthorization.v1beta1.IGetPolicyRequest} request GetPolicyRequest message or plain object
                         * @returns {Promise<google.cloud.binaryauthorization.v1beta1.Policy>} Promise
                         * @variation 2
                         */
    
                        /**
                         * Callback as used by {@link google.cloud.binaryauthorization.v1beta1.BinauthzManagementServiceV1Beta1|updatePolicy}.
                         * @memberof google.cloud.binaryauthorization.v1beta1.BinauthzManagementServiceV1Beta1
                         * @typedef UpdatePolicyCallback
                         * @type {function}
                         * @param {Error|null} error Error, if any
                         * @param {google.cloud.binaryauthorization.v1beta1.Policy} [response] Policy
                         */
    
                        /**
                         * Calls UpdatePolicy.
                         * @function updatePolicy
                         * @memberof google.cloud.binaryauthorization.v1beta1.BinauthzManagementServiceV1Beta1
                         * @instance
                         * @param {google.cloud.binaryauthorization.v1beta1.IUpdatePolicyRequest} request UpdatePolicyRequest message or plain object
                         * @param {google.cloud.binaryauthorization.v1beta1.BinauthzManagementServiceV1Beta1.UpdatePolicyCallback} callback Node-style callback called with the error, if any, and Policy
                         * @returns {undefined}
                         * @variation 1
                         */
                        Object.defineProperty(BinauthzManagementServiceV1Beta1.prototype.updatePolicy = function updatePolicy(request, callback) {
                            return this.rpcCall(updatePolicy, $root.google.cloud.binaryauthorization.v1beta1.UpdatePolicyRequest, $root.google.cloud.binaryauthorization.v1beta1.Policy, request, callback);
                        }, "name", { value: "UpdatePolicy" });
    
                        /**
                         * Calls UpdatePolicy.
                         * @function updatePolicy
                         * @memberof google.cloud.binaryauthorization.v1beta1.BinauthzManagementServiceV1Beta1
                         * @instance
                         * @param {google.cloud.binaryauthorization.v1beta1.IUpdatePolicyRequest} request UpdatePolicyRequest message or plain object
                         * @returns {Promise<google.cloud.binaryauthorization.v1beta1.Policy>} Promise
                         * @variation 2
                         */
    
                        /**
                         * Callback as used by {@link google.cloud.binaryauthorization.v1beta1.BinauthzManagementServiceV1Beta1|createAttestor}.
                         * @memberof google.cloud.binaryauthorization.v1beta1.BinauthzManagementServiceV1Beta1
                         * @typedef CreateAttestorCallback
                         * @type {function}
                         * @param {Error|null} error Error, if any
                         * @param {google.cloud.binaryauthorization.v1beta1.Attestor} [response] Attestor
                         */
    
                        /**
                         * Calls CreateAttestor.
                         * @function createAttestor
                         * @memberof google.cloud.binaryauthorization.v1beta1.BinauthzManagementServiceV1Beta1
                         * @instance
                         * @param {google.cloud.binaryauthorization.v1beta1.ICreateAttestorRequest} request CreateAttestorRequest message or plain object
                         * @param {google.cloud.binaryauthorization.v1beta1.BinauthzManagementServiceV1Beta1.CreateAttestorCallback} callback Node-style callback called with the error, if any, and Attestor
                         * @returns {undefined}
                         * @variation 1
                         */
                        Object.defineProperty(BinauthzManagementServiceV1Beta1.prototype.createAttestor = function createAttestor(request, callback) {
                            return this.rpcCall(createAttestor, $root.google.cloud.binaryauthorization.v1beta1.CreateAttestorRequest, $root.google.cloud.binaryauthorization.v1beta1.Attestor, request, callback);
                        }, "name", { value: "CreateAttestor" });
    
                        /**
                         * Calls CreateAttestor.
                         * @function createAttestor
                         * @memberof google.cloud.binaryauthorization.v1beta1.BinauthzManagementServiceV1Beta1
                         * @instance
                         * @param {google.cloud.binaryauthorization.v1beta1.ICreateAttestorRequest} request CreateAttestorRequest message or plain object
                         * @returns {Promise<google.cloud.binaryauthorization.v1beta1.Attestor>} Promise
                         * @variation 2
                         */
    
                        /**
                         * Callback as used by {@link google.cloud.binaryauthorization.v1beta1.BinauthzManagementServiceV1Beta1|getAttestor}.
                         * @memberof google.cloud.binaryauthorization.v1beta1.BinauthzManagementServiceV1Beta1
                         * @typedef GetAttestorCallback
                         * @type {function}
                         * @param {Error|null} error Error, if any
                         * @param {google.cloud.binaryauthorization.v1beta1.Attestor} [response] Attestor
                         */
    
                        /**
                         * Calls GetAttestor.
                         * @function getAttestor
                         * @memberof google.cloud.binaryauthorization.v1beta1.BinauthzManagementServiceV1Beta1
                         * @instance
                         * @param {google.cloud.binaryauthorization.v1beta1.IGetAttestorRequest} request GetAttestorRequest message or plain object
                         * @param {google.cloud.binaryauthorization.v1beta1.BinauthzManagementServiceV1Beta1.GetAttestorCallback} callback Node-style callback called with the error, if any, and Attestor
                         * @returns {undefined}
                         * @variation 1
                         */
                        Object.defineProperty(BinauthzManagementServiceV1Beta1.prototype.getAttestor = function getAttestor(request, callback) {
                            return this.rpcCall(getAttestor, $root.google.cloud.binaryauthorization.v1beta1.GetAttestorRequest, $root.google.cloud.binaryauthorization.v1beta1.Attestor, request, callback);
                        }, "name", { value: "GetAttestor" });
    
                        /**
                         * Calls GetAttestor.
                         * @function getAttestor
                         * @memberof google.cloud.binaryauthorization.v1beta1.BinauthzManagementServiceV1Beta1
                         * @instance
                         * @param {google.cloud.binaryauthorization.v1beta1.IGetAttestorRequest} request GetAttestorRequest message or plain object
                         * @returns {Promise<google.cloud.binaryauthorization.v1beta1.Attestor>} Promise
                         * @variation 2
                         */
    
                        /**
                         * Callback as used by {@link google.cloud.binaryauthorization.v1beta1.BinauthzManagementServiceV1Beta1|updateAttestor}.
                         * @memberof google.cloud.binaryauthorization.v1beta1.BinauthzManagementServiceV1Beta1
                         * @typedef UpdateAttestorCallback
                         * @type {function}
                         * @param {Error|null} error Error, if any
                         * @param {google.cloud.binaryauthorization.v1beta1.Attestor} [response] Attestor
                         */
    
                        /**
                         * Calls UpdateAttestor.
                         * @function updateAttestor
                         * @memberof google.cloud.binaryauthorization.v1beta1.BinauthzManagementServiceV1Beta1
                         * @instance
                         * @param {google.cloud.binaryauthorization.v1beta1.IUpdateAttestorRequest} request UpdateAttestorRequest message or plain object
                         * @param {google.cloud.binaryauthorization.v1beta1.BinauthzManagementServiceV1Beta1.UpdateAttestorCallback} callback Node-style callback called with the error, if any, and Attestor
                         * @returns {undefined}
                         * @variation 1
                         */
                        Object.defineProperty(BinauthzManagementServiceV1Beta1.prototype.updateAttestor = function updateAttestor(request, callback) {
                            return this.rpcCall(updateAttestor, $root.google.cloud.binaryauthorization.v1beta1.UpdateAttestorRequest, $root.google.cloud.binaryauthorization.v1beta1.Attestor, request, callback);
                        }, "name", { value: "UpdateAttestor" });
    
                        /**
                         * Calls UpdateAttestor.
                         * @function updateAttestor
                         * @memberof google.cloud.binaryauthorization.v1beta1.BinauthzManagementServiceV1Beta1
                         * @instance
                         * @param {google.cloud.binaryauthorization.v1beta1.IUpdateAttestorRequest} request UpdateAttestorRequest message or plain object
                         * @returns {Promise<google.cloud.binaryauthorization.v1beta1.Attestor>} Promise
                         * @variation 2
                         */
    
                        /**
                         * Callback as used by {@link google.cloud.binaryauthorization.v1beta1.BinauthzManagementServiceV1Beta1|listAttestors}.
                         * @memberof google.cloud.binaryauthorization.v1beta1.BinauthzManagementServiceV1Beta1
                         * @typedef ListAttestorsCallback
                         * @type {function}
                         * @param {Error|null} error Error, if any
                         * @param {google.cloud.binaryauthorization.v1beta1.ListAttestorsResponse} [response] ListAttestorsResponse
                         */
    
                        /**
                         * Calls ListAttestors.
                         * @function listAttestors
                         * @memberof google.cloud.binaryauthorization.v1beta1.BinauthzManagementServiceV1Beta1
                         * @instance
                         * @param {google.cloud.binaryauthorization.v1beta1.IListAttestorsRequest} request ListAttestorsRequest message or plain object
                         * @param {google.cloud.binaryauthorization.v1beta1.BinauthzManagementServiceV1Beta1.ListAttestorsCallback} callback Node-style callback called with the error, if any, and ListAttestorsResponse
                         * @returns {undefined}
                         * @variation 1
                         */
                        Object.defineProperty(BinauthzManagementServiceV1Beta1.prototype.listAttestors = function listAttestors(request, callback) {
                            return this.rpcCall(listAttestors, $root.google.cloud.binaryauthorization.v1beta1.ListAttestorsRequest, $root.google.cloud.binaryauthorization.v1beta1.ListAttestorsResponse, request, callback);
                        }, "name", { value: "ListAttestors" });
    
                        /**
                         * Calls ListAttestors.
                         * @function listAttestors
                         * @memberof google.cloud.binaryauthorization.v1beta1.BinauthzManagementServiceV1Beta1
                         * @instance
                         * @param {google.cloud.binaryauthorization.v1beta1.IListAttestorsRequest} request ListAttestorsRequest message or plain object
                         * @returns {Promise<google.cloud.binaryauthorization.v1beta1.ListAttestorsResponse>} Promise
                         * @variation 2
                         */
    
                        /**
                         * Callback as used by {@link google.cloud.binaryauthorization.v1beta1.BinauthzManagementServiceV1Beta1|deleteAttestor}.
                         * @memberof google.cloud.binaryauthorization.v1beta1.BinauthzManagementServiceV1Beta1
                         * @typedef DeleteAttestorCallback
                         * @type {function}
                         * @param {Error|null} error Error, if any
                         * @param {google.protobuf.Empty} [response] Empty
                         */
    
                        /**
                         * Calls DeleteAttestor.
                         * @function deleteAttestor
                         * @memberof google.cloud.binaryauthorization.v1beta1.BinauthzManagementServiceV1Beta1
                         * @instance
                         * @param {google.cloud.binaryauthorization.v1beta1.IDeleteAttestorRequest} request DeleteAttestorRequest message or plain object
                         * @param {google.cloud.binaryauthorization.v1beta1.BinauthzManagementServiceV1Beta1.DeleteAttestorCallback} callback Node-style callback called with the error, if any, and Empty
                         * @returns {undefined}
                         * @variation 1
                         */
                        Object.defineProperty(BinauthzManagementServiceV1Beta1.prototype.deleteAttestor = function deleteAttestor(request, callback) {
                            return this.rpcCall(deleteAttestor, $root.google.cloud.binaryauthorization.v1beta1.DeleteAttestorRequest, $root.google.protobuf.Empty, request, callback);
                        }, "name", { value: "DeleteAttestor" });
    
                        /**
                         * Calls DeleteAttestor.
                         * @function deleteAttestor
                         * @memberof google.cloud.binaryauthorization.v1beta1.BinauthzManagementServiceV1Beta1
                         * @instance
                         * @param {google.cloud.binaryauthorization.v1beta1.IDeleteAttestorRequest} request DeleteAttestorRequest message or plain object
                         * @returns {Promise<google.protobuf.Empty>} Promise
                         * @variation 2
                         */
    
                        return BinauthzManagementServiceV1Beta1;
                    })();
    
                    v1beta1.GetPolicyRequest = (function() {
    
                        /**
                         * Properties of a GetPolicyRequest.
                         * @memberof google.cloud.binaryauthorization.v1beta1
                         * @interface IGetPolicyRequest
                         * @property {string|null} [name] GetPolicyRequest name
                         */
    
                        /**
                         * Constructs a new GetPolicyRequest.
                         * @memberof google.cloud.binaryauthorization.v1beta1
                         * @classdesc Represents a GetPolicyRequest.
                         * @implements IGetPolicyRequest
                         * @constructor
                         * @param {google.cloud.binaryauthorization.v1beta1.IGetPolicyRequest=} [properties] Properties to set
                         */
                        function GetPolicyRequest(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * GetPolicyRequest name.
                         * @member {string} name
                         * @memberof google.cloud.binaryauthorization.v1beta1.GetPolicyRequest
                         * @instance
                         */
                        GetPolicyRequest.prototype.name = "";
    
                        /**
                         * Creates a new GetPolicyRequest instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.binaryauthorization.v1beta1.GetPolicyRequest
                         * @static
                         * @param {google.cloud.binaryauthorization.v1beta1.IGetPolicyRequest=} [properties] Properties to set
                         * @returns {google.cloud.binaryauthorization.v1beta1.GetPolicyRequest} GetPolicyRequest instance
                         */
                        GetPolicyRequest.create = function create(properties) {
                            return new GetPolicyRequest(properties);
                        };
    
                        /**
                         * Encodes the specified GetPolicyRequest message. Does not implicitly {@link google.cloud.binaryauthorization.v1beta1.GetPolicyRequest.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.binaryauthorization.v1beta1.GetPolicyRequest
                         * @static
                         * @param {google.cloud.binaryauthorization.v1beta1.IGetPolicyRequest} message GetPolicyRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        GetPolicyRequest.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified GetPolicyRequest message, length delimited. Does not implicitly {@link google.cloud.binaryauthorization.v1beta1.GetPolicyRequest.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.binaryauthorization.v1beta1.GetPolicyRequest
                         * @static
                         * @param {google.cloud.binaryauthorization.v1beta1.IGetPolicyRequest} message GetPolicyRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        GetPolicyRequest.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a GetPolicyRequest message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.binaryauthorization.v1beta1.GetPolicyRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.binaryauthorization.v1beta1.GetPolicyRequest} GetPolicyRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        GetPolicyRequest.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.binaryauthorization.v1beta1.GetPolicyRequest();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.name = reader.string();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a GetPolicyRequest message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.binaryauthorization.v1beta1.GetPolicyRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.binaryauthorization.v1beta1.GetPolicyRequest} GetPolicyRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        GetPolicyRequest.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a GetPolicyRequest message.
                         * @function verify
                         * @memberof google.cloud.binaryauthorization.v1beta1.GetPolicyRequest
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        GetPolicyRequest.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.name != null && message.hasOwnProperty("name"))
                                if (!$util.isString(message.name))
                                    return "name: string expected";
                            return null;
                        };
    
                        /**
                         * Creates a GetPolicyRequest message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.binaryauthorization.v1beta1.GetPolicyRequest
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.binaryauthorization.v1beta1.GetPolicyRequest} GetPolicyRequest
                         */
                        GetPolicyRequest.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.binaryauthorization.v1beta1.GetPolicyRequest)
                                return object;
                            var message = new $root.google.cloud.binaryauthorization.v1beta1.GetPolicyRequest();
                            if (object.name != null)
                                message.name = String(object.name);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a GetPolicyRequest message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.binaryauthorization.v1beta1.GetPolicyRequest
                         * @static
                         * @param {google.cloud.binaryauthorization.v1beta1.GetPolicyRequest} message GetPolicyRequest
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        GetPolicyRequest.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults)
                                object.name = "";
                            if (message.name != null && message.hasOwnProperty("name"))
                                object.name = message.name;
                            return object;
                        };
    
                        /**
                         * Converts this GetPolicyRequest to JSON.
                         * @function toJSON
                         * @memberof google.cloud.binaryauthorization.v1beta1.GetPolicyRequest
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        GetPolicyRequest.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for GetPolicyRequest
                         * @function getTypeUrl
                         * @memberof google.cloud.binaryauthorization.v1beta1.GetPolicyRequest
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        GetPolicyRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.binaryauthorization.v1beta1.GetPolicyRequest";
                        };
    
                        return GetPolicyRequest;
                    })();
    
                    v1beta1.SystemPolicyV1Beta1 = (function() {
    
                        /**
                         * Constructs a new SystemPolicyV1Beta1 service.
                         * @memberof google.cloud.binaryauthorization.v1beta1
                         * @classdesc Represents a SystemPolicyV1Beta1
                         * @extends $protobuf.rpc.Service
                         * @constructor
                         * @param {$protobuf.RPCImpl} rpcImpl RPC implementation
                         * @param {boolean} [requestDelimited=false] Whether requests are length-delimited
                         * @param {boolean} [responseDelimited=false] Whether responses are length-delimited
                         */
                        function SystemPolicyV1Beta1(rpcImpl, requestDelimited, responseDelimited) {
                            $protobuf.rpc.Service.call(this, rpcImpl, requestDelimited, responseDelimited);
                        }
    
                        (SystemPolicyV1Beta1.prototype = Object.create($protobuf.rpc.Service.prototype)).constructor = SystemPolicyV1Beta1;
    
                        /**
                         * Creates new SystemPolicyV1Beta1 service using the specified rpc implementation.
                         * @function create
                         * @memberof google.cloud.binaryauthorization.v1beta1.SystemPolicyV1Beta1
                         * @static
                         * @param {$protobuf.RPCImpl} rpcImpl RPC implementation
                         * @param {boolean} [requestDelimited=false] Whether requests are length-delimited
                         * @param {boolean} [responseDelimited=false] Whether responses are length-delimited
                         * @returns {SystemPolicyV1Beta1} RPC service. Useful where requests and/or responses are streamed.
                         */
                        SystemPolicyV1Beta1.create = function create(rpcImpl, requestDelimited, responseDelimited) {
                            return new this(rpcImpl, requestDelimited, responseDelimited);
                        };
    
                        /**
                         * Callback as used by {@link google.cloud.binaryauthorization.v1beta1.SystemPolicyV1Beta1|getSystemPolicy}.
                         * @memberof google.cloud.binaryauthorization.v1beta1.SystemPolicyV1Beta1
                         * @typedef GetSystemPolicyCallback
                         * @type {function}
                         * @param {Error|null} error Error, if any
                         * @param {google.cloud.binaryauthorization.v1beta1.Policy} [response] Policy
                         */
    
                        /**
                         * Calls GetSystemPolicy.
                         * @function getSystemPolicy
                         * @memberof google.cloud.binaryauthorization.v1beta1.SystemPolicyV1Beta1
                         * @instance
                         * @param {google.cloud.binaryauthorization.v1beta1.IGetSystemPolicyRequest} request GetSystemPolicyRequest message or plain object
                         * @param {google.cloud.binaryauthorization.v1beta1.SystemPolicyV1Beta1.GetSystemPolicyCallback} callback Node-style callback called with the error, if any, and Policy
                         * @returns {undefined}
                         * @variation 1
                         */
                        Object.defineProperty(SystemPolicyV1Beta1.prototype.getSystemPolicy = function getSystemPolicy(request, callback) {
                            return this.rpcCall(getSystemPolicy, $root.google.cloud.binaryauthorization.v1beta1.GetSystemPolicyRequest, $root.google.cloud.binaryauthorization.v1beta1.Policy, request, callback);
                        }, "name", { value: "GetSystemPolicy" });
    
                        /**
                         * Calls GetSystemPolicy.
                         * @function getSystemPolicy
                         * @memberof google.cloud.binaryauthorization.v1beta1.SystemPolicyV1Beta1
                         * @instance
                         * @param {google.cloud.binaryauthorization.v1beta1.IGetSystemPolicyRequest} request GetSystemPolicyRequest message or plain object
                         * @returns {Promise<google.cloud.binaryauthorization.v1beta1.Policy>} Promise
                         * @variation 2
                         */
    
                        return SystemPolicyV1Beta1;
                    })();
    
                    v1beta1.UpdatePolicyRequest = (function() {
    
                        /**
                         * Properties of an UpdatePolicyRequest.
                         * @memberof google.cloud.binaryauthorization.v1beta1
                         * @interface IUpdatePolicyRequest
                         * @property {google.cloud.binaryauthorization.v1beta1.IPolicy|null} [policy] UpdatePolicyRequest policy
                         */
    
                        /**
                         * Constructs a new UpdatePolicyRequest.
                         * @memberof google.cloud.binaryauthorization.v1beta1
                         * @classdesc Represents an UpdatePolicyRequest.
                         * @implements IUpdatePolicyRequest
                         * @constructor
                         * @param {google.cloud.binaryauthorization.v1beta1.IUpdatePolicyRequest=} [properties] Properties to set
                         */
                        function UpdatePolicyRequest(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * UpdatePolicyRequest policy.
                         * @member {google.cloud.binaryauthorization.v1beta1.IPolicy|null|undefined} policy
                         * @memberof google.cloud.binaryauthorization.v1beta1.UpdatePolicyRequest
                         * @instance
                         */
                        UpdatePolicyRequest.prototype.policy = null;
    
                        /**
                         * Creates a new UpdatePolicyRequest instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.binaryauthorization.v1beta1.UpdatePolicyRequest
                         * @static
                         * @param {google.cloud.binaryauthorization.v1beta1.IUpdatePolicyRequest=} [properties] Properties to set
                         * @returns {google.cloud.binaryauthorization.v1beta1.UpdatePolicyRequest} UpdatePolicyRequest instance
                         */
                        UpdatePolicyRequest.create = function create(properties) {
                            return new UpdatePolicyRequest(properties);
                        };
    
                        /**
                         * Encodes the specified UpdatePolicyRequest message. Does not implicitly {@link google.cloud.binaryauthorization.v1beta1.UpdatePolicyRequest.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.binaryauthorization.v1beta1.UpdatePolicyRequest
                         * @static
                         * @param {google.cloud.binaryauthorization.v1beta1.IUpdatePolicyRequest} message UpdatePolicyRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        UpdatePolicyRequest.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.policy != null && Object.hasOwnProperty.call(message, "policy"))
                                $root.google.cloud.binaryauthorization.v1beta1.Policy.encode(message.policy, writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                            return writer;
                        };
    
                        /**
                         * Encodes the specified UpdatePolicyRequest message, length delimited. Does not implicitly {@link google.cloud.binaryauthorization.v1beta1.UpdatePolicyRequest.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.binaryauthorization.v1beta1.UpdatePolicyRequest
                         * @static
                         * @param {google.cloud.binaryauthorization.v1beta1.IUpdatePolicyRequest} message UpdatePolicyRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        UpdatePolicyRequest.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes an UpdatePolicyRequest message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.binaryauthorization.v1beta1.UpdatePolicyRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.binaryauthorization.v1beta1.UpdatePolicyRequest} UpdatePolicyRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        UpdatePolicyRequest.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.binaryauthorization.v1beta1.UpdatePolicyRequest();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.policy = $root.google.cloud.binaryauthorization.v1beta1.Policy.decode(reader, reader.uint32());
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes an UpdatePolicyRequest message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.binaryauthorization.v1beta1.UpdatePolicyRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.binaryauthorization.v1beta1.UpdatePolicyRequest} UpdatePolicyRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        UpdatePolicyRequest.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies an UpdatePolicyRequest message.
                         * @function verify
                         * @memberof google.cloud.binaryauthorization.v1beta1.UpdatePolicyRequest
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        UpdatePolicyRequest.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.policy != null && message.hasOwnProperty("policy")) {
                                var error = $root.google.cloud.binaryauthorization.v1beta1.Policy.verify(message.policy);
                                if (error)
                                    return "policy." + error;
                            }
                            return null;
                        };
    
                        /**
                         * Creates an UpdatePolicyRequest message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.binaryauthorization.v1beta1.UpdatePolicyRequest
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.binaryauthorization.v1beta1.UpdatePolicyRequest} UpdatePolicyRequest
                         */
                        UpdatePolicyRequest.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.binaryauthorization.v1beta1.UpdatePolicyRequest)
                                return object;
                            var message = new $root.google.cloud.binaryauthorization.v1beta1.UpdatePolicyRequest();
                            if (object.policy != null) {
                                if (typeof object.policy !== "object")
                                    throw TypeError(".google.cloud.binaryauthorization.v1beta1.UpdatePolicyRequest.policy: object expected");
                                message.policy = $root.google.cloud.binaryauthorization.v1beta1.Policy.fromObject(object.policy);
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from an UpdatePolicyRequest message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.binaryauthorization.v1beta1.UpdatePolicyRequest
                         * @static
                         * @param {google.cloud.binaryauthorization.v1beta1.UpdatePolicyRequest} message UpdatePolicyRequest
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        UpdatePolicyRequest.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults)
                                object.policy = null;
                            if (message.policy != null && message.hasOwnProperty("policy"))
                                object.policy = $root.google.cloud.binaryauthorization.v1beta1.Policy.toObject(message.policy, options);
                            return object;
                        };
    
                        /**
                         * Converts this UpdatePolicyRequest to JSON.
                         * @function toJSON
                         * @memberof google.cloud.binaryauthorization.v1beta1.UpdatePolicyRequest
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        UpdatePolicyRequest.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for UpdatePolicyRequest
                         * @function getTypeUrl
                         * @memberof google.cloud.binaryauthorization.v1beta1.UpdatePolicyRequest
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        UpdatePolicyRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.binaryauthorization.v1beta1.UpdatePolicyRequest";
                        };
    
                        return UpdatePolicyRequest;
                    })();
    
                    v1beta1.CreateAttestorRequest = (function() {
    
                        /**
                         * Properties of a CreateAttestorRequest.
                         * @memberof google.cloud.binaryauthorization.v1beta1
                         * @interface ICreateAttestorRequest
                         * @property {string|null} [parent] CreateAttestorRequest parent
                         * @property {string|null} [attestorId] CreateAttestorRequest attestorId
                         * @property {google.cloud.binaryauthorization.v1beta1.IAttestor|null} [attestor] CreateAttestorRequest attestor
                         */
    
                        /**
                         * Constructs a new CreateAttestorRequest.
                         * @memberof google.cloud.binaryauthorization.v1beta1
                         * @classdesc Represents a CreateAttestorRequest.
                         * @implements ICreateAttestorRequest
                         * @constructor
                         * @param {google.cloud.binaryauthorization.v1beta1.ICreateAttestorRequest=} [properties] Properties to set
                         */
                        function CreateAttestorRequest(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * CreateAttestorRequest parent.
                         * @member {string} parent
                         * @memberof google.cloud.binaryauthorization.v1beta1.CreateAttestorRequest
                         * @instance
                         */
                        CreateAttestorRequest.prototype.parent = "";
    
                        /**
                         * CreateAttestorRequest attestorId.
                         * @member {string} attestorId
                         * @memberof google.cloud.binaryauthorization.v1beta1.CreateAttestorRequest
                         * @instance
                         */
                        CreateAttestorRequest.prototype.attestorId = "";
    
                        /**
                         * CreateAttestorRequest attestor.
                         * @member {google.cloud.binaryauthorization.v1beta1.IAttestor|null|undefined} attestor
                         * @memberof google.cloud.binaryauthorization.v1beta1.CreateAttestorRequest
                         * @instance
                         */
                        CreateAttestorRequest.prototype.attestor = null;
    
                        /**
                         * Creates a new CreateAttestorRequest instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.binaryauthorization.v1beta1.CreateAttestorRequest
                         * @static
                         * @param {google.cloud.binaryauthorization.v1beta1.ICreateAttestorRequest=} [properties] Properties to set
                         * @returns {google.cloud.binaryauthorization.v1beta1.CreateAttestorRequest} CreateAttestorRequest instance
                         */
                        CreateAttestorRequest.create = function create(properties) {
                            return new CreateAttestorRequest(properties);
                        };
    
                        /**
                         * Encodes the specified CreateAttestorRequest message. Does not implicitly {@link google.cloud.binaryauthorization.v1beta1.CreateAttestorRequest.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.binaryauthorization.v1beta1.CreateAttestorRequest
                         * @static
                         * @param {google.cloud.binaryauthorization.v1beta1.ICreateAttestorRequest} message CreateAttestorRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        CreateAttestorRequest.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.parent != null && Object.hasOwnProperty.call(message, "parent"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.parent);
                            if (message.attestorId != null && Object.hasOwnProperty.call(message, "attestorId"))
                                writer.uint32(/* id 2, wireType 2 =*/18).string(message.attestorId);
                            if (message.attestor != null && Object.hasOwnProperty.call(message, "attestor"))
                                $root.google.cloud.binaryauthorization.v1beta1.Attestor.encode(message.attestor, writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();
                            return writer;
                        };
    
                        /**
                         * Encodes the specified CreateAttestorRequest message, length delimited. Does not implicitly {@link google.cloud.binaryauthorization.v1beta1.CreateAttestorRequest.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.binaryauthorization.v1beta1.CreateAttestorRequest
                         * @static
                         * @param {google.cloud.binaryauthorization.v1beta1.ICreateAttestorRequest} message CreateAttestorRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        CreateAttestorRequest.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a CreateAttestorRequest message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.binaryauthorization.v1beta1.CreateAttestorRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.binaryauthorization.v1beta1.CreateAttestorRequest} CreateAttestorRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        CreateAttestorRequest.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.binaryauthorization.v1beta1.CreateAttestorRequest();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.parent = reader.string();
                                        break;
                                    }
                                case 2: {
                                        message.attestorId = reader.string();
                                        break;
                                    }
                                case 3: {
                                        message.attestor = $root.google.cloud.binaryauthorization.v1beta1.Attestor.decode(reader, reader.uint32());
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a CreateAttestorRequest message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.binaryauthorization.v1beta1.CreateAttestorRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.binaryauthorization.v1beta1.CreateAttestorRequest} CreateAttestorRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        CreateAttestorRequest.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a CreateAttestorRequest message.
                         * @function verify
                         * @memberof google.cloud.binaryauthorization.v1beta1.CreateAttestorRequest
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        CreateAttestorRequest.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.parent != null && message.hasOwnProperty("parent"))
                                if (!$util.isString(message.parent))
                                    return "parent: string expected";
                            if (message.attestorId != null && message.hasOwnProperty("attestorId"))
                                if (!$util.isString(message.attestorId))
                                    return "attestorId: string expected";
                            if (message.attestor != null && message.hasOwnProperty("attestor")) {
                                var error = $root.google.cloud.binaryauthorization.v1beta1.Attestor.verify(message.attestor);
                                if (error)
                                    return "attestor." + error;
                            }
                            return null;
                        };
    
                        /**
                         * Creates a CreateAttestorRequest message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.binaryauthorization.v1beta1.CreateAttestorRequest
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.binaryauthorization.v1beta1.CreateAttestorRequest} CreateAttestorRequest
                         */
                        CreateAttestorRequest.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.binaryauthorization.v1beta1.CreateAttestorRequest)
                                return object;
                            var message = new $root.google.cloud.binaryauthorization.v1beta1.CreateAttestorRequest();
                            if (object.parent != null)
                                message.parent = String(object.parent);
                            if (object.attestorId != null)
                                message.attestorId = String(object.attestorId);
                            if (object.attestor != null) {
                                if (typeof object.attestor !== "object")
                                    throw TypeError(".google.cloud.binaryauthorization.v1beta1.CreateAttestorRequest.attestor: object expected");
                                message.attestor = $root.google.cloud.binaryauthorization.v1beta1.Attestor.fromObject(object.attestor);
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a CreateAttestorRequest message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.binaryauthorization.v1beta1.CreateAttestorRequest
                         * @static
                         * @param {google.cloud.binaryauthorization.v1beta1.CreateAttestorRequest} message CreateAttestorRequest
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        CreateAttestorRequest.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.parent = "";
                                object.attestorId = "";
                                object.attestor = null;
                            }
                            if (message.parent != null && message.hasOwnProperty("parent"))
                                object.parent = message.parent;
                            if (message.attestorId != null && message.hasOwnProperty("attestorId"))
                                object.attestorId = message.attestorId;
                            if (message.attestor != null && message.hasOwnProperty("attestor"))
                                object.attestor = $root.google.cloud.binaryauthorization.v1beta1.Attestor.toObject(message.attestor, options);
                            return object;
                        };
    
                        /**
                         * Converts this CreateAttestorRequest to JSON.
                         * @function toJSON
                         * @memberof google.cloud.binaryauthorization.v1beta1.CreateAttestorRequest
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        CreateAttestorRequest.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for CreateAttestorRequest
                         * @function getTypeUrl
                         * @memberof google.cloud.binaryauthorization.v1beta1.CreateAttestorRequest
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        CreateAttestorRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.binaryauthorization.v1beta1.CreateAttestorRequest";
                        };
    
                        return CreateAttestorRequest;
                    })();
    
                    v1beta1.GetAttestorRequest = (function() {
    
                        /**
                         * Properties of a GetAttestorRequest.
                         * @memberof google.cloud.binaryauthorization.v1beta1
                         * @interface IGetAttestorRequest
                         * @property {string|null} [name] GetAttestorRequest name
                         */
    
                        /**
                         * Constructs a new GetAttestorRequest.
                         * @memberof google.cloud.binaryauthorization.v1beta1
                         * @classdesc Represents a GetAttestorRequest.
                         * @implements IGetAttestorRequest
                         * @constructor
                         * @param {google.cloud.binaryauthorization.v1beta1.IGetAttestorRequest=} [properties] Properties to set
                         */
                        function GetAttestorRequest(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * GetAttestorRequest name.
                         * @member {string} name
                         * @memberof google.cloud.binaryauthorization.v1beta1.GetAttestorRequest
                         * @instance
                         */
                        GetAttestorRequest.prototype.name = "";
    
                        /**
                         * Creates a new GetAttestorRequest instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.binaryauthorization.v1beta1.GetAttestorRequest
                         * @static
                         * @param {google.cloud.binaryauthorization.v1beta1.IGetAttestorRequest=} [properties] Properties to set
                         * @returns {google.cloud.binaryauthorization.v1beta1.GetAttestorRequest} GetAttestorRequest instance
                         */
                        GetAttestorRequest.create = function create(properties) {
                            return new GetAttestorRequest(properties);
                        };
    
                        /**
                         * Encodes the specified GetAttestorRequest message. Does not implicitly {@link google.cloud.binaryauthorization.v1beta1.GetAttestorRequest.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.binaryauthorization.v1beta1.GetAttestorRequest
                         * @static
                         * @param {google.cloud.binaryauthorization.v1beta1.IGetAttestorRequest} message GetAttestorRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        GetAttestorRequest.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified GetAttestorRequest message, length delimited. Does not implicitly {@link google.cloud.binaryauthorization.v1beta1.GetAttestorRequest.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.binaryauthorization.v1beta1.GetAttestorRequest
                         * @static
                         * @param {google.cloud.binaryauthorization.v1beta1.IGetAttestorRequest} message GetAttestorRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        GetAttestorRequest.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a GetAttestorRequest message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.binaryauthorization.v1beta1.GetAttestorRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.binaryauthorization.v1beta1.GetAttestorRequest} GetAttestorRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        GetAttestorRequest.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.binaryauthorization.v1beta1.GetAttestorRequest();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.name = reader.string();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a GetAttestorRequest message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.binaryauthorization.v1beta1.GetAttestorRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.binaryauthorization.v1beta1.GetAttestorRequest} GetAttestorRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        GetAttestorRequest.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a GetAttestorRequest message.
                         * @function verify
                         * @memberof google.cloud.binaryauthorization.v1beta1.GetAttestorRequest
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        GetAttestorRequest.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.name != null && message.hasOwnProperty("name"))
                                if (!$util.isString(message.name))
                                    return "name: string expected";
                            return null;
                        };
    
                        /**
                         * Creates a GetAttestorRequest message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.binaryauthorization.v1beta1.GetAttestorRequest
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.binaryauthorization.v1beta1.GetAttestorRequest} GetAttestorRequest
                         */
                        GetAttestorRequest.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.binaryauthorization.v1beta1.GetAttestorRequest)
                                return object;
                            var message = new $root.google.cloud.binaryauthorization.v1beta1.GetAttestorRequest();
                            if (object.name != null)
                                message.name = String(object.name);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a GetAttestorRequest message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.binaryauthorization.v1beta1.GetAttestorRequest
                         * @static
                         * @param {google.cloud.binaryauthorization.v1beta1.GetAttestorRequest} message GetAttestorRequest
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        GetAttestorRequest.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults)
                                object.name = "";
                            if (message.name != null && message.hasOwnProperty("name"))
                                object.name = message.name;
                            return object;
                        };
    
                        /**
                         * Converts this GetAttestorRequest to JSON.
                         * @function toJSON
                         * @memberof google.cloud.binaryauthorization.v1beta1.GetAttestorRequest
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        GetAttestorRequest.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for GetAttestorRequest
                         * @function getTypeUrl
                         * @memberof google.cloud.binaryauthorization.v1beta1.GetAttestorRequest
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        GetAttestorRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.binaryauthorization.v1beta1.GetAttestorRequest";
                        };
    
                        return GetAttestorRequest;
                    })();
    
                    v1beta1.UpdateAttestorRequest = (function() {
    
                        /**
                         * Properties of an UpdateAttestorRequest.
                         * @memberof google.cloud.binaryauthorization.v1beta1
                         * @interface IUpdateAttestorRequest
                         * @property {google.cloud.binaryauthorization.v1beta1.IAttestor|null} [attestor] UpdateAttestorRequest attestor
                         */
    
                        /**
                         * Constructs a new UpdateAttestorRequest.
                         * @memberof google.cloud.binaryauthorization.v1beta1
                         * @classdesc Represents an UpdateAttestorRequest.
                         * @implements IUpdateAttestorRequest
                         * @constructor
                         * @param {google.cloud.binaryauthorization.v1beta1.IUpdateAttestorRequest=} [properties] Properties to set
                         */
                        function UpdateAttestorRequest(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * UpdateAttestorRequest attestor.
                         * @member {google.cloud.binaryauthorization.v1beta1.IAttestor|null|undefined} attestor
                         * @memberof google.cloud.binaryauthorization.v1beta1.UpdateAttestorRequest
                         * @instance
                         */
                        UpdateAttestorRequest.prototype.attestor = null;
    
                        /**
                         * Creates a new UpdateAttestorRequest instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.binaryauthorization.v1beta1.UpdateAttestorRequest
                         * @static
                         * @param {google.cloud.binaryauthorization.v1beta1.IUpdateAttestorRequest=} [properties] Properties to set
                         * @returns {google.cloud.binaryauthorization.v1beta1.UpdateAttestorRequest} UpdateAttestorRequest instance
                         */
                        UpdateAttestorRequest.create = function create(properties) {
                            return new UpdateAttestorRequest(properties);
                        };
    
                        /**
                         * Encodes the specified UpdateAttestorRequest message. Does not implicitly {@link google.cloud.binaryauthorization.v1beta1.UpdateAttestorRequest.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.binaryauthorization.v1beta1.UpdateAttestorRequest
                         * @static
                         * @param {google.cloud.binaryauthorization.v1beta1.IUpdateAttestorRequest} message UpdateAttestorRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        UpdateAttestorRequest.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.attestor != null && Object.hasOwnProperty.call(message, "attestor"))
                                $root.google.cloud.binaryauthorization.v1beta1.Attestor.encode(message.attestor, writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                            return writer;
                        };
    
                        /**
                         * Encodes the specified UpdateAttestorRequest message, length delimited. Does not implicitly {@link google.cloud.binaryauthorization.v1beta1.UpdateAttestorRequest.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.binaryauthorization.v1beta1.UpdateAttestorRequest
                         * @static
                         * @param {google.cloud.binaryauthorization.v1beta1.IUpdateAttestorRequest} message UpdateAttestorRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        UpdateAttestorRequest.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes an UpdateAttestorRequest message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.binaryauthorization.v1beta1.UpdateAttestorRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.binaryauthorization.v1beta1.UpdateAttestorRequest} UpdateAttestorRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        UpdateAttestorRequest.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.binaryauthorization.v1beta1.UpdateAttestorRequest();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.attestor = $root.google.cloud.binaryauthorization.v1beta1.Attestor.decode(reader, reader.uint32());
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes an UpdateAttestorRequest message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.binaryauthorization.v1beta1.UpdateAttestorRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.binaryauthorization.v1beta1.UpdateAttestorRequest} UpdateAttestorRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        UpdateAttestorRequest.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies an UpdateAttestorRequest message.
                         * @function verify
                         * @memberof google.cloud.binaryauthorization.v1beta1.UpdateAttestorRequest
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        UpdateAttestorRequest.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.attestor != null && message.hasOwnProperty("attestor")) {
                                var error = $root.google.cloud.binaryauthorization.v1beta1.Attestor.verify(message.attestor);
                                if (error)
                                    return "attestor." + error;
                            }
                            return null;
                        };
    
                        /**
                         * Creates an UpdateAttestorRequest message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.binaryauthorization.v1beta1.UpdateAttestorRequest
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.binaryauthorization.v1beta1.UpdateAttestorRequest} UpdateAttestorRequest
                         */
                        UpdateAttestorRequest.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.binaryauthorization.v1beta1.UpdateAttestorRequest)
                                return object;
                            var message = new $root.google.cloud.binaryauthorization.v1beta1.UpdateAttestorRequest();
                            if (object.attestor != null) {
                                if (typeof object.attestor !== "object")
                                    throw TypeError(".google.cloud.binaryauthorization.v1beta1.UpdateAttestorRequest.attestor: object expected");
                                message.attestor = $root.google.cloud.binaryauthorization.v1beta1.Attestor.fromObject(object.attestor);
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from an UpdateAttestorRequest message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.binaryauthorization.v1beta1.UpdateAttestorRequest
                         * @static
                         * @param {google.cloud.binaryauthorization.v1beta1.UpdateAttestorRequest} message UpdateAttestorRequest
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        UpdateAttestorRequest.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults)
                                object.attestor = null;
                            if (message.attestor != null && message.hasOwnProperty("attestor"))
                                object.attestor = $root.google.cloud.binaryauthorization.v1beta1.Attestor.toObject(message.attestor, options);
                            return object;
                        };
    
                        /**
                         * Converts this UpdateAttestorRequest to JSON.
                         * @function toJSON
                         * @memberof google.cloud.binaryauthorization.v1beta1.UpdateAttestorRequest
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        UpdateAttestorRequest.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for UpdateAttestorRequest
                         * @function getTypeUrl
                         * @memberof google.cloud.binaryauthorization.v1beta1.UpdateAttestorRequest
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        UpdateAttestorRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.binaryauthorization.v1beta1.UpdateAttestorRequest";
                        };
    
                        return UpdateAttestorRequest;
                    })();
    
                    v1beta1.ListAttestorsRequest = (function() {
    
                        /**
                         * Properties of a ListAttestorsRequest.
                         * @memberof google.cloud.binaryauthorization.v1beta1
                         * @interface IListAttestorsRequest
                         * @property {string|null} [parent] ListAttestorsRequest parent
                         * @property {number|null} [pageSize] ListAttestorsRequest pageSize
                         * @property {string|null} [pageToken] ListAttestorsRequest pageToken
                         */
    
                        /**
                         * Constructs a new ListAttestorsRequest.
                         * @memberof google.cloud.binaryauthorization.v1beta1
                         * @classdesc Represents a ListAttestorsRequest.
                         * @implements IListAttestorsRequest
                         * @constructor
                         * @param {google.cloud.binaryauthorization.v1beta1.IListAttestorsRequest=} [properties] Properties to set
                         */
                        function ListAttestorsRequest(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * ListAttestorsRequest parent.
                         * @member {string} parent
                         * @memberof google.cloud.binaryauthorization.v1beta1.ListAttestorsRequest
                         * @instance
                         */
                        ListAttestorsRequest.prototype.parent = "";
    
                        /**
                         * ListAttestorsRequest pageSize.
                         * @member {number} pageSize
                         * @memberof google.cloud.binaryauthorization.v1beta1.ListAttestorsRequest
                         * @instance
                         */
                        ListAttestorsRequest.prototype.pageSize = 0;
    
                        /**
                         * ListAttestorsRequest pageToken.
                         * @member {string} pageToken
                         * @memberof google.cloud.binaryauthorization.v1beta1.ListAttestorsRequest
                         * @instance
                         */
                        ListAttestorsRequest.prototype.pageToken = "";
    
                        /**
                         * Creates a new ListAttestorsRequest instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.binaryauthorization.v1beta1.ListAttestorsRequest
                         * @static
                         * @param {google.cloud.binaryauthorization.v1beta1.IListAttestorsRequest=} [properties] Properties to set
                         * @returns {google.cloud.binaryauthorization.v1beta1.ListAttestorsRequest} ListAttestorsRequest instance
                         */
                        ListAttestorsRequest.create = function create(properties) {
                            return new ListAttestorsRequest(properties);
                        };
    
                        /**
                         * Encodes the specified ListAttestorsRequest message. Does not implicitly {@link google.cloud.binaryauthorization.v1beta1.ListAttestorsRequest.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.binaryauthorization.v1beta1.ListAttestorsRequest
                         * @static
                         * @param {google.cloud.binaryauthorization.v1beta1.IListAttestorsRequest} message ListAttestorsRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        ListAttestorsRequest.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.parent != null && Object.hasOwnProperty.call(message, "parent"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.parent);
                            if (message.pageSize != null && Object.hasOwnProperty.call(message, "pageSize"))
                                writer.uint32(/* id 2, wireType 0 =*/16).int32(message.pageSize);
                            if (message.pageToken != null && Object.hasOwnProperty.call(message, "pageToken"))
                                writer.uint32(/* id 3, wireType 2 =*/26).string(message.pageToken);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified ListAttestorsRequest message, length delimited. Does not implicitly {@link google.cloud.binaryauthorization.v1beta1.ListAttestorsRequest.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.binaryauthorization.v1beta1.ListAttestorsRequest
                         * @static
                         * @param {google.cloud.binaryauthorization.v1beta1.IListAttestorsRequest} message ListAttestorsRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        ListAttestorsRequest.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a ListAttestorsRequest message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.binaryauthorization.v1beta1.ListAttestorsRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.binaryauthorization.v1beta1.ListAttestorsRequest} ListAttestorsRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        ListAttestorsRequest.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.binaryauthorization.v1beta1.ListAttestorsRequest();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.parent = reader.string();
                                        break;
                                    }
                                case 2: {
                                        message.pageSize = reader.int32();
                                        break;
                                    }
                                case 3: {
                                        message.pageToken = reader.string();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a ListAttestorsRequest message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.binaryauthorization.v1beta1.ListAttestorsRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.binaryauthorization.v1beta1.ListAttestorsRequest} ListAttestorsRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        ListAttestorsRequest.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a ListAttestorsRequest message.
                         * @function verify
                         * @memberof google.cloud.binaryauthorization.v1beta1.ListAttestorsRequest
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        ListAttestorsRequest.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.parent != null && message.hasOwnProperty("parent"))
                                if (!$util.isString(message.parent))
                                    return "parent: string expected";
                            if (message.pageSize != null && message.hasOwnProperty("pageSize"))
                                if (!$util.isInteger(message.pageSize))
                                    return "pageSize: integer expected";
                            if (message.pageToken != null && message.hasOwnProperty("pageToken"))
                                if (!$util.isString(message.pageToken))
                                    return "pageToken: string expected";
                            return null;
                        };
    
                        /**
                         * Creates a ListAttestorsRequest message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.binaryauthorization.v1beta1.ListAttestorsRequest
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.binaryauthorization.v1beta1.ListAttestorsRequest} ListAttestorsRequest
                         */
                        ListAttestorsRequest.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.binaryauthorization.v1beta1.ListAttestorsRequest)
                                return object;
                            var message = new $root.google.cloud.binaryauthorization.v1beta1.ListAttestorsRequest();
                            if (object.parent != null)
                                message.parent = String(object.parent);
                            if (object.pageSize != null)
                                message.pageSize = object.pageSize | 0;
                            if (object.pageToken != null)
                                message.pageToken = String(object.pageToken);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a ListAttestorsRequest message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.binaryauthorization.v1beta1.ListAttestorsRequest
                         * @static
                         * @param {google.cloud.binaryauthorization.v1beta1.ListAttestorsRequest} message ListAttestorsRequest
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        ListAttestorsRequest.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.parent = "";
                                object.pageSize = 0;
                                object.pageToken = "";
                            }
                            if (message.parent != null && message.hasOwnProperty("parent"))
                                object.parent = message.parent;
                            if (message.pageSize != null && message.hasOwnProperty("pageSize"))
                                object.pageSize = message.pageSize;
                            if (message.pageToken != null && message.hasOwnProperty("pageToken"))
                                object.pageToken = message.pageToken;
                            return object;
                        };
    
                        /**
                         * Converts this ListAttestorsRequest to JSON.
                         * @function toJSON
                         * @memberof google.cloud.binaryauthorization.v1beta1.ListAttestorsRequest
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        ListAttestorsRequest.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for ListAttestorsRequest
                         * @function getTypeUrl
                         * @memberof google.cloud.binaryauthorization.v1beta1.ListAttestorsRequest
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        ListAttestorsRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.binaryauthorization.v1beta1.ListAttestorsRequest";
                        };
    
                        return ListAttestorsRequest;
                    })();
    
                    v1beta1.ListAttestorsResponse = (function() {
    
                        /**
                         * Properties of a ListAttestorsResponse.
                         * @memberof google.cloud.binaryauthorization.v1beta1
                         * @interface IListAttestorsResponse
                         * @property {Array.<google.cloud.binaryauthorization.v1beta1.IAttestor>|null} [attestors] ListAttestorsResponse attestors
                         * @property {string|null} [nextPageToken] ListAttestorsResponse nextPageToken
                         */
    
                        /**
                         * Constructs a new ListAttestorsResponse.
                         * @memberof google.cloud.binaryauthorization.v1beta1
                         * @classdesc Represents a ListAttestorsResponse.
                         * @implements IListAttestorsResponse
                         * @constructor
                         * @param {google.cloud.binaryauthorization.v1beta1.IListAttestorsResponse=} [properties] Properties to set
                         */
                        function ListAttestorsResponse(properties) {
                            this.attestors = [];
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * ListAttestorsResponse attestors.
                         * @member {Array.<google.cloud.binaryauthorization.v1beta1.IAttestor>} attestors
                         * @memberof google.cloud.binaryauthorization.v1beta1.ListAttestorsResponse
                         * @instance
                         */
                        ListAttestorsResponse.prototype.attestors = $util.emptyArray;
    
                        /**
                         * ListAttestorsResponse nextPageToken.
                         * @member {string} nextPageToken
                         * @memberof google.cloud.binaryauthorization.v1beta1.ListAttestorsResponse
                         * @instance
                         */
                        ListAttestorsResponse.prototype.nextPageToken = "";
    
                        /**
                         * Creates a new ListAttestorsResponse instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.binaryauthorization.v1beta1.ListAttestorsResponse
                         * @static
                         * @param {google.cloud.binaryauthorization.v1beta1.IListAttestorsResponse=} [properties] Properties to set
                         * @returns {google.cloud.binaryauthorization.v1beta1.ListAttestorsResponse} ListAttestorsResponse instance
                         */
                        ListAttestorsResponse.create = function create(properties) {
                            return new ListAttestorsResponse(properties);
                        };
    
                        /**
                         * Encodes the specified ListAttestorsResponse message. Does not implicitly {@link google.cloud.binaryauthorization.v1beta1.ListAttestorsResponse.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.binaryauthorization.v1beta1.ListAttestorsResponse
                         * @static
                         * @param {google.cloud.binaryauthorization.v1beta1.IListAttestorsResponse} message ListAttestorsResponse message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        ListAttestorsResponse.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.attestors != null && message.attestors.length)
                                for (var i = 0; i < message.attestors.length; ++i)
                                    $root.google.cloud.binaryauthorization.v1beta1.Attestor.encode(message.attestors[i], writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                            if (message.nextPageToken != null && Object.hasOwnProperty.call(message, "nextPageToken"))
                                writer.uint32(/* id 2, wireType 2 =*/18).string(message.nextPageToken);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified ListAttestorsResponse message, length delimited. Does not implicitly {@link google.cloud.binaryauthorization.v1beta1.ListAttestorsResponse.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.binaryauthorization.v1beta1.ListAttestorsResponse
                         * @static
                         * @param {google.cloud.binaryauthorization.v1beta1.IListAttestorsResponse} message ListAttestorsResponse message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        ListAttestorsResponse.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a ListAttestorsResponse message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.binaryauthorization.v1beta1.ListAttestorsResponse
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.binaryauthorization.v1beta1.ListAttestorsResponse} ListAttestorsResponse
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        ListAttestorsResponse.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.binaryauthorization.v1beta1.ListAttestorsResponse();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        if (!(message.attestors && message.attestors.length))
                                            message.attestors = [];
                                        message.attestors.push($root.google.cloud.binaryauthorization.v1beta1.Attestor.decode(reader, reader.uint32()));
                                        break;
                                    }
                                case 2: {
                                        message.nextPageToken = reader.string();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a ListAttestorsResponse message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.binaryauthorization.v1beta1.ListAttestorsResponse
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.binaryauthorization.v1beta1.ListAttestorsResponse} ListAttestorsResponse
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        ListAttestorsResponse.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a ListAttestorsResponse message.
                         * @function verify
                         * @memberof google.cloud.binaryauthorization.v1beta1.ListAttestorsResponse
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        ListAttestorsResponse.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.attestors != null && message.hasOwnProperty("attestors")) {
                                if (!Array.isArray(message.attestors))
                                    return "attestors: array expected";
                                for (var i = 0; i < message.attestors.length; ++i) {
                                    var error = $root.google.cloud.binaryauthorization.v1beta1.Attestor.verify(message.attestors[i]);
                                    if (error)
                                        return "attestors." + error;
                                }
                            }
                            if (message.nextPageToken != null && message.hasOwnProperty("nextPageToken"))
                                if (!$util.isString(message.nextPageToken))
                                    return "nextPageToken: string expected";
                            return null;
                        };
    
                        /**
                         * Creates a ListAttestorsResponse message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.binaryauthorization.v1beta1.ListAttestorsResponse
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.binaryauthorization.v1beta1.ListAttestorsResponse} ListAttestorsResponse
                         */
                        ListAttestorsResponse.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.binaryauthorization.v1beta1.ListAttestorsResponse)
                                return object;
                            var message = new $root.google.cloud.binaryauthorization.v1beta1.ListAttestorsResponse();
                            if (object.attestors) {
                                if (!Array.isArray(object.attestors))
                                    throw TypeError(".google.cloud.binaryauthorization.v1beta1.ListAttestorsResponse.attestors: array expected");
                                message.attestors = [];
                                for (var i = 0; i < object.attestors.length; ++i) {
                                    if (typeof object.attestors[i] !== "object")
                                        throw TypeError(".google.cloud.binaryauthorization.v1beta1.ListAttestorsResponse.attestors: object expected");
                                    message.attestors[i] = $root.google.cloud.binaryauthorization.v1beta1.Attestor.fromObject(object.attestors[i]);
                                }
                            }
                            if (object.nextPageToken != null)
                                message.nextPageToken = String(object.nextPageToken);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a ListAttestorsResponse message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.binaryauthorization.v1beta1.ListAttestorsResponse
                         * @static
                         * @param {google.cloud.binaryauthorization.v1beta1.ListAttestorsResponse} message ListAttestorsResponse
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        ListAttestorsResponse.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.arrays || options.defaults)
                                object.attestors = [];
                            if (options.defaults)
                                object.nextPageToken = "";
                            if (message.attestors && message.attestors.length) {
                                object.attestors = [];
                                for (var j = 0; j < message.attestors.length; ++j)
                                    object.attestors[j] = $root.google.cloud.binaryauthorization.v1beta1.Attestor.toObject(message.attestors[j], options);
                            }
                            if (message.nextPageToken != null && message.hasOwnProperty("nextPageToken"))
                                object.nextPageToken = message.nextPageToken;
                            return object;
                        };
    
                        /**
                         * Converts this ListAttestorsResponse to JSON.
                         * @function toJSON
                         * @memberof google.cloud.binaryauthorization.v1beta1.ListAttestorsResponse
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        ListAttestorsResponse.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for ListAttestorsResponse
                         * @function getTypeUrl
                         * @memberof google.cloud.binaryauthorization.v1beta1.ListAttestorsResponse
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        ListAttestorsResponse.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.binaryauthorization.v1beta1.ListAttestorsResponse";
                        };
    
                        return ListAttestorsResponse;
                    })();
    
                    v1beta1.DeleteAttestorRequest = (function() {
    
                        /**
                         * Properties of a DeleteAttestorRequest.
                         * @memberof google.cloud.binaryauthorization.v1beta1
                         * @interface IDeleteAttestorRequest
                         * @property {string|null} [name] DeleteAttestorRequest name
                         */
    
                        /**
                         * Constructs a new DeleteAttestorRequest.
                         * @memberof google.cloud.binaryauthorization.v1beta1
                         * @classdesc Represents a DeleteAttestorRequest.
                         * @implements IDeleteAttestorRequest
                         * @constructor
                         * @param {google.cloud.binaryauthorization.v1beta1.IDeleteAttestorRequest=} [properties] Properties to set
                         */
                        function DeleteAttestorRequest(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * DeleteAttestorRequest name.
                         * @member {string} name
                         * @memberof google.cloud.binaryauthorization.v1beta1.DeleteAttestorRequest
                         * @instance
                         */
                        DeleteAttestorRequest.prototype.name = "";
    
                        /**
                         * Creates a new DeleteAttestorRequest instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.binaryauthorization.v1beta1.DeleteAttestorRequest
                         * @static
                         * @param {google.cloud.binaryauthorization.v1beta1.IDeleteAttestorRequest=} [properties] Properties to set
                         * @returns {google.cloud.binaryauthorization.v1beta1.DeleteAttestorRequest} DeleteAttestorRequest instance
                         */
                        DeleteAttestorRequest.create = function create(properties) {
                            return new DeleteAttestorRequest(properties);
                        };
    
                        /**
                         * Encodes the specified DeleteAttestorRequest message. Does not implicitly {@link google.cloud.binaryauthorization.v1beta1.DeleteAttestorRequest.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.binaryauthorization.v1beta1.DeleteAttestorRequest
                         * @static
                         * @param {google.cloud.binaryauthorization.v1beta1.IDeleteAttestorRequest} message DeleteAttestorRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        DeleteAttestorRequest.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified DeleteAttestorRequest message, length delimited. Does not implicitly {@link google.cloud.binaryauthorization.v1beta1.DeleteAttestorRequest.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.binaryauthorization.v1beta1.DeleteAttestorRequest
                         * @static
                         * @param {google.cloud.binaryauthorization.v1beta1.IDeleteAttestorRequest} message DeleteAttestorRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        DeleteAttestorRequest.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a DeleteAttestorRequest message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.binaryauthorization.v1beta1.DeleteAttestorRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.binaryauthorization.v1beta1.DeleteAttestorRequest} DeleteAttestorRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        DeleteAttestorRequest.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.binaryauthorization.v1beta1.DeleteAttestorRequest();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.name = reader.string();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a DeleteAttestorRequest message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.binaryauthorization.v1beta1.DeleteAttestorRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.binaryauthorization.v1beta1.DeleteAttestorRequest} DeleteAttestorRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        DeleteAttestorRequest.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a DeleteAttestorRequest message.
                         * @function verify
                         * @memberof google.cloud.binaryauthorization.v1beta1.DeleteAttestorRequest
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        DeleteAttestorRequest.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.name != null && message.hasOwnProperty("name"))
                                if (!$util.isString(message.name))
                                    return "name: string expected";
                            return null;
                        };
    
                        /**
                         * Creates a DeleteAttestorRequest message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.binaryauthorization.v1beta1.DeleteAttestorRequest
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.binaryauthorization.v1beta1.DeleteAttestorRequest} DeleteAttestorRequest
                         */
                        DeleteAttestorRequest.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.binaryauthorization.v1beta1.DeleteAttestorRequest)
                                return object;
                            var message = new $root.google.cloud.binaryauthorization.v1beta1.DeleteAttestorRequest();
                            if (object.name != null)
                                message.name = String(object.name);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a DeleteAttestorRequest message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.binaryauthorization.v1beta1.DeleteAttestorRequest
                         * @static
                         * @param {google.cloud.binaryauthorization.v1beta1.DeleteAttestorRequest} message DeleteAttestorRequest
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        DeleteAttestorRequest.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults)
                                object.name = "";
                            if (message.name != null && message.hasOwnProperty("name"))
                                object.name = message.name;
                            return object;
                        };
    
                        /**
                         * Converts this DeleteAttestorRequest to JSON.
                         * @function toJSON
                         * @memberof google.cloud.binaryauthorization.v1beta1.DeleteAttestorRequest
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        DeleteAttestorRequest.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for DeleteAttestorRequest
                         * @function getTypeUrl
                         * @memberof google.cloud.binaryauthorization.v1beta1.DeleteAttestorRequest
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        DeleteAttestorRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.binaryauthorization.v1beta1.DeleteAttestorRequest";
                        };
    
                        return DeleteAttestorRequest;
                    })();
    
                    v1beta1.GetSystemPolicyRequest = (function() {
    
                        /**
                         * Properties of a GetSystemPolicyRequest.
                         * @memberof google.cloud.binaryauthorization.v1beta1
                         * @interface IGetSystemPolicyRequest
                         * @property {string|null} [name] GetSystemPolicyRequest name
                         */
    
                        /**
                         * Constructs a new GetSystemPolicyRequest.
                         * @memberof google.cloud.binaryauthorization.v1beta1
                         * @classdesc Represents a GetSystemPolicyRequest.
                         * @implements IGetSystemPolicyRequest
                         * @constructor
                         * @param {google.cloud.binaryauthorization.v1beta1.IGetSystemPolicyRequest=} [properties] Properties to set
                         */
                        function GetSystemPolicyRequest(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * GetSystemPolicyRequest name.
                         * @member {string} name
                         * @memberof google.cloud.binaryauthorization.v1beta1.GetSystemPolicyRequest
                         * @instance
                         */
                        GetSystemPolicyRequest.prototype.name = "";
    
                        /**
                         * Creates a new GetSystemPolicyRequest instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.binaryauthorization.v1beta1.GetSystemPolicyRequest
                         * @static
                         * @param {google.cloud.binaryauthorization.v1beta1.IGetSystemPolicyRequest=} [properties] Properties to set
                         * @returns {google.cloud.binaryauthorization.v1beta1.GetSystemPolicyRequest} GetSystemPolicyRequest instance
                         */
                        GetSystemPolicyRequest.create = function create(properties) {
                            return new GetSystemPolicyRequest(properties);
                        };
    
                        /**
                         * Encodes the specified GetSystemPolicyRequest message. Does not implicitly {@link google.cloud.binaryauthorization.v1beta1.GetSystemPolicyRequest.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.binaryauthorization.v1beta1.GetSystemPolicyRequest
                         * @static
                         * @param {google.cloud.binaryauthorization.v1beta1.IGetSystemPolicyRequest} message GetSystemPolicyRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        GetSystemPolicyRequest.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified GetSystemPolicyRequest message, length delimited. Does not implicitly {@link google.cloud.binaryauthorization.v1beta1.GetSystemPolicyRequest.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.binaryauthorization.v1beta1.GetSystemPolicyRequest
                         * @static
                         * @param {google.cloud.binaryauthorization.v1beta1.IGetSystemPolicyRequest} message GetSystemPolicyRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        GetSystemPolicyRequest.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a GetSystemPolicyRequest message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.binaryauthorization.v1beta1.GetSystemPolicyRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.binaryauthorization.v1beta1.GetSystemPolicyRequest} GetSystemPolicyRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        GetSystemPolicyRequest.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.binaryauthorization.v1beta1.GetSystemPolicyRequest();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.name = reader.string();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a GetSystemPolicyRequest message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.binaryauthorization.v1beta1.GetSystemPolicyRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.binaryauthorization.v1beta1.GetSystemPolicyRequest} GetSystemPolicyRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        GetSystemPolicyRequest.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a GetSystemPolicyRequest message.
                         * @function verify
                         * @memberof google.cloud.binaryauthorization.v1beta1.GetSystemPolicyRequest
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        GetSystemPolicyRequest.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.name != null && message.hasOwnProperty("name"))
                                if (!$util.isString(message.name))
                                    return "name: string expected";
                            return null;
                        };
    
                        /**
                         * Creates a GetSystemPolicyRequest message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.binaryauthorization.v1beta1.GetSystemPolicyRequest
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.binaryauthorization.v1beta1.GetSystemPolicyRequest} GetSystemPolicyRequest
                         */
                        GetSystemPolicyRequest.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.binaryauthorization.v1beta1.GetSystemPolicyRequest)
                                return object;
                            var message = new $root.google.cloud.binaryauthorization.v1beta1.GetSystemPolicyRequest();
                            if (object.name != null)
                                message.name = String(object.name);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a GetSystemPolicyRequest message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.binaryauthorization.v1beta1.GetSystemPolicyRequest
                         * @static
                         * @param {google.cloud.binaryauthorization.v1beta1.GetSystemPolicyRequest} message GetSystemPolicyRequest
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        GetSystemPolicyRequest.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults)
                                object.name = "";
                            if (message.name != null && message.hasOwnProperty("name"))
                                object.name = message.name;
                            return object;
                        };
    
                        /**
                         * Converts this GetSystemPolicyRequest to JSON.
                         * @function toJSON
                         * @memberof google.cloud.binaryauthorization.v1beta1.GetSystemPolicyRequest
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        GetSystemPolicyRequest.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for GetSystemPolicyRequest
                         * @function getTypeUrl
                         * @memberof google.cloud.binaryauthorization.v1beta1.GetSystemPolicyRequest
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        GetSystemPolicyRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.binaryauthorization.v1beta1.GetSystemPolicyRequest";
                        };
    
                        return GetSystemPolicyRequest;
                    })();
    
                    return v1beta1;
                })();
    
                return binaryauthorization;
            })();
    
            return cloud;
        })();
    
        google.api = (function() {
    
            /**
             * Namespace api.
             * @memberof google
             * @namespace
             */
            var api = {};
    
            /**
             * FieldBehavior enum.
             * @name google.api.FieldBehavior
             * @enum {number}
             * @property {number} FIELD_BEHAVIOR_UNSPECIFIED=0 FIELD_BEHAVIOR_UNSPECIFIED value
             * @property {number} OPTIONAL=1 OPTIONAL value
             * @property {number} REQUIRED=2 REQUIRED value
             * @property {number} OUTPUT_ONLY=3 OUTPUT_ONLY value
             * @property {number} INPUT_ONLY=4 INPUT_ONLY value
             * @property {number} IMMUTABLE=5 IMMUTABLE value
             * @property {number} UNORDERED_LIST=6 UNORDERED_LIST value
             * @property {number} NON_EMPTY_DEFAULT=7 NON_EMPTY_DEFAULT value
             */
            api.FieldBehavior = (function() {
                var valuesById = {}, values = Object.create(valuesById);
                values[valuesById[0] = "FIELD_BEHAVIOR_UNSPECIFIED"] = 0;
                values[valuesById[1] = "OPTIONAL"] = 1;
                values[valuesById[2] = "REQUIRED"] = 2;
                values[valuesById[3] = "OUTPUT_ONLY"] = 3;
                values[valuesById[4] = "INPUT_ONLY"] = 4;
                values[valuesById[5] = "IMMUTABLE"] = 5;
                values[valuesById[6] = "UNORDERED_LIST"] = 6;
                values[valuesById[7] = "NON_EMPTY_DEFAULT"] = 7;
                return values;
            })();
    
            api.ResourceDescriptor = (function() {
    
                /**
                 * Properties of a ResourceDescriptor.
                 * @memberof google.api
                 * @interface IResourceDescriptor
                 * @property {string|null} [type] ResourceDescriptor type
                 * @property {Array.<string>|null} [pattern] ResourceDescriptor pattern
                 * @property {string|null} [nameField] ResourceDescriptor nameField
                 * @property {google.api.ResourceDescriptor.History|null} [history] ResourceDescriptor history
                 * @property {string|null} [plural] ResourceDescriptor plural
                 * @property {string|null} [singular] ResourceDescriptor singular
                 * @property {Array.<google.api.ResourceDescriptor.Style>|null} [style] ResourceDescriptor style
                 */
    
                /**
                 * Constructs a new ResourceDescriptor.
                 * @memberof google.api
                 * @classdesc Represents a ResourceDescriptor.
                 * @implements IResourceDescriptor
                 * @constructor
                 * @param {google.api.IResourceDescriptor=} [properties] Properties to set
                 */
                function ResourceDescriptor(properties) {
                    this.pattern = [];
                    this.style = [];
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * ResourceDescriptor type.
                 * @member {string} type
                 * @memberof google.api.ResourceDescriptor
                 * @instance
                 */
                ResourceDescriptor.prototype.type = "";
    
                /**
                 * ResourceDescriptor pattern.
                 * @member {Array.<string>} pattern
                 * @memberof google.api.ResourceDescriptor
                 * @instance
                 */
                ResourceDescriptor.prototype.pattern = $util.emptyArray;
    
                /**
                 * ResourceDescriptor nameField.
                 * @member {string} nameField
                 * @memberof google.api.ResourceDescriptor
                 * @instance
                 */
                ResourceDescriptor.prototype.nameField = "";
    
                /**
                 * ResourceDescriptor history.
                 * @member {google.api.ResourceDescriptor.History} history
                 * @memberof google.api.ResourceDescriptor
                 * @instance
                 */
                ResourceDescriptor.prototype.history = 0;
    
                /**
                 * ResourceDescriptor plural.
                 * @member {string} plural
                 * @memberof google.api.ResourceDescriptor
                 * @instance
                 */
                ResourceDescriptor.prototype.plural = "";
    
                /**
                 * ResourceDescriptor singular.
                 * @member {string} singular
                 * @memberof google.api.ResourceDescriptor
                 * @instance
                 */
                ResourceDescriptor.prototype.singular = "";
    
                /**
                 * ResourceDescriptor style.
                 * @member {Array.<google.api.ResourceDescriptor.Style>} style
                 * @memberof google.api.ResourceDescriptor
                 * @instance
                 */
                ResourceDescriptor.prototype.style = $util.emptyArray;
    
                /**
                 * Creates a new ResourceDescriptor instance using the specified properties.
                 * @function create
                 * @memberof google.api.ResourceDescriptor
                 * @static
                 * @param {google.api.IResourceDescriptor=} [properties] Properties to set
                 * @returns {google.api.ResourceDescriptor} ResourceDescriptor instance
                 */
                ResourceDescriptor.create = function create(properties) {
                    return new ResourceDescriptor(properties);
                };
    
                /**
                 * Encodes the specified ResourceDescriptor message. Does not implicitly {@link google.api.ResourceDescriptor.verify|verify} messages.
                 * @function encode
                 * @memberof google.api.ResourceDescriptor
                 * @static
                 * @param {google.api.IResourceDescriptor} message ResourceDescriptor message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                ResourceDescriptor.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.type != null && Object.hasOwnProperty.call(message, "type"))
                        writer.uint32(/* id 1, wireType 2 =*/10).string(message.type);
                    if (message.pattern != null && message.pattern.length)
                        for (var i = 0; i < message.pattern.length; ++i)
                            writer.uint32(/* id 2, wireType 2 =*/18).string(message.pattern[i]);
                    if (message.nameField != null && Object.hasOwnProperty.call(message, "nameField"))
                        writer.uint32(/* id 3, wireType 2 =*/26).string(message.nameField);
                    if (message.history != null && Object.hasOwnProperty.call(message, "history"))
                        writer.uint32(/* id 4, wireType 0 =*/32).int32(message.history);
                    if (message.plural != null && Object.hasOwnProperty.call(message, "plural"))
                        writer.uint32(/* id 5, wireType 2 =*/42).string(message.plural);
                    if (message.singular != null && Object.hasOwnProperty.call(message, "singular"))
                        writer.uint32(/* id 6, wireType 2 =*/50).string(message.singular);
                    if (message.style != null && message.style.length) {
                        writer.uint32(/* id 10, wireType 2 =*/82).fork();
                        for (var i = 0; i < message.style.length; ++i)
                            writer.int32(message.style[i]);
                        writer.ldelim();
                    }
                    return writer;
                };
    
                /**
                 * Encodes the specified ResourceDescriptor message, length delimited. Does not implicitly {@link google.api.ResourceDescriptor.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.api.ResourceDescriptor
                 * @static
                 * @param {google.api.IResourceDescriptor} message ResourceDescriptor message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                ResourceDescriptor.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a ResourceDescriptor message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.api.ResourceDescriptor
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.api.ResourceDescriptor} ResourceDescriptor
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                ResourceDescriptor.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.api.ResourceDescriptor();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1: {
                                message.type = reader.string();
                                break;
                            }
                        case 2: {
                                if (!(message.pattern && message.pattern.length))
                                    message.pattern = [];
                                message.pattern.push(reader.string());
                                break;
                            }
                        case 3: {
                                message.nameField = reader.string();
                                break;
                            }
                        case 4: {
                                message.history = reader.int32();
                                break;
                            }
                        case 5: {
                                message.plural = reader.string();
                                break;
                            }
                        case 6: {
                                message.singular = reader.string();
                                break;
                            }
                        case 10: {
                                if (!(message.style && message.style.length))
                                    message.style = [];
                                if ((tag & 7) === 2) {
                                    var end2 = reader.uint32() + reader.pos;
                                    while (reader.pos < end2)
                                        message.style.push(reader.int32());
                                } else
                                    message.style.push(reader.int32());
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a ResourceDescriptor message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.api.ResourceDescriptor
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.api.ResourceDescriptor} ResourceDescriptor
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                ResourceDescriptor.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a ResourceDescriptor message.
                 * @function verify
                 * @memberof google.api.ResourceDescriptor
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                ResourceDescriptor.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.type != null && message.hasOwnProperty("type"))
                        if (!$util.isString(message.type))
                            return "type: string expected";
                    if (message.pattern != null && message.hasOwnProperty("pattern")) {
                        if (!Array.isArray(message.pattern))
                            return "pattern: array expected";
                        for (var i = 0; i < message.pattern.length; ++i)
                            if (!$util.isString(message.pattern[i]))
                                return "pattern: string[] expected";
                    }
                    if (message.nameField != null && message.hasOwnProperty("nameField"))
                        if (!$util.isString(message.nameField))
                            return "nameField: string expected";
                    if (message.history != null && message.hasOwnProperty("history"))
                        switch (message.history) {
                        default:
                            return "history: enum value expected";
                        case 0:
                        case 1:
                        case 2:
                            break;
                        }
                    if (message.plural != null && message.hasOwnProperty("plural"))
                        if (!$util.isString(message.plural))
                            return "plural: string expected";
                    if (message.singular != null && message.hasOwnProperty("singular"))
                        if (!$util.isString(message.singular))
                            return "singular: string expected";
                    if (message.style != null && message.hasOwnProperty("style")) {
                        if (!Array.isArray(message.style))
                            return "style: array expected";
                        for (var i = 0; i < message.style.length; ++i)
                            switch (message.style[i]) {
                            default:
                                return "style: enum value[] expected";
                            case 0:
                            case 1:
                                break;
                            }
                    }
                    return null;
                };
    
                /**
                 * Creates a ResourceDescriptor message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.api.ResourceDescriptor
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.api.ResourceDescriptor} ResourceDescriptor
                 */
                ResourceDescriptor.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.api.ResourceDescriptor)
                        return object;
                    var message = new $root.google.api.ResourceDescriptor();
                    if (object.type != null)
                        message.type = String(object.type);
                    if (object.pattern) {
                        if (!Array.isArray(object.pattern))
                            throw TypeError(".google.api.ResourceDescriptor.pattern: array expected");
                        message.pattern = [];
                        for (var i = 0; i < object.pattern.length; ++i)
                            message.pattern[i] = String(object.pattern[i]);
                    }
                    if (object.nameField != null)
                        message.nameField = String(object.nameField);
                    switch (object.history) {
                    default:
                        if (typeof object.history === "number") {
                            message.history = object.history;
                            break;
                        }
                        break;
                    case "HISTORY_UNSPECIFIED":
                    case 0:
                        message.history = 0;
                        break;
                    case "ORIGINALLY_SINGLE_PATTERN":
                    case 1:
                        message.history = 1;
                        break;
                    case "FUTURE_MULTI_PATTERN":
                    case 2:
                        message.history = 2;
                        break;
                    }
                    if (object.plural != null)
                        message.plural = String(object.plural);
                    if (object.singular != null)
                        message.singular = String(object.singular);
                    if (object.style) {
                        if (!Array.isArray(object.style))
                            throw TypeError(".google.api.ResourceDescriptor.style: array expected");
                        message.style = [];
                        for (var i = 0; i < object.style.length; ++i)
                            switch (object.style[i]) {
                            default:
                                if (typeof object.style[i] === "number") {
                                    message.style[i] = object.style[i];
                                    break;
                                }
                            case "STYLE_UNSPECIFIED":
                            case 0:
                                message.style[i] = 0;
                                break;
                            case "DECLARATIVE_FRIENDLY":
                            case 1:
                                message.style[i] = 1;
                                break;
                            }
                    }
                    return message;
                };
    
                /**
                 * Creates a plain object from a ResourceDescriptor message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.api.ResourceDescriptor
                 * @static
                 * @param {google.api.ResourceDescriptor} message ResourceDescriptor
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                ResourceDescriptor.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.arrays || options.defaults) {
                        object.pattern = [];
                        object.style = [];
                    }
                    if (options.defaults) {
                        object.type = "";
                        object.nameField = "";
                        object.history = options.enums === String ? "HISTORY_UNSPECIFIED" : 0;
                        object.plural = "";
                        object.singular = "";
                    }
                    if (message.type != null && message.hasOwnProperty("type"))
                        object.type = message.type;
                    if (message.pattern && message.pattern.length) {
                        object.pattern = [];
                        for (var j = 0; j < message.pattern.length; ++j)
                            object.pattern[j] = message.pattern[j];
                    }
                    if (message.nameField != null && message.hasOwnProperty("nameField"))
                        object.nameField = message.nameField;
                    if (message.history != null && message.hasOwnProperty("history"))
                        object.history = options.enums === String ? $root.google.api.ResourceDescriptor.History[message.history] === undefined ? message.history : $root.google.api.ResourceDescriptor.History[message.history] : message.history;
                    if (message.plural != null && message.hasOwnProperty("plural"))
                        object.plural = message.plural;
                    if (message.singular != null && message.hasOwnProperty("singular"))
                        object.singular = message.singular;
                    if (message.style && message.style.length) {
                        object.style = [];
                        for (var j = 0; j < message.style.length; ++j)
                            object.style[j] = options.enums === String ? $root.google.api.ResourceDescriptor.Style[message.style[j]] === undefined ? message.style[j] : $root.google.api.ResourceDescriptor.Style[message.style[j]] : message.style[j];
                    }
                    return object;
                };
    
                /**
                 * Converts this ResourceDescriptor to JSON.
                 * @function toJSON
                 * @memberof google.api.ResourceDescriptor
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                ResourceDescriptor.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for ResourceDescriptor
                 * @function getTypeUrl
                 * @memberof google.api.ResourceDescriptor
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                ResourceDescriptor.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.api.ResourceDescriptor";
                };
    
                /**
                 * History enum.
                 * @name google.api.ResourceDescriptor.History
                 * @enum {number}
                 * @property {number} HISTORY_UNSPECIFIED=0 HISTORY_UNSPECIFIED value
                 * @property {number} ORIGINALLY_SINGLE_PATTERN=1 ORIGINALLY_SINGLE_PATTERN value
                 * @property {number} FUTURE_MULTI_PATTERN=2 FUTURE_MULTI_PATTERN value
                 */
                ResourceDescriptor.History = (function() {
                    var valuesById = {}, values = Object.create(valuesById);
                    values[valuesById[0] = "HISTORY_UNSPECIFIED"] = 0;
                    values[valuesById[1] = "ORIGINALLY_SINGLE_PATTERN"] = 1;
                    values[valuesById[2] = "FUTURE_MULTI_PATTERN"] = 2;
                    return values;
                })();
    
                /**
                 * Style enum.
                 * @name google.api.ResourceDescriptor.Style
                 * @enum {number}
                 * @property {number} STYLE_UNSPECIFIED=0 STYLE_UNSPECIFIED value
                 * @property {number} DECLARATIVE_FRIENDLY=1 DECLARATIVE_FRIENDLY value
                 */
                ResourceDescriptor.Style = (function() {
                    var valuesById = {}, values = Object.create(valuesById);
                    values[valuesById[0] = "STYLE_UNSPECIFIED"] = 0;
                    values[valuesById[1] = "DECLARATIVE_FRIENDLY"] = 1;
                    return values;
                })();
    
                return ResourceDescriptor;
            })();
    
            api.ResourceReference = (function() {
    
                /**
                 * Properties of a ResourceReference.
                 * @memberof google.api
                 * @interface IResourceReference
                 * @property {string|null} [type] ResourceReference type
                 * @property {string|null} [childType] ResourceReference childType
                 */
    
                /**
                 * Constructs a new ResourceReference.
                 * @memberof google.api
                 * @classdesc Represents a ResourceReference.
                 * @implements IResourceReference
                 * @constructor
                 * @param {google.api.IResourceReference=} [properties] Properties to set
                 */
                function ResourceReference(properties) {
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * ResourceReference type.
                 * @member {string} type
                 * @memberof google.api.ResourceReference
                 * @instance
                 */
                ResourceReference.prototype.type = "";
    
                /**
                 * ResourceReference childType.
                 * @member {string} childType
                 * @memberof google.api.ResourceReference
                 * @instance
                 */
                ResourceReference.prototype.childType = "";
    
                /**
                 * Creates a new ResourceReference instance using the specified properties.
                 * @function create
                 * @memberof google.api.ResourceReference
                 * @static
                 * @param {google.api.IResourceReference=} [properties] Properties to set
                 * @returns {google.api.ResourceReference} ResourceReference instance
                 */
                ResourceReference.create = function create(properties) {
                    return new ResourceReference(properties);
                };
    
                /**
                 * Encodes the specified ResourceReference message. Does not implicitly {@link google.api.ResourceReference.verify|verify} messages.
                 * @function encode
                 * @memberof google.api.ResourceReference
                 * @static
                 * @param {google.api.IResourceReference} message ResourceReference message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                ResourceReference.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.type != null && Object.hasOwnProperty.call(message, "type"))
                        writer.uint32(/* id 1, wireType 2 =*/10).string(message.type);
                    if (message.childType != null && Object.hasOwnProperty.call(message, "childType"))
                        writer.uint32(/* id 2, wireType 2 =*/18).string(message.childType);
                    return writer;
                };
    
                /**
                 * Encodes the specified ResourceReference message, length delimited. Does not implicitly {@link google.api.ResourceReference.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.api.ResourceReference
                 * @static
                 * @param {google.api.IResourceReference} message ResourceReference message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                ResourceReference.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a ResourceReference message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.api.ResourceReference
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.api.ResourceReference} ResourceReference
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                ResourceReference.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.api.ResourceReference();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1: {
                                message.type = reader.string();
                                break;
                            }
                        case 2: {
                                message.childType = reader.string();
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a ResourceReference message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.api.ResourceReference
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.api.ResourceReference} ResourceReference
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                ResourceReference.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a ResourceReference message.
                 * @function verify
                 * @memberof google.api.ResourceReference
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                ResourceReference.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.type != null && message.hasOwnProperty("type"))
                        if (!$util.isString(message.type))
                            return "type: string expected";
                    if (message.childType != null && message.hasOwnProperty("childType"))
                        if (!$util.isString(message.childType))
                            return "childType: string expected";
                    return null;
                };
    
                /**
                 * Creates a ResourceReference message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.api.ResourceReference
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.api.ResourceReference} ResourceReference
                 */
                ResourceReference.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.api.ResourceReference)
                        return object;
                    var message = new $root.google.api.ResourceReference();
                    if (object.type != null)
                        message.type = String(object.type);
                    if (object.childType != null)
                        message.childType = String(object.childType);
                    return message;
                };
    
                /**
                 * Creates a plain object from a ResourceReference message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.api.ResourceReference
                 * @static
                 * @param {google.api.ResourceReference} message ResourceReference
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                ResourceReference.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.defaults) {
                        object.type = "";
                        object.childType = "";
                    }
                    if (message.type != null && message.hasOwnProperty("type"))
                        object.type = message.type;
                    if (message.childType != null && message.hasOwnProperty("childType"))
                        object.childType = message.childType;
                    return object;
                };
    
                /**
                 * Converts this ResourceReference to JSON.
                 * @function toJSON
                 * @memberof google.api.ResourceReference
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                ResourceReference.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for ResourceReference
                 * @function getTypeUrl
                 * @memberof google.api.ResourceReference
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                ResourceReference.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.api.ResourceReference";
                };
    
                return ResourceReference;
            })();
    
            api.Http = (function() {
    
                /**
                 * Properties of a Http.
                 * @memberof google.api
                 * @interface IHttp
                 * @property {Array.<google.api.IHttpRule>|null} [rules] Http rules
                 * @property {boolean|null} [fullyDecodeReservedExpansion] Http fullyDecodeReservedExpansion
                 */
    
                /**
                 * Constructs a new Http.
                 * @memberof google.api
                 * @classdesc Represents a Http.
                 * @implements IHttp
                 * @constructor
                 * @param {google.api.IHttp=} [properties] Properties to set
                 */
                function Http(properties) {
                    this.rules = [];
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * Http rules.
                 * @member {Array.<google.api.IHttpRule>} rules
                 * @memberof google.api.Http
                 * @instance
                 */
                Http.prototype.rules = $util.emptyArray;
    
                /**
                 * Http fullyDecodeReservedExpansion.
                 * @member {boolean} fullyDecodeReservedExpansion
                 * @memberof google.api.Http
                 * @instance
                 */
                Http.prototype.fullyDecodeReservedExpansion = false;
    
                /**
                 * Creates a new Http instance using the specified properties.
                 * @function create
                 * @memberof google.api.Http
                 * @static
                 * @param {google.api.IHttp=} [properties] Properties to set
                 * @returns {google.api.Http} Http instance
                 */
                Http.create = function create(properties) {
                    return new Http(properties);
                };
    
                /**
                 * Encodes the specified Http message. Does not implicitly {@link google.api.Http.verify|verify} messages.
                 * @function encode
                 * @memberof google.api.Http
                 * @static
                 * @param {google.api.IHttp} message Http message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                Http.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.rules != null && message.rules.length)
                        for (var i = 0; i < message.rules.length; ++i)
                            $root.google.api.HttpRule.encode(message.rules[i], writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                    if (message.fullyDecodeReservedExpansion != null && Object.hasOwnProperty.call(message, "fullyDecodeReservedExpansion"))
                        writer.uint32(/* id 2, wireType 0 =*/16).bool(message.fullyDecodeReservedExpansion);
                    return writer;
                };
    
                /**
                 * Encodes the specified Http message, length delimited. Does not implicitly {@link google.api.Http.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.api.Http
                 * @static
                 * @param {google.api.IHttp} message Http message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                Http.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a Http message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.api.Http
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.api.Http} Http
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                Http.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.api.Http();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1: {
                                if (!(message.rules && message.rules.length))
                                    message.rules = [];
                                message.rules.push($root.google.api.HttpRule.decode(reader, reader.uint32()));
                                break;
                            }
                        case 2: {
                                message.fullyDecodeReservedExpansion = reader.bool();
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a Http message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.api.Http
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.api.Http} Http
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                Http.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a Http message.
                 * @function verify
                 * @memberof google.api.Http
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                Http.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.rules != null && message.hasOwnProperty("rules")) {
                        if (!Array.isArray(message.rules))
                            return "rules: array expected";
                        for (var i = 0; i < message.rules.length; ++i) {
                            var error = $root.google.api.HttpRule.verify(message.rules[i]);
                            if (error)
                                return "rules." + error;
                        }
                    }
                    if (message.fullyDecodeReservedExpansion != null && message.hasOwnProperty("fullyDecodeReservedExpansion"))
                        if (typeof message.fullyDecodeReservedExpansion !== "boolean")
                            return "fullyDecodeReservedExpansion: boolean expected";
                    return null;
                };
    
                /**
                 * Creates a Http message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.api.Http
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.api.Http} Http
                 */
                Http.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.api.Http)
                        return object;
                    var message = new $root.google.api.Http();
                    if (object.rules) {
                        if (!Array.isArray(object.rules))
                            throw TypeError(".google.api.Http.rules: array expected");
                        message.rules = [];
                        for (var i = 0; i < object.rules.length; ++i) {
                            if (typeof object.rules[i] !== "object")
                                throw TypeError(".google.api.Http.rules: object expected");
                            message.rules[i] = $root.google.api.HttpRule.fromObject(object.rules[i]);
                        }
                    }
                    if (object.fullyDecodeReservedExpansion != null)
                        message.fullyDecodeReservedExpansion = Boolean(object.fullyDecodeReservedExpansion);
                    return message;
                };
    
                /**
                 * Creates a plain object from a Http message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.api.Http
                 * @static
                 * @param {google.api.Http} message Http
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                Http.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.arrays || options.defaults)
                        object.rules = [];
                    if (options.defaults)
                        object.fullyDecodeReservedExpansion = false;
                    if (message.rules && message.rules.length) {
                        object.rules = [];
                        for (var j = 0; j < message.rules.length; ++j)
                            object.rules[j] = $root.google.api.HttpRule.toObject(message.rules[j], options);
                    }
                    if (message.fullyDecodeReservedExpansion != null && message.hasOwnProperty("fullyDecodeReservedExpansion"))
                        object.fullyDecodeReservedExpansion = message.fullyDecodeReservedExpansion;
                    return object;
                };
    
                /**
                 * Converts this Http to JSON.
                 * @function toJSON
                 * @memberof google.api.Http
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                Http.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for Http
                 * @function getTypeUrl
                 * @memberof google.api.Http
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                Http.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.api.Http";
                };
    
                return Http;
            })();
    
            api.HttpRule = (function() {
    
                /**
                 * Properties of a HttpRule.
                 * @memberof google.api
                 * @interface IHttpRule
                 * @property {string|null} [selector] HttpRule selector
                 * @property {string|null} [get] HttpRule get
                 * @property {string|null} [put] HttpRule put
                 * @property {string|null} [post] HttpRule post
                 * @property {string|null} ["delete"] HttpRule delete
                 * @property {string|null} [patch] HttpRule patch
                 * @property {google.api.ICustomHttpPattern|null} [custom] HttpRule custom
                 * @property {string|null} [body] HttpRule body
                 * @property {string|null} [responseBody] HttpRule responseBody
                 * @property {Array.<google.api.IHttpRule>|null} [additionalBindings] HttpRule additionalBindings
                 */
    
                /**
                 * Constructs a new HttpRule.
                 * @memberof google.api
                 * @classdesc Represents a HttpRule.
                 * @implements IHttpRule
                 * @constructor
                 * @param {google.api.IHttpRule=} [properties] Properties to set
                 */
                function HttpRule(properties) {
                    this.additionalBindings = [];
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * HttpRule selector.
                 * @member {string} selector
                 * @memberof google.api.HttpRule
                 * @instance
                 */
                HttpRule.prototype.selector = "";
    
                /**
                 * HttpRule get.
                 * @member {string|null|undefined} get
                 * @memberof google.api.HttpRule
                 * @instance
                 */
                HttpRule.prototype.get = null;
    
                /**
                 * HttpRule put.
                 * @member {string|null|undefined} put
                 * @memberof google.api.HttpRule
                 * @instance
                 */
                HttpRule.prototype.put = null;
    
                /**
                 * HttpRule post.
                 * @member {string|null|undefined} post
                 * @memberof google.api.HttpRule
                 * @instance
                 */
                HttpRule.prototype.post = null;
    
                /**
                 * HttpRule delete.
                 * @member {string|null|undefined} delete
                 * @memberof google.api.HttpRule
                 * @instance
                 */
                HttpRule.prototype["delete"] = null;
    
                /**
                 * HttpRule patch.
                 * @member {string|null|undefined} patch
                 * @memberof google.api.HttpRule
                 * @instance
                 */
                HttpRule.prototype.patch = null;
    
                /**
                 * HttpRule custom.
                 * @member {google.api.ICustomHttpPattern|null|undefined} custom
                 * @memberof google.api.HttpRule
                 * @instance
                 */
                HttpRule.prototype.custom = null;
    
                /**
                 * HttpRule body.
                 * @member {string} body
                 * @memberof google.api.HttpRule
                 * @instance
                 */
                HttpRule.prototype.body = "";
    
                /**
                 * HttpRule responseBody.
                 * @member {string} responseBody
                 * @memberof google.api.HttpRule
                 * @instance
                 */
                HttpRule.prototype.responseBody = "";
    
                /**
                 * HttpRule additionalBindings.
                 * @member {Array.<google.api.IHttpRule>} additionalBindings
                 * @memberof google.api.HttpRule
                 * @instance
                 */
                HttpRule.prototype.additionalBindings = $util.emptyArray;
    
                // OneOf field names bound to virtual getters and setters
                var $oneOfFields;
    
                /**
                 * HttpRule pattern.
                 * @member {"get"|"put"|"post"|"delete"|"patch"|"custom"|undefined} pattern
                 * @memberof google.api.HttpRule
                 * @instance
                 */
                Object.defineProperty(HttpRule.prototype, "pattern", {
                    get: $util.oneOfGetter($oneOfFields = ["get", "put", "post", "delete", "patch", "custom"]),
                    set: $util.oneOfSetter($oneOfFields)
                });
    
                /**
                 * Creates a new HttpRule instance using the specified properties.
                 * @function create
                 * @memberof google.api.HttpRule
                 * @static
                 * @param {google.api.IHttpRule=} [properties] Properties to set
                 * @returns {google.api.HttpRule} HttpRule instance
                 */
                HttpRule.create = function create(properties) {
                    return new HttpRule(properties);
                };
    
                /**
                 * Encodes the specified HttpRule message. Does not implicitly {@link google.api.HttpRule.verify|verify} messages.
                 * @function encode
                 * @memberof google.api.HttpRule
                 * @static
                 * @param {google.api.IHttpRule} message HttpRule message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                HttpRule.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.selector != null && Object.hasOwnProperty.call(message, "selector"))
                        writer.uint32(/* id 1, wireType 2 =*/10).string(message.selector);
                    if (message.get != null && Object.hasOwnProperty.call(message, "get"))
                        writer.uint32(/* id 2, wireType 2 =*/18).string(message.get);
                    if (message.put != null && Object.hasOwnProperty.call(message, "put"))
                        writer.uint32(/* id 3, wireType 2 =*/26).string(message.put);
                    if (message.post != null && Object.hasOwnProperty.call(message, "post"))
                        writer.uint32(/* id 4, wireType 2 =*/34).string(message.post);
                    if (message["delete"] != null && Object.hasOwnProperty.call(message, "delete"))
                        writer.uint32(/* id 5, wireType 2 =*/42).string(message["delete"]);
                    if (message.patch != null && Object.hasOwnProperty.call(message, "patch"))
                        writer.uint32(/* id 6, wireType 2 =*/50).string(message.patch);
                    if (message.body != null && Object.hasOwnProperty.call(message, "body"))
                        writer.uint32(/* id 7, wireType 2 =*/58).string(message.body);
                    if (message.custom != null && Object.hasOwnProperty.call(message, "custom"))
                        $root.google.api.CustomHttpPattern.encode(message.custom, writer.uint32(/* id 8, wireType 2 =*/66).fork()).ldelim();
                    if (message.additionalBindings != null && message.additionalBindings.length)
                        for (var i = 0; i < message.additionalBindings.length; ++i)
                            $root.google.api.HttpRule.encode(message.additionalBindings[i], writer.uint32(/* id 11, wireType 2 =*/90).fork()).ldelim();
                    if (message.responseBody != null && Object.hasOwnProperty.call(message, "responseBody"))
                        writer.uint32(/* id 12, wireType 2 =*/98).string(message.responseBody);
                    return writer;
                };
    
                /**
                 * Encodes the specified HttpRule message, length delimited. Does not implicitly {@link google.api.HttpRule.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.api.HttpRule
                 * @static
                 * @param {google.api.IHttpRule} message HttpRule message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                HttpRule.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a HttpRule message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.api.HttpRule
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.api.HttpRule} HttpRule
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                HttpRule.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.api.HttpRule();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1: {
                                message.selector = reader.string();
                                break;
                            }
                        case 2: {
                                message.get = reader.string();
                                break;
                            }
                        case 3: {
                                message.put = reader.string();
                                break;
                            }
                        case 4: {
                                message.post = reader.string();
                                break;
                            }
                        case 5: {
                                message["delete"] = reader.string();
                                break;
                            }
                        case 6: {
                                message.patch = reader.string();
                                break;
                            }
                        case 8: {
                                message.custom = $root.google.api.CustomHttpPattern.decode(reader, reader.uint32());
                                break;
                            }
                        case 7: {
                                message.body = reader.string();
                                break;
                            }
                        case 12: {
                                message.responseBody = reader.string();
                                break;
                            }
                        case 11: {
                                if (!(message.additionalBindings && message.additionalBindings.length))
                                    message.additionalBindings = [];
                                message.additionalBindings.push($root.google.api.HttpRule.decode(reader, reader.uint32()));
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a HttpRule message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.api.HttpRule
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.api.HttpRule} HttpRule
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                HttpRule.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a HttpRule message.
                 * @function verify
                 * @memberof google.api.HttpRule
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                HttpRule.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    var properties = {};
                    if (message.selector != null && message.hasOwnProperty("selector"))
                        if (!$util.isString(message.selector))
                            return "selector: string expected";
                    if (message.get != null && message.hasOwnProperty("get")) {
                        properties.pattern = 1;
                        if (!$util.isString(message.get))
                            return "get: string expected";
                    }
                    if (message.put != null && message.hasOwnProperty("put")) {
                        if (properties.pattern === 1)
                            return "pattern: multiple values";
                        properties.pattern = 1;
                        if (!$util.isString(message.put))
                            return "put: string expected";
                    }
                    if (message.post != null && message.hasOwnProperty("post")) {
                        if (properties.pattern === 1)
                            return "pattern: multiple values";
                        properties.pattern = 1;
                        if (!$util.isString(message.post))
                            return "post: string expected";
                    }
                    if (message["delete"] != null && message.hasOwnProperty("delete")) {
                        if (properties.pattern === 1)
                            return "pattern: multiple values";
                        properties.pattern = 1;
                        if (!$util.isString(message["delete"]))
                            return "delete: string expected";
                    }
                    if (message.patch != null && message.hasOwnProperty("patch")) {
                        if (properties.pattern === 1)
                            return "pattern: multiple values";
                        properties.pattern = 1;
                        if (!$util.isString(message.patch))
                            return "patch: string expected";
                    }
                    if (message.custom != null && message.hasOwnProperty("custom")) {
                        if (properties.pattern === 1)
                            return "pattern: multiple values";
                        properties.pattern = 1;
                        {
                            var error = $root.google.api.CustomHttpPattern.verify(message.custom);
                            if (error)
                                return "custom." + error;
                        }
                    }
                    if (message.body != null && message.hasOwnProperty("body"))
                        if (!$util.isString(message.body))
                            return "body: string expected";
                    if (message.responseBody != null && message.hasOwnProperty("responseBody"))
                        if (!$util.isString(message.responseBody))
                            return "responseBody: string expected";
                    if (message.additionalBindings != null && message.hasOwnProperty("additionalBindings")) {
                        if (!Array.isArray(message.additionalBindings))
                            return "additionalBindings: array expected";
                        for (var i = 0; i < message.additionalBindings.length; ++i) {
                            var error = $root.google.api.HttpRule.verify(message.additionalBindings[i]);
                            if (error)
                                return "additionalBindings." + error;
                        }
                    }
                    return null;
                };
    
                /**
                 * Creates a HttpRule message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.api.HttpRule
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.api.HttpRule} HttpRule
                 */
                HttpRule.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.api.HttpRule)
                        return object;
                    var message = new $root.google.api.HttpRule();
                    if (object.selector != null)
                        message.selector = String(object.selector);
                    if (object.get != null)
                        message.get = String(object.get);
                    if (object.put != null)
                        message.put = String(object.put);
                    if (object.post != null)
                        message.post = String(object.post);
                    if (object["delete"] != null)
                        message["delete"] = String(object["delete"]);
                    if (object.patch != null)
                        message.patch = String(object.patch);
                    if (object.custom != null) {
                        if (typeof object.custom !== "object")
                            throw TypeError(".google.api.HttpRule.custom: object expected");
                        message.custom = $root.google.api.CustomHttpPattern.fromObject(object.custom);
                    }
                    if (object.body != null)
                        message.body = String(object.body);
                    if (object.responseBody != null)
                        message.responseBody = String(object.responseBody);
                    if (object.additionalBindings) {
                        if (!Array.isArray(object.additionalBindings))
                            throw TypeError(".google.api.HttpRule.additionalBindings: array expected");
                        message.additionalBindings = [];
                        for (var i = 0; i < object.additionalBindings.length; ++i) {
                            if (typeof object.additionalBindings[i] !== "object")
                                throw TypeError(".google.api.HttpRule.additionalBindings: object expected");
                            message.additionalBindings[i] = $root.google.api.HttpRule.fromObject(object.additionalBindings[i]);
                        }
                    }
                    return message;
                };
    
                /**
                 * Creates a plain object from a HttpRule message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.api.HttpRule
                 * @static
                 * @param {google.api.HttpRule} message HttpRule
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                HttpRule.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.arrays || options.defaults)
                        object.additionalBindings = [];
                    if (options.defaults) {
                        object.selector = "";
                        object.body = "";
                        object.responseBody = "";
                    }
                    if (message.selector != null && message.hasOwnProperty("selector"))
                        object.selector = message.selector;
                    if (message.get != null && message.hasOwnProperty("get")) {
                        object.get = message.get;
                        if (options.oneofs)
                            object.pattern = "get";
                    }
                    if (message.put != null && message.hasOwnProperty("put")) {
                        object.put = message.put;
                        if (options.oneofs)
                            object.pattern = "put";
                    }
                    if (message.post != null && message.hasOwnProperty("post")) {
                        object.post = message.post;
                        if (options.oneofs)
                            object.pattern = "post";
                    }
                    if (message["delete"] != null && message.hasOwnProperty("delete")) {
                        object["delete"] = message["delete"];
                        if (options.oneofs)
                            object.pattern = "delete";
                    }
                    if (message.patch != null && message.hasOwnProperty("patch")) {
                        object.patch = message.patch;
                        if (options.oneofs)
                            object.pattern = "patch";
                    }
                    if (message.body != null && message.hasOwnProperty("body"))
                        object.body = message.body;
                    if (message.custom != null && message.hasOwnProperty("custom")) {
                        object.custom = $root.google.api.CustomHttpPattern.toObject(message.custom, options);
                        if (options.oneofs)
                            object.pattern = "custom";
                    }
                    if (message.additionalBindings && message.additionalBindings.length) {
                        object.additionalBindings = [];
                        for (var j = 0; j < message.additionalBindings.length; ++j)
                            object.additionalBindings[j] = $root.google.api.HttpRule.toObject(message.additionalBindings[j], options);
                    }
                    if (message.responseBody != null && message.hasOwnProperty("responseBody"))
                        object.responseBody = message.responseBody;
                    return object;
                };
    
                /**
                 * Converts this HttpRule to JSON.
                 * @function toJSON
                 * @memberof google.api.HttpRule
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                HttpRule.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for HttpRule
                 * @function getTypeUrl
                 * @memberof google.api.HttpRule
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                HttpRule.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.api.HttpRule";
                };
    
                return HttpRule;
            })();
    
            api.CustomHttpPattern = (function() {
    
                /**
                 * Properties of a CustomHttpPattern.
                 * @memberof google.api
                 * @interface ICustomHttpPattern
                 * @property {string|null} [kind] CustomHttpPattern kind
                 * @property {string|null} [path] CustomHttpPattern path
                 */
    
                /**
                 * Constructs a new CustomHttpPattern.
                 * @memberof google.api
                 * @classdesc Represents a CustomHttpPattern.
                 * @implements ICustomHttpPattern
                 * @constructor
                 * @param {google.api.ICustomHttpPattern=} [properties] Properties to set
                 */
                function CustomHttpPattern(properties) {
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * CustomHttpPattern kind.
                 * @member {string} kind
                 * @memberof google.api.CustomHttpPattern
                 * @instance
                 */
                CustomHttpPattern.prototype.kind = "";
    
                /**
                 * CustomHttpPattern path.
                 * @member {string} path
                 * @memberof google.api.CustomHttpPattern
                 * @instance
                 */
                CustomHttpPattern.prototype.path = "";
    
                /**
                 * Creates a new CustomHttpPattern instance using the specified properties.
                 * @function create
                 * @memberof google.api.CustomHttpPattern
                 * @static
                 * @param {google.api.ICustomHttpPattern=} [properties] Properties to set
                 * @returns {google.api.CustomHttpPattern} CustomHttpPattern instance
                 */
                CustomHttpPattern.create = function create(properties) {
                    return new CustomHttpPattern(properties);
                };
    
                /**
                 * Encodes the specified CustomHttpPattern message. Does not implicitly {@link google.api.CustomHttpPattern.verify|verify} messages.
                 * @function encode
                 * @memberof google.api.CustomHttpPattern
                 * @static
                 * @param {google.api.ICustomHttpPattern} message CustomHttpPattern message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                CustomHttpPattern.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.kind != null && Object.hasOwnProperty.call(message, "kind"))
                        writer.uint32(/* id 1, wireType 2 =*/10).string(message.kind);
                    if (message.path != null && Object.hasOwnProperty.call(message, "path"))
                        writer.uint32(/* id 2, wireType 2 =*/18).string(message.path);
                    return writer;
                };
    
                /**
                 * Encodes the specified CustomHttpPattern message, length delimited. Does not implicitly {@link google.api.CustomHttpPattern.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.api.CustomHttpPattern
                 * @static
                 * @param {google.api.ICustomHttpPattern} message CustomHttpPattern message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                CustomHttpPattern.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a CustomHttpPattern message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.api.CustomHttpPattern
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.api.CustomHttpPattern} CustomHttpPattern
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                CustomHttpPattern.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.api.CustomHttpPattern();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1: {
                                message.kind = reader.string();
                                break;
                            }
                        case 2: {
                                message.path = reader.string();
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a CustomHttpPattern message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.api.CustomHttpPattern
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.api.CustomHttpPattern} CustomHttpPattern
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                CustomHttpPattern.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a CustomHttpPattern message.
                 * @function verify
                 * @memberof google.api.CustomHttpPattern
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                CustomHttpPattern.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.kind != null && message.hasOwnProperty("kind"))
                        if (!$util.isString(message.kind))
                            return "kind: string expected";
                    if (message.path != null && message.hasOwnProperty("path"))
                        if (!$util.isString(message.path))
                            return "path: string expected";
                    return null;
                };
    
                /**
                 * Creates a CustomHttpPattern message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.api.CustomHttpPattern
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.api.CustomHttpPattern} CustomHttpPattern
                 */
                CustomHttpPattern.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.api.CustomHttpPattern)
                        return object;
                    var message = new $root.google.api.CustomHttpPattern();
                    if (object.kind != null)
                        message.kind = String(object.kind);
                    if (object.path != null)
                        message.path = String(object.path);
                    return message;
                };
    
                /**
                 * Creates a plain object from a CustomHttpPattern message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.api.CustomHttpPattern
                 * @static
                 * @param {google.api.CustomHttpPattern} message CustomHttpPattern
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                CustomHttpPattern.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.defaults) {
                        object.kind = "";
                        object.path = "";
                    }
                    if (message.kind != null && message.hasOwnProperty("kind"))
                        object.kind = message.kind;
                    if (message.path != null && message.hasOwnProperty("path"))
                        object.path = message.path;
                    return object;
                };
    
                /**
                 * Converts this CustomHttpPattern to JSON.
                 * @function toJSON
                 * @memberof google.api.CustomHttpPattern
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                CustomHttpPattern.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for CustomHttpPattern
                 * @function getTypeUrl
                 * @memberof google.api.CustomHttpPattern
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                CustomHttpPattern.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.api.CustomHttpPattern";
                };
    
                return CustomHttpPattern;
            })();
    
            return api;
        })();
    
        google.protobuf = (function() {
    
            /**
             * Namespace protobuf.
             * @memberof google
             * @namespace
             */
            var protobuf = {};
    
            protobuf.FileDescriptorSet = (function() {
    
                /**
                 * Properties of a FileDescriptorSet.
                 * @memberof google.protobuf
                 * @interface IFileDescriptorSet
                 * @property {Array.<google.protobuf.IFileDescriptorProto>|null} [file] FileDescriptorSet file
                 */
    
                /**
                 * Constructs a new FileDescriptorSet.
                 * @memberof google.protobuf
                 * @classdesc Represents a FileDescriptorSet.
                 * @implements IFileDescriptorSet
                 * @constructor
                 * @param {google.protobuf.IFileDescriptorSet=} [properties] Properties to set
                 */
                function FileDescriptorSet(properties) {
                    this.file = [];
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * FileDescriptorSet file.
                 * @member {Array.<google.protobuf.IFileDescriptorProto>} file
                 * @memberof google.protobuf.FileDescriptorSet
                 * @instance
                 */
                FileDescriptorSet.prototype.file = $util.emptyArray;
    
                /**
                 * Creates a new FileDescriptorSet instance using the specified properties.
                 * @function create
                 * @memberof google.protobuf.FileDescriptorSet
                 * @static
                 * @param {google.protobuf.IFileDescriptorSet=} [properties] Properties to set
                 * @returns {google.protobuf.FileDescriptorSet} FileDescriptorSet instance
                 */
                FileDescriptorSet.create = function create(properties) {
                    return new FileDescriptorSet(properties);
                };
    
                /**
                 * Encodes the specified FileDescriptorSet message. Does not implicitly {@link google.protobuf.FileDescriptorSet.verify|verify} messages.
                 * @function encode
                 * @memberof google.protobuf.FileDescriptorSet
                 * @static
                 * @param {google.protobuf.IFileDescriptorSet} message FileDescriptorSet message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                FileDescriptorSet.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.file != null && message.file.length)
                        for (var i = 0; i < message.file.length; ++i)
                            $root.google.protobuf.FileDescriptorProto.encode(message.file[i], writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                    return writer;
                };
    
                /**
                 * Encodes the specified FileDescriptorSet message, length delimited. Does not implicitly {@link google.protobuf.FileDescriptorSet.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.protobuf.FileDescriptorSet
                 * @static
                 * @param {google.protobuf.IFileDescriptorSet} message FileDescriptorSet message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                FileDescriptorSet.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a FileDescriptorSet message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.protobuf.FileDescriptorSet
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.protobuf.FileDescriptorSet} FileDescriptorSet
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                FileDescriptorSet.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.FileDescriptorSet();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1: {
                                if (!(message.file && message.file.length))
                                    message.file = [];
                                message.file.push($root.google.protobuf.FileDescriptorProto.decode(reader, reader.uint32()));
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a FileDescriptorSet message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.protobuf.FileDescriptorSet
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.protobuf.FileDescriptorSet} FileDescriptorSet
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                FileDescriptorSet.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a FileDescriptorSet message.
                 * @function verify
                 * @memberof google.protobuf.FileDescriptorSet
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                FileDescriptorSet.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.file != null && message.hasOwnProperty("file")) {
                        if (!Array.isArray(message.file))
                            return "file: array expected";
                        for (var i = 0; i < message.file.length; ++i) {
                            var error = $root.google.protobuf.FileDescriptorProto.verify(message.file[i]);
                            if (error)
                                return "file." + error;
                        }
                    }
                    return null;
                };
    
                /**
                 * Creates a FileDescriptorSet message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.protobuf.FileDescriptorSet
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.protobuf.FileDescriptorSet} FileDescriptorSet
                 */
                FileDescriptorSet.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.protobuf.FileDescriptorSet)
                        return object;
                    var message = new $root.google.protobuf.FileDescriptorSet();
                    if (object.file) {
                        if (!Array.isArray(object.file))
                            throw TypeError(".google.protobuf.FileDescriptorSet.file: array expected");
                        message.file = [];
                        for (var i = 0; i < object.file.length; ++i) {
                            if (typeof object.file[i] !== "object")
                                throw TypeError(".google.protobuf.FileDescriptorSet.file: object expected");
                            message.file[i] = $root.google.protobuf.FileDescriptorProto.fromObject(object.file[i]);
                        }
                    }
                    return message;
                };
    
                /**
                 * Creates a plain object from a FileDescriptorSet message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.protobuf.FileDescriptorSet
                 * @static
                 * @param {google.protobuf.FileDescriptorSet} message FileDescriptorSet
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                FileDescriptorSet.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.arrays || options.defaults)
                        object.file = [];
                    if (message.file && message.file.length) {
                        object.file = [];
                        for (var j = 0; j < message.file.length; ++j)
                            object.file[j] = $root.google.protobuf.FileDescriptorProto.toObject(message.file[j], options);
                    }
                    return object;
                };
    
                /**
                 * Converts this FileDescriptorSet to JSON.
                 * @function toJSON
                 * @memberof google.protobuf.FileDescriptorSet
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                FileDescriptorSet.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for FileDescriptorSet
                 * @function getTypeUrl
                 * @memberof google.protobuf.FileDescriptorSet
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                FileDescriptorSet.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.protobuf.FileDescriptorSet";
                };
    
                return FileDescriptorSet;
            })();
    
            protobuf.FileDescriptorProto = (function() {
    
                /**
                 * Properties of a FileDescriptorProto.
                 * @memberof google.protobuf
                 * @interface IFileDescriptorProto
                 * @property {string|null} [name] FileDescriptorProto name
                 * @property {string|null} ["package"] FileDescriptorProto package
                 * @property {Array.<string>|null} [dependency] FileDescriptorProto dependency
                 * @property {Array.<number>|null} [publicDependency] FileDescriptorProto publicDependency
                 * @property {Array.<number>|null} [weakDependency] FileDescriptorProto weakDependency
                 * @property {Array.<google.protobuf.IDescriptorProto>|null} [messageType] FileDescriptorProto messageType
                 * @property {Array.<google.protobuf.IEnumDescriptorProto>|null} [enumType] FileDescriptorProto enumType
                 * @property {Array.<google.protobuf.IServiceDescriptorProto>|null} [service] FileDescriptorProto service
                 * @property {Array.<google.protobuf.IFieldDescriptorProto>|null} [extension] FileDescriptorProto extension
                 * @property {google.protobuf.IFileOptions|null} [options] FileDescriptorProto options
                 * @property {google.protobuf.ISourceCodeInfo|null} [sourceCodeInfo] FileDescriptorProto sourceCodeInfo
                 * @property {string|null} [syntax] FileDescriptorProto syntax
                 * @property {string|null} [edition] FileDescriptorProto edition
                 */
    
                /**
                 * Constructs a new FileDescriptorProto.
                 * @memberof google.protobuf
                 * @classdesc Represents a FileDescriptorProto.
                 * @implements IFileDescriptorProto
                 * @constructor
                 * @param {google.protobuf.IFileDescriptorProto=} [properties] Properties to set
                 */
                function FileDescriptorProto(properties) {
                    this.dependency = [];
                    this.publicDependency = [];
                    this.weakDependency = [];
                    this.messageType = [];
                    this.enumType = [];
                    this.service = [];
                    this.extension = [];
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * FileDescriptorProto name.
                 * @member {string} name
                 * @memberof google.protobuf.FileDescriptorProto
                 * @instance
                 */
                FileDescriptorProto.prototype.name = "";
    
                /**
                 * FileDescriptorProto package.
                 * @member {string} package
                 * @memberof google.protobuf.FileDescriptorProto
                 * @instance
                 */
                FileDescriptorProto.prototype["package"] = "";
    
                /**
                 * FileDescriptorProto dependency.
                 * @member {Array.<string>} dependency
                 * @memberof google.protobuf.FileDescriptorProto
                 * @instance
                 */
                FileDescriptorProto.prototype.dependency = $util.emptyArray;
    
                /**
                 * FileDescriptorProto publicDependency.
                 * @member {Array.<number>} publicDependency
                 * @memberof google.protobuf.FileDescriptorProto
                 * @instance
                 */
                FileDescriptorProto.prototype.publicDependency = $util.emptyArray;
    
                /**
                 * FileDescriptorProto weakDependency.
                 * @member {Array.<number>} weakDependency
                 * @memberof google.protobuf.FileDescriptorProto
                 * @instance
                 */
                FileDescriptorProto.prototype.weakDependency = $util.emptyArray;
    
                /**
                 * FileDescriptorProto messageType.
                 * @member {Array.<google.protobuf.IDescriptorProto>} messageType
                 * @memberof google.protobuf.FileDescriptorProto
                 * @instance
                 */
                FileDescriptorProto.prototype.messageType = $util.emptyArray;
    
                /**
                 * FileDescriptorProto enumType.
                 * @member {Array.<google.protobuf.IEnumDescriptorProto>} enumType
                 * @memberof google.protobuf.FileDescriptorProto
                 * @instance
                 */
                FileDescriptorProto.prototype.enumType = $util.emptyArray;
    
                /**
                 * FileDescriptorProto service.
                 * @member {Array.<google.protobuf.IServiceDescriptorProto>} service
                 * @memberof google.protobuf.FileDescriptorProto
                 * @instance
                 */
                FileDescriptorProto.prototype.service = $util.emptyArray;
    
                /**
                 * FileDescriptorProto extension.
                 * @member {Array.<google.protobuf.IFieldDescriptorProto>} extension
                 * @memberof google.protobuf.FileDescriptorProto
                 * @instance
                 */
                FileDescriptorProto.prototype.extension = $util.emptyArray;
    
                /**
                 * FileDescriptorProto options.
                 * @member {google.protobuf.IFileOptions|null|undefined} options
                 * @memberof google.protobuf.FileDescriptorProto
                 * @instance
                 */
                FileDescriptorProto.prototype.options = null;
    
                /**
                 * FileDescriptorProto sourceCodeInfo.
                 * @member {google.protobuf.ISourceCodeInfo|null|undefined} sourceCodeInfo
                 * @memberof google.protobuf.FileDescriptorProto
                 * @instance
                 */
                FileDescriptorProto.prototype.sourceCodeInfo = null;
    
                /**
                 * FileDescriptorProto syntax.
                 * @member {string} syntax
                 * @memberof google.protobuf.FileDescriptorProto
                 * @instance
                 */
                FileDescriptorProto.prototype.syntax = "";
    
                /**
                 * FileDescriptorProto edition.
                 * @member {string} edition
                 * @memberof google.protobuf.FileDescriptorProto
                 * @instance
                 */
                FileDescriptorProto.prototype.edition = "";
    
                /**
                 * Creates a new FileDescriptorProto instance using the specified properties.
                 * @function create
                 * @memberof google.protobuf.FileDescriptorProto
                 * @static
                 * @param {google.protobuf.IFileDescriptorProto=} [properties] Properties to set
                 * @returns {google.protobuf.FileDescriptorProto} FileDescriptorProto instance
                 */
                FileDescriptorProto.create = function create(properties) {
                    return new FileDescriptorProto(properties);
                };
    
                /**
                 * Encodes the specified FileDescriptorProto message. Does not implicitly {@link google.protobuf.FileDescriptorProto.verify|verify} messages.
                 * @function encode
                 * @memberof google.protobuf.FileDescriptorProto
                 * @static
                 * @param {google.protobuf.IFileDescriptorProto} message FileDescriptorProto message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                FileDescriptorProto.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                        writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                    if (message["package"] != null && Object.hasOwnProperty.call(message, "package"))
                        writer.uint32(/* id 2, wireType 2 =*/18).string(message["package"]);
                    if (message.dependency != null && message.dependency.length)
                        for (var i = 0; i < message.dependency.length; ++i)
                            writer.uint32(/* id 3, wireType 2 =*/26).string(message.dependency[i]);
                    if (message.messageType != null && message.messageType.length)
                        for (var i = 0; i < message.messageType.length; ++i)
                            $root.google.protobuf.DescriptorProto.encode(message.messageType[i], writer.uint32(/* id 4, wireType 2 =*/34).fork()).ldelim();
                    if (message.enumType != null && message.enumType.length)
                        for (var i = 0; i < message.enumType.length; ++i)
                            $root.google.protobuf.EnumDescriptorProto.encode(message.enumType[i], writer.uint32(/* id 5, wireType 2 =*/42).fork()).ldelim();
                    if (message.service != null && message.service.length)
                        for (var i = 0; i < message.service.length; ++i)
                            $root.google.protobuf.ServiceDescriptorProto.encode(message.service[i], writer.uint32(/* id 6, wireType 2 =*/50).fork()).ldelim();
                    if (message.extension != null && message.extension.length)
                        for (var i = 0; i < message.extension.length; ++i)
                            $root.google.protobuf.FieldDescriptorProto.encode(message.extension[i], writer.uint32(/* id 7, wireType 2 =*/58).fork()).ldelim();
                    if (message.options != null && Object.hasOwnProperty.call(message, "options"))
                        $root.google.protobuf.FileOptions.encode(message.options, writer.uint32(/* id 8, wireType 2 =*/66).fork()).ldelim();
                    if (message.sourceCodeInfo != null && Object.hasOwnProperty.call(message, "sourceCodeInfo"))
                        $root.google.protobuf.SourceCodeInfo.encode(message.sourceCodeInfo, writer.uint32(/* id 9, wireType 2 =*/74).fork()).ldelim();
                    if (message.publicDependency != null && message.publicDependency.length)
                        for (var i = 0; i < message.publicDependency.length; ++i)
                            writer.uint32(/* id 10, wireType 0 =*/80).int32(message.publicDependency[i]);
                    if (message.weakDependency != null && message.weakDependency.length)
                        for (var i = 0; i < message.weakDependency.length; ++i)
                            writer.uint32(/* id 11, wireType 0 =*/88).int32(message.weakDependency[i]);
                    if (message.syntax != null && Object.hasOwnProperty.call(message, "syntax"))
                        writer.uint32(/* id 12, wireType 2 =*/98).string(message.syntax);
                    if (message.edition != null && Object.hasOwnProperty.call(message, "edition"))
                        writer.uint32(/* id 13, wireType 2 =*/106).string(message.edition);
                    return writer;
                };
    
                /**
                 * Encodes the specified FileDescriptorProto message, length delimited. Does not implicitly {@link google.protobuf.FileDescriptorProto.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.protobuf.FileDescriptorProto
                 * @static
                 * @param {google.protobuf.IFileDescriptorProto} message FileDescriptorProto message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                FileDescriptorProto.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a FileDescriptorProto message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.protobuf.FileDescriptorProto
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.protobuf.FileDescriptorProto} FileDescriptorProto
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                FileDescriptorProto.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.FileDescriptorProto();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1: {
                                message.name = reader.string();
                                break;
                            }
                        case 2: {
                                message["package"] = reader.string();
                                break;
                            }
                        case 3: {
                                if (!(message.dependency && message.dependency.length))
                                    message.dependency = [];
                                message.dependency.push(reader.string());
                                break;
                            }
                        case 10: {
                                if (!(message.publicDependency && message.publicDependency.length))
                                    message.publicDependency = [];
                                if ((tag & 7) === 2) {
                                    var end2 = reader.uint32() + reader.pos;
                                    while (reader.pos < end2)
                                        message.publicDependency.push(reader.int32());
                                } else
                                    message.publicDependency.push(reader.int32());
                                break;
                            }
                        case 11: {
                                if (!(message.weakDependency && message.weakDependency.length))
                                    message.weakDependency = [];
                                if ((tag & 7) === 2) {
                                    var end2 = reader.uint32() + reader.pos;
                                    while (reader.pos < end2)
                                        message.weakDependency.push(reader.int32());
                                } else
                                    message.weakDependency.push(reader.int32());
                                break;
                            }
                        case 4: {
                                if (!(message.messageType && message.messageType.length))
                                    message.messageType = [];
                                message.messageType.push($root.google.protobuf.DescriptorProto.decode(reader, reader.uint32()));
                                break;
                            }
                        case 5: {
                                if (!(message.enumType && message.enumType.length))
                                    message.enumType = [];
                                message.enumType.push($root.google.protobuf.EnumDescriptorProto.decode(reader, reader.uint32()));
                                break;
                            }
                        case 6: {
                                if (!(message.service && message.service.length))
                                    message.service = [];
                                message.service.push($root.google.protobuf.ServiceDescriptorProto.decode(reader, reader.uint32()));
                                break;
                            }
                        case 7: {
                                if (!(message.extension && message.extension.length))
                                    message.extension = [];
                                message.extension.push($root.google.protobuf.FieldDescriptorProto.decode(reader, reader.uint32()));
                                break;
                            }
                        case 8: {
                                message.options = $root.google.protobuf.FileOptions.decode(reader, reader.uint32());
                                break;
                            }
                        case 9: {
                                message.sourceCodeInfo = $root.google.protobuf.SourceCodeInfo.decode(reader, reader.uint32());
                                break;
                            }
                        case 12: {
                                message.syntax = reader.string();
                                break;
                            }
                        case 13: {
                                message.edition = reader.string();
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a FileDescriptorProto message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.protobuf.FileDescriptorProto
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.protobuf.FileDescriptorProto} FileDescriptorProto
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                FileDescriptorProto.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a FileDescriptorProto message.
                 * @function verify
                 * @memberof google.protobuf.FileDescriptorProto
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                FileDescriptorProto.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.name != null && message.hasOwnProperty("name"))
                        if (!$util.isString(message.name))
                            return "name: string expected";
                    if (message["package"] != null && message.hasOwnProperty("package"))
                        if (!$util.isString(message["package"]))
                            return "package: string expected";
                    if (message.dependency != null && message.hasOwnProperty("dependency")) {
                        if (!Array.isArray(message.dependency))
                            return "dependency: array expected";
                        for (var i = 0; i < message.dependency.length; ++i)
                            if (!$util.isString(message.dependency[i]))
                                return "dependency: string[] expected";
                    }
                    if (message.publicDependency != null && message.hasOwnProperty("publicDependency")) {
                        if (!Array.isArray(message.publicDependency))
                            return "publicDependency: array expected";
                        for (var i = 0; i < message.publicDependency.length; ++i)
                            if (!$util.isInteger(message.publicDependency[i]))
                                return "publicDependency: integer[] expected";
                    }
                    if (message.weakDependency != null && message.hasOwnProperty("weakDependency")) {
                        if (!Array.isArray(message.weakDependency))
                            return "weakDependency: array expected";
                        for (var i = 0; i < message.weakDependency.length; ++i)
                            if (!$util.isInteger(message.weakDependency[i]))
                                return "weakDependency: integer[] expected";
                    }
                    if (message.messageType != null && message.hasOwnProperty("messageType")) {
                        if (!Array.isArray(message.messageType))
                            return "messageType: array expected";
                        for (var i = 0; i < message.messageType.length; ++i) {
                            var error = $root.google.protobuf.DescriptorProto.verify(message.messageType[i]);
                            if (error)
                                return "messageType." + error;
                        }
                    }
                    if (message.enumType != null && message.hasOwnProperty("enumType")) {
                        if (!Array.isArray(message.enumType))
                            return "enumType: array expected";
                        for (var i = 0; i < message.enumType.length; ++i) {
                            var error = $root.google.protobuf.EnumDescriptorProto.verify(message.enumType[i]);
                            if (error)
                                return "enumType." + error;
                        }
                    }
                    if (message.service != null && message.hasOwnProperty("service")) {
                        if (!Array.isArray(message.service))
                            return "service: array expected";
                        for (var i = 0; i < message.service.length; ++i) {
                            var error = $root.google.protobuf.ServiceDescriptorProto.verify(message.service[i]);
                            if (error)
                                return "service." + error;
                        }
                    }
                    if (message.extension != null && message.hasOwnProperty("extension")) {
                        if (!Array.isArray(message.extension))
                            return "extension: array expected";
                        for (var i = 0; i < message.extension.length; ++i) {
                            var error = $root.google.protobuf.FieldDescriptorProto.verify(message.extension[i]);
                            if (error)
                                return "extension." + error;
                        }
                    }
                    if (message.options != null && message.hasOwnProperty("options")) {
                        var error = $root.google.protobuf.FileOptions.verify(message.options);
                        if (error)
                            return "options." + error;
                    }
                    if (message.sourceCodeInfo != null && message.hasOwnProperty("sourceCodeInfo")) {
                        var error = $root.google.protobuf.SourceCodeInfo.verify(message.sourceCodeInfo);
                        if (error)
                            return "sourceCodeInfo." + error;
                    }
                    if (message.syntax != null && message.hasOwnProperty("syntax"))
                        if (!$util.isString(message.syntax))
                            return "syntax: string expected";
                    if (message.edition != null && message.hasOwnProperty("edition"))
                        if (!$util.isString(message.edition))
                            return "edition: string expected";
                    return null;
                };
    
                /**
                 * Creates a FileDescriptorProto message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.protobuf.FileDescriptorProto
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.protobuf.FileDescriptorProto} FileDescriptorProto
                 */
                FileDescriptorProto.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.protobuf.FileDescriptorProto)
                        return object;
                    var message = new $root.google.protobuf.FileDescriptorProto();
                    if (object.name != null)
                        message.name = String(object.name);
                    if (object["package"] != null)
                        message["package"] = String(object["package"]);
                    if (object.dependency) {
                        if (!Array.isArray(object.dependency))
                            throw TypeError(".google.protobuf.FileDescriptorProto.dependency: array expected");
                        message.dependency = [];
                        for (var i = 0; i < object.dependency.length; ++i)
                            message.dependency[i] = String(object.dependency[i]);
                    }
                    if (object.publicDependency) {
                        if (!Array.isArray(object.publicDependency))
                            throw TypeError(".google.protobuf.FileDescriptorProto.publicDependency: array expected");
                        message.publicDependency = [];
                        for (var i = 0; i < object.publicDependency.length; ++i)
                            message.publicDependency[i] = object.publicDependency[i] | 0;
                    }
                    if (object.weakDependency) {
                        if (!Array.isArray(object.weakDependency))
                            throw TypeError(".google.protobuf.FileDescriptorProto.weakDependency: array expected");
                        message.weakDependency = [];
                        for (var i = 0; i < object.weakDependency.length; ++i)
                            message.weakDependency[i] = object.weakDependency[i] | 0;
                    }
                    if (object.messageType) {
                        if (!Array.isArray(object.messageType))
                            throw TypeError(".google.protobuf.FileDescriptorProto.messageType: array expected");
                        message.messageType = [];
                        for (var i = 0; i < object.messageType.length; ++i) {
                            if (typeof object.messageType[i] !== "object")
                                throw TypeError(".google.protobuf.FileDescriptorProto.messageType: object expected");
                            message.messageType[i] = $root.google.protobuf.DescriptorProto.fromObject(object.messageType[i]);
                        }
                    }
                    if (object.enumType) {
                        if (!Array.isArray(object.enumType))
                            throw TypeError(".google.protobuf.FileDescriptorProto.enumType: array expected");
                        message.enumType = [];
                        for (var i = 0; i < object.enumType.length; ++i) {
                            if (typeof object.enumType[i] !== "object")
                                throw TypeError(".google.protobuf.FileDescriptorProto.enumType: object expected");
                            message.enumType[i] = $root.google.protobuf.EnumDescriptorProto.fromObject(object.enumType[i]);
                        }
                    }
                    if (object.service) {
                        if (!Array.isArray(object.service))
                            throw TypeError(".google.protobuf.FileDescriptorProto.service: array expected");
                        message.service = [];
                        for (var i = 0; i < object.service.length; ++i) {
                            if (typeof object.service[i] !== "object")
                                throw TypeError(".google.protobuf.FileDescriptorProto.service: object expected");
                            message.service[i] = $root.google.protobuf.ServiceDescriptorProto.fromObject(object.service[i]);
                        }
                    }
                    if (object.extension) {
                        if (!Array.isArray(object.extension))
                            throw TypeError(".google.protobuf.FileDescriptorProto.extension: array expected");
                        message.extension = [];
                        for (var i = 0; i < object.extension.length; ++i) {
                            if (typeof object.extension[i] !== "object")
                                throw TypeError(".google.protobuf.FileDescriptorProto.extension: object expected");
                            message.extension[i] = $root.google.protobuf.FieldDescriptorProto.fromObject(object.extension[i]);
                        }
                    }
                    if (object.options != null) {
                        if (typeof object.options !== "object")
                            throw TypeError(".google.protobuf.FileDescriptorProto.options: object expected");
                        message.options = $root.google.protobuf.FileOptions.fromObject(object.options);
                    }
                    if (object.sourceCodeInfo != null) {
                        if (typeof object.sourceCodeInfo !== "object")
                            throw TypeError(".google.protobuf.FileDescriptorProto.sourceCodeInfo: object expected");
                        message.sourceCodeInfo = $root.google.protobuf.SourceCodeInfo.fromObject(object.sourceCodeInfo);
                    }
                    if (object.syntax != null)
                        message.syntax = String(object.syntax);
                    if (object.edition != null)
                        message.edition = String(object.edition);
                    return message;
                };
    
                /**
                 * Creates a plain object from a FileDescriptorProto message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.protobuf.FileDescriptorProto
                 * @static
                 * @param {google.protobuf.FileDescriptorProto} message FileDescriptorProto
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                FileDescriptorProto.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.arrays || options.defaults) {
                        object.dependency = [];
                        object.messageType = [];
                        object.enumType = [];
                        object.service = [];
                        object.extension = [];
                        object.publicDependency = [];
                        object.weakDependency = [];
                    }
                    if (options.defaults) {
                        object.name = "";
                        object["package"] = "";
                        object.options = null;
                        object.sourceCodeInfo = null;
                        object.syntax = "";
                        object.edition = "";
                    }
                    if (message.name != null && message.hasOwnProperty("name"))
                        object.name = message.name;
                    if (message["package"] != null && message.hasOwnProperty("package"))
                        object["package"] = message["package"];
                    if (message.dependency && message.dependency.length) {
                        object.dependency = [];
                        for (var j = 0; j < message.dependency.length; ++j)
                            object.dependency[j] = message.dependency[j];
                    }
                    if (message.messageType && message.messageType.length) {
                        object.messageType = [];
                        for (var j = 0; j < message.messageType.length; ++j)
                            object.messageType[j] = $root.google.protobuf.DescriptorProto.toObject(message.messageType[j], options);
                    }
                    if (message.enumType && message.enumType.length) {
                        object.enumType = [];
                        for (var j = 0; j < message.enumType.length; ++j)
                            object.enumType[j] = $root.google.protobuf.EnumDescriptorProto.toObject(message.enumType[j], options);
                    }
                    if (message.service && message.service.length) {
                        object.service = [];
                        for (var j = 0; j < message.service.length; ++j)
                            object.service[j] = $root.google.protobuf.ServiceDescriptorProto.toObject(message.service[j], options);
                    }
                    if (message.extension && message.extension.length) {
                        object.extension = [];
                        for (var j = 0; j < message.extension.length; ++j)
                            object.extension[j] = $root.google.protobuf.FieldDescriptorProto.toObject(message.extension[j], options);
                    }
                    if (message.options != null && message.hasOwnProperty("options"))
                        object.options = $root.google.protobuf.FileOptions.toObject(message.options, options);
                    if (message.sourceCodeInfo != null && message.hasOwnProperty("sourceCodeInfo"))
                        object.sourceCodeInfo = $root.google.protobuf.SourceCodeInfo.toObject(message.sourceCodeInfo, options);
                    if (message.publicDependency && message.publicDependency.length) {
                        object.publicDependency = [];
                        for (var j = 0; j < message.publicDependency.length; ++j)
                            object.publicDependency[j] = message.publicDependency[j];
                    }
                    if (message.weakDependency && message.weakDependency.length) {
                        object.weakDependency = [];
                        for (var j = 0; j < message.weakDependency.length; ++j)
                            object.weakDependency[j] = message.weakDependency[j];
                    }
                    if (message.syntax != null && message.hasOwnProperty("syntax"))
                        object.syntax = message.syntax;
                    if (message.edition != null && message.hasOwnProperty("edition"))
                        object.edition = message.edition;
                    return object;
                };
    
                /**
                 * Converts this FileDescriptorProto to JSON.
                 * @function toJSON
                 * @memberof google.protobuf.FileDescriptorProto
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                FileDescriptorProto.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for FileDescriptorProto
                 * @function getTypeUrl
                 * @memberof google.protobuf.FileDescriptorProto
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                FileDescriptorProto.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.protobuf.FileDescriptorProto";
                };
    
                return FileDescriptorProto;
            })();
    
            protobuf.DescriptorProto = (function() {
    
                /**
                 * Properties of a DescriptorProto.
                 * @memberof google.protobuf
                 * @interface IDescriptorProto
                 * @property {string|null} [name] DescriptorProto name
                 * @property {Array.<google.protobuf.IFieldDescriptorProto>|null} [field] DescriptorProto field
                 * @property {Array.<google.protobuf.IFieldDescriptorProto>|null} [extension] DescriptorProto extension
                 * @property {Array.<google.protobuf.IDescriptorProto>|null} [nestedType] DescriptorProto nestedType
                 * @property {Array.<google.protobuf.IEnumDescriptorProto>|null} [enumType] DescriptorProto enumType
                 * @property {Array.<google.protobuf.DescriptorProto.IExtensionRange>|null} [extensionRange] DescriptorProto extensionRange
                 * @property {Array.<google.protobuf.IOneofDescriptorProto>|null} [oneofDecl] DescriptorProto oneofDecl
                 * @property {google.protobuf.IMessageOptions|null} [options] DescriptorProto options
                 * @property {Array.<google.protobuf.DescriptorProto.IReservedRange>|null} [reservedRange] DescriptorProto reservedRange
                 * @property {Array.<string>|null} [reservedName] DescriptorProto reservedName
                 */
    
                /**
                 * Constructs a new DescriptorProto.
                 * @memberof google.protobuf
                 * @classdesc Represents a DescriptorProto.
                 * @implements IDescriptorProto
                 * @constructor
                 * @param {google.protobuf.IDescriptorProto=} [properties] Properties to set
                 */
                function DescriptorProto(properties) {
                    this.field = [];
                    this.extension = [];
                    this.nestedType = [];
                    this.enumType = [];
                    this.extensionRange = [];
                    this.oneofDecl = [];
                    this.reservedRange = [];
                    this.reservedName = [];
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * DescriptorProto name.
                 * @member {string} name
                 * @memberof google.protobuf.DescriptorProto
                 * @instance
                 */
                DescriptorProto.prototype.name = "";
    
                /**
                 * DescriptorProto field.
                 * @member {Array.<google.protobuf.IFieldDescriptorProto>} field
                 * @memberof google.protobuf.DescriptorProto
                 * @instance
                 */
                DescriptorProto.prototype.field = $util.emptyArray;
    
                /**
                 * DescriptorProto extension.
                 * @member {Array.<google.protobuf.IFieldDescriptorProto>} extension
                 * @memberof google.protobuf.DescriptorProto
                 * @instance
                 */
                DescriptorProto.prototype.extension = $util.emptyArray;
    
                /**
                 * DescriptorProto nestedType.
                 * @member {Array.<google.protobuf.IDescriptorProto>} nestedType
                 * @memberof google.protobuf.DescriptorProto
                 * @instance
                 */
                DescriptorProto.prototype.nestedType = $util.emptyArray;
    
                /**
                 * DescriptorProto enumType.
                 * @member {Array.<google.protobuf.IEnumDescriptorProto>} enumType
                 * @memberof google.protobuf.DescriptorProto
                 * @instance
                 */
                DescriptorProto.prototype.enumType = $util.emptyArray;
    
                /**
                 * DescriptorProto extensionRange.
                 * @member {Array.<google.protobuf.DescriptorProto.IExtensionRange>} extensionRange
                 * @memberof google.protobuf.DescriptorProto
                 * @instance
                 */
                DescriptorProto.prototype.extensionRange = $util.emptyArray;
    
                /**
                 * DescriptorProto oneofDecl.
                 * @member {Array.<google.protobuf.IOneofDescriptorProto>} oneofDecl
                 * @memberof google.protobuf.DescriptorProto
                 * @instance
                 */
                DescriptorProto.prototype.oneofDecl = $util.emptyArray;
    
                /**
                 * DescriptorProto options.
                 * @member {google.protobuf.IMessageOptions|null|undefined} options
                 * @memberof google.protobuf.DescriptorProto
                 * @instance
                 */
                DescriptorProto.prototype.options = null;
    
                /**
                 * DescriptorProto reservedRange.
                 * @member {Array.<google.protobuf.DescriptorProto.IReservedRange>} reservedRange
                 * @memberof google.protobuf.DescriptorProto
                 * @instance
                 */
                DescriptorProto.prototype.reservedRange = $util.emptyArray;
    
                /**
                 * DescriptorProto reservedName.
                 * @member {Array.<string>} reservedName
                 * @memberof google.protobuf.DescriptorProto
                 * @instance
                 */
                DescriptorProto.prototype.reservedName = $util.emptyArray;
    
                /**
                 * Creates a new DescriptorProto instance using the specified properties.
                 * @function create
                 * @memberof google.protobuf.DescriptorProto
                 * @static
                 * @param {google.protobuf.IDescriptorProto=} [properties] Properties to set
                 * @returns {google.protobuf.DescriptorProto} DescriptorProto instance
                 */
                DescriptorProto.create = function create(properties) {
                    return new DescriptorProto(properties);
                };
    
                /**
                 * Encodes the specified DescriptorProto message. Does not implicitly {@link google.protobuf.DescriptorProto.verify|verify} messages.
                 * @function encode
                 * @memberof google.protobuf.DescriptorProto
                 * @static
                 * @param {google.protobuf.IDescriptorProto} message DescriptorProto message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                DescriptorProto.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                        writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                    if (message.field != null && message.field.length)
                        for (var i = 0; i < message.field.length; ++i)
                            $root.google.protobuf.FieldDescriptorProto.encode(message.field[i], writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                    if (message.nestedType != null && message.nestedType.length)
                        for (var i = 0; i < message.nestedType.length; ++i)
                            $root.google.protobuf.DescriptorProto.encode(message.nestedType[i], writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();
                    if (message.enumType != null && message.enumType.length)
                        for (var i = 0; i < message.enumType.length; ++i)
                            $root.google.protobuf.EnumDescriptorProto.encode(message.enumType[i], writer.uint32(/* id 4, wireType 2 =*/34).fork()).ldelim();
                    if (message.extensionRange != null && message.extensionRange.length)
                        for (var i = 0; i < message.extensionRange.length; ++i)
                            $root.google.protobuf.DescriptorProto.ExtensionRange.encode(message.extensionRange[i], writer.uint32(/* id 5, wireType 2 =*/42).fork()).ldelim();
                    if (message.extension != null && message.extension.length)
                        for (var i = 0; i < message.extension.length; ++i)
                            $root.google.protobuf.FieldDescriptorProto.encode(message.extension[i], writer.uint32(/* id 6, wireType 2 =*/50).fork()).ldelim();
                    if (message.options != null && Object.hasOwnProperty.call(message, "options"))
                        $root.google.protobuf.MessageOptions.encode(message.options, writer.uint32(/* id 7, wireType 2 =*/58).fork()).ldelim();
                    if (message.oneofDecl != null && message.oneofDecl.length)
                        for (var i = 0; i < message.oneofDecl.length; ++i)
                            $root.google.protobuf.OneofDescriptorProto.encode(message.oneofDecl[i], writer.uint32(/* id 8, wireType 2 =*/66).fork()).ldelim();
                    if (message.reservedRange != null && message.reservedRange.length)
                        for (var i = 0; i < message.reservedRange.length; ++i)
                            $root.google.protobuf.DescriptorProto.ReservedRange.encode(message.reservedRange[i], writer.uint32(/* id 9, wireType 2 =*/74).fork()).ldelim();
                    if (message.reservedName != null && message.reservedName.length)
                        for (var i = 0; i < message.reservedName.length; ++i)
                            writer.uint32(/* id 10, wireType 2 =*/82).string(message.reservedName[i]);
                    return writer;
                };
    
                /**
                 * Encodes the specified DescriptorProto message, length delimited. Does not implicitly {@link google.protobuf.DescriptorProto.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.protobuf.DescriptorProto
                 * @static
                 * @param {google.protobuf.IDescriptorProto} message DescriptorProto message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                DescriptorProto.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a DescriptorProto message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.protobuf.DescriptorProto
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.protobuf.DescriptorProto} DescriptorProto
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                DescriptorProto.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.DescriptorProto();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1: {
                                message.name = reader.string();
                                break;
                            }
                        case 2: {
                                if (!(message.field && message.field.length))
                                    message.field = [];
                                message.field.push($root.google.protobuf.FieldDescriptorProto.decode(reader, reader.uint32()));
                                break;
                            }
                        case 6: {
                                if (!(message.extension && message.extension.length))
                                    message.extension = [];
                                message.extension.push($root.google.protobuf.FieldDescriptorProto.decode(reader, reader.uint32()));
                                break;
                            }
                        case 3: {
                                if (!(message.nestedType && message.nestedType.length))
                                    message.nestedType = [];
                                message.nestedType.push($root.google.protobuf.DescriptorProto.decode(reader, reader.uint32()));
                                break;
                            }
                        case 4: {
                                if (!(message.enumType && message.enumType.length))
                                    message.enumType = [];
                                message.enumType.push($root.google.protobuf.EnumDescriptorProto.decode(reader, reader.uint32()));
                                break;
                            }
                        case 5: {
                                if (!(message.extensionRange && message.extensionRange.length))
                                    message.extensionRange = [];
                                message.extensionRange.push($root.google.protobuf.DescriptorProto.ExtensionRange.decode(reader, reader.uint32()));
                                break;
                            }
                        case 8: {
                                if (!(message.oneofDecl && message.oneofDecl.length))
                                    message.oneofDecl = [];
                                message.oneofDecl.push($root.google.protobuf.OneofDescriptorProto.decode(reader, reader.uint32()));
                                break;
                            }
                        case 7: {
                                message.options = $root.google.protobuf.MessageOptions.decode(reader, reader.uint32());
                                break;
                            }
                        case 9: {
                                if (!(message.reservedRange && message.reservedRange.length))
                                    message.reservedRange = [];
                                message.reservedRange.push($root.google.protobuf.DescriptorProto.ReservedRange.decode(reader, reader.uint32()));
                                break;
                            }
                        case 10: {
                                if (!(message.reservedName && message.reservedName.length))
                                    message.reservedName = [];
                                message.reservedName.push(reader.string());
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a DescriptorProto message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.protobuf.DescriptorProto
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.protobuf.DescriptorProto} DescriptorProto
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                DescriptorProto.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a DescriptorProto message.
                 * @function verify
                 * @memberof google.protobuf.DescriptorProto
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                DescriptorProto.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.name != null && message.hasOwnProperty("name"))
                        if (!$util.isString(message.name))
                            return "name: string expected";
                    if (message.field != null && message.hasOwnProperty("field")) {
                        if (!Array.isArray(message.field))
                            return "field: array expected";
                        for (var i = 0; i < message.field.length; ++i) {
                            var error = $root.google.protobuf.FieldDescriptorProto.verify(message.field[i]);
                            if (error)
                                return "field." + error;
                        }
                    }
                    if (message.extension != null && message.hasOwnProperty("extension")) {
                        if (!Array.isArray(message.extension))
                            return "extension: array expected";
                        for (var i = 0; i < message.extension.length; ++i) {
                            var error = $root.google.protobuf.FieldDescriptorProto.verify(message.extension[i]);
                            if (error)
                                return "extension." + error;
                        }
                    }
                    if (message.nestedType != null && message.hasOwnProperty("nestedType")) {
                        if (!Array.isArray(message.nestedType))
                            return "nestedType: array expected";
                        for (var i = 0; i < message.nestedType.length; ++i) {
                            var error = $root.google.protobuf.DescriptorProto.verify(message.nestedType[i]);
                            if (error)
                                return "nestedType." + error;
                        }
                    }
                    if (message.enumType != null && message.hasOwnProperty("enumType")) {
                        if (!Array.isArray(message.enumType))
                            return "enumType: array expected";
                        for (var i = 0; i < message.enumType.length; ++i) {
                            var error = $root.google.protobuf.EnumDescriptorProto.verify(message.enumType[i]);
                            if (error)
                                return "enumType." + error;
                        }
                    }
                    if (message.extensionRange != null && message.hasOwnProperty("extensionRange")) {
                        if (!Array.isArray(message.extensionRange))
                            return "extensionRange: array expected";
                        for (var i = 0; i < message.extensionRange.length; ++i) {
                            var error = $root.google.protobuf.DescriptorProto.ExtensionRange.verify(message.extensionRange[i]);
                            if (error)
                                return "extensionRange." + error;
                        }
                    }
                    if (message.oneofDecl != null && message.hasOwnProperty("oneofDecl")) {
                        if (!Array.isArray(message.oneofDecl))
                            return "oneofDecl: array expected";
                        for (var i = 0; i < message.oneofDecl.length; ++i) {
                            var error = $root.google.protobuf.OneofDescriptorProto.verify(message.oneofDecl[i]);
                            if (error)
                                return "oneofDecl." + error;
                        }
                    }
                    if (message.options != null && message.hasOwnProperty("options")) {
                        var error = $root.google.protobuf.MessageOptions.verify(message.options);
                        if (error)
                            return "options." + error;
                    }
                    if (message.reservedRange != null && message.hasOwnProperty("reservedRange")) {
                        if (!Array.isArray(message.reservedRange))
                            return "reservedRange: array expected";
                        for (var i = 0; i < message.reservedRange.length; ++i) {
                            var error = $root.google.protobuf.DescriptorProto.ReservedRange.verify(message.reservedRange[i]);
                            if (error)
                                return "reservedRange." + error;
                        }
                    }
                    if (message.reservedName != null && message.hasOwnProperty("reservedName")) {
                        if (!Array.isArray(message.reservedName))
                            return "reservedName: array expected";
                        for (var i = 0; i < message.reservedName.length; ++i)
                            if (!$util.isString(message.reservedName[i]))
                                return "reservedName: string[] expected";
                    }
                    return null;
                };
    
                /**
                 * Creates a DescriptorProto message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.protobuf.DescriptorProto
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.protobuf.DescriptorProto} DescriptorProto
                 */
                DescriptorProto.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.protobuf.DescriptorProto)
                        return object;
                    var message = new $root.google.protobuf.DescriptorProto();
                    if (object.name != null)
                        message.name = String(object.name);
                    if (object.field) {
                        if (!Array.isArray(object.field))
                            throw TypeError(".google.protobuf.DescriptorProto.field: array expected");
                        message.field = [];
                        for (var i = 0; i < object.field.length; ++i) {
                            if (typeof object.field[i] !== "object")
                                throw TypeError(".google.protobuf.DescriptorProto.field: object expected");
                            message.field[i] = $root.google.protobuf.FieldDescriptorProto.fromObject(object.field[i]);
                        }
                    }
                    if (object.extension) {
                        if (!Array.isArray(object.extension))
                            throw TypeError(".google.protobuf.DescriptorProto.extension: array expected");
                        message.extension = [];
                        for (var i = 0; i < object.extension.length; ++i) {
                            if (typeof object.extension[i] !== "object")
                                throw TypeError(".google.protobuf.DescriptorProto.extension: object expected");
                            message.extension[i] = $root.google.protobuf.FieldDescriptorProto.fromObject(object.extension[i]);
                        }
                    }
                    if (object.nestedType) {
                        if (!Array.isArray(object.nestedType))
                            throw TypeError(".google.protobuf.DescriptorProto.nestedType: array expected");
                        message.nestedType = [];
                        for (var i = 0; i < object.nestedType.length; ++i) {
                            if (typeof object.nestedType[i] !== "object")
                                throw TypeError(".google.protobuf.DescriptorProto.nestedType: object expected");
                            message.nestedType[i] = $root.google.protobuf.DescriptorProto.fromObject(object.nestedType[i]);
                        }
                    }
                    if (object.enumType) {
                        if (!Array.isArray(object.enumType))
                            throw TypeError(".google.protobuf.DescriptorProto.enumType: array expected");
                        message.enumType = [];
                        for (var i = 0; i < object.enumType.length; ++i) {
                            if (typeof object.enumType[i] !== "object")
                                throw TypeError(".google.protobuf.DescriptorProto.enumType: object expected");
                            message.enumType[i] = $root.google.protobuf.EnumDescriptorProto.fromObject(object.enumType[i]);
                        }
                    }
                    if (object.extensionRange) {
                        if (!Array.isArray(object.extensionRange))
                            throw TypeError(".google.protobuf.DescriptorProto.extensionRange: array expected");
                        message.extensionRange = [];
                        for (var i = 0; i < object.extensionRange.length; ++i) {
                            if (typeof object.extensionRange[i] !== "object")
                                throw TypeError(".google.protobuf.DescriptorProto.extensionRange: object expected");
                            message.extensionRange[i] = $root.google.protobuf.DescriptorProto.ExtensionRange.fromObject(object.extensionRange[i]);
                        }
                    }
                    if (object.oneofDecl) {
                        if (!Array.isArray(object.oneofDecl))
                            throw TypeError(".google.protobuf.DescriptorProto.oneofDecl: array expected");
                        message.oneofDecl = [];
                        for (var i = 0; i < object.oneofDecl.length; ++i) {
                            if (typeof object.oneofDecl[i] !== "object")
                                throw TypeError(".google.protobuf.DescriptorProto.oneofDecl: object expected");
                            message.oneofDecl[i] = $root.google.protobuf.OneofDescriptorProto.fromObject(object.oneofDecl[i]);
                        }
                    }
                    if (object.options != null) {
                        if (typeof object.options !== "object")
                            throw TypeError(".google.protobuf.DescriptorProto.options: object expected");
                        message.options = $root.google.protobuf.MessageOptions.fromObject(object.options);
                    }
                    if (object.reservedRange) {
                        if (!Array.isArray(object.reservedRange))
                            throw TypeError(".google.protobuf.DescriptorProto.reservedRange: array expected");
                        message.reservedRange = [];
                        for (var i = 0; i < object.reservedRange.length; ++i) {
                            if (typeof object.reservedRange[i] !== "object")
                                throw TypeError(".google.protobuf.DescriptorProto.reservedRange: object expected");
                            message.reservedRange[i] = $root.google.protobuf.DescriptorProto.ReservedRange.fromObject(object.reservedRange[i]);
                        }
                    }
                    if (object.reservedName) {
                        if (!Array.isArray(object.reservedName))
                            throw TypeError(".google.protobuf.DescriptorProto.reservedName: array expected");
                        message.reservedName = [];
                        for (var i = 0; i < object.reservedName.length; ++i)
                            message.reservedName[i] = String(object.reservedName[i]);
                    }
                    return message;
                };
    
                /**
                 * Creates a plain object from a DescriptorProto message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.protobuf.DescriptorProto
                 * @static
                 * @param {google.protobuf.DescriptorProto} message DescriptorProto
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                DescriptorProto.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.arrays || options.defaults) {
                        object.field = [];
                        object.nestedType = [];
                        object.enumType = [];
                        object.extensionRange = [];
                        object.extension = [];
                        object.oneofDecl = [];
                        object.reservedRange = [];
                        object.reservedName = [];
                    }
                    if (options.defaults) {
                        object.name = "";
                        object.options = null;
                    }
                    if (message.name != null && message.hasOwnProperty("name"))
                        object.name = message.name;
                    if (message.field && message.field.length) {
                        object.field = [];
                        for (var j = 0; j < message.field.length; ++j)
                            object.field[j] = $root.google.protobuf.FieldDescriptorProto.toObject(message.field[j], options);
                    }
                    if (message.nestedType && message.nestedType.length) {
                        object.nestedType = [];
                        for (var j = 0; j < message.nestedType.length; ++j)
                            object.nestedType[j] = $root.google.protobuf.DescriptorProto.toObject(message.nestedType[j], options);
                    }
                    if (message.enumType && message.enumType.length) {
                        object.enumType = [];
                        for (var j = 0; j < message.enumType.length; ++j)
                            object.enumType[j] = $root.google.protobuf.EnumDescriptorProto.toObject(message.enumType[j], options);
                    }
                    if (message.extensionRange && message.extensionRange.length) {
                        object.extensionRange = [];
                        for (var j = 0; j < message.extensionRange.length; ++j)
                            object.extensionRange[j] = $root.google.protobuf.DescriptorProto.ExtensionRange.toObject(message.extensionRange[j], options);
                    }
                    if (message.extension && message.extension.length) {
                        object.extension = [];
                        for (var j = 0; j < message.extension.length; ++j)
                            object.extension[j] = $root.google.protobuf.FieldDescriptorProto.toObject(message.extension[j], options);
                    }
                    if (message.options != null && message.hasOwnProperty("options"))
                        object.options = $root.google.protobuf.MessageOptions.toObject(message.options, options);
                    if (message.oneofDecl && message.oneofDecl.length) {
                        object.oneofDecl = [];
                        for (var j = 0; j < message.oneofDecl.length; ++j)
                            object.oneofDecl[j] = $root.google.protobuf.OneofDescriptorProto.toObject(message.oneofDecl[j], options);
                    }
                    if (message.reservedRange && message.reservedRange.length) {
                        object.reservedRange = [];
                        for (var j = 0; j < message.reservedRange.length; ++j)
                            object.reservedRange[j] = $root.google.protobuf.DescriptorProto.ReservedRange.toObject(message.reservedRange[j], options);
                    }
                    if (message.reservedName && message.reservedName.length) {
                        object.reservedName = [];
                        for (var j = 0; j < message.reservedName.length; ++j)
                            object.reservedName[j] = message.reservedName[j];
                    }
                    return object;
                };
    
                /**
                 * Converts this DescriptorProto to JSON.
                 * @function toJSON
                 * @memberof google.protobuf.DescriptorProto
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                DescriptorProto.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for DescriptorProto
                 * @function getTypeUrl
                 * @memberof google.protobuf.DescriptorProto
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                DescriptorProto.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.protobuf.DescriptorProto";
                };
    
                DescriptorProto.ExtensionRange = (function() {
    
                    /**
                     * Properties of an ExtensionRange.
                     * @memberof google.protobuf.DescriptorProto
                     * @interface IExtensionRange
                     * @property {number|null} [start] ExtensionRange start
                     * @property {number|null} [end] ExtensionRange end
                     * @property {google.protobuf.IExtensionRangeOptions|null} [options] ExtensionRange options
                     */
    
                    /**
                     * Constructs a new ExtensionRange.
                     * @memberof google.protobuf.DescriptorProto
                     * @classdesc Represents an ExtensionRange.
                     * @implements IExtensionRange
                     * @constructor
                     * @param {google.protobuf.DescriptorProto.IExtensionRange=} [properties] Properties to set
                     */
                    function ExtensionRange(properties) {
                        if (properties)
                            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                if (properties[keys[i]] != null)
                                    this[keys[i]] = properties[keys[i]];
                    }
    
                    /**
                     * ExtensionRange start.
                     * @member {number} start
                     * @memberof google.protobuf.DescriptorProto.ExtensionRange
                     * @instance
                     */
                    ExtensionRange.prototype.start = 0;
    
                    /**
                     * ExtensionRange end.
                     * @member {number} end
                     * @memberof google.protobuf.DescriptorProto.ExtensionRange
                     * @instance
                     */
                    ExtensionRange.prototype.end = 0;
    
                    /**
                     * ExtensionRange options.
                     * @member {google.protobuf.IExtensionRangeOptions|null|undefined} options
                     * @memberof google.protobuf.DescriptorProto.ExtensionRange
                     * @instance
                     */
                    ExtensionRange.prototype.options = null;
    
                    /**
                     * Creates a new ExtensionRange instance using the specified properties.
                     * @function create
                     * @memberof google.protobuf.DescriptorProto.ExtensionRange
                     * @static
                     * @param {google.protobuf.DescriptorProto.IExtensionRange=} [properties] Properties to set
                     * @returns {google.protobuf.DescriptorProto.ExtensionRange} ExtensionRange instance
                     */
                    ExtensionRange.create = function create(properties) {
                        return new ExtensionRange(properties);
                    };
    
                    /**
                     * Encodes the specified ExtensionRange message. Does not implicitly {@link google.protobuf.DescriptorProto.ExtensionRange.verify|verify} messages.
                     * @function encode
                     * @memberof google.protobuf.DescriptorProto.ExtensionRange
                     * @static
                     * @param {google.protobuf.DescriptorProto.IExtensionRange} message ExtensionRange message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    ExtensionRange.encode = function encode(message, writer) {
                        if (!writer)
                            writer = $Writer.create();
                        if (message.start != null && Object.hasOwnProperty.call(message, "start"))
                            writer.uint32(/* id 1, wireType 0 =*/8).int32(message.start);
                        if (message.end != null && Object.hasOwnProperty.call(message, "end"))
                            writer.uint32(/* id 2, wireType 0 =*/16).int32(message.end);
                        if (message.options != null && Object.hasOwnProperty.call(message, "options"))
                            $root.google.protobuf.ExtensionRangeOptions.encode(message.options, writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();
                        return writer;
                    };
    
                    /**
                     * Encodes the specified ExtensionRange message, length delimited. Does not implicitly {@link google.protobuf.DescriptorProto.ExtensionRange.verify|verify} messages.
                     * @function encodeDelimited
                     * @memberof google.protobuf.DescriptorProto.ExtensionRange
                     * @static
                     * @param {google.protobuf.DescriptorProto.IExtensionRange} message ExtensionRange message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    ExtensionRange.encodeDelimited = function encodeDelimited(message, writer) {
                        return this.encode(message, writer).ldelim();
                    };
    
                    /**
                     * Decodes an ExtensionRange message from the specified reader or buffer.
                     * @function decode
                     * @memberof google.protobuf.DescriptorProto.ExtensionRange
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @param {number} [length] Message length if known beforehand
                     * @returns {google.protobuf.DescriptorProto.ExtensionRange} ExtensionRange
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    ExtensionRange.decode = function decode(reader, length) {
                        if (!(reader instanceof $Reader))
                            reader = $Reader.create(reader);
                        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.DescriptorProto.ExtensionRange();
                        while (reader.pos < end) {
                            var tag = reader.uint32();
                            switch (tag >>> 3) {
                            case 1: {
                                    message.start = reader.int32();
                                    break;
                                }
                            case 2: {
                                    message.end = reader.int32();
                                    break;
                                }
                            case 3: {
                                    message.options = $root.google.protobuf.ExtensionRangeOptions.decode(reader, reader.uint32());
                                    break;
                                }
                            default:
                                reader.skipType(tag & 7);
                                break;
                            }
                        }
                        return message;
                    };
    
                    /**
                     * Decodes an ExtensionRange message from the specified reader or buffer, length delimited.
                     * @function decodeDelimited
                     * @memberof google.protobuf.DescriptorProto.ExtensionRange
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @returns {google.protobuf.DescriptorProto.ExtensionRange} ExtensionRange
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    ExtensionRange.decodeDelimited = function decodeDelimited(reader) {
                        if (!(reader instanceof $Reader))
                            reader = new $Reader(reader);
                        return this.decode(reader, reader.uint32());
                    };
    
                    /**
                     * Verifies an ExtensionRange message.
                     * @function verify
                     * @memberof google.protobuf.DescriptorProto.ExtensionRange
                     * @static
                     * @param {Object.<string,*>} message Plain object to verify
                     * @returns {string|null} `null` if valid, otherwise the reason why it is not
                     */
                    ExtensionRange.verify = function verify(message) {
                        if (typeof message !== "object" || message === null)
                            return "object expected";
                        if (message.start != null && message.hasOwnProperty("start"))
                            if (!$util.isInteger(message.start))
                                return "start: integer expected";
                        if (message.end != null && message.hasOwnProperty("end"))
                            if (!$util.isInteger(message.end))
                                return "end: integer expected";
                        if (message.options != null && message.hasOwnProperty("options")) {
                            var error = $root.google.protobuf.ExtensionRangeOptions.verify(message.options);
                            if (error)
                                return "options." + error;
                        }
                        return null;
                    };
    
                    /**
                     * Creates an ExtensionRange message from a plain object. Also converts values to their respective internal types.
                     * @function fromObject
                     * @memberof google.protobuf.DescriptorProto.ExtensionRange
                     * @static
                     * @param {Object.<string,*>} object Plain object
                     * @returns {google.protobuf.DescriptorProto.ExtensionRange} ExtensionRange
                     */
                    ExtensionRange.fromObject = function fromObject(object) {
                        if (object instanceof $root.google.protobuf.DescriptorProto.ExtensionRange)
                            return object;
                        var message = new $root.google.protobuf.DescriptorProto.ExtensionRange();
                        if (object.start != null)
                            message.start = object.start | 0;
                        if (object.end != null)
                            message.end = object.end | 0;
                        if (object.options != null) {
                            if (typeof object.options !== "object")
                                throw TypeError(".google.protobuf.DescriptorProto.ExtensionRange.options: object expected");
                            message.options = $root.google.protobuf.ExtensionRangeOptions.fromObject(object.options);
                        }
                        return message;
                    };
    
                    /**
                     * Creates a plain object from an ExtensionRange message. Also converts values to other types if specified.
                     * @function toObject
                     * @memberof google.protobuf.DescriptorProto.ExtensionRange
                     * @static
                     * @param {google.protobuf.DescriptorProto.ExtensionRange} message ExtensionRange
                     * @param {$protobuf.IConversionOptions} [options] Conversion options
                     * @returns {Object.<string,*>} Plain object
                     */
                    ExtensionRange.toObject = function toObject(message, options) {
                        if (!options)
                            options = {};
                        var object = {};
                        if (options.defaults) {
                            object.start = 0;
                            object.end = 0;
                            object.options = null;
                        }
                        if (message.start != null && message.hasOwnProperty("start"))
                            object.start = message.start;
                        if (message.end != null && message.hasOwnProperty("end"))
                            object.end = message.end;
                        if (message.options != null && message.hasOwnProperty("options"))
                            object.options = $root.google.protobuf.ExtensionRangeOptions.toObject(message.options, options);
                        return object;
                    };
    
                    /**
                     * Converts this ExtensionRange to JSON.
                     * @function toJSON
                     * @memberof google.protobuf.DescriptorProto.ExtensionRange
                     * @instance
                     * @returns {Object.<string,*>} JSON object
                     */
                    ExtensionRange.prototype.toJSON = function toJSON() {
                        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                    };
    
                    /**
                     * Gets the default type url for ExtensionRange
                     * @function getTypeUrl
                     * @memberof google.protobuf.DescriptorProto.ExtensionRange
                     * @static
                     * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                     * @returns {string} The default type url
                     */
                    ExtensionRange.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                        if (typeUrlPrefix === undefined) {
                            typeUrlPrefix = "type.googleapis.com";
                        }
                        return typeUrlPrefix + "/google.protobuf.DescriptorProto.ExtensionRange";
                    };
    
                    return ExtensionRange;
                })();
    
                DescriptorProto.ReservedRange = (function() {
    
                    /**
                     * Properties of a ReservedRange.
                     * @memberof google.protobuf.DescriptorProto
                     * @interface IReservedRange
                     * @property {number|null} [start] ReservedRange start
                     * @property {number|null} [end] ReservedRange end
                     */
    
                    /**
                     * Constructs a new ReservedRange.
                     * @memberof google.protobuf.DescriptorProto
                     * @classdesc Represents a ReservedRange.
                     * @implements IReservedRange
                     * @constructor
                     * @param {google.protobuf.DescriptorProto.IReservedRange=} [properties] Properties to set
                     */
                    function ReservedRange(properties) {
                        if (properties)
                            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                if (properties[keys[i]] != null)
                                    this[keys[i]] = properties[keys[i]];
                    }
    
                    /**
                     * ReservedRange start.
                     * @member {number} start
                     * @memberof google.protobuf.DescriptorProto.ReservedRange
                     * @instance
                     */
                    ReservedRange.prototype.start = 0;
    
                    /**
                     * ReservedRange end.
                     * @member {number} end
                     * @memberof google.protobuf.DescriptorProto.ReservedRange
                     * @instance
                     */
                    ReservedRange.prototype.end = 0;
    
                    /**
                     * Creates a new ReservedRange instance using the specified properties.
                     * @function create
                     * @memberof google.protobuf.DescriptorProto.ReservedRange
                     * @static
                     * @param {google.protobuf.DescriptorProto.IReservedRange=} [properties] Properties to set
                     * @returns {google.protobuf.DescriptorProto.ReservedRange} ReservedRange instance
                     */
                    ReservedRange.create = function create(properties) {
                        return new ReservedRange(properties);
                    };
    
                    /**
                     * Encodes the specified ReservedRange message. Does not implicitly {@link google.protobuf.DescriptorProto.ReservedRange.verify|verify} messages.
                     * @function encode
                     * @memberof google.protobuf.DescriptorProto.ReservedRange
                     * @static
                     * @param {google.protobuf.DescriptorProto.IReservedRange} message ReservedRange message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    ReservedRange.encode = function encode(message, writer) {
                        if (!writer)
                            writer = $Writer.create();
                        if (message.start != null && Object.hasOwnProperty.call(message, "start"))
                            writer.uint32(/* id 1, wireType 0 =*/8).int32(message.start);
                        if (message.end != null && Object.hasOwnProperty.call(message, "end"))
                            writer.uint32(/* id 2, wireType 0 =*/16).int32(message.end);
                        return writer;
                    };
    
                    /**
                     * Encodes the specified ReservedRange message, length delimited. Does not implicitly {@link google.protobuf.DescriptorProto.ReservedRange.verify|verify} messages.
                     * @function encodeDelimited
                     * @memberof google.protobuf.DescriptorProto.ReservedRange
                     * @static
                     * @param {google.protobuf.DescriptorProto.IReservedRange} message ReservedRange message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    ReservedRange.encodeDelimited = function encodeDelimited(message, writer) {
                        return this.encode(message, writer).ldelim();
                    };
    
                    /**
                     * Decodes a ReservedRange message from the specified reader or buffer.
                     * @function decode
                     * @memberof google.protobuf.DescriptorProto.ReservedRange
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @param {number} [length] Message length if known beforehand
                     * @returns {google.protobuf.DescriptorProto.ReservedRange} ReservedRange
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    ReservedRange.decode = function decode(reader, length) {
                        if (!(reader instanceof $Reader))
                            reader = $Reader.create(reader);
                        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.DescriptorProto.ReservedRange();
                        while (reader.pos < end) {
                            var tag = reader.uint32();
                            switch (tag >>> 3) {
                            case 1: {
                                    message.start = reader.int32();
                                    break;
                                }
                            case 2: {
                                    message.end = reader.int32();
                                    break;
                                }
                            default:
                                reader.skipType(tag & 7);
                                break;
                            }
                        }
                        return message;
                    };
    
                    /**
                     * Decodes a ReservedRange message from the specified reader or buffer, length delimited.
                     * @function decodeDelimited
                     * @memberof google.protobuf.DescriptorProto.ReservedRange
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @returns {google.protobuf.DescriptorProto.ReservedRange} ReservedRange
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    ReservedRange.decodeDelimited = function decodeDelimited(reader) {
                        if (!(reader instanceof $Reader))
                            reader = new $Reader(reader);
                        return this.decode(reader, reader.uint32());
                    };
    
                    /**
                     * Verifies a ReservedRange message.
                     * @function verify
                     * @memberof google.protobuf.DescriptorProto.ReservedRange
                     * @static
                     * @param {Object.<string,*>} message Plain object to verify
                     * @returns {string|null} `null` if valid, otherwise the reason why it is not
                     */
                    ReservedRange.verify = function verify(message) {
                        if (typeof message !== "object" || message === null)
                            return "object expected";
                        if (message.start != null && message.hasOwnProperty("start"))
                            if (!$util.isInteger(message.start))
                                return "start: integer expected";
                        if (message.end != null && message.hasOwnProperty("end"))
                            if (!$util.isInteger(message.end))
                                return "end: integer expected";
                        return null;
                    };
    
                    /**
                     * Creates a ReservedRange message from a plain object. Also converts values to their respective internal types.
                     * @function fromObject
                     * @memberof google.protobuf.DescriptorProto.ReservedRange
                     * @static
                     * @param {Object.<string,*>} object Plain object
                     * @returns {google.protobuf.DescriptorProto.ReservedRange} ReservedRange
                     */
                    ReservedRange.fromObject = function fromObject(object) {
                        if (object instanceof $root.google.protobuf.DescriptorProto.ReservedRange)
                            return object;
                        var message = new $root.google.protobuf.DescriptorProto.ReservedRange();
                        if (object.start != null)
                            message.start = object.start | 0;
                        if (object.end != null)
                            message.end = object.end | 0;
                        return message;
                    };
    
                    /**
                     * Creates a plain object from a ReservedRange message. Also converts values to other types if specified.
                     * @function toObject
                     * @memberof google.protobuf.DescriptorProto.ReservedRange
                     * @static
                     * @param {google.protobuf.DescriptorProto.ReservedRange} message ReservedRange
                     * @param {$protobuf.IConversionOptions} [options] Conversion options
                     * @returns {Object.<string,*>} Plain object
                     */
                    ReservedRange.toObject = function toObject(message, options) {
                        if (!options)
                            options = {};
                        var object = {};
                        if (options.defaults) {
                            object.start = 0;
                            object.end = 0;
                        }
                        if (message.start != null && message.hasOwnProperty("start"))
                            object.start = message.start;
                        if (message.end != null && message.hasOwnProperty("end"))
                            object.end = message.end;
                        return object;
                    };
    
                    /**
                     * Converts this ReservedRange to JSON.
                     * @function toJSON
                     * @memberof google.protobuf.DescriptorProto.ReservedRange
                     * @instance
                     * @returns {Object.<string,*>} JSON object
                     */
                    ReservedRange.prototype.toJSON = function toJSON() {
                        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                    };
    
                    /**
                     * Gets the default type url for ReservedRange
                     * @function getTypeUrl
                     * @memberof google.protobuf.DescriptorProto.ReservedRange
                     * @static
                     * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                     * @returns {string} The default type url
                     */
                    ReservedRange.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                        if (typeUrlPrefix === undefined) {
                            typeUrlPrefix = "type.googleapis.com";
                        }
                        return typeUrlPrefix + "/google.protobuf.DescriptorProto.ReservedRange";
                    };
    
                    return ReservedRange;
                })();
    
                return DescriptorProto;
            })();
    
            protobuf.ExtensionRangeOptions = (function() {
    
                /**
                 * Properties of an ExtensionRangeOptions.
                 * @memberof google.protobuf
                 * @interface IExtensionRangeOptions
                 * @property {Array.<google.protobuf.IUninterpretedOption>|null} [uninterpretedOption] ExtensionRangeOptions uninterpretedOption
                 */
    
                /**
                 * Constructs a new ExtensionRangeOptions.
                 * @memberof google.protobuf
                 * @classdesc Represents an ExtensionRangeOptions.
                 * @implements IExtensionRangeOptions
                 * @constructor
                 * @param {google.protobuf.IExtensionRangeOptions=} [properties] Properties to set
                 */
                function ExtensionRangeOptions(properties) {
                    this.uninterpretedOption = [];
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * ExtensionRangeOptions uninterpretedOption.
                 * @member {Array.<google.protobuf.IUninterpretedOption>} uninterpretedOption
                 * @memberof google.protobuf.ExtensionRangeOptions
                 * @instance
                 */
                ExtensionRangeOptions.prototype.uninterpretedOption = $util.emptyArray;
    
                /**
                 * Creates a new ExtensionRangeOptions instance using the specified properties.
                 * @function create
                 * @memberof google.protobuf.ExtensionRangeOptions
                 * @static
                 * @param {google.protobuf.IExtensionRangeOptions=} [properties] Properties to set
                 * @returns {google.protobuf.ExtensionRangeOptions} ExtensionRangeOptions instance
                 */
                ExtensionRangeOptions.create = function create(properties) {
                    return new ExtensionRangeOptions(properties);
                };
    
                /**
                 * Encodes the specified ExtensionRangeOptions message. Does not implicitly {@link google.protobuf.ExtensionRangeOptions.verify|verify} messages.
                 * @function encode
                 * @memberof google.protobuf.ExtensionRangeOptions
                 * @static
                 * @param {google.protobuf.IExtensionRangeOptions} message ExtensionRangeOptions message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                ExtensionRangeOptions.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.uninterpretedOption != null && message.uninterpretedOption.length)
                        for (var i = 0; i < message.uninterpretedOption.length; ++i)
                            $root.google.protobuf.UninterpretedOption.encode(message.uninterpretedOption[i], writer.uint32(/* id 999, wireType 2 =*/7994).fork()).ldelim();
                    return writer;
                };
    
                /**
                 * Encodes the specified ExtensionRangeOptions message, length delimited. Does not implicitly {@link google.protobuf.ExtensionRangeOptions.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.protobuf.ExtensionRangeOptions
                 * @static
                 * @param {google.protobuf.IExtensionRangeOptions} message ExtensionRangeOptions message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                ExtensionRangeOptions.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes an ExtensionRangeOptions message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.protobuf.ExtensionRangeOptions
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.protobuf.ExtensionRangeOptions} ExtensionRangeOptions
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                ExtensionRangeOptions.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.ExtensionRangeOptions();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 999: {
                                if (!(message.uninterpretedOption && message.uninterpretedOption.length))
                                    message.uninterpretedOption = [];
                                message.uninterpretedOption.push($root.google.protobuf.UninterpretedOption.decode(reader, reader.uint32()));
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes an ExtensionRangeOptions message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.protobuf.ExtensionRangeOptions
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.protobuf.ExtensionRangeOptions} ExtensionRangeOptions
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                ExtensionRangeOptions.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies an ExtensionRangeOptions message.
                 * @function verify
                 * @memberof google.protobuf.ExtensionRangeOptions
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                ExtensionRangeOptions.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.uninterpretedOption != null && message.hasOwnProperty("uninterpretedOption")) {
                        if (!Array.isArray(message.uninterpretedOption))
                            return "uninterpretedOption: array expected";
                        for (var i = 0; i < message.uninterpretedOption.length; ++i) {
                            var error = $root.google.protobuf.UninterpretedOption.verify(message.uninterpretedOption[i]);
                            if (error)
                                return "uninterpretedOption." + error;
                        }
                    }
                    return null;
                };
    
                /**
                 * Creates an ExtensionRangeOptions message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.protobuf.ExtensionRangeOptions
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.protobuf.ExtensionRangeOptions} ExtensionRangeOptions
                 */
                ExtensionRangeOptions.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.protobuf.ExtensionRangeOptions)
                        return object;
                    var message = new $root.google.protobuf.ExtensionRangeOptions();
                    if (object.uninterpretedOption) {
                        if (!Array.isArray(object.uninterpretedOption))
                            throw TypeError(".google.protobuf.ExtensionRangeOptions.uninterpretedOption: array expected");
                        message.uninterpretedOption = [];
                        for (var i = 0; i < object.uninterpretedOption.length; ++i) {
                            if (typeof object.uninterpretedOption[i] !== "object")
                                throw TypeError(".google.protobuf.ExtensionRangeOptions.uninterpretedOption: object expected");
                            message.uninterpretedOption[i] = $root.google.protobuf.UninterpretedOption.fromObject(object.uninterpretedOption[i]);
                        }
                    }
                    return message;
                };
    
                /**
                 * Creates a plain object from an ExtensionRangeOptions message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.protobuf.ExtensionRangeOptions
                 * @static
                 * @param {google.protobuf.ExtensionRangeOptions} message ExtensionRangeOptions
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                ExtensionRangeOptions.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.arrays || options.defaults)
                        object.uninterpretedOption = [];
                    if (message.uninterpretedOption && message.uninterpretedOption.length) {
                        object.uninterpretedOption = [];
                        for (var j = 0; j < message.uninterpretedOption.length; ++j)
                            object.uninterpretedOption[j] = $root.google.protobuf.UninterpretedOption.toObject(message.uninterpretedOption[j], options);
                    }
                    return object;
                };
    
                /**
                 * Converts this ExtensionRangeOptions to JSON.
                 * @function toJSON
                 * @memberof google.protobuf.ExtensionRangeOptions
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                ExtensionRangeOptions.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for ExtensionRangeOptions
                 * @function getTypeUrl
                 * @memberof google.protobuf.ExtensionRangeOptions
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                ExtensionRangeOptions.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.protobuf.ExtensionRangeOptions";
                };
    
                return ExtensionRangeOptions;
            })();
    
            protobuf.FieldDescriptorProto = (function() {
    
                /**
                 * Properties of a FieldDescriptorProto.
                 * @memberof google.protobuf
                 * @interface IFieldDescriptorProto
                 * @property {string|null} [name] FieldDescriptorProto name
                 * @property {number|null} [number] FieldDescriptorProto number
                 * @property {google.protobuf.FieldDescriptorProto.Label|null} [label] FieldDescriptorProto label
                 * @property {google.protobuf.FieldDescriptorProto.Type|null} [type] FieldDescriptorProto type
                 * @property {string|null} [typeName] FieldDescriptorProto typeName
                 * @property {string|null} [extendee] FieldDescriptorProto extendee
                 * @property {string|null} [defaultValue] FieldDescriptorProto defaultValue
                 * @property {number|null} [oneofIndex] FieldDescriptorProto oneofIndex
                 * @property {string|null} [jsonName] FieldDescriptorProto jsonName
                 * @property {google.protobuf.IFieldOptions|null} [options] FieldDescriptorProto options
                 * @property {boolean|null} [proto3Optional] FieldDescriptorProto proto3Optional
                 */
    
                /**
                 * Constructs a new FieldDescriptorProto.
                 * @memberof google.protobuf
                 * @classdesc Represents a FieldDescriptorProto.
                 * @implements IFieldDescriptorProto
                 * @constructor
                 * @param {google.protobuf.IFieldDescriptorProto=} [properties] Properties to set
                 */
                function FieldDescriptorProto(properties) {
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * FieldDescriptorProto name.
                 * @member {string} name
                 * @memberof google.protobuf.FieldDescriptorProto
                 * @instance
                 */
                FieldDescriptorProto.prototype.name = "";
    
                /**
                 * FieldDescriptorProto number.
                 * @member {number} number
                 * @memberof google.protobuf.FieldDescriptorProto
                 * @instance
                 */
                FieldDescriptorProto.prototype.number = 0;
    
                /**
                 * FieldDescriptorProto label.
                 * @member {google.protobuf.FieldDescriptorProto.Label} label
                 * @memberof google.protobuf.FieldDescriptorProto
                 * @instance
                 */
                FieldDescriptorProto.prototype.label = 1;
    
                /**
                 * FieldDescriptorProto type.
                 * @member {google.protobuf.FieldDescriptorProto.Type} type
                 * @memberof google.protobuf.FieldDescriptorProto
                 * @instance
                 */
                FieldDescriptorProto.prototype.type = 1;
    
                /**
                 * FieldDescriptorProto typeName.
                 * @member {string} typeName
                 * @memberof google.protobuf.FieldDescriptorProto
                 * @instance
                 */
                FieldDescriptorProto.prototype.typeName = "";
    
                /**
                 * FieldDescriptorProto extendee.
                 * @member {string} extendee
                 * @memberof google.protobuf.FieldDescriptorProto
                 * @instance
                 */
                FieldDescriptorProto.prototype.extendee = "";
    
                /**
                 * FieldDescriptorProto defaultValue.
                 * @member {string} defaultValue
                 * @memberof google.protobuf.FieldDescriptorProto
                 * @instance
                 */
                FieldDescriptorProto.prototype.defaultValue = "";
    
                /**
                 * FieldDescriptorProto oneofIndex.
                 * @member {number} oneofIndex
                 * @memberof google.protobuf.FieldDescriptorProto
                 * @instance
                 */
                FieldDescriptorProto.prototype.oneofIndex = 0;
    
                /**
                 * FieldDescriptorProto jsonName.
                 * @member {string} jsonName
                 * @memberof google.protobuf.FieldDescriptorProto
                 * @instance
                 */
                FieldDescriptorProto.prototype.jsonName = "";
    
                /**
                 * FieldDescriptorProto options.
                 * @member {google.protobuf.IFieldOptions|null|undefined} options
                 * @memberof google.protobuf.FieldDescriptorProto
                 * @instance
                 */
                FieldDescriptorProto.prototype.options = null;
    
                /**
                 * FieldDescriptorProto proto3Optional.
                 * @member {boolean} proto3Optional
                 * @memberof google.protobuf.FieldDescriptorProto
                 * @instance
                 */
                FieldDescriptorProto.prototype.proto3Optional = false;
    
                /**
                 * Creates a new FieldDescriptorProto instance using the specified properties.
                 * @function create
                 * @memberof google.protobuf.FieldDescriptorProto
                 * @static
                 * @param {google.protobuf.IFieldDescriptorProto=} [properties] Properties to set
                 * @returns {google.protobuf.FieldDescriptorProto} FieldDescriptorProto instance
                 */
                FieldDescriptorProto.create = function create(properties) {
                    return new FieldDescriptorProto(properties);
                };
    
                /**
                 * Encodes the specified FieldDescriptorProto message. Does not implicitly {@link google.protobuf.FieldDescriptorProto.verify|verify} messages.
                 * @function encode
                 * @memberof google.protobuf.FieldDescriptorProto
                 * @static
                 * @param {google.protobuf.IFieldDescriptorProto} message FieldDescriptorProto message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                FieldDescriptorProto.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                        writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                    if (message.extendee != null && Object.hasOwnProperty.call(message, "extendee"))
                        writer.uint32(/* id 2, wireType 2 =*/18).string(message.extendee);
                    if (message.number != null && Object.hasOwnProperty.call(message, "number"))
                        writer.uint32(/* id 3, wireType 0 =*/24).int32(message.number);
                    if (message.label != null && Object.hasOwnProperty.call(message, "label"))
                        writer.uint32(/* id 4, wireType 0 =*/32).int32(message.label);
                    if (message.type != null && Object.hasOwnProperty.call(message, "type"))
                        writer.uint32(/* id 5, wireType 0 =*/40).int32(message.type);
                    if (message.typeName != null && Object.hasOwnProperty.call(message, "typeName"))
                        writer.uint32(/* id 6, wireType 2 =*/50).string(message.typeName);
                    if (message.defaultValue != null && Object.hasOwnProperty.call(message, "defaultValue"))
                        writer.uint32(/* id 7, wireType 2 =*/58).string(message.defaultValue);
                    if (message.options != null && Object.hasOwnProperty.call(message, "options"))
                        $root.google.protobuf.FieldOptions.encode(message.options, writer.uint32(/* id 8, wireType 2 =*/66).fork()).ldelim();
                    if (message.oneofIndex != null && Object.hasOwnProperty.call(message, "oneofIndex"))
                        writer.uint32(/* id 9, wireType 0 =*/72).int32(message.oneofIndex);
                    if (message.jsonName != null && Object.hasOwnProperty.call(message, "jsonName"))
                        writer.uint32(/* id 10, wireType 2 =*/82).string(message.jsonName);
                    if (message.proto3Optional != null && Object.hasOwnProperty.call(message, "proto3Optional"))
                        writer.uint32(/* id 17, wireType 0 =*/136).bool(message.proto3Optional);
                    return writer;
                };
    
                /**
                 * Encodes the specified FieldDescriptorProto message, length delimited. Does not implicitly {@link google.protobuf.FieldDescriptorProto.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.protobuf.FieldDescriptorProto
                 * @static
                 * @param {google.protobuf.IFieldDescriptorProto} message FieldDescriptorProto message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                FieldDescriptorProto.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a FieldDescriptorProto message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.protobuf.FieldDescriptorProto
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.protobuf.FieldDescriptorProto} FieldDescriptorProto
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                FieldDescriptorProto.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.FieldDescriptorProto();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1: {
                                message.name = reader.string();
                                break;
                            }
                        case 3: {
                                message.number = reader.int32();
                                break;
                            }
                        case 4: {
                                message.label = reader.int32();
                                break;
                            }
                        case 5: {
                                message.type = reader.int32();
                                break;
                            }
                        case 6: {
                                message.typeName = reader.string();
                                break;
                            }
                        case 2: {
                                message.extendee = reader.string();
                                break;
                            }
                        case 7: {
                                message.defaultValue = reader.string();
                                break;
                            }
                        case 9: {
                                message.oneofIndex = reader.int32();
                                break;
                            }
                        case 10: {
                                message.jsonName = reader.string();
                                break;
                            }
                        case 8: {
                                message.options = $root.google.protobuf.FieldOptions.decode(reader, reader.uint32());
                                break;
                            }
                        case 17: {
                                message.proto3Optional = reader.bool();
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a FieldDescriptorProto message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.protobuf.FieldDescriptorProto
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.protobuf.FieldDescriptorProto} FieldDescriptorProto
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                FieldDescriptorProto.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a FieldDescriptorProto message.
                 * @function verify
                 * @memberof google.protobuf.FieldDescriptorProto
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                FieldDescriptorProto.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.name != null && message.hasOwnProperty("name"))
                        if (!$util.isString(message.name))
                            return "name: string expected";
                    if (message.number != null && message.hasOwnProperty("number"))
                        if (!$util.isInteger(message.number))
                            return "number: integer expected";
                    if (message.label != null && message.hasOwnProperty("label"))
                        switch (message.label) {
                        default:
                            return "label: enum value expected";
                        case 1:
                        case 2:
                        case 3:
                            break;
                        }
                    if (message.type != null && message.hasOwnProperty("type"))
                        switch (message.type) {
                        default:
                            return "type: enum value expected";
                        case 1:
                        case 2:
                        case 3:
                        case 4:
                        case 5:
                        case 6:
                        case 7:
                        case 8:
                        case 9:
                        case 10:
                        case 11:
                        case 12:
                        case 13:
                        case 14:
                        case 15:
                        case 16:
                        case 17:
                        case 18:
                            break;
                        }
                    if (message.typeName != null && message.hasOwnProperty("typeName"))
                        if (!$util.isString(message.typeName))
                            return "typeName: string expected";
                    if (message.extendee != null && message.hasOwnProperty("extendee"))
                        if (!$util.isString(message.extendee))
                            return "extendee: string expected";
                    if (message.defaultValue != null && message.hasOwnProperty("defaultValue"))
                        if (!$util.isString(message.defaultValue))
                            return "defaultValue: string expected";
                    if (message.oneofIndex != null && message.hasOwnProperty("oneofIndex"))
                        if (!$util.isInteger(message.oneofIndex))
                            return "oneofIndex: integer expected";
                    if (message.jsonName != null && message.hasOwnProperty("jsonName"))
                        if (!$util.isString(message.jsonName))
                            return "jsonName: string expected";
                    if (message.options != null && message.hasOwnProperty("options")) {
                        var error = $root.google.protobuf.FieldOptions.verify(message.options);
                        if (error)
                            return "options." + error;
                    }
                    if (message.proto3Optional != null && message.hasOwnProperty("proto3Optional"))
                        if (typeof message.proto3Optional !== "boolean")
                            return "proto3Optional: boolean expected";
                    return null;
                };
    
                /**
                 * Creates a FieldDescriptorProto message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.protobuf.FieldDescriptorProto
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.protobuf.FieldDescriptorProto} FieldDescriptorProto
                 */
                FieldDescriptorProto.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.protobuf.FieldDescriptorProto)
                        return object;
                    var message = new $root.google.protobuf.FieldDescriptorProto();
                    if (object.name != null)
                        message.name = String(object.name);
                    if (object.number != null)
                        message.number = object.number | 0;
                    switch (object.label) {
                    default:
                        if (typeof object.label === "number") {
                            message.label = object.label;
                            break;
                        }
                        break;
                    case "LABEL_OPTIONAL":
                    case 1:
                        message.label = 1;
                        break;
                    case "LABEL_REQUIRED":
                    case 2:
                        message.label = 2;
                        break;
                    case "LABEL_REPEATED":
                    case 3:
                        message.label = 3;
                        break;
                    }
                    switch (object.type) {
                    default:
                        if (typeof object.type === "number") {
                            message.type = object.type;
                            break;
                        }
                        break;
                    case "TYPE_DOUBLE":
                    case 1:
                        message.type = 1;
                        break;
                    case "TYPE_FLOAT":
                    case 2:
                        message.type = 2;
                        break;
                    case "TYPE_INT64":
                    case 3:
                        message.type = 3;
                        break;
                    case "TYPE_UINT64":
                    case 4:
                        message.type = 4;
                        break;
                    case "TYPE_INT32":
                    case 5:
                        message.type = 5;
                        break;
                    case "TYPE_FIXED64":
                    case 6:
                        message.type = 6;
                        break;
                    case "TYPE_FIXED32":
                    case 7:
                        message.type = 7;
                        break;
                    case "TYPE_BOOL":
                    case 8:
                        message.type = 8;
                        break;
                    case "TYPE_STRING":
                    case 9:
                        message.type = 9;
                        break;
                    case "TYPE_GROUP":
                    case 10:
                        message.type = 10;
                        break;
                    case "TYPE_MESSAGE":
                    case 11:
                        message.type = 11;
                        break;
                    case "TYPE_BYTES":
                    case 12:
                        message.type = 12;
                        break;
                    case "TYPE_UINT32":
                    case 13:
                        message.type = 13;
                        break;
                    case "TYPE_ENUM":
                    case 14:
                        message.type = 14;
                        break;
                    case "TYPE_SFIXED32":
                    case 15:
                        message.type = 15;
                        break;
                    case "TYPE_SFIXED64":
                    case 16:
                        message.type = 16;
                        break;
                    case "TYPE_SINT32":
                    case 17:
                        message.type = 17;
                        break;
                    case "TYPE_SINT64":
                    case 18:
                        message.type = 18;
                        break;
                    }
                    if (object.typeName != null)
                        message.typeName = String(object.typeName);
                    if (object.extendee != null)
                        message.extendee = String(object.extendee);
                    if (object.defaultValue != null)
                        message.defaultValue = String(object.defaultValue);
                    if (object.oneofIndex != null)
                        message.oneofIndex = object.oneofIndex | 0;
                    if (object.jsonName != null)
                        message.jsonName = String(object.jsonName);
                    if (object.options != null) {
                        if (typeof object.options !== "object")
                            throw TypeError(".google.protobuf.FieldDescriptorProto.options: object expected");
                        message.options = $root.google.protobuf.FieldOptions.fromObject(object.options);
                    }
                    if (object.proto3Optional != null)
                        message.proto3Optional = Boolean(object.proto3Optional);
                    return message;
                };
    
                /**
                 * Creates a plain object from a FieldDescriptorProto message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.protobuf.FieldDescriptorProto
                 * @static
                 * @param {google.protobuf.FieldDescriptorProto} message FieldDescriptorProto
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                FieldDescriptorProto.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.defaults) {
                        object.name = "";
                        object.extendee = "";
                        object.number = 0;
                        object.label = options.enums === String ? "LABEL_OPTIONAL" : 1;
                        object.type = options.enums === String ? "TYPE_DOUBLE" : 1;
                        object.typeName = "";
                        object.defaultValue = "";
                        object.options = null;
                        object.oneofIndex = 0;
                        object.jsonName = "";
                        object.proto3Optional = false;
                    }
                    if (message.name != null && message.hasOwnProperty("name"))
                        object.name = message.name;
                    if (message.extendee != null && message.hasOwnProperty("extendee"))
                        object.extendee = message.extendee;
                    if (message.number != null && message.hasOwnProperty("number"))
                        object.number = message.number;
                    if (message.label != null && message.hasOwnProperty("label"))
                        object.label = options.enums === String ? $root.google.protobuf.FieldDescriptorProto.Label[message.label] === undefined ? message.label : $root.google.protobuf.FieldDescriptorProto.Label[message.label] : message.label;
                    if (message.type != null && message.hasOwnProperty("type"))
                        object.type = options.enums === String ? $root.google.protobuf.FieldDescriptorProto.Type[message.type] === undefined ? message.type : $root.google.protobuf.FieldDescriptorProto.Type[message.type] : message.type;
                    if (message.typeName != null && message.hasOwnProperty("typeName"))
                        object.typeName = message.typeName;
                    if (message.defaultValue != null && message.hasOwnProperty("defaultValue"))
                        object.defaultValue = message.defaultValue;
                    if (message.options != null && message.hasOwnProperty("options"))
                        object.options = $root.google.protobuf.FieldOptions.toObject(message.options, options);
                    if (message.oneofIndex != null && message.hasOwnProperty("oneofIndex"))
                        object.oneofIndex = message.oneofIndex;
                    if (message.jsonName != null && message.hasOwnProperty("jsonName"))
                        object.jsonName = message.jsonName;
                    if (message.proto3Optional != null && message.hasOwnProperty("proto3Optional"))
                        object.proto3Optional = message.proto3Optional;
                    return object;
                };
    
                /**
                 * Converts this FieldDescriptorProto to JSON.
                 * @function toJSON
                 * @memberof google.protobuf.FieldDescriptorProto
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                FieldDescriptorProto.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for FieldDescriptorProto
                 * @function getTypeUrl
                 * @memberof google.protobuf.FieldDescriptorProto
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                FieldDescriptorProto.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.protobuf.FieldDescriptorProto";
                };
    
                /**
                 * Type enum.
                 * @name google.protobuf.FieldDescriptorProto.Type
                 * @enum {number}
                 * @property {number} TYPE_DOUBLE=1 TYPE_DOUBLE value
                 * @property {number} TYPE_FLOAT=2 TYPE_FLOAT value
                 * @property {number} TYPE_INT64=3 TYPE_INT64 value
                 * @property {number} TYPE_UINT64=4 TYPE_UINT64 value
                 * @property {number} TYPE_INT32=5 TYPE_INT32 value
                 * @property {number} TYPE_FIXED64=6 TYPE_FIXED64 value
                 * @property {number} TYPE_FIXED32=7 TYPE_FIXED32 value
                 * @property {number} TYPE_BOOL=8 TYPE_BOOL value
                 * @property {number} TYPE_STRING=9 TYPE_STRING value
                 * @property {number} TYPE_GROUP=10 TYPE_GROUP value
                 * @property {number} TYPE_MESSAGE=11 TYPE_MESSAGE value
                 * @property {number} TYPE_BYTES=12 TYPE_BYTES value
                 * @property {number} TYPE_UINT32=13 TYPE_UINT32 value
                 * @property {number} TYPE_ENUM=14 TYPE_ENUM value
                 * @property {number} TYPE_SFIXED32=15 TYPE_SFIXED32 value
                 * @property {number} TYPE_SFIXED64=16 TYPE_SFIXED64 value
                 * @property {number} TYPE_SINT32=17 TYPE_SINT32 value
                 * @property {number} TYPE_SINT64=18 TYPE_SINT64 value
                 */
                FieldDescriptorProto.Type = (function() {
                    var valuesById = {}, values = Object.create(valuesById);
                    values[valuesById[1] = "TYPE_DOUBLE"] = 1;
                    values[valuesById[2] = "TYPE_FLOAT"] = 2;
                    values[valuesById[3] = "TYPE_INT64"] = 3;
                    values[valuesById[4] = "TYPE_UINT64"] = 4;
                    values[valuesById[5] = "TYPE_INT32"] = 5;
                    values[valuesById[6] = "TYPE_FIXED64"] = 6;
                    values[valuesById[7] = "TYPE_FIXED32"] = 7;
                    values[valuesById[8] = "TYPE_BOOL"] = 8;
                    values[valuesById[9] = "TYPE_STRING"] = 9;
                    values[valuesById[10] = "TYPE_GROUP"] = 10;
                    values[valuesById[11] = "TYPE_MESSAGE"] = 11;
                    values[valuesById[12] = "TYPE_BYTES"] = 12;
                    values[valuesById[13] = "TYPE_UINT32"] = 13;
                    values[valuesById[14] = "TYPE_ENUM"] = 14;
                    values[valuesById[15] = "TYPE_SFIXED32"] = 15;
                    values[valuesById[16] = "TYPE_SFIXED64"] = 16;
                    values[valuesById[17] = "TYPE_SINT32"] = 17;
                    values[valuesById[18] = "TYPE_SINT64"] = 18;
                    return values;
                })();
    
                /**
                 * Label enum.
                 * @name google.protobuf.FieldDescriptorProto.Label
                 * @enum {number}
                 * @property {number} LABEL_OPTIONAL=1 LABEL_OPTIONAL value
                 * @property {number} LABEL_REQUIRED=2 LABEL_REQUIRED value
                 * @property {number} LABEL_REPEATED=3 LABEL_REPEATED value
                 */
                FieldDescriptorProto.Label = (function() {
                    var valuesById = {}, values = Object.create(valuesById);
                    values[valuesById[1] = "LABEL_OPTIONAL"] = 1;
                    values[valuesById[2] = "LABEL_REQUIRED"] = 2;
                    values[valuesById[3] = "LABEL_REPEATED"] = 3;
                    return values;
                })();
    
                return FieldDescriptorProto;
            })();
    
            protobuf.OneofDescriptorProto = (function() {
    
                /**
                 * Properties of an OneofDescriptorProto.
                 * @memberof google.protobuf
                 * @interface IOneofDescriptorProto
                 * @property {string|null} [name] OneofDescriptorProto name
                 * @property {google.protobuf.IOneofOptions|null} [options] OneofDescriptorProto options
                 */
    
                /**
                 * Constructs a new OneofDescriptorProto.
                 * @memberof google.protobuf
                 * @classdesc Represents an OneofDescriptorProto.
                 * @implements IOneofDescriptorProto
                 * @constructor
                 * @param {google.protobuf.IOneofDescriptorProto=} [properties] Properties to set
                 */
                function OneofDescriptorProto(properties) {
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * OneofDescriptorProto name.
                 * @member {string} name
                 * @memberof google.protobuf.OneofDescriptorProto
                 * @instance
                 */
                OneofDescriptorProto.prototype.name = "";
    
                /**
                 * OneofDescriptorProto options.
                 * @member {google.protobuf.IOneofOptions|null|undefined} options
                 * @memberof google.protobuf.OneofDescriptorProto
                 * @instance
                 */
                OneofDescriptorProto.prototype.options = null;
    
                /**
                 * Creates a new OneofDescriptorProto instance using the specified properties.
                 * @function create
                 * @memberof google.protobuf.OneofDescriptorProto
                 * @static
                 * @param {google.protobuf.IOneofDescriptorProto=} [properties] Properties to set
                 * @returns {google.protobuf.OneofDescriptorProto} OneofDescriptorProto instance
                 */
                OneofDescriptorProto.create = function create(properties) {
                    return new OneofDescriptorProto(properties);
                };
    
                /**
                 * Encodes the specified OneofDescriptorProto message. Does not implicitly {@link google.protobuf.OneofDescriptorProto.verify|verify} messages.
                 * @function encode
                 * @memberof google.protobuf.OneofDescriptorProto
                 * @static
                 * @param {google.protobuf.IOneofDescriptorProto} message OneofDescriptorProto message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                OneofDescriptorProto.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                        writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                    if (message.options != null && Object.hasOwnProperty.call(message, "options"))
                        $root.google.protobuf.OneofOptions.encode(message.options, writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                    return writer;
                };
    
                /**
                 * Encodes the specified OneofDescriptorProto message, length delimited. Does not implicitly {@link google.protobuf.OneofDescriptorProto.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.protobuf.OneofDescriptorProto
                 * @static
                 * @param {google.protobuf.IOneofDescriptorProto} message OneofDescriptorProto message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                OneofDescriptorProto.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes an OneofDescriptorProto message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.protobuf.OneofDescriptorProto
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.protobuf.OneofDescriptorProto} OneofDescriptorProto
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                OneofDescriptorProto.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.OneofDescriptorProto();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1: {
                                message.name = reader.string();
                                break;
                            }
                        case 2: {
                                message.options = $root.google.protobuf.OneofOptions.decode(reader, reader.uint32());
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes an OneofDescriptorProto message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.protobuf.OneofDescriptorProto
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.protobuf.OneofDescriptorProto} OneofDescriptorProto
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                OneofDescriptorProto.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies an OneofDescriptorProto message.
                 * @function verify
                 * @memberof google.protobuf.OneofDescriptorProto
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                OneofDescriptorProto.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.name != null && message.hasOwnProperty("name"))
                        if (!$util.isString(message.name))
                            return "name: string expected";
                    if (message.options != null && message.hasOwnProperty("options")) {
                        var error = $root.google.protobuf.OneofOptions.verify(message.options);
                        if (error)
                            return "options." + error;
                    }
                    return null;
                };
    
                /**
                 * Creates an OneofDescriptorProto message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.protobuf.OneofDescriptorProto
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.protobuf.OneofDescriptorProto} OneofDescriptorProto
                 */
                OneofDescriptorProto.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.protobuf.OneofDescriptorProto)
                        return object;
                    var message = new $root.google.protobuf.OneofDescriptorProto();
                    if (object.name != null)
                        message.name = String(object.name);
                    if (object.options != null) {
                        if (typeof object.options !== "object")
                            throw TypeError(".google.protobuf.OneofDescriptorProto.options: object expected");
                        message.options = $root.google.protobuf.OneofOptions.fromObject(object.options);
                    }
                    return message;
                };
    
                /**
                 * Creates a plain object from an OneofDescriptorProto message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.protobuf.OneofDescriptorProto
                 * @static
                 * @param {google.protobuf.OneofDescriptorProto} message OneofDescriptorProto
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                OneofDescriptorProto.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.defaults) {
                        object.name = "";
                        object.options = null;
                    }
                    if (message.name != null && message.hasOwnProperty("name"))
                        object.name = message.name;
                    if (message.options != null && message.hasOwnProperty("options"))
                        object.options = $root.google.protobuf.OneofOptions.toObject(message.options, options);
                    return object;
                };
    
                /**
                 * Converts this OneofDescriptorProto to JSON.
                 * @function toJSON
                 * @memberof google.protobuf.OneofDescriptorProto
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                OneofDescriptorProto.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for OneofDescriptorProto
                 * @function getTypeUrl
                 * @memberof google.protobuf.OneofDescriptorProto
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                OneofDescriptorProto.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.protobuf.OneofDescriptorProto";
                };
    
                return OneofDescriptorProto;
            })();
    
            protobuf.EnumDescriptorProto = (function() {
    
                /**
                 * Properties of an EnumDescriptorProto.
                 * @memberof google.protobuf
                 * @interface IEnumDescriptorProto
                 * @property {string|null} [name] EnumDescriptorProto name
                 * @property {Array.<google.protobuf.IEnumValueDescriptorProto>|null} [value] EnumDescriptorProto value
                 * @property {google.protobuf.IEnumOptions|null} [options] EnumDescriptorProto options
                 * @property {Array.<google.protobuf.EnumDescriptorProto.IEnumReservedRange>|null} [reservedRange] EnumDescriptorProto reservedRange
                 * @property {Array.<string>|null} [reservedName] EnumDescriptorProto reservedName
                 */
    
                /**
                 * Constructs a new EnumDescriptorProto.
                 * @memberof google.protobuf
                 * @classdesc Represents an EnumDescriptorProto.
                 * @implements IEnumDescriptorProto
                 * @constructor
                 * @param {google.protobuf.IEnumDescriptorProto=} [properties] Properties to set
                 */
                function EnumDescriptorProto(properties) {
                    this.value = [];
                    this.reservedRange = [];
                    this.reservedName = [];
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * EnumDescriptorProto name.
                 * @member {string} name
                 * @memberof google.protobuf.EnumDescriptorProto
                 * @instance
                 */
                EnumDescriptorProto.prototype.name = "";
    
                /**
                 * EnumDescriptorProto value.
                 * @member {Array.<google.protobuf.IEnumValueDescriptorProto>} value
                 * @memberof google.protobuf.EnumDescriptorProto
                 * @instance
                 */
                EnumDescriptorProto.prototype.value = $util.emptyArray;
    
                /**
                 * EnumDescriptorProto options.
                 * @member {google.protobuf.IEnumOptions|null|undefined} options
                 * @memberof google.protobuf.EnumDescriptorProto
                 * @instance
                 */
                EnumDescriptorProto.prototype.options = null;
    
                /**
                 * EnumDescriptorProto reservedRange.
                 * @member {Array.<google.protobuf.EnumDescriptorProto.IEnumReservedRange>} reservedRange
                 * @memberof google.protobuf.EnumDescriptorProto
                 * @instance
                 */
                EnumDescriptorProto.prototype.reservedRange = $util.emptyArray;
    
                /**
                 * EnumDescriptorProto reservedName.
                 * @member {Array.<string>} reservedName
                 * @memberof google.protobuf.EnumDescriptorProto
                 * @instance
                 */
                EnumDescriptorProto.prototype.reservedName = $util.emptyArray;
    
                /**
                 * Creates a new EnumDescriptorProto instance using the specified properties.
                 * @function create
                 * @memberof google.protobuf.EnumDescriptorProto
                 * @static
                 * @param {google.protobuf.IEnumDescriptorProto=} [properties] Properties to set
                 * @returns {google.protobuf.EnumDescriptorProto} EnumDescriptorProto instance
                 */
                EnumDescriptorProto.create = function create(properties) {
                    return new EnumDescriptorProto(properties);
                };
    
                /**
                 * Encodes the specified EnumDescriptorProto message. Does not implicitly {@link google.protobuf.EnumDescriptorProto.verify|verify} messages.
                 * @function encode
                 * @memberof google.protobuf.EnumDescriptorProto
                 * @static
                 * @param {google.protobuf.IEnumDescriptorProto} message EnumDescriptorProto message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                EnumDescriptorProto.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                        writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                    if (message.value != null && message.value.length)
                        for (var i = 0; i < message.value.length; ++i)
                            $root.google.protobuf.EnumValueDescriptorProto.encode(message.value[i], writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                    if (message.options != null && Object.hasOwnProperty.call(message, "options"))
                        $root.google.protobuf.EnumOptions.encode(message.options, writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();
                    if (message.reservedRange != null && message.reservedRange.length)
                        for (var i = 0; i < message.reservedRange.length; ++i)
                            $root.google.protobuf.EnumDescriptorProto.EnumReservedRange.encode(message.reservedRange[i], writer.uint32(/* id 4, wireType 2 =*/34).fork()).ldelim();
                    if (message.reservedName != null && message.reservedName.length)
                        for (var i = 0; i < message.reservedName.length; ++i)
                            writer.uint32(/* id 5, wireType 2 =*/42).string(message.reservedName[i]);
                    return writer;
                };
    
                /**
                 * Encodes the specified EnumDescriptorProto message, length delimited. Does not implicitly {@link google.protobuf.EnumDescriptorProto.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.protobuf.EnumDescriptorProto
                 * @static
                 * @param {google.protobuf.IEnumDescriptorProto} message EnumDescriptorProto message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                EnumDescriptorProto.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes an EnumDescriptorProto message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.protobuf.EnumDescriptorProto
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.protobuf.EnumDescriptorProto} EnumDescriptorProto
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                EnumDescriptorProto.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.EnumDescriptorProto();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1: {
                                message.name = reader.string();
                                break;
                            }
                        case 2: {
                                if (!(message.value && message.value.length))
                                    message.value = [];
                                message.value.push($root.google.protobuf.EnumValueDescriptorProto.decode(reader, reader.uint32()));
                                break;
                            }
                        case 3: {
                                message.options = $root.google.protobuf.EnumOptions.decode(reader, reader.uint32());
                                break;
                            }
                        case 4: {
                                if (!(message.reservedRange && message.reservedRange.length))
                                    message.reservedRange = [];
                                message.reservedRange.push($root.google.protobuf.EnumDescriptorProto.EnumReservedRange.decode(reader, reader.uint32()));
                                break;
                            }
                        case 5: {
                                if (!(message.reservedName && message.reservedName.length))
                                    message.reservedName = [];
                                message.reservedName.push(reader.string());
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes an EnumDescriptorProto message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.protobuf.EnumDescriptorProto
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.protobuf.EnumDescriptorProto} EnumDescriptorProto
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                EnumDescriptorProto.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies an EnumDescriptorProto message.
                 * @function verify
                 * @memberof google.protobuf.EnumDescriptorProto
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                EnumDescriptorProto.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.name != null && message.hasOwnProperty("name"))
                        if (!$util.isString(message.name))
                            return "name: string expected";
                    if (message.value != null && message.hasOwnProperty("value")) {
                        if (!Array.isArray(message.value))
                            return "value: array expected";
                        for (var i = 0; i < message.value.length; ++i) {
                            var error = $root.google.protobuf.EnumValueDescriptorProto.verify(message.value[i]);
                            if (error)
                                return "value." + error;
                        }
                    }
                    if (message.options != null && message.hasOwnProperty("options")) {
                        var error = $root.google.protobuf.EnumOptions.verify(message.options);
                        if (error)
                            return "options." + error;
                    }
                    if (message.reservedRange != null && message.hasOwnProperty("reservedRange")) {
                        if (!Array.isArray(message.reservedRange))
                            return "reservedRange: array expected";
                        for (var i = 0; i < message.reservedRange.length; ++i) {
                            var error = $root.google.protobuf.EnumDescriptorProto.EnumReservedRange.verify(message.reservedRange[i]);
                            if (error)
                                return "reservedRange." + error;
                        }
                    }
                    if (message.reservedName != null && message.hasOwnProperty("reservedName")) {
                        if (!Array.isArray(message.reservedName))
                            return "reservedName: array expected";
                        for (var i = 0; i < message.reservedName.length; ++i)
                            if (!$util.isString(message.reservedName[i]))
                                return "reservedName: string[] expected";
                    }
                    return null;
                };
    
                /**
                 * Creates an EnumDescriptorProto message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.protobuf.EnumDescriptorProto
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.protobuf.EnumDescriptorProto} EnumDescriptorProto
                 */
                EnumDescriptorProto.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.protobuf.EnumDescriptorProto)
                        return object;
                    var message = new $root.google.protobuf.EnumDescriptorProto();
                    if (object.name != null)
                        message.name = String(object.name);
                    if (object.value) {
                        if (!Array.isArray(object.value))
                            throw TypeError(".google.protobuf.EnumDescriptorProto.value: array expected");
                        message.value = [];
                        for (var i = 0; i < object.value.length; ++i) {
                            if (typeof object.value[i] !== "object")
                                throw TypeError(".google.protobuf.EnumDescriptorProto.value: object expected");
                            message.value[i] = $root.google.protobuf.EnumValueDescriptorProto.fromObject(object.value[i]);
                        }
                    }
                    if (object.options != null) {
                        if (typeof object.options !== "object")
                            throw TypeError(".google.protobuf.EnumDescriptorProto.options: object expected");
                        message.options = $root.google.protobuf.EnumOptions.fromObject(object.options);
                    }
                    if (object.reservedRange) {
                        if (!Array.isArray(object.reservedRange))
                            throw TypeError(".google.protobuf.EnumDescriptorProto.reservedRange: array expected");
                        message.reservedRange = [];
                        for (var i = 0; i < object.reservedRange.length; ++i) {
                            if (typeof object.reservedRange[i] !== "object")
                                throw TypeError(".google.protobuf.EnumDescriptorProto.reservedRange: object expected");
                            message.reservedRange[i] = $root.google.protobuf.EnumDescriptorProto.EnumReservedRange.fromObject(object.reservedRange[i]);
                        }
                    }
                    if (object.reservedName) {
                        if (!Array.isArray(object.reservedName))
                            throw TypeError(".google.protobuf.EnumDescriptorProto.reservedName: array expected");
                        message.reservedName = [];
                        for (var i = 0; i < object.reservedName.length; ++i)
                            message.reservedName[i] = String(object.reservedName[i]);
                    }
                    return message;
                };
    
                /**
                 * Creates a plain object from an EnumDescriptorProto message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.protobuf.EnumDescriptorProto
                 * @static
                 * @param {google.protobuf.EnumDescriptorProto} message EnumDescriptorProto
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                EnumDescriptorProto.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.arrays || options.defaults) {
                        object.value = [];
                        object.reservedRange = [];
                        object.reservedName = [];
                    }
                    if (options.defaults) {
                        object.name = "";
                        object.options = null;
                    }
                    if (message.name != null && message.hasOwnProperty("name"))
                        object.name = message.name;
                    if (message.value && message.value.length) {
                        object.value = [];
                        for (var j = 0; j < message.value.length; ++j)
                            object.value[j] = $root.google.protobuf.EnumValueDescriptorProto.toObject(message.value[j], options);
                    }
                    if (message.options != null && message.hasOwnProperty("options"))
                        object.options = $root.google.protobuf.EnumOptions.toObject(message.options, options);
                    if (message.reservedRange && message.reservedRange.length) {
                        object.reservedRange = [];
                        for (var j = 0; j < message.reservedRange.length; ++j)
                            object.reservedRange[j] = $root.google.protobuf.EnumDescriptorProto.EnumReservedRange.toObject(message.reservedRange[j], options);
                    }
                    if (message.reservedName && message.reservedName.length) {
                        object.reservedName = [];
                        for (var j = 0; j < message.reservedName.length; ++j)
                            object.reservedName[j] = message.reservedName[j];
                    }
                    return object;
                };
    
                /**
                 * Converts this EnumDescriptorProto to JSON.
                 * @function toJSON
                 * @memberof google.protobuf.EnumDescriptorProto
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                EnumDescriptorProto.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for EnumDescriptorProto
                 * @function getTypeUrl
                 * @memberof google.protobuf.EnumDescriptorProto
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                EnumDescriptorProto.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.protobuf.EnumDescriptorProto";
                };
    
                EnumDescriptorProto.EnumReservedRange = (function() {
    
                    /**
                     * Properties of an EnumReservedRange.
                     * @memberof google.protobuf.EnumDescriptorProto
                     * @interface IEnumReservedRange
                     * @property {number|null} [start] EnumReservedRange start
                     * @property {number|null} [end] EnumReservedRange end
                     */
    
                    /**
                     * Constructs a new EnumReservedRange.
                     * @memberof google.protobuf.EnumDescriptorProto
                     * @classdesc Represents an EnumReservedRange.
                     * @implements IEnumReservedRange
                     * @constructor
                     * @param {google.protobuf.EnumDescriptorProto.IEnumReservedRange=} [properties] Properties to set
                     */
                    function EnumReservedRange(properties) {
                        if (properties)
                            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                if (properties[keys[i]] != null)
                                    this[keys[i]] = properties[keys[i]];
                    }
    
                    /**
                     * EnumReservedRange start.
                     * @member {number} start
                     * @memberof google.protobuf.EnumDescriptorProto.EnumReservedRange
                     * @instance
                     */
                    EnumReservedRange.prototype.start = 0;
    
                    /**
                     * EnumReservedRange end.
                     * @member {number} end
                     * @memberof google.protobuf.EnumDescriptorProto.EnumReservedRange
                     * @instance
                     */
                    EnumReservedRange.prototype.end = 0;
    
                    /**
                     * Creates a new EnumReservedRange instance using the specified properties.
                     * @function create
                     * @memberof google.protobuf.EnumDescriptorProto.EnumReservedRange
                     * @static
                     * @param {google.protobuf.EnumDescriptorProto.IEnumReservedRange=} [properties] Properties to set
                     * @returns {google.protobuf.EnumDescriptorProto.EnumReservedRange} EnumReservedRange instance
                     */
                    EnumReservedRange.create = function create(properties) {
                        return new EnumReservedRange(properties);
                    };
    
                    /**
                     * Encodes the specified EnumReservedRange message. Does not implicitly {@link google.protobuf.EnumDescriptorProto.EnumReservedRange.verify|verify} messages.
                     * @function encode
                     * @memberof google.protobuf.EnumDescriptorProto.EnumReservedRange
                     * @static
                     * @param {google.protobuf.EnumDescriptorProto.IEnumReservedRange} message EnumReservedRange message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    EnumReservedRange.encode = function encode(message, writer) {
                        if (!writer)
                            writer = $Writer.create();
                        if (message.start != null && Object.hasOwnProperty.call(message, "start"))
                            writer.uint32(/* id 1, wireType 0 =*/8).int32(message.start);
                        if (message.end != null && Object.hasOwnProperty.call(message, "end"))
                            writer.uint32(/* id 2, wireType 0 =*/16).int32(message.end);
                        return writer;
                    };
    
                    /**
                     * Encodes the specified EnumReservedRange message, length delimited. Does not implicitly {@link google.protobuf.EnumDescriptorProto.EnumReservedRange.verify|verify} messages.
                     * @function encodeDelimited
                     * @memberof google.protobuf.EnumDescriptorProto.EnumReservedRange
                     * @static
                     * @param {google.protobuf.EnumDescriptorProto.IEnumReservedRange} message EnumReservedRange message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    EnumReservedRange.encodeDelimited = function encodeDelimited(message, writer) {
                        return this.encode(message, writer).ldelim();
                    };
    
                    /**
                     * Decodes an EnumReservedRange message from the specified reader or buffer.
                     * @function decode
                     * @memberof google.protobuf.EnumDescriptorProto.EnumReservedRange
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @param {number} [length] Message length if known beforehand
                     * @returns {google.protobuf.EnumDescriptorProto.EnumReservedRange} EnumReservedRange
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    EnumReservedRange.decode = function decode(reader, length) {
                        if (!(reader instanceof $Reader))
                            reader = $Reader.create(reader);
                        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.EnumDescriptorProto.EnumReservedRange();
                        while (reader.pos < end) {
                            var tag = reader.uint32();
                            switch (tag >>> 3) {
                            case 1: {
                                    message.start = reader.int32();
                                    break;
                                }
                            case 2: {
                                    message.end = reader.int32();
                                    break;
                                }
                            default:
                                reader.skipType(tag & 7);
                                break;
                            }
                        }
                        return message;
                    };
    
                    /**
                     * Decodes an EnumReservedRange message from the specified reader or buffer, length delimited.
                     * @function decodeDelimited
                     * @memberof google.protobuf.EnumDescriptorProto.EnumReservedRange
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @returns {google.protobuf.EnumDescriptorProto.EnumReservedRange} EnumReservedRange
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    EnumReservedRange.decodeDelimited = function decodeDelimited(reader) {
                        if (!(reader instanceof $Reader))
                            reader = new $Reader(reader);
                        return this.decode(reader, reader.uint32());
                    };
    
                    /**
                     * Verifies an EnumReservedRange message.
                     * @function verify
                     * @memberof google.protobuf.EnumDescriptorProto.EnumReservedRange
                     * @static
                     * @param {Object.<string,*>} message Plain object to verify
                     * @returns {string|null} `null` if valid, otherwise the reason why it is not
                     */
                    EnumReservedRange.verify = function verify(message) {
                        if (typeof message !== "object" || message === null)
                            return "object expected";
                        if (message.start != null && message.hasOwnProperty("start"))
                            if (!$util.isInteger(message.start))
                                return "start: integer expected";
                        if (message.end != null && message.hasOwnProperty("end"))
                            if (!$util.isInteger(message.end))
                                return "end: integer expected";
                        return null;
                    };
    
                    /**
                     * Creates an EnumReservedRange message from a plain object. Also converts values to their respective internal types.
                     * @function fromObject
                     * @memberof google.protobuf.EnumDescriptorProto.EnumReservedRange
                     * @static
                     * @param {Object.<string,*>} object Plain object
                     * @returns {google.protobuf.EnumDescriptorProto.EnumReservedRange} EnumReservedRange
                     */
                    EnumReservedRange.fromObject = function fromObject(object) {
                        if (object instanceof $root.google.protobuf.EnumDescriptorProto.EnumReservedRange)
                            return object;
                        var message = new $root.google.protobuf.EnumDescriptorProto.EnumReservedRange();
                        if (object.start != null)
                            message.start = object.start | 0;
                        if (object.end != null)
                            message.end = object.end | 0;
                        return message;
                    };
    
                    /**
                     * Creates a plain object from an EnumReservedRange message. Also converts values to other types if specified.
                     * @function toObject
                     * @memberof google.protobuf.EnumDescriptorProto.EnumReservedRange
                     * @static
                     * @param {google.protobuf.EnumDescriptorProto.EnumReservedRange} message EnumReservedRange
                     * @param {$protobuf.IConversionOptions} [options] Conversion options
                     * @returns {Object.<string,*>} Plain object
                     */
                    EnumReservedRange.toObject = function toObject(message, options) {
                        if (!options)
                            options = {};
                        var object = {};
                        if (options.defaults) {
                            object.start = 0;
                            object.end = 0;
                        }
                        if (message.start != null && message.hasOwnProperty("start"))
                            object.start = message.start;
                        if (message.end != null && message.hasOwnProperty("end"))
                            object.end = message.end;
                        return object;
                    };
    
                    /**
                     * Converts this EnumReservedRange to JSON.
                     * @function toJSON
                     * @memberof google.protobuf.EnumDescriptorProto.EnumReservedRange
                     * @instance
                     * @returns {Object.<string,*>} JSON object
                     */
                    EnumReservedRange.prototype.toJSON = function toJSON() {
                        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                    };
    
                    /**
                     * Gets the default type url for EnumReservedRange
                     * @function getTypeUrl
                     * @memberof google.protobuf.EnumDescriptorProto.EnumReservedRange
                     * @static
                     * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                     * @returns {string} The default type url
                     */
                    EnumReservedRange.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                        if (typeUrlPrefix === undefined) {
                            typeUrlPrefix = "type.googleapis.com";
                        }
                        return typeUrlPrefix + "/google.protobuf.EnumDescriptorProto.EnumReservedRange";
                    };
    
                    return EnumReservedRange;
                })();
    
                return EnumDescriptorProto;
            })();
    
            protobuf.EnumValueDescriptorProto = (function() {
    
                /**
                 * Properties of an EnumValueDescriptorProto.
                 * @memberof google.protobuf
                 * @interface IEnumValueDescriptorProto
                 * @property {string|null} [name] EnumValueDescriptorProto name
                 * @property {number|null} [number] EnumValueDescriptorProto number
                 * @property {google.protobuf.IEnumValueOptions|null} [options] EnumValueDescriptorProto options
                 */
    
                /**
                 * Constructs a new EnumValueDescriptorProto.
                 * @memberof google.protobuf
                 * @classdesc Represents an EnumValueDescriptorProto.
                 * @implements IEnumValueDescriptorProto
                 * @constructor
                 * @param {google.protobuf.IEnumValueDescriptorProto=} [properties] Properties to set
                 */
                function EnumValueDescriptorProto(properties) {
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * EnumValueDescriptorProto name.
                 * @member {string} name
                 * @memberof google.protobuf.EnumValueDescriptorProto
                 * @instance
                 */
                EnumValueDescriptorProto.prototype.name = "";
    
                /**
                 * EnumValueDescriptorProto number.
                 * @member {number} number
                 * @memberof google.protobuf.EnumValueDescriptorProto
                 * @instance
                 */
                EnumValueDescriptorProto.prototype.number = 0;
    
                /**
                 * EnumValueDescriptorProto options.
                 * @member {google.protobuf.IEnumValueOptions|null|undefined} options
                 * @memberof google.protobuf.EnumValueDescriptorProto
                 * @instance
                 */
                EnumValueDescriptorProto.prototype.options = null;
    
                /**
                 * Creates a new EnumValueDescriptorProto instance using the specified properties.
                 * @function create
                 * @memberof google.protobuf.EnumValueDescriptorProto
                 * @static
                 * @param {google.protobuf.IEnumValueDescriptorProto=} [properties] Properties to set
                 * @returns {google.protobuf.EnumValueDescriptorProto} EnumValueDescriptorProto instance
                 */
                EnumValueDescriptorProto.create = function create(properties) {
                    return new EnumValueDescriptorProto(properties);
                };
    
                /**
                 * Encodes the specified EnumValueDescriptorProto message. Does not implicitly {@link google.protobuf.EnumValueDescriptorProto.verify|verify} messages.
                 * @function encode
                 * @memberof google.protobuf.EnumValueDescriptorProto
                 * @static
                 * @param {google.protobuf.IEnumValueDescriptorProto} message EnumValueDescriptorProto message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                EnumValueDescriptorProto.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                        writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                    if (message.number != null && Object.hasOwnProperty.call(message, "number"))
                        writer.uint32(/* id 2, wireType 0 =*/16).int32(message.number);
                    if (message.options != null && Object.hasOwnProperty.call(message, "options"))
                        $root.google.protobuf.EnumValueOptions.encode(message.options, writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();
                    return writer;
                };
    
                /**
                 * Encodes the specified EnumValueDescriptorProto message, length delimited. Does not implicitly {@link google.protobuf.EnumValueDescriptorProto.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.protobuf.EnumValueDescriptorProto
                 * @static
                 * @param {google.protobuf.IEnumValueDescriptorProto} message EnumValueDescriptorProto message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                EnumValueDescriptorProto.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes an EnumValueDescriptorProto message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.protobuf.EnumValueDescriptorProto
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.protobuf.EnumValueDescriptorProto} EnumValueDescriptorProto
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                EnumValueDescriptorProto.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.EnumValueDescriptorProto();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1: {
                                message.name = reader.string();
                                break;
                            }
                        case 2: {
                                message.number = reader.int32();
                                break;
                            }
                        case 3: {
                                message.options = $root.google.protobuf.EnumValueOptions.decode(reader, reader.uint32());
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes an EnumValueDescriptorProto message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.protobuf.EnumValueDescriptorProto
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.protobuf.EnumValueDescriptorProto} EnumValueDescriptorProto
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                EnumValueDescriptorProto.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies an EnumValueDescriptorProto message.
                 * @function verify
                 * @memberof google.protobuf.EnumValueDescriptorProto
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                EnumValueDescriptorProto.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.name != null && message.hasOwnProperty("name"))
                        if (!$util.isString(message.name))
                            return "name: string expected";
                    if (message.number != null && message.hasOwnProperty("number"))
                        if (!$util.isInteger(message.number))
                            return "number: integer expected";
                    if (message.options != null && message.hasOwnProperty("options")) {
                        var error = $root.google.protobuf.EnumValueOptions.verify(message.options);
                        if (error)
                            return "options." + error;
                    }
                    return null;
                };
    
                /**
                 * Creates an EnumValueDescriptorProto message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.protobuf.EnumValueDescriptorProto
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.protobuf.EnumValueDescriptorProto} EnumValueDescriptorProto
                 */
                EnumValueDescriptorProto.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.protobuf.EnumValueDescriptorProto)
                        return object;
                    var message = new $root.google.protobuf.EnumValueDescriptorProto();
                    if (object.name != null)
                        message.name = String(object.name);
                    if (object.number != null)
                        message.number = object.number | 0;
                    if (object.options != null) {
                        if (typeof object.options !== "object")
                            throw TypeError(".google.protobuf.EnumValueDescriptorProto.options: object expected");
                        message.options = $root.google.protobuf.EnumValueOptions.fromObject(object.options);
                    }
                    return message;
                };
    
                /**
                 * Creates a plain object from an EnumValueDescriptorProto message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.protobuf.EnumValueDescriptorProto
                 * @static
                 * @param {google.protobuf.EnumValueDescriptorProto} message EnumValueDescriptorProto
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                EnumValueDescriptorProto.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.defaults) {
                        object.name = "";
                        object.number = 0;
                        object.options = null;
                    }
                    if (message.name != null && message.hasOwnProperty("name"))
                        object.name = message.name;
                    if (message.number != null && message.hasOwnProperty("number"))
                        object.number = message.number;
                    if (message.options != null && message.hasOwnProperty("options"))
                        object.options = $root.google.protobuf.EnumValueOptions.toObject(message.options, options);
                    return object;
                };
    
                /**
                 * Converts this EnumValueDescriptorProto to JSON.
                 * @function toJSON
                 * @memberof google.protobuf.EnumValueDescriptorProto
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                EnumValueDescriptorProto.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for EnumValueDescriptorProto
                 * @function getTypeUrl
                 * @memberof google.protobuf.EnumValueDescriptorProto
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                EnumValueDescriptorProto.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.protobuf.EnumValueDescriptorProto";
                };
    
                return EnumValueDescriptorProto;
            })();
    
            protobuf.ServiceDescriptorProto = (function() {
    
                /**
                 * Properties of a ServiceDescriptorProto.
                 * @memberof google.protobuf
                 * @interface IServiceDescriptorProto
                 * @property {string|null} [name] ServiceDescriptorProto name
                 * @property {Array.<google.protobuf.IMethodDescriptorProto>|null} [method] ServiceDescriptorProto method
                 * @property {google.protobuf.IServiceOptions|null} [options] ServiceDescriptorProto options
                 */
    
                /**
                 * Constructs a new ServiceDescriptorProto.
                 * @memberof google.protobuf
                 * @classdesc Represents a ServiceDescriptorProto.
                 * @implements IServiceDescriptorProto
                 * @constructor
                 * @param {google.protobuf.IServiceDescriptorProto=} [properties] Properties to set
                 */
                function ServiceDescriptorProto(properties) {
                    this.method = [];
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * ServiceDescriptorProto name.
                 * @member {string} name
                 * @memberof google.protobuf.ServiceDescriptorProto
                 * @instance
                 */
                ServiceDescriptorProto.prototype.name = "";
    
                /**
                 * ServiceDescriptorProto method.
                 * @member {Array.<google.protobuf.IMethodDescriptorProto>} method
                 * @memberof google.protobuf.ServiceDescriptorProto
                 * @instance
                 */
                ServiceDescriptorProto.prototype.method = $util.emptyArray;
    
                /**
                 * ServiceDescriptorProto options.
                 * @member {google.protobuf.IServiceOptions|null|undefined} options
                 * @memberof google.protobuf.ServiceDescriptorProto
                 * @instance
                 */
                ServiceDescriptorProto.prototype.options = null;
    
                /**
                 * Creates a new ServiceDescriptorProto instance using the specified properties.
                 * @function create
                 * @memberof google.protobuf.ServiceDescriptorProto
                 * @static
                 * @param {google.protobuf.IServiceDescriptorProto=} [properties] Properties to set
                 * @returns {google.protobuf.ServiceDescriptorProto} ServiceDescriptorProto instance
                 */
                ServiceDescriptorProto.create = function create(properties) {
                    return new ServiceDescriptorProto(properties);
                };
    
                /**
                 * Encodes the specified ServiceDescriptorProto message. Does not implicitly {@link google.protobuf.ServiceDescriptorProto.verify|verify} messages.
                 * @function encode
                 * @memberof google.protobuf.ServiceDescriptorProto
                 * @static
                 * @param {google.protobuf.IServiceDescriptorProto} message ServiceDescriptorProto message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                ServiceDescriptorProto.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                        writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                    if (message.method != null && message.method.length)
                        for (var i = 0; i < message.method.length; ++i)
                            $root.google.protobuf.MethodDescriptorProto.encode(message.method[i], writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                    if (message.options != null && Object.hasOwnProperty.call(message, "options"))
                        $root.google.protobuf.ServiceOptions.encode(message.options, writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();
                    return writer;
                };
    
                /**
                 * Encodes the specified ServiceDescriptorProto message, length delimited. Does not implicitly {@link google.protobuf.ServiceDescriptorProto.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.protobuf.ServiceDescriptorProto
                 * @static
                 * @param {google.protobuf.IServiceDescriptorProto} message ServiceDescriptorProto message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                ServiceDescriptorProto.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a ServiceDescriptorProto message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.protobuf.ServiceDescriptorProto
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.protobuf.ServiceDescriptorProto} ServiceDescriptorProto
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                ServiceDescriptorProto.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.ServiceDescriptorProto();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1: {
                                message.name = reader.string();
                                break;
                            }
                        case 2: {
                                if (!(message.method && message.method.length))
                                    message.method = [];
                                message.method.push($root.google.protobuf.MethodDescriptorProto.decode(reader, reader.uint32()));
                                break;
                            }
                        case 3: {
                                message.options = $root.google.protobuf.ServiceOptions.decode(reader, reader.uint32());
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a ServiceDescriptorProto message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.protobuf.ServiceDescriptorProto
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.protobuf.ServiceDescriptorProto} ServiceDescriptorProto
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                ServiceDescriptorProto.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a ServiceDescriptorProto message.
                 * @function verify
                 * @memberof google.protobuf.ServiceDescriptorProto
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                ServiceDescriptorProto.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.name != null && message.hasOwnProperty("name"))
                        if (!$util.isString(message.name))
                            return "name: string expected";
                    if (message.method != null && message.hasOwnProperty("method")) {
                        if (!Array.isArray(message.method))
                            return "method: array expected";
                        for (var i = 0; i < message.method.length; ++i) {
                            var error = $root.google.protobuf.MethodDescriptorProto.verify(message.method[i]);
                            if (error)
                                return "method." + error;
                        }
                    }
                    if (message.options != null && message.hasOwnProperty("options")) {
                        var error = $root.google.protobuf.ServiceOptions.verify(message.options);
                        if (error)
                            return "options." + error;
                    }
                    return null;
                };
    
                /**
                 * Creates a ServiceDescriptorProto message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.protobuf.ServiceDescriptorProto
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.protobuf.ServiceDescriptorProto} ServiceDescriptorProto
                 */
                ServiceDescriptorProto.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.protobuf.ServiceDescriptorProto)
                        return object;
                    var message = new $root.google.protobuf.ServiceDescriptorProto();
                    if (object.name != null)
                        message.name = String(object.name);
                    if (object.method) {
                        if (!Array.isArray(object.method))
                            throw TypeError(".google.protobuf.ServiceDescriptorProto.method: array expected");
                        message.method = [];
                        for (var i = 0; i < object.method.length; ++i) {
                            if (typeof object.method[i] !== "object")
                                throw TypeError(".google.protobuf.ServiceDescriptorProto.method: object expected");
                            message.method[i] = $root.google.protobuf.MethodDescriptorProto.fromObject(object.method[i]);
                        }
                    }
                    if (object.options != null) {
                        if (typeof object.options !== "object")
                            throw TypeError(".google.protobuf.ServiceDescriptorProto.options: object expected");
                        message.options = $root.google.protobuf.ServiceOptions.fromObject(object.options);
                    }
                    return message;
                };
    
                /**
                 * Creates a plain object from a ServiceDescriptorProto message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.protobuf.ServiceDescriptorProto
                 * @static
                 * @param {google.protobuf.ServiceDescriptorProto} message ServiceDescriptorProto
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                ServiceDescriptorProto.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.arrays || options.defaults)
                        object.method = [];
                    if (options.defaults) {
                        object.name = "";
                        object.options = null;
                    }
                    if (message.name != null && message.hasOwnProperty("name"))
                        object.name = message.name;
                    if (message.method && message.method.length) {
                        object.method = [];
                        for (var j = 0; j < message.method.length; ++j)
                            object.method[j] = $root.google.protobuf.MethodDescriptorProto.toObject(message.method[j], options);
                    }
                    if (message.options != null && message.hasOwnProperty("options"))
                        object.options = $root.google.protobuf.ServiceOptions.toObject(message.options, options);
                    return object;
                };
    
                /**
                 * Converts this ServiceDescriptorProto to JSON.
                 * @function toJSON
                 * @memberof google.protobuf.ServiceDescriptorProto
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                ServiceDescriptorProto.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for ServiceDescriptorProto
                 * @function getTypeUrl
                 * @memberof google.protobuf.ServiceDescriptorProto
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                ServiceDescriptorProto.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.protobuf.ServiceDescriptorProto";
                };
    
                return ServiceDescriptorProto;
            })();
    
            protobuf.MethodDescriptorProto = (function() {
    
                /**
                 * Properties of a MethodDescriptorProto.
                 * @memberof google.protobuf
                 * @interface IMethodDescriptorProto
                 * @property {string|null} [name] MethodDescriptorProto name
                 * @property {string|null} [inputType] MethodDescriptorProto inputType
                 * @property {string|null} [outputType] MethodDescriptorProto outputType
                 * @property {google.protobuf.IMethodOptions|null} [options] MethodDescriptorProto options
                 * @property {boolean|null} [clientStreaming] MethodDescriptorProto clientStreaming
                 * @property {boolean|null} [serverStreaming] MethodDescriptorProto serverStreaming
                 */
    
                /**
                 * Constructs a new MethodDescriptorProto.
                 * @memberof google.protobuf
                 * @classdesc Represents a MethodDescriptorProto.
                 * @implements IMethodDescriptorProto
                 * @constructor
                 * @param {google.protobuf.IMethodDescriptorProto=} [properties] Properties to set
                 */
                function MethodDescriptorProto(properties) {
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * MethodDescriptorProto name.
                 * @member {string} name
                 * @memberof google.protobuf.MethodDescriptorProto
                 * @instance
                 */
                MethodDescriptorProto.prototype.name = "";
    
                /**
                 * MethodDescriptorProto inputType.
                 * @member {string} inputType
                 * @memberof google.protobuf.MethodDescriptorProto
                 * @instance
                 */
                MethodDescriptorProto.prototype.inputType = "";
    
                /**
                 * MethodDescriptorProto outputType.
                 * @member {string} outputType
                 * @memberof google.protobuf.MethodDescriptorProto
                 * @instance
                 */
                MethodDescriptorProto.prototype.outputType = "";
    
                /**
                 * MethodDescriptorProto options.
                 * @member {google.protobuf.IMethodOptions|null|undefined} options
                 * @memberof google.protobuf.MethodDescriptorProto
                 * @instance
                 */
                MethodDescriptorProto.prototype.options = null;
    
                /**
                 * MethodDescriptorProto clientStreaming.
                 * @member {boolean} clientStreaming
                 * @memberof google.protobuf.MethodDescriptorProto
                 * @instance
                 */
                MethodDescriptorProto.prototype.clientStreaming = false;
    
                /**
                 * MethodDescriptorProto serverStreaming.
                 * @member {boolean} serverStreaming
                 * @memberof google.protobuf.MethodDescriptorProto
                 * @instance
                 */
                MethodDescriptorProto.prototype.serverStreaming = false;
    
                /**
                 * Creates a new MethodDescriptorProto instance using the specified properties.
                 * @function create
                 * @memberof google.protobuf.MethodDescriptorProto
                 * @static
                 * @param {google.protobuf.IMethodDescriptorProto=} [properties] Properties to set
                 * @returns {google.protobuf.MethodDescriptorProto} MethodDescriptorProto instance
                 */
                MethodDescriptorProto.create = function create(properties) {
                    return new MethodDescriptorProto(properties);
                };
    
                /**
                 * Encodes the specified MethodDescriptorProto message. Does not implicitly {@link google.protobuf.MethodDescriptorProto.verify|verify} messages.
                 * @function encode
                 * @memberof google.protobuf.MethodDescriptorProto
                 * @static
                 * @param {google.protobuf.IMethodDescriptorProto} message MethodDescriptorProto message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                MethodDescriptorProto.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                        writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                    if (message.inputType != null && Object.hasOwnProperty.call(message, "inputType"))
                        writer.uint32(/* id 2, wireType 2 =*/18).string(message.inputType);
                    if (message.outputType != null && Object.hasOwnProperty.call(message, "outputType"))
                        writer.uint32(/* id 3, wireType 2 =*/26).string(message.outputType);
                    if (message.options != null && Object.hasOwnProperty.call(message, "options"))
                        $root.google.protobuf.MethodOptions.encode(message.options, writer.uint32(/* id 4, wireType 2 =*/34).fork()).ldelim();
                    if (message.clientStreaming != null && Object.hasOwnProperty.call(message, "clientStreaming"))
                        writer.uint32(/* id 5, wireType 0 =*/40).bool(message.clientStreaming);
                    if (message.serverStreaming != null && Object.hasOwnProperty.call(message, "serverStreaming"))
                        writer.uint32(/* id 6, wireType 0 =*/48).bool(message.serverStreaming);
                    return writer;
                };
    
                /**
                 * Encodes the specified MethodDescriptorProto message, length delimited. Does not implicitly {@link google.protobuf.MethodDescriptorProto.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.protobuf.MethodDescriptorProto
                 * @static
                 * @param {google.protobuf.IMethodDescriptorProto} message MethodDescriptorProto message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                MethodDescriptorProto.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a MethodDescriptorProto message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.protobuf.MethodDescriptorProto
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.protobuf.MethodDescriptorProto} MethodDescriptorProto
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                MethodDescriptorProto.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.MethodDescriptorProto();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1: {
                                message.name = reader.string();
                                break;
                            }
                        case 2: {
                                message.inputType = reader.string();
                                break;
                            }
                        case 3: {
                                message.outputType = reader.string();
                                break;
                            }
                        case 4: {
                                message.options = $root.google.protobuf.MethodOptions.decode(reader, reader.uint32());
                                break;
                            }
                        case 5: {
                                message.clientStreaming = reader.bool();
                                break;
                            }
                        case 6: {
                                message.serverStreaming = reader.bool();
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a MethodDescriptorProto message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.protobuf.MethodDescriptorProto
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.protobuf.MethodDescriptorProto} MethodDescriptorProto
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                MethodDescriptorProto.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a MethodDescriptorProto message.
                 * @function verify
                 * @memberof google.protobuf.MethodDescriptorProto
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                MethodDescriptorProto.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.name != null && message.hasOwnProperty("name"))
                        if (!$util.isString(message.name))
                            return "name: string expected";
                    if (message.inputType != null && message.hasOwnProperty("inputType"))
                        if (!$util.isString(message.inputType))
                            return "inputType: string expected";
                    if (message.outputType != null && message.hasOwnProperty("outputType"))
                        if (!$util.isString(message.outputType))
                            return "outputType: string expected";
                    if (message.options != null && message.hasOwnProperty("options")) {
                        var error = $root.google.protobuf.MethodOptions.verify(message.options);
                        if (error)
                            return "options." + error;
                    }
                    if (message.clientStreaming != null && message.hasOwnProperty("clientStreaming"))
                        if (typeof message.clientStreaming !== "boolean")
                            return "clientStreaming: boolean expected";
                    if (message.serverStreaming != null && message.hasOwnProperty("serverStreaming"))
                        if (typeof message.serverStreaming !== "boolean")
                            return "serverStreaming: boolean expected";
                    return null;
                };
    
                /**
                 * Creates a MethodDescriptorProto message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.protobuf.MethodDescriptorProto
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.protobuf.MethodDescriptorProto} MethodDescriptorProto
                 */
                MethodDescriptorProto.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.protobuf.MethodDescriptorProto)
                        return object;
                    var message = new $root.google.protobuf.MethodDescriptorProto();
                    if (object.name != null)
                        message.name = String(object.name);
                    if (object.inputType != null)
                        message.inputType = String(object.inputType);
                    if (object.outputType != null)
                        message.outputType = String(object.outputType);
                    if (object.options != null) {
                        if (typeof object.options !== "object")
                            throw TypeError(".google.protobuf.MethodDescriptorProto.options: object expected");
                        message.options = $root.google.protobuf.MethodOptions.fromObject(object.options);
                    }
                    if (object.clientStreaming != null)
                        message.clientStreaming = Boolean(object.clientStreaming);
                    if (object.serverStreaming != null)
                        message.serverStreaming = Boolean(object.serverStreaming);
                    return message;
                };
    
                /**
                 * Creates a plain object from a MethodDescriptorProto message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.protobuf.MethodDescriptorProto
                 * @static
                 * @param {google.protobuf.MethodDescriptorProto} message MethodDescriptorProto
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                MethodDescriptorProto.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.defaults) {
                        object.name = "";
                        object.inputType = "";
                        object.outputType = "";
                        object.options = null;
                        object.clientStreaming = false;
                        object.serverStreaming = false;
                    }
                    if (message.name != null && message.hasOwnProperty("name"))
                        object.name = message.name;
                    if (message.inputType != null && message.hasOwnProperty("inputType"))
                        object.inputType = message.inputType;
                    if (message.outputType != null && message.hasOwnProperty("outputType"))
                        object.outputType = message.outputType;
                    if (message.options != null && message.hasOwnProperty("options"))
                        object.options = $root.google.protobuf.MethodOptions.toObject(message.options, options);
                    if (message.clientStreaming != null && message.hasOwnProperty("clientStreaming"))
                        object.clientStreaming = message.clientStreaming;
                    if (message.serverStreaming != null && message.hasOwnProperty("serverStreaming"))
                        object.serverStreaming = message.serverStreaming;
                    return object;
                };
    
                /**
                 * Converts this MethodDescriptorProto to JSON.
                 * @function toJSON
                 * @memberof google.protobuf.MethodDescriptorProto
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                MethodDescriptorProto.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for MethodDescriptorProto
                 * @function getTypeUrl
                 * @memberof google.protobuf.MethodDescriptorProto
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                MethodDescriptorProto.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.protobuf.MethodDescriptorProto";
                };
    
                return MethodDescriptorProto;
            })();
    
            protobuf.FileOptions = (function() {
    
                /**
                 * Properties of a FileOptions.
                 * @memberof google.protobuf
                 * @interface IFileOptions
                 * @property {string|null} [javaPackage] FileOptions javaPackage
                 * @property {string|null} [javaOuterClassname] FileOptions javaOuterClassname
                 * @property {boolean|null} [javaMultipleFiles] FileOptions javaMultipleFiles
                 * @property {boolean|null} [javaGenerateEqualsAndHash] FileOptions javaGenerateEqualsAndHash
                 * @property {boolean|null} [javaStringCheckUtf8] FileOptions javaStringCheckUtf8
                 * @property {google.protobuf.FileOptions.OptimizeMode|null} [optimizeFor] FileOptions optimizeFor
                 * @property {string|null} [goPackage] FileOptions goPackage
                 * @property {boolean|null} [ccGenericServices] FileOptions ccGenericServices
                 * @property {boolean|null} [javaGenericServices] FileOptions javaGenericServices
                 * @property {boolean|null} [pyGenericServices] FileOptions pyGenericServices
                 * @property {boolean|null} [phpGenericServices] FileOptions phpGenericServices
                 * @property {boolean|null} [deprecated] FileOptions deprecated
                 * @property {boolean|null} [ccEnableArenas] FileOptions ccEnableArenas
                 * @property {string|null} [objcClassPrefix] FileOptions objcClassPrefix
                 * @property {string|null} [csharpNamespace] FileOptions csharpNamespace
                 * @property {string|null} [swiftPrefix] FileOptions swiftPrefix
                 * @property {string|null} [phpClassPrefix] FileOptions phpClassPrefix
                 * @property {string|null} [phpNamespace] FileOptions phpNamespace
                 * @property {string|null} [phpMetadataNamespace] FileOptions phpMetadataNamespace
                 * @property {string|null} [rubyPackage] FileOptions rubyPackage
                 * @property {Array.<google.protobuf.IUninterpretedOption>|null} [uninterpretedOption] FileOptions uninterpretedOption
                 * @property {Array.<google.api.IResourceDescriptor>|null} [".google.api.resourceDefinition"] FileOptions .google.api.resourceDefinition
                 */
    
                /**
                 * Constructs a new FileOptions.
                 * @memberof google.protobuf
                 * @classdesc Represents a FileOptions.
                 * @implements IFileOptions
                 * @constructor
                 * @param {google.protobuf.IFileOptions=} [properties] Properties to set
                 */
                function FileOptions(properties) {
                    this.uninterpretedOption = [];
                    this[".google.api.resourceDefinition"] = [];
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * FileOptions javaPackage.
                 * @member {string} javaPackage
                 * @memberof google.protobuf.FileOptions
                 * @instance
                 */
                FileOptions.prototype.javaPackage = "";
    
                /**
                 * FileOptions javaOuterClassname.
                 * @member {string} javaOuterClassname
                 * @memberof google.protobuf.FileOptions
                 * @instance
                 */
                FileOptions.prototype.javaOuterClassname = "";
    
                /**
                 * FileOptions javaMultipleFiles.
                 * @member {boolean} javaMultipleFiles
                 * @memberof google.protobuf.FileOptions
                 * @instance
                 */
                FileOptions.prototype.javaMultipleFiles = false;
    
                /**
                 * FileOptions javaGenerateEqualsAndHash.
                 * @member {boolean} javaGenerateEqualsAndHash
                 * @memberof google.protobuf.FileOptions
                 * @instance
                 */
                FileOptions.prototype.javaGenerateEqualsAndHash = false;
    
                /**
                 * FileOptions javaStringCheckUtf8.
                 * @member {boolean} javaStringCheckUtf8
                 * @memberof google.protobuf.FileOptions
                 * @instance
                 */
                FileOptions.prototype.javaStringCheckUtf8 = false;
    
                /**
                 * FileOptions optimizeFor.
                 * @member {google.protobuf.FileOptions.OptimizeMode} optimizeFor
                 * @memberof google.protobuf.FileOptions
                 * @instance
                 */
                FileOptions.prototype.optimizeFor = 1;
    
                /**
                 * FileOptions goPackage.
                 * @member {string} goPackage
                 * @memberof google.protobuf.FileOptions
                 * @instance
                 */
                FileOptions.prototype.goPackage = "";
    
                /**
                 * FileOptions ccGenericServices.
                 * @member {boolean} ccGenericServices
                 * @memberof google.protobuf.FileOptions
                 * @instance
                 */
                FileOptions.prototype.ccGenericServices = false;
    
                /**
                 * FileOptions javaGenericServices.
                 * @member {boolean} javaGenericServices
                 * @memberof google.protobuf.FileOptions
                 * @instance
                 */
                FileOptions.prototype.javaGenericServices = false;
    
                /**
                 * FileOptions pyGenericServices.
                 * @member {boolean} pyGenericServices
                 * @memberof google.protobuf.FileOptions
                 * @instance
                 */
                FileOptions.prototype.pyGenericServices = false;
    
                /**
                 * FileOptions phpGenericServices.
                 * @member {boolean} phpGenericServices
                 * @memberof google.protobuf.FileOptions
                 * @instance
                 */
                FileOptions.prototype.phpGenericServices = false;
    
                /**
                 * FileOptions deprecated.
                 * @member {boolean} deprecated
                 * @memberof google.protobuf.FileOptions
                 * @instance
                 */
                FileOptions.prototype.deprecated = false;
    
                /**
                 * FileOptions ccEnableArenas.
                 * @member {boolean} ccEnableArenas
                 * @memberof google.protobuf.FileOptions
                 * @instance
                 */
                FileOptions.prototype.ccEnableArenas = true;
    
                /**
                 * FileOptions objcClassPrefix.
                 * @member {string} objcClassPrefix
                 * @memberof google.protobuf.FileOptions
                 * @instance
                 */
                FileOptions.prototype.objcClassPrefix = "";
    
                /**
                 * FileOptions csharpNamespace.
                 * @member {string} csharpNamespace
                 * @memberof google.protobuf.FileOptions
                 * @instance
                 */
                FileOptions.prototype.csharpNamespace = "";
    
                /**
                 * FileOptions swiftPrefix.
                 * @member {string} swiftPrefix
                 * @memberof google.protobuf.FileOptions
                 * @instance
                 */
                FileOptions.prototype.swiftPrefix = "";
    
                /**
                 * FileOptions phpClassPrefix.
                 * @member {string} phpClassPrefix
                 * @memberof google.protobuf.FileOptions
                 * @instance
                 */
                FileOptions.prototype.phpClassPrefix = "";
    
                /**
                 * FileOptions phpNamespace.
                 * @member {string} phpNamespace
                 * @memberof google.protobuf.FileOptions
                 * @instance
                 */
                FileOptions.prototype.phpNamespace = "";
    
                /**
                 * FileOptions phpMetadataNamespace.
                 * @member {string} phpMetadataNamespace
                 * @memberof google.protobuf.FileOptions
                 * @instance
                 */
                FileOptions.prototype.phpMetadataNamespace = "";
    
                /**
                 * FileOptions rubyPackage.
                 * @member {string} rubyPackage
                 * @memberof google.protobuf.FileOptions
                 * @instance
                 */
                FileOptions.prototype.rubyPackage = "";
    
                /**
                 * FileOptions uninterpretedOption.
                 * @member {Array.<google.protobuf.IUninterpretedOption>} uninterpretedOption
                 * @memberof google.protobuf.FileOptions
                 * @instance
                 */
                FileOptions.prototype.uninterpretedOption = $util.emptyArray;
    
                /**
                 * FileOptions .google.api.resourceDefinition.
                 * @member {Array.<google.api.IResourceDescriptor>} .google.api.resourceDefinition
                 * @memberof google.protobuf.FileOptions
                 * @instance
                 */
                FileOptions.prototype[".google.api.resourceDefinition"] = $util.emptyArray;
    
                /**
                 * Creates a new FileOptions instance using the specified properties.
                 * @function create
                 * @memberof google.protobuf.FileOptions
                 * @static
                 * @param {google.protobuf.IFileOptions=} [properties] Properties to set
                 * @returns {google.protobuf.FileOptions} FileOptions instance
                 */
                FileOptions.create = function create(properties) {
                    return new FileOptions(properties);
                };
    
                /**
                 * Encodes the specified FileOptions message. Does not implicitly {@link google.protobuf.FileOptions.verify|verify} messages.
                 * @function encode
                 * @memberof google.protobuf.FileOptions
                 * @static
                 * @param {google.protobuf.IFileOptions} message FileOptions message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                FileOptions.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.javaPackage != null && Object.hasOwnProperty.call(message, "javaPackage"))
                        writer.uint32(/* id 1, wireType 2 =*/10).string(message.javaPackage);
                    if (message.javaOuterClassname != null && Object.hasOwnProperty.call(message, "javaOuterClassname"))
                        writer.uint32(/* id 8, wireType 2 =*/66).string(message.javaOuterClassname);
                    if (message.optimizeFor != null && Object.hasOwnProperty.call(message, "optimizeFor"))
                        writer.uint32(/* id 9, wireType 0 =*/72).int32(message.optimizeFor);
                    if (message.javaMultipleFiles != null && Object.hasOwnProperty.call(message, "javaMultipleFiles"))
                        writer.uint32(/* id 10, wireType 0 =*/80).bool(message.javaMultipleFiles);
                    if (message.goPackage != null && Object.hasOwnProperty.call(message, "goPackage"))
                        writer.uint32(/* id 11, wireType 2 =*/90).string(message.goPackage);
                    if (message.ccGenericServices != null && Object.hasOwnProperty.call(message, "ccGenericServices"))
                        writer.uint32(/* id 16, wireType 0 =*/128).bool(message.ccGenericServices);
                    if (message.javaGenericServices != null && Object.hasOwnProperty.call(message, "javaGenericServices"))
                        writer.uint32(/* id 17, wireType 0 =*/136).bool(message.javaGenericServices);
                    if (message.pyGenericServices != null && Object.hasOwnProperty.call(message, "pyGenericServices"))
                        writer.uint32(/* id 18, wireType 0 =*/144).bool(message.pyGenericServices);
                    if (message.javaGenerateEqualsAndHash != null && Object.hasOwnProperty.call(message, "javaGenerateEqualsAndHash"))
                        writer.uint32(/* id 20, wireType 0 =*/160).bool(message.javaGenerateEqualsAndHash);
                    if (message.deprecated != null && Object.hasOwnProperty.call(message, "deprecated"))
                        writer.uint32(/* id 23, wireType 0 =*/184).bool(message.deprecated);
                    if (message.javaStringCheckUtf8 != null && Object.hasOwnProperty.call(message, "javaStringCheckUtf8"))
                        writer.uint32(/* id 27, wireType 0 =*/216).bool(message.javaStringCheckUtf8);
                    if (message.ccEnableArenas != null && Object.hasOwnProperty.call(message, "ccEnableArenas"))
                        writer.uint32(/* id 31, wireType 0 =*/248).bool(message.ccEnableArenas);
                    if (message.objcClassPrefix != null && Object.hasOwnProperty.call(message, "objcClassPrefix"))
                        writer.uint32(/* id 36, wireType 2 =*/290).string(message.objcClassPrefix);
                    if (message.csharpNamespace != null && Object.hasOwnProperty.call(message, "csharpNamespace"))
                        writer.uint32(/* id 37, wireType 2 =*/298).string(message.csharpNamespace);
                    if (message.swiftPrefix != null && Object.hasOwnProperty.call(message, "swiftPrefix"))
                        writer.uint32(/* id 39, wireType 2 =*/314).string(message.swiftPrefix);
                    if (message.phpClassPrefix != null && Object.hasOwnProperty.call(message, "phpClassPrefix"))
                        writer.uint32(/* id 40, wireType 2 =*/322).string(message.phpClassPrefix);
                    if (message.phpNamespace != null && Object.hasOwnProperty.call(message, "phpNamespace"))
                        writer.uint32(/* id 41, wireType 2 =*/330).string(message.phpNamespace);
                    if (message.phpGenericServices != null && Object.hasOwnProperty.call(message, "phpGenericServices"))
                        writer.uint32(/* id 42, wireType 0 =*/336).bool(message.phpGenericServices);
                    if (message.phpMetadataNamespace != null && Object.hasOwnProperty.call(message, "phpMetadataNamespace"))
                        writer.uint32(/* id 44, wireType 2 =*/354).string(message.phpMetadataNamespace);
                    if (message.rubyPackage != null && Object.hasOwnProperty.call(message, "rubyPackage"))
                        writer.uint32(/* id 45, wireType 2 =*/362).string(message.rubyPackage);
                    if (message.uninterpretedOption != null && message.uninterpretedOption.length)
                        for (var i = 0; i < message.uninterpretedOption.length; ++i)
                            $root.google.protobuf.UninterpretedOption.encode(message.uninterpretedOption[i], writer.uint32(/* id 999, wireType 2 =*/7994).fork()).ldelim();
                    if (message[".google.api.resourceDefinition"] != null && message[".google.api.resourceDefinition"].length)
                        for (var i = 0; i < message[".google.api.resourceDefinition"].length; ++i)
                            $root.google.api.ResourceDescriptor.encode(message[".google.api.resourceDefinition"][i], writer.uint32(/* id 1053, wireType 2 =*/8426).fork()).ldelim();
                    return writer;
                };
    
                /**
                 * Encodes the specified FileOptions message, length delimited. Does not implicitly {@link google.protobuf.FileOptions.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.protobuf.FileOptions
                 * @static
                 * @param {google.protobuf.IFileOptions} message FileOptions message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                FileOptions.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a FileOptions message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.protobuf.FileOptions
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.protobuf.FileOptions} FileOptions
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                FileOptions.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.FileOptions();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1: {
                                message.javaPackage = reader.string();
                                break;
                            }
                        case 8: {
                                message.javaOuterClassname = reader.string();
                                break;
                            }
                        case 10: {
                                message.javaMultipleFiles = reader.bool();
                                break;
                            }
                        case 20: {
                                message.javaGenerateEqualsAndHash = reader.bool();
                                break;
                            }
                        case 27: {
                                message.javaStringCheckUtf8 = reader.bool();
                                break;
                            }
                        case 9: {
                                message.optimizeFor = reader.int32();
                                break;
                            }
                        case 11: {
                                message.goPackage = reader.string();
                                break;
                            }
                        case 16: {
                                message.ccGenericServices = reader.bool();
                                break;
                            }
                        case 17: {
                                message.javaGenericServices = reader.bool();
                                break;
                            }
                        case 18: {
                                message.pyGenericServices = reader.bool();
                                break;
                            }
                        case 42: {
                                message.phpGenericServices = reader.bool();
                                break;
                            }
                        case 23: {
                                message.deprecated = reader.bool();
                                break;
                            }
                        case 31: {
                                message.ccEnableArenas = reader.bool();
                                break;
                            }
                        case 36: {
                                message.objcClassPrefix = reader.string();
                                break;
                            }
                        case 37: {
                                message.csharpNamespace = reader.string();
                                break;
                            }
                        case 39: {
                                message.swiftPrefix = reader.string();
                                break;
                            }
                        case 40: {
                                message.phpClassPrefix = reader.string();
                                break;
                            }
                        case 41: {
                                message.phpNamespace = reader.string();
                                break;
                            }
                        case 44: {
                                message.phpMetadataNamespace = reader.string();
                                break;
                            }
                        case 45: {
                                message.rubyPackage = reader.string();
                                break;
                            }
                        case 999: {
                                if (!(message.uninterpretedOption && message.uninterpretedOption.length))
                                    message.uninterpretedOption = [];
                                message.uninterpretedOption.push($root.google.protobuf.UninterpretedOption.decode(reader, reader.uint32()));
                                break;
                            }
                        case 1053: {
                                if (!(message[".google.api.resourceDefinition"] && message[".google.api.resourceDefinition"].length))
                                    message[".google.api.resourceDefinition"] = [];
                                message[".google.api.resourceDefinition"].push($root.google.api.ResourceDescriptor.decode(reader, reader.uint32()));
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a FileOptions message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.protobuf.FileOptions
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.protobuf.FileOptions} FileOptions
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                FileOptions.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a FileOptions message.
                 * @function verify
                 * @memberof google.protobuf.FileOptions
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                FileOptions.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.javaPackage != null && message.hasOwnProperty("javaPackage"))
                        if (!$util.isString(message.javaPackage))
                            return "javaPackage: string expected";
                    if (message.javaOuterClassname != null && message.hasOwnProperty("javaOuterClassname"))
                        if (!$util.isString(message.javaOuterClassname))
                            return "javaOuterClassname: string expected";
                    if (message.javaMultipleFiles != null && message.hasOwnProperty("javaMultipleFiles"))
                        if (typeof message.javaMultipleFiles !== "boolean")
                            return "javaMultipleFiles: boolean expected";
                    if (message.javaGenerateEqualsAndHash != null && message.hasOwnProperty("javaGenerateEqualsAndHash"))
                        if (typeof message.javaGenerateEqualsAndHash !== "boolean")
                            return "javaGenerateEqualsAndHash: boolean expected";
                    if (message.javaStringCheckUtf8 != null && message.hasOwnProperty("javaStringCheckUtf8"))
                        if (typeof message.javaStringCheckUtf8 !== "boolean")
                            return "javaStringCheckUtf8: boolean expected";
                    if (message.optimizeFor != null && message.hasOwnProperty("optimizeFor"))
                        switch (message.optimizeFor) {
                        default:
                            return "optimizeFor: enum value expected";
                        case 1:
                        case 2:
                        case 3:
                            break;
                        }
                    if (message.goPackage != null && message.hasOwnProperty("goPackage"))
                        if (!$util.isString(message.goPackage))
                            return "goPackage: string expected";
                    if (message.ccGenericServices != null && message.hasOwnProperty("ccGenericServices"))
                        if (typeof message.ccGenericServices !== "boolean")
                            return "ccGenericServices: boolean expected";
                    if (message.javaGenericServices != null && message.hasOwnProperty("javaGenericServices"))
                        if (typeof message.javaGenericServices !== "boolean")
                            return "javaGenericServices: boolean expected";
                    if (message.pyGenericServices != null && message.hasOwnProperty("pyGenericServices"))
                        if (typeof message.pyGenericServices !== "boolean")
                            return "pyGenericServices: boolean expected";
                    if (message.phpGenericServices != null && message.hasOwnProperty("phpGenericServices"))
                        if (typeof message.phpGenericServices !== "boolean")
                            return "phpGenericServices: boolean expected";
                    if (message.deprecated != null && message.hasOwnProperty("deprecated"))
                        if (typeof message.deprecated !== "boolean")
                            return "deprecated: boolean expected";
                    if (message.ccEnableArenas != null && message.hasOwnProperty("ccEnableArenas"))
                        if (typeof message.ccEnableArenas !== "boolean")
                            return "ccEnableArenas: boolean expected";
                    if (message.objcClassPrefix != null && message.hasOwnProperty("objcClassPrefix"))
                        if (!$util.isString(message.objcClassPrefix))
                            return "objcClassPrefix: string expected";
                    if (message.csharpNamespace != null && message.hasOwnProperty("csharpNamespace"))
                        if (!$util.isString(message.csharpNamespace))
                            return "csharpNamespace: string expected";
                    if (message.swiftPrefix != null && message.hasOwnProperty("swiftPrefix"))
                        if (!$util.isString(message.swiftPrefix))
                            return "swiftPrefix: string expected";
                    if (message.phpClassPrefix != null && message.hasOwnProperty("phpClassPrefix"))
                        if (!$util.isString(message.phpClassPrefix))
                            return "phpClassPrefix: string expected";
                    if (message.phpNamespace != null && message.hasOwnProperty("phpNamespace"))
                        if (!$util.isString(message.phpNamespace))
                            return "phpNamespace: string expected";
                    if (message.phpMetadataNamespace != null && message.hasOwnProperty("phpMetadataNamespace"))
                        if (!$util.isString(message.phpMetadataNamespace))
                            return "phpMetadataNamespace: string expected";
                    if (message.rubyPackage != null && message.hasOwnProperty("rubyPackage"))
                        if (!$util.isString(message.rubyPackage))
                            return "rubyPackage: string expected";
                    if (message.uninterpretedOption != null && message.hasOwnProperty("uninterpretedOption")) {
                        if (!Array.isArray(message.uninterpretedOption))
                            return "uninterpretedOption: array expected";
                        for (var i = 0; i < message.uninterpretedOption.length; ++i) {
                            var error = $root.google.protobuf.UninterpretedOption.verify(message.uninterpretedOption[i]);
                            if (error)
                                return "uninterpretedOption." + error;
                        }
                    }
                    if (message[".google.api.resourceDefinition"] != null && message.hasOwnProperty(".google.api.resourceDefinition")) {
                        if (!Array.isArray(message[".google.api.resourceDefinition"]))
                            return ".google.api.resourceDefinition: array expected";
                        for (var i = 0; i < message[".google.api.resourceDefinition"].length; ++i) {
                            var error = $root.google.api.ResourceDescriptor.verify(message[".google.api.resourceDefinition"][i]);
                            if (error)
                                return ".google.api.resourceDefinition." + error;
                        }
                    }
                    return null;
                };
    
                /**
                 * Creates a FileOptions message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.protobuf.FileOptions
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.protobuf.FileOptions} FileOptions
                 */
                FileOptions.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.protobuf.FileOptions)
                        return object;
                    var message = new $root.google.protobuf.FileOptions();
                    if (object.javaPackage != null)
                        message.javaPackage = String(object.javaPackage);
                    if (object.javaOuterClassname != null)
                        message.javaOuterClassname = String(object.javaOuterClassname);
                    if (object.javaMultipleFiles != null)
                        message.javaMultipleFiles = Boolean(object.javaMultipleFiles);
                    if (object.javaGenerateEqualsAndHash != null)
                        message.javaGenerateEqualsAndHash = Boolean(object.javaGenerateEqualsAndHash);
                    if (object.javaStringCheckUtf8 != null)
                        message.javaStringCheckUtf8 = Boolean(object.javaStringCheckUtf8);
                    switch (object.optimizeFor) {
                    default:
                        if (typeof object.optimizeFor === "number") {
                            message.optimizeFor = object.optimizeFor;
                            break;
                        }
                        break;
                    case "SPEED":
                    case 1:
                        message.optimizeFor = 1;
                        break;
                    case "CODE_SIZE":
                    case 2:
                        message.optimizeFor = 2;
                        break;
                    case "LITE_RUNTIME":
                    case 3:
                        message.optimizeFor = 3;
                        break;
                    }
                    if (object.goPackage != null)
                        message.goPackage = String(object.goPackage);
                    if (object.ccGenericServices != null)
                        message.ccGenericServices = Boolean(object.ccGenericServices);
                    if (object.javaGenericServices != null)
                        message.javaGenericServices = Boolean(object.javaGenericServices);
                    if (object.pyGenericServices != null)
                        message.pyGenericServices = Boolean(object.pyGenericServices);
                    if (object.phpGenericServices != null)
                        message.phpGenericServices = Boolean(object.phpGenericServices);
                    if (object.deprecated != null)
                        message.deprecated = Boolean(object.deprecated);
                    if (object.ccEnableArenas != null)
                        message.ccEnableArenas = Boolean(object.ccEnableArenas);
                    if (object.objcClassPrefix != null)
                        message.objcClassPrefix = String(object.objcClassPrefix);
                    if (object.csharpNamespace != null)
                        message.csharpNamespace = String(object.csharpNamespace);
                    if (object.swiftPrefix != null)
                        message.swiftPrefix = String(object.swiftPrefix);
                    if (object.phpClassPrefix != null)
                        message.phpClassPrefix = String(object.phpClassPrefix);
                    if (object.phpNamespace != null)
                        message.phpNamespace = String(object.phpNamespace);
                    if (object.phpMetadataNamespace != null)
                        message.phpMetadataNamespace = String(object.phpMetadataNamespace);
                    if (object.rubyPackage != null)
                        message.rubyPackage = String(object.rubyPackage);
                    if (object.uninterpretedOption) {
                        if (!Array.isArray(object.uninterpretedOption))
                            throw TypeError(".google.protobuf.FileOptions.uninterpretedOption: array expected");
                        message.uninterpretedOption = [];
                        for (var i = 0; i < object.uninterpretedOption.length; ++i) {
                            if (typeof object.uninterpretedOption[i] !== "object")
                                throw TypeError(".google.protobuf.FileOptions.uninterpretedOption: object expected");
                            message.uninterpretedOption[i] = $root.google.protobuf.UninterpretedOption.fromObject(object.uninterpretedOption[i]);
                        }
                    }
                    if (object[".google.api.resourceDefinition"]) {
                        if (!Array.isArray(object[".google.api.resourceDefinition"]))
                            throw TypeError(".google.protobuf.FileOptions..google.api.resourceDefinition: array expected");
                        message[".google.api.resourceDefinition"] = [];
                        for (var i = 0; i < object[".google.api.resourceDefinition"].length; ++i) {
                            if (typeof object[".google.api.resourceDefinition"][i] !== "object")
                                throw TypeError(".google.protobuf.FileOptions..google.api.resourceDefinition: object expected");
                            message[".google.api.resourceDefinition"][i] = $root.google.api.ResourceDescriptor.fromObject(object[".google.api.resourceDefinition"][i]);
                        }
                    }
                    return message;
                };
    
                /**
                 * Creates a plain object from a FileOptions message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.protobuf.FileOptions
                 * @static
                 * @param {google.protobuf.FileOptions} message FileOptions
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                FileOptions.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.arrays || options.defaults) {
                        object.uninterpretedOption = [];
                        object[".google.api.resourceDefinition"] = [];
                    }
                    if (options.defaults) {
                        object.javaPackage = "";
                        object.javaOuterClassname = "";
                        object.optimizeFor = options.enums === String ? "SPEED" : 1;
                        object.javaMultipleFiles = false;
                        object.goPackage = "";
                        object.ccGenericServices = false;
                        object.javaGenericServices = false;
                        object.pyGenericServices = false;
                        object.javaGenerateEqualsAndHash = false;
                        object.deprecated = false;
                        object.javaStringCheckUtf8 = false;
                        object.ccEnableArenas = true;
                        object.objcClassPrefix = "";
                        object.csharpNamespace = "";
                        object.swiftPrefix = "";
                        object.phpClassPrefix = "";
                        object.phpNamespace = "";
                        object.phpGenericServices = false;
                        object.phpMetadataNamespace = "";
                        object.rubyPackage = "";
                    }
                    if (message.javaPackage != null && message.hasOwnProperty("javaPackage"))
                        object.javaPackage = message.javaPackage;
                    if (message.javaOuterClassname != null && message.hasOwnProperty("javaOuterClassname"))
                        object.javaOuterClassname = message.javaOuterClassname;
                    if (message.optimizeFor != null && message.hasOwnProperty("optimizeFor"))
                        object.optimizeFor = options.enums === String ? $root.google.protobuf.FileOptions.OptimizeMode[message.optimizeFor] === undefined ? message.optimizeFor : $root.google.protobuf.FileOptions.OptimizeMode[message.optimizeFor] : message.optimizeFor;
                    if (message.javaMultipleFiles != null && message.hasOwnProperty("javaMultipleFiles"))
                        object.javaMultipleFiles = message.javaMultipleFiles;
                    if (message.goPackage != null && message.hasOwnProperty("goPackage"))
                        object.goPackage = message.goPackage;
                    if (message.ccGenericServices != null && message.hasOwnProperty("ccGenericServices"))
                        object.ccGenericServices = message.ccGenericServices;
                    if (message.javaGenericServices != null && message.hasOwnProperty("javaGenericServices"))
                        object.javaGenericServices = message.javaGenericServices;
                    if (message.pyGenericServices != null && message.hasOwnProperty("pyGenericServices"))
                        object.pyGenericServices = message.pyGenericServices;
                    if (message.javaGenerateEqualsAndHash != null && message.hasOwnProperty("javaGenerateEqualsAndHash"))
                        object.javaGenerateEqualsAndHash = message.javaGenerateEqualsAndHash;
                    if (message.deprecated != null && message.hasOwnProperty("deprecated"))
                        object.deprecated = message.deprecated;
                    if (message.javaStringCheckUtf8 != null && message.hasOwnProperty("javaStringCheckUtf8"))
                        object.javaStringCheckUtf8 = message.javaStringCheckUtf8;
                    if (message.ccEnableArenas != null && message.hasOwnProperty("ccEnableArenas"))
                        object.ccEnableArenas = message.ccEnableArenas;
                    if (message.objcClassPrefix != null && message.hasOwnProperty("objcClassPrefix"))
                        object.objcClassPrefix = message.objcClassPrefix;
                    if (message.csharpNamespace != null && message.hasOwnProperty("csharpNamespace"))
                        object.csharpNamespace = message.csharpNamespace;
                    if (message.swiftPrefix != null && message.hasOwnProperty("swiftPrefix"))
                        object.swiftPrefix = message.swiftPrefix;
                    if (message.phpClassPrefix != null && message.hasOwnProperty("phpClassPrefix"))
                        object.phpClassPrefix = message.phpClassPrefix;
                    if (message.phpNamespace != null && message.hasOwnProperty("phpNamespace"))
                        object.phpNamespace = message.phpNamespace;
                    if (message.phpGenericServices != null && message.hasOwnProperty("phpGenericServices"))
                        object.phpGenericServices = message.phpGenericServices;
                    if (message.phpMetadataNamespace != null && message.hasOwnProperty("phpMetadataNamespace"))
                        object.phpMetadataNamespace = message.phpMetadataNamespace;
                    if (message.rubyPackage != null && message.hasOwnProperty("rubyPackage"))
                        object.rubyPackage = message.rubyPackage;
                    if (message.uninterpretedOption && message.uninterpretedOption.length) {
                        object.uninterpretedOption = [];
                        for (var j = 0; j < message.uninterpretedOption.length; ++j)
                            object.uninterpretedOption[j] = $root.google.protobuf.UninterpretedOption.toObject(message.uninterpretedOption[j], options);
                    }
                    if (message[".google.api.resourceDefinition"] && message[".google.api.resourceDefinition"].length) {
                        object[".google.api.resourceDefinition"] = [];
                        for (var j = 0; j < message[".google.api.resourceDefinition"].length; ++j)
                            object[".google.api.resourceDefinition"][j] = $root.google.api.ResourceDescriptor.toObject(message[".google.api.resourceDefinition"][j], options);
                    }
                    return object;
                };
    
                /**
                 * Converts this FileOptions to JSON.
                 * @function toJSON
                 * @memberof google.protobuf.FileOptions
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                FileOptions.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for FileOptions
                 * @function getTypeUrl
                 * @memberof google.protobuf.FileOptions
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                FileOptions.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.protobuf.FileOptions";
                };
    
                /**
                 * OptimizeMode enum.
                 * @name google.protobuf.FileOptions.OptimizeMode
                 * @enum {number}
                 * @property {number} SPEED=1 SPEED value
                 * @property {number} CODE_SIZE=2 CODE_SIZE value
                 * @property {number} LITE_RUNTIME=3 LITE_RUNTIME value
                 */
                FileOptions.OptimizeMode = (function() {
                    var valuesById = {}, values = Object.create(valuesById);
                    values[valuesById[1] = "SPEED"] = 1;
                    values[valuesById[2] = "CODE_SIZE"] = 2;
                    values[valuesById[3] = "LITE_RUNTIME"] = 3;
                    return values;
                })();
    
                return FileOptions;
            })();
    
            protobuf.MessageOptions = (function() {
    
                /**
                 * Properties of a MessageOptions.
                 * @memberof google.protobuf
                 * @interface IMessageOptions
                 * @property {boolean|null} [messageSetWireFormat] MessageOptions messageSetWireFormat
                 * @property {boolean|null} [noStandardDescriptorAccessor] MessageOptions noStandardDescriptorAccessor
                 * @property {boolean|null} [deprecated] MessageOptions deprecated
                 * @property {boolean|null} [mapEntry] MessageOptions mapEntry
                 * @property {Array.<google.protobuf.IUninterpretedOption>|null} [uninterpretedOption] MessageOptions uninterpretedOption
                 * @property {google.api.IResourceDescriptor|null} [".google.api.resource"] MessageOptions .google.api.resource
                 */
    
                /**
                 * Constructs a new MessageOptions.
                 * @memberof google.protobuf
                 * @classdesc Represents a MessageOptions.
                 * @implements IMessageOptions
                 * @constructor
                 * @param {google.protobuf.IMessageOptions=} [properties] Properties to set
                 */
                function MessageOptions(properties) {
                    this.uninterpretedOption = [];
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * MessageOptions messageSetWireFormat.
                 * @member {boolean} messageSetWireFormat
                 * @memberof google.protobuf.MessageOptions
                 * @instance
                 */
                MessageOptions.prototype.messageSetWireFormat = false;
    
                /**
                 * MessageOptions noStandardDescriptorAccessor.
                 * @member {boolean} noStandardDescriptorAccessor
                 * @memberof google.protobuf.MessageOptions
                 * @instance
                 */
                MessageOptions.prototype.noStandardDescriptorAccessor = false;
    
                /**
                 * MessageOptions deprecated.
                 * @member {boolean} deprecated
                 * @memberof google.protobuf.MessageOptions
                 * @instance
                 */
                MessageOptions.prototype.deprecated = false;
    
                /**
                 * MessageOptions mapEntry.
                 * @member {boolean} mapEntry
                 * @memberof google.protobuf.MessageOptions
                 * @instance
                 */
                MessageOptions.prototype.mapEntry = false;
    
                /**
                 * MessageOptions uninterpretedOption.
                 * @member {Array.<google.protobuf.IUninterpretedOption>} uninterpretedOption
                 * @memberof google.protobuf.MessageOptions
                 * @instance
                 */
                MessageOptions.prototype.uninterpretedOption = $util.emptyArray;
    
                /**
                 * MessageOptions .google.api.resource.
                 * @member {google.api.IResourceDescriptor|null|undefined} .google.api.resource
                 * @memberof google.protobuf.MessageOptions
                 * @instance
                 */
                MessageOptions.prototype[".google.api.resource"] = null;
    
                /**
                 * Creates a new MessageOptions instance using the specified properties.
                 * @function create
                 * @memberof google.protobuf.MessageOptions
                 * @static
                 * @param {google.protobuf.IMessageOptions=} [properties] Properties to set
                 * @returns {google.protobuf.MessageOptions} MessageOptions instance
                 */
                MessageOptions.create = function create(properties) {
                    return new MessageOptions(properties);
                };
    
                /**
                 * Encodes the specified MessageOptions message. Does not implicitly {@link google.protobuf.MessageOptions.verify|verify} messages.
                 * @function encode
                 * @memberof google.protobuf.MessageOptions
                 * @static
                 * @param {google.protobuf.IMessageOptions} message MessageOptions message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                MessageOptions.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.messageSetWireFormat != null && Object.hasOwnProperty.call(message, "messageSetWireFormat"))
                        writer.uint32(/* id 1, wireType 0 =*/8).bool(message.messageSetWireFormat);
                    if (message.noStandardDescriptorAccessor != null && Object.hasOwnProperty.call(message, "noStandardDescriptorAccessor"))
                        writer.uint32(/* id 2, wireType 0 =*/16).bool(message.noStandardDescriptorAccessor);
                    if (message.deprecated != null && Object.hasOwnProperty.call(message, "deprecated"))
                        writer.uint32(/* id 3, wireType 0 =*/24).bool(message.deprecated);
                    if (message.mapEntry != null && Object.hasOwnProperty.call(message, "mapEntry"))
                        writer.uint32(/* id 7, wireType 0 =*/56).bool(message.mapEntry);
                    if (message.uninterpretedOption != null && message.uninterpretedOption.length)
                        for (var i = 0; i < message.uninterpretedOption.length; ++i)
                            $root.google.protobuf.UninterpretedOption.encode(message.uninterpretedOption[i], writer.uint32(/* id 999, wireType 2 =*/7994).fork()).ldelim();
                    if (message[".google.api.resource"] != null && Object.hasOwnProperty.call(message, ".google.api.resource"))
                        $root.google.api.ResourceDescriptor.encode(message[".google.api.resource"], writer.uint32(/* id 1053, wireType 2 =*/8426).fork()).ldelim();
                    return writer;
                };
    
                /**
                 * Encodes the specified MessageOptions message, length delimited. Does not implicitly {@link google.protobuf.MessageOptions.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.protobuf.MessageOptions
                 * @static
                 * @param {google.protobuf.IMessageOptions} message MessageOptions message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                MessageOptions.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a MessageOptions message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.protobuf.MessageOptions
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.protobuf.MessageOptions} MessageOptions
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                MessageOptions.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.MessageOptions();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1: {
                                message.messageSetWireFormat = reader.bool();
                                break;
                            }
                        case 2: {
                                message.noStandardDescriptorAccessor = reader.bool();
                                break;
                            }
                        case 3: {
                                message.deprecated = reader.bool();
                                break;
                            }
                        case 7: {
                                message.mapEntry = reader.bool();
                                break;
                            }
                        case 999: {
                                if (!(message.uninterpretedOption && message.uninterpretedOption.length))
                                    message.uninterpretedOption = [];
                                message.uninterpretedOption.push($root.google.protobuf.UninterpretedOption.decode(reader, reader.uint32()));
                                break;
                            }
                        case 1053: {
                                message[".google.api.resource"] = $root.google.api.ResourceDescriptor.decode(reader, reader.uint32());
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a MessageOptions message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.protobuf.MessageOptions
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.protobuf.MessageOptions} MessageOptions
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                MessageOptions.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a MessageOptions message.
                 * @function verify
                 * @memberof google.protobuf.MessageOptions
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                MessageOptions.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.messageSetWireFormat != null && message.hasOwnProperty("messageSetWireFormat"))
                        if (typeof message.messageSetWireFormat !== "boolean")
                            return "messageSetWireFormat: boolean expected";
                    if (message.noStandardDescriptorAccessor != null && message.hasOwnProperty("noStandardDescriptorAccessor"))
                        if (typeof message.noStandardDescriptorAccessor !== "boolean")
                            return "noStandardDescriptorAccessor: boolean expected";
                    if (message.deprecated != null && message.hasOwnProperty("deprecated"))
                        if (typeof message.deprecated !== "boolean")
                            return "deprecated: boolean expected";
                    if (message.mapEntry != null && message.hasOwnProperty("mapEntry"))
                        if (typeof message.mapEntry !== "boolean")
                            return "mapEntry: boolean expected";
                    if (message.uninterpretedOption != null && message.hasOwnProperty("uninterpretedOption")) {
                        if (!Array.isArray(message.uninterpretedOption))
                            return "uninterpretedOption: array expected";
                        for (var i = 0; i < message.uninterpretedOption.length; ++i) {
                            var error = $root.google.protobuf.UninterpretedOption.verify(message.uninterpretedOption[i]);
                            if (error)
                                return "uninterpretedOption." + error;
                        }
                    }
                    if (message[".google.api.resource"] != null && message.hasOwnProperty(".google.api.resource")) {
                        var error = $root.google.api.ResourceDescriptor.verify(message[".google.api.resource"]);
                        if (error)
                            return ".google.api.resource." + error;
                    }
                    return null;
                };
    
                /**
                 * Creates a MessageOptions message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.protobuf.MessageOptions
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.protobuf.MessageOptions} MessageOptions
                 */
                MessageOptions.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.protobuf.MessageOptions)
                        return object;
                    var message = new $root.google.protobuf.MessageOptions();
                    if (object.messageSetWireFormat != null)
                        message.messageSetWireFormat = Boolean(object.messageSetWireFormat);
                    if (object.noStandardDescriptorAccessor != null)
                        message.noStandardDescriptorAccessor = Boolean(object.noStandardDescriptorAccessor);
                    if (object.deprecated != null)
                        message.deprecated = Boolean(object.deprecated);
                    if (object.mapEntry != null)
                        message.mapEntry = Boolean(object.mapEntry);
                    if (object.uninterpretedOption) {
                        if (!Array.isArray(object.uninterpretedOption))
                            throw TypeError(".google.protobuf.MessageOptions.uninterpretedOption: array expected");
                        message.uninterpretedOption = [];
                        for (var i = 0; i < object.uninterpretedOption.length; ++i) {
                            if (typeof object.uninterpretedOption[i] !== "object")
                                throw TypeError(".google.protobuf.MessageOptions.uninterpretedOption: object expected");
                            message.uninterpretedOption[i] = $root.google.protobuf.UninterpretedOption.fromObject(object.uninterpretedOption[i]);
                        }
                    }
                    if (object[".google.api.resource"] != null) {
                        if (typeof object[".google.api.resource"] !== "object")
                            throw TypeError(".google.protobuf.MessageOptions..google.api.resource: object expected");
                        message[".google.api.resource"] = $root.google.api.ResourceDescriptor.fromObject(object[".google.api.resource"]);
                    }
                    return message;
                };
    
                /**
                 * Creates a plain object from a MessageOptions message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.protobuf.MessageOptions
                 * @static
                 * @param {google.protobuf.MessageOptions} message MessageOptions
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                MessageOptions.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.arrays || options.defaults)
                        object.uninterpretedOption = [];
                    if (options.defaults) {
                        object.messageSetWireFormat = false;
                        object.noStandardDescriptorAccessor = false;
                        object.deprecated = false;
                        object.mapEntry = false;
                        object[".google.api.resource"] = null;
                    }
                    if (message.messageSetWireFormat != null && message.hasOwnProperty("messageSetWireFormat"))
                        object.messageSetWireFormat = message.messageSetWireFormat;
                    if (message.noStandardDescriptorAccessor != null && message.hasOwnProperty("noStandardDescriptorAccessor"))
                        object.noStandardDescriptorAccessor = message.noStandardDescriptorAccessor;
                    if (message.deprecated != null && message.hasOwnProperty("deprecated"))
                        object.deprecated = message.deprecated;
                    if (message.mapEntry != null && message.hasOwnProperty("mapEntry"))
                        object.mapEntry = message.mapEntry;
                    if (message.uninterpretedOption && message.uninterpretedOption.length) {
                        object.uninterpretedOption = [];
                        for (var j = 0; j < message.uninterpretedOption.length; ++j)
                            object.uninterpretedOption[j] = $root.google.protobuf.UninterpretedOption.toObject(message.uninterpretedOption[j], options);
                    }
                    if (message[".google.api.resource"] != null && message.hasOwnProperty(".google.api.resource"))
                        object[".google.api.resource"] = $root.google.api.ResourceDescriptor.toObject(message[".google.api.resource"], options);
                    return object;
                };
    
                /**
                 * Converts this MessageOptions to JSON.
                 * @function toJSON
                 * @memberof google.protobuf.MessageOptions
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                MessageOptions.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for MessageOptions
                 * @function getTypeUrl
                 * @memberof google.protobuf.MessageOptions
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                MessageOptions.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.protobuf.MessageOptions";
                };
    
                return MessageOptions;
            })();
    
            protobuf.FieldOptions = (function() {
    
                /**
                 * Properties of a FieldOptions.
                 * @memberof google.protobuf
                 * @interface IFieldOptions
                 * @property {google.protobuf.FieldOptions.CType|null} [ctype] FieldOptions ctype
                 * @property {boolean|null} [packed] FieldOptions packed
                 * @property {google.protobuf.FieldOptions.JSType|null} [jstype] FieldOptions jstype
                 * @property {boolean|null} [lazy] FieldOptions lazy
                 * @property {boolean|null} [unverifiedLazy] FieldOptions unverifiedLazy
                 * @property {boolean|null} [deprecated] FieldOptions deprecated
                 * @property {boolean|null} [weak] FieldOptions weak
                 * @property {Array.<google.protobuf.IUninterpretedOption>|null} [uninterpretedOption] FieldOptions uninterpretedOption
                 * @property {Array.<google.api.FieldBehavior>|null} [".google.api.fieldBehavior"] FieldOptions .google.api.fieldBehavior
                 * @property {google.api.IResourceReference|null} [".google.api.resourceReference"] FieldOptions .google.api.resourceReference
                 */
    
                /**
                 * Constructs a new FieldOptions.
                 * @memberof google.protobuf
                 * @classdesc Represents a FieldOptions.
                 * @implements IFieldOptions
                 * @constructor
                 * @param {google.protobuf.IFieldOptions=} [properties] Properties to set
                 */
                function FieldOptions(properties) {
                    this.uninterpretedOption = [];
                    this[".google.api.fieldBehavior"] = [];
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * FieldOptions ctype.
                 * @member {google.protobuf.FieldOptions.CType} ctype
                 * @memberof google.protobuf.FieldOptions
                 * @instance
                 */
                FieldOptions.prototype.ctype = 0;
    
                /**
                 * FieldOptions packed.
                 * @member {boolean} packed
                 * @memberof google.protobuf.FieldOptions
                 * @instance
                 */
                FieldOptions.prototype.packed = false;
    
                /**
                 * FieldOptions jstype.
                 * @member {google.protobuf.FieldOptions.JSType} jstype
                 * @memberof google.protobuf.FieldOptions
                 * @instance
                 */
                FieldOptions.prototype.jstype = 0;
    
                /**
                 * FieldOptions lazy.
                 * @member {boolean} lazy
                 * @memberof google.protobuf.FieldOptions
                 * @instance
                 */
                FieldOptions.prototype.lazy = false;
    
                /**
                 * FieldOptions unverifiedLazy.
                 * @member {boolean} unverifiedLazy
                 * @memberof google.protobuf.FieldOptions
                 * @instance
                 */
                FieldOptions.prototype.unverifiedLazy = false;
    
                /**
                 * FieldOptions deprecated.
                 * @member {boolean} deprecated
                 * @memberof google.protobuf.FieldOptions
                 * @instance
                 */
                FieldOptions.prototype.deprecated = false;
    
                /**
                 * FieldOptions weak.
                 * @member {boolean} weak
                 * @memberof google.protobuf.FieldOptions
                 * @instance
                 */
                FieldOptions.prototype.weak = false;
    
                /**
                 * FieldOptions uninterpretedOption.
                 * @member {Array.<google.protobuf.IUninterpretedOption>} uninterpretedOption
                 * @memberof google.protobuf.FieldOptions
                 * @instance
                 */
                FieldOptions.prototype.uninterpretedOption = $util.emptyArray;
    
                /**
                 * FieldOptions .google.api.fieldBehavior.
                 * @member {Array.<google.api.FieldBehavior>} .google.api.fieldBehavior
                 * @memberof google.protobuf.FieldOptions
                 * @instance
                 */
                FieldOptions.prototype[".google.api.fieldBehavior"] = $util.emptyArray;
    
                /**
                 * FieldOptions .google.api.resourceReference.
                 * @member {google.api.IResourceReference|null|undefined} .google.api.resourceReference
                 * @memberof google.protobuf.FieldOptions
                 * @instance
                 */
                FieldOptions.prototype[".google.api.resourceReference"] = null;
    
                /**
                 * Creates a new FieldOptions instance using the specified properties.
                 * @function create
                 * @memberof google.protobuf.FieldOptions
                 * @static
                 * @param {google.protobuf.IFieldOptions=} [properties] Properties to set
                 * @returns {google.protobuf.FieldOptions} FieldOptions instance
                 */
                FieldOptions.create = function create(properties) {
                    return new FieldOptions(properties);
                };
    
                /**
                 * Encodes the specified FieldOptions message. Does not implicitly {@link google.protobuf.FieldOptions.verify|verify} messages.
                 * @function encode
                 * @memberof google.protobuf.FieldOptions
                 * @static
                 * @param {google.protobuf.IFieldOptions} message FieldOptions message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                FieldOptions.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.ctype != null && Object.hasOwnProperty.call(message, "ctype"))
                        writer.uint32(/* id 1, wireType 0 =*/8).int32(message.ctype);
                    if (message.packed != null && Object.hasOwnProperty.call(message, "packed"))
                        writer.uint32(/* id 2, wireType 0 =*/16).bool(message.packed);
                    if (message.deprecated != null && Object.hasOwnProperty.call(message, "deprecated"))
                        writer.uint32(/* id 3, wireType 0 =*/24).bool(message.deprecated);
                    if (message.lazy != null && Object.hasOwnProperty.call(message, "lazy"))
                        writer.uint32(/* id 5, wireType 0 =*/40).bool(message.lazy);
                    if (message.jstype != null && Object.hasOwnProperty.call(message, "jstype"))
                        writer.uint32(/* id 6, wireType 0 =*/48).int32(message.jstype);
                    if (message.weak != null && Object.hasOwnProperty.call(message, "weak"))
                        writer.uint32(/* id 10, wireType 0 =*/80).bool(message.weak);
                    if (message.unverifiedLazy != null && Object.hasOwnProperty.call(message, "unverifiedLazy"))
                        writer.uint32(/* id 15, wireType 0 =*/120).bool(message.unverifiedLazy);
                    if (message.uninterpretedOption != null && message.uninterpretedOption.length)
                        for (var i = 0; i < message.uninterpretedOption.length; ++i)
                            $root.google.protobuf.UninterpretedOption.encode(message.uninterpretedOption[i], writer.uint32(/* id 999, wireType 2 =*/7994).fork()).ldelim();
                    if (message[".google.api.fieldBehavior"] != null && message[".google.api.fieldBehavior"].length) {
                        writer.uint32(/* id 1052, wireType 2 =*/8418).fork();
                        for (var i = 0; i < message[".google.api.fieldBehavior"].length; ++i)
                            writer.int32(message[".google.api.fieldBehavior"][i]);
                        writer.ldelim();
                    }
                    if (message[".google.api.resourceReference"] != null && Object.hasOwnProperty.call(message, ".google.api.resourceReference"))
                        $root.google.api.ResourceReference.encode(message[".google.api.resourceReference"], writer.uint32(/* id 1055, wireType 2 =*/8442).fork()).ldelim();
                    return writer;
                };
    
                /**
                 * Encodes the specified FieldOptions message, length delimited. Does not implicitly {@link google.protobuf.FieldOptions.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.protobuf.FieldOptions
                 * @static
                 * @param {google.protobuf.IFieldOptions} message FieldOptions message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                FieldOptions.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a FieldOptions message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.protobuf.FieldOptions
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.protobuf.FieldOptions} FieldOptions
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                FieldOptions.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.FieldOptions();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1: {
                                message.ctype = reader.int32();
                                break;
                            }
                        case 2: {
                                message.packed = reader.bool();
                                break;
                            }
                        case 6: {
                                message.jstype = reader.int32();
                                break;
                            }
                        case 5: {
                                message.lazy = reader.bool();
                                break;
                            }
                        case 15: {
                                message.unverifiedLazy = reader.bool();
                                break;
                            }
                        case 3: {
                                message.deprecated = reader.bool();
                                break;
                            }
                        case 10: {
                                message.weak = reader.bool();
                                break;
                            }
                        case 999: {
                                if (!(message.uninterpretedOption && message.uninterpretedOption.length))
                                    message.uninterpretedOption = [];
                                message.uninterpretedOption.push($root.google.protobuf.UninterpretedOption.decode(reader, reader.uint32()));
                                break;
                            }
                        case 1052: {
                                if (!(message[".google.api.fieldBehavior"] && message[".google.api.fieldBehavior"].length))
                                    message[".google.api.fieldBehavior"] = [];
                                if ((tag & 7) === 2) {
                                    var end2 = reader.uint32() + reader.pos;
                                    while (reader.pos < end2)
                                        message[".google.api.fieldBehavior"].push(reader.int32());
                                } else
                                    message[".google.api.fieldBehavior"].push(reader.int32());
                                break;
                            }
                        case 1055: {
                                message[".google.api.resourceReference"] = $root.google.api.ResourceReference.decode(reader, reader.uint32());
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a FieldOptions message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.protobuf.FieldOptions
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.protobuf.FieldOptions} FieldOptions
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                FieldOptions.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a FieldOptions message.
                 * @function verify
                 * @memberof google.protobuf.FieldOptions
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                FieldOptions.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.ctype != null && message.hasOwnProperty("ctype"))
                        switch (message.ctype) {
                        default:
                            return "ctype: enum value expected";
                        case 0:
                        case 1:
                        case 2:
                            break;
                        }
                    if (message.packed != null && message.hasOwnProperty("packed"))
                        if (typeof message.packed !== "boolean")
                            return "packed: boolean expected";
                    if (message.jstype != null && message.hasOwnProperty("jstype"))
                        switch (message.jstype) {
                        default:
                            return "jstype: enum value expected";
                        case 0:
                        case 1:
                        case 2:
                            break;
                        }
                    if (message.lazy != null && message.hasOwnProperty("lazy"))
                        if (typeof message.lazy !== "boolean")
                            return "lazy: boolean expected";
                    if (message.unverifiedLazy != null && message.hasOwnProperty("unverifiedLazy"))
                        if (typeof message.unverifiedLazy !== "boolean")
                            return "unverifiedLazy: boolean expected";
                    if (message.deprecated != null && message.hasOwnProperty("deprecated"))
                        if (typeof message.deprecated !== "boolean")
                            return "deprecated: boolean expected";
                    if (message.weak != null && message.hasOwnProperty("weak"))
                        if (typeof message.weak !== "boolean")
                            return "weak: boolean expected";
                    if (message.uninterpretedOption != null && message.hasOwnProperty("uninterpretedOption")) {
                        if (!Array.isArray(message.uninterpretedOption))
                            return "uninterpretedOption: array expected";
                        for (var i = 0; i < message.uninterpretedOption.length; ++i) {
                            var error = $root.google.protobuf.UninterpretedOption.verify(message.uninterpretedOption[i]);
                            if (error)
                                return "uninterpretedOption." + error;
                        }
                    }
                    if (message[".google.api.fieldBehavior"] != null && message.hasOwnProperty(".google.api.fieldBehavior")) {
                        if (!Array.isArray(message[".google.api.fieldBehavior"]))
                            return ".google.api.fieldBehavior: array expected";
                        for (var i = 0; i < message[".google.api.fieldBehavior"].length; ++i)
                            switch (message[".google.api.fieldBehavior"][i]) {
                            default:
                                return ".google.api.fieldBehavior: enum value[] expected";
                            case 0:
                            case 1:
                            case 2:
                            case 3:
                            case 4:
                            case 5:
                            case 6:
                            case 7:
                                break;
                            }
                    }
                    if (message[".google.api.resourceReference"] != null && message.hasOwnProperty(".google.api.resourceReference")) {
                        var error = $root.google.api.ResourceReference.verify(message[".google.api.resourceReference"]);
                        if (error)
                            return ".google.api.resourceReference." + error;
                    }
                    return null;
                };
    
                /**
                 * Creates a FieldOptions message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.protobuf.FieldOptions
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.protobuf.FieldOptions} FieldOptions
                 */
                FieldOptions.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.protobuf.FieldOptions)
                        return object;
                    var message = new $root.google.protobuf.FieldOptions();
                    switch (object.ctype) {
                    default:
                        if (typeof object.ctype === "number") {
                            message.ctype = object.ctype;
                            break;
                        }
                        break;
                    case "STRING":
                    case 0:
                        message.ctype = 0;
                        break;
                    case "CORD":
                    case 1:
                        message.ctype = 1;
                        break;
                    case "STRING_PIECE":
                    case 2:
                        message.ctype = 2;
                        break;
                    }
                    if (object.packed != null)
                        message.packed = Boolean(object.packed);
                    switch (object.jstype) {
                    default:
                        if (typeof object.jstype === "number") {
                            message.jstype = object.jstype;
                            break;
                        }
                        break;
                    case "JS_NORMAL":
                    case 0:
                        message.jstype = 0;
                        break;
                    case "JS_STRING":
                    case 1:
                        message.jstype = 1;
                        break;
                    case "JS_NUMBER":
                    case 2:
                        message.jstype = 2;
                        break;
                    }
                    if (object.lazy != null)
                        message.lazy = Boolean(object.lazy);
                    if (object.unverifiedLazy != null)
                        message.unverifiedLazy = Boolean(object.unverifiedLazy);
                    if (object.deprecated != null)
                        message.deprecated = Boolean(object.deprecated);
                    if (object.weak != null)
                        message.weak = Boolean(object.weak);
                    if (object.uninterpretedOption) {
                        if (!Array.isArray(object.uninterpretedOption))
                            throw TypeError(".google.protobuf.FieldOptions.uninterpretedOption: array expected");
                        message.uninterpretedOption = [];
                        for (var i = 0; i < object.uninterpretedOption.length; ++i) {
                            if (typeof object.uninterpretedOption[i] !== "object")
                                throw TypeError(".google.protobuf.FieldOptions.uninterpretedOption: object expected");
                            message.uninterpretedOption[i] = $root.google.protobuf.UninterpretedOption.fromObject(object.uninterpretedOption[i]);
                        }
                    }
                    if (object[".google.api.fieldBehavior"]) {
                        if (!Array.isArray(object[".google.api.fieldBehavior"]))
                            throw TypeError(".google.protobuf.FieldOptions..google.api.fieldBehavior: array expected");
                        message[".google.api.fieldBehavior"] = [];
                        for (var i = 0; i < object[".google.api.fieldBehavior"].length; ++i)
                            switch (object[".google.api.fieldBehavior"][i]) {
                            default:
                                if (typeof object[".google.api.fieldBehavior"][i] === "number") {
                                    message[".google.api.fieldBehavior"][i] = object[".google.api.fieldBehavior"][i];
                                    break;
                                }
                            case "FIELD_BEHAVIOR_UNSPECIFIED":
                            case 0:
                                message[".google.api.fieldBehavior"][i] = 0;
                                break;
                            case "OPTIONAL":
                            case 1:
                                message[".google.api.fieldBehavior"][i] = 1;
                                break;
                            case "REQUIRED":
                            case 2:
                                message[".google.api.fieldBehavior"][i] = 2;
                                break;
                            case "OUTPUT_ONLY":
                            case 3:
                                message[".google.api.fieldBehavior"][i] = 3;
                                break;
                            case "INPUT_ONLY":
                            case 4:
                                message[".google.api.fieldBehavior"][i] = 4;
                                break;
                            case "IMMUTABLE":
                            case 5:
                                message[".google.api.fieldBehavior"][i] = 5;
                                break;
                            case "UNORDERED_LIST":
                            case 6:
                                message[".google.api.fieldBehavior"][i] = 6;
                                break;
                            case "NON_EMPTY_DEFAULT":
                            case 7:
                                message[".google.api.fieldBehavior"][i] = 7;
                                break;
                            }
                    }
                    if (object[".google.api.resourceReference"] != null) {
                        if (typeof object[".google.api.resourceReference"] !== "object")
                            throw TypeError(".google.protobuf.FieldOptions..google.api.resourceReference: object expected");
                        message[".google.api.resourceReference"] = $root.google.api.ResourceReference.fromObject(object[".google.api.resourceReference"]);
                    }
                    return message;
                };
    
                /**
                 * Creates a plain object from a FieldOptions message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.protobuf.FieldOptions
                 * @static
                 * @param {google.protobuf.FieldOptions} message FieldOptions
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                FieldOptions.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.arrays || options.defaults) {
                        object.uninterpretedOption = [];
                        object[".google.api.fieldBehavior"] = [];
                    }
                    if (options.defaults) {
                        object.ctype = options.enums === String ? "STRING" : 0;
                        object.packed = false;
                        object.deprecated = false;
                        object.lazy = false;
                        object.jstype = options.enums === String ? "JS_NORMAL" : 0;
                        object.weak = false;
                        object.unverifiedLazy = false;
                        object[".google.api.resourceReference"] = null;
                    }
                    if (message.ctype != null && message.hasOwnProperty("ctype"))
                        object.ctype = options.enums === String ? $root.google.protobuf.FieldOptions.CType[message.ctype] === undefined ? message.ctype : $root.google.protobuf.FieldOptions.CType[message.ctype] : message.ctype;
                    if (message.packed != null && message.hasOwnProperty("packed"))
                        object.packed = message.packed;
                    if (message.deprecated != null && message.hasOwnProperty("deprecated"))
                        object.deprecated = message.deprecated;
                    if (message.lazy != null && message.hasOwnProperty("lazy"))
                        object.lazy = message.lazy;
                    if (message.jstype != null && message.hasOwnProperty("jstype"))
                        object.jstype = options.enums === String ? $root.google.protobuf.FieldOptions.JSType[message.jstype] === undefined ? message.jstype : $root.google.protobuf.FieldOptions.JSType[message.jstype] : message.jstype;
                    if (message.weak != null && message.hasOwnProperty("weak"))
                        object.weak = message.weak;
                    if (message.unverifiedLazy != null && message.hasOwnProperty("unverifiedLazy"))
                        object.unverifiedLazy = message.unverifiedLazy;
                    if (message.uninterpretedOption && message.uninterpretedOption.length) {
                        object.uninterpretedOption = [];
                        for (var j = 0; j < message.uninterpretedOption.length; ++j)
                            object.uninterpretedOption[j] = $root.google.protobuf.UninterpretedOption.toObject(message.uninterpretedOption[j], options);
                    }
                    if (message[".google.api.fieldBehavior"] && message[".google.api.fieldBehavior"].length) {
                        object[".google.api.fieldBehavior"] = [];
                        for (var j = 0; j < message[".google.api.fieldBehavior"].length; ++j)
                            object[".google.api.fieldBehavior"][j] = options.enums === String ? $root.google.api.FieldBehavior[message[".google.api.fieldBehavior"][j]] === undefined ? message[".google.api.fieldBehavior"][j] : $root.google.api.FieldBehavior[message[".google.api.fieldBehavior"][j]] : message[".google.api.fieldBehavior"][j];
                    }
                    if (message[".google.api.resourceReference"] != null && message.hasOwnProperty(".google.api.resourceReference"))
                        object[".google.api.resourceReference"] = $root.google.api.ResourceReference.toObject(message[".google.api.resourceReference"], options);
                    return object;
                };
    
                /**
                 * Converts this FieldOptions to JSON.
                 * @function toJSON
                 * @memberof google.protobuf.FieldOptions
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                FieldOptions.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for FieldOptions
                 * @function getTypeUrl
                 * @memberof google.protobuf.FieldOptions
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                FieldOptions.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.protobuf.FieldOptions";
                };
    
                /**
                 * CType enum.
                 * @name google.protobuf.FieldOptions.CType
                 * @enum {number}
                 * @property {number} STRING=0 STRING value
                 * @property {number} CORD=1 CORD value
                 * @property {number} STRING_PIECE=2 STRING_PIECE value
                 */
                FieldOptions.CType = (function() {
                    var valuesById = {}, values = Object.create(valuesById);
                    values[valuesById[0] = "STRING"] = 0;
                    values[valuesById[1] = "CORD"] = 1;
                    values[valuesById[2] = "STRING_PIECE"] = 2;
                    return values;
                })();
    
                /**
                 * JSType enum.
                 * @name google.protobuf.FieldOptions.JSType
                 * @enum {number}
                 * @property {number} JS_NORMAL=0 JS_NORMAL value
                 * @property {number} JS_STRING=1 JS_STRING value
                 * @property {number} JS_NUMBER=2 JS_NUMBER value
                 */
                FieldOptions.JSType = (function() {
                    var valuesById = {}, values = Object.create(valuesById);
                    values[valuesById[0] = "JS_NORMAL"] = 0;
                    values[valuesById[1] = "JS_STRING"] = 1;
                    values[valuesById[2] = "JS_NUMBER"] = 2;
                    return values;
                })();
    
                return FieldOptions;
            })();
    
            protobuf.OneofOptions = (function() {
    
                /**
                 * Properties of an OneofOptions.
                 * @memberof google.protobuf
                 * @interface IOneofOptions
                 * @property {Array.<google.protobuf.IUninterpretedOption>|null} [uninterpretedOption] OneofOptions uninterpretedOption
                 */
    
                /**
                 * Constructs a new OneofOptions.
                 * @memberof google.protobuf
                 * @classdesc Represents an OneofOptions.
                 * @implements IOneofOptions
                 * @constructor
                 * @param {google.protobuf.IOneofOptions=} [properties] Properties to set
                 */
                function OneofOptions(properties) {
                    this.uninterpretedOption = [];
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * OneofOptions uninterpretedOption.
                 * @member {Array.<google.protobuf.IUninterpretedOption>} uninterpretedOption
                 * @memberof google.protobuf.OneofOptions
                 * @instance
                 */
                OneofOptions.prototype.uninterpretedOption = $util.emptyArray;
    
                /**
                 * Creates a new OneofOptions instance using the specified properties.
                 * @function create
                 * @memberof google.protobuf.OneofOptions
                 * @static
                 * @param {google.protobuf.IOneofOptions=} [properties] Properties to set
                 * @returns {google.protobuf.OneofOptions} OneofOptions instance
                 */
                OneofOptions.create = function create(properties) {
                    return new OneofOptions(properties);
                };
    
                /**
                 * Encodes the specified OneofOptions message. Does not implicitly {@link google.protobuf.OneofOptions.verify|verify} messages.
                 * @function encode
                 * @memberof google.protobuf.OneofOptions
                 * @static
                 * @param {google.protobuf.IOneofOptions} message OneofOptions message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                OneofOptions.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.uninterpretedOption != null && message.uninterpretedOption.length)
                        for (var i = 0; i < message.uninterpretedOption.length; ++i)
                            $root.google.protobuf.UninterpretedOption.encode(message.uninterpretedOption[i], writer.uint32(/* id 999, wireType 2 =*/7994).fork()).ldelim();
                    return writer;
                };
    
                /**
                 * Encodes the specified OneofOptions message, length delimited. Does not implicitly {@link google.protobuf.OneofOptions.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.protobuf.OneofOptions
                 * @static
                 * @param {google.protobuf.IOneofOptions} message OneofOptions message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                OneofOptions.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes an OneofOptions message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.protobuf.OneofOptions
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.protobuf.OneofOptions} OneofOptions
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                OneofOptions.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.OneofOptions();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 999: {
                                if (!(message.uninterpretedOption && message.uninterpretedOption.length))
                                    message.uninterpretedOption = [];
                                message.uninterpretedOption.push($root.google.protobuf.UninterpretedOption.decode(reader, reader.uint32()));
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes an OneofOptions message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.protobuf.OneofOptions
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.protobuf.OneofOptions} OneofOptions
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                OneofOptions.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies an OneofOptions message.
                 * @function verify
                 * @memberof google.protobuf.OneofOptions
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                OneofOptions.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.uninterpretedOption != null && message.hasOwnProperty("uninterpretedOption")) {
                        if (!Array.isArray(message.uninterpretedOption))
                            return "uninterpretedOption: array expected";
                        for (var i = 0; i < message.uninterpretedOption.length; ++i) {
                            var error = $root.google.protobuf.UninterpretedOption.verify(message.uninterpretedOption[i]);
                            if (error)
                                return "uninterpretedOption." + error;
                        }
                    }
                    return null;
                };
    
                /**
                 * Creates an OneofOptions message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.protobuf.OneofOptions
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.protobuf.OneofOptions} OneofOptions
                 */
                OneofOptions.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.protobuf.OneofOptions)
                        return object;
                    var message = new $root.google.protobuf.OneofOptions();
                    if (object.uninterpretedOption) {
                        if (!Array.isArray(object.uninterpretedOption))
                            throw TypeError(".google.protobuf.OneofOptions.uninterpretedOption: array expected");
                        message.uninterpretedOption = [];
                        for (var i = 0; i < object.uninterpretedOption.length; ++i) {
                            if (typeof object.uninterpretedOption[i] !== "object")
                                throw TypeError(".google.protobuf.OneofOptions.uninterpretedOption: object expected");
                            message.uninterpretedOption[i] = $root.google.protobuf.UninterpretedOption.fromObject(object.uninterpretedOption[i]);
                        }
                    }
                    return message;
                };
    
                /**
                 * Creates a plain object from an OneofOptions message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.protobuf.OneofOptions
                 * @static
                 * @param {google.protobuf.OneofOptions} message OneofOptions
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                OneofOptions.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.arrays || options.defaults)
                        object.uninterpretedOption = [];
                    if (message.uninterpretedOption && message.uninterpretedOption.length) {
                        object.uninterpretedOption = [];
                        for (var j = 0; j < message.uninterpretedOption.length; ++j)
                            object.uninterpretedOption[j] = $root.google.protobuf.UninterpretedOption.toObject(message.uninterpretedOption[j], options);
                    }
                    return object;
                };
    
                /**
                 * Converts this OneofOptions to JSON.
                 * @function toJSON
                 * @memberof google.protobuf.OneofOptions
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                OneofOptions.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for OneofOptions
                 * @function getTypeUrl
                 * @memberof google.protobuf.OneofOptions
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                OneofOptions.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.protobuf.OneofOptions";
                };
    
                return OneofOptions;
            })();
    
            protobuf.EnumOptions = (function() {
    
                /**
                 * Properties of an EnumOptions.
                 * @memberof google.protobuf
                 * @interface IEnumOptions
                 * @property {boolean|null} [allowAlias] EnumOptions allowAlias
                 * @property {boolean|null} [deprecated] EnumOptions deprecated
                 * @property {Array.<google.protobuf.IUninterpretedOption>|null} [uninterpretedOption] EnumOptions uninterpretedOption
                 */
    
                /**
                 * Constructs a new EnumOptions.
                 * @memberof google.protobuf
                 * @classdesc Represents an EnumOptions.
                 * @implements IEnumOptions
                 * @constructor
                 * @param {google.protobuf.IEnumOptions=} [properties] Properties to set
                 */
                function EnumOptions(properties) {
                    this.uninterpretedOption = [];
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * EnumOptions allowAlias.
                 * @member {boolean} allowAlias
                 * @memberof google.protobuf.EnumOptions
                 * @instance
                 */
                EnumOptions.prototype.allowAlias = false;
    
                /**
                 * EnumOptions deprecated.
                 * @member {boolean} deprecated
                 * @memberof google.protobuf.EnumOptions
                 * @instance
                 */
                EnumOptions.prototype.deprecated = false;
    
                /**
                 * EnumOptions uninterpretedOption.
                 * @member {Array.<google.protobuf.IUninterpretedOption>} uninterpretedOption
                 * @memberof google.protobuf.EnumOptions
                 * @instance
                 */
                EnumOptions.prototype.uninterpretedOption = $util.emptyArray;
    
                /**
                 * Creates a new EnumOptions instance using the specified properties.
                 * @function create
                 * @memberof google.protobuf.EnumOptions
                 * @static
                 * @param {google.protobuf.IEnumOptions=} [properties] Properties to set
                 * @returns {google.protobuf.EnumOptions} EnumOptions instance
                 */
                EnumOptions.create = function create(properties) {
                    return new EnumOptions(properties);
                };
    
                /**
                 * Encodes the specified EnumOptions message. Does not implicitly {@link google.protobuf.EnumOptions.verify|verify} messages.
                 * @function encode
                 * @memberof google.protobuf.EnumOptions
                 * @static
                 * @param {google.protobuf.IEnumOptions} message EnumOptions message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                EnumOptions.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.allowAlias != null && Object.hasOwnProperty.call(message, "allowAlias"))
                        writer.uint32(/* id 2, wireType 0 =*/16).bool(message.allowAlias);
                    if (message.deprecated != null && Object.hasOwnProperty.call(message, "deprecated"))
                        writer.uint32(/* id 3, wireType 0 =*/24).bool(message.deprecated);
                    if (message.uninterpretedOption != null && message.uninterpretedOption.length)
                        for (var i = 0; i < message.uninterpretedOption.length; ++i)
                            $root.google.protobuf.UninterpretedOption.encode(message.uninterpretedOption[i], writer.uint32(/* id 999, wireType 2 =*/7994).fork()).ldelim();
                    return writer;
                };
    
                /**
                 * Encodes the specified EnumOptions message, length delimited. Does not implicitly {@link google.protobuf.EnumOptions.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.protobuf.EnumOptions
                 * @static
                 * @param {google.protobuf.IEnumOptions} message EnumOptions message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                EnumOptions.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes an EnumOptions message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.protobuf.EnumOptions
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.protobuf.EnumOptions} EnumOptions
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                EnumOptions.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.EnumOptions();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 2: {
                                message.allowAlias = reader.bool();
                                break;
                            }
                        case 3: {
                                message.deprecated = reader.bool();
                                break;
                            }
                        case 999: {
                                if (!(message.uninterpretedOption && message.uninterpretedOption.length))
                                    message.uninterpretedOption = [];
                                message.uninterpretedOption.push($root.google.protobuf.UninterpretedOption.decode(reader, reader.uint32()));
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes an EnumOptions message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.protobuf.EnumOptions
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.protobuf.EnumOptions} EnumOptions
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                EnumOptions.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies an EnumOptions message.
                 * @function verify
                 * @memberof google.protobuf.EnumOptions
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                EnumOptions.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.allowAlias != null && message.hasOwnProperty("allowAlias"))
                        if (typeof message.allowAlias !== "boolean")
                            return "allowAlias: boolean expected";
                    if (message.deprecated != null && message.hasOwnProperty("deprecated"))
                        if (typeof message.deprecated !== "boolean")
                            return "deprecated: boolean expected";
                    if (message.uninterpretedOption != null && message.hasOwnProperty("uninterpretedOption")) {
                        if (!Array.isArray(message.uninterpretedOption))
                            return "uninterpretedOption: array expected";
                        for (var i = 0; i < message.uninterpretedOption.length; ++i) {
                            var error = $root.google.protobuf.UninterpretedOption.verify(message.uninterpretedOption[i]);
                            if (error)
                                return "uninterpretedOption." + error;
                        }
                    }
                    return null;
                };
    
                /**
                 * Creates an EnumOptions message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.protobuf.EnumOptions
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.protobuf.EnumOptions} EnumOptions
                 */
                EnumOptions.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.protobuf.EnumOptions)
                        return object;
                    var message = new $root.google.protobuf.EnumOptions();
                    if (object.allowAlias != null)
                        message.allowAlias = Boolean(object.allowAlias);
                    if (object.deprecated != null)
                        message.deprecated = Boolean(object.deprecated);
                    if (object.uninterpretedOption) {
                        if (!Array.isArray(object.uninterpretedOption))
                            throw TypeError(".google.protobuf.EnumOptions.uninterpretedOption: array expected");
                        message.uninterpretedOption = [];
                        for (var i = 0; i < object.uninterpretedOption.length; ++i) {
                            if (typeof object.uninterpretedOption[i] !== "object")
                                throw TypeError(".google.protobuf.EnumOptions.uninterpretedOption: object expected");
                            message.uninterpretedOption[i] = $root.google.protobuf.UninterpretedOption.fromObject(object.uninterpretedOption[i]);
                        }
                    }
                    return message;
                };
    
                /**
                 * Creates a plain object from an EnumOptions message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.protobuf.EnumOptions
                 * @static
                 * @param {google.protobuf.EnumOptions} message EnumOptions
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                EnumOptions.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.arrays || options.defaults)
                        object.uninterpretedOption = [];
                    if (options.defaults) {
                        object.allowAlias = false;
                        object.deprecated = false;
                    }
                    if (message.allowAlias != null && message.hasOwnProperty("allowAlias"))
                        object.allowAlias = message.allowAlias;
                    if (message.deprecated != null && message.hasOwnProperty("deprecated"))
                        object.deprecated = message.deprecated;
                    if (message.uninterpretedOption && message.uninterpretedOption.length) {
                        object.uninterpretedOption = [];
                        for (var j = 0; j < message.uninterpretedOption.length; ++j)
                            object.uninterpretedOption[j] = $root.google.protobuf.UninterpretedOption.toObject(message.uninterpretedOption[j], options);
                    }
                    return object;
                };
    
                /**
                 * Converts this EnumOptions to JSON.
                 * @function toJSON
                 * @memberof google.protobuf.EnumOptions
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                EnumOptions.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for EnumOptions
                 * @function getTypeUrl
                 * @memberof google.protobuf.EnumOptions
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                EnumOptions.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.protobuf.EnumOptions";
                };
    
                return EnumOptions;
            })();
    
            protobuf.EnumValueOptions = (function() {
    
                /**
                 * Properties of an EnumValueOptions.
                 * @memberof google.protobuf
                 * @interface IEnumValueOptions
                 * @property {boolean|null} [deprecated] EnumValueOptions deprecated
                 * @property {Array.<google.protobuf.IUninterpretedOption>|null} [uninterpretedOption] EnumValueOptions uninterpretedOption
                 */
    
                /**
                 * Constructs a new EnumValueOptions.
                 * @memberof google.protobuf
                 * @classdesc Represents an EnumValueOptions.
                 * @implements IEnumValueOptions
                 * @constructor
                 * @param {google.protobuf.IEnumValueOptions=} [properties] Properties to set
                 */
                function EnumValueOptions(properties) {
                    this.uninterpretedOption = [];
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * EnumValueOptions deprecated.
                 * @member {boolean} deprecated
                 * @memberof google.protobuf.EnumValueOptions
                 * @instance
                 */
                EnumValueOptions.prototype.deprecated = false;
    
                /**
                 * EnumValueOptions uninterpretedOption.
                 * @member {Array.<google.protobuf.IUninterpretedOption>} uninterpretedOption
                 * @memberof google.protobuf.EnumValueOptions
                 * @instance
                 */
                EnumValueOptions.prototype.uninterpretedOption = $util.emptyArray;
    
                /**
                 * Creates a new EnumValueOptions instance using the specified properties.
                 * @function create
                 * @memberof google.protobuf.EnumValueOptions
                 * @static
                 * @param {google.protobuf.IEnumValueOptions=} [properties] Properties to set
                 * @returns {google.protobuf.EnumValueOptions} EnumValueOptions instance
                 */
                EnumValueOptions.create = function create(properties) {
                    return new EnumValueOptions(properties);
                };
    
                /**
                 * Encodes the specified EnumValueOptions message. Does not implicitly {@link google.protobuf.EnumValueOptions.verify|verify} messages.
                 * @function encode
                 * @memberof google.protobuf.EnumValueOptions
                 * @static
                 * @param {google.protobuf.IEnumValueOptions} message EnumValueOptions message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                EnumValueOptions.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.deprecated != null && Object.hasOwnProperty.call(message, "deprecated"))
                        writer.uint32(/* id 1, wireType 0 =*/8).bool(message.deprecated);
                    if (message.uninterpretedOption != null && message.uninterpretedOption.length)
                        for (var i = 0; i < message.uninterpretedOption.length; ++i)
                            $root.google.protobuf.UninterpretedOption.encode(message.uninterpretedOption[i], writer.uint32(/* id 999, wireType 2 =*/7994).fork()).ldelim();
                    return writer;
                };
    
                /**
                 * Encodes the specified EnumValueOptions message, length delimited. Does not implicitly {@link google.protobuf.EnumValueOptions.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.protobuf.EnumValueOptions
                 * @static
                 * @param {google.protobuf.IEnumValueOptions} message EnumValueOptions message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                EnumValueOptions.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes an EnumValueOptions message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.protobuf.EnumValueOptions
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.protobuf.EnumValueOptions} EnumValueOptions
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                EnumValueOptions.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.EnumValueOptions();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1: {
                                message.deprecated = reader.bool();
                                break;
                            }
                        case 999: {
                                if (!(message.uninterpretedOption && message.uninterpretedOption.length))
                                    message.uninterpretedOption = [];
                                message.uninterpretedOption.push($root.google.protobuf.UninterpretedOption.decode(reader, reader.uint32()));
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes an EnumValueOptions message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.protobuf.EnumValueOptions
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.protobuf.EnumValueOptions} EnumValueOptions
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                EnumValueOptions.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies an EnumValueOptions message.
                 * @function verify
                 * @memberof google.protobuf.EnumValueOptions
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                EnumValueOptions.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.deprecated != null && message.hasOwnProperty("deprecated"))
                        if (typeof message.deprecated !== "boolean")
                            return "deprecated: boolean expected";
                    if (message.uninterpretedOption != null && message.hasOwnProperty("uninterpretedOption")) {
                        if (!Array.isArray(message.uninterpretedOption))
                            return "uninterpretedOption: array expected";
                        for (var i = 0; i < message.uninterpretedOption.length; ++i) {
                            var error = $root.google.protobuf.UninterpretedOption.verify(message.uninterpretedOption[i]);
                            if (error)
                                return "uninterpretedOption." + error;
                        }
                    }
                    return null;
                };
    
                /**
                 * Creates an EnumValueOptions message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.protobuf.EnumValueOptions
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.protobuf.EnumValueOptions} EnumValueOptions
                 */
                EnumValueOptions.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.protobuf.EnumValueOptions)
                        return object;
                    var message = new $root.google.protobuf.EnumValueOptions();
                    if (object.deprecated != null)
                        message.deprecated = Boolean(object.deprecated);
                    if (object.uninterpretedOption) {
                        if (!Array.isArray(object.uninterpretedOption))
                            throw TypeError(".google.protobuf.EnumValueOptions.uninterpretedOption: array expected");
                        message.uninterpretedOption = [];
                        for (var i = 0; i < object.uninterpretedOption.length; ++i) {
                            if (typeof object.uninterpretedOption[i] !== "object")
                                throw TypeError(".google.protobuf.EnumValueOptions.uninterpretedOption: object expected");
                            message.uninterpretedOption[i] = $root.google.protobuf.UninterpretedOption.fromObject(object.uninterpretedOption[i]);
                        }
                    }
                    return message;
                };
    
                /**
                 * Creates a plain object from an EnumValueOptions message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.protobuf.EnumValueOptions
                 * @static
                 * @param {google.protobuf.EnumValueOptions} message EnumValueOptions
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                EnumValueOptions.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.arrays || options.defaults)
                        object.uninterpretedOption = [];
                    if (options.defaults)
                        object.deprecated = false;
                    if (message.deprecated != null && message.hasOwnProperty("deprecated"))
                        object.deprecated = message.deprecated;
                    if (message.uninterpretedOption && message.uninterpretedOption.length) {
                        object.uninterpretedOption = [];
                        for (var j = 0; j < message.uninterpretedOption.length; ++j)
                            object.uninterpretedOption[j] = $root.google.protobuf.UninterpretedOption.toObject(message.uninterpretedOption[j], options);
                    }
                    return object;
                };
    
                /**
                 * Converts this EnumValueOptions to JSON.
                 * @function toJSON
                 * @memberof google.protobuf.EnumValueOptions
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                EnumValueOptions.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for EnumValueOptions
                 * @function getTypeUrl
                 * @memberof google.protobuf.EnumValueOptions
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                EnumValueOptions.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.protobuf.EnumValueOptions";
                };
    
                return EnumValueOptions;
            })();
    
            protobuf.ServiceOptions = (function() {
    
                /**
                 * Properties of a ServiceOptions.
                 * @memberof google.protobuf
                 * @interface IServiceOptions
                 * @property {boolean|null} [deprecated] ServiceOptions deprecated
                 * @property {Array.<google.protobuf.IUninterpretedOption>|null} [uninterpretedOption] ServiceOptions uninterpretedOption
                 * @property {string|null} [".google.api.defaultHost"] ServiceOptions .google.api.defaultHost
                 * @property {string|null} [".google.api.oauthScopes"] ServiceOptions .google.api.oauthScopes
                 */
    
                /**
                 * Constructs a new ServiceOptions.
                 * @memberof google.protobuf
                 * @classdesc Represents a ServiceOptions.
                 * @implements IServiceOptions
                 * @constructor
                 * @param {google.protobuf.IServiceOptions=} [properties] Properties to set
                 */
                function ServiceOptions(properties) {
                    this.uninterpretedOption = [];
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * ServiceOptions deprecated.
                 * @member {boolean} deprecated
                 * @memberof google.protobuf.ServiceOptions
                 * @instance
                 */
                ServiceOptions.prototype.deprecated = false;
    
                /**
                 * ServiceOptions uninterpretedOption.
                 * @member {Array.<google.protobuf.IUninterpretedOption>} uninterpretedOption
                 * @memberof google.protobuf.ServiceOptions
                 * @instance
                 */
                ServiceOptions.prototype.uninterpretedOption = $util.emptyArray;
    
                /**
                 * ServiceOptions .google.api.defaultHost.
                 * @member {string} .google.api.defaultHost
                 * @memberof google.protobuf.ServiceOptions
                 * @instance
                 */
                ServiceOptions.prototype[".google.api.defaultHost"] = "";
    
                /**
                 * ServiceOptions .google.api.oauthScopes.
                 * @member {string} .google.api.oauthScopes
                 * @memberof google.protobuf.ServiceOptions
                 * @instance
                 */
                ServiceOptions.prototype[".google.api.oauthScopes"] = "";
    
                /**
                 * Creates a new ServiceOptions instance using the specified properties.
                 * @function create
                 * @memberof google.protobuf.ServiceOptions
                 * @static
                 * @param {google.protobuf.IServiceOptions=} [properties] Properties to set
                 * @returns {google.protobuf.ServiceOptions} ServiceOptions instance
                 */
                ServiceOptions.create = function create(properties) {
                    return new ServiceOptions(properties);
                };
    
                /**
                 * Encodes the specified ServiceOptions message. Does not implicitly {@link google.protobuf.ServiceOptions.verify|verify} messages.
                 * @function encode
                 * @memberof google.protobuf.ServiceOptions
                 * @static
                 * @param {google.protobuf.IServiceOptions} message ServiceOptions message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                ServiceOptions.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.deprecated != null && Object.hasOwnProperty.call(message, "deprecated"))
                        writer.uint32(/* id 33, wireType 0 =*/264).bool(message.deprecated);
                    if (message.uninterpretedOption != null && message.uninterpretedOption.length)
                        for (var i = 0; i < message.uninterpretedOption.length; ++i)
                            $root.google.protobuf.UninterpretedOption.encode(message.uninterpretedOption[i], writer.uint32(/* id 999, wireType 2 =*/7994).fork()).ldelim();
                    if (message[".google.api.defaultHost"] != null && Object.hasOwnProperty.call(message, ".google.api.defaultHost"))
                        writer.uint32(/* id 1049, wireType 2 =*/8394).string(message[".google.api.defaultHost"]);
                    if (message[".google.api.oauthScopes"] != null && Object.hasOwnProperty.call(message, ".google.api.oauthScopes"))
                        writer.uint32(/* id 1050, wireType 2 =*/8402).string(message[".google.api.oauthScopes"]);
                    return writer;
                };
    
                /**
                 * Encodes the specified ServiceOptions message, length delimited. Does not implicitly {@link google.protobuf.ServiceOptions.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.protobuf.ServiceOptions
                 * @static
                 * @param {google.protobuf.IServiceOptions} message ServiceOptions message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                ServiceOptions.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a ServiceOptions message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.protobuf.ServiceOptions
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.protobuf.ServiceOptions} ServiceOptions
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                ServiceOptions.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.ServiceOptions();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 33: {
                                message.deprecated = reader.bool();
                                break;
                            }
                        case 999: {
                                if (!(message.uninterpretedOption && message.uninterpretedOption.length))
                                    message.uninterpretedOption = [];
                                message.uninterpretedOption.push($root.google.protobuf.UninterpretedOption.decode(reader, reader.uint32()));
                                break;
                            }
                        case 1049: {
                                message[".google.api.defaultHost"] = reader.string();
                                break;
                            }
                        case 1050: {
                                message[".google.api.oauthScopes"] = reader.string();
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a ServiceOptions message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.protobuf.ServiceOptions
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.protobuf.ServiceOptions} ServiceOptions
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                ServiceOptions.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a ServiceOptions message.
                 * @function verify
                 * @memberof google.protobuf.ServiceOptions
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                ServiceOptions.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.deprecated != null && message.hasOwnProperty("deprecated"))
                        if (typeof message.deprecated !== "boolean")
                            return "deprecated: boolean expected";
                    if (message.uninterpretedOption != null && message.hasOwnProperty("uninterpretedOption")) {
                        if (!Array.isArray(message.uninterpretedOption))
                            return "uninterpretedOption: array expected";
                        for (var i = 0; i < message.uninterpretedOption.length; ++i) {
                            var error = $root.google.protobuf.UninterpretedOption.verify(message.uninterpretedOption[i]);
                            if (error)
                                return "uninterpretedOption." + error;
                        }
                    }
                    if (message[".google.api.defaultHost"] != null && message.hasOwnProperty(".google.api.defaultHost"))
                        if (!$util.isString(message[".google.api.defaultHost"]))
                            return ".google.api.defaultHost: string expected";
                    if (message[".google.api.oauthScopes"] != null && message.hasOwnProperty(".google.api.oauthScopes"))
                        if (!$util.isString(message[".google.api.oauthScopes"]))
                            return ".google.api.oauthScopes: string expected";
                    return null;
                };
    
                /**
                 * Creates a ServiceOptions message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.protobuf.ServiceOptions
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.protobuf.ServiceOptions} ServiceOptions
                 */
                ServiceOptions.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.protobuf.ServiceOptions)
                        return object;
                    var message = new $root.google.protobuf.ServiceOptions();
                    if (object.deprecated != null)
                        message.deprecated = Boolean(object.deprecated);
                    if (object.uninterpretedOption) {
                        if (!Array.isArray(object.uninterpretedOption))
                            throw TypeError(".google.protobuf.ServiceOptions.uninterpretedOption: array expected");
                        message.uninterpretedOption = [];
                        for (var i = 0; i < object.uninterpretedOption.length; ++i) {
                            if (typeof object.uninterpretedOption[i] !== "object")
                                throw TypeError(".google.protobuf.ServiceOptions.uninterpretedOption: object expected");
                            message.uninterpretedOption[i] = $root.google.protobuf.UninterpretedOption.fromObject(object.uninterpretedOption[i]);
                        }
                    }
                    if (object[".google.api.defaultHost"] != null)
                        message[".google.api.defaultHost"] = String(object[".google.api.defaultHost"]);
                    if (object[".google.api.oauthScopes"] != null)
                        message[".google.api.oauthScopes"] = String(object[".google.api.oauthScopes"]);
                    return message;
                };
    
                /**
                 * Creates a plain object from a ServiceOptions message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.protobuf.ServiceOptions
                 * @static
                 * @param {google.protobuf.ServiceOptions} message ServiceOptions
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                ServiceOptions.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.arrays || options.defaults)
                        object.uninterpretedOption = [];
                    if (options.defaults) {
                        object.deprecated = false;
                        object[".google.api.defaultHost"] = "";
                        object[".google.api.oauthScopes"] = "";
                    }
                    if (message.deprecated != null && message.hasOwnProperty("deprecated"))
                        object.deprecated = message.deprecated;
                    if (message.uninterpretedOption && message.uninterpretedOption.length) {
                        object.uninterpretedOption = [];
                        for (var j = 0; j < message.uninterpretedOption.length; ++j)
                            object.uninterpretedOption[j] = $root.google.protobuf.UninterpretedOption.toObject(message.uninterpretedOption[j], options);
                    }
                    if (message[".google.api.defaultHost"] != null && message.hasOwnProperty(".google.api.defaultHost"))
                        object[".google.api.defaultHost"] = message[".google.api.defaultHost"];
                    if (message[".google.api.oauthScopes"] != null && message.hasOwnProperty(".google.api.oauthScopes"))
                        object[".google.api.oauthScopes"] = message[".google.api.oauthScopes"];
                    return object;
                };
    
                /**
                 * Converts this ServiceOptions to JSON.
                 * @function toJSON
                 * @memberof google.protobuf.ServiceOptions
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                ServiceOptions.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for ServiceOptions
                 * @function getTypeUrl
                 * @memberof google.protobuf.ServiceOptions
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                ServiceOptions.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.protobuf.ServiceOptions";
                };
    
                return ServiceOptions;
            })();
    
            protobuf.MethodOptions = (function() {
    
                /**
                 * Properties of a MethodOptions.
                 * @memberof google.protobuf
                 * @interface IMethodOptions
                 * @property {boolean|null} [deprecated] MethodOptions deprecated
                 * @property {google.protobuf.MethodOptions.IdempotencyLevel|null} [idempotencyLevel] MethodOptions idempotencyLevel
                 * @property {Array.<google.protobuf.IUninterpretedOption>|null} [uninterpretedOption] MethodOptions uninterpretedOption
                 * @property {google.api.IHttpRule|null} [".google.api.http"] MethodOptions .google.api.http
                 * @property {Array.<string>|null} [".google.api.methodSignature"] MethodOptions .google.api.methodSignature
                 */
    
                /**
                 * Constructs a new MethodOptions.
                 * @memberof google.protobuf
                 * @classdesc Represents a MethodOptions.
                 * @implements IMethodOptions
                 * @constructor
                 * @param {google.protobuf.IMethodOptions=} [properties] Properties to set
                 */
                function MethodOptions(properties) {
                    this.uninterpretedOption = [];
                    this[".google.api.methodSignature"] = [];
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * MethodOptions deprecated.
                 * @member {boolean} deprecated
                 * @memberof google.protobuf.MethodOptions
                 * @instance
                 */
                MethodOptions.prototype.deprecated = false;
    
                /**
                 * MethodOptions idempotencyLevel.
                 * @member {google.protobuf.MethodOptions.IdempotencyLevel} idempotencyLevel
                 * @memberof google.protobuf.MethodOptions
                 * @instance
                 */
                MethodOptions.prototype.idempotencyLevel = 0;
    
                /**
                 * MethodOptions uninterpretedOption.
                 * @member {Array.<google.protobuf.IUninterpretedOption>} uninterpretedOption
                 * @memberof google.protobuf.MethodOptions
                 * @instance
                 */
                MethodOptions.prototype.uninterpretedOption = $util.emptyArray;
    
                /**
                 * MethodOptions .google.api.http.
                 * @member {google.api.IHttpRule|null|undefined} .google.api.http
                 * @memberof google.protobuf.MethodOptions
                 * @instance
                 */
                MethodOptions.prototype[".google.api.http"] = null;
    
                /**
                 * MethodOptions .google.api.methodSignature.
                 * @member {Array.<string>} .google.api.methodSignature
                 * @memberof google.protobuf.MethodOptions
                 * @instance
                 */
                MethodOptions.prototype[".google.api.methodSignature"] = $util.emptyArray;
    
                /**
                 * Creates a new MethodOptions instance using the specified properties.
                 * @function create
                 * @memberof google.protobuf.MethodOptions
                 * @static
                 * @param {google.protobuf.IMethodOptions=} [properties] Properties to set
                 * @returns {google.protobuf.MethodOptions} MethodOptions instance
                 */
                MethodOptions.create = function create(properties) {
                    return new MethodOptions(properties);
                };
    
                /**
                 * Encodes the specified MethodOptions message. Does not implicitly {@link google.protobuf.MethodOptions.verify|verify} messages.
                 * @function encode
                 * @memberof google.protobuf.MethodOptions
                 * @static
                 * @param {google.protobuf.IMethodOptions} message MethodOptions message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                MethodOptions.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.deprecated != null && Object.hasOwnProperty.call(message, "deprecated"))
                        writer.uint32(/* id 33, wireType 0 =*/264).bool(message.deprecated);
                    if (message.idempotencyLevel != null && Object.hasOwnProperty.call(message, "idempotencyLevel"))
                        writer.uint32(/* id 34, wireType 0 =*/272).int32(message.idempotencyLevel);
                    if (message.uninterpretedOption != null && message.uninterpretedOption.length)
                        for (var i = 0; i < message.uninterpretedOption.length; ++i)
                            $root.google.protobuf.UninterpretedOption.encode(message.uninterpretedOption[i], writer.uint32(/* id 999, wireType 2 =*/7994).fork()).ldelim();
                    if (message[".google.api.methodSignature"] != null && message[".google.api.methodSignature"].length)
                        for (var i = 0; i < message[".google.api.methodSignature"].length; ++i)
                            writer.uint32(/* id 1051, wireType 2 =*/8410).string(message[".google.api.methodSignature"][i]);
                    if (message[".google.api.http"] != null && Object.hasOwnProperty.call(message, ".google.api.http"))
                        $root.google.api.HttpRule.encode(message[".google.api.http"], writer.uint32(/* id 72295728, wireType 2 =*/578365826).fork()).ldelim();
                    return writer;
                };
    
                /**
                 * Encodes the specified MethodOptions message, length delimited. Does not implicitly {@link google.protobuf.MethodOptions.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.protobuf.MethodOptions
                 * @static
                 * @param {google.protobuf.IMethodOptions} message MethodOptions message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                MethodOptions.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a MethodOptions message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.protobuf.MethodOptions
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.protobuf.MethodOptions} MethodOptions
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                MethodOptions.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.MethodOptions();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 33: {
                                message.deprecated = reader.bool();
                                break;
                            }
                        case 34: {
                                message.idempotencyLevel = reader.int32();
                                break;
                            }
                        case 999: {
                                if (!(message.uninterpretedOption && message.uninterpretedOption.length))
                                    message.uninterpretedOption = [];
                                message.uninterpretedOption.push($root.google.protobuf.UninterpretedOption.decode(reader, reader.uint32()));
                                break;
                            }
                        case 72295728: {
                                message[".google.api.http"] = $root.google.api.HttpRule.decode(reader, reader.uint32());
                                break;
                            }
                        case 1051: {
                                if (!(message[".google.api.methodSignature"] && message[".google.api.methodSignature"].length))
                                    message[".google.api.methodSignature"] = [];
                                message[".google.api.methodSignature"].push(reader.string());
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a MethodOptions message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.protobuf.MethodOptions
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.protobuf.MethodOptions} MethodOptions
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                MethodOptions.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a MethodOptions message.
                 * @function verify
                 * @memberof google.protobuf.MethodOptions
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                MethodOptions.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.deprecated != null && message.hasOwnProperty("deprecated"))
                        if (typeof message.deprecated !== "boolean")
                            return "deprecated: boolean expected";
                    if (message.idempotencyLevel != null && message.hasOwnProperty("idempotencyLevel"))
                        switch (message.idempotencyLevel) {
                        default:
                            return "idempotencyLevel: enum value expected";
                        case 0:
                        case 1:
                        case 2:
                            break;
                        }
                    if (message.uninterpretedOption != null && message.hasOwnProperty("uninterpretedOption")) {
                        if (!Array.isArray(message.uninterpretedOption))
                            return "uninterpretedOption: array expected";
                        for (var i = 0; i < message.uninterpretedOption.length; ++i) {
                            var error = $root.google.protobuf.UninterpretedOption.verify(message.uninterpretedOption[i]);
                            if (error)
                                return "uninterpretedOption." + error;
                        }
                    }
                    if (message[".google.api.http"] != null && message.hasOwnProperty(".google.api.http")) {
                        var error = $root.google.api.HttpRule.verify(message[".google.api.http"]);
                        if (error)
                            return ".google.api.http." + error;
                    }
                    if (message[".google.api.methodSignature"] != null && message.hasOwnProperty(".google.api.methodSignature")) {
                        if (!Array.isArray(message[".google.api.methodSignature"]))
                            return ".google.api.methodSignature: array expected";
                        for (var i = 0; i < message[".google.api.methodSignature"].length; ++i)
                            if (!$util.isString(message[".google.api.methodSignature"][i]))
                                return ".google.api.methodSignature: string[] expected";
                    }
                    return null;
                };
    
                /**
                 * Creates a MethodOptions message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.protobuf.MethodOptions
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.protobuf.MethodOptions} MethodOptions
                 */
                MethodOptions.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.protobuf.MethodOptions)
                        return object;
                    var message = new $root.google.protobuf.MethodOptions();
                    if (object.deprecated != null)
                        message.deprecated = Boolean(object.deprecated);
                    switch (object.idempotencyLevel) {
                    default:
                        if (typeof object.idempotencyLevel === "number") {
                            message.idempotencyLevel = object.idempotencyLevel;
                            break;
                        }
                        break;
                    case "IDEMPOTENCY_UNKNOWN":
                    case 0:
                        message.idempotencyLevel = 0;
                        break;
                    case "NO_SIDE_EFFECTS":
                    case 1:
                        message.idempotencyLevel = 1;
                        break;
                    case "IDEMPOTENT":
                    case 2:
                        message.idempotencyLevel = 2;
                        break;
                    }
                    if (object.uninterpretedOption) {
                        if (!Array.isArray(object.uninterpretedOption))
                            throw TypeError(".google.protobuf.MethodOptions.uninterpretedOption: array expected");
                        message.uninterpretedOption = [];
                        for (var i = 0; i < object.uninterpretedOption.length; ++i) {
                            if (typeof object.uninterpretedOption[i] !== "object")
                                throw TypeError(".google.protobuf.MethodOptions.uninterpretedOption: object expected");
                            message.uninterpretedOption[i] = $root.google.protobuf.UninterpretedOption.fromObject(object.uninterpretedOption[i]);
                        }
                    }
                    if (object[".google.api.http"] != null) {
                        if (typeof object[".google.api.http"] !== "object")
                            throw TypeError(".google.protobuf.MethodOptions..google.api.http: object expected");
                        message[".google.api.http"] = $root.google.api.HttpRule.fromObject(object[".google.api.http"]);
                    }
                    if (object[".google.api.methodSignature"]) {
                        if (!Array.isArray(object[".google.api.methodSignature"]))
                            throw TypeError(".google.protobuf.MethodOptions..google.api.methodSignature: array expected");
                        message[".google.api.methodSignature"] = [];
                        for (var i = 0; i < object[".google.api.methodSignature"].length; ++i)
                            message[".google.api.methodSignature"][i] = String(object[".google.api.methodSignature"][i]);
                    }
                    return message;
                };
    
                /**
                 * Creates a plain object from a MethodOptions message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.protobuf.MethodOptions
                 * @static
                 * @param {google.protobuf.MethodOptions} message MethodOptions
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                MethodOptions.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.arrays || options.defaults) {
                        object.uninterpretedOption = [];
                        object[".google.api.methodSignature"] = [];
                    }
                    if (options.defaults) {
                        object.deprecated = false;
                        object.idempotencyLevel = options.enums === String ? "IDEMPOTENCY_UNKNOWN" : 0;
                        object[".google.api.http"] = null;
                    }
                    if (message.deprecated != null && message.hasOwnProperty("deprecated"))
                        object.deprecated = message.deprecated;
                    if (message.idempotencyLevel != null && message.hasOwnProperty("idempotencyLevel"))
                        object.idempotencyLevel = options.enums === String ? $root.google.protobuf.MethodOptions.IdempotencyLevel[message.idempotencyLevel] === undefined ? message.idempotencyLevel : $root.google.protobuf.MethodOptions.IdempotencyLevel[message.idempotencyLevel] : message.idempotencyLevel;
                    if (message.uninterpretedOption && message.uninterpretedOption.length) {
                        object.uninterpretedOption = [];
                        for (var j = 0; j < message.uninterpretedOption.length; ++j)
                            object.uninterpretedOption[j] = $root.google.protobuf.UninterpretedOption.toObject(message.uninterpretedOption[j], options);
                    }
                    if (message[".google.api.methodSignature"] && message[".google.api.methodSignature"].length) {
                        object[".google.api.methodSignature"] = [];
                        for (var j = 0; j < message[".google.api.methodSignature"].length; ++j)
                            object[".google.api.methodSignature"][j] = message[".google.api.methodSignature"][j];
                    }
                    if (message[".google.api.http"] != null && message.hasOwnProperty(".google.api.http"))
                        object[".google.api.http"] = $root.google.api.HttpRule.toObject(message[".google.api.http"], options);
                    return object;
                };
    
                /**
                 * Converts this MethodOptions to JSON.
                 * @function toJSON
                 * @memberof google.protobuf.MethodOptions
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                MethodOptions.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for MethodOptions
                 * @function getTypeUrl
                 * @memberof google.protobuf.MethodOptions
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                MethodOptions.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.protobuf.MethodOptions";
                };
    
                /**
                 * IdempotencyLevel enum.
                 * @name google.protobuf.MethodOptions.IdempotencyLevel
                 * @enum {number}
                 * @property {number} IDEMPOTENCY_UNKNOWN=0 IDEMPOTENCY_UNKNOWN value
                 * @property {number} NO_SIDE_EFFECTS=1 NO_SIDE_EFFECTS value
                 * @property {number} IDEMPOTENT=2 IDEMPOTENT value
                 */
                MethodOptions.IdempotencyLevel = (function() {
                    var valuesById = {}, values = Object.create(valuesById);
                    values[valuesById[0] = "IDEMPOTENCY_UNKNOWN"] = 0;
                    values[valuesById[1] = "NO_SIDE_EFFECTS"] = 1;
                    values[valuesById[2] = "IDEMPOTENT"] = 2;
                    return values;
                })();
    
                return MethodOptions;
            })();
    
            protobuf.UninterpretedOption = (function() {
    
                /**
                 * Properties of an UninterpretedOption.
                 * @memberof google.protobuf
                 * @interface IUninterpretedOption
                 * @property {Array.<google.protobuf.UninterpretedOption.INamePart>|null} [name] UninterpretedOption name
                 * @property {string|null} [identifierValue] UninterpretedOption identifierValue
                 * @property {number|Long|null} [positiveIntValue] UninterpretedOption positiveIntValue
                 * @property {number|Long|null} [negativeIntValue] UninterpretedOption negativeIntValue
                 * @property {number|null} [doubleValue] UninterpretedOption doubleValue
                 * @property {Uint8Array|null} [stringValue] UninterpretedOption stringValue
                 * @property {string|null} [aggregateValue] UninterpretedOption aggregateValue
                 */
    
                /**
                 * Constructs a new UninterpretedOption.
                 * @memberof google.protobuf
                 * @classdesc Represents an UninterpretedOption.
                 * @implements IUninterpretedOption
                 * @constructor
                 * @param {google.protobuf.IUninterpretedOption=} [properties] Properties to set
                 */
                function UninterpretedOption(properties) {
                    this.name = [];
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * UninterpretedOption name.
                 * @member {Array.<google.protobuf.UninterpretedOption.INamePart>} name
                 * @memberof google.protobuf.UninterpretedOption
                 * @instance
                 */
                UninterpretedOption.prototype.name = $util.emptyArray;
    
                /**
                 * UninterpretedOption identifierValue.
                 * @member {string} identifierValue
                 * @memberof google.protobuf.UninterpretedOption
                 * @instance
                 */
                UninterpretedOption.prototype.identifierValue = "";
    
                /**
                 * UninterpretedOption positiveIntValue.
                 * @member {number|Long} positiveIntValue
                 * @memberof google.protobuf.UninterpretedOption
                 * @instance
                 */
                UninterpretedOption.prototype.positiveIntValue = $util.Long ? $util.Long.fromBits(0,0,true) : 0;
    
                /**
                 * UninterpretedOption negativeIntValue.
                 * @member {number|Long} negativeIntValue
                 * @memberof google.protobuf.UninterpretedOption
                 * @instance
                 */
                UninterpretedOption.prototype.negativeIntValue = $util.Long ? $util.Long.fromBits(0,0,false) : 0;
    
                /**
                 * UninterpretedOption doubleValue.
                 * @member {number} doubleValue
                 * @memberof google.protobuf.UninterpretedOption
                 * @instance
                 */
                UninterpretedOption.prototype.doubleValue = 0;
    
                /**
                 * UninterpretedOption stringValue.
                 * @member {Uint8Array} stringValue
                 * @memberof google.protobuf.UninterpretedOption
                 * @instance
                 */
                UninterpretedOption.prototype.stringValue = $util.newBuffer([]);
    
                /**
                 * UninterpretedOption aggregateValue.
                 * @member {string} aggregateValue
                 * @memberof google.protobuf.UninterpretedOption
                 * @instance
                 */
                UninterpretedOption.prototype.aggregateValue = "";
    
                /**
                 * Creates a new UninterpretedOption instance using the specified properties.
                 * @function create
                 * @memberof google.protobuf.UninterpretedOption
                 * @static
                 * @param {google.protobuf.IUninterpretedOption=} [properties] Properties to set
                 * @returns {google.protobuf.UninterpretedOption} UninterpretedOption instance
                 */
                UninterpretedOption.create = function create(properties) {
                    return new UninterpretedOption(properties);
                };
    
                /**
                 * Encodes the specified UninterpretedOption message. Does not implicitly {@link google.protobuf.UninterpretedOption.verify|verify} messages.
                 * @function encode
                 * @memberof google.protobuf.UninterpretedOption
                 * @static
                 * @param {google.protobuf.IUninterpretedOption} message UninterpretedOption message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                UninterpretedOption.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.name != null && message.name.length)
                        for (var i = 0; i < message.name.length; ++i)
                            $root.google.protobuf.UninterpretedOption.NamePart.encode(message.name[i], writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                    if (message.identifierValue != null && Object.hasOwnProperty.call(message, "identifierValue"))
                        writer.uint32(/* id 3, wireType 2 =*/26).string(message.identifierValue);
                    if (message.positiveIntValue != null && Object.hasOwnProperty.call(message, "positiveIntValue"))
                        writer.uint32(/* id 4, wireType 0 =*/32).uint64(message.positiveIntValue);
                    if (message.negativeIntValue != null && Object.hasOwnProperty.call(message, "negativeIntValue"))
                        writer.uint32(/* id 5, wireType 0 =*/40).int64(message.negativeIntValue);
                    if (message.doubleValue != null && Object.hasOwnProperty.call(message, "doubleValue"))
                        writer.uint32(/* id 6, wireType 1 =*/49).double(message.doubleValue);
                    if (message.stringValue != null && Object.hasOwnProperty.call(message, "stringValue"))
                        writer.uint32(/* id 7, wireType 2 =*/58).bytes(message.stringValue);
                    if (message.aggregateValue != null && Object.hasOwnProperty.call(message, "aggregateValue"))
                        writer.uint32(/* id 8, wireType 2 =*/66).string(message.aggregateValue);
                    return writer;
                };
    
                /**
                 * Encodes the specified UninterpretedOption message, length delimited. Does not implicitly {@link google.protobuf.UninterpretedOption.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.protobuf.UninterpretedOption
                 * @static
                 * @param {google.protobuf.IUninterpretedOption} message UninterpretedOption message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                UninterpretedOption.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes an UninterpretedOption message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.protobuf.UninterpretedOption
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.protobuf.UninterpretedOption} UninterpretedOption
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                UninterpretedOption.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.UninterpretedOption();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 2: {
                                if (!(message.name && message.name.length))
                                    message.name = [];
                                message.name.push($root.google.protobuf.UninterpretedOption.NamePart.decode(reader, reader.uint32()));
                                break;
                            }
                        case 3: {
                                message.identifierValue = reader.string();
                                break;
                            }
                        case 4: {
                                message.positiveIntValue = reader.uint64();
                                break;
                            }
                        case 5: {
                                message.negativeIntValue = reader.int64();
                                break;
                            }
                        case 6: {
                                message.doubleValue = reader.double();
                                break;
                            }
                        case 7: {
                                message.stringValue = reader.bytes();
                                break;
                            }
                        case 8: {
                                message.aggregateValue = reader.string();
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes an UninterpretedOption message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.protobuf.UninterpretedOption
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.protobuf.UninterpretedOption} UninterpretedOption
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                UninterpretedOption.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies an UninterpretedOption message.
                 * @function verify
                 * @memberof google.protobuf.UninterpretedOption
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                UninterpretedOption.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.name != null && message.hasOwnProperty("name")) {
                        if (!Array.isArray(message.name))
                            return "name: array expected";
                        for (var i = 0; i < message.name.length; ++i) {
                            var error = $root.google.protobuf.UninterpretedOption.NamePart.verify(message.name[i]);
                            if (error)
                                return "name." + error;
                        }
                    }
                    if (message.identifierValue != null && message.hasOwnProperty("identifierValue"))
                        if (!$util.isString(message.identifierValue))
                            return "identifierValue: string expected";
                    if (message.positiveIntValue != null && message.hasOwnProperty("positiveIntValue"))
                        if (!$util.isInteger(message.positiveIntValue) && !(message.positiveIntValue && $util.isInteger(message.positiveIntValue.low) && $util.isInteger(message.positiveIntValue.high)))
                            return "positiveIntValue: integer|Long expected";
                    if (message.negativeIntValue != null && message.hasOwnProperty("negativeIntValue"))
                        if (!$util.isInteger(message.negativeIntValue) && !(message.negativeIntValue && $util.isInteger(message.negativeIntValue.low) && $util.isInteger(message.negativeIntValue.high)))
                            return "negativeIntValue: integer|Long expected";
                    if (message.doubleValue != null && message.hasOwnProperty("doubleValue"))
                        if (typeof message.doubleValue !== "number")
                            return "doubleValue: number expected";
                    if (message.stringValue != null && message.hasOwnProperty("stringValue"))
                        if (!(message.stringValue && typeof message.stringValue.length === "number" || $util.isString(message.stringValue)))
                            return "stringValue: buffer expected";
                    if (message.aggregateValue != null && message.hasOwnProperty("aggregateValue"))
                        if (!$util.isString(message.aggregateValue))
                            return "aggregateValue: string expected";
                    return null;
                };
    
                /**
                 * Creates an UninterpretedOption message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.protobuf.UninterpretedOption
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.protobuf.UninterpretedOption} UninterpretedOption
                 */
                UninterpretedOption.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.protobuf.UninterpretedOption)
                        return object;
                    var message = new $root.google.protobuf.UninterpretedOption();
                    if (object.name) {
                        if (!Array.isArray(object.name))
                            throw TypeError(".google.protobuf.UninterpretedOption.name: array expected");
                        message.name = [];
                        for (var i = 0; i < object.name.length; ++i) {
                            if (typeof object.name[i] !== "object")
                                throw TypeError(".google.protobuf.UninterpretedOption.name: object expected");
                            message.name[i] = $root.google.protobuf.UninterpretedOption.NamePart.fromObject(object.name[i]);
                        }
                    }
                    if (object.identifierValue != null)
                        message.identifierValue = String(object.identifierValue);
                    if (object.positiveIntValue != null)
                        if ($util.Long)
                            (message.positiveIntValue = $util.Long.fromValue(object.positiveIntValue)).unsigned = true;
                        else if (typeof object.positiveIntValue === "string")
                            message.positiveIntValue = parseInt(object.positiveIntValue, 10);
                        else if (typeof object.positiveIntValue === "number")
                            message.positiveIntValue = object.positiveIntValue;
                        else if (typeof object.positiveIntValue === "object")
                            message.positiveIntValue = new $util.LongBits(object.positiveIntValue.low >>> 0, object.positiveIntValue.high >>> 0).toNumber(true);
                    if (object.negativeIntValue != null)
                        if ($util.Long)
                            (message.negativeIntValue = $util.Long.fromValue(object.negativeIntValue)).unsigned = false;
                        else if (typeof object.negativeIntValue === "string")
                            message.negativeIntValue = parseInt(object.negativeIntValue, 10);
                        else if (typeof object.negativeIntValue === "number")
                            message.negativeIntValue = object.negativeIntValue;
                        else if (typeof object.negativeIntValue === "object")
                            message.negativeIntValue = new $util.LongBits(object.negativeIntValue.low >>> 0, object.negativeIntValue.high >>> 0).toNumber();
                    if (object.doubleValue != null)
                        message.doubleValue = Number(object.doubleValue);
                    if (object.stringValue != null)
                        if (typeof object.stringValue === "string")
                            $util.base64.decode(object.stringValue, message.stringValue = $util.newBuffer($util.base64.length(object.stringValue)), 0);
                        else if (object.stringValue.length >= 0)
                            message.stringValue = object.stringValue;
                    if (object.aggregateValue != null)
                        message.aggregateValue = String(object.aggregateValue);
                    return message;
                };
    
                /**
                 * Creates a plain object from an UninterpretedOption message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.protobuf.UninterpretedOption
                 * @static
                 * @param {google.protobuf.UninterpretedOption} message UninterpretedOption
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                UninterpretedOption.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.arrays || options.defaults)
                        object.name = [];
                    if (options.defaults) {
                        object.identifierValue = "";
                        if ($util.Long) {
                            var long = new $util.Long(0, 0, true);
                            object.positiveIntValue = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                        } else
                            object.positiveIntValue = options.longs === String ? "0" : 0;
                        if ($util.Long) {
                            var long = new $util.Long(0, 0, false);
                            object.negativeIntValue = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                        } else
                            object.negativeIntValue = options.longs === String ? "0" : 0;
                        object.doubleValue = 0;
                        if (options.bytes === String)
                            object.stringValue = "";
                        else {
                            object.stringValue = [];
                            if (options.bytes !== Array)
                                object.stringValue = $util.newBuffer(object.stringValue);
                        }
                        object.aggregateValue = "";
                    }
                    if (message.name && message.name.length) {
                        object.name = [];
                        for (var j = 0; j < message.name.length; ++j)
                            object.name[j] = $root.google.protobuf.UninterpretedOption.NamePart.toObject(message.name[j], options);
                    }
                    if (message.identifierValue != null && message.hasOwnProperty("identifierValue"))
                        object.identifierValue = message.identifierValue;
                    if (message.positiveIntValue != null && message.hasOwnProperty("positiveIntValue"))
                        if (typeof message.positiveIntValue === "number")
                            object.positiveIntValue = options.longs === String ? String(message.positiveIntValue) : message.positiveIntValue;
                        else
                            object.positiveIntValue = options.longs === String ? $util.Long.prototype.toString.call(message.positiveIntValue) : options.longs === Number ? new $util.LongBits(message.positiveIntValue.low >>> 0, message.positiveIntValue.high >>> 0).toNumber(true) : message.positiveIntValue;
                    if (message.negativeIntValue != null && message.hasOwnProperty("negativeIntValue"))
                        if (typeof message.negativeIntValue === "number")
                            object.negativeIntValue = options.longs === String ? String(message.negativeIntValue) : message.negativeIntValue;
                        else
                            object.negativeIntValue = options.longs === String ? $util.Long.prototype.toString.call(message.negativeIntValue) : options.longs === Number ? new $util.LongBits(message.negativeIntValue.low >>> 0, message.negativeIntValue.high >>> 0).toNumber() : message.negativeIntValue;
                    if (message.doubleValue != null && message.hasOwnProperty("doubleValue"))
                        object.doubleValue = options.json && !isFinite(message.doubleValue) ? String(message.doubleValue) : message.doubleValue;
                    if (message.stringValue != null && message.hasOwnProperty("stringValue"))
                        object.stringValue = options.bytes === String ? $util.base64.encode(message.stringValue, 0, message.stringValue.length) : options.bytes === Array ? Array.prototype.slice.call(message.stringValue) : message.stringValue;
                    if (message.aggregateValue != null && message.hasOwnProperty("aggregateValue"))
                        object.aggregateValue = message.aggregateValue;
                    return object;
                };
    
                /**
                 * Converts this UninterpretedOption to JSON.
                 * @function toJSON
                 * @memberof google.protobuf.UninterpretedOption
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                UninterpretedOption.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for UninterpretedOption
                 * @function getTypeUrl
                 * @memberof google.protobuf.UninterpretedOption
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                UninterpretedOption.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.protobuf.UninterpretedOption";
                };
    
                UninterpretedOption.NamePart = (function() {
    
                    /**
                     * Properties of a NamePart.
                     * @memberof google.protobuf.UninterpretedOption
                     * @interface INamePart
                     * @property {string} namePart NamePart namePart
                     * @property {boolean} isExtension NamePart isExtension
                     */
    
                    /**
                     * Constructs a new NamePart.
                     * @memberof google.protobuf.UninterpretedOption
                     * @classdesc Represents a NamePart.
                     * @implements INamePart
                     * @constructor
                     * @param {google.protobuf.UninterpretedOption.INamePart=} [properties] Properties to set
                     */
                    function NamePart(properties) {
                        if (properties)
                            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                if (properties[keys[i]] != null)
                                    this[keys[i]] = properties[keys[i]];
                    }
    
                    /**
                     * NamePart namePart.
                     * @member {string} namePart
                     * @memberof google.protobuf.UninterpretedOption.NamePart
                     * @instance
                     */
                    NamePart.prototype.namePart = "";
    
                    /**
                     * NamePart isExtension.
                     * @member {boolean} isExtension
                     * @memberof google.protobuf.UninterpretedOption.NamePart
                     * @instance
                     */
                    NamePart.prototype.isExtension = false;
    
                    /**
                     * Creates a new NamePart instance using the specified properties.
                     * @function create
                     * @memberof google.protobuf.UninterpretedOption.NamePart
                     * @static
                     * @param {google.protobuf.UninterpretedOption.INamePart=} [properties] Properties to set
                     * @returns {google.protobuf.UninterpretedOption.NamePart} NamePart instance
                     */
                    NamePart.create = function create(properties) {
                        return new NamePart(properties);
                    };
    
                    /**
                     * Encodes the specified NamePart message. Does not implicitly {@link google.protobuf.UninterpretedOption.NamePart.verify|verify} messages.
                     * @function encode
                     * @memberof google.protobuf.UninterpretedOption.NamePart
                     * @static
                     * @param {google.protobuf.UninterpretedOption.INamePart} message NamePart message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    NamePart.encode = function encode(message, writer) {
                        if (!writer)
                            writer = $Writer.create();
                        writer.uint32(/* id 1, wireType 2 =*/10).string(message.namePart);
                        writer.uint32(/* id 2, wireType 0 =*/16).bool(message.isExtension);
                        return writer;
                    };
    
                    /**
                     * Encodes the specified NamePart message, length delimited. Does not implicitly {@link google.protobuf.UninterpretedOption.NamePart.verify|verify} messages.
                     * @function encodeDelimited
                     * @memberof google.protobuf.UninterpretedOption.NamePart
                     * @static
                     * @param {google.protobuf.UninterpretedOption.INamePart} message NamePart message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    NamePart.encodeDelimited = function encodeDelimited(message, writer) {
                        return this.encode(message, writer).ldelim();
                    };
    
                    /**
                     * Decodes a NamePart message from the specified reader or buffer.
                     * @function decode
                     * @memberof google.protobuf.UninterpretedOption.NamePart
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @param {number} [length] Message length if known beforehand
                     * @returns {google.protobuf.UninterpretedOption.NamePart} NamePart
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    NamePart.decode = function decode(reader, length) {
                        if (!(reader instanceof $Reader))
                            reader = $Reader.create(reader);
                        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.UninterpretedOption.NamePart();
                        while (reader.pos < end) {
                            var tag = reader.uint32();
                            switch (tag >>> 3) {
                            case 1: {
                                    message.namePart = reader.string();
                                    break;
                                }
                            case 2: {
                                    message.isExtension = reader.bool();
                                    break;
                                }
                            default:
                                reader.skipType(tag & 7);
                                break;
                            }
                        }
                        if (!message.hasOwnProperty("namePart"))
                            throw $util.ProtocolError("missing required 'namePart'", { instance: message });
                        if (!message.hasOwnProperty("isExtension"))
                            throw $util.ProtocolError("missing required 'isExtension'", { instance: message });
                        return message;
                    };
    
                    /**
                     * Decodes a NamePart message from the specified reader or buffer, length delimited.
                     * @function decodeDelimited
                     * @memberof google.protobuf.UninterpretedOption.NamePart
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @returns {google.protobuf.UninterpretedOption.NamePart} NamePart
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    NamePart.decodeDelimited = function decodeDelimited(reader) {
                        if (!(reader instanceof $Reader))
                            reader = new $Reader(reader);
                        return this.decode(reader, reader.uint32());
                    };
    
                    /**
                     * Verifies a NamePart message.
                     * @function verify
                     * @memberof google.protobuf.UninterpretedOption.NamePart
                     * @static
                     * @param {Object.<string,*>} message Plain object to verify
                     * @returns {string|null} `null` if valid, otherwise the reason why it is not
                     */
                    NamePart.verify = function verify(message) {
                        if (typeof message !== "object" || message === null)
                            return "object expected";
                        if (!$util.isString(message.namePart))
                            return "namePart: string expected";
                        if (typeof message.isExtension !== "boolean")
                            return "isExtension: boolean expected";
                        return null;
                    };
    
                    /**
                     * Creates a NamePart message from a plain object. Also converts values to their respective internal types.
                     * @function fromObject
                     * @memberof google.protobuf.UninterpretedOption.NamePart
                     * @static
                     * @param {Object.<string,*>} object Plain object
                     * @returns {google.protobuf.UninterpretedOption.NamePart} NamePart
                     */
                    NamePart.fromObject = function fromObject(object) {
                        if (object instanceof $root.google.protobuf.UninterpretedOption.NamePart)
                            return object;
                        var message = new $root.google.protobuf.UninterpretedOption.NamePart();
                        if (object.namePart != null)
                            message.namePart = String(object.namePart);
                        if (object.isExtension != null)
                            message.isExtension = Boolean(object.isExtension);
                        return message;
                    };
    
                    /**
                     * Creates a plain object from a NamePart message. Also converts values to other types if specified.
                     * @function toObject
                     * @memberof google.protobuf.UninterpretedOption.NamePart
                     * @static
                     * @param {google.protobuf.UninterpretedOption.NamePart} message NamePart
                     * @param {$protobuf.IConversionOptions} [options] Conversion options
                     * @returns {Object.<string,*>} Plain object
                     */
                    NamePart.toObject = function toObject(message, options) {
                        if (!options)
                            options = {};
                        var object = {};
                        if (options.defaults) {
                            object.namePart = "";
                            object.isExtension = false;
                        }
                        if (message.namePart != null && message.hasOwnProperty("namePart"))
                            object.namePart = message.namePart;
                        if (message.isExtension != null && message.hasOwnProperty("isExtension"))
                            object.isExtension = message.isExtension;
                        return object;
                    };
    
                    /**
                     * Converts this NamePart to JSON.
                     * @function toJSON
                     * @memberof google.protobuf.UninterpretedOption.NamePart
                     * @instance
                     * @returns {Object.<string,*>} JSON object
                     */
                    NamePart.prototype.toJSON = function toJSON() {
                        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                    };
    
                    /**
                     * Gets the default type url for NamePart
                     * @function getTypeUrl
                     * @memberof google.protobuf.UninterpretedOption.NamePart
                     * @static
                     * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                     * @returns {string} The default type url
                     */
                    NamePart.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                        if (typeUrlPrefix === undefined) {
                            typeUrlPrefix = "type.googleapis.com";
                        }
                        return typeUrlPrefix + "/google.protobuf.UninterpretedOption.NamePart";
                    };
    
                    return NamePart;
                })();
    
                return UninterpretedOption;
            })();
    
            protobuf.SourceCodeInfo = (function() {
    
                /**
                 * Properties of a SourceCodeInfo.
                 * @memberof google.protobuf
                 * @interface ISourceCodeInfo
                 * @property {Array.<google.protobuf.SourceCodeInfo.ILocation>|null} [location] SourceCodeInfo location
                 */
    
                /**
                 * Constructs a new SourceCodeInfo.
                 * @memberof google.protobuf
                 * @classdesc Represents a SourceCodeInfo.
                 * @implements ISourceCodeInfo
                 * @constructor
                 * @param {google.protobuf.ISourceCodeInfo=} [properties] Properties to set
                 */
                function SourceCodeInfo(properties) {
                    this.location = [];
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * SourceCodeInfo location.
                 * @member {Array.<google.protobuf.SourceCodeInfo.ILocation>} location
                 * @memberof google.protobuf.SourceCodeInfo
                 * @instance
                 */
                SourceCodeInfo.prototype.location = $util.emptyArray;
    
                /**
                 * Creates a new SourceCodeInfo instance using the specified properties.
                 * @function create
                 * @memberof google.protobuf.SourceCodeInfo
                 * @static
                 * @param {google.protobuf.ISourceCodeInfo=} [properties] Properties to set
                 * @returns {google.protobuf.SourceCodeInfo} SourceCodeInfo instance
                 */
                SourceCodeInfo.create = function create(properties) {
                    return new SourceCodeInfo(properties);
                };
    
                /**
                 * Encodes the specified SourceCodeInfo message. Does not implicitly {@link google.protobuf.SourceCodeInfo.verify|verify} messages.
                 * @function encode
                 * @memberof google.protobuf.SourceCodeInfo
                 * @static
                 * @param {google.protobuf.ISourceCodeInfo} message SourceCodeInfo message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                SourceCodeInfo.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.location != null && message.location.length)
                        for (var i = 0; i < message.location.length; ++i)
                            $root.google.protobuf.SourceCodeInfo.Location.encode(message.location[i], writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                    return writer;
                };
    
                /**
                 * Encodes the specified SourceCodeInfo message, length delimited. Does not implicitly {@link google.protobuf.SourceCodeInfo.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.protobuf.SourceCodeInfo
                 * @static
                 * @param {google.protobuf.ISourceCodeInfo} message SourceCodeInfo message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                SourceCodeInfo.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a SourceCodeInfo message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.protobuf.SourceCodeInfo
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.protobuf.SourceCodeInfo} SourceCodeInfo
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                SourceCodeInfo.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.SourceCodeInfo();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1: {
                                if (!(message.location && message.location.length))
                                    message.location = [];
                                message.location.push($root.google.protobuf.SourceCodeInfo.Location.decode(reader, reader.uint32()));
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a SourceCodeInfo message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.protobuf.SourceCodeInfo
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.protobuf.SourceCodeInfo} SourceCodeInfo
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                SourceCodeInfo.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a SourceCodeInfo message.
                 * @function verify
                 * @memberof google.protobuf.SourceCodeInfo
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                SourceCodeInfo.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.location != null && message.hasOwnProperty("location")) {
                        if (!Array.isArray(message.location))
                            return "location: array expected";
                        for (var i = 0; i < message.location.length; ++i) {
                            var error = $root.google.protobuf.SourceCodeInfo.Location.verify(message.location[i]);
                            if (error)
                                return "location." + error;
                        }
                    }
                    return null;
                };
    
                /**
                 * Creates a SourceCodeInfo message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.protobuf.SourceCodeInfo
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.protobuf.SourceCodeInfo} SourceCodeInfo
                 */
                SourceCodeInfo.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.protobuf.SourceCodeInfo)
                        return object;
                    var message = new $root.google.protobuf.SourceCodeInfo();
                    if (object.location) {
                        if (!Array.isArray(object.location))
                            throw TypeError(".google.protobuf.SourceCodeInfo.location: array expected");
                        message.location = [];
                        for (var i = 0; i < object.location.length; ++i) {
                            if (typeof object.location[i] !== "object")
                                throw TypeError(".google.protobuf.SourceCodeInfo.location: object expected");
                            message.location[i] = $root.google.protobuf.SourceCodeInfo.Location.fromObject(object.location[i]);
                        }
                    }
                    return message;
                };
    
                /**
                 * Creates a plain object from a SourceCodeInfo message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.protobuf.SourceCodeInfo
                 * @static
                 * @param {google.protobuf.SourceCodeInfo} message SourceCodeInfo
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                SourceCodeInfo.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.arrays || options.defaults)
                        object.location = [];
                    if (message.location && message.location.length) {
                        object.location = [];
                        for (var j = 0; j < message.location.length; ++j)
                            object.location[j] = $root.google.protobuf.SourceCodeInfo.Location.toObject(message.location[j], options);
                    }
                    return object;
                };
    
                /**
                 * Converts this SourceCodeInfo to JSON.
                 * @function toJSON
                 * @memberof google.protobuf.SourceCodeInfo
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                SourceCodeInfo.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for SourceCodeInfo
                 * @function getTypeUrl
                 * @memberof google.protobuf.SourceCodeInfo
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                SourceCodeInfo.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.protobuf.SourceCodeInfo";
                };
    
                SourceCodeInfo.Location = (function() {
    
                    /**
                     * Properties of a Location.
                     * @memberof google.protobuf.SourceCodeInfo
                     * @interface ILocation
                     * @property {Array.<number>|null} [path] Location path
                     * @property {Array.<number>|null} [span] Location span
                     * @property {string|null} [leadingComments] Location leadingComments
                     * @property {string|null} [trailingComments] Location trailingComments
                     * @property {Array.<string>|null} [leadingDetachedComments] Location leadingDetachedComments
                     */
    
                    /**
                     * Constructs a new Location.
                     * @memberof google.protobuf.SourceCodeInfo
                     * @classdesc Represents a Location.
                     * @implements ILocation
                     * @constructor
                     * @param {google.protobuf.SourceCodeInfo.ILocation=} [properties] Properties to set
                     */
                    function Location(properties) {
                        this.path = [];
                        this.span = [];
                        this.leadingDetachedComments = [];
                        if (properties)
                            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                if (properties[keys[i]] != null)
                                    this[keys[i]] = properties[keys[i]];
                    }
    
                    /**
                     * Location path.
                     * @member {Array.<number>} path
                     * @memberof google.protobuf.SourceCodeInfo.Location
                     * @instance
                     */
                    Location.prototype.path = $util.emptyArray;
    
                    /**
                     * Location span.
                     * @member {Array.<number>} span
                     * @memberof google.protobuf.SourceCodeInfo.Location
                     * @instance
                     */
                    Location.prototype.span = $util.emptyArray;
    
                    /**
                     * Location leadingComments.
                     * @member {string} leadingComments
                     * @memberof google.protobuf.SourceCodeInfo.Location
                     * @instance
                     */
                    Location.prototype.leadingComments = "";
    
                    /**
                     * Location trailingComments.
                     * @member {string} trailingComments
                     * @memberof google.protobuf.SourceCodeInfo.Location
                     * @instance
                     */
                    Location.prototype.trailingComments = "";
    
                    /**
                     * Location leadingDetachedComments.
                     * @member {Array.<string>} leadingDetachedComments
                     * @memberof google.protobuf.SourceCodeInfo.Location
                     * @instance
                     */
                    Location.prototype.leadingDetachedComments = $util.emptyArray;
    
                    /**
                     * Creates a new Location instance using the specified properties.
                     * @function create
                     * @memberof google.protobuf.SourceCodeInfo.Location
                     * @static
                     * @param {google.protobuf.SourceCodeInfo.ILocation=} [properties] Properties to set
                     * @returns {google.protobuf.SourceCodeInfo.Location} Location instance
                     */
                    Location.create = function create(properties) {
                        return new Location(properties);
                    };
    
                    /**
                     * Encodes the specified Location message. Does not implicitly {@link google.protobuf.SourceCodeInfo.Location.verify|verify} messages.
                     * @function encode
                     * @memberof google.protobuf.SourceCodeInfo.Location
                     * @static
                     * @param {google.protobuf.SourceCodeInfo.ILocation} message Location message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    Location.encode = function encode(message, writer) {
                        if (!writer)
                            writer = $Writer.create();
                        if (message.path != null && message.path.length) {
                            writer.uint32(/* id 1, wireType 2 =*/10).fork();
                            for (var i = 0; i < message.path.length; ++i)
                                writer.int32(message.path[i]);
                            writer.ldelim();
                        }
                        if (message.span != null && message.span.length) {
                            writer.uint32(/* id 2, wireType 2 =*/18).fork();
                            for (var i = 0; i < message.span.length; ++i)
                                writer.int32(message.span[i]);
                            writer.ldelim();
                        }
                        if (message.leadingComments != null && Object.hasOwnProperty.call(message, "leadingComments"))
                            writer.uint32(/* id 3, wireType 2 =*/26).string(message.leadingComments);
                        if (message.trailingComments != null && Object.hasOwnProperty.call(message, "trailingComments"))
                            writer.uint32(/* id 4, wireType 2 =*/34).string(message.trailingComments);
                        if (message.leadingDetachedComments != null && message.leadingDetachedComments.length)
                            for (var i = 0; i < message.leadingDetachedComments.length; ++i)
                                writer.uint32(/* id 6, wireType 2 =*/50).string(message.leadingDetachedComments[i]);
                        return writer;
                    };
    
                    /**
                     * Encodes the specified Location message, length delimited. Does not implicitly {@link google.protobuf.SourceCodeInfo.Location.verify|verify} messages.
                     * @function encodeDelimited
                     * @memberof google.protobuf.SourceCodeInfo.Location
                     * @static
                     * @param {google.protobuf.SourceCodeInfo.ILocation} message Location message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    Location.encodeDelimited = function encodeDelimited(message, writer) {
                        return this.encode(message, writer).ldelim();
                    };
    
                    /**
                     * Decodes a Location message from the specified reader or buffer.
                     * @function decode
                     * @memberof google.protobuf.SourceCodeInfo.Location
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @param {number} [length] Message length if known beforehand
                     * @returns {google.protobuf.SourceCodeInfo.Location} Location
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    Location.decode = function decode(reader, length) {
                        if (!(reader instanceof $Reader))
                            reader = $Reader.create(reader);
                        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.SourceCodeInfo.Location();
                        while (reader.pos < end) {
                            var tag = reader.uint32();
                            switch (tag >>> 3) {
                            case 1: {
                                    if (!(message.path && message.path.length))
                                        message.path = [];
                                    if ((tag & 7) === 2) {
                                        var end2 = reader.uint32() + reader.pos;
                                        while (reader.pos < end2)
                                            message.path.push(reader.int32());
                                    } else
                                        message.path.push(reader.int32());
                                    break;
                                }
                            case 2: {
                                    if (!(message.span && message.span.length))
                                        message.span = [];
                                    if ((tag & 7) === 2) {
                                        var end2 = reader.uint32() + reader.pos;
                                        while (reader.pos < end2)
                                            message.span.push(reader.int32());
                                    } else
                                        message.span.push(reader.int32());
                                    break;
                                }
                            case 3: {
                                    message.leadingComments = reader.string();
                                    break;
                                }
                            case 4: {
                                    message.trailingComments = reader.string();
                                    break;
                                }
                            case 6: {
                                    if (!(message.leadingDetachedComments && message.leadingDetachedComments.length))
                                        message.leadingDetachedComments = [];
                                    message.leadingDetachedComments.push(reader.string());
                                    break;
                                }
                            default:
                                reader.skipType(tag & 7);
                                break;
                            }
                        }
                        return message;
                    };
    
                    /**
                     * Decodes a Location message from the specified reader or buffer, length delimited.
                     * @function decodeDelimited
                     * @memberof google.protobuf.SourceCodeInfo.Location
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @returns {google.protobuf.SourceCodeInfo.Location} Location
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    Location.decodeDelimited = function decodeDelimited(reader) {
                        if (!(reader instanceof $Reader))
                            reader = new $Reader(reader);
                        return this.decode(reader, reader.uint32());
                    };
    
                    /**
                     * Verifies a Location message.
                     * @function verify
                     * @memberof google.protobuf.SourceCodeInfo.Location
                     * @static
                     * @param {Object.<string,*>} message Plain object to verify
                     * @returns {string|null} `null` if valid, otherwise the reason why it is not
                     */
                    Location.verify = function verify(message) {
                        if (typeof message !== "object" || message === null)
                            return "object expected";
                        if (message.path != null && message.hasOwnProperty("path")) {
                            if (!Array.isArray(message.path))
                                return "path: array expected";
                            for (var i = 0; i < message.path.length; ++i)
                                if (!$util.isInteger(message.path[i]))
                                    return "path: integer[] expected";
                        }
                        if (message.span != null && message.hasOwnProperty("span")) {
                            if (!Array.isArray(message.span))
                                return "span: array expected";
                            for (var i = 0; i < message.span.length; ++i)
                                if (!$util.isInteger(message.span[i]))
                                    return "span: integer[] expected";
                        }
                        if (message.leadingComments != null && message.hasOwnProperty("leadingComments"))
                            if (!$util.isString(message.leadingComments))
                                return "leadingComments: string expected";
                        if (message.trailingComments != null && message.hasOwnProperty("trailingComments"))
                            if (!$util.isString(message.trailingComments))
                                return "trailingComments: string expected";
                        if (message.leadingDetachedComments != null && message.hasOwnProperty("leadingDetachedComments")) {
                            if (!Array.isArray(message.leadingDetachedComments))
                                return "leadingDetachedComments: array expected";
                            for (var i = 0; i < message.leadingDetachedComments.length; ++i)
                                if (!$util.isString(message.leadingDetachedComments[i]))
                                    return "leadingDetachedComments: string[] expected";
                        }
                        return null;
                    };
    
                    /**
                     * Creates a Location message from a plain object. Also converts values to their respective internal types.
                     * @function fromObject
                     * @memberof google.protobuf.SourceCodeInfo.Location
                     * @static
                     * @param {Object.<string,*>} object Plain object
                     * @returns {google.protobuf.SourceCodeInfo.Location} Location
                     */
                    Location.fromObject = function fromObject(object) {
                        if (object instanceof $root.google.protobuf.SourceCodeInfo.Location)
                            return object;
                        var message = new $root.google.protobuf.SourceCodeInfo.Location();
                        if (object.path) {
                            if (!Array.isArray(object.path))
                                throw TypeError(".google.protobuf.SourceCodeInfo.Location.path: array expected");
                            message.path = [];
                            for (var i = 0; i < object.path.length; ++i)
                                message.path[i] = object.path[i] | 0;
                        }
                        if (object.span) {
                            if (!Array.isArray(object.span))
                                throw TypeError(".google.protobuf.SourceCodeInfo.Location.span: array expected");
                            message.span = [];
                            for (var i = 0; i < object.span.length; ++i)
                                message.span[i] = object.span[i] | 0;
                        }
                        if (object.leadingComments != null)
                            message.leadingComments = String(object.leadingComments);
                        if (object.trailingComments != null)
                            message.trailingComments = String(object.trailingComments);
                        if (object.leadingDetachedComments) {
                            if (!Array.isArray(object.leadingDetachedComments))
                                throw TypeError(".google.protobuf.SourceCodeInfo.Location.leadingDetachedComments: array expected");
                            message.leadingDetachedComments = [];
                            for (var i = 0; i < object.leadingDetachedComments.length; ++i)
                                message.leadingDetachedComments[i] = String(object.leadingDetachedComments[i]);
                        }
                        return message;
                    };
    
                    /**
                     * Creates a plain object from a Location message. Also converts values to other types if specified.
                     * @function toObject
                     * @memberof google.protobuf.SourceCodeInfo.Location
                     * @static
                     * @param {google.protobuf.SourceCodeInfo.Location} message Location
                     * @param {$protobuf.IConversionOptions} [options] Conversion options
                     * @returns {Object.<string,*>} Plain object
                     */
                    Location.toObject = function toObject(message, options) {
                        if (!options)
                            options = {};
                        var object = {};
                        if (options.arrays || options.defaults) {
                            object.path = [];
                            object.span = [];
                            object.leadingDetachedComments = [];
                        }
                        if (options.defaults) {
                            object.leadingComments = "";
                            object.trailingComments = "";
                        }
                        if (message.path && message.path.length) {
                            object.path = [];
                            for (var j = 0; j < message.path.length; ++j)
                                object.path[j] = message.path[j];
                        }
                        if (message.span && message.span.length) {
                            object.span = [];
                            for (var j = 0; j < message.span.length; ++j)
                                object.span[j] = message.span[j];
                        }
                        if (message.leadingComments != null && message.hasOwnProperty("leadingComments"))
                            object.leadingComments = message.leadingComments;
                        if (message.trailingComments != null && message.hasOwnProperty("trailingComments"))
                            object.trailingComments = message.trailingComments;
                        if (message.leadingDetachedComments && message.leadingDetachedComments.length) {
                            object.leadingDetachedComments = [];
                            for (var j = 0; j < message.leadingDetachedComments.length; ++j)
                                object.leadingDetachedComments[j] = message.leadingDetachedComments[j];
                        }
                        return object;
                    };
    
                    /**
                     * Converts this Location to JSON.
                     * @function toJSON
                     * @memberof google.protobuf.SourceCodeInfo.Location
                     * @instance
                     * @returns {Object.<string,*>} JSON object
                     */
                    Location.prototype.toJSON = function toJSON() {
                        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                    };
    
                    /**
                     * Gets the default type url for Location
                     * @function getTypeUrl
                     * @memberof google.protobuf.SourceCodeInfo.Location
                     * @static
                     * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                     * @returns {string} The default type url
                     */
                    Location.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                        if (typeUrlPrefix === undefined) {
                            typeUrlPrefix = "type.googleapis.com";
                        }
                        return typeUrlPrefix + "/google.protobuf.SourceCodeInfo.Location";
                    };
    
                    return Location;
                })();
    
                return SourceCodeInfo;
            })();
    
            protobuf.GeneratedCodeInfo = (function() {
    
                /**
                 * Properties of a GeneratedCodeInfo.
                 * @memberof google.protobuf
                 * @interface IGeneratedCodeInfo
                 * @property {Array.<google.protobuf.GeneratedCodeInfo.IAnnotation>|null} [annotation] GeneratedCodeInfo annotation
                 */
    
                /**
                 * Constructs a new GeneratedCodeInfo.
                 * @memberof google.protobuf
                 * @classdesc Represents a GeneratedCodeInfo.
                 * @implements IGeneratedCodeInfo
                 * @constructor
                 * @param {google.protobuf.IGeneratedCodeInfo=} [properties] Properties to set
                 */
                function GeneratedCodeInfo(properties) {
                    this.annotation = [];
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * GeneratedCodeInfo annotation.
                 * @member {Array.<google.protobuf.GeneratedCodeInfo.IAnnotation>} annotation
                 * @memberof google.protobuf.GeneratedCodeInfo
                 * @instance
                 */
                GeneratedCodeInfo.prototype.annotation = $util.emptyArray;
    
                /**
                 * Creates a new GeneratedCodeInfo instance using the specified properties.
                 * @function create
                 * @memberof google.protobuf.GeneratedCodeInfo
                 * @static
                 * @param {google.protobuf.IGeneratedCodeInfo=} [properties] Properties to set
                 * @returns {google.protobuf.GeneratedCodeInfo} GeneratedCodeInfo instance
                 */
                GeneratedCodeInfo.create = function create(properties) {
                    return new GeneratedCodeInfo(properties);
                };
    
                /**
                 * Encodes the specified GeneratedCodeInfo message. Does not implicitly {@link google.protobuf.GeneratedCodeInfo.verify|verify} messages.
                 * @function encode
                 * @memberof google.protobuf.GeneratedCodeInfo
                 * @static
                 * @param {google.protobuf.IGeneratedCodeInfo} message GeneratedCodeInfo message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                GeneratedCodeInfo.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.annotation != null && message.annotation.length)
                        for (var i = 0; i < message.annotation.length; ++i)
                            $root.google.protobuf.GeneratedCodeInfo.Annotation.encode(message.annotation[i], writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                    return writer;
                };
    
                /**
                 * Encodes the specified GeneratedCodeInfo message, length delimited. Does not implicitly {@link google.protobuf.GeneratedCodeInfo.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.protobuf.GeneratedCodeInfo
                 * @static
                 * @param {google.protobuf.IGeneratedCodeInfo} message GeneratedCodeInfo message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                GeneratedCodeInfo.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a GeneratedCodeInfo message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.protobuf.GeneratedCodeInfo
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.protobuf.GeneratedCodeInfo} GeneratedCodeInfo
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                GeneratedCodeInfo.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.GeneratedCodeInfo();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1: {
                                if (!(message.annotation && message.annotation.length))
                                    message.annotation = [];
                                message.annotation.push($root.google.protobuf.GeneratedCodeInfo.Annotation.decode(reader, reader.uint32()));
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a GeneratedCodeInfo message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.protobuf.GeneratedCodeInfo
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.protobuf.GeneratedCodeInfo} GeneratedCodeInfo
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                GeneratedCodeInfo.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a GeneratedCodeInfo message.
                 * @function verify
                 * @memberof google.protobuf.GeneratedCodeInfo
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                GeneratedCodeInfo.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.annotation != null && message.hasOwnProperty("annotation")) {
                        if (!Array.isArray(message.annotation))
                            return "annotation: array expected";
                        for (var i = 0; i < message.annotation.length; ++i) {
                            var error = $root.google.protobuf.GeneratedCodeInfo.Annotation.verify(message.annotation[i]);
                            if (error)
                                return "annotation." + error;
                        }
                    }
                    return null;
                };
    
                /**
                 * Creates a GeneratedCodeInfo message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.protobuf.GeneratedCodeInfo
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.protobuf.GeneratedCodeInfo} GeneratedCodeInfo
                 */
                GeneratedCodeInfo.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.protobuf.GeneratedCodeInfo)
                        return object;
                    var message = new $root.google.protobuf.GeneratedCodeInfo();
                    if (object.annotation) {
                        if (!Array.isArray(object.annotation))
                            throw TypeError(".google.protobuf.GeneratedCodeInfo.annotation: array expected");
                        message.annotation = [];
                        for (var i = 0; i < object.annotation.length; ++i) {
                            if (typeof object.annotation[i] !== "object")
                                throw TypeError(".google.protobuf.GeneratedCodeInfo.annotation: object expected");
                            message.annotation[i] = $root.google.protobuf.GeneratedCodeInfo.Annotation.fromObject(object.annotation[i]);
                        }
                    }
                    return message;
                };
    
                /**
                 * Creates a plain object from a GeneratedCodeInfo message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.protobuf.GeneratedCodeInfo
                 * @static
                 * @param {google.protobuf.GeneratedCodeInfo} message GeneratedCodeInfo
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                GeneratedCodeInfo.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.arrays || options.defaults)
                        object.annotation = [];
                    if (message.annotation && message.annotation.length) {
                        object.annotation = [];
                        for (var j = 0; j < message.annotation.length; ++j)
                            object.annotation[j] = $root.google.protobuf.GeneratedCodeInfo.Annotation.toObject(message.annotation[j], options);
                    }
                    return object;
                };
    
                /**
                 * Converts this GeneratedCodeInfo to JSON.
                 * @function toJSON
                 * @memberof google.protobuf.GeneratedCodeInfo
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                GeneratedCodeInfo.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for GeneratedCodeInfo
                 * @function getTypeUrl
                 * @memberof google.protobuf.GeneratedCodeInfo
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                GeneratedCodeInfo.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.protobuf.GeneratedCodeInfo";
                };
    
                GeneratedCodeInfo.Annotation = (function() {
    
                    /**
                     * Properties of an Annotation.
                     * @memberof google.protobuf.GeneratedCodeInfo
                     * @interface IAnnotation
                     * @property {Array.<number>|null} [path] Annotation path
                     * @property {string|null} [sourceFile] Annotation sourceFile
                     * @property {number|null} [begin] Annotation begin
                     * @property {number|null} [end] Annotation end
                     * @property {google.protobuf.GeneratedCodeInfo.Annotation.Semantic|null} [semantic] Annotation semantic
                     */
    
                    /**
                     * Constructs a new Annotation.
                     * @memberof google.protobuf.GeneratedCodeInfo
                     * @classdesc Represents an Annotation.
                     * @implements IAnnotation
                     * @constructor
                     * @param {google.protobuf.GeneratedCodeInfo.IAnnotation=} [properties] Properties to set
                     */
                    function Annotation(properties) {
                        this.path = [];
                        if (properties)
                            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                if (properties[keys[i]] != null)
                                    this[keys[i]] = properties[keys[i]];
                    }
    
                    /**
                     * Annotation path.
                     * @member {Array.<number>} path
                     * @memberof google.protobuf.GeneratedCodeInfo.Annotation
                     * @instance
                     */
                    Annotation.prototype.path = $util.emptyArray;
    
                    /**
                     * Annotation sourceFile.
                     * @member {string} sourceFile
                     * @memberof google.protobuf.GeneratedCodeInfo.Annotation
                     * @instance
                     */
                    Annotation.prototype.sourceFile = "";
    
                    /**
                     * Annotation begin.
                     * @member {number} begin
                     * @memberof google.protobuf.GeneratedCodeInfo.Annotation
                     * @instance
                     */
                    Annotation.prototype.begin = 0;
    
                    /**
                     * Annotation end.
                     * @member {number} end
                     * @memberof google.protobuf.GeneratedCodeInfo.Annotation
                     * @instance
                     */
                    Annotation.prototype.end = 0;
    
                    /**
                     * Annotation semantic.
                     * @member {google.protobuf.GeneratedCodeInfo.Annotation.Semantic} semantic
                     * @memberof google.protobuf.GeneratedCodeInfo.Annotation
                     * @instance
                     */
                    Annotation.prototype.semantic = 0;
    
                    /**
                     * Creates a new Annotation instance using the specified properties.
                     * @function create
                     * @memberof google.protobuf.GeneratedCodeInfo.Annotation
                     * @static
                     * @param {google.protobuf.GeneratedCodeInfo.IAnnotation=} [properties] Properties to set
                     * @returns {google.protobuf.GeneratedCodeInfo.Annotation} Annotation instance
                     */
                    Annotation.create = function create(properties) {
                        return new Annotation(properties);
                    };
    
                    /**
                     * Encodes the specified Annotation message. Does not implicitly {@link google.protobuf.GeneratedCodeInfo.Annotation.verify|verify} messages.
                     * @function encode
                     * @memberof google.protobuf.GeneratedCodeInfo.Annotation
                     * @static
                     * @param {google.protobuf.GeneratedCodeInfo.IAnnotation} message Annotation message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    Annotation.encode = function encode(message, writer) {
                        if (!writer)
                            writer = $Writer.create();
                        if (message.path != null && message.path.length) {
                            writer.uint32(/* id 1, wireType 2 =*/10).fork();
                            for (var i = 0; i < message.path.length; ++i)
                                writer.int32(message.path[i]);
                            writer.ldelim();
                        }
                        if (message.sourceFile != null && Object.hasOwnProperty.call(message, "sourceFile"))
                            writer.uint32(/* id 2, wireType 2 =*/18).string(message.sourceFile);
                        if (message.begin != null && Object.hasOwnProperty.call(message, "begin"))
                            writer.uint32(/* id 3, wireType 0 =*/24).int32(message.begin);
                        if (message.end != null && Object.hasOwnProperty.call(message, "end"))
                            writer.uint32(/* id 4, wireType 0 =*/32).int32(message.end);
                        if (message.semantic != null && Object.hasOwnProperty.call(message, "semantic"))
                            writer.uint32(/* id 5, wireType 0 =*/40).int32(message.semantic);
                        return writer;
                    };
    
                    /**
                     * Encodes the specified Annotation message, length delimited. Does not implicitly {@link google.protobuf.GeneratedCodeInfo.Annotation.verify|verify} messages.
                     * @function encodeDelimited
                     * @memberof google.protobuf.GeneratedCodeInfo.Annotation
                     * @static
                     * @param {google.protobuf.GeneratedCodeInfo.IAnnotation} message Annotation message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    Annotation.encodeDelimited = function encodeDelimited(message, writer) {
                        return this.encode(message, writer).ldelim();
                    };
    
                    /**
                     * Decodes an Annotation message from the specified reader or buffer.
                     * @function decode
                     * @memberof google.protobuf.GeneratedCodeInfo.Annotation
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @param {number} [length] Message length if known beforehand
                     * @returns {google.protobuf.GeneratedCodeInfo.Annotation} Annotation
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    Annotation.decode = function decode(reader, length) {
                        if (!(reader instanceof $Reader))
                            reader = $Reader.create(reader);
                        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.GeneratedCodeInfo.Annotation();
                        while (reader.pos < end) {
                            var tag = reader.uint32();
                            switch (tag >>> 3) {
                            case 1: {
                                    if (!(message.path && message.path.length))
                                        message.path = [];
                                    if ((tag & 7) === 2) {
                                        var end2 = reader.uint32() + reader.pos;
                                        while (reader.pos < end2)
                                            message.path.push(reader.int32());
                                    } else
                                        message.path.push(reader.int32());
                                    break;
                                }
                            case 2: {
                                    message.sourceFile = reader.string();
                                    break;
                                }
                            case 3: {
                                    message.begin = reader.int32();
                                    break;
                                }
                            case 4: {
                                    message.end = reader.int32();
                                    break;
                                }
                            case 5: {
                                    message.semantic = reader.int32();
                                    break;
                                }
                            default:
                                reader.skipType(tag & 7);
                                break;
                            }
                        }
                        return message;
                    };
    
                    /**
                     * Decodes an Annotation message from the specified reader or buffer, length delimited.
                     * @function decodeDelimited
                     * @memberof google.protobuf.GeneratedCodeInfo.Annotation
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @returns {google.protobuf.GeneratedCodeInfo.Annotation} Annotation
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    Annotation.decodeDelimited = function decodeDelimited(reader) {
                        if (!(reader instanceof $Reader))
                            reader = new $Reader(reader);
                        return this.decode(reader, reader.uint32());
                    };
    
                    /**
                     * Verifies an Annotation message.
                     * @function verify
                     * @memberof google.protobuf.GeneratedCodeInfo.Annotation
                     * @static
                     * @param {Object.<string,*>} message Plain object to verify
                     * @returns {string|null} `null` if valid, otherwise the reason why it is not
                     */
                    Annotation.verify = function verify(message) {
                        if (typeof message !== "object" || message === null)
                            return "object expected";
                        if (message.path != null && message.hasOwnProperty("path")) {
                            if (!Array.isArray(message.path))
                                return "path: array expected";
                            for (var i = 0; i < message.path.length; ++i)
                                if (!$util.isInteger(message.path[i]))
                                    return "path: integer[] expected";
                        }
                        if (message.sourceFile != null && message.hasOwnProperty("sourceFile"))
                            if (!$util.isString(message.sourceFile))
                                return "sourceFile: string expected";
                        if (message.begin != null && message.hasOwnProperty("begin"))
                            if (!$util.isInteger(message.begin))
                                return "begin: integer expected";
                        if (message.end != null && message.hasOwnProperty("end"))
                            if (!$util.isInteger(message.end))
                                return "end: integer expected";
                        if (message.semantic != null && message.hasOwnProperty("semantic"))
                            switch (message.semantic) {
                            default:
                                return "semantic: enum value expected";
                            case 0:
                            case 1:
                            case 2:
                                break;
                            }
                        return null;
                    };
    
                    /**
                     * Creates an Annotation message from a plain object. Also converts values to their respective internal types.
                     * @function fromObject
                     * @memberof google.protobuf.GeneratedCodeInfo.Annotation
                     * @static
                     * @param {Object.<string,*>} object Plain object
                     * @returns {google.protobuf.GeneratedCodeInfo.Annotation} Annotation
                     */
                    Annotation.fromObject = function fromObject(object) {
                        if (object instanceof $root.google.protobuf.GeneratedCodeInfo.Annotation)
                            return object;
                        var message = new $root.google.protobuf.GeneratedCodeInfo.Annotation();
                        if (object.path) {
                            if (!Array.isArray(object.path))
                                throw TypeError(".google.protobuf.GeneratedCodeInfo.Annotation.path: array expected");
                            message.path = [];
                            for (var i = 0; i < object.path.length; ++i)
                                message.path[i] = object.path[i] | 0;
                        }
                        if (object.sourceFile != null)
                            message.sourceFile = String(object.sourceFile);
                        if (object.begin != null)
                            message.begin = object.begin | 0;
                        if (object.end != null)
                            message.end = object.end | 0;
                        switch (object.semantic) {
                        default:
                            if (typeof object.semantic === "number") {
                                message.semantic = object.semantic;
                                break;
                            }
                            break;
                        case "NONE":
                        case 0:
                            message.semantic = 0;
                            break;
                        case "SET":
                        case 1:
                            message.semantic = 1;
                            break;
                        case "ALIAS":
                        case 2:
                            message.semantic = 2;
                            break;
                        }
                        return message;
                    };
    
                    /**
                     * Creates a plain object from an Annotation message. Also converts values to other types if specified.
                     * @function toObject
                     * @memberof google.protobuf.GeneratedCodeInfo.Annotation
                     * @static
                     * @param {google.protobuf.GeneratedCodeInfo.Annotation} message Annotation
                     * @param {$protobuf.IConversionOptions} [options] Conversion options
                     * @returns {Object.<string,*>} Plain object
                     */
                    Annotation.toObject = function toObject(message, options) {
                        if (!options)
                            options = {};
                        var object = {};
                        if (options.arrays || options.defaults)
                            object.path = [];
                        if (options.defaults) {
                            object.sourceFile = "";
                            object.begin = 0;
                            object.end = 0;
                            object.semantic = options.enums === String ? "NONE" : 0;
                        }
                        if (message.path && message.path.length) {
                            object.path = [];
                            for (var j = 0; j < message.path.length; ++j)
                                object.path[j] = message.path[j];
                        }
                        if (message.sourceFile != null && message.hasOwnProperty("sourceFile"))
                            object.sourceFile = message.sourceFile;
                        if (message.begin != null && message.hasOwnProperty("begin"))
                            object.begin = message.begin;
                        if (message.end != null && message.hasOwnProperty("end"))
                            object.end = message.end;
                        if (message.semantic != null && message.hasOwnProperty("semantic"))
                            object.semantic = options.enums === String ? $root.google.protobuf.GeneratedCodeInfo.Annotation.Semantic[message.semantic] === undefined ? message.semantic : $root.google.protobuf.GeneratedCodeInfo.Annotation.Semantic[message.semantic] : message.semantic;
                        return object;
                    };
    
                    /**
                     * Converts this Annotation to JSON.
                     * @function toJSON
                     * @memberof google.protobuf.GeneratedCodeInfo.Annotation
                     * @instance
                     * @returns {Object.<string,*>} JSON object
                     */
                    Annotation.prototype.toJSON = function toJSON() {
                        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                    };
    
                    /**
                     * Gets the default type url for Annotation
                     * @function getTypeUrl
                     * @memberof google.protobuf.GeneratedCodeInfo.Annotation
                     * @static
                     * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                     * @returns {string} The default type url
                     */
                    Annotation.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                        if (typeUrlPrefix === undefined) {
                            typeUrlPrefix = "type.googleapis.com";
                        }
                        return typeUrlPrefix + "/google.protobuf.GeneratedCodeInfo.Annotation";
                    };
    
                    /**
                     * Semantic enum.
                     * @name google.protobuf.GeneratedCodeInfo.Annotation.Semantic
                     * @enum {number}
                     * @property {number} NONE=0 NONE value
                     * @property {number} SET=1 SET value
                     * @property {number} ALIAS=2 ALIAS value
                     */
                    Annotation.Semantic = (function() {
                        var valuesById = {}, values = Object.create(valuesById);
                        values[valuesById[0] = "NONE"] = 0;
                        values[valuesById[1] = "SET"] = 1;
                        values[valuesById[2] = "ALIAS"] = 2;
                        return values;
                    })();
    
                    return Annotation;
                })();
    
                return GeneratedCodeInfo;
            })();
    
            protobuf.Timestamp = (function() {
    
                /**
                 * Properties of a Timestamp.
                 * @memberof google.protobuf
                 * @interface ITimestamp
                 * @property {number|Long|null} [seconds] Timestamp seconds
                 * @property {number|null} [nanos] Timestamp nanos
                 */
    
                /**
                 * Constructs a new Timestamp.
                 * @memberof google.protobuf
                 * @classdesc Represents a Timestamp.
                 * @implements ITimestamp
                 * @constructor
                 * @param {google.protobuf.ITimestamp=} [properties] Properties to set
                 */
                function Timestamp(properties) {
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * Timestamp seconds.
                 * @member {number|Long} seconds
                 * @memberof google.protobuf.Timestamp
                 * @instance
                 */
                Timestamp.prototype.seconds = $util.Long ? $util.Long.fromBits(0,0,false) : 0;
    
                /**
                 * Timestamp nanos.
                 * @member {number} nanos
                 * @memberof google.protobuf.Timestamp
                 * @instance
                 */
                Timestamp.prototype.nanos = 0;
    
                /**
                 * Creates a new Timestamp instance using the specified properties.
                 * @function create
                 * @memberof google.protobuf.Timestamp
                 * @static
                 * @param {google.protobuf.ITimestamp=} [properties] Properties to set
                 * @returns {google.protobuf.Timestamp} Timestamp instance
                 */
                Timestamp.create = function create(properties) {
                    return new Timestamp(properties);
                };
    
                /**
                 * Encodes the specified Timestamp message. Does not implicitly {@link google.protobuf.Timestamp.verify|verify} messages.
                 * @function encode
                 * @memberof google.protobuf.Timestamp
                 * @static
                 * @param {google.protobuf.ITimestamp} message Timestamp message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                Timestamp.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.seconds != null && Object.hasOwnProperty.call(message, "seconds"))
                        writer.uint32(/* id 1, wireType 0 =*/8).int64(message.seconds);
                    if (message.nanos != null && Object.hasOwnProperty.call(message, "nanos"))
                        writer.uint32(/* id 2, wireType 0 =*/16).int32(message.nanos);
                    return writer;
                };
    
                /**
                 * Encodes the specified Timestamp message, length delimited. Does not implicitly {@link google.protobuf.Timestamp.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.protobuf.Timestamp
                 * @static
                 * @param {google.protobuf.ITimestamp} message Timestamp message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                Timestamp.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a Timestamp message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.protobuf.Timestamp
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.protobuf.Timestamp} Timestamp
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                Timestamp.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.Timestamp();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1: {
                                message.seconds = reader.int64();
                                break;
                            }
                        case 2: {
                                message.nanos = reader.int32();
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a Timestamp message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.protobuf.Timestamp
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.protobuf.Timestamp} Timestamp
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                Timestamp.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a Timestamp message.
                 * @function verify
                 * @memberof google.protobuf.Timestamp
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                Timestamp.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.seconds != null && message.hasOwnProperty("seconds"))
                        if (!$util.isInteger(message.seconds) && !(message.seconds && $util.isInteger(message.seconds.low) && $util.isInteger(message.seconds.high)))
                            return "seconds: integer|Long expected";
                    if (message.nanos != null && message.hasOwnProperty("nanos"))
                        if (!$util.isInteger(message.nanos))
                            return "nanos: integer expected";
                    return null;
                };
    
                /**
                 * Creates a Timestamp message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.protobuf.Timestamp
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.protobuf.Timestamp} Timestamp
                 */
                Timestamp.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.protobuf.Timestamp)
                        return object;
                    var message = new $root.google.protobuf.Timestamp();
                    if (object.seconds != null)
                        if ($util.Long)
                            (message.seconds = $util.Long.fromValue(object.seconds)).unsigned = false;
                        else if (typeof object.seconds === "string")
                            message.seconds = parseInt(object.seconds, 10);
                        else if (typeof object.seconds === "number")
                            message.seconds = object.seconds;
                        else if (typeof object.seconds === "object")
                            message.seconds = new $util.LongBits(object.seconds.low >>> 0, object.seconds.high >>> 0).toNumber();
                    if (object.nanos != null)
                        message.nanos = object.nanos | 0;
                    return message;
                };
    
                /**
                 * Creates a plain object from a Timestamp message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.protobuf.Timestamp
                 * @static
                 * @param {google.protobuf.Timestamp} message Timestamp
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                Timestamp.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.defaults) {
                        if ($util.Long) {
                            var long = new $util.Long(0, 0, false);
                            object.seconds = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                        } else
                            object.seconds = options.longs === String ? "0" : 0;
                        object.nanos = 0;
                    }
                    if (message.seconds != null && message.hasOwnProperty("seconds"))
                        if (typeof message.seconds === "number")
                            object.seconds = options.longs === String ? String(message.seconds) : message.seconds;
                        else
                            object.seconds = options.longs === String ? $util.Long.prototype.toString.call(message.seconds) : options.longs === Number ? new $util.LongBits(message.seconds.low >>> 0, message.seconds.high >>> 0).toNumber() : message.seconds;
                    if (message.nanos != null && message.hasOwnProperty("nanos"))
                        object.nanos = message.nanos;
                    return object;
                };
    
                /**
                 * Converts this Timestamp to JSON.
                 * @function toJSON
                 * @memberof google.protobuf.Timestamp
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                Timestamp.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for Timestamp
                 * @function getTypeUrl
                 * @memberof google.protobuf.Timestamp
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                Timestamp.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.protobuf.Timestamp";
                };
    
                return Timestamp;
            })();
    
            protobuf.Empty = (function() {
    
                /**
                 * Properties of an Empty.
                 * @memberof google.protobuf
                 * @interface IEmpty
                 */
    
                /**
                 * Constructs a new Empty.
                 * @memberof google.protobuf
                 * @classdesc Represents an Empty.
                 * @implements IEmpty
                 * @constructor
                 * @param {google.protobuf.IEmpty=} [properties] Properties to set
                 */
                function Empty(properties) {
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * Creates a new Empty instance using the specified properties.
                 * @function create
                 * @memberof google.protobuf.Empty
                 * @static
                 * @param {google.protobuf.IEmpty=} [properties] Properties to set
                 * @returns {google.protobuf.Empty} Empty instance
                 */
                Empty.create = function create(properties) {
                    return new Empty(properties);
                };
    
                /**
                 * Encodes the specified Empty message. Does not implicitly {@link google.protobuf.Empty.verify|verify} messages.
                 * @function encode
                 * @memberof google.protobuf.Empty
                 * @static
                 * @param {google.protobuf.IEmpty} message Empty message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                Empty.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    return writer;
                };
    
                /**
                 * Encodes the specified Empty message, length delimited. Does not implicitly {@link google.protobuf.Empty.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.protobuf.Empty
                 * @static
                 * @param {google.protobuf.IEmpty} message Empty message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                Empty.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes an Empty message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.protobuf.Empty
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.protobuf.Empty} Empty
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                Empty.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.Empty();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes an Empty message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.protobuf.Empty
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.protobuf.Empty} Empty
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                Empty.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies an Empty message.
                 * @function verify
                 * @memberof google.protobuf.Empty
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                Empty.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    return null;
                };
    
                /**
                 * Creates an Empty message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.protobuf.Empty
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.protobuf.Empty} Empty
                 */
                Empty.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.protobuf.Empty)
                        return object;
                    return new $root.google.protobuf.Empty();
                };
    
                /**
                 * Creates a plain object from an Empty message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.protobuf.Empty
                 * @static
                 * @param {google.protobuf.Empty} message Empty
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                Empty.toObject = function toObject() {
                    return {};
                };
    
                /**
                 * Converts this Empty to JSON.
                 * @function toJSON
                 * @memberof google.protobuf.Empty
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                Empty.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for Empty
                 * @function getTypeUrl
                 * @memberof google.protobuf.Empty
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                Empty.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.protobuf.Empty";
                };
    
                return Empty;
            })();
    
            return protobuf;
        })();
    
        return google;
    })();
    
    $root.grafeas = (function() {
    
        /**
         * Namespace grafeas.
         * @exports grafeas
         * @namespace
         */
        var grafeas = {};
    
        grafeas.v1 = (function() {
    
            /**
             * Namespace v1.
             * @memberof grafeas
             * @namespace
             */
            var v1 = {};
    
            v1.AttestationNote = (function() {
    
                /**
                 * Properties of an AttestationNote.
                 * @memberof grafeas.v1
                 * @interface IAttestationNote
                 * @property {grafeas.v1.AttestationNote.IHint|null} [hint] AttestationNote hint
                 */
    
                /**
                 * Constructs a new AttestationNote.
                 * @memberof grafeas.v1
                 * @classdesc Represents an AttestationNote.
                 * @implements IAttestationNote
                 * @constructor
                 * @param {grafeas.v1.IAttestationNote=} [properties] Properties to set
                 */
                function AttestationNote(properties) {
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * AttestationNote hint.
                 * @member {grafeas.v1.AttestationNote.IHint|null|undefined} hint
                 * @memberof grafeas.v1.AttestationNote
                 * @instance
                 */
                AttestationNote.prototype.hint = null;
    
                /**
                 * Creates a new AttestationNote instance using the specified properties.
                 * @function create
                 * @memberof grafeas.v1.AttestationNote
                 * @static
                 * @param {grafeas.v1.IAttestationNote=} [properties] Properties to set
                 * @returns {grafeas.v1.AttestationNote} AttestationNote instance
                 */
                AttestationNote.create = function create(properties) {
                    return new AttestationNote(properties);
                };
    
                /**
                 * Encodes the specified AttestationNote message. Does not implicitly {@link grafeas.v1.AttestationNote.verify|verify} messages.
                 * @function encode
                 * @memberof grafeas.v1.AttestationNote
                 * @static
                 * @param {grafeas.v1.IAttestationNote} message AttestationNote message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                AttestationNote.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.hint != null && Object.hasOwnProperty.call(message, "hint"))
                        $root.grafeas.v1.AttestationNote.Hint.encode(message.hint, writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                    return writer;
                };
    
                /**
                 * Encodes the specified AttestationNote message, length delimited. Does not implicitly {@link grafeas.v1.AttestationNote.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof grafeas.v1.AttestationNote
                 * @static
                 * @param {grafeas.v1.IAttestationNote} message AttestationNote message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                AttestationNote.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes an AttestationNote message from the specified reader or buffer.
                 * @function decode
                 * @memberof grafeas.v1.AttestationNote
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {grafeas.v1.AttestationNote} AttestationNote
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                AttestationNote.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.grafeas.v1.AttestationNote();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1: {
                                message.hint = $root.grafeas.v1.AttestationNote.Hint.decode(reader, reader.uint32());
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes an AttestationNote message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof grafeas.v1.AttestationNote
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {grafeas.v1.AttestationNote} AttestationNote
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                AttestationNote.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies an AttestationNote message.
                 * @function verify
                 * @memberof grafeas.v1.AttestationNote
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                AttestationNote.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.hint != null && message.hasOwnProperty("hint")) {
                        var error = $root.grafeas.v1.AttestationNote.Hint.verify(message.hint);
                        if (error)
                            return "hint." + error;
                    }
                    return null;
                };
    
                /**
                 * Creates an AttestationNote message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof grafeas.v1.AttestationNote
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {grafeas.v1.AttestationNote} AttestationNote
                 */
                AttestationNote.fromObject = function fromObject(object) {
                    if (object instanceof $root.grafeas.v1.AttestationNote)
                        return object;
                    var message = new $root.grafeas.v1.AttestationNote();
                    if (object.hint != null) {
                        if (typeof object.hint !== "object")
                            throw TypeError(".grafeas.v1.AttestationNote.hint: object expected");
                        message.hint = $root.grafeas.v1.AttestationNote.Hint.fromObject(object.hint);
                    }
                    return message;
                };
    
                /**
                 * Creates a plain object from an AttestationNote message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof grafeas.v1.AttestationNote
                 * @static
                 * @param {grafeas.v1.AttestationNote} message AttestationNote
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                AttestationNote.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.defaults)
                        object.hint = null;
                    if (message.hint != null && message.hasOwnProperty("hint"))
                        object.hint = $root.grafeas.v1.AttestationNote.Hint.toObject(message.hint, options);
                    return object;
                };
    
                /**
                 * Converts this AttestationNote to JSON.
                 * @function toJSON
                 * @memberof grafeas.v1.AttestationNote
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                AttestationNote.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for AttestationNote
                 * @function getTypeUrl
                 * @memberof grafeas.v1.AttestationNote
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                AttestationNote.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/grafeas.v1.AttestationNote";
                };
    
                AttestationNote.Hint = (function() {
    
                    /**
                     * Properties of a Hint.
                     * @memberof grafeas.v1.AttestationNote
                     * @interface IHint
                     * @property {string|null} [humanReadableName] Hint humanReadableName
                     */
    
                    /**
                     * Constructs a new Hint.
                     * @memberof grafeas.v1.AttestationNote
                     * @classdesc Represents a Hint.
                     * @implements IHint
                     * @constructor
                     * @param {grafeas.v1.AttestationNote.IHint=} [properties] Properties to set
                     */
                    function Hint(properties) {
                        if (properties)
                            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                if (properties[keys[i]] != null)
                                    this[keys[i]] = properties[keys[i]];
                    }
    
                    /**
                     * Hint humanReadableName.
                     * @member {string} humanReadableName
                     * @memberof grafeas.v1.AttestationNote.Hint
                     * @instance
                     */
                    Hint.prototype.humanReadableName = "";
    
                    /**
                     * Creates a new Hint instance using the specified properties.
                     * @function create
                     * @memberof grafeas.v1.AttestationNote.Hint
                     * @static
                     * @param {grafeas.v1.AttestationNote.IHint=} [properties] Properties to set
                     * @returns {grafeas.v1.AttestationNote.Hint} Hint instance
                     */
                    Hint.create = function create(properties) {
                        return new Hint(properties);
                    };
    
                    /**
                     * Encodes the specified Hint message. Does not implicitly {@link grafeas.v1.AttestationNote.Hint.verify|verify} messages.
                     * @function encode
                     * @memberof grafeas.v1.AttestationNote.Hint
                     * @static
                     * @param {grafeas.v1.AttestationNote.IHint} message Hint message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    Hint.encode = function encode(message, writer) {
                        if (!writer)
                            writer = $Writer.create();
                        if (message.humanReadableName != null && Object.hasOwnProperty.call(message, "humanReadableName"))
                            writer.uint32(/* id 1, wireType 2 =*/10).string(message.humanReadableName);
                        return writer;
                    };
    
                    /**
                     * Encodes the specified Hint message, length delimited. Does not implicitly {@link grafeas.v1.AttestationNote.Hint.verify|verify} messages.
                     * @function encodeDelimited
                     * @memberof grafeas.v1.AttestationNote.Hint
                     * @static
                     * @param {grafeas.v1.AttestationNote.IHint} message Hint message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    Hint.encodeDelimited = function encodeDelimited(message, writer) {
                        return this.encode(message, writer).ldelim();
                    };
    
                    /**
                     * Decodes a Hint message from the specified reader or buffer.
                     * @function decode
                     * @memberof grafeas.v1.AttestationNote.Hint
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @param {number} [length] Message length if known beforehand
                     * @returns {grafeas.v1.AttestationNote.Hint} Hint
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    Hint.decode = function decode(reader, length) {
                        if (!(reader instanceof $Reader))
                            reader = $Reader.create(reader);
                        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.grafeas.v1.AttestationNote.Hint();
                        while (reader.pos < end) {
                            var tag = reader.uint32();
                            switch (tag >>> 3) {
                            case 1: {
                                    message.humanReadableName = reader.string();
                                    break;
                                }
                            default:
                                reader.skipType(tag & 7);
                                break;
                            }
                        }
                        return message;
                    };
    
                    /**
                     * Decodes a Hint message from the specified reader or buffer, length delimited.
                     * @function decodeDelimited
                     * @memberof grafeas.v1.AttestationNote.Hint
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @returns {grafeas.v1.AttestationNote.Hint} Hint
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    Hint.decodeDelimited = function decodeDelimited(reader) {
                        if (!(reader instanceof $Reader))
                            reader = new $Reader(reader);
                        return this.decode(reader, reader.uint32());
                    };
    
                    /**
                     * Verifies a Hint message.
                     * @function verify
                     * @memberof grafeas.v1.AttestationNote.Hint
                     * @static
                     * @param {Object.<string,*>} message Plain object to verify
                     * @returns {string|null} `null` if valid, otherwise the reason why it is not
                     */
                    Hint.verify = function verify(message) {
                        if (typeof message !== "object" || message === null)
                            return "object expected";
                        if (message.humanReadableName != null && message.hasOwnProperty("humanReadableName"))
                            if (!$util.isString(message.humanReadableName))
                                return "humanReadableName: string expected";
                        return null;
                    };
    
                    /**
                     * Creates a Hint message from a plain object. Also converts values to their respective internal types.
                     * @function fromObject
                     * @memberof grafeas.v1.AttestationNote.Hint
                     * @static
                     * @param {Object.<string,*>} object Plain object
                     * @returns {grafeas.v1.AttestationNote.Hint} Hint
                     */
                    Hint.fromObject = function fromObject(object) {
                        if (object instanceof $root.grafeas.v1.AttestationNote.Hint)
                            return object;
                        var message = new $root.grafeas.v1.AttestationNote.Hint();
                        if (object.humanReadableName != null)
                            message.humanReadableName = String(object.humanReadableName);
                        return message;
                    };
    
                    /**
                     * Creates a plain object from a Hint message. Also converts values to other types if specified.
                     * @function toObject
                     * @memberof grafeas.v1.AttestationNote.Hint
                     * @static
                     * @param {grafeas.v1.AttestationNote.Hint} message Hint
                     * @param {$protobuf.IConversionOptions} [options] Conversion options
                     * @returns {Object.<string,*>} Plain object
                     */
                    Hint.toObject = function toObject(message, options) {
                        if (!options)
                            options = {};
                        var object = {};
                        if (options.defaults)
                            object.humanReadableName = "";
                        if (message.humanReadableName != null && message.hasOwnProperty("humanReadableName"))
                            object.humanReadableName = message.humanReadableName;
                        return object;
                    };
    
                    /**
                     * Converts this Hint to JSON.
                     * @function toJSON
                     * @memberof grafeas.v1.AttestationNote.Hint
                     * @instance
                     * @returns {Object.<string,*>} JSON object
                     */
                    Hint.prototype.toJSON = function toJSON() {
                        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                    };
    
                    /**
                     * Gets the default type url for Hint
                     * @function getTypeUrl
                     * @memberof grafeas.v1.AttestationNote.Hint
                     * @static
                     * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                     * @returns {string} The default type url
                     */
                    Hint.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                        if (typeUrlPrefix === undefined) {
                            typeUrlPrefix = "type.googleapis.com";
                        }
                        return typeUrlPrefix + "/grafeas.v1.AttestationNote.Hint";
                    };
    
                    return Hint;
                })();
    
                return AttestationNote;
            })();
    
            v1.Jwt = (function() {
    
                /**
                 * Properties of a Jwt.
                 * @memberof grafeas.v1
                 * @interface IJwt
                 * @property {string|null} [compactJwt] Jwt compactJwt
                 */
    
                /**
                 * Constructs a new Jwt.
                 * @memberof grafeas.v1
                 * @classdesc Represents a Jwt.
                 * @implements IJwt
                 * @constructor
                 * @param {grafeas.v1.IJwt=} [properties] Properties to set
                 */
                function Jwt(properties) {
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * Jwt compactJwt.
                 * @member {string} compactJwt
                 * @memberof grafeas.v1.Jwt
                 * @instance
                 */
                Jwt.prototype.compactJwt = "";
    
                /**
                 * Creates a new Jwt instance using the specified properties.
                 * @function create
                 * @memberof grafeas.v1.Jwt
                 * @static
                 * @param {grafeas.v1.IJwt=} [properties] Properties to set
                 * @returns {grafeas.v1.Jwt} Jwt instance
                 */
                Jwt.create = function create(properties) {
                    return new Jwt(properties);
                };
    
                /**
                 * Encodes the specified Jwt message. Does not implicitly {@link grafeas.v1.Jwt.verify|verify} messages.
                 * @function encode
                 * @memberof grafeas.v1.Jwt
                 * @static
                 * @param {grafeas.v1.IJwt} message Jwt message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                Jwt.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.compactJwt != null && Object.hasOwnProperty.call(message, "compactJwt"))
                        writer.uint32(/* id 1, wireType 2 =*/10).string(message.compactJwt);
                    return writer;
                };
    
                /**
                 * Encodes the specified Jwt message, length delimited. Does not implicitly {@link grafeas.v1.Jwt.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof grafeas.v1.Jwt
                 * @static
                 * @param {grafeas.v1.IJwt} message Jwt message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                Jwt.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a Jwt message from the specified reader or buffer.
                 * @function decode
                 * @memberof grafeas.v1.Jwt
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {grafeas.v1.Jwt} Jwt
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                Jwt.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.grafeas.v1.Jwt();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1: {
                                message.compactJwt = reader.string();
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a Jwt message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof grafeas.v1.Jwt
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {grafeas.v1.Jwt} Jwt
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                Jwt.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a Jwt message.
                 * @function verify
                 * @memberof grafeas.v1.Jwt
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                Jwt.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.compactJwt != null && message.hasOwnProperty("compactJwt"))
                        if (!$util.isString(message.compactJwt))
                            return "compactJwt: string expected";
                    return null;
                };
    
                /**
                 * Creates a Jwt message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof grafeas.v1.Jwt
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {grafeas.v1.Jwt} Jwt
                 */
                Jwt.fromObject = function fromObject(object) {
                    if (object instanceof $root.grafeas.v1.Jwt)
                        return object;
                    var message = new $root.grafeas.v1.Jwt();
                    if (object.compactJwt != null)
                        message.compactJwt = String(object.compactJwt);
                    return message;
                };
    
                /**
                 * Creates a plain object from a Jwt message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof grafeas.v1.Jwt
                 * @static
                 * @param {grafeas.v1.Jwt} message Jwt
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                Jwt.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.defaults)
                        object.compactJwt = "";
                    if (message.compactJwt != null && message.hasOwnProperty("compactJwt"))
                        object.compactJwt = message.compactJwt;
                    return object;
                };
    
                /**
                 * Converts this Jwt to JSON.
                 * @function toJSON
                 * @memberof grafeas.v1.Jwt
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                Jwt.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for Jwt
                 * @function getTypeUrl
                 * @memberof grafeas.v1.Jwt
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                Jwt.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/grafeas.v1.Jwt";
                };
    
                return Jwt;
            })();
    
            v1.AttestationOccurrence = (function() {
    
                /**
                 * Properties of an AttestationOccurrence.
                 * @memberof grafeas.v1
                 * @interface IAttestationOccurrence
                 * @property {Uint8Array|null} [serializedPayload] AttestationOccurrence serializedPayload
                 * @property {Array.<grafeas.v1.ISignature>|null} [signatures] AttestationOccurrence signatures
                 * @property {Array.<grafeas.v1.IJwt>|null} [jwts] AttestationOccurrence jwts
                 */
    
                /**
                 * Constructs a new AttestationOccurrence.
                 * @memberof grafeas.v1
                 * @classdesc Represents an AttestationOccurrence.
                 * @implements IAttestationOccurrence
                 * @constructor
                 * @param {grafeas.v1.IAttestationOccurrence=} [properties] Properties to set
                 */
                function AttestationOccurrence(properties) {
                    this.signatures = [];
                    this.jwts = [];
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * AttestationOccurrence serializedPayload.
                 * @member {Uint8Array} serializedPayload
                 * @memberof grafeas.v1.AttestationOccurrence
                 * @instance
                 */
                AttestationOccurrence.prototype.serializedPayload = $util.newBuffer([]);
    
                /**
                 * AttestationOccurrence signatures.
                 * @member {Array.<grafeas.v1.ISignature>} signatures
                 * @memberof grafeas.v1.AttestationOccurrence
                 * @instance
                 */
                AttestationOccurrence.prototype.signatures = $util.emptyArray;
    
                /**
                 * AttestationOccurrence jwts.
                 * @member {Array.<grafeas.v1.IJwt>} jwts
                 * @memberof grafeas.v1.AttestationOccurrence
                 * @instance
                 */
                AttestationOccurrence.prototype.jwts = $util.emptyArray;
    
                /**
                 * Creates a new AttestationOccurrence instance using the specified properties.
                 * @function create
                 * @memberof grafeas.v1.AttestationOccurrence
                 * @static
                 * @param {grafeas.v1.IAttestationOccurrence=} [properties] Properties to set
                 * @returns {grafeas.v1.AttestationOccurrence} AttestationOccurrence instance
                 */
                AttestationOccurrence.create = function create(properties) {
                    return new AttestationOccurrence(properties);
                };
    
                /**
                 * Encodes the specified AttestationOccurrence message. Does not implicitly {@link grafeas.v1.AttestationOccurrence.verify|verify} messages.
                 * @function encode
                 * @memberof grafeas.v1.AttestationOccurrence
                 * @static
                 * @param {grafeas.v1.IAttestationOccurrence} message AttestationOccurrence message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                AttestationOccurrence.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.serializedPayload != null && Object.hasOwnProperty.call(message, "serializedPayload"))
                        writer.uint32(/* id 1, wireType 2 =*/10).bytes(message.serializedPayload);
                    if (message.signatures != null && message.signatures.length)
                        for (var i = 0; i < message.signatures.length; ++i)
                            $root.grafeas.v1.Signature.encode(message.signatures[i], writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                    if (message.jwts != null && message.jwts.length)
                        for (var i = 0; i < message.jwts.length; ++i)
                            $root.grafeas.v1.Jwt.encode(message.jwts[i], writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();
                    return writer;
                };
    
                /**
                 * Encodes the specified AttestationOccurrence message, length delimited. Does not implicitly {@link grafeas.v1.AttestationOccurrence.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof grafeas.v1.AttestationOccurrence
                 * @static
                 * @param {grafeas.v1.IAttestationOccurrence} message AttestationOccurrence message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                AttestationOccurrence.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes an AttestationOccurrence message from the specified reader or buffer.
                 * @function decode
                 * @memberof grafeas.v1.AttestationOccurrence
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {grafeas.v1.AttestationOccurrence} AttestationOccurrence
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                AttestationOccurrence.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.grafeas.v1.AttestationOccurrence();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1: {
                                message.serializedPayload = reader.bytes();
                                break;
                            }
                        case 2: {
                                if (!(message.signatures && message.signatures.length))
                                    message.signatures = [];
                                message.signatures.push($root.grafeas.v1.Signature.decode(reader, reader.uint32()));
                                break;
                            }
                        case 3: {
                                if (!(message.jwts && message.jwts.length))
                                    message.jwts = [];
                                message.jwts.push($root.grafeas.v1.Jwt.decode(reader, reader.uint32()));
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes an AttestationOccurrence message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof grafeas.v1.AttestationOccurrence
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {grafeas.v1.AttestationOccurrence} AttestationOccurrence
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                AttestationOccurrence.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies an AttestationOccurrence message.
                 * @function verify
                 * @memberof grafeas.v1.AttestationOccurrence
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                AttestationOccurrence.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.serializedPayload != null && message.hasOwnProperty("serializedPayload"))
                        if (!(message.serializedPayload && typeof message.serializedPayload.length === "number" || $util.isString(message.serializedPayload)))
                            return "serializedPayload: buffer expected";
                    if (message.signatures != null && message.hasOwnProperty("signatures")) {
                        if (!Array.isArray(message.signatures))
                            return "signatures: array expected";
                        for (var i = 0; i < message.signatures.length; ++i) {
                            var error = $root.grafeas.v1.Signature.verify(message.signatures[i]);
                            if (error)
                                return "signatures." + error;
                        }
                    }
                    if (message.jwts != null && message.hasOwnProperty("jwts")) {
                        if (!Array.isArray(message.jwts))
                            return "jwts: array expected";
                        for (var i = 0; i < message.jwts.length; ++i) {
                            var error = $root.grafeas.v1.Jwt.verify(message.jwts[i]);
                            if (error)
                                return "jwts." + error;
                        }
                    }
                    return null;
                };
    
                /**
                 * Creates an AttestationOccurrence message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof grafeas.v1.AttestationOccurrence
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {grafeas.v1.AttestationOccurrence} AttestationOccurrence
                 */
                AttestationOccurrence.fromObject = function fromObject(object) {
                    if (object instanceof $root.grafeas.v1.AttestationOccurrence)
                        return object;
                    var message = new $root.grafeas.v1.AttestationOccurrence();
                    if (object.serializedPayload != null)
                        if (typeof object.serializedPayload === "string")
                            $util.base64.decode(object.serializedPayload, message.serializedPayload = $util.newBuffer($util.base64.length(object.serializedPayload)), 0);
                        else if (object.serializedPayload.length >= 0)
                            message.serializedPayload = object.serializedPayload;
                    if (object.signatures) {
                        if (!Array.isArray(object.signatures))
                            throw TypeError(".grafeas.v1.AttestationOccurrence.signatures: array expected");
                        message.signatures = [];
                        for (var i = 0; i < object.signatures.length; ++i) {
                            if (typeof object.signatures[i] !== "object")
                                throw TypeError(".grafeas.v1.AttestationOccurrence.signatures: object expected");
                            message.signatures[i] = $root.grafeas.v1.Signature.fromObject(object.signatures[i]);
                        }
                    }
                    if (object.jwts) {
                        if (!Array.isArray(object.jwts))
                            throw TypeError(".grafeas.v1.AttestationOccurrence.jwts: array expected");
                        message.jwts = [];
                        for (var i = 0; i < object.jwts.length; ++i) {
                            if (typeof object.jwts[i] !== "object")
                                throw TypeError(".grafeas.v1.AttestationOccurrence.jwts: object expected");
                            message.jwts[i] = $root.grafeas.v1.Jwt.fromObject(object.jwts[i]);
                        }
                    }
                    return message;
                };
    
                /**
                 * Creates a plain object from an AttestationOccurrence message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof grafeas.v1.AttestationOccurrence
                 * @static
                 * @param {grafeas.v1.AttestationOccurrence} message AttestationOccurrence
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                AttestationOccurrence.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.arrays || options.defaults) {
                        object.signatures = [];
                        object.jwts = [];
                    }
                    if (options.defaults)
                        if (options.bytes === String)
                            object.serializedPayload = "";
                        else {
                            object.serializedPayload = [];
                            if (options.bytes !== Array)
                                object.serializedPayload = $util.newBuffer(object.serializedPayload);
                        }
                    if (message.serializedPayload != null && message.hasOwnProperty("serializedPayload"))
                        object.serializedPayload = options.bytes === String ? $util.base64.encode(message.serializedPayload, 0, message.serializedPayload.length) : options.bytes === Array ? Array.prototype.slice.call(message.serializedPayload) : message.serializedPayload;
                    if (message.signatures && message.signatures.length) {
                        object.signatures = [];
                        for (var j = 0; j < message.signatures.length; ++j)
                            object.signatures[j] = $root.grafeas.v1.Signature.toObject(message.signatures[j], options);
                    }
                    if (message.jwts && message.jwts.length) {
                        object.jwts = [];
                        for (var j = 0; j < message.jwts.length; ++j)
                            object.jwts[j] = $root.grafeas.v1.Jwt.toObject(message.jwts[j], options);
                    }
                    return object;
                };
    
                /**
                 * Converts this AttestationOccurrence to JSON.
                 * @function toJSON
                 * @memberof grafeas.v1.AttestationOccurrence
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                AttestationOccurrence.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for AttestationOccurrence
                 * @function getTypeUrl
                 * @memberof grafeas.v1.AttestationOccurrence
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                AttestationOccurrence.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/grafeas.v1.AttestationOccurrence";
                };
    
                return AttestationOccurrence;
            })();
    
            /**
             * NoteKind enum.
             * @name grafeas.v1.NoteKind
             * @enum {number}
             * @property {number} NOTE_KIND_UNSPECIFIED=0 NOTE_KIND_UNSPECIFIED value
             * @property {number} VULNERABILITY=1 VULNERABILITY value
             * @property {number} BUILD=2 BUILD value
             * @property {number} IMAGE=3 IMAGE value
             * @property {number} PACKAGE=4 PACKAGE value
             * @property {number} DEPLOYMENT=5 DEPLOYMENT value
             * @property {number} DISCOVERY=6 DISCOVERY value
             * @property {number} ATTESTATION=7 ATTESTATION value
             * @property {number} UPGRADE=8 UPGRADE value
             * @property {number} COMPLIANCE=9 COMPLIANCE value
             * @property {number} DSSE_ATTESTATION=10 DSSE_ATTESTATION value
             */
            v1.NoteKind = (function() {
                var valuesById = {}, values = Object.create(valuesById);
                values[valuesById[0] = "NOTE_KIND_UNSPECIFIED"] = 0;
                values[valuesById[1] = "VULNERABILITY"] = 1;
                values[valuesById[2] = "BUILD"] = 2;
                values[valuesById[3] = "IMAGE"] = 3;
                values[valuesById[4] = "PACKAGE"] = 4;
                values[valuesById[5] = "DEPLOYMENT"] = 5;
                values[valuesById[6] = "DISCOVERY"] = 6;
                values[valuesById[7] = "ATTESTATION"] = 7;
                values[valuesById[8] = "UPGRADE"] = 8;
                values[valuesById[9] = "COMPLIANCE"] = 9;
                values[valuesById[10] = "DSSE_ATTESTATION"] = 10;
                return values;
            })();
    
            v1.RelatedUrl = (function() {
    
                /**
                 * Properties of a RelatedUrl.
                 * @memberof grafeas.v1
                 * @interface IRelatedUrl
                 * @property {string|null} [url] RelatedUrl url
                 * @property {string|null} [label] RelatedUrl label
                 */
    
                /**
                 * Constructs a new RelatedUrl.
                 * @memberof grafeas.v1
                 * @classdesc Represents a RelatedUrl.
                 * @implements IRelatedUrl
                 * @constructor
                 * @param {grafeas.v1.IRelatedUrl=} [properties] Properties to set
                 */
                function RelatedUrl(properties) {
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * RelatedUrl url.
                 * @member {string} url
                 * @memberof grafeas.v1.RelatedUrl
                 * @instance
                 */
                RelatedUrl.prototype.url = "";
    
                /**
                 * RelatedUrl label.
                 * @member {string} label
                 * @memberof grafeas.v1.RelatedUrl
                 * @instance
                 */
                RelatedUrl.prototype.label = "";
    
                /**
                 * Creates a new RelatedUrl instance using the specified properties.
                 * @function create
                 * @memberof grafeas.v1.RelatedUrl
                 * @static
                 * @param {grafeas.v1.IRelatedUrl=} [properties] Properties to set
                 * @returns {grafeas.v1.RelatedUrl} RelatedUrl instance
                 */
                RelatedUrl.create = function create(properties) {
                    return new RelatedUrl(properties);
                };
    
                /**
                 * Encodes the specified RelatedUrl message. Does not implicitly {@link grafeas.v1.RelatedUrl.verify|verify} messages.
                 * @function encode
                 * @memberof grafeas.v1.RelatedUrl
                 * @static
                 * @param {grafeas.v1.IRelatedUrl} message RelatedUrl message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                RelatedUrl.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.url != null && Object.hasOwnProperty.call(message, "url"))
                        writer.uint32(/* id 1, wireType 2 =*/10).string(message.url);
                    if (message.label != null && Object.hasOwnProperty.call(message, "label"))
                        writer.uint32(/* id 2, wireType 2 =*/18).string(message.label);
                    return writer;
                };
    
                /**
                 * Encodes the specified RelatedUrl message, length delimited. Does not implicitly {@link grafeas.v1.RelatedUrl.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof grafeas.v1.RelatedUrl
                 * @static
                 * @param {grafeas.v1.IRelatedUrl} message RelatedUrl message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                RelatedUrl.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a RelatedUrl message from the specified reader or buffer.
                 * @function decode
                 * @memberof grafeas.v1.RelatedUrl
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {grafeas.v1.RelatedUrl} RelatedUrl
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                RelatedUrl.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.grafeas.v1.RelatedUrl();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1: {
                                message.url = reader.string();
                                break;
                            }
                        case 2: {
                                message.label = reader.string();
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a RelatedUrl message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof grafeas.v1.RelatedUrl
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {grafeas.v1.RelatedUrl} RelatedUrl
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                RelatedUrl.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a RelatedUrl message.
                 * @function verify
                 * @memberof grafeas.v1.RelatedUrl
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                RelatedUrl.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.url != null && message.hasOwnProperty("url"))
                        if (!$util.isString(message.url))
                            return "url: string expected";
                    if (message.label != null && message.hasOwnProperty("label"))
                        if (!$util.isString(message.label))
                            return "label: string expected";
                    return null;
                };
    
                /**
                 * Creates a RelatedUrl message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof grafeas.v1.RelatedUrl
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {grafeas.v1.RelatedUrl} RelatedUrl
                 */
                RelatedUrl.fromObject = function fromObject(object) {
                    if (object instanceof $root.grafeas.v1.RelatedUrl)
                        return object;
                    var message = new $root.grafeas.v1.RelatedUrl();
                    if (object.url != null)
                        message.url = String(object.url);
                    if (object.label != null)
                        message.label = String(object.label);
                    return message;
                };
    
                /**
                 * Creates a plain object from a RelatedUrl message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof grafeas.v1.RelatedUrl
                 * @static
                 * @param {grafeas.v1.RelatedUrl} message RelatedUrl
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                RelatedUrl.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.defaults) {
                        object.url = "";
                        object.label = "";
                    }
                    if (message.url != null && message.hasOwnProperty("url"))
                        object.url = message.url;
                    if (message.label != null && message.hasOwnProperty("label"))
                        object.label = message.label;
                    return object;
                };
    
                /**
                 * Converts this RelatedUrl to JSON.
                 * @function toJSON
                 * @memberof grafeas.v1.RelatedUrl
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                RelatedUrl.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for RelatedUrl
                 * @function getTypeUrl
                 * @memberof grafeas.v1.RelatedUrl
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                RelatedUrl.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/grafeas.v1.RelatedUrl";
                };
    
                return RelatedUrl;
            })();
    
            v1.Signature = (function() {
    
                /**
                 * Properties of a Signature.
                 * @memberof grafeas.v1
                 * @interface ISignature
                 * @property {Uint8Array|null} [signature] Signature signature
                 * @property {string|null} [publicKeyId] Signature publicKeyId
                 */
    
                /**
                 * Constructs a new Signature.
                 * @memberof grafeas.v1
                 * @classdesc Represents a Signature.
                 * @implements ISignature
                 * @constructor
                 * @param {grafeas.v1.ISignature=} [properties] Properties to set
                 */
                function Signature(properties) {
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * Signature signature.
                 * @member {Uint8Array} signature
                 * @memberof grafeas.v1.Signature
                 * @instance
                 */
                Signature.prototype.signature = $util.newBuffer([]);
    
                /**
                 * Signature publicKeyId.
                 * @member {string} publicKeyId
                 * @memberof grafeas.v1.Signature
                 * @instance
                 */
                Signature.prototype.publicKeyId = "";
    
                /**
                 * Creates a new Signature instance using the specified properties.
                 * @function create
                 * @memberof grafeas.v1.Signature
                 * @static
                 * @param {grafeas.v1.ISignature=} [properties] Properties to set
                 * @returns {grafeas.v1.Signature} Signature instance
                 */
                Signature.create = function create(properties) {
                    return new Signature(properties);
                };
    
                /**
                 * Encodes the specified Signature message. Does not implicitly {@link grafeas.v1.Signature.verify|verify} messages.
                 * @function encode
                 * @memberof grafeas.v1.Signature
                 * @static
                 * @param {grafeas.v1.ISignature} message Signature message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                Signature.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.signature != null && Object.hasOwnProperty.call(message, "signature"))
                        writer.uint32(/* id 1, wireType 2 =*/10).bytes(message.signature);
                    if (message.publicKeyId != null && Object.hasOwnProperty.call(message, "publicKeyId"))
                        writer.uint32(/* id 2, wireType 2 =*/18).string(message.publicKeyId);
                    return writer;
                };
    
                /**
                 * Encodes the specified Signature message, length delimited. Does not implicitly {@link grafeas.v1.Signature.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof grafeas.v1.Signature
                 * @static
                 * @param {grafeas.v1.ISignature} message Signature message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                Signature.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a Signature message from the specified reader or buffer.
                 * @function decode
                 * @memberof grafeas.v1.Signature
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {grafeas.v1.Signature} Signature
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                Signature.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.grafeas.v1.Signature();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1: {
                                message.signature = reader.bytes();
                                break;
                            }
                        case 2: {
                                message.publicKeyId = reader.string();
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a Signature message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof grafeas.v1.Signature
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {grafeas.v1.Signature} Signature
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                Signature.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a Signature message.
                 * @function verify
                 * @memberof grafeas.v1.Signature
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                Signature.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.signature != null && message.hasOwnProperty("signature"))
                        if (!(message.signature && typeof message.signature.length === "number" || $util.isString(message.signature)))
                            return "signature: buffer expected";
                    if (message.publicKeyId != null && message.hasOwnProperty("publicKeyId"))
                        if (!$util.isString(message.publicKeyId))
                            return "publicKeyId: string expected";
                    return null;
                };
    
                /**
                 * Creates a Signature message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof grafeas.v1.Signature
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {grafeas.v1.Signature} Signature
                 */
                Signature.fromObject = function fromObject(object) {
                    if (object instanceof $root.grafeas.v1.Signature)
                        return object;
                    var message = new $root.grafeas.v1.Signature();
                    if (object.signature != null)
                        if (typeof object.signature === "string")
                            $util.base64.decode(object.signature, message.signature = $util.newBuffer($util.base64.length(object.signature)), 0);
                        else if (object.signature.length >= 0)
                            message.signature = object.signature;
                    if (object.publicKeyId != null)
                        message.publicKeyId = String(object.publicKeyId);
                    return message;
                };
    
                /**
                 * Creates a plain object from a Signature message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof grafeas.v1.Signature
                 * @static
                 * @param {grafeas.v1.Signature} message Signature
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                Signature.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.defaults) {
                        if (options.bytes === String)
                            object.signature = "";
                        else {
                            object.signature = [];
                            if (options.bytes !== Array)
                                object.signature = $util.newBuffer(object.signature);
                        }
                        object.publicKeyId = "";
                    }
                    if (message.signature != null && message.hasOwnProperty("signature"))
                        object.signature = options.bytes === String ? $util.base64.encode(message.signature, 0, message.signature.length) : options.bytes === Array ? Array.prototype.slice.call(message.signature) : message.signature;
                    if (message.publicKeyId != null && message.hasOwnProperty("publicKeyId"))
                        object.publicKeyId = message.publicKeyId;
                    return object;
                };
    
                /**
                 * Converts this Signature to JSON.
                 * @function toJSON
                 * @memberof grafeas.v1.Signature
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                Signature.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for Signature
                 * @function getTypeUrl
                 * @memberof grafeas.v1.Signature
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                Signature.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/grafeas.v1.Signature";
                };
    
                return Signature;
            })();
    
            v1.Envelope = (function() {
    
                /**
                 * Properties of an Envelope.
                 * @memberof grafeas.v1
                 * @interface IEnvelope
                 * @property {Uint8Array|null} [payload] Envelope payload
                 * @property {string|null} [payloadType] Envelope payloadType
                 * @property {Array.<grafeas.v1.IEnvelopeSignature>|null} [signatures] Envelope signatures
                 */
    
                /**
                 * Constructs a new Envelope.
                 * @memberof grafeas.v1
                 * @classdesc Represents an Envelope.
                 * @implements IEnvelope
                 * @constructor
                 * @param {grafeas.v1.IEnvelope=} [properties] Properties to set
                 */
                function Envelope(properties) {
                    this.signatures = [];
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * Envelope payload.
                 * @member {Uint8Array} payload
                 * @memberof grafeas.v1.Envelope
                 * @instance
                 */
                Envelope.prototype.payload = $util.newBuffer([]);
    
                /**
                 * Envelope payloadType.
                 * @member {string} payloadType
                 * @memberof grafeas.v1.Envelope
                 * @instance
                 */
                Envelope.prototype.payloadType = "";
    
                /**
                 * Envelope signatures.
                 * @member {Array.<grafeas.v1.IEnvelopeSignature>} signatures
                 * @memberof grafeas.v1.Envelope
                 * @instance
                 */
                Envelope.prototype.signatures = $util.emptyArray;
    
                /**
                 * Creates a new Envelope instance using the specified properties.
                 * @function create
                 * @memberof grafeas.v1.Envelope
                 * @static
                 * @param {grafeas.v1.IEnvelope=} [properties] Properties to set
                 * @returns {grafeas.v1.Envelope} Envelope instance
                 */
                Envelope.create = function create(properties) {
                    return new Envelope(properties);
                };
    
                /**
                 * Encodes the specified Envelope message. Does not implicitly {@link grafeas.v1.Envelope.verify|verify} messages.
                 * @function encode
                 * @memberof grafeas.v1.Envelope
                 * @static
                 * @param {grafeas.v1.IEnvelope} message Envelope message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                Envelope.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.payload != null && Object.hasOwnProperty.call(message, "payload"))
                        writer.uint32(/* id 1, wireType 2 =*/10).bytes(message.payload);
                    if (message.payloadType != null && Object.hasOwnProperty.call(message, "payloadType"))
                        writer.uint32(/* id 2, wireType 2 =*/18).string(message.payloadType);
                    if (message.signatures != null && message.signatures.length)
                        for (var i = 0; i < message.signatures.length; ++i)
                            $root.grafeas.v1.EnvelopeSignature.encode(message.signatures[i], writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();
                    return writer;
                };
    
                /**
                 * Encodes the specified Envelope message, length delimited. Does not implicitly {@link grafeas.v1.Envelope.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof grafeas.v1.Envelope
                 * @static
                 * @param {grafeas.v1.IEnvelope} message Envelope message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                Envelope.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes an Envelope message from the specified reader or buffer.
                 * @function decode
                 * @memberof grafeas.v1.Envelope
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {grafeas.v1.Envelope} Envelope
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                Envelope.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.grafeas.v1.Envelope();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1: {
                                message.payload = reader.bytes();
                                break;
                            }
                        case 2: {
                                message.payloadType = reader.string();
                                break;
                            }
                        case 3: {
                                if (!(message.signatures && message.signatures.length))
                                    message.signatures = [];
                                message.signatures.push($root.grafeas.v1.EnvelopeSignature.decode(reader, reader.uint32()));
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes an Envelope message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof grafeas.v1.Envelope
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {grafeas.v1.Envelope} Envelope
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                Envelope.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies an Envelope message.
                 * @function verify
                 * @memberof grafeas.v1.Envelope
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                Envelope.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.payload != null && message.hasOwnProperty("payload"))
                        if (!(message.payload && typeof message.payload.length === "number" || $util.isString(message.payload)))
                            return "payload: buffer expected";
                    if (message.payloadType != null && message.hasOwnProperty("payloadType"))
                        if (!$util.isString(message.payloadType))
                            return "payloadType: string expected";
                    if (message.signatures != null && message.hasOwnProperty("signatures")) {
                        if (!Array.isArray(message.signatures))
                            return "signatures: array expected";
                        for (var i = 0; i < message.signatures.length; ++i) {
                            var error = $root.grafeas.v1.EnvelopeSignature.verify(message.signatures[i]);
                            if (error)
                                return "signatures." + error;
                        }
                    }
                    return null;
                };
    
                /**
                 * Creates an Envelope message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof grafeas.v1.Envelope
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {grafeas.v1.Envelope} Envelope
                 */
                Envelope.fromObject = function fromObject(object) {
                    if (object instanceof $root.grafeas.v1.Envelope)
                        return object;
                    var message = new $root.grafeas.v1.Envelope();
                    if (object.payload != null)
                        if (typeof object.payload === "string")
                            $util.base64.decode(object.payload, message.payload = $util.newBuffer($util.base64.length(object.payload)), 0);
                        else if (object.payload.length >= 0)
                            message.payload = object.payload;
                    if (object.payloadType != null)
                        message.payloadType = String(object.payloadType);
                    if (object.signatures) {
                        if (!Array.isArray(object.signatures))
                            throw TypeError(".grafeas.v1.Envelope.signatures: array expected");
                        message.signatures = [];
                        for (var i = 0; i < object.signatures.length; ++i) {
                            if (typeof object.signatures[i] !== "object")
                                throw TypeError(".grafeas.v1.Envelope.signatures: object expected");
                            message.signatures[i] = $root.grafeas.v1.EnvelopeSignature.fromObject(object.signatures[i]);
                        }
                    }
                    return message;
                };
    
                /**
                 * Creates a plain object from an Envelope message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof grafeas.v1.Envelope
                 * @static
                 * @param {grafeas.v1.Envelope} message Envelope
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                Envelope.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.arrays || options.defaults)
                        object.signatures = [];
                    if (options.defaults) {
                        if (options.bytes === String)
                            object.payload = "";
                        else {
                            object.payload = [];
                            if (options.bytes !== Array)
                                object.payload = $util.newBuffer(object.payload);
                        }
                        object.payloadType = "";
                    }
                    if (message.payload != null && message.hasOwnProperty("payload"))
                        object.payload = options.bytes === String ? $util.base64.encode(message.payload, 0, message.payload.length) : options.bytes === Array ? Array.prototype.slice.call(message.payload) : message.payload;
                    if (message.payloadType != null && message.hasOwnProperty("payloadType"))
                        object.payloadType = message.payloadType;
                    if (message.signatures && message.signatures.length) {
                        object.signatures = [];
                        for (var j = 0; j < message.signatures.length; ++j)
                            object.signatures[j] = $root.grafeas.v1.EnvelopeSignature.toObject(message.signatures[j], options);
                    }
                    return object;
                };
    
                /**
                 * Converts this Envelope to JSON.
                 * @function toJSON
                 * @memberof grafeas.v1.Envelope
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                Envelope.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for Envelope
                 * @function getTypeUrl
                 * @memberof grafeas.v1.Envelope
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                Envelope.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/grafeas.v1.Envelope";
                };
    
                return Envelope;
            })();
    
            v1.EnvelopeSignature = (function() {
    
                /**
                 * Properties of an EnvelopeSignature.
                 * @memberof grafeas.v1
                 * @interface IEnvelopeSignature
                 * @property {Uint8Array|null} [sig] EnvelopeSignature sig
                 * @property {string|null} [keyid] EnvelopeSignature keyid
                 */
    
                /**
                 * Constructs a new EnvelopeSignature.
                 * @memberof grafeas.v1
                 * @classdesc Represents an EnvelopeSignature.
                 * @implements IEnvelopeSignature
                 * @constructor
                 * @param {grafeas.v1.IEnvelopeSignature=} [properties] Properties to set
                 */
                function EnvelopeSignature(properties) {
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * EnvelopeSignature sig.
                 * @member {Uint8Array} sig
                 * @memberof grafeas.v1.EnvelopeSignature
                 * @instance
                 */
                EnvelopeSignature.prototype.sig = $util.newBuffer([]);
    
                /**
                 * EnvelopeSignature keyid.
                 * @member {string} keyid
                 * @memberof grafeas.v1.EnvelopeSignature
                 * @instance
                 */
                EnvelopeSignature.prototype.keyid = "";
    
                /**
                 * Creates a new EnvelopeSignature instance using the specified properties.
                 * @function create
                 * @memberof grafeas.v1.EnvelopeSignature
                 * @static
                 * @param {grafeas.v1.IEnvelopeSignature=} [properties] Properties to set
                 * @returns {grafeas.v1.EnvelopeSignature} EnvelopeSignature instance
                 */
                EnvelopeSignature.create = function create(properties) {
                    return new EnvelopeSignature(properties);
                };
    
                /**
                 * Encodes the specified EnvelopeSignature message. Does not implicitly {@link grafeas.v1.EnvelopeSignature.verify|verify} messages.
                 * @function encode
                 * @memberof grafeas.v1.EnvelopeSignature
                 * @static
                 * @param {grafeas.v1.IEnvelopeSignature} message EnvelopeSignature message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                EnvelopeSignature.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.sig != null && Object.hasOwnProperty.call(message, "sig"))
                        writer.uint32(/* id 1, wireType 2 =*/10).bytes(message.sig);
                    if (message.keyid != null && Object.hasOwnProperty.call(message, "keyid"))
                        writer.uint32(/* id 2, wireType 2 =*/18).string(message.keyid);
                    return writer;
                };
    
                /**
                 * Encodes the specified EnvelopeSignature message, length delimited. Does not implicitly {@link grafeas.v1.EnvelopeSignature.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof grafeas.v1.EnvelopeSignature
                 * @static
                 * @param {grafeas.v1.IEnvelopeSignature} message EnvelopeSignature message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                EnvelopeSignature.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes an EnvelopeSignature message from the specified reader or buffer.
                 * @function decode
                 * @memberof grafeas.v1.EnvelopeSignature
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {grafeas.v1.EnvelopeSignature} EnvelopeSignature
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                EnvelopeSignature.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.grafeas.v1.EnvelopeSignature();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1: {
                                message.sig = reader.bytes();
                                break;
                            }
                        case 2: {
                                message.keyid = reader.string();
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes an EnvelopeSignature message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof grafeas.v1.EnvelopeSignature
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {grafeas.v1.EnvelopeSignature} EnvelopeSignature
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                EnvelopeSignature.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies an EnvelopeSignature message.
                 * @function verify
                 * @memberof grafeas.v1.EnvelopeSignature
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                EnvelopeSignature.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.sig != null && message.hasOwnProperty("sig"))
                        if (!(message.sig && typeof message.sig.length === "number" || $util.isString(message.sig)))
                            return "sig: buffer expected";
                    if (message.keyid != null && message.hasOwnProperty("keyid"))
                        if (!$util.isString(message.keyid))
                            return "keyid: string expected";
                    return null;
                };
    
                /**
                 * Creates an EnvelopeSignature message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof grafeas.v1.EnvelopeSignature
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {grafeas.v1.EnvelopeSignature} EnvelopeSignature
                 */
                EnvelopeSignature.fromObject = function fromObject(object) {
                    if (object instanceof $root.grafeas.v1.EnvelopeSignature)
                        return object;
                    var message = new $root.grafeas.v1.EnvelopeSignature();
                    if (object.sig != null)
                        if (typeof object.sig === "string")
                            $util.base64.decode(object.sig, message.sig = $util.newBuffer($util.base64.length(object.sig)), 0);
                        else if (object.sig.length >= 0)
                            message.sig = object.sig;
                    if (object.keyid != null)
                        message.keyid = String(object.keyid);
                    return message;
                };
    
                /**
                 * Creates a plain object from an EnvelopeSignature message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof grafeas.v1.EnvelopeSignature
                 * @static
                 * @param {grafeas.v1.EnvelopeSignature} message EnvelopeSignature
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                EnvelopeSignature.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.defaults) {
                        if (options.bytes === String)
                            object.sig = "";
                        else {
                            object.sig = [];
                            if (options.bytes !== Array)
                                object.sig = $util.newBuffer(object.sig);
                        }
                        object.keyid = "";
                    }
                    if (message.sig != null && message.hasOwnProperty("sig"))
                        object.sig = options.bytes === String ? $util.base64.encode(message.sig, 0, message.sig.length) : options.bytes === Array ? Array.prototype.slice.call(message.sig) : message.sig;
                    if (message.keyid != null && message.hasOwnProperty("keyid"))
                        object.keyid = message.keyid;
                    return object;
                };
    
                /**
                 * Converts this EnvelopeSignature to JSON.
                 * @function toJSON
                 * @memberof grafeas.v1.EnvelopeSignature
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                EnvelopeSignature.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for EnvelopeSignature
                 * @function getTypeUrl
                 * @memberof grafeas.v1.EnvelopeSignature
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                EnvelopeSignature.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/grafeas.v1.EnvelopeSignature";
                };
    
                return EnvelopeSignature;
            })();
    
            v1.FileLocation = (function() {
    
                /**
                 * Properties of a FileLocation.
                 * @memberof grafeas.v1
                 * @interface IFileLocation
                 * @property {string|null} [filePath] FileLocation filePath
                 */
    
                /**
                 * Constructs a new FileLocation.
                 * @memberof grafeas.v1
                 * @classdesc Represents a FileLocation.
                 * @implements IFileLocation
                 * @constructor
                 * @param {grafeas.v1.IFileLocation=} [properties] Properties to set
                 */
                function FileLocation(properties) {
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * FileLocation filePath.
                 * @member {string} filePath
                 * @memberof grafeas.v1.FileLocation
                 * @instance
                 */
                FileLocation.prototype.filePath = "";
    
                /**
                 * Creates a new FileLocation instance using the specified properties.
                 * @function create
                 * @memberof grafeas.v1.FileLocation
                 * @static
                 * @param {grafeas.v1.IFileLocation=} [properties] Properties to set
                 * @returns {grafeas.v1.FileLocation} FileLocation instance
                 */
                FileLocation.create = function create(properties) {
                    return new FileLocation(properties);
                };
    
                /**
                 * Encodes the specified FileLocation message. Does not implicitly {@link grafeas.v1.FileLocation.verify|verify} messages.
                 * @function encode
                 * @memberof grafeas.v1.FileLocation
                 * @static
                 * @param {grafeas.v1.IFileLocation} message FileLocation message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                FileLocation.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.filePath != null && Object.hasOwnProperty.call(message, "filePath"))
                        writer.uint32(/* id 1, wireType 2 =*/10).string(message.filePath);
                    return writer;
                };
    
                /**
                 * Encodes the specified FileLocation message, length delimited. Does not implicitly {@link grafeas.v1.FileLocation.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof grafeas.v1.FileLocation
                 * @static
                 * @param {grafeas.v1.IFileLocation} message FileLocation message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                FileLocation.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a FileLocation message from the specified reader or buffer.
                 * @function decode
                 * @memberof grafeas.v1.FileLocation
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {grafeas.v1.FileLocation} FileLocation
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                FileLocation.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.grafeas.v1.FileLocation();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1: {
                                message.filePath = reader.string();
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a FileLocation message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof grafeas.v1.FileLocation
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {grafeas.v1.FileLocation} FileLocation
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                FileLocation.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a FileLocation message.
                 * @function verify
                 * @memberof grafeas.v1.FileLocation
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                FileLocation.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.filePath != null && message.hasOwnProperty("filePath"))
                        if (!$util.isString(message.filePath))
                            return "filePath: string expected";
                    return null;
                };
    
                /**
                 * Creates a FileLocation message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof grafeas.v1.FileLocation
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {grafeas.v1.FileLocation} FileLocation
                 */
                FileLocation.fromObject = function fromObject(object) {
                    if (object instanceof $root.grafeas.v1.FileLocation)
                        return object;
                    var message = new $root.grafeas.v1.FileLocation();
                    if (object.filePath != null)
                        message.filePath = String(object.filePath);
                    return message;
                };
    
                /**
                 * Creates a plain object from a FileLocation message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof grafeas.v1.FileLocation
                 * @static
                 * @param {grafeas.v1.FileLocation} message FileLocation
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                FileLocation.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.defaults)
                        object.filePath = "";
                    if (message.filePath != null && message.hasOwnProperty("filePath"))
                        object.filePath = message.filePath;
                    return object;
                };
    
                /**
                 * Converts this FileLocation to JSON.
                 * @function toJSON
                 * @memberof grafeas.v1.FileLocation
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                FileLocation.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for FileLocation
                 * @function getTypeUrl
                 * @memberof grafeas.v1.FileLocation
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                FileLocation.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/grafeas.v1.FileLocation";
                };
    
                return FileLocation;
            })();
    
            v1.License = (function() {
    
                /**
                 * Properties of a License.
                 * @memberof grafeas.v1
                 * @interface ILicense
                 * @property {string|null} [expression] License expression
                 * @property {string|null} [comments] License comments
                 */
    
                /**
                 * Constructs a new License.
                 * @memberof grafeas.v1
                 * @classdesc Represents a License.
                 * @implements ILicense
                 * @constructor
                 * @param {grafeas.v1.ILicense=} [properties] Properties to set
                 */
                function License(properties) {
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * License expression.
                 * @member {string} expression
                 * @memberof grafeas.v1.License
                 * @instance
                 */
                License.prototype.expression = "";
    
                /**
                 * License comments.
                 * @member {string} comments
                 * @memberof grafeas.v1.License
                 * @instance
                 */
                License.prototype.comments = "";
    
                /**
                 * Creates a new License instance using the specified properties.
                 * @function create
                 * @memberof grafeas.v1.License
                 * @static
                 * @param {grafeas.v1.ILicense=} [properties] Properties to set
                 * @returns {grafeas.v1.License} License instance
                 */
                License.create = function create(properties) {
                    return new License(properties);
                };
    
                /**
                 * Encodes the specified License message. Does not implicitly {@link grafeas.v1.License.verify|verify} messages.
                 * @function encode
                 * @memberof grafeas.v1.License
                 * @static
                 * @param {grafeas.v1.ILicense} message License message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                License.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.expression != null && Object.hasOwnProperty.call(message, "expression"))
                        writer.uint32(/* id 1, wireType 2 =*/10).string(message.expression);
                    if (message.comments != null && Object.hasOwnProperty.call(message, "comments"))
                        writer.uint32(/* id 2, wireType 2 =*/18).string(message.comments);
                    return writer;
                };
    
                /**
                 * Encodes the specified License message, length delimited. Does not implicitly {@link grafeas.v1.License.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof grafeas.v1.License
                 * @static
                 * @param {grafeas.v1.ILicense} message License message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                License.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a License message from the specified reader or buffer.
                 * @function decode
                 * @memberof grafeas.v1.License
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {grafeas.v1.License} License
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                License.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.grafeas.v1.License();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1: {
                                message.expression = reader.string();
                                break;
                            }
                        case 2: {
                                message.comments = reader.string();
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a License message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof grafeas.v1.License
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {grafeas.v1.License} License
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                License.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a License message.
                 * @function verify
                 * @memberof grafeas.v1.License
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                License.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.expression != null && message.hasOwnProperty("expression"))
                        if (!$util.isString(message.expression))
                            return "expression: string expected";
                    if (message.comments != null && message.hasOwnProperty("comments"))
                        if (!$util.isString(message.comments))
                            return "comments: string expected";
                    return null;
                };
    
                /**
                 * Creates a License message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof grafeas.v1.License
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {grafeas.v1.License} License
                 */
                License.fromObject = function fromObject(object) {
                    if (object instanceof $root.grafeas.v1.License)
                        return object;
                    var message = new $root.grafeas.v1.License();
                    if (object.expression != null)
                        message.expression = String(object.expression);
                    if (object.comments != null)
                        message.comments = String(object.comments);
                    return message;
                };
    
                /**
                 * Creates a plain object from a License message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof grafeas.v1.License
                 * @static
                 * @param {grafeas.v1.License} message License
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                License.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.defaults) {
                        object.expression = "";
                        object.comments = "";
                    }
                    if (message.expression != null && message.hasOwnProperty("expression"))
                        object.expression = message.expression;
                    if (message.comments != null && message.hasOwnProperty("comments"))
                        object.comments = message.comments;
                    return object;
                };
    
                /**
                 * Converts this License to JSON.
                 * @function toJSON
                 * @memberof grafeas.v1.License
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                License.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for License
                 * @function getTypeUrl
                 * @memberof grafeas.v1.License
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                License.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/grafeas.v1.License";
                };
    
                return License;
            })();
    
            v1.Digest = (function() {
    
                /**
                 * Properties of a Digest.
                 * @memberof grafeas.v1
                 * @interface IDigest
                 * @property {string|null} [algo] Digest algo
                 * @property {Uint8Array|null} [digestBytes] Digest digestBytes
                 */
    
                /**
                 * Constructs a new Digest.
                 * @memberof grafeas.v1
                 * @classdesc Represents a Digest.
                 * @implements IDigest
                 * @constructor
                 * @param {grafeas.v1.IDigest=} [properties] Properties to set
                 */
                function Digest(properties) {
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * Digest algo.
                 * @member {string} algo
                 * @memberof grafeas.v1.Digest
                 * @instance
                 */
                Digest.prototype.algo = "";
    
                /**
                 * Digest digestBytes.
                 * @member {Uint8Array} digestBytes
                 * @memberof grafeas.v1.Digest
                 * @instance
                 */
                Digest.prototype.digestBytes = $util.newBuffer([]);
    
                /**
                 * Creates a new Digest instance using the specified properties.
                 * @function create
                 * @memberof grafeas.v1.Digest
                 * @static
                 * @param {grafeas.v1.IDigest=} [properties] Properties to set
                 * @returns {grafeas.v1.Digest} Digest instance
                 */
                Digest.create = function create(properties) {
                    return new Digest(properties);
                };
    
                /**
                 * Encodes the specified Digest message. Does not implicitly {@link grafeas.v1.Digest.verify|verify} messages.
                 * @function encode
                 * @memberof grafeas.v1.Digest
                 * @static
                 * @param {grafeas.v1.IDigest} message Digest message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                Digest.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.algo != null && Object.hasOwnProperty.call(message, "algo"))
                        writer.uint32(/* id 1, wireType 2 =*/10).string(message.algo);
                    if (message.digestBytes != null && Object.hasOwnProperty.call(message, "digestBytes"))
                        writer.uint32(/* id 2, wireType 2 =*/18).bytes(message.digestBytes);
                    return writer;
                };
    
                /**
                 * Encodes the specified Digest message, length delimited. Does not implicitly {@link grafeas.v1.Digest.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof grafeas.v1.Digest
                 * @static
                 * @param {grafeas.v1.IDigest} message Digest message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                Digest.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a Digest message from the specified reader or buffer.
                 * @function decode
                 * @memberof grafeas.v1.Digest
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {grafeas.v1.Digest} Digest
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                Digest.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.grafeas.v1.Digest();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1: {
                                message.algo = reader.string();
                                break;
                            }
                        case 2: {
                                message.digestBytes = reader.bytes();
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a Digest message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof grafeas.v1.Digest
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {grafeas.v1.Digest} Digest
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                Digest.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a Digest message.
                 * @function verify
                 * @memberof grafeas.v1.Digest
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                Digest.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.algo != null && message.hasOwnProperty("algo"))
                        if (!$util.isString(message.algo))
                            return "algo: string expected";
                    if (message.digestBytes != null && message.hasOwnProperty("digestBytes"))
                        if (!(message.digestBytes && typeof message.digestBytes.length === "number" || $util.isString(message.digestBytes)))
                            return "digestBytes: buffer expected";
                    return null;
                };
    
                /**
                 * Creates a Digest message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof grafeas.v1.Digest
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {grafeas.v1.Digest} Digest
                 */
                Digest.fromObject = function fromObject(object) {
                    if (object instanceof $root.grafeas.v1.Digest)
                        return object;
                    var message = new $root.grafeas.v1.Digest();
                    if (object.algo != null)
                        message.algo = String(object.algo);
                    if (object.digestBytes != null)
                        if (typeof object.digestBytes === "string")
                            $util.base64.decode(object.digestBytes, message.digestBytes = $util.newBuffer($util.base64.length(object.digestBytes)), 0);
                        else if (object.digestBytes.length >= 0)
                            message.digestBytes = object.digestBytes;
                    return message;
                };
    
                /**
                 * Creates a plain object from a Digest message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof grafeas.v1.Digest
                 * @static
                 * @param {grafeas.v1.Digest} message Digest
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                Digest.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.defaults) {
                        object.algo = "";
                        if (options.bytes === String)
                            object.digestBytes = "";
                        else {
                            object.digestBytes = [];
                            if (options.bytes !== Array)
                                object.digestBytes = $util.newBuffer(object.digestBytes);
                        }
                    }
                    if (message.algo != null && message.hasOwnProperty("algo"))
                        object.algo = message.algo;
                    if (message.digestBytes != null && message.hasOwnProperty("digestBytes"))
                        object.digestBytes = options.bytes === String ? $util.base64.encode(message.digestBytes, 0, message.digestBytes.length) : options.bytes === Array ? Array.prototype.slice.call(message.digestBytes) : message.digestBytes;
                    return object;
                };
    
                /**
                 * Converts this Digest to JSON.
                 * @function toJSON
                 * @memberof grafeas.v1.Digest
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                Digest.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for Digest
                 * @function getTypeUrl
                 * @memberof grafeas.v1.Digest
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                Digest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/grafeas.v1.Digest";
                };
    
                return Digest;
            })();
    
            return v1;
        })();
    
        return grafeas;
    })();

    return $root;
});
